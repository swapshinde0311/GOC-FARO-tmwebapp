{"version":3,"file":"static/js/7465.7e6e5193.chunk.js","mappings":"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","sources":["Components/UIBase/Details/CustomerInventoryDetails.jsx","Components/Composite/Details/CustomerInventoryDetailsComposite.jsx","JS/functionalUtilities.js"],"sourcesContent":["import React from \"react\";\r\nimport { DatePicker, Button } from \"@scuf/common\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nCustomerInventoryDetails.propTypes = {\r\n    customerCode: PropTypes.string.isRequired,\r\n    baseproductCode: PropTypes.string.isRequired,\r\n    inventorySummaryInfo : PropTypes.object.isRequired,\r\n    dateRange: PropTypes.object.isRequired,\r\n    handleDateTextChange: PropTypes.func.isRequired,\r\n    handleRangeSelect: PropTypes.func.isRequired,\r\n    dateError: PropTypes.string.isRequired,\r\n    closedReceipt: PropTypes.array.isRequired,\r\n    closedDispatch: PropTypes.array.isRequired,\r\n    activeDispatch: PropTypes.array.isRequired,\r\n    handleLoadInventory: PropTypes.func.isRequired,\r\n    pageSize: PropTypes.number,\r\n    totalUnloadedQty: PropTypes.number,\r\n    totalLoadedQty: PropTypes.number,\r\n     totalBlockedQty: PropTypes.number,\r\n}\r\n\r\nCustomerInventoryDetails.defaultProps = {\r\n};\r\n\r\nexport function CustomerInventoryDetails({\r\n    customerCode,\r\n    baseproductCode,\r\n    inventorySummaryInfo,\r\n    dateRange,\r\n    handleDateTextChange,\r\n    handleRangeSelect,\r\n    dateError,\r\n    closedReceipt,\r\n    closedDispatch,\r\n    activeDispatch,\r\n    handleLoadInventory,\r\n    pageSize,\r\n    totalUnloadedQty,\r\n    totalLoadedQty,\r\n    totalBlockedQty\r\n}) {\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div>\r\n                <div className=\"headerContainer\">\r\n                    <div className=\"row headerSpacing\">\r\n                        <div className=\"col paddingHeaderItemLeft\">\r\n                            <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {t(\"CustomerInventory_Title\").replace(\"{0}\",customerCode).replace(\"{1}\",baseproductCode)}\r\n              </span>\r\n                        </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"detailsContainer\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-12 col-lg-12\">\r\n                                <h5>{t(\"CustomerInventory_QtyAsOfNow\") + \": \"+inventorySummaryInfo.GrossAvailableQty +\"\"+inventorySummaryInfo.QuantityUOM}</h5>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\" style={{marginLeft:\"1px\"}}>\r\n                            <div className=\"dateRangeContainer\">\r\n                            <div className=\"dateRangeMargin\">\r\n            <DatePicker\r\n              type=\"daterange\"\r\n              closeOnSelection={true}\r\n              error={t(dateError)}\r\n              displayFormat={getCurrentDateFormat()}\r\n              rangeValue={dateRange}\r\n              onTextChange={handleDateTextChange}\r\n              onRangeSelect={handleRangeSelect}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"dateSearch\">\r\n                                <Button content={t(\"ProductAllocation_Go\")}  onClick={handleLoadInventory} />\r\n                               \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row customerInventoryGridRow\">\r\n                            <div className=\"col-12 col-md-12 col-lg-4\">\r\n                                {closedReceipt.length > 0 ?\r\n                                    <h5>{t(\"CustomerInventory_ClosedReceipts\") + \" (\" + t(\"CustomerInventory_TotalUnloadedQty\") +\" : \"+ totalUnloadedQty + inventorySummaryInfo.QuantityUOM + \")\"}</h5> :\r\n                                    <h5>{t(\"CustomerInventory_ClosedReceipts\")}</h5>\r\n                                }\r\n                                     <div className=\"tableScroll  flexRelative\">\r\n                                    <DataTable\r\n                                        data={closedReceipt}\r\n                                     search={false}>\r\n                                        <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"ReceiptCode\"\r\n                                field=\"ReceiptCode\"\r\n                                header={t(\"Report_ReceiptCode\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                        <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"UnloadedTime\"\r\n                                field=\"UnloadedTime\"\r\n                                header={t(\"UnloadedDate\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                        <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"PlannedQuantity\"\r\n                                field=\"PlannedQuantity\"\r\n                                header={t(\"ViewReceipt_Quantity\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                        <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"UnloadedQuantity\"\r\n                                field=\"UnloadedQuantity\"\r\n                                header={t(\"UnLoadingInfo_UnloadQuantity\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                         {Array.isArray(closedReceipt) &&\r\n                                    closedReceipt.length > pageSize ? (\r\n                      <DataTable.Pagination />) : (\"\")}\r\n                                    </DataTable>\r\n                                    </div>\r\n                               \r\n                            </div>\r\n                            <div className=\"col-12 col-md-12 col-lg-4\">\r\n                                 {closedDispatch.length > 0 ?\r\n                                    <h5>{t(\"CustomerInventory_ClosedDispatches\") + \" (\" + t(\"CustomerInventory_TotalLoadedQty\") +\" : \"+ totalLoadedQty + inventorySummaryInfo.QuantityUOM + \")\"}</h5> :\r\n                                     <h5>{t(\"CustomerInventory_ClosedDispatches\")}</h5>\r\n                                }\r\n                                <div className=\"tableScroll  flexRelative\">\r\n                                    <DataTable\r\n                                    data={closedDispatch}\r\n                                        search={false}>\r\n                                             <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"DispatchCode\"\r\n                                field=\"DispatchCode\"\r\n                                header={t(\"PipelineDispatch_DispatchCode\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                        <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"LoadedTime\"\r\n                                field=\"LoadedTime\"\r\n                                header={t(\"ShipmentByCompartmentList_LoadedDate\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                        <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"PlannedQuantity\"\r\n                                field=\"PlannedQuantity\"\r\n                                header={t(\"ViewReceipt_Quantity\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                        <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"LoadedQuantity\"\r\n                                field=\"LoadedQuantity\"\r\n                                header={t(\"ShipmentOrder_LoadedQuantity\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                         {Array.isArray(closedDispatch) &&\r\n                                    closedDispatch.length > pageSize ? (\r\n                      <DataTable.Pagination />) : (\"\")}\r\n                                    </DataTable>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"col-12 col-md-12 col-lg-4\">\r\n                                {activeDispatch.length > 0 ?\r\n                                    <h5>{t(\"CustomerInventory_ActiveDispatches\") + \" (\" + t(\"CustomerInventory_TotalBlockedQty\") +\" : \"+ totalBlockedQty + inventorySummaryInfo.QuantityUOM + \")\"}</h5> :\r\n                                      <h5>{t(\"CustomerInventory_ActiveDispatches\")}</h5>\r\n                                }\r\n                                <div className=\"tableScroll flexRelative\">\r\n                                    <DataTable\r\n                                    data={activeDispatch}\r\n                                        search={false}>\r\n                                         <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"DispatchCode\"\r\n                                field=\"DispatchCode\"\r\n                                header={t(\"PipelineDispatch_DispatchCode\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                         <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"ScheduledDate\"\r\n                                field=\"ScheduledDate\"\r\n                                header={t(\"ShipmentProdDetail_ScheduledDate\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                         <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"PlannedQuantity\"\r\n                                field=\"PlannedQuantity\"\r\n                                header={t(\"ProductAllocationItemInfo_BlockedQty\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                             {Array.isArray(activeDispatch) &&\r\n                                    activeDispatch.length > pageSize ? (\r\n                      <DataTable.Pagination />) : (\"\")}\r\n                                    </DataTable>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row\" style={{ marginLeft: \"1px\" }}>\r\n                            <div className=\"dateRangeContainer\">\r\n                                {t(\"CustomerInventory_LegendContent\")}\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { CustomerInventoryDetails } from \"../../UIBase/Details/CustomerInventoryDetails\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TRANTYPE_CUSTOMERTRANSFER } from \"../../../JS/Constants\";\r\n\r\n\r\nclass CustomerInventoryDetailsComposite extends Component {\r\n    state = {\r\n         isReadyToRender: false,\r\n         inventorySummaryInfo:{},\r\n         fromDate: new Date(),\r\n         toDate: new Date(),\r\n         dateError: \"\",\r\n         closedReceipt: [],\r\n         closedDispatch: [],\r\n         activeDispatch:[],\r\n        totalUnloadedQty: \"\",\r\n        totalLoadedQty: \"\",\r\n        totalBlockedQty: \"\",\r\n    };\r\n    \r\n  componentDidMount() {\r\n      try {\r\n          this.getCustomerInventoryDetails();\r\n    } catch (error) {\r\n      console.log(\"CustomerInventoryDetailsComposite:Error occured on componentDidMount\",error);\r\n    }\r\n    }\r\n    \r\n    getCustomerInventoryDetails() {\r\n      try {\r\n let fromDate = new Date(this.state.fromDate);\r\n      let toDate = new Date(this.state.toDate);\r\n      fromDate.setHours(0, 0, 0);\r\n      toDate.setHours(23, 59, 59);\r\nlet obj = {\r\n        StartRange: fromDate,\r\n        EndRange: toDate,\r\n        BaseProductCode: this.props.baseproductCode,\r\n        CustomerCode: this.props.customerCode,\r\n        ShareholderCode: this.props.selectedShareholder,\r\n      };\r\n    axios(\r\n      RestAPIs.GetCustomerInventoryDetails,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n           var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n              let summaryInfo = {};\r\n              let closedReceipt = [];\r\n              let closedDispatch = [];\r\n              let activeDispatch = [];\r\n              let totalUnloadedQty = 0;\r\n              let totalLoadedQty = 0;\r\n              let totalBlockedQty = 0;\r\n              if (Array.isArray(result.EntityResult.Table)) {\r\n                  summaryInfo = result.EntityResult.Table[0];\r\n              }\r\n               if (Array.isArray(result.EntityResult.Table1)) {\r\n                   result.EntityResult.Table1.map(function (item) {\r\n                        totalUnloadedQty += parseFloat(item.UnloadedQuantity);\r\n                       item.UnloadedTime = new Date(item.UnloadedTime).toLocaleDateString();\r\n                       item.PlannedQuantity = item.PlannedQuantity  + \" \" + item.QuantityUOM;\r\n                       item.UnloadedQuantity = item.UnloadedQuantity + \" \" + item.QuantityUOM;\r\n                       if (item.TransportationType === TRANTYPE_CUSTOMERTRANSFER)\r\n                           item.ReceiptCode = item.ReceiptCode + \" *\";\r\n                   })\r\n                  closedReceipt = result.EntityResult.Table1;\r\n              }\r\n              if (Array.isArray(result.EntityResult.Table2)) {\r\n                  result.EntityResult.Table2.map(function (item) {\r\n                       totalLoadedQty += parseFloat(item.LoadedQuantity);\r\n                       item.LoadedTime = new Date(item.LoadedTime).toLocaleDateString();\r\n                       item.PlannedQuantity = item.PlannedQuantity + \" \" + item.QuantityUOM;\r\n                       item.LoadedQuantity = item.LoadedQuantity + \" \" + item.QuantityUOM;\r\n                       if (item.TransportationType === TRANTYPE_CUSTOMERTRANSFER)\r\n                           item.DispatchCode = item.DispatchCode + \" *\";\r\n                   })\r\n                  closedDispatch = result.EntityResult.Table2;\r\n              }\r\n              if (Array.isArray(result.EntityResult.Table3)) {\r\n                  result.EntityResult.Table3.map(function (item) {\r\n                       totalBlockedQty += parseFloat(item.PlannedQuantity);\r\n                       item.ScheduledDate = new Date(item.ScheduledDate).toLocaleDateString();\r\n                       item.PlannedQuantity = item.PlannedQuantity + \" \" + item.QuantityUOM;\r\n                   })\r\n                  activeDispatch = result.EntityResult.Table3;\r\n              }\r\n               this.setState({ isReadyToRender: true,inventorySummaryInfo:summaryInfo,closedReceipt:closedReceipt,\r\n                   closedDispatch: closedDispatch, activeDispatch: activeDispatch, totalUnloadedQty: totalUnloadedQty,\r\n               totalLoadedQty:totalLoadedQty, totalBlockedQty:totalBlockedQty});\r\n        } else {\r\n           this.setState({ isReadyToRender: true,inventorySummaryInfo:[],closedReceipt:[],closedDispatch:[],activeDispatch:[] });\r\n          console.log(\"Error in getCustomerInventoryDetails:\", result.ErrorList);\r\n        }\r\n      }).catch((error) => {\r\n        this.setState({ isReadyToRender: true,inventorySummaryInfo:[],closedReceipt:[],closedDispatch:[],activeDispatch:[] });\r\n        console.log(\"Error while getCustomerInventoryDetails:\", error);\r\n      });\r\n       } catch (error) {\r\n        console.log(\"CustomerInventoryDetailsComposite:Error occured on getCustomerInventoryDetails\",error);\r\n      }\r\n    }\r\n\r\n     handleRangeSelect = ({ to, from }) => {\r\n    if (to !== undefined) this.setState({ toDate: to });\r\n    if (from !== undefined) this.setState({ fromDate: from });\r\n    };\r\n    \r\n     handleDateTextChange = (value, error) => {\r\n    if (value === \"\")\r\n      this.setState({ dateError: \"\", toDate: \"\", fromDate: \"\" });\r\n    if (error !== null && error !== \"\")\r\n      this.setState({\r\n        dateError: \"Common_InvalidDate\",\r\n        toDate: \"\",\r\n        fromDate: \"\",\r\n      });\r\n    else {\r\n      this.setState({ dateError: \"\", toDate: value.to, fromDate: value.from });\r\n    }\r\n  };\r\n\r\n    handleLoadInventory = () => {\r\n        let error = Utilities.validateDateRange(\r\n      this.state.toDate,\r\n      this.state.fromDate\r\n        );\r\n        if (error !== \"\") {\r\n      this.setState({ dateError: error });\r\n    } else {\r\n      this.setState({ dateError: \"\",isReadyToRender: false });\r\n      this.getCustomerInventoryDetails();\r\n    }\r\n  }\r\n\r\n    render() {\r\n        return this.state.isReadyToRender ? (\r\n            <div>\r\n                <ErrorBoundary>\r\n                    <CustomerInventoryDetails\r\n                        customerCode={this.props.customerCode}\r\n                        baseproductCode = {this.props.baseproductCode}\r\n                        inventorySummaryInfo={this.state.inventorySummaryInfo}\r\n                        dateRange = {{\r\n                                from: this.state.fromDate,\r\n                                to: this.state.toDate,\r\n                        }}\r\n                        dateError={this.state.dateError}\r\n                        handleDateTextChange={this.handleDateTextChange}\r\n                        handleRangeSelect={this.handleRangeSelect}\r\n                        closedReceipt={this.state.closedReceipt}\r\n                        closedDispatch={this.state.closedDispatch}\r\n                        activeDispatch={this.state.activeDispatch}\r\n                        handleLoadInventory={this.handleLoadInventory}\r\n                        pageSize={this.props.userDetails.EntityResult.PageAttibutes.WebPortalListPageSize}\r\n                        totalUnloadedQty={this.state.totalUnloadedQty}\r\n                        totalLoadedQty={this.state.totalLoadedQty}\r\n                        totalBlockedQty = {this.state.totalBlockedQty}\r\n                    >\r\n                    </CustomerInventoryDetails>\r\n                    <div className=\"row\">\r\n              <div className=\"col col-lg-8\" style={{ marginTop: \"1%\" }}>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <Button\r\n                      className=\"backButton\"\r\n                      onClick={this.props.onBack}\r\n                      content={t(\"Back\")}\r\n                    ></Button>\r\n                  )}\r\n                </TranslationConsumer>\r\n              </div>\r\n            </div>\r\n                </ErrorBoundary>\r\n            </div>\r\n        ): (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CustomerInventoryDetailsComposite);\r\n\r\nCustomerInventoryDetailsComposite.propTypes = {\r\n  noOfSignificantDigits :  PropTypes.number.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n};","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["CustomerInventoryDetails","_ref","customerCode","baseproductCode","inventorySummaryInfo","dateRange","handleDateTextChange","handleRangeSelect","dateError","closedReceipt","closedDispatch","activeDispatch","handleLoadInventory","pageSize","totalUnloadedQty","totalLoadedQty","totalBlockedQty","_jsx","TranslationConsumer","children","t","_jsxs","className","style","margin","replace","GrossAvailableQty","QuantityUOM","marginLeft","DatePicker","type","closeOnSelection","error","displayFormat","getCurrentDateFormat","rangeValue","onTextChange","onRangeSelect","reserveSpace","Button","content","onClick","length","DataTable","data","search","Column","field","header","editFieldType","Array","isArray","Pagination","defaultProps","CustomerInventoryDetailsComposite","Component","constructor","arguments","state","isReadyToRender","fromDate","Date","toDate","to","from","undefined","this","setState","value","Utilities","getCustomerInventoryDetails","componentDidMount","console","log","setHours","obj","StartRange","EndRange","BaseProductCode","props","CustomerCode","ShareholderCode","selectedShareholder","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","summaryInfo","EntityResult","Table","Table1","map","item","parseFloat","UnloadedQuantity","UnloadedTime","toLocaleDateString","PlannedQuantity","TransportationType","TRANTYPE_CUSTOMERTRANSFER","ReceiptCode","Table2","LoadedQuantity","LoadedTime","DispatchCode","Table3","ScheduledDate","ErrorList","catch","render","ErrorBoundary","userDetails","PageAttibutes","WebPortalListPageSize","marginTop","onBack","LoadingPage","message","connect","getUserDetails","TokenAuth","getOptionsWithSelect","ddlOptions","selectOptionText","filter","option","text","unshift","language","window","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}