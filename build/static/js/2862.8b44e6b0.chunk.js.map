{"version":3,"file":"static/js/2862.8b44e6b0.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/Composite/Summary/MasterDeviceConfigurationSummaryComposite.jsx","Components/Composite/Entity/MasterDeviceConfigurationComposite.jsx","JS/FunctionGroups.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Checkbox, Select, Button } from \"@scuf/common\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\n\r\nMasterDeviceConfigurationSummaryComposite.propTypes = {\r\n    locationDeviceData: PropTypes.array.isRequired,\r\n    deviceModelData: PropTypes.object.isRequired,\r\n    onLocationDeviceRowClick: PropTypes.func.isRequired,\r\n    onDeviceModelRowClick: PropTypes.func.isRequired,\r\n    onSaveClick: PropTypes.func.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    transportationTypeOptions: PropTypes.array.isRequired,\r\n    selectedTransportationType: PropTypes.string.isRequired,\r\n    handleTransportationChange: PropTypes.func.isRequired,\r\n    saveEnabled: PropTypes.bool.isRequired\r\n};\r\n\r\nexport function MasterDeviceConfigurationSummaryComposite({\r\n    locationDeviceData,\r\n    deviceModelData,\r\n    onSaveClick,\r\n    transportationTypeOptions,\r\n    selectedTransportationType,\r\n    onFieldChange,\r\n    saveEnabled\r\n}) {\r\n    const [t] = useTranslation();\r\n\r\n    const formCheckBox = (cellData) => {\r\n        let data = cellData.rowData\r\n        return (\r\n            <div\r\n            >\r\n                <div\r\n                    style={{ width: \"15%\", float: \"left\", paddingTop: \"4px\", height: \"0px\" }}>\r\n                    <Checkbox\r\n                        checked={data.isActive}\r\n                        onChange={(check) => onFieldChange(check, data, \"LocationType\")}\r\n                        disabled={data.locationCode === \"Bay\" || data.locationCode === \"MarineBay\" ||\r\n                            data.locationCode === \"Pipeline\" || data.locationCode === \"Cluster\" ||\r\n                            data.locationCode === \"Island\"}\r\n                    />\r\n                </div>\r\n                <div\r\n                    style={{ width: \"85%\", float: \"right\" }}>\r\n                    <span className=\"input-label-message\">\r\n                        {t(data.locationCode)}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const formDeviceType = (cellData) => {\r\n        let data = cellData.rowData\r\n        return (\r\n            Object.keys(data.deviceDetails).map((key => (\r\n                <div\r\n                    className=\"masterDeviceConfigDevices\"\r\n                >\r\n                    <div\r\n                        style={{ width: \"15%\", float: \"left\", paddingTop: \"4px\", height: \"0px\" }}\r\n                    >\r\n                        <Checkbox\r\n                            checked={data.deviceDetails[key]}\r\n                            disabled={!data.isActive || key === \"BCU\" || key === \"PIPELINE\"}\r\n                            onChange={(check) => onFieldChange(check, data, key)}\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        style={{ width: \"85%\", float: \"right\" }}>\r\n                        <span className=\"input-label-message\">\r\n                            {t(key)}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )))\r\n        )\r\n    }\r\n\r\n    const formDeviceModels = (cellData) => {\r\n        let data = cellData.rowData\r\n        let disable = true;\r\n\r\n        locationDeviceData.forEach((item) => {\r\n            if (item.deviceDetails[data.type])\r\n                disable = false\r\n        })\r\n\r\n        data.disableAllModels = disable\r\n\r\n        data.gridType = \"Models\"\r\n        return (\r\n            data.models.map((item => (\r\n                <div\r\n                    className=\"masterDeviceConfigDevices\"\r\n                >\r\n                    <div\r\n                        style={{ width: \"15%\", float: \"left\", paddingTop: \"4px\", height: \"0px\" }}\r\n                    >\r\n                        <Checkbox\r\n                            checked={selectedTransportationType === Constants.TransportationType.PIPELINE ? true : item.Value}\r\n                            disabled={selectedTransportationType === Constants.TransportationType.PIPELINE ? true : data.disableAllModels}\r\n                            onChange={(check) => onFieldChange(check, data, item.Key)}\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        style={{ width: \"85%\", float: \"right\" }}\r\n                    >\r\n                        <span className=\"input-label-message\">\r\n                            {t(item.Key)}\r\n                        </span>\r\n                    </div>\r\n                </div >\r\n            )))\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"detailsContainer\">\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <label style={{ width: \"9rem\", float: \"left\", paddingTop: \"5px\" }}>{t(\"ProductAllocation_TransportationType\")}</label>\r\n                        <Select\r\n                            className=\"masterDeviceTransportType\"\r\n                            fluid\r\n                            placeholder={t(\"Common_Select\")}\r\n                            // label={t(\"ProductAllocation_TransportationType\")}\r\n                            value={selectedTransportationType}\r\n                            options={transportationTypeOptions}\r\n                            onChange={(data) => onFieldChange(data, \"TransportationType\")}\r\n                            reserveSpace={false}\r\n                            noResultsMessage={t(\"noResultsMessage\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row marginRightZero tableScroll\">\r\n                    <div className=\"col-12 detailsTable\">\r\n                        <DataTable\r\n                            data={locationDeviceData}\r\n                        >\r\n                            <DataTable.Column\r\n                                className=\"compColHeight colminWidth fixedWidth\"\r\n                                key=\"locationCode\"\r\n                                field=\"locationCode\"\r\n                                // initialWidth=\"18rem\"\r\n                                header={t(\"LocationInfo_LocationType\")}\r\n                                renderer={(cellData) => formCheckBox(cellData)}\r\n                            ></DataTable.Column>\r\n                            <DataTable.Column\r\n                                className=\"compColHeight colminWidth\"\r\n                                key=\"deviceDetails\"\r\n                                field=\"deviceDetails\"\r\n                                header={t(\"LocationInfo_DeviceType\")}\r\n                                renderer={(cellData) => formDeviceType(cellData)}\r\n                            ></DataTable.Column>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row marginRightZero tableScroll\">\r\n                    <div className=\"col-12 detailsTable\">\r\n                        <DataTable\r\n                            data={deviceModelData}\r\n                        >\r\n                            <DataTable.Column\r\n                                className=\"compColHeight colminWidth fixedWidth\"\r\n                                key=\"type\"\r\n                                field=\"type\"\r\n                                header={t(\"LocationInfo_DeviceType\")}\r\n                            // renderer={(cellData) => formSecondTableDeviceType(cellData)}\r\n                            ></DataTable.Column>\r\n                            <DataTable.Column\r\n                                className=\"compColHeight colminWidth\"\r\n                                key=\"models\"\r\n                                field=\"models\"\r\n                                header={t(\"MasterConfig_Models\")}\r\n                                renderer={(cellData) => formDeviceModels(cellData)}\r\n                            ></DataTable.Column>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row userActionPosition\">\r\n\r\n                <div className=\"col-12 col-md-12 col-lg-12\">\r\n                    <div style={{ float: \"right\" }}>\r\n                        <Button\r\n                            content={t(\"MasterConfig_Save\")}\r\n                            disabled={!saveEnabled}\r\n                            onClick={onSaveClick}\r\n                        ></Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { MasterDeviceConfigurationSummaryComposite } from \"../Summary/MasterDeviceConfigurationSummaryComposite\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport lodash from \"lodash\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../CSS/styles.css\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { functionGroups, fnMasterDeviceConfiguration } from \"../../../JS/FunctionGroups\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass MasterDeviceConfigurationComposite extends Component {\r\n  state = {\r\n    locationDeviceData: [],\r\n    deviceModelData: [],\r\n    transportationTypeOptions: [],\r\n    selectedTransportationType: Constants.TransportationType.ROAD,\r\n    allLocationDeviceData: {},\r\n    saveEnabled: false,\r\n    showAuthenticationLayout: false,\r\n  }\r\n  componentDidMount() {\r\n    this.getTransportationTypeOptions();\r\n    this.getLocationTypesandDeviceList(this.state.selectedTransportationType);\r\n    // this.getDeviceTypesandModels(this.state.selectedTransportationType);\r\n  }\r\n\r\n  getTransportationTypeOptions() {\r\n    const transportationTypeList = [];\r\n    for (let key in Constants.TransportationType) {\r\n      transportationTypeList.push(key);\r\n    }\r\n    this.setState({\r\n      transportationTypeOptions: Utilities.transferListtoOptions(\r\n        transportationTypeList\r\n      ),\r\n    });\r\n  }\r\n\r\n  getLocationTypesandDeviceList(transportationType) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetLocationTypesandDeviceList,\r\n        Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n      )\r\n        .then((response) => {\r\n\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n\r\n            Object.keys(result.EntityResult).forEach((transType) => {\r\n              result.EntityResult[transType] = Utilities.addSeqNumberToListObject(\r\n                result.EntityResult[transType])\r\n            })\r\n\r\n            let locationDeviceData = result.EntityResult[transportationType]\r\n\r\n            this.setState({\r\n              locationDeviceData: locationDeviceData,\r\n              allLocationDeviceData: result.EntityResult,\r\n              isReadyToRender: true\r\n            }, () => this.getDeviceTypesandModels(transportationType)\r\n            );\r\n          } else {\r\n            this.setState({ locationDeviceData: [], isReadyToRender: true });\r\n            console.log(\"Error in getLocationTypesandDeviceList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ locationDeviceData: [], isReadyToRender: true });\r\n          console.log(\"Error while getting location and device List:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while getting location and respective List:\", error);\r\n    }\r\n  }\r\n\r\n  getDeviceTypesandModels(transportationType) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetDeviceTypesandModels + \"?transportationType=\" + transportationType,\r\n        Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n      )\r\n        .then((response) => {\r\n\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let deviceModelData = [];\r\n            Object.keys(result.EntityResult).map((key) => (\r\n              deviceModelData.push({ type: key, models: result.EntityResult[key], disableAllModels: false })\r\n            ));\r\n\r\n            deviceModelData = Utilities.addSeqNumberToListObject(\r\n              deviceModelData\r\n            )\r\n\r\n            this.setState({\r\n              deviceModelData: deviceModelData,\r\n              isReadyToRender: true,\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnMasterDeviceConfiguration\r\n              )\r\n            });\r\n          } else {\r\n            this.setState({ deviceModelData: [], isReadyToRender: true });\r\n            console.log(\"Error in getDeviceTypesandModels:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ deviceModelData: [], isReadyToRender: true });\r\n          console.log(\"Error while getting Device Types and Models List:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Device types and Models:\", error);\r\n    }\r\n  }\r\n  handleSave = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let deviceModelData = lodash.cloneDeep(this.state.deviceModelData);\r\n      let index = deviceModelData.findIndex((item) => { return item.type === \"BCU\" })\r\n      if (index >= 0) {\r\n        let checkedList = deviceModelData[index].models.filter((model) => {\r\n          return model.Value === true\r\n        })\r\n        if (checkedList !== undefined && checkedList !== null && checkedList.length === 0) {\r\n          let notification = {\r\n            messageType: \"critical\",\r\n            message: \"MasterDeviceConfig_SavedStatus\",\r\n            messageResultDetails: [\r\n              {\r\n                keyFields: [],\r\n                keyValues: [],\r\n                isSuccess: false,\r\n                errorMessage: \"MasterDeviceConfig_Models\",\r\n              }\r\n            ],\r\n          };\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose:\r\n                notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n          this.setState({ saveEnabled: true })\r\n        }\r\n        else {\r\n          let tempModelList = {}\r\n          deviceModelData.forEach((item) => {\r\n            tempModelList[item.type] = item.models\r\n          })\r\n          this.UpdateDeviceConfiguration(this.state.locationDeviceData, tempModelList)\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in handle save:\", error);\r\n    }\r\n  }\r\n\r\n  saveDeviceConfig = () => {\r\n      let showAuthenticationLayout =\r\n     \r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n      this.setState({ showAuthenticationLayout, }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.handleSave();\r\n        }\r\n    });\r\n    \r\n  };\r\n\r\n  UpdateDeviceConfiguration(locationConfig, deviceTypeConfig) {\r\n    let config =\r\n    {\r\n      transportationType: this.state.selectedTransportationType,\r\n      locationDeviceTypesDetails: locationConfig,\r\n      deviceModelsDetails: deviceTypeConfig\r\n    }\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: \"\",\r\n      KeyCodes: [],\r\n      Entity: config,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"MasterDeviceConfig_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [],\r\n          keyValues: [],\r\n          isSuccess: false,\r\n          errorMessage: \"MasterDeviceConfig_Models\",\r\n        }\r\n      ],\r\n    };\r\n    try {\r\n      axios(\r\n        RestAPIs.SaveDeviceConfig,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          if (result.IsSuccess === true) {\r\n            this.setState(\r\n              {\r\n                saveEnabled: Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnMasterDeviceConfiguration\r\n                ),\r\n                showAuthenticationLayout: false,\r\n              },\r\n              () => this.getLocationTypesandDeviceList(this.state.selectedTransportationType)\r\n            );\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            this.setState({\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.add,\r\n                fnMasterDeviceConfiguration\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            });\r\n            console.log(\"Error in UpdateDeviceConfig:\", result.ErrorList);\r\n          }\r\n\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnMasterDeviceConfiguration\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        });\r\n    }\r\n    catch (error) {\r\n      console.log(\"Error while updating device configuration:\", error)\r\n    }\r\n  }\r\n\r\n  handleChange = (data, property, type = \"\") => {\r\n    try {\r\n      if (property === \"TransportationType\") {\r\n        let allLocationDeviceData = lodash.cloneDeep(this.state.allLocationDeviceData)\r\n        let locationDeviceData = this.state.locationDeviceData;\r\n        locationDeviceData = allLocationDeviceData[data]\r\n\r\n        this.setState({\r\n          selectedTransportationType: data,\r\n          locationDeviceData\r\n        }, () => {\r\n          this.getDeviceTypesandModels(data)\r\n        })\r\n      }\r\n      else if (type === \"LocationType\") {\r\n        let locationDeviceData = this.state.locationDeviceData\r\n        let index = locationDeviceData.findIndex((item) => {\r\n          return item.SeqNumber === property.SeqNumber\r\n        })\r\n        if (index >= 0) {\r\n          locationDeviceData[index].isActive = data;\r\n          if (!data) {\r\n            Object.keys(locationDeviceData[index].deviceDetails)\r\n              .forEach((key) => {\r\n                locationDeviceData[index].deviceDetails[key] = data\r\n              })\r\n          }\r\n        }\r\n        this.setState({ locationDeviceData })\r\n      }\r\n      else if (property.gridType === \"Models\") {\r\n        let deviceModelData = lodash.cloneDeep(this.state.deviceModelData)\r\n        let index = deviceModelData.findIndex((item) => {\r\n          return item.SeqNumber === property.SeqNumber\r\n        })\r\n\r\n        if (index >= 0) {\r\n          let modelIndex = deviceModelData[index].models.findIndex((model) => {\r\n            return model.Key === type\r\n          })\r\n          if (modelIndex >= 0) {\r\n            deviceModelData[index].models[modelIndex].Value = data\r\n          }\r\n        }\r\n        this.setState({ deviceModelData })\r\n      }\r\n      else {\r\n        let locationData = this.state.locationDeviceData\r\n        let deviceData = this.state.deviceModelData\r\n\r\n        let locationTypeIndex = locationData.findIndex((item) => {\r\n          return item.SeqNumber === property.SeqNumber\r\n        })\r\n        if (locationTypeIndex >= 0) {\r\n          locationData[locationTypeIndex].deviceDetails[type] = data;\r\n        }\r\n\r\n        if (!data) {\r\n          let disable = true;\r\n\r\n          locationData.forEach((item) => {\r\n            if (item.deviceDetails[type])\r\n              disable = false\r\n          })\r\n\r\n          if (disable) {\r\n            let modelIndex = deviceData.findIndex((model) => {\r\n              return model.type === type\r\n            })\r\n            if (modelIndex >= 0) {\r\n              deviceData[modelIndex].models.forEach((model) => {\r\n                model.Value = false\r\n              })\r\n            }\r\n          }\r\n        }\r\n        this.setState({ locationDeviceData: locationData, deviceModelData: deviceData })\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(\r\n        \"MasterDeviceConfigurationComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            breadcrumbItem={this.props.activeItem}\r\n            shrVisible={false}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n            deleteVisible={false}\r\n            addVisible={false}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isReadyToRender ? (\r\n          <ErrorBoundary>\r\n            <MasterDeviceConfigurationSummaryComposite\r\n              locationDeviceData={this.state.locationDeviceData}\r\n              deviceModelData={this.state.deviceModelData}\r\n              onSaveClick={this.saveDeviceConfig}\r\n              transportationTypeOptions={this.state.transportationTypeOptions}\r\n              selectedTransportationType={this.state.selectedTransportationType}\r\n              onFieldChange={this.handleChange}\r\n              saveEnabled={this.state.saveEnabled}\r\n            ></MasterDeviceConfigurationSummaryComposite>\r\n          </ErrorBoundary>\r\n        ) : (\r\n          <>\r\n            <LoadingPage message=\"Loading\"></LoadingPage>\r\n          </>\r\n        )}\r\n          {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.modify}\r\n            functionGroup={fnMasterDeviceConfiguration}\r\n            handleOperation={this.handleSave}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MasterDeviceConfigurationComposite);\r\n\r\nMasterDeviceConfigurationComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","MasterDeviceConfigurationSummaryComposite","locationDeviceData","deviceModelData","onSaveClick","transportationTypeOptions","selectedTransportationType","saveEnabled","useTranslation","width","paddingTop","noResultsMessage","DataTable","Column","field","header","renderer","cellData","rowData","height","Checkbox","checked","isActive","check","locationCode","formCheckBox","keys","deviceDetails","formDeviceType","disable","forEach","disableAllModels","gridType","models","Constants","PIPELINE","Value","Key","formDeviceModels","MasterDeviceConfigurationComposite","_this","ROAD","allLocationDeviceData","showAuthenticationLayout","handleSave","index","findIndex","checkedList","filter","model","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","toast","NotifyEvent","notificationMessage","autoClose","tempModelList","UpdateDeviceConfiguration","saveDeviceConfig","IsWebPortalUser","handleChange","property","getDeviceTypesandModels","SeqNumber","modelIndex","locationData","deviceData","locationTypeIndex","handleAuthenticationClose","getTransportationTypeOptions","getLocationTypesandDeviceList","transportationTypeList","push","transportationType","transType","isReadyToRender","FunctionsList","functionGroups","modify","fnMasterDeviceConfiguration","locationConfig","deviceTypeConfig","config","locationDeviceTypesDetails","deviceModelsDetails","obj","ShareHolderCode","PrimaryShareholder","keyDataCode","KeyCodes","Entity","activeItem","LoadingPage","UserName","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","view","remove","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration"],"sourceRoot":""}