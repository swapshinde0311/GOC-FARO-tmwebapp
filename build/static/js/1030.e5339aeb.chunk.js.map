{"version":3,"file":"static/js/1030.e5339aeb.chunk.js","mappings":"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","sources":["Components/Composite/Common/TMDetailsKPILayout.jsx","Components/UIBase/Details/RigidTruckDetails.jsx","Components/Composite/Details/RigidTruckDetailsComposite.jsx","Components/UIBase/Common/AssociatedTerminals.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","Components/UIBase/Details/VehicleBasicFields.jsx","JS/AttributeEntity.js","JS/DateFieldsInEntities.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nexport default function TMDetailsKPILayout({\r\n    KPIList,\r\n    pageName,\r\n    rowHeight,\r\n    widgetHeight,\r\n    isDraggable,\r\n    isResizable,\r\n    kpiDisplayTopBreakpoint\r\n}) {\r\n    const [KPIDisplays, setKPIDisplays] = useState(1);\r\n\r\n    const kpiDiv = React.useRef(null);\r\n\r\n    const hideKpis = () => {\r\n        let currentScrollPos = window.pageYOffset;\r\n        let KPIDisplay = KPIDisplays;\r\n\r\n        // hide kpis based on div position to top of the window \r\n        if (kpiDiv.current && kpiDiv.current.getBoundingClientRect().top < kpiDisplayTopBreakpoint) {\r\n            KPIDisplay = 0;\r\n        }\r\n        // show the kpis once at top of the screen\r\n        else if (currentScrollPos === 0) {\r\n            KPIDisplay = 1\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n        setKPIDisplays(KPIDisplay);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\") {\r\n            window.addEventListener(\"scroll\", hideKpis);\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // remove listener on unmount\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", hideKpis)\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={kpiDiv}>\r\n            {KPIDisplays === 1 ? <TranslationConsumer>\r\n                {(t) => (\r\n                    <div style={{ marginTop: \"6px\" }}>\r\n                        <ErrorBoundary>\r\n                            <KPIDashboardLayout\r\n                                kpiList={KPIList}\r\n                                isDraggable={isDraggable}\r\n                                isResizable={isResizable}\r\n                                rowHeight={rowHeight}\r\n                                widgetHeight={widgetHeight}\r\n                                pageName={pageName}\r\n                            ></KPIDashboardLayout>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n                )}\r\n            </TranslationConsumer> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nTMDetailsKPILayout.propTypes = {\r\n    kpiDisplayTopBreakpoint: PropTypes.number\r\n}\r\n\r\nTMDetailsKPILayout.defaultProps = {\r\n    kpiDisplayTopBreakpoint: 100\r\n}","import React from \"react\";\r\nimport {\r\n  Select,\r\n  Input,\r\n  Icon,\r\n  Accordion,\r\n  DatePicker,\r\n  Checkbox,\r\n} from \"@scuf/common\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport VehicleBasicFields from \"./VehicleBasicFields\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\n\r\nRigidTruckDetails.propTypes = {\r\n  rigidTruck: PropTypes.object.isRequired,\r\n  modRigidTruck: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    carriers: PropTypes.array,\r\n    productType: PropTypes.array,\r\n    loadingType: PropTypes.array,\r\n    unitOfWeight: PropTypes.array,\r\n    unitOfVolume: PropTypes.array,\r\n    unitOfDimension: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    hazardousTankerCategoryOptions: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  selectedCompRow: PropTypes.array.isRequired,\r\n  handleRowSelectionChange: PropTypes.func.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n  handleAddCompartment: PropTypes.func.isRequired,\r\n  handleDeleteCompartment: PropTypes.func.isRequired,\r\n  onActiveStatusChange: PropTypes.func.isRequired,\r\n  onCarrierChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  modVehicleAttributeMetaDataList: PropTypes.array.isRequired,\r\n  vehicleAttributeValidationErrors: PropTypes.array.isRequired,\r\n  onVehicleAttributeDataChange: PropTypes.func.isRequired,\r\n  modVehicleTrailerAttributeMetaDataList: PropTypes.array.isRequired,\r\n  vehicleTrailerAttributeValidationErrors: PropTypes.array.isRequired,\r\n  onVehicleTrailerAttributeDataChange: PropTypes.func.isRequired,\r\n  modTrailerAttributeMetaDataList: PropTypes.array.isRequired,\r\n  trailerAttributeValidationErrors: PropTypes.array.isRequired,\r\n  onTrailerAttributeDataChange: PropTypes.func.isRequired,\r\n  handleCompAttributeCellDataEdit: PropTypes.func.isRequired,\r\n  toggleExpand: PropTypes.func.isRequired,\r\n  expandedRows: PropTypes.array.isRequired,\r\n  compartmentDetailsPageSize: PropTypes.number.isRequired,\r\n  isBonded: PropTypes.bool.isRequired,\r\n  hazardousEnabled: PropTypes.bool,\r\n};\r\n\r\nRigidTruckDetails.defaultProps = {\r\n  listOptions: {\r\n    carriers: [],\r\n    productType: [],\r\n    loadingType: [],\r\n    unitOfWeight: [],\r\n    unitOfVolume: [],\r\n    unitOfDimension: [],\r\n    terminalCodes: [],\r\n    hazardousTankerCategoryOptions: [],\r\n  },\r\n  isEnterpriseNode: false,\r\n  hazardousEnabled: false,\r\n};\r\nexport default function RigidTruckDetails({\r\n  rigidTruck,\r\n  modRigidTruck,\r\n  validationErrors,\r\n  onFieldChange,\r\n  onDateTextChange,\r\n  onAllTerminalsChange,\r\n  onActiveStatusChange,\r\n  onCarrierChange,\r\n  selectedCompRow,\r\n  listOptions,\r\n  handleAddCompartment,\r\n  handleCellDataEdit,\r\n  handleDeleteCompartment,\r\n  handleRowSelectionChange,\r\n  isEnterpriseNode,\r\n  modVehicleAttributeMetaDataList,\r\n  vehicleAttributeValidationErrors,\r\n  onVehicleAttributeDataChange,\r\n  modVehicleTrailerAttributeMetaDataList,\r\n  vehicleTrailerAttributeValidationErrors,\r\n  onVehicleTrailerAttributeDataChange,\r\n  handleCompAttributeCellDataEdit,\r\n  toggleExpand,\r\n  expandedRows,\r\n  compartmentDetailsPageSize,\r\n  modTrailerAttributeMetaDataList,\r\n  trailerAttributeValidationErrors,\r\n  onTrailerAttributeDataChange,\r\n  isBonded,\r\n  hazardousEnabled,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n  const [t] = useTranslation();\r\n  const handleTextEdit = (cellData) => {\r\n    let val =\r\n      modRigidTruck.VehicleTrailers[0].Trailer.Compartments[cellData.rowIndex][\r\n        cellData.field\r\n      ];\r\n    if (cellData.field === \"Capacity\" && val !== null && val !== \"\")\r\n      val = val.toLocaleString();\r\n    return (\r\n      // <TranslationConsumer>\r\n      //   {(t) => (\r\n      <Input\r\n        fluid\r\n        value={val}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n        //error={t(validationErrors.Description)}\r\n        disabled={cellData.field === \"Code\" ? true : false}\r\n      />\r\n      //   )}\r\n      // </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  const handleDropdownEdit = (cellData) => {\r\n    let dropDownOptions = [\r\n      ...listOptions.unitOfVolume,\r\n      ...listOptions.unitOfWeight,\r\n    ];\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        placeholder={t(\"Common_Select\")}\r\n        value={\r\n          modRigidTruck.VehicleTrailers[0].Trailer.Compartments[\r\n            cellData.rowIndex\r\n          ][cellData.field]\r\n        }\r\n        fluid\r\n        options={dropDownOptions}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleAttributeType = (data) => {\r\n    const attribute = data.rowData;\r\n    const handleAttributeDateValue = (dateval) => {\r\n      var chars = dateval.split(\"-\");\r\n      return new Date(chars[0], chars[1] - 1, chars[2]);\r\n    };\r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n      var Dateval = new Date(value);\r\n      value =\r\n        Dateval.getFullYear() +\r\n        \"-\" +\r\n        (\"0\" + (Dateval.getMonth() + 1)).slice(-2) +\r\n        \"-\" +\r\n        (\"0\" + Dateval.getDate()).slice(-2);\r\n      handleCompAttributeCellDataEdit(attribute, value);\r\n    };\r\n    try {\r\n      return attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.STRING.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.INT.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.FLOAT.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.LONG.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.DOUBLE.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n            attribute.AttributeValue === undefined ||\r\n            attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : attribute.AttributeValue.toLocaleString()\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.BOOL.toLowerCase() ? (\r\n        <Checkbox\r\n          checked={\r\n            attribute.AttributeValue.toString().toLowerCase() === \"true\"\r\n              ? true\r\n              : false\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n        ></Checkbox>\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.DATETIME.toLowerCase() ? (\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n            attribute.AttributeValue === undefined ||\r\n            attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : handleAttributeDateValue(attribute.AttributeValue)\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          showYearSelector=\"true\"\r\n          onChange={(value) => {\r\n            convertAttributeDatetoString(data, value);\r\n          }}\r\n          onTextChange={(value) => {\r\n            convertAttributeDatetoString(data, value);\r\n          }}\r\n          reserveSpace={false}\r\n        />\r\n      ) : null;\r\n    } catch (error) {\r\n      console.log(\"TrailerDetails:Error occured on handleAttributeType\", error);\r\n    }\r\n  };\r\n\r\n  const handleIsRequiredCompAttributes = (data) => {\r\n    return data.rowData.IsMandatory ? (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n        <div class=\"ui red circular empty label badge  circle-padding\" />\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const expanderTemplate = (data) => {\r\n    const open =\r\n      expandedRows.findIndex(\r\n        (x) =>\r\n          x.CompartmentSeqNoInTrailer === data.rowData.CompartmentSeqNoInTrailer\r\n      ) >= 0\r\n        ? true\r\n        : false;\r\n    return (\r\n      <div\r\n        onClick={() => toggleExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        <span>{open ? t(\"Hide_Attributes\") : t(\"View_Attributes\")}</span>\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"caret-up\" : \"caret-down\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  function rowExpansionTemplate(data) {\r\n    return Array.isArray(data.AttributesforUI) &&\r\n      data.AttributesforUI.length > 0 ? (\r\n      <div className=\"childTable\">\r\n        <DataTable\r\n          data={data.AttributesforUI}\r\n          row={1}\r\n          rows={compartmentDetailsPageSize}\r\n        >\r\n          {isEnterpriseNode ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"TerminalCode\"\r\n              field=\"TerminalCode\"\r\n              header={t(\"CompartmentTerminal\")}\r\n              editable={false}\r\n            ></DataTable.Column>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"AttributeName\"\r\n            header={t(\"CompartmentAttributeName\")}\r\n            renderer={handleIsRequiredCompAttributes}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            header={t(\"CompartmentAttributeValue\")}\r\n            renderer={handleAttributeType}\r\n          />\r\n          <DataTable.Pagination />\r\n        </DataTable>\r\n      </div>\r\n    ) : (\r\n      <div className=\"compartmentIcon\">\r\n        <div className=\"gridButtonAlignLeft\">\r\n          {t(\"CustomerInventory_NoRecordsFound\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    // <TranslationConsumer>\r\n    //   {(t) => (\r\n    <div className=\"detailsContainer\">\r\n      <div className=\"row\">\r\n        <VehicleBasicFields\r\n          data={rigidTruck}\r\n          modData={modRigidTruck}\r\n          onFieldChange={onFieldChange}\r\n          onDateTextChange={onDateTextChange}\r\n          listOptions={listOptions}\r\n          validationErrors={validationErrors}\r\n          onAllTerminalsChange={onAllTerminalsChange}\r\n          onCarrierChange={onCarrierChange}\r\n          onActiveStatusChange={onActiveStatusChange}\r\n          isEnterpriseNode={isEnterpriseNode}\r\n          attributeValidationErrors={vehicleAttributeValidationErrors}\r\n          modAttributeMetaDataList={modVehicleAttributeMetaDataList}\r\n          onAttributeDataChange={onVehicleAttributeDataChange}\r\n          isBonded={isBonded}\r\n          hazardousEnabled={hazardousEnabled}\r\n        >\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(`Vehicle_LoadingType`)}\r\n              value={modRigidTruck.VehicleTrailers[0].Trailer.LoadingType}\r\n              options={listOptions.loadingType}\r\n              onChange={(data) => {\r\n                onFieldChange(\"LoadingType\", data);\r\n              }}\r\n              indicator=\"required\"\r\n              error={t(validationErrors.LoadingType)}\r\n              reserveSpace={false}\r\n              search={true}\r\n              noResultsMessage={t(\"noResultsMessage\")}\r\n            />\r\n          </div>\r\n        </VehicleBasicFields>\r\n\r\n        {modTrailerAttributeMetaDataList.length > 0 ? (\r\n          <div className=\"col-12 col-md-12 col-lg-12\">\r\n            <Accordion>\r\n              <Accordion.Content\r\n                className=\"attributeAccordian\"\r\n                title={t(\"TRAILER_Attributes\")}\r\n              >\r\n                {modTrailerAttributeMetaDataList.length > 0\r\n                  ? modTrailerAttributeMetaDataList.map((attribute) => (\r\n                      <ErrorBoundary>\r\n                        <div className=\"col-12 col-md-12 col-lg-12\">\r\n                          <Accordion>\r\n                            <Accordion.Content\r\n                              className=\"attributeAccordian\"\r\n                              title={\r\n                                isEnterpriseNode\r\n                                  ? attribute.TerminalCode +\r\n                                    \" - \" +\r\n                                    t(\"Attributes_Header\")\r\n                                  : t(\"Attributes_Header\")\r\n                              }\r\n                            >\r\n                              <AttributeDetails\r\n                                selectedAttributeList={\r\n                                  attribute.attributeMetaDataList\r\n                                }\r\n                                handleCellDataEdit={\r\n                                  onTrailerAttributeDataChange\r\n                                }\r\n                                attributeValidationErrors={handleValidationErrorFilter(\r\n                                  trailerAttributeValidationErrors,\r\n                                  attribute.TerminalCode\r\n                                )}\r\n                              ></AttributeDetails>\r\n                            </Accordion.Content>\r\n                          </Accordion>\r\n                        </div>\r\n                      </ErrorBoundary>\r\n                    ))\r\n                  : null}\r\n              </Accordion.Content>\r\n            </Accordion>\r\n          </div>\r\n        ) : null}\r\n\r\n        {modVehicleTrailerAttributeMetaDataList.length > 0 ? (\r\n          <div className=\"col-12 col-md-12 col-lg-12\">\r\n            <Accordion>\r\n              <Accordion.Content\r\n                className=\"attributeAccordian\"\r\n                title={t(\"VEHICLETRAILER_Attributes\")}\r\n              >\r\n                {modVehicleTrailerAttributeMetaDataList.length > 0\r\n                  ? modVehicleTrailerAttributeMetaDataList.map((attribute) => (\r\n                      <ErrorBoundary>\r\n                        <div className=\"col-12 col-md-12 col-lg-12\">\r\n                          <Accordion>\r\n                            <Accordion.Content\r\n                              className=\"attributeAccordian\"\r\n                              title={\r\n                                isEnterpriseNode\r\n                                  ? attribute.TerminalCode +\r\n                                    \" - \" +\r\n                                    t(\"Attributes_Header\")\r\n                                  : t(\"Attributes_Header\")\r\n                              }\r\n                            >\r\n                              <AttributeDetails\r\n                                selectedAttributeList={\r\n                                  attribute.attributeMetaDataList\r\n                                }\r\n                                handleCellDataEdit={\r\n                                  onVehicleTrailerAttributeDataChange\r\n                                }\r\n                                attributeValidationErrors={handleValidationErrorFilter(\r\n                                  vehicleTrailerAttributeValidationErrors,\r\n                                  attribute.TerminalCode\r\n                                )}\r\n                              ></AttributeDetails>\r\n                            </Accordion.Content>\r\n                          </Accordion>\r\n                        </div>\r\n                      </ErrorBoundary>\r\n                    ))\r\n                  : null}\r\n              </Accordion.Content>\r\n            </Accordion>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n\r\n      <div className=\"row compartmentRow\">\r\n        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n          <h4>{t(\"Trailer_CompartmentInfo\")}</h4>\r\n        </div>\r\n\r\n        <div className=\"col col-md-4 col-lg-3 col-xl-3\">\r\n          <div className=\"compartmentIconContainer\">\r\n            <div onClick={handleAddCompartment} className=\"compartmentIcon\">\r\n              <div>\r\n                <Icon root=\"common\" name=\"badge-plus\" size=\"medium\" />\r\n              </div>\r\n              <div className=\"margin_l10\">\r\n                <h5 className=\"font14\">{t(\"TrailerInfo_Add\")}</h5>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              onClick={handleDeleteCompartment}\r\n              className=\"compartmentIcon margin_l30\"\r\n            >\r\n              <div>\r\n                <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n              </div>\r\n              <div className=\"margin_l10\">\r\n                <h5 className=\"font14\">{t(\"TrailerInfo_Delete\")}</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row marginRightZero tableScroll\">\r\n        <div className=\"col-12 detailsTable havingchildTable\">\r\n          <DataTable\r\n            data={modRigidTruck.VehicleTrailers[0].Trailer.Compartments}\r\n            rowExpansionTemplate={rowExpansionTemplate}\r\n            expandedRows={expandedRows}\r\n            selectionMode=\"multiple\"\r\n            selection={selectedCompRow}\r\n            onSelectionChange={handleRowSelectionChange}\r\n            scrollable={true}\r\n            scrollHeight=\"320px\"\r\n            // onEdit={handleCellDataEdit}\r\n          >\r\n            <DataTable.Column\r\n              className=\"compColHeight disabledColumn colminWidth\"\r\n              key=\"Code\"\r\n              field=\"Code\"\r\n              header={t(\"Trailer_CompCode\")}\r\n              // rowHeader={true}\r\n              editFieldType=\"text\"\r\n            ></DataTable.Column>\r\n\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"Description\"\r\n              field=\"Description\"\r\n              header={t(\"Trailer_Desc\")}\r\n              editable={true}\r\n              // rowHeader={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleTextEdit}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"Capacity\"\r\n              field=\"Capacity\"\r\n              header={t(\"Trailer_CompCapacity\")}\r\n              editable={true}\r\n              // rowHeader={true}\r\n              editFieldType=\"text\"\r\n              renderer={(cellData) =>\r\n                cellData.value === null ? \"\" : cellData.value.toLocaleString()\r\n              }\r\n              customEditRenderer={handleTextEdit}\r\n            ></DataTable.Column>\r\n\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"UOM\"\r\n              field=\"UOM\"\r\n              header={t(\"Trailer_UOM\")}\r\n              editable={true}\r\n              //rowHeader={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleDropdownEdit}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"expandedColumn\"\r\n              initialWidth=\"200px\"\r\n              renderer={expanderTemplate}\r\n            />\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    //   )}\r\n    // </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { rigidTruckValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport {\r\n  functionGroups,\r\n  fnVehicle,\r\n  fnKPIInformation,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport lodash from \"lodash\";\r\nimport RigidTruckDetails from \"../../UIBase/Details/RigidTruckDetails\";\r\nimport { trailerCompartmentValidationDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport { emptyRigidTruck } from \"../../../JS/DefaultEntities\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport {\r\n  vehicleAttributeEntity,\r\n  vehicleTrailerAttributeEntity,\r\n  trailerAttributeEntity,\r\n  trailerCompAttributeEntity,\r\n} from \"../../../JS/AttributeEntity\";\r\nimport * as DateFieldsInEntities from \"../../../JS/DateFieldsInEntities\";\r\nimport { kpiVehicleDetail } from \"../../../JS/KPIPageName\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass RigidTruckDetailsComposite extends Component {\r\n  state = {\r\n    rigidTruck: {},\r\n    modRigidTruck: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      rigidTruckValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    carrierOptions: [],\r\n    terminalOptions: [],\r\n    volumeUOMOptions: [],\r\n    weightUOMOptions: [],\r\n    lengthUOMOptions: [],\r\n    productTypeOptions: [],\r\n    loadingTypeOptions: [],\r\n    saveEnabled: false,\r\n    selectedCompRow: [],\r\n    attributeMetaDataList: [],\r\n    modVehicleAttributeMetaDataList: [],\r\n    modVehicleTrailerAttributeMetaDataList: [],\r\n    modTrailerAttributeMetaDataList: [],\r\n    vehicleAttributeValidationErrors: [],\r\n    vehicleTrailerAttributeValidationErrors: [],\r\n    trailerAttributeValidationErrors: [],\r\n    expandedRows: [],\r\n    isBonded: false,\r\n    vehicleKPIList: [],\r\n    hazardousEnabled: false,\r\n    hazardousTankerCategoryOptions: [],\r\n    maxNumberOfCompartments: 12,\r\n    showAuthenticationLayout: false,\r\n    tempVehicle: {},\r\n  };\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      let isNewTruck = false;\r\n      if (this.props.selectedRow.Common_Code === undefined) isNewTruck = true;\r\n      this.getHazardousLookup();\r\n      this.getAttributes(isNewTruck);\r\n      this.getCarrierList(this.props.selectedShareholder);\r\n      this.getUOMList();\r\n      this.getProductTypes();\r\n      this.getLoadingTypes();\r\n      this.IsBonded();\r\n      \r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  getHazardousLookup() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=HazardousMaterial\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult[\"RoadEnabled\"] &&\r\n            result.EntityResult[\"RoadEnabled\"].toLowerCase() === \"true\"\r\n          ) {\r\n            this.setState({ hazardousEnabled: true });\r\n            this.getHazardousCategories();\r\n          }\r\n        }\r\n      });\r\n       axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=VirtualPreset\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (!isNaN(parseInt(result.EntityResult[\"RoadMaximumNumberOfCompartments\"]))) {\r\n            this.setState({maxNumberOfCompartments:parseInt(result.EntityResult[\"RoadMaximumNumberOfCompartments\"])})\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured on getHazardousLookup\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  getHazardousCategories() {\r\n    axios(\r\n      RestAPIs.GetHazardousTankerCategories,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    ).then((response) => {\r\n      var result = response.data;\r\n      if (result.IsSuccess === true) {\r\n        if (\r\n          result.EntityResult !== null &&\r\n          Array.isArray(result.EntityResult)\r\n        ) {\r\n          let categoryOptions = Utilities.transferListtoOptions(\r\n            result.EntityResult\r\n          );\r\n          this.setState({ hazardousTankerCategoryOptions: categoryOptions });\r\n        }\r\n      } else {\r\n        console.log(\"Error in getHazardousCategories:\", result.ErrorList);\r\n      }\r\n    });\r\n  }\r\n  catch(error) {\r\n    console.log(\r\n      \"RigidTruckDetailsComposite:Error occured on getHazardousCategories\",\r\n      error\r\n    );\r\n  }\r\n  getLoadingTypes() {\r\n    axios(\r\n      RestAPIs.GetLoadingType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let loadingTypeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ loadingTypeOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getLoadingTypes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getLoadingTypes:\", error);\r\n      });\r\n  }\r\n\r\n  IsBonded() {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=Bonding\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let bonded = result.EntityResult[\"EnableBondingNon-Bonding\"];\r\n          this.setState({\r\n            isBonded: bonded.toUpperCase() === \"TRUE\" ? true : false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isBonded: false,\r\n          });\r\n          console.log(\"Error in get IsBonded: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          isBonded: false,\r\n        });\r\n        console.log(\r\n          \"SealMasterDetailsComposite: Error occurred on get IsBonded\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getProductTypes() {\r\n    axios(\r\n      RestAPIs.GetProductType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let productTypeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ productTypeOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getProductTypes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getProductTypes:\", error);\r\n      });\r\n  }\r\n  getUOMList() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        // console.log(response);\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let weightUOMs = result.EntityResult.MASS;\r\n            let weightUOMOptions = [];\r\n            weightUOMs.forEach((weightOption) => {\r\n              weightUOMOptions.push({\r\n                text: weightOption,\r\n                value: weightOption,\r\n              });\r\n            });\r\n\r\n            let volumeUOMs = result.EntityResult.VOLUME;\r\n            let volumeUOMOptions = [];\r\n            volumeUOMs.forEach((volumeOption) => {\r\n              volumeUOMOptions.push({\r\n                text: volumeOption,\r\n                value: volumeOption,\r\n              });\r\n            });\r\n\r\n            let lengthUOMs = result.EntityResult.LENGTH;\r\n            let lengthUOMOptions = [];\r\n            lengthUOMs.forEach((lengthOption) => {\r\n              lengthUOMOptions.push({\r\n                text: lengthOption,\r\n                value: lengthOption,\r\n              });\r\n            });\r\n\r\n            this.setState({\r\n              volumeUOMOptions,\r\n              weightUOMOptions,\r\n              lengthUOMOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getUOM:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getUOM:\", error);\r\n      });\r\n  }\r\n  getCarrierList(shareholder) {\r\n    axios(\r\n      RestAPIs.GetCarrierCodes +\r\n        \"?ShareholderCode=\" +\r\n        shareholder +\r\n        \"&Transportationtype=\" +\r\n        Constants.TransportationType.ROAD,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            // const carrierOptions = [];\r\n            // result.EntityResult.Table.forEach((carrier) => {\r\n            //   carrierOptions.push({\r\n            //     text: carrier.Common_Code,\r\n            //     value: carrier.Common_Name,\r\n            //   });\r\n            // });\r\n            let carrierOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n\r\n            this.setState({ carrierOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error while getting Carrier List:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Carrier List:\", error);\r\n      });\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.rigidTruck.Code !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getRigidTruck(true);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  handleCarrierChange = (carrier) => {\r\n    if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n      this.getTerminalsForCarrier(carrier);\r\n    else {\r\n      const modRigidTruck = lodash.cloneDeep(this.state.modRigidTruck);\r\n      modRigidTruck.CarrierCompanyCode = carrier;\r\n      const terminalOptions = [];\r\n      modRigidTruck.TerminalCodes = [];\r\n      this.setState({ terminalOptions, modRigidTruck });\r\n    }\r\n    if (rigidTruckValidationDef[\"CarrierCompanyCode\"] !== undefined) {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      validationErrors[\"CarrierCompanyCode\"] = Utilities.validateField(\r\n        rigidTruckValidationDef[\"CarrierCompanyCode\"],\r\n        carrier\r\n      );\r\n\r\n      this.setState({ validationErrors });\r\n    }\r\n  };\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modRigidTruck = lodash.cloneDeep(this.state.modRigidTruck);\r\n      modRigidTruck.Active = value;\r\n      if (modRigidTruck.Active !== this.state.rigidTruck.Active)\r\n        modRigidTruck.Remarks = \"\";\r\n      this.setState({ modRigidTruck });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured in handleActiveStatusChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    let modRigidTruck = lodash.cloneDeep(this.state.modRigidTruck);\r\n    try {\r\n      if (propertyName === \"LoadingType\") {\r\n        modRigidTruck.VehicleTrailers[0].Trailer.LoadingType = data;\r\n        this.setState({ modRigidTruck });\r\n      } else {\r\n        modRigidTruck[propertyName] = data;\r\n        // this.setState({ modRigidTruck });\r\n      }\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      if (modRigidTruck.Active === this.state.rigidTruck.Active) {\r\n        if (\r\n          this.state.rigidTruck.Remarks === modRigidTruck.Remarks ||\r\n          modRigidTruck.Remarks === \"\"\r\n        ) {\r\n          if (\r\n            this.state.rigidTruck.IsBonded === modRigidTruck.IsBonded &&\r\n            this.state.isBonded\r\n          )\r\n            validationErrors.Remarks = \"\";\r\n        }\r\n        if (modRigidTruck.Remarks === \"\")\r\n          modRigidTruck.Remarks = this.state.rigidTruck.Remarks;\r\n      }\r\n\r\n      if (propertyName === \"IsBonded\") {\r\n        modRigidTruck.VehicleCustomsBondNo = null;\r\n        modRigidTruck.BondExpiryDate = null;\r\n        validationErrors.VehicleCustomsBondNo = \"\";\r\n        validationErrors.BondExpiryDate = \"\";\r\n      }\r\n      // if (propertyName === \"Active\") {\r\n      //   if (modRigidTruck.Active !== this.state.rigidTruck.Active) {\r\n      //     modRigidTruck.Remarks = \"\";\r\n      //   }\r\n      // }\r\n\r\n      if (\r\n        propertyName === \"RoadTaxNo\" ||\r\n        propertyName === \"RoadTaxNoIssueDate\" ||\r\n        propertyName === \"RoadTaxNoExpiryDate\"\r\n      ) {\r\n        //validationErrors[propertyName] = \"\";\r\n        validationErrors.RoadTaxNo = \"\";\r\n        validationErrors.RoadTaxNoIssueDate = \"\";\r\n        validationErrors.RoadTaxNoExpiryDate = \"\";\r\n      }\r\n      if (\r\n        propertyName === \"Height\" ||\r\n        propertyName === \"Length\" ||\r\n        propertyName === \"Width\" ||\r\n        propertyName === \"LWHUOM\"\r\n      ) {\r\n        validationErrors.LWHUOM = \"\";\r\n      }\r\n\r\n      if (rigidTruckValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          rigidTruckValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n      this.setState({ validationErrors, modRigidTruck }, () => {\r\n        if (propertyName === \"TerminalCodes\") {\r\n          this.terminalSelectionChange(data);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getAttributes(isNewTruck) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [\r\n            vehicleAttributeEntity,\r\n            vehicleTrailerAttributeEntity,\r\n            trailerAttributeEntity,\r\n            trailerCompAttributeEntity,\r\n          ],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              vehicleAttributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.vehicle\r\n                ),\r\n              vehicleTrailerAttributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.vehicletrailer\r\n                ),\r\n              trailerAttributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.TRAILER\r\n                ),\r\n            },\r\n            () => this.getRigidTruck(isNewTruck)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals !== undefined && selectedTerminals !== null) {\r\n        let attributesTerminalsList = [];\r\n        var attributeMetaDataList = [];\r\n        var modVehicleAttributeMetaDataList = [];\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        modVehicleAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.modVehicleAttributeMetaDataList\r\n        );\r\n        const vehicleAttributeValidationErrors = lodash.cloneDeep(\r\n          this.state.vehicleAttributeValidationErrors\r\n        );\r\n        var modRigidTruck = lodash.cloneDeep(this.state.modRigidTruck);\r\n\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = modVehicleAttributeMetaDataList.find(\r\n            (selectedAttribute) => {\r\n              return selectedAttribute.TerminalCode === terminal;\r\n            }\r\n          );\r\n\r\n          if (existitem === undefined) {\r\n            attributeMetaDataList.vehicle.forEach(function (attributeMetaData) {\r\n              if (attributeMetaData.TerminalCode === terminal) {\r\n                var Attributevalue = modRigidTruck.Attributes.find(\r\n                  (baseproductAttribute) => {\r\n                    return baseproductAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n                attributesTerminalsList.push(attributeMetaData);\r\n              }\r\n            });\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n        modVehicleAttributeMetaDataList = [];\r\n        modVehicleAttributeMetaDataList = attributesTerminalsList;\r\n        modVehicleAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n          modVehicleAttributeMetaDataList\r\n        );\r\n        vehicleAttributeValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n              (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n        this.formCompartmentAttributes(selectedTerminals);\r\n        this.setState({\r\n          modVehicleAttributeMetaDataList,\r\n          vehicleAttributeValidationErrors,\r\n        });\r\n        this.setVehicleTrailerAttributes(selectedTerminals);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  setVehicleTrailerAttributes(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modVehicleTrailerAttributeMetaDataList = [];\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modVehicleTrailerAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modVehicleTrailerAttributeMetaDataList\r\n      );\r\n      const vehicleTrailerAttributeValidationErrors = lodash.cloneDeep(\r\n        this.state.vehicleTrailerAttributeValidationErrors\r\n      );\r\n      var modRigidTruck = lodash.cloneDeep(this.state.modRigidTruck);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modVehicleTrailerAttributeMetaDataList.find(\r\n          (selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          }\r\n        );\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.vehicletrailer.forEach(function (\r\n            attributeMetaData\r\n          ) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue =\r\n                modRigidTruck.VehicleTrailers[0].Attributes.find(\r\n                  (baseproductAttribute) => {\r\n                    return baseproductAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modVehicleTrailerAttributeMetaDataList = [];\r\n      modVehicleTrailerAttributeMetaDataList = attributesTerminalsList;\r\n      modVehicleTrailerAttributeMetaDataList =\r\n        Utilities.attributesConvertoDecimal(\r\n          modVehicleTrailerAttributeMetaDataList\r\n        );\r\n      vehicleTrailerAttributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n      this.setState({\r\n        modVehicleTrailerAttributeMetaDataList,\r\n        vehicleTrailerAttributeValidationErrors,\r\n      });\r\n      this.setTrailerAttributes(selectedTerminals);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured on setVehicleTrailerAttributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  setTrailerAttributes(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modTrailerAttributeMetaDataList = [];\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modTrailerAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modTrailerAttributeMetaDataList\r\n      );\r\n      const trailerAttributeValidationErrors = lodash.cloneDeep(\r\n        this.state.trailerAttributeValidationErrors\r\n      );\r\n      var modRigidTruck = lodash.cloneDeep(this.state.modRigidTruck);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modTrailerAttributeMetaDataList.find(\r\n          (selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          }\r\n        );\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.TRAILER.forEach(function (attributeMetaData) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue =\r\n                modRigidTruck.VehicleTrailers[0].Trailer.Attributes.find(\r\n                  (baseproductAttribute) => {\r\n                    return baseproductAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modTrailerAttributeMetaDataList = [];\r\n      modTrailerAttributeMetaDataList = attributesTerminalsList;\r\n      modTrailerAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modTrailerAttributeMetaDataList\r\n      );\r\n      trailerAttributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n      this.setState({\r\n        modTrailerAttributeMetaDataList,\r\n        trailerAttributeValidationErrors,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured on setTrailerAttributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  formCompartmentAttributes(selectedTerminals) {\r\n    try {\r\n      let attributes = lodash.cloneDeep(this.state.attributeMetaDataList);\r\n\r\n      attributes = attributes.TRAILERCOMPARTMENT.filter(function (attTerminal) {\r\n        return selectedTerminals.some(function (selTerminal) {\r\n          return attTerminal.TerminalCode === selTerminal;\r\n        });\r\n      });\r\n      var modRigidTruck = lodash.cloneDeep(this.state.modRigidTruck);\r\n\r\n      let compAttributes = [];\r\n      attributes.forEach((att) => {\r\n        att.attributeMetaDataList.forEach((attribute) => {\r\n          compAttributes.push({\r\n            AttributeCode: attribute.Code,\r\n            AttributeName: attribute.DisplayName,\r\n            AttributeValue: attribute.DefaultValue,\r\n            TerminalCode: attribute.TerminalCode,\r\n            IsMandatory: attribute.IsMandatory,\r\n            DataType: attribute.DataType,\r\n            IsReadonly: attribute.IsReadonly,\r\n            MinValue: attribute.MinValue,\r\n            MaxValue: attribute.MaxValue,\r\n            ValidationFormat: attribute.ValidationFormat,\r\n            compSequenceNo: \"\",\r\n          });\r\n        });\r\n      });\r\n      let attributesforNewComp = lodash.cloneDeep(compAttributes);\r\n      modRigidTruck.VehicleTrailers[0].Trailer.Compartments.forEach((comp) => {\r\n        if (\r\n          comp.Code === null &&\r\n          (comp.AttributesforUI === null || comp.AttributesforUI === undefined)\r\n        ) {\r\n          comp.AttributesforUI = [];\r\n          attributesforNewComp.forEach((assignedAttributes) => {\r\n            assignedAttributes.compSequenceNo = comp.CompartmentSeqNoInTrailer;\r\n            comp.AttributesforUI.push(assignedAttributes);\r\n          });\r\n        } else {\r\n          if (\r\n            comp.AttributesforUI !== null &&\r\n            comp.AttributesforUI !== undefined\r\n          ) {\r\n            comp.AttributesforUI = comp.AttributesforUI.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n\r\n            compAttributes = compAttributes.filter(function (attTerminal) {\r\n              return !comp.AttributesforUI.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal.TerminalCode;\r\n              });\r\n            });\r\n          } else comp.AttributesforUI = [];\r\n\r\n          let tempCompAttributes = lodash.cloneDeep(compAttributes);\r\n          if (\r\n            Array.isArray(comp.Attributes) &&\r\n            comp.Attributes !== null &&\r\n            comp.Attributes !== undefined &&\r\n            comp.Attributes.length > 0\r\n          ) {\r\n            let selectedTerminalAttributes = comp.Attributes.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n            selectedTerminalAttributes.forEach((att) => {\r\n              att.ListOfAttributeData.forEach((attData) => {\r\n                let tempAttIndex = tempCompAttributes.findIndex(\r\n                  (item) =>\r\n                    item.TerminalCode === att.TerminalCode &&\r\n                    item.AttributeCode === attData.AttributeCode\r\n                );\r\n                if (tempAttIndex >= 0)\r\n                  tempCompAttributes[tempAttIndex].AttributeValue =\r\n                    attData.AttributeValue;\r\n              });\r\n            });\r\n            tempCompAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo =\r\n                comp.CompartmentSeqNoInTrailer;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          } else {\r\n            compAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo =\r\n                comp.CompartmentSeqNoInTrailer;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          }\r\n        }\r\n        this.toggleExpand(comp, true, true);\r\n        if (comp.AttributesforUI !== undefined && comp.AttributesforUI != null)\r\n          comp.AttributesforUI = Utilities.compartmentAttributesConvertoDecimal(\r\n            comp.AttributesforUI\r\n          );\r\n        comp.AttributesforUI = Utilities.addSeqNumberToListObject(\r\n          comp.AttributesforUI\r\n        );\r\n      });\r\n      this.setState({ modRigidTruck });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error in forming Compartment Attributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  toggleExpand = (data, open, isTerminalAdded = false) => {\r\n    let expandedRows = this.state.expandedRows;\r\n    let expandedRowIndex = expandedRows.findIndex(\r\n      (item) =>\r\n        item.CompartmentSeqNoInTrailer === data.CompartmentSeqNoInTrailer\r\n    );\r\n    if (open) {\r\n      if (isTerminalAdded && expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n        expandedRows.push(data);\r\n      } else if (expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n      }\r\n    } else {\r\n      if (expandedRowIndex >= 0) {\r\n        expandedRows = expandedRows.filter(\r\n          (x) =>\r\n            x.Code !== data.Code &&\r\n            x.CompartmentSeqNoInTrailer !== data.CompartmentSeqNoInTrailer\r\n        );\r\n      } else expandedRows.push(data);\r\n    }\r\n    this.setState({ expandedRows });\r\n  };\r\n\r\n  handleCompAttributeCellDataEdit = (compAttribute, value) => {\r\n    var modRigidTruck = lodash.cloneDeep(this.state.modRigidTruck);\r\n\r\n    let compIndex =\r\n      modRigidTruck.VehicleTrailers[0].Trailer.Compartments.findIndex(\r\n        (item) =>\r\n          item.CompartmentSeqNoInTrailer ===\r\n          compAttribute.rowData.compSequenceNo\r\n      );\r\n    if (compIndex >= 0)\r\n      modRigidTruck.VehicleTrailers[0].Trailer.Compartments[\r\n        compIndex\r\n      ].AttributesforUI[\r\n        // compAttribute.rowIndex\r\n        compAttribute.rowData.SeqNumber - 1\r\n      ].AttributeValue = value;\r\n    this.setState({ modRigidTruck });\r\n    if (compIndex >= 0)\r\n      this.toggleExpand(\r\n        modRigidTruck.VehicleTrailers[0].Trailer.Compartments[compIndex],\r\n        true,\r\n        true\r\n      );\r\n  };\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList.vehicle) &&\r\n        attributeMetaDataList.vehicle.length > 0\r\n      ) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.vehicle[0].TerminalCode,\r\n        ]);\r\n      } else {\r\n        if (\r\n          Array.isArray(attributeMetaDataList.TRAILERCOMPARTMENT) &&\r\n          attributeMetaDataList.TRAILERCOMPARTMENT.length > 0\r\n        )\r\n          this.formCompartmentAttributes([\r\n            attributeMetaDataList.TRAILERCOMPARTMENT[0].TerminalCode,\r\n          ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getRigidTruck(isNewTruck) {\r\n    if (isNewTruck) {\r\n      let terminalOptions = [];\r\n      emptyRigidTruck.WeightUOM =\r\n        this.props.userDetails.EntityResult.PageAttibutes.DefaultUOMS.MassUOM;\r\n      this.setState(\r\n        {\r\n          rigidTruck: lodash.cloneDeep(emptyRigidTruck),\r\n          modRigidTruck: lodash.cloneDeep(emptyRigidTruck),\r\n          isReadyToRender: true,\r\n          terminalOptions,\r\n          modVehicleAttributeMetaDataList: [],\r\n          modVehicleTrailerAttributeMetaDataList: [],\r\n          modTrailerAttributeMetaDataList: [],\r\n          vehicleKPIList: [],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnVehicle\r\n          ),\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange([]);\r\n          } else {\r\n            this.localNodeAttribute();\r\n          }\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value:\r\n          this.props.selectedRow.Common_Code === undefined\r\n            ? this.state.modRigidTruck.Code\r\n            : this.props.selectedRow.Common_Code,\r\n      },\r\n    ];\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetVehicle,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        // console.log(response);\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            console.log(\"result.EntityResult\", result.EntityResult);\r\n            result.EntityResult.MaxLoadableWeight =\r\n              result.EntityResult.MaxLoadableWeight +\r\n              result.EntityResult.TareWeight;\r\n            if (\r\n              result.EntityResult.VehicleTrailers[0].Trailer.Compartments !==\r\n                null &&\r\n              result.EntityResult.VehicleTrailers[0].Trailer.Compartments\r\n                .length > 0\r\n            )\r\n              result.EntityResult.VehicleTrailers[0].Trailer.Compartments =\r\n                result.EntityResult.VehicleTrailers[0].Trailer.Compartments.sort(\r\n                  (a, b) =>\r\n                    a.CompartmentSeqNoInTrailer - b.CompartmentSeqNoInTrailer\r\n                );\r\n          }\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              rigidTruck: lodash.cloneDeep(result.EntityResult),\r\n              modRigidTruck: lodash.cloneDeep(result.EntityResult),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnVehicle\r\n              ),\r\n            },\r\n            () => {\r\n              this.getTerminalsForCarrier(\r\n                result.EntityResult.CarrierCompanyCode\r\n              );\r\n              this.getKPIList(\r\n                this.props.selectedShareholder,\r\n                result.EntityResult.Code\r\n              );\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          emptyRigidTruck.ShareholderCode = this.props.selectedShareholder;\r\n\r\n          this.setState({\r\n            modRigidTruck: lodash.cloneDeep(emptyRigidTruck),\r\n            rigidTruck: lodash.cloneDeep(emptyRigidTruck),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetVehicle:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Vehicle:\", error);\r\n      });\r\n  }\r\n\r\n  getTerminalsForCarrier(carrier) {\r\n    if (!this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n      const modRigidTruck = lodash.cloneDeep(this.state.modRigidTruck);\r\n      modRigidTruck.CarrierCompanyCode = carrier;\r\n      const terminalOptions = [];\r\n      //modRigidTruck.TerminalCodes = [];\r\n      this.setState({ terminalOptions, modRigidTruck });\r\n    } else {\r\n      const modRigidTruck = lodash.cloneDeep(this.state.modRigidTruck);\r\n      let terminalOptions = [...this.state.terminalOptions];\r\n\r\n      modRigidTruck.CarrierCompanyCode = carrier;\r\n\r\n      try {\r\n        if (carrier === undefined) {\r\n          terminalOptions = [];\r\n          modRigidTruck.TerminalCodes = [];\r\n          this.setState({ terminalOptions, modRigidTruck }, () => {\r\n            this.formCompartmentAttributes([]);\r\n          });\r\n          return;\r\n        }\r\n        let keyCode = [\r\n          {\r\n            key: KeyCodes.carrierCode,\r\n            value: carrier,\r\n          },\r\n          {\r\n            key: KeyCodes.transportationType,\r\n            value: Constants.TransportationType.ROAD,\r\n          },\r\n        ];\r\n        let obj = {\r\n          ShareHolderCode: this.props.selectedShareholder,\r\n          keyDataCode: KeyCodes.carrierCode,\r\n          KeyCodes: keyCode,\r\n        };\r\n        axios(\r\n          RestAPIs.GetCarrier,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            let result = response.data;\r\n            //console.log(result);\r\n            //console.log(\"IsSuccess-\", result.IsSuccess);\r\n\r\n            if (\r\n              result.IsSuccess === true &&\r\n              result.EntityResult !== null &&\r\n              result.EntityResult.TerminalCodes !== null\r\n            ) {\r\n              terminalOptions = [...result.EntityResult.TerminalCodes];\r\n              this.setState({ terminalOptions });\r\n            } else {\r\n              terminalOptions = [];\r\n\r\n              this.setState({ terminalOptions });\r\n              console.log(\"Error in GetCarrier:\", result.ErrorList);\r\n            }\r\n            let rigidTruck = { ...this.state.rigidTruck };\r\n            if (\r\n              rigidTruck.Code === undefined ||\r\n              rigidTruck.Code === \"\" ||\r\n              rigidTruck.Code === null\r\n            ) {\r\n              if (terminalOptions.length === 1) {\r\n                modRigidTruck.TerminalCodes = [...terminalOptions];\r\n              } else {\r\n                modRigidTruck.TerminalCodes = [];\r\n              }\r\n            }\r\n\r\n            if (Array.isArray(modRigidTruck.TerminalCodes)) {\r\n              modRigidTruck.TerminalCodes = terminalOptions.filter((x) =>\r\n                modRigidTruck.TerminalCodes.includes(x)\r\n              );\r\n            }\r\n\r\n            this.setState({ modRigidTruck }, () => {\r\n              this.terminalSelectionChange(modRigidTruck.TerminalCodes);\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            terminalOptions = [];\r\n            modRigidTruck.TerminalCodes = [];\r\n            this.setState({ terminalOptions, modRigidTruck });\r\n            console.log(\"Error while getting Carrier:\", error, carrier);\r\n            //throw error;\r\n          });\r\n      } catch (error) {\r\n        terminalOptions = [];\r\n        modRigidTruck.TerminalCodes = [];\r\n        this.setState({ terminalOptions, modRigidTruck });\r\n        console.log(\r\n          \"RigidTruckDetailsComposite:Error occured on handleCarrierChange\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      this.setState(\r\n        {\r\n          modRigidTruck: lodash.cloneDeep(this.state.rigidTruck),\r\n          modVehicleAttributeMetaDataList: [],\r\n          modVehicleTrailerAttributeMetaDataList: [],\r\n          modTrailerAttributeMetaDataList: [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(\r\n              this.state.modRigidTruck.TerminalCodes\r\n            );\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n      if (this.state.rigidTruck.Code === \"\") {\r\n        //let terminalOptions = { ...this.state.terminalOptions };\r\n        let terminalOptions = [];\r\n        this.setState({ terminalOptions });\r\n      }\r\n      let validationErrors = { ...this.state.validationErrors };\r\n      Object.keys(validationErrors).forEach((key) => {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState({ validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        vehicleAttributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.vehicle\r\n          ),\r\n        vehicleTrailerAttributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.vehicletrailer\r\n          ),\r\n        trailerAttributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.TRAILER\r\n          ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAddCompartment = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        // let modRigidTruck = this.state.modRigidTruck;\r\n        // if (\r\n        //   modRigidTruck.VehicleTrailers[0].Trailer.Compartments !== null &&\r\n        //   Array.isArray(modRigidTruck.VehicleTrailers[0].Trailer.Compartments) &&\r\n        //   modRigidTruck.VehicleTrailers[0].Trailer.Compartments.length < 73\r\n        // ) {\r\n        let newComp = {\r\n          Attributes: [],\r\n          Capacity: null,\r\n          Code: null,\r\n          CompartmentSeqNoInTrailer: 0,\r\n          TrailerCode: null,\r\n          ShareholderCode: null,\r\n          CarrierCompanyCode: null,\r\n          Description: \"\",\r\n          FRUOM: null,\r\n          FlangeNo: null,\r\n          MaxFR: null,\r\n          Name: \"\",\r\n          NoofSeals: null,\r\n          UOM: null,\r\n        };\r\n\r\n        let modRigidTruck = lodash.cloneDeep(this.state.modRigidTruck);\r\n\r\n        if (modRigidTruck.VehicleTrailers[0].Trailer.Compartments !== null) {\r\n          if (modRigidTruck.VehicleTrailers[0].Trailer.Compartments.length > 0)\r\n            newComp.UOM =\r\n              modRigidTruck.VehicleTrailers[0].Trailer.Compartments[0].UOM;\r\n\r\n          let seqno = 1;\r\n          modRigidTruck.VehicleTrailers[0].Trailer.Compartments.forEach(\r\n            (com) => {\r\n              com.CompartmentSeqNoInTrailer = seqno;\r\n              ++seqno;\r\n            }\r\n          );\r\n          newComp.CompartmentSeqNoInTrailer =\r\n            modRigidTruck.VehicleTrailers[0].Trailer.Compartments.length + 1;\r\n          modRigidTruck.VehicleTrailers[0].Trailer.Compartments.push(newComp);\r\n        }\r\n\r\n        this.setState(\r\n          {\r\n            modRigidTruck,\r\n            selectedCompRow: [],\r\n          },\r\n          () => {\r\n            if (\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode === false\r\n            ) {\r\n              var attributeMetaDataList = lodash.cloneDeep(\r\n                this.state.attributeMetaDataList.TRAILERCOMPARTMENT\r\n              );\r\n              if (attributeMetaDataList.length > 0)\r\n                this.formCompartmentAttributes([\r\n                  attributeMetaDataList[0].TerminalCode,\r\n                ]);\r\n            } else this.formCompartmentAttributes(modRigidTruck.TerminalCodes);\r\n          }\r\n        );\r\n        // }\r\n      } catch (error) {\r\n        console.log(\r\n          \"RigidTruckDetailsComposite:Error occured on handleAddCompartment\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleDeleteCompartment = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedCompRow != null &&\r\n          this.state.selectedCompRow.length > 0\r\n        ) {\r\n          if (\r\n            this.state.modRigidTruck.VehicleTrailers[0].Trailer.Compartments\r\n              .length > 0\r\n          ) {\r\n            let modRigidTruck = lodash.cloneDeep(this.state.modRigidTruck);\r\n\r\n            this.state.selectedCompRow.forEach((obj, index) => {\r\n              modRigidTruck.VehicleTrailers[0].Trailer.Compartments =\r\n                modRigidTruck.VehicleTrailers[0].Trailer.Compartments.filter(\r\n                  (com, cindex) => {\r\n                    return (\r\n                      com.CompartmentSeqNoInTrailer !==\r\n                      obj.CompartmentSeqNoInTrailer\r\n                    );\r\n                  }\r\n                );\r\n            });\r\n\r\n            let seqno = 1;\r\n            modRigidTruck.VehicleTrailers[0].Trailer.Compartments.forEach(\r\n              (com) => {\r\n                com.CompartmentSeqNoInTrailer = seqno;\r\n                ++seqno;\r\n              }\r\n            );\r\n\r\n            this.setState({ modRigidTruck });\r\n          }\r\n        }\r\n\r\n        this.setState({ selectedCompRow: [] });\r\n      } catch (error) {\r\n        console.log(\r\n          \"RigidtruckDetailsComposite:Error occured on handleDeleteCompartment\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleRowSelectionChange = (e) => {\r\n    this.setState({ selectedCompRow: e });\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    let modRigidTruck = lodash.cloneDeep(this.state.modRigidTruck);\r\n\r\n    if (cellData.field === \"Description\") {\r\n      modRigidTruck.VehicleTrailers[0].Trailer.Compartments[cellData.rowIndex][\r\n        cellData.field\r\n      ] = newVal;\r\n    }\r\n\r\n    if (cellData.field === \"Capacity\") {\r\n      if (isNaN(parseInt(newVal))) {\r\n        newVal = \"\";\r\n      }\r\n      // else {\r\n      //   newVal = parseInt(newVal);\r\n      // }\r\n      modRigidTruck.VehicleTrailers[0].Trailer.Compartments[cellData.rowIndex][\r\n        cellData.field\r\n      ] = newVal;\r\n    }\r\n\r\n    if (cellData.field === \"UOM\") {\r\n      modRigidTruck.VehicleTrailers[0].Trailer.Compartments.forEach((comp) => {\r\n        comp.UOM = newVal;\r\n      });\r\n    }\r\n\r\n    this.toggleExpand(\r\n      modRigidTruck.VehicleTrailers[0].Trailer.Compartments[cellData.rowIndex],\r\n      true,\r\n      true\r\n    );\r\n    this.setState({ modRigidTruck });\r\n  };\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      let modRigidTruck = lodash.cloneDeep(this.state.modRigidTruck);\r\n      let terminalOptions = [...this.state.terminalOptions];\r\n      if (checked) modRigidTruck.TerminalCodes = terminalOptions;\r\n      else modRigidTruck.TerminalCodes = [];\r\n      this.setState({ modRigidTruck }, () => {\r\n        this.terminalSelectionChange(modRigidTruck.TerminalCodes);\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured on handleAllTerminalsChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  convertStringtoDecimal(modRigidTruck, attributesList) {\r\n    try {\r\n      if (modRigidTruck.Height !== null && modRigidTruck.Height !== \"\") {\r\n        modRigidTruck.Height = Utilities.convertStringtoDecimal(\r\n          modRigidTruck.Height\r\n        );\r\n      }\r\n      if (modRigidTruck.Length !== null && modRigidTruck.Length !== \"\") {\r\n        modRigidTruck.Length = Utilities.convertStringtoDecimal(\r\n          modRigidTruck.Length\r\n        );\r\n      }\r\n      if (modRigidTruck.Width !== null && modRigidTruck.Width !== \"\") {\r\n        modRigidTruck.Width = Utilities.convertStringtoDecimal(\r\n          modRigidTruck.Width\r\n        );\r\n      }\r\n\r\n      modRigidTruck.TareWeight = Utilities.convertStringtoDecimal(\r\n        modRigidTruck.TareWeight\r\n      );\r\n\r\n      modRigidTruck.MaxLoadableWeight = parseFloat(\r\n        Utilities.convertStringtoDecimal(modRigidTruck.MaxLoadableWeight) -\r\n          modRigidTruck.TareWeight\r\n      );\r\n\r\n      modRigidTruck.VehicleTrailers[0].Trailer.TareWeight =\r\n        modRigidTruck.TareWeight;\r\n      modRigidTruck.VehicleTrailers[0].Trailer.MaxLoadableWeight =\r\n        modRigidTruck.MaxLoadableWeight;\r\n\r\n      modRigidTruck.VehicleTrailers[0].Trailer.Compartments.forEach((com) => {\r\n        com.Capacity = Utilities.convertStringtoDecimal(com.Capacity);\r\n      });\r\n      modRigidTruck = this.fillAttributeDetails(modRigidTruck, attributesList);\r\n      return modRigidTruck;\r\n    } catch (err) {\r\n      console.log(\"convertStringtoDecimal error rigidtruckdetails\", err);\r\n    }\r\n  }\r\n\r\n  saveVehicle = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempVehicle = lodash.cloneDeep(this.state.tempVehicle);\r\n\r\n    \r\n      this.state.rigidTruck.Code === \"\"\r\n        ? this.createVehicle(tempVehicle)\r\n        : this.updateVehicle(tempVehicle);\r\n    } catch (error) {\r\n      console.log(\"RigidTruckDetailsComposite : Error in saveVehicle\");\r\n    }\r\n  };\r\n\r\n\r\n  handleSave = () => {\r\n    try {\r\n      let returnValue = Object.values(this.state.validationErrors).every(\r\n        function (value) {\r\n          return value === \"\";\r\n        }\r\n      );\r\n      if (returnValue) {\r\n     //   this.setState({ saveEnabled: false });\r\n        let modRigidTruck = this.fillDetails();\r\n        let attributesList = [];\r\n        let vehicleAttributeList = Utilities.attributesConverttoLocaleString(\r\n          this.state.modVehicleAttributeMetaDataList\r\n        );\r\n        let vehicleTrailerAttributeList =\r\n          Utilities.attributesConverttoLocaleString(\r\n            this.state.modVehicleTrailerAttributeMetaDataList\r\n          );\r\n        let trailerAttributeList = Utilities.attributesConverttoLocaleString(\r\n          this.state.modTrailerAttributeMetaDataList\r\n        );\r\n\r\n        attributesList.push({ vehilceAttributeList: vehicleAttributeList });\r\n        attributesList.push({\r\n          vehicleTrailerAttributeList: vehicleTrailerAttributeList,\r\n        });\r\n        attributesList.push({ trailerAttributeList: trailerAttributeList });\r\n\r\n        if (this.validateSave(modRigidTruck, attributesList)) {\r\n          modRigidTruck = this.convertStringtoDecimal(\r\n            modRigidTruck,\r\n            attributesList\r\n          );\r\n         \r\n          modRigidTruck = Utilities.convertDatesToString(\r\n            DateFieldsInEntities.DatesInEntity.Vehicle,\r\n            modRigidTruck\r\n          );\r\n          \r\n          let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempVehicle = lodash.cloneDeep(modRigidTruck);\r\n        this.setState({ showAuthenticationLayout, tempVehicle }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveVehicle();\r\n          }\r\n      });\r\n\r\n        } else this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruck DetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modRigidTruck = lodash.cloneDeep(this.state.modRigidTruck);\r\n      modRigidTruck.ShareholderCode = this.props.selectedShareholder;\r\n      modRigidTruck.VehicleType = Constants.VehicleType.RigidTruck;\r\n      modRigidTruck.TransportationType = Constants.TransportationType.ROAD;\r\n      modRigidTruck.VehicleTrailers[0].Trailer.Compartments.forEach((comp) => {\r\n        comp.TrailerCode = modRigidTruck.Code;\r\n        comp.ShareholderCode = modRigidTruck.ShareholderCode;\r\n        comp.CarrierCompanyCode = modRigidTruck.CarrierCompanyCode;\r\n        if (comp.Capacity !== null && comp.Capacity !== \"\")\r\n          comp.Capacity = comp.Capacity.toLocaleString();\r\n        if (comp.Code === null || comp.Code === \"\") {\r\n          comp.Code = Utilities.generateCompartmentCode(\r\n            modRigidTruck.VehicleTrailers[0].Trailer.Compartments\r\n          ).toString();\r\n        }\r\n        if (comp.AttributesforUI !== undefined && comp.AttributesforUI != null)\r\n          comp.AttributesforUI =\r\n            Utilities.compartmentAttributesConverttoLocaleString(\r\n              comp.AttributesforUI\r\n            );\r\n      });\r\n\r\n      if (modRigidTruck.Height === \"\") modRigidTruck.Height = null;\r\n      if (modRigidTruck.Length === \"\") modRigidTruck.Length = null;\r\n      if (modRigidTruck.Width === \"\") modRigidTruck.Width = null;\r\n      if (modRigidTruck.TareWeight !== null && modRigidTruck.TareWeight !== \"\")\r\n        modRigidTruck.TareWeight = modRigidTruck.TareWeight.toLocaleString();\r\n      if (\r\n        modRigidTruck.MaxLoadableWeight !== null &&\r\n        modRigidTruck.MaxLoadableWeight !== \"\"\r\n      )\r\n        modRigidTruck.MaxLoadableWeight =\r\n          modRigidTruck.MaxLoadableWeight.toLocaleString();\r\n      if (modRigidTruck.Height !== null && modRigidTruck.Height !== \"\")\r\n        modRigidTruck.Height = modRigidTruck.Height.toLocaleString();\r\n      if (modRigidTruck.Length !== null && modRigidTruck.Length !== \"\")\r\n        modRigidTruck.Length = modRigidTruck.Length.toLocaleString();\r\n      if (modRigidTruck.Width !== null && modRigidTruck.Width !== \"\")\r\n        modRigidTruck.Width = modRigidTruck.Width.toLocaleString();\r\n      var c = new Date();\r\n      modRigidTruck.LicenseNoIssueDate = c.getUTCDate();\r\n      //modRigidTruck.LicenseNoIssueDate.setHours(0, 0, 0, 0);\r\n      // modRigidTruck.LicenseNoIssueDate = modRigidTruck.LicenseNoIssueDate.toISOString();\r\n      modRigidTruck.VehicleTrailers[0].TrailerCode = modRigidTruck.Code;\r\n      modRigidTruck.VehicleTrailers[0].VehicleCode = modRigidTruck.Code;\r\n      modRigidTruck.VehicleTrailers[0].ShareholderCode =\r\n        modRigidTruck.ShareholderCode;\r\n      modRigidTruck.VehicleTrailers[0].CarrierCompanyCode =\r\n        modRigidTruck.CarrierCompanyCode;\r\n      modRigidTruck.VehicleTrailers[0].TrailerSeq = 1;\r\n      modRigidTruck.VehicleTrailers[0].Trailer.Code = modRigidTruck.Code;\r\n      modRigidTruck.VehicleTrailers[0].Trailer.Name = modRigidTruck.Name;\r\n      modRigidTruck.VehicleTrailers[0].Trailer.ShareholderCode =\r\n        modRigidTruck.ShareholderCode;\r\n      modRigidTruck.VehicleTrailers[0].Trailer.TransportationType =\r\n        Constants.TransportationType.ROAD;\r\n      modRigidTruck.VehicleTrailers[0].Trailer.CarrierCompanyCode =\r\n        modRigidTruck.CarrierCompanyCode;\r\n      modRigidTruck.VehicleTrailers[0].Trailer.TrailerType =\r\n        Constants.TrailerType.RIGID_TRAILER;\r\n      modRigidTruck.VehicleTrailers[0].Trailer.ProductType =\r\n        modRigidTruck.ProductType;\r\n\r\n      modRigidTruck.VehicleTrailers[0].Trailer.WeightUOM =\r\n        modRigidTruck.WeightUOM;\r\n      modRigidTruck.VehicleTrailers[0].Trailer.Active = modRigidTruck.Active;\r\n      modRigidTruck.VehicleTrailers[0].Trailer.HazardousCategory =\r\n        modRigidTruck.HazardousCategory;\r\n      modRigidTruck.VehicleTrailers[0].Trailer.HazardousLicenseExpiry =\r\n        modRigidTruck.HazardousLicenseExpiry;\r\n      modRigidTruck.VehicleTrailers[0].Trailer = Utilities.convertDatesToString(\r\n        DateFieldsInEntities.DatesInEntity.Trailer,\r\n        modRigidTruck.VehicleTrailers[0].Trailer\r\n      );\r\n      //modRigidTruck = this.fillAttributeDetails(modRigidTruck);\r\n      return modRigidTruck;\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured on fillDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  fillAttributeDetails(modRigidTruck, attributesList) {\r\n    try {\r\n      let attributeData1 = attributesList.find(function (item) {\r\n        return item[\"vehilceAttributeList\"] !== undefined;\r\n      });\r\n      let attributeData2 = attributesList.find(function (item) {\r\n        return item[\"vehicleTrailerAttributeList\"] !== undefined;\r\n      });\r\n      let attributeData3 = attributesList.find(function (item) {\r\n        return item[\"trailerAttributeList\"] !== undefined;\r\n      });\r\n\r\n      let modVehicleAttributeMetaDataList =\r\n        Utilities.attributesDatatypeConversion(\r\n          attributeData1.vehilceAttributeList\r\n        );\r\n      modRigidTruck.Attributes = Utilities.fillAttributeDetails(\r\n        modVehicleAttributeMetaDataList\r\n      );\r\n      let modVehicleTrailerAttributeMetaDataList =\r\n        Utilities.attributesDatatypeConversion(\r\n          attributeData2.vehicleTrailerAttributeList\r\n        );\r\n      modRigidTruck.VehicleTrailers[0].Attributes =\r\n        Utilities.fillAttributeDetails(modVehicleTrailerAttributeMetaDataList);\r\n\r\n      let modTrailerAttributeMetaDataList =\r\n        Utilities.attributesDatatypeConversion(\r\n          attributeData3.trailerAttributeList\r\n        );\r\n      modRigidTruck.VehicleTrailers[0].Trailer.Attributes =\r\n        Utilities.fillAttributeDetails(modTrailerAttributeMetaDataList);\r\n\r\n      // For Compartment\r\n      modRigidTruck.VehicleTrailers[0].Trailer.Compartments.forEach((comp) => {\r\n        if (comp.AttributesforUI !== undefined && comp.AttributesforUI != null)\r\n          comp.AttributesforUI =\r\n            Utilities.compartmentAttributesDatatypeConversion(\r\n              comp.AttributesforUI\r\n            );\r\n        let selectedTerminals = [];\r\n        if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n          selectedTerminals = lodash.cloneDeep(modRigidTruck.TerminalCodes);\r\n        else {\r\n          var compAttributeMetaDataList = lodash.cloneDeep(\r\n            this.state.attributeMetaDataList.TRAILERCOMPARTMENT\r\n          );\r\n          if (compAttributeMetaDataList.length > 0)\r\n            selectedTerminals = [compAttributeMetaDataList[0].TerminalCode];\r\n        }\r\n        let terminalAttributes = [];\r\n        comp.Attributes = [];\r\n        if (selectedTerminals !== undefined && selectedTerminals !== null)\r\n          selectedTerminals.forEach((terminal) => {\r\n            if (\r\n              comp.AttributesforUI !== null &&\r\n              comp.AttributesforUI !== undefined\r\n            )\r\n              terminalAttributes = comp.AttributesforUI.filter(function (\r\n                attTerminal\r\n              ) {\r\n                return attTerminal.TerminalCode === terminal;\r\n              });\r\n\r\n            let attribute = {\r\n              ListOfAttributeData: [],\r\n            };\r\n\r\n            attribute.TerminalCode = terminal;\r\n            terminalAttributes.forEach((termAtt) => {\r\n              if (termAtt.AttributeValue !== \"\" || termAtt.IsMandatory === true)\r\n                attribute.ListOfAttributeData.push({\r\n                  AttributeCode: termAtt.AttributeCode,\r\n                  AttributeValue: termAtt.AttributeValue,\r\n                });\r\n            });\r\n            if (\r\n              attribute.ListOfAttributeData !== null &&\r\n              attribute.ListOfAttributeData !== undefined &&\r\n              attribute.ListOfAttributeData.length > 0\r\n            )\r\n              comp.Attributes.push(attribute);\r\n          });\r\n      });\r\n      return modRigidTruck;\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  validateSave(modRigidTruck, attributesList) {\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(rigidTruckValidationDef).forEach(function (key) {\r\n      if (modRigidTruck[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          rigidTruckValidationDef[key],\r\n          modRigidTruck[key]\r\n        );\r\n    });\r\n\r\n    // if (\r\n    //   validationErrors.MaxLoadableWeight === \"\" &&\r\n    //   validationErrors.TareWeight === \"\" &&\r\n    //   Utilities.convertStringtoDecimal(modRigidTruck.MaxLoadableWeight) -\r\n    //     Utilities.convertStringtoDecimal(modRigidTruck.TareWeight) <\r\n    //     0\r\n    // )\r\n    //   validationErrors.MaxLoadableWeight =\r\n    //     \"Trailerinfo_MaxAllowableGreater_thanTare\";\r\n\r\n    if (modRigidTruck.Active !== this.state.rigidTruck.Active) {\r\n      if (modRigidTruck.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"Vehicle_RemarksRequired\";\r\n      }\r\n    }\r\n\r\n    if (this.state.isBonded && modRigidTruck.IsBonded) {\r\n      if (\r\n        modRigidTruck.VehicleCustomsBondNo === \"\" ||\r\n        modRigidTruck.VehicleCustomsBondNo === null\r\n      ) {\r\n        validationErrors[\"VehicleCustomsBondNo\"] =\r\n          \"VehicleInfo_VehicleCustomsBondNoError\";\r\n      }\r\n      if (\r\n        modRigidTruck.BondExpiryDate === \"\" ||\r\n        modRigidTruck.BondExpiryDate === null\r\n      ) {\r\n        validationErrors[\"BondExpiryDate\"] = \"VehicleInfo_BondExpiryDateError\";\r\n      }\r\n      if (\r\n        modRigidTruck.IsBonded !== this.state.rigidTruck.IsBonded &&\r\n        this.state.rigidTruck.Code !== \"\"\r\n      ) {\r\n        if (modRigidTruck.Remarks === \"\") {\r\n          validationErrors[\"Remarks\"] = \"Vehicle_RemarksRequired\";\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      (modRigidTruck.RoadTaxNo !== null && modRigidTruck.RoadTaxNo !== \"\") ||\r\n      !isNaN(Date.parse(modRigidTruck.RoadTaxNoIssueDate)) ||\r\n      !isNaN(Date.parse(modRigidTruck.RoadTaxNoExpiryDate))\r\n    ) {\r\n      if (modRigidTruck.RoadTaxNo === null || modRigidTruck.RoadTaxNo === \"\") {\r\n        validationErrors[\"RoadTaxNo\"] = \"Vehicle_RoadTaxNoRequired\";\r\n      }\r\n\r\n      if (isNaN(Date.parse(modRigidTruck.RoadTaxNoIssueDate))) {\r\n        validationErrors[\"RoadTaxNoIssueDate\"] = \"Vehicle_RoadTaxIssRequired\";\r\n      }\r\n      if (isNaN(Date.parse(modRigidTruck.RoadTaxNoExpiryDate))) {\r\n        validationErrors[\"RoadTaxNoExpiryDate\"] = \"Vehicle_RoadTaxExpRequired\";\r\n      }\r\n    }\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"VehicleInfo_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    if (\r\n      (modRigidTruck.Height !== null ||\r\n        modRigidTruck.Width != null ||\r\n        modRigidTruck.Length !== null) &&\r\n      modRigidTruck.LWHUOM === null\r\n    ) {\r\n      validationErrors.LWHUOM = \"PrimeMover_UOMRequired\";\r\n    }\r\n\r\n    var vehicleAttributeValidationErrors = lodash.cloneDeep(\r\n      this.state.vehicleAttributeValidationErrors\r\n    );\r\n    let attributeData1 = attributesList.find(function (item) {\r\n      return item[\"vehilceAttributeList\"] !== undefined;\r\n    });\r\n\r\n    attributeData1.vehilceAttributeList.forEach((attribute) => {\r\n      vehicleAttributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n    var vehicleTrailerAttributeValidationErrors = lodash.cloneDeep(\r\n      this.state.vehicleTrailerAttributeValidationErrors\r\n    );\r\n    let attributeData2 = attributesList.find(function (item) {\r\n      return item[\"vehicleTrailerAttributeList\"] !== undefined;\r\n    });\r\n\r\n    attributeData2.vehicleTrailerAttributeList.forEach((attribute) => {\r\n      vehicleTrailerAttributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    var trailerAttributeValidationErrors = lodash.cloneDeep(\r\n      this.state.trailerAttributeValidationErrors\r\n    );\r\n    let attributeData3 = attributesList.find(function (item) {\r\n      return item[\"trailerAttributeList\"] !== undefined;\r\n    });\r\n\r\n    attributeData3.trailerAttributeList.forEach((attribute) => {\r\n      trailerAttributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    // if (modRigidTruck.VehicleTrailers[0].Trailer.Compartments.length > 0) {\r\n    //   modRigidTruck.VehicleTrailers[0].Trailer.Compartments.forEach((com) => {\r\n    //     trailerCompartmentValidationDef.forEach((col) => {\r\n    //       let err = \"\";\r\n\r\n    //       if (col.validator !== undefined) {\r\n    //         err = Utilities.validateField(col.validator, com[col.field]);\r\n    //       }\r\n\r\n    //       // if (col.field === \"Capacity\" && err === \"\") {\r\n    //       //   let capacity = Utilities.convertStringtoDecimal(\r\n    //       //     com.Capacity\r\n    //       //   ).toString();\r\n    //       //   if (capacity.length > 0) err = \"Common_MaxLengthExceeded\";\r\n    //       // }\r\n    //       if (err !== \"\") {\r\n    //         notification.messageResultDetails.push({\r\n    //           keyFields: [\"Trailer_CompCode\", col.displayName],\r\n    //           keyValues: [com.Code, com[col.field]],\r\n    //           isSuccess: false,\r\n    //           errorMessage: err,\r\n    //         });\r\n    //       }\r\n    //     });\r\n    //   });\r\n    // } else {\r\n    //   notification.messageResultDetails.push({\r\n    //     keyFields: [\"Vehicle_Code\"],\r\n    //     keyValues: [modRigidTruck.Code],\r\n    //     isSuccess: false,\r\n    //     errorMessage: \"TrailerInfo_CompartmentRequired\",\r\n    //   });\r\n    // }\r\n\r\n    this.setState({\r\n      validationErrors,\r\n      vehicleAttributeValidationErrors,\r\n      vehicleTrailerAttributeValidationErrors,\r\n      trailerAttributeValidationErrors,\r\n    });\r\n\r\n    var returnValue = true;\r\n    vehicleAttributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    if (returnValue)\r\n      vehicleTrailerAttributeValidationErrors.forEach((x) => {\r\n        if (returnValue) {\r\n          returnValue = Object.values(x.attributeValidationErrors).every(\r\n            function (value) {\r\n              return value === \"\";\r\n            }\r\n          );\r\n        } else {\r\n          return returnValue;\r\n        }\r\n      });\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    else return returnValue;\r\n\r\n    if (modRigidTruck.VehicleTrailers[0].Trailer.Compartments.length > 0) {\r\n      if (modRigidTruck.VehicleTrailers[0].Trailer.Compartments.length <= this.state.maxNumberOfCompartments) {\r\n         modRigidTruck.VehicleTrailers[0].Trailer.Compartments.forEach((com) => {\r\n        trailerCompartmentValidationDef.forEach((col) => {\r\n          let err = \"\";\r\n\r\n          if (col.validator !== undefined) {\r\n            err = Utilities.validateField(col.validator, com[col.field]);\r\n          }\r\n\r\n          if (err !== \"\") {\r\n            notification.messageResultDetails.push({\r\n              keyFields: [\"Trailer_CompCode\", col.displayName],\r\n              keyValues: [com.Code, com[col.field]],\r\n              isSuccess: false,\r\n              errorMessage: err,\r\n            });\r\n          }\r\n        });\r\n        if (com.AttributesforUI !== null && com.AttributesforUI !== undefined) {\r\n          com.AttributesforUI.forEach((item) => {\r\n            let errMsg = Utilities.valiateAttributeField(\r\n              item,\r\n              item.AttributeValue\r\n            );\r\n            if (errMsg !== \"\") {\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                notification.messageResultDetails.push({\r\n                  keyFields: [\r\n                    \"CompAttributeComp\",\r\n                    \"CompAttributeTerminal\",\r\n                    item.AttributeName,\r\n                  ],\r\n                  keyValues: [com.Code, item.TerminalCode, item.AttributeValue],\r\n                  isSuccess: false,\r\n                  errorMessage: errMsg,\r\n                });\r\n              } else {\r\n                notification.messageResultDetails.push({\r\n                  keyFields: [\"CompAttributeComp\", item.AttributeName],\r\n                  keyValues: [com.Code, item.AttributeValue],\r\n                  isSuccess: false,\r\n                  errorMessage: errMsg,\r\n                });\r\n              }\r\n            }\r\n          });\r\n        }\r\n        this.toggleExpand(com, true, true);\r\n      });\r\n      }\r\n      else {\r\n         notification.messageResultDetails.push({\r\n        keyFields: [\"Vehicle_Code\"],\r\n        keyValues: [modRigidTruck.Code],\r\n        isSuccess: false,\r\n        errorMessage: \"Compartment_limit_Exceeded\",\r\n      });\r\n      }\r\n     \r\n    } else {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [\"Vehicle_Code\"],\r\n        keyValues: [modRigidTruck.Code],\r\n        isSuccess: false,\r\n        errorMessage: \"TrailerInfo_CompartmentRequired\",\r\n      });\r\n    }\r\n\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modRigidTruck, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  createVehicle(modRigidTruck) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: modRigidTruck.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modRigidTruck,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"VehicleInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Vehicle_Code\"],\r\n          keyValues: [modRigidTruck.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateVehicle,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            // rigidTruck: lodash.cloneDeep(modRigidTruck),\r\n            // modRigidTruck: lodash.cloneDeep(modRigidTruck),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnVehicle\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          this.getRigidTruck(false);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnVehicle\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in CreateVehicle:\", result.ErrorList);\r\n        }\r\n\r\n        this.props.onSaved(this.state.modRigidTruck, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnVehicle\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modRigidTruck, \"add\", notification);\r\n      });\r\n  }\r\n  updateVehicle(modRigidTruck) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: modRigidTruck.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modRigidTruck,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"VehicleInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Vehicle_Code\"],\r\n          keyValues: [modRigidTruck.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateVehicle,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            // rigidTruck: lodash.cloneDeep(modRigidTruck),\r\n            // modRigidTruck: lodash.cloneDeep(modRigidTruck),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnVehicle\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          this.getRigidTruck(false);\r\n        } else {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnVehicle\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in UpdateVehicle:\", result.ErrorList);\r\n        }\r\n        //console.log(notification);\r\n        this.props.onSaved(this.state.modRigidTruck, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modRigidTruck, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnVehicle\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n      });\r\n  }\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      let validationErrors = { ...this.state.validationErrors };\r\n      let modRigidTruck = lodash.cloneDeep(this.state.modRigidTruck);\r\n      validationErrors[propertyName] = error;\r\n      modRigidTruck[propertyName] = value;\r\n      this.setState({ validationErrors, modRigidTruck });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleVehicleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modVehicleAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modVehicleAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modVehicleAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n\r\n      const vehicleAttributeValidationErrors = lodash.cloneDeep(\r\n        this.state.vehicleAttributeValidationErrors\r\n      );\r\n\r\n      vehicleAttributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({\r\n        vehicleAttributeValidationErrors,\r\n        modVehicleAttributeMetaDataList,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured on handleVehicleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleVehicleTrailerAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modVehicleTrailerAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modVehicleTrailerAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modVehicleTrailerAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n\r\n      const vehicleTrailerAttributeValidationErrors = lodash.cloneDeep(\r\n        this.state.vehicleTrailerAttributeValidationErrors\r\n      );\r\n\r\n      vehicleTrailerAttributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({\r\n        vehicleTrailerAttributeValidationErrors,\r\n        modVehicleTrailerAttributeMetaDataList,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured on handleVehicleTrailerAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleTrailerAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modTrailerAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modTrailerAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modTrailerAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n\r\n      const trailerAttributeValidationErrors = lodash.cloneDeep(\r\n        this.state.trailerAttributeValidationErrors\r\n      );\r\n\r\n      trailerAttributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({\r\n        trailerAttributeValidationErrors,\r\n        modTrailerAttributeMetaDataList,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckDetailsComposite:Error occured on handleTrailerAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  getKPIList(shareholder, vehicleCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      let objKPIRequestData = {\r\n        PageName: kpiVehicleDetail,\r\n        InputParameters: [\r\n          { key: \"ShareholderCode\", value: shareholder },\r\n          {\r\n            key: \"VehicleCode\",\r\n            value: vehicleCode,\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              vehicleKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ vehicleKPIList: [] });\r\n            console.log(\"Error in vehicle KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Vehicle KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      carriers: this.state.carrierOptions,\r\n      productType: this.state.productTypeOptions,\r\n      loadingType: this.state.loadingTypeOptions,\r\n      unitOfWeight: this.state.weightUOMOptions,\r\n      unitOfVolume: this.state.volumeUOMOptions,\r\n      unitOfDimension: this.state.lengthUOMOptions,\r\n      terminalCodes: this.state.terminalOptions,\r\n      hazardousTankerCategoryOptions: this.state.hazardousTankerCategoryOptions,\r\n    };\r\n\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"Vehicle_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modRigidTruck.LastUpdateTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modRigidTruck.LastUpdateTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"Vehicle_LastActiveTime\",\r\n        fieldValue:\r\n          this.state.modRigidTruck.LastActiveTime !== undefined &&\r\n          this.state.modRigidTruck.LastActiveTime !== null\r\n            ? new Date(\r\n                this.state.modRigidTruck.LastActiveTime\r\n              ).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(\r\n                this.state.modRigidTruck.LastActiveTime\r\n              ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"Vehicle_CreateTime\",\r\n        fieldValue:\r\n          new Date(this.state.modRigidTruck.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modRigidTruck.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.rigidTruck.Code}\r\n            newEntityName=\"RigidTruck_title\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <TMDetailsKPILayout KPIList={this.state.vehicleKPIList}>\r\n          {\" \"}\r\n        </TMDetailsKPILayout>\r\n        <ErrorBoundary>\r\n          <RigidTruckDetails\r\n            rigidTruck={this.state.rigidTruck}\r\n            modRigidTruck={this.state.modRigidTruck}\r\n            validationErrors={this.state.validationErrors}\r\n            listOptions={listOptions}\r\n            onFieldChange={this.handleChange}\r\n            onDateTextChange={this.handleDateTextChange}\r\n            onAllTerminalsChange={this.handleAllTerminalsChange}\r\n            selectedCompRow={this.state.selectedCompRow}\r\n            handleRowSelectionChange={this.handleRowSelectionChange}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            handleAddCompartment={this.handleAddCompartment}\r\n            handleDeleteCompartment={this.handleDeleteCompartment}\r\n            onCarrierChange={this.handleCarrierChange}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            vehicleAttributeValidationErrors={\r\n              this.state.vehicleAttributeValidationErrors\r\n            }\r\n            modVehicleAttributeMetaDataList={\r\n              this.state.modVehicleAttributeMetaDataList\r\n            }\r\n            onVehicleAttributeDataChange={this.handleVehicleAttributeDataChange}\r\n            vehicleTrailerAttributeValidationErrors={\r\n              this.state.vehicleTrailerAttributeValidationErrors\r\n            }\r\n            modVehicleTrailerAttributeMetaDataList={\r\n              this.state.modVehicleTrailerAttributeMetaDataList\r\n            }\r\n            onVehicleTrailerAttributeDataChange={\r\n              this.handleVehicleTrailerAttributeDataChange\r\n            }\r\n            trailerAttributeValidationErrors={\r\n              this.state.trailerAttributeValidationErrors\r\n            }\r\n            modTrailerAttributeMetaDataList={\r\n              this.state.modTrailerAttributeMetaDataList\r\n            }\r\n            onTrailerAttributeDataChange={this.handleTrailerAttributeDataChange}\r\n            expandedRows={this.state.expandedRows}\r\n            compartmentDetailsPageSize={\r\n              this.props.userDetails.EntityResult.PageAttibutes\r\n                .WebPortalListPageSize\r\n            }\r\n            toggleExpand={this.toggleExpand}\r\n            handleCompAttributeCellDataEdit={\r\n              this.handleCompAttributeCellDataEdit\r\n            }\r\n            isBonded={this.state.isBonded}\r\n            hazardousEnabled={this.state.hazardousEnabled}\r\n          ></RigidTruckDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.rigidTruck.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnVehicle}\r\n            handleOperation={this.saveVehicle}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RigidTruckDetailsComposite);\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Select, Checkbox } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nAssociatedTerminals.propTypes = {\r\n  terminalList: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedTerminal: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  validationError: PropTypes.string,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCheckChange: PropTypes.func.isRequired,\r\n};\r\nAssociatedTerminals.defaultProps = {\r\n  terminalList: [],\r\n  selectedTerminal: [],\r\n  validationError: \"\",\r\n};\r\nexport function AssociatedTerminals({\r\n  terminalList,\r\n  selectedTerminal,\r\n  validationError,\r\n  onFieldChange,\r\n  onCheckChange,\r\n}) {\r\n  //console.log(\"component terminalList\", terminalList);\r\n  if (selectedTerminal === null) selectedTerminal = [];\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div style={{ width: \"80%\" }}>\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"TerminalCodes\")}\r\n              value={selectedTerminal}\r\n              multiple={true}\r\n              options={Utilities.transferListtoOptions(terminalList)}\r\n              onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n              error={t(validationError)}\r\n              disabled={terminalList.length === 0}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"ddlSelectAll\">\r\n            <Checkbox\r\n              label={t(\"Common_All\")}\r\n              checked={\r\n                Array.isArray(selectedTerminal) &&\r\n                selectedTerminal.length === terminalList.length\r\n              }\r\n              onChange={(checked) => onCheckChange(checked)}\r\n            ></Checkbox>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Select, Input, DatePicker, Accordion, Checkbox } from \"@scuf/common\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getCurrentDateFormat,\r\n  getOptionsWithSelect,\r\n} from \"../../../JS/functionalUtilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport { convertStringToCommonDateFormat } from \"../../../JS/Utilities\";\r\n\r\nVehicleBasicInputs.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  modData: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    carriers: PropTypes.array,\r\n    productType: PropTypes.array,\r\n    unitOfWeight: PropTypes.array,\r\n    unitOfVolume: PropTypes.array,\r\n    unitOfDimension: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    hazardousTankerCategoryOptions: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  onActiveStatusChange: PropTypes.func.isRequired,\r\n  onCarrierChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  modAttributeMetaDataList: PropTypes.array.isRequired,\r\n  attributeValidationErrors: PropTypes.array.isRequired,\r\n  onAttributeDataChange: PropTypes.func.isRequired,\r\n  isBonded: PropTypes.bool.isRequired,\r\n  hazardousEnabled: PropTypes.bool,\r\n};\r\nVehicleBasicInputs.defaultProps = {\r\n  listOptions: {\r\n    carriers: [],\r\n    productType: [],\r\n    unitOfWeight: [],\r\n    unitOfVolume: [],\r\n    unitOfDimension: [],\r\n    terminalCodes: [],\r\n    hazardousTankerCategoryOptions: [],\r\n  },\r\n  isEnterpriseNode: false,\r\n  hazardousEnabled: false,\r\n};\r\nexport default function VehicleBasicInputs({\r\n  data,\r\n  modData,\r\n  onFieldChange,\r\n  validationErrors,\r\n  listOptions,\r\n  onDateTextChange,\r\n  onAllTerminalsChange,\r\n  onActiveStatusChange,\r\n  onCarrierChange,\r\n  children,\r\n  isEnterpriseNode,\r\n  modAttributeMetaDataList,\r\n  attributeValidationErrors,\r\n  onAttributeDataChange,\r\n  isBonded,\r\n  hazardousEnabled,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n  const [t] = useTranslation();\r\n  // useEffect(() => {\r\n  //   const unitOfDimension = listOptions.unitOfDimension;\r\n  //   unitOfDimension.unshift({ text: t(\"Common_Select\"), value: null });\r\n  // }, [listOptions.unitOfDimension]);\r\n  return (\r\n    // <TranslationConsumer>\r\n    //   {(t) => (\r\n    <>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Code}\r\n          label={t(\"Vehicle_Code\")}\r\n          indicator=\"required\"\r\n          disabled={data.Code !== \"\"}\r\n          onChange={(data) => onFieldChange(\"Code\", data)}\r\n          error={t(validationErrors.Code)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Name}\r\n          label={t(\"Vehicle_Name\")}\r\n          indicator=\"required\"\r\n          onChange={(data) => onFieldChange(\"Name\", data)}\r\n          error={t(validationErrors.Name, {\r\n            label: t(\"Vehicle_Name\"),\r\n          })}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Description === null ? \"\" : modData.Description}\r\n          label={t(`Vehicle_Desc`)}\r\n          onChange={(data) => onFieldChange(\"Description\", data)}\r\n          error={t(validationErrors.Description)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Select\r\n          fluid\r\n          placeholder={t(\"Common_Select\")}\r\n          label={t(\"Vehicle_CarrierCompany\")}\r\n          value={modData.CarrierCompanyCode}\r\n          options={listOptions.carriers}\r\n          onChange={(data) => {\r\n            onCarrierChange(data);\r\n          }}\r\n          indicator=\"required\"\r\n          error={t(validationErrors.CarrierCompanyCode)}\r\n          reserveSpace={false}\r\n          disabled={data.Code !== \"\"}\r\n          search={true}\r\n          noResultsMessage={t(\"noResultsMessage\")}\r\n        />\r\n      </div>\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_ProductType`)}\r\n            value={modData.ProductType}\r\n            options={listOptions.productType}\r\n            onChange={(data) => {\r\n              onFieldChange(\"ProductType\", data);\r\n            }}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.ProductType)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {children}\r\n\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.LicenseNo === null ? \"\" : modData.LicenseNo}\r\n          label={t(`Vehicle_LicenseNo`)}\r\n          indicator={\r\n            modData.VehicleType !== Constants.VehicleType.NonFillingVehicle\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          onChange={(data) => onFieldChange(\"LicenseNo\", data)}\r\n          error={t(validationErrors.LicenseNo)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            modData.LicenseNoExpiryDate === null\r\n              ? \"\"\r\n              : convertStringToCommonDateFormat(modData.LicenseNoExpiryDate)\r\n          }\r\n          displayFormat={getCurrentDateFormat()}\r\n          label={t(`Vehicle_LicenseExpiry`)}\r\n          showYearSelector=\"true\"\r\n          indicator={\r\n            modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ||\r\n            (modData.VehicleType === Constants.VehicleType.NonFillingVehicle &&\r\n              modData.LicenseNo !== null &&\r\n              modData.LicenseNo.trim() !== \"\")\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          disablePast={true}\r\n          onChange={(data) => onFieldChange(\"LicenseNoExpiryDate\", data)}\r\n          onTextChange={(value, error) => {\r\n            onDateTextChange(\"LicenseNoExpiryDate\", value, error);\r\n          }}\r\n          error={t(validationErrors.LicenseNoExpiryDate)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.RoadTaxNo === null ? \"\" : modData.RoadTaxNo}\r\n          label={t(`Vehicle_RoadTaxNo`)}\r\n          indicator={\r\n            (modData.RoadTaxNo !== null && modData.RoadTaxNo.trim() !== \"\") ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoIssueDate)) ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoExpiryDate))\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          onChange={(data) => onFieldChange(\"RoadTaxNo\", data)}\r\n          error={t(validationErrors.RoadTaxNo)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            modData.RoadTaxNoIssueDate === null\r\n              ? \"\"\r\n              : convertStringToCommonDateFormat(modData.RoadTaxNoIssueDate)\r\n          }\r\n          displayFormat={getCurrentDateFormat()}\r\n          label={t(`Vehicle_RoadTaxIssue`)}\r\n          showYearSelector=\"true\"\r\n          indicator={\r\n            (modData.RoadTaxNo !== null && modData.RoadTaxNo.trim() !== \"\") ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoIssueDate)) ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoExpiryDate))\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          onChange={(data) => onFieldChange(\"RoadTaxNoIssueDate\", data)}\r\n          onTextChange={(value, error) => {\r\n            onDateTextChange(\"RoadTaxNoIssueDate\", value, error);\r\n          }}\r\n          error={t(validationErrors.RoadTaxNoIssueDate)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            modData.RoadTaxNoExpiryDate === null\r\n              ? \"\"\r\n              : convertStringToCommonDateFormat(modData.RoadTaxNoExpiryDate)\r\n          }\r\n          displayFormat={getCurrentDateFormat()}\r\n          label={t(`Vehicle_RoadTaxExpiry`)}\r\n          showYearSelector=\"true\"\r\n          indicator={\r\n            (modData.RoadTaxNo !== null && modData.RoadTaxNo.trim() !== \"\") ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoIssueDate)) ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoExpiryDate))\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          disablePast={true}\r\n          onChange={(data) => onFieldChange(\"RoadTaxNoExpiryDate\", data)}\r\n          onTextChange={(value, error) => {\r\n            onDateTextChange(\"RoadTaxNoExpiryDate\", value, error);\r\n          }}\r\n          error={t(validationErrors.RoadTaxNoExpiryDate)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Owner === null ? \"\" : modData.Owner}\r\n          label={t(`Vehicle_owner`)}\r\n          onChange={(data) => onFieldChange(\"Owner\", data)}\r\n          error={t(validationErrors.Owner)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.TareWeight === null\r\n                ? \"\"\r\n                : modData.TareWeight.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_Tareweight`)}\r\n            indicator={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? null\r\n                : \"required\"\r\n            }\r\n            onChange={(data) => onFieldChange(\"TareWeight\", data)}\r\n            error={t(validationErrors.TareWeight, {\r\n              label: t(\"Vehicle_Tareweight\"),\r\n            })}\r\n            disabled={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? true\r\n                : false\r\n            }\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.MaxLoadableWeight === null\r\n                ? \"\"\r\n                : modData.MaxLoadableWeight.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_MaxLoadWeight`)}\r\n            indicator={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? null\r\n                : \"required\"\r\n            }\r\n            onChange={(data) => onFieldChange(\"MaxLoadableWeight\", data)}\r\n            error={t(validationErrors.MaxLoadableWeight, {\r\n              label: t(\"Vehicle_MaxLoadWeight\"),\r\n            })}\r\n            disabled={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? true\r\n                : false\r\n            }\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_UOMWeight`)}\r\n            value={modData.WeightUOM}\r\n            options={listOptions.unitOfWeight}\r\n            onChange={(data) => {\r\n              onFieldChange(\"WeightUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            indicator={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? null\r\n                : \"required\"\r\n            }\r\n            error={t(validationErrors.WeightUOM)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n            disabled={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? true\r\n                : false\r\n            }\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.Height === null ? \"\" : modData.Height.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_height`)}\r\n            onChange={(data) => onFieldChange(\"Height\", data)}\r\n            error={t(validationErrors.Height, {\r\n              label: t(\"Vehicle_height\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modData.Width === null ? \"\" : modData.Width.toLocaleString()}\r\n            label={t(`Vehicle_Width`)}\r\n            onChange={(data) => onFieldChange(\"Width\", data)}\r\n            error={t(validationErrors.Width, {\r\n              label: t(\"Vehicle_Width\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.Length === null ? \"\" : modData.Length.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_Length`)}\r\n            onChange={(data) => onFieldChange(\"Length\", data)}\r\n            error={t(validationErrors.Length, {\r\n              label: t(\"Vehicle_Length\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_UOMDimemsion`)}\r\n            value={modData.LWHUOM}\r\n            options={getOptionsWithSelect(\r\n              listOptions.unitOfDimension,\r\n              t(\"Common_Select\")\r\n            )}\r\n            onChange={(data) => {\r\n              onFieldChange(\"LWHUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            error={t(validationErrors.LWHUOM)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.MaxLoadableVolume === null\r\n                ? \"\"\r\n                : modData.MaxLoadableVolume.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_MaxLoadVolume`)}\r\n            onChange={(data) => onFieldChange(\"MaxLoadableVolume\", data)}\r\n            error={t(validationErrors.MaxLoadableVolume)}\r\n            reserveSpace={false}\r\n            disabled={true}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_UOMVolume`)}\r\n            value={modData.VolumeUOM}\r\n            options={listOptions.unitOfVolume}\r\n            onChange={(data) => {\r\n              onFieldChange(\"VolumeUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            error={t(validationErrors.VolumeUOM)}\r\n            reserveSpace={false}\r\n            //search={true}\r\n            disabled={true}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {isBonded &&\r\n      modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <div\r\n            className=\"ui single-input fluid disabled\"\r\n            style={{ width: \"30%\", float: \"left\" }}\r\n          >\r\n            <div class=\"ui input-label\">\r\n              <span className=\"input-label-message\">\r\n                {t(\"VehicleInfo_Bonded\")}\r\n              </span>\r\n            </div>\r\n            <div className=\"input-wrap\">\r\n              <Checkbox\r\n                //className=\"LabelEnabled\"\r\n                //label={t(\"ViewShipment_IsForceClosed\")}\r\n                onChange={(data) => onFieldChange(\"IsBonded\", data)}\r\n                checked={modData.IsBonded}\r\n              />\r\n            </div>\r\n          </div>\r\n          {modData.IsBonded &&\r\n          modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n            <div style={{ width: \"70%\", float: \"right\" }}>\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modData.VehicleCustomsBondNo === null\r\n                    ? \"\"\r\n                    : modData.VehicleCustomsBondNo\r\n                }\r\n                onChange={(data) => onFieldChange(\"VehicleCustomsBondNo\", data)}\r\n                label={t(\"VehicleInfo_VehicleCustomsBondNo\")}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.VehicleCustomsBondNo)}\r\n                indicator={modData.IsBonded ? \"required\" : \"\"}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.IsBonded &&\r\n      modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <DatePicker\r\n            fluid\r\n            value={\r\n              modData.BondExpiryDate === null\r\n                ? \"\"\r\n                : convertStringToCommonDateFormat(modData.BondExpiryDate)\r\n            }\r\n            displayFormat={getCurrentDateFormat()}\r\n            label={t(`VehicleInfo_BondExpiryDate`)}\r\n            showYearSelector=\"true\"\r\n            indicator={modData.IsBonded ? \"required\" : \"\"}\r\n            disablePast={true}\r\n            onChange={(data) => onFieldChange(\"BondExpiryDate\", data)}\r\n            onTextChange={(value, error) => {\r\n              onDateTextChange(\"BondExpiryDate\", value, error);\r\n            }}\r\n            error={t(validationErrors.BondExpiryDate)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {hazardousEnabled &&\r\n      modData.VehicleType === Constants.VehicleType.RigidTruck ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div style={{ width: \"48%\" }}>\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"FP_HazardousCategory\")}\r\n                value={\r\n                  modData.HazardousCategory === null\r\n                    ? \"\"\r\n                    : modData.HazardousCategory\r\n                }\r\n                options={getOptionsWithSelect(\r\n                  listOptions.hazardousTankerCategoryOptions,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                onChange={(data) => onFieldChange(\"HazardousCategory\", data)}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.HazardousCategory)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"48%\" }}>\r\n              <DatePicker\r\n                fluid\r\n                value={\r\n                  modData.HazardousLicenseExpiry === null\r\n                    ? \"\"\r\n                    : convertStringToCommonDateFormat(\r\n                        modData.HazardousLicenseExpiry\r\n                      )\r\n                }\r\n                displayFormat={getCurrentDateFormat()}\r\n                label={t(\"DriverInfo_HazardousLicExpiry\")}\r\n                disablePast={true}\r\n                showYearSelector=\"true\"\r\n                onChange={(data) =>\r\n                  onFieldChange(\"HazardousLicenseExpiry\", data)\r\n                }\r\n                onTextChange={(value, error) => {\r\n                  onDateTextChange(\"HazardousLicenseExpiry\", value, error);\r\n                }}\r\n                error={t(validationErrors.HazardousLicenseExpiry)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Select\r\n          fluid\r\n          placeholder={t(\"Common_Select\")}\r\n          label={t(\"Vehicle_Status\")}\r\n          value={modData.Active}\r\n          options={[\r\n            { text: t(\"ViewShipment_Ok\"), value: true },\r\n            { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n          ]}\r\n          onChange={(data) => onActiveStatusChange(data)}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Remarks === null ? \"\" : modData.Remarks}\r\n          label={t(\"Vehicle_Remarks\")}\r\n          onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n          indicator={\r\n            modData.Active !== data.Active ||\r\n            (data.Code !== \"\" &&\r\n              isBonded &&\r\n              modData.IsBonded &&\r\n              modData.IsBonded !== data.IsBonded)\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          error={t(validationErrors.Remarks)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      {isEnterpriseNode ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <AssociatedTerminals\r\n            terminalList={listOptions.terminalCodes}\r\n            selectedTerminal={modData.TerminalCodes}\r\n            error={t(validationErrors.TerminalCodes)}\r\n            onFieldChange={onFieldChange}\r\n            onCheckChange={onAllTerminalsChange}\r\n          ></AssociatedTerminals>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div></div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType === Constants.VehicleType.NonFillingVehicle ? (\r\n        modAttributeMetaDataList.length > 0 ? (\r\n          modAttributeMetaDataList.map((attribute) => (\r\n            <ErrorBoundary>\r\n              <div className=\"col-12 col-md-12 col-lg-12\">\r\n                <Accordion>\r\n                  <Accordion.Content\r\n                    className=\"attributeAccordian\"\r\n                    title={\r\n                      isEnterpriseNode\r\n                        ? attribute.TerminalCode +\r\n                          \" - \" +\r\n                          t(\"Attributes_Header\")\r\n                        : t(\"Attributes_Header\")\r\n                    }\r\n                  >\r\n                    <AttributeDetails\r\n                      selectedAttributeList={attribute.attributeMetaDataList}\r\n                      handleCellDataEdit={onAttributeDataChange}\r\n                      attributeValidationErrors={handleValidationErrorFilter(\r\n                        attributeValidationErrors,\r\n                        attribute.TerminalCode\r\n                      )}\r\n                    ></AttributeDetails>\r\n                  </Accordion.Content>\r\n                </Accordion>\r\n              </div>\r\n            </ErrorBoundary>\r\n          ))\r\n        ) : null\r\n      ) : modAttributeMetaDataList.length > 0 ? (\r\n        <div className=\"col-12 col-md-12 col-lg-12\">\r\n          <Accordion>\r\n            <Accordion.Content\r\n              className=\"attributeAccordian\"\r\n              title={t(\"VEHICLE_Attributes\")}\r\n            >\r\n              {modAttributeMetaDataList.length > 0\r\n                ? modAttributeMetaDataList.map((attribute) => (\r\n                    <ErrorBoundary>\r\n                      <div className=\"col-12 col-md-12 col-lg-12\">\r\n                        <Accordion>\r\n                          <Accordion.Content\r\n                            className=\"attributeAccordian\"\r\n                            title={\r\n                              isEnterpriseNode\r\n                                ? attribute.TerminalCode +\r\n                                  \" - \" +\r\n                                  t(\"Attributes_Header\")\r\n                                : t(\"Attributes_Header\")\r\n                            }\r\n                          >\r\n                            <AttributeDetails\r\n                              selectedAttributeList={\r\n                                attribute.attributeMetaDataList\r\n                              }\r\n                              handleCellDataEdit={onAttributeDataChange}\r\n                              attributeValidationErrors={handleValidationErrorFilter(\r\n                                attributeValidationErrors,\r\n                                attribute.TerminalCode\r\n                              )}\r\n                            ></AttributeDetails>\r\n                          </Accordion.Content>\r\n                        </Accordion>\r\n                      </div>\r\n                    </ErrorBoundary>\r\n                  ))\r\n                : null}\r\n            </Accordion.Content>\r\n          </Accordion>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n    //   )}\r\n    // </TranslationConsumer>\r\n  );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","export const DatesInEntity={\r\n    Driver : [\r\n    \"License1ExpiryDate\",\r\n    \"License1IssueDate\",\r\n    \"License2IssueDate\",\r\n    \"License2ExpiryDate\",\r\n    \"License3IssueDate\",\r\n    \"License3ExpiryDate\",\r\n    \"HazardousLicenseExpiry\"\r\n  ],\r\n  CarrierCompany:[\"PermitExpiryDate\"],\r\n  PrimeMover:[\"RoadTaxNoIssueDate\",\"RoadTaxNoExpiryDate\",\"licenseExpiryDate\"],\r\n  Wagon:[\"LicenseExpiryDate\"],\r\n  Vehicle:[\"LicenseNoIssueDate\",\"LicenseNoExpiryDate\",\r\n  \"RoadTaxNoIssueDate\",\"RoadTaxNoExpiryDate\",\"Bondexpirydate\",\"HazardousLicenseExpiry\"],\r\n  Contract:[\"StartDate\",\"EndDate\"],\r\n  ContractItem:[\"StartDate\",\"EndDate\"],\r\n  Order:[\"OrderStartDate\",\"OrderEndDate\",\"OrderDate\",\"DeliveryDate\"],\r\n  AccessCard:[\"ExpiryDate\",\"IssueDate\",\"PasswordExpiryDate\"],\r\n  Trailer:[\"HazardousLicenseExpiry\"],\r\n  };","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMDetailsKPILayout","_ref","KPIList","pageName","rowHeight","widgetHeight","isDraggable","isResizable","kpiDisplayTopBreakpoint","KPIDisplays","setKPIDisplays","useState","kpiDiv","React","hideKpis","currentScrollPos","window","pageYOffset","KPIDisplay","current","getBoundingClientRect","top","useEffect","addEventListener","removeEventListener","_jsx","ref","children","TranslationConsumer","t","style","marginTop","ErrorBoundary","KPIDashboardLayout","kpiList","defaultProps","RigidTruckDetails","rigidTruck","modRigidTruck","validationErrors","onFieldChange","onDateTextChange","onAllTerminalsChange","onActiveStatusChange","onCarrierChange","selectedCompRow","listOptions","handleAddCompartment","handleCellDataEdit","handleDeleteCompartment","handleRowSelectionChange","isEnterpriseNode","modVehicleAttributeMetaDataList","vehicleAttributeValidationErrors","onVehicleAttributeDataChange","modVehicleTrailerAttributeMetaDataList","vehicleTrailerAttributeValidationErrors","onVehicleTrailerAttributeDataChange","handleCompAttributeCellDataEdit","toggleExpand","expandedRows","compartmentDetailsPageSize","modTrailerAttributeMetaDataList","trailerAttributeValidationErrors","onTrailerAttributeDataChange","isBonded","hazardousEnabled","handleValidationErrorFilter","attributeValidationErrors","terminal","attributeValidation","find","selectedAttribute","TerminalCode","useTranslation","handleTextEdit","cellData","val","VehicleTrailers","Trailer","Compartments","rowIndex","field","toLocaleString","Input","fluid","value","onChange","reserveSpace","disabled","handleAttributeType","data","attribute","rowData","handleAttributeDateValue","dateval","chars","split","Date","convertAttributeDatetoString","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","Constants","STRING","INT","AttributeValue","IsReadonly","FLOAT","LONG","DOUBLE","undefined","BOOL","Checkbox","checked","toString","DATETIME","DatePicker","showYearSelector","onTextChange","error","console","log","handleIsRequiredCompAttributes","IsMandatory","_jsxs","AttributeName","class","className","VehicleBasicFields","modData","modAttributeMetaDataList","onAttributeDataChange","Select","placeholder","label","LoadingType","options","loadingType","indicator","search","noResultsMessage","length","Accordion","Content","title","map","AttributeDetails","selectedAttributeList","attributeMetaDataList","onClick","Icon","root","name","size","DataTable","rowExpansionTemplate","Array","isArray","AttributesforUI","row","rows","Column","header","editable","renderer","Pagination","selectionMode","selection","onSelectionChange","scrollable","scrollHeight","editFieldType","customEditRenderer","dropDownOptions","unitOfVolume","unitOfWeight","initialWidth","open","findIndex","x","CompartmentSeqNoInTrailer","carriers","productType","unitOfDimension","terminalCodes","hazardousTankerCategoryOptions","RigidTruckDetailsComposite","Component","constructor","_this","arguments","this","state","Utilities","rigidTruckValidationDef","isReadyToRender","carrierOptions","terminalOptions","volumeUOMOptions","weightUOMOptions","lengthUOMOptions","productTypeOptions","loadingTypeOptions","saveEnabled","vehicleKPIList","maxNumberOfCompartments","showAuthenticationLayout","tempVehicle","handleCarrierChange","carrier","props","userDetails","EntityResult","IsEnterpriseNode","getTerminalsForCarrier","lodash","CarrierCompanyCode","TerminalCodes","setState","handleActiveStatusChange","Active","Remarks","handleChange","propertyName","IsBonded","VehicleCustomsBondNo","BondExpiryDate","RoadTaxNo","RoadTaxNoIssueDate","RoadTaxNoExpiryDate","LWHUOM","terminalSelectionChange","isTerminalAdded","expandedRowIndex","item","splice","push","filter","Code","compAttribute","compIndex","compSequenceNo","SeqNumber","handleReset","handleResetAttributeValidationError","localNodeAttribute","Object","keys","forEach","key","IsArchived","newComp","Attributes","Capacity","TrailerCode","ShareholderCode","Description","FRUOM","FlangeNo","MaxFR","Name","NoofSeals","UOM","seqno","com","TRAILERCOMPARTMENT","formCompartmentAttributes","obj","index","cindex","e","newVal","isNaN","parseInt","comp","handleAllTerminalsChange","saveVehicle","createVehicle","updateVehicle","handleSave","values","every","fillDetails","attributesList","vehicleAttributeList","vehicleTrailerAttributeList","trailerAttributeList","vehilceAttributeList","validateSave","convertStringtoDecimal","DateFieldsInEntities","Vehicle","IsWebPortalUser","handleDateTextChange","handleVehicleAttributeDataChange","matchedAttributes","matchedAttributesList","modattribute","DefaultValue","handleVehicleTrailerAttributeDataChange","handleTrailerAttributeDataChange","handleAuthenticationClose","componentDidMount","isNewTruck","selectedRow","Common_Code","getHazardousLookup","getAttributes","getCarrierList","selectedShareholder","getUOMList","getProductTypes","getLoadingTypes","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","getHazardousCategories","categoryOptions","ErrorList","catch","bonded","toUpperCase","weightUOMs","MASS","weightOption","text","volumeUOMs","VOLUME","volumeOption","lengthUOMs","LENGTH","lengthOption","shareholder","ROAD","componentWillReceiveProps","nextProps","getRigidTruck","vehicleAttributeEntity","vehicleTrailerAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","vehicle","vehicletrailer","TRAILER","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","baseproductAttribute","valueAttribute","ListOfAttributeData","AttributeCode","setVehicleTrailerAttributes","setTrailerAttributes","attributes","attTerminal","some","selTerminal","compAttributes","att","DisplayName","MinValue","MaxValue","ValidationFormat","attributesforNewComp","tempCompAttributes","attData","tempAttIndex","assignedAttributes","emptyRigidTruck","WeightUOM","PageAttibutes","DefaultUOMS","MassUOM","FunctionsList","functionGroups","add","fnVehicle","keyCode","KeyCodes","ShareHolderCode","keyDataCode","MaxLoadableWeight","TareWeight","sort","a","b","modify","getKPIList","includes","Height","Length","Width","parseFloat","fillAttributeDetails","err","VehicleType","RigidTruck","TransportationType","c","LicenseNoIssueDate","getUTCDate","VehicleCode","TrailerSeq","TrailerType","RIGID_TRAILER","ProductType","HazardousCategory","HazardousLicenseExpiry","attributeData1","attributeData2","attributeData3","compAttributeMetaDataList","terminalAttributes","termAtt","parse","notification","messageType","message","messageResultDetails","returnValue","trailerCompartmentValidationDef","col","validator","keyFields","displayName","keyValues","isSuccess","errorMessage","errMsg","onSaved","Entity","vehicleCode","view","fnKPIInformation","objKPIRequestData","PageName","kpiVehicleDetail","InputParameters","ListKPIDetails","render","popUpContents","fieldName","fieldValue","LastUpdateTime","toLocaleDateString","toLocaleTimeString","LastActiveTime","CreatedTime","TMDetailsHeader","entityCode","newEntityName","WebPortalListPageSize","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","AssociatedTerminals","terminalList","selectedTerminal","validationError","onCheckChange","display","justifyContent","width","multiple","margin","Popup","element","marginLeft","position","List","content","Button","float","IsVisible","displayFormat","getCurrentDateFormat","VehicleBasicInputs","_Fragment","NonFillingVehicle","LicenseNo","LicenseNoExpiryDate","convertStringToCommonDateFormat","trim","disablePast","Owner","getOptionsWithSelect","MaxLoadableVolume","VolumeUOM","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","DatesInEntity","Driver","CarrierCompany","PrimeMover","Wagon","Contract","ContractItem","Order","AccessCard","ddlOptions","selectOptionText","option","unshift","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell"],"sourceRoot":""}