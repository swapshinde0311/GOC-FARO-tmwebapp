{"version":3,"file":"static/js/2694.2229a8bd.chunk.js","mappings":"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","sources":["Components/Composite/Summary/NotificationGroupSummaryComposite.jsx","Components/Composite/Entity/NotificationGroupComposite.jsx","Components/Composite/Summary/NotificationRestrictionSummaryComposite.jsx","Components/Composite/Entity/NotificationRestrictionComposite.jsx","Components/Composite/Entity/NotificationSettingsComposite.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { Icon,Input,Select,Button } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nNotificationGroupSummaryPageComposite.propTypes = {\r\n    tableData: PropTypes.object.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    modNotificationData: PropTypes.object.isRequired,\r\n    notificationData: PropTypes.object.isRequired,\r\n    isDetails: PropTypes.bool.isRequired,\r\n    handleSave: PropTypes.func.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    onActiveStatusChange: PropTypes.func.isRequired,\r\n    handleReset: PropTypes.func.isRequired,\r\n    validationErrors: PropTypes.object.isRequired,\r\n    saveEnabled:PropTypes.bool.isRequired\r\n};\r\nexport function NotificationGroupSummaryPageComposite({\r\n    tableData,\r\n    pageSize,\r\n    onRowClick,\r\n    modNotificationData,\r\n    handleSave,\r\n    onFieldChange,\r\n    onActiveStatusChange,\r\n    handleReset,\r\n    validationErrors,\r\n    notificationData,\r\n   saveEnabled\r\n   \r\n}) {\r\n    const [t] = useTranslation();\r\n    function displayValues(cellData) {\r\n        const { value, field } = cellData;\r\n        if (typeof value === \"boolean\" || field === \"Active\") {\r\n            if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n            else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n        } else if (value === \"\" || value === null || value === undefined) {\r\n            return value;\r\n        }\r\n    }\r\n    return (\r\n      \r\n        <div className=\"detailsContainer\" style={{marginTop:\"-2rem\"}}>\r\n            <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                    <Input\r\n                        fluid\r\n                        value={modNotificationData.GroupCode}\r\n                        indicator=\"required\"\r\n                        onChange={(data) => onFieldChange(\"GroupCode\", data)}\r\n                        label={t(\"NotificationGroup_GroupCode\")}\r\n                        error={t(validationErrors.GroupCode)}\r\n                        reserveSpace={false}\r\n                        disabled={notificationData.GroupCode !==\"\"}\r\n                    />\r\n                </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                        fluid\r\n                        placeholder={t(\"Common_Select\")}\r\n                        label={t(\"NotificationGroup_Status\")}\r\n                        value={modNotificationData.Active === \"\" || \r\n                            modNotificationData.Active === undefined || \r\n                            modNotificationData.Active === null ? true : modNotificationData.Active}\r\n                        options={[\r\n                            { text: t(\"ViewShipment_Ok\"), value: true },\r\n                            { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                        ]}\r\n                        onChange={(data) => onFieldChange(\"Active\",data)}\r\n                    />\r\n                </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={modNotificationData.Description}\r\n                        onChange={(data) => onFieldChange(\"Description\", data)}\r\n                        label={t(\"NotificationGroup_Description\")}\r\n                        error={t(validationErrors.Description)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-9 col-lg-12\">\r\n            <div style={{ float: \"right\" }}>\r\n                    <Button\r\n                        content={t(\"NotificationGroup_Reset\")}\r\n                        className=\"cancelButton\"\r\n                        onClick={() => handleReset()}\r\n                    />\r\n                    <Button\r\n                        type=\"primary\"\r\n                            content={t(\"NotificationGroup_Save\")}\r\n                            disabled={!saveEnabled}\r\n                        onClick={() => handleSave()}\r\n                    />\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row marginRightZero tableScroll\">\r\n                <div className=\"col-12 detailsTable\" >\r\n                <DataTable\r\n                    data={tableData}\r\n                    search={true}\r\n                    onCellClick={(data) =>\r\n                        onRowClick !== undefined ? onRowClick(data) : {}\r\n                    }\r\n                >\r\n                    <DataTable.ActionBar />\r\n                    <DataTable.Column\r\n                            className=\"compColHeight colminWidth notificationgroupstatus\"\r\n                        key=\"GroupCode\"\r\n                        field=\"GroupCode\"\r\n                        sortable={true}\r\n                        header={t(\"NotificationGroup_GroupCode\")}\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                            className=\"compColHeight colminWidth notificationgroupstatus\"\r\n                        key=\"Active\"\r\n                        field=\"Active\"\r\n                        header={t(\"NotificationGroup_Status\")}\r\n                        renderer={(cellData) => displayValues(cellData)}\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"Description\"\r\n                        field=\"Description\"\r\n                        header={t(\"NotificationGroup_Description\")}\r\n                    ></DataTable.Column>\r\n                   \r\n                   \r\n                    {Array.isArray(tableData) && tableData.length > pageSize ? (\r\n                        <DataTable.Pagination />\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </DataTable>\r\n            </div>\r\n           \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { NotificationGroupSummaryPageComposite } from \"../Summary/NotificationGroupSummaryComposite\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport lodash from \"lodash\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { functionGroups, fnNotificationGroup } from \"../../../JS/FunctionGroups\";\r\nimport { emptyNotificationGroup } from \"../../../JS/DefaultEntities\";\r\nimport { notificationGroupValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nclass NotificationGroupComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n    selectedRow: [],\r\n    data: [],\r\n    notificationData: lodash.cloneDeep(emptyNotificationGroup),\r\n    validationErrors: Utilities.getInitialValidationErrors(notificationGroupValidationDef),\r\n    modNotificationData: {},\r\n    saveEnabled: false,\r\n    showAuthenticationLayout: false,\r\n    showDeleteAuthenticationLayout : false,\r\n    tempNotificationData: {},\r\n  }\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnNotificationGroup\r\n      );\r\n      this.setState({\r\n        operationsVisibilty,\r\n      });\r\n      this.getNotificationGroupList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"NotificationGroupComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        operationsVisibilty,\r\n      })\r\n      this.setDefaultValues();\r\n    } catch (error) {\r\n      console.log(\"NotificationGroupComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n  handleRowClick = (item) => {\r\n    \r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnNotificationGroup\r\n      );\r\n      operationsVisibilty.delete = true;\r\n      this.setState({\r\n        isDetails: true,\r\n        notificationData: item.rowData,\r\n        modNotificationData: item.rowData,\r\n        operationsVisibilty,\r\n      })\r\n    } catch (error) {\r\n      console.log(\"NotificationGroupComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n  handleReset = () => {\r\n    try {\r\n      const { validationErrors } = { ...this.state };\r\n      const notificationData = lodash.cloneDeep(this.state.notificationData);\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState({\r\n        modNotificationData: { ...notificationData },\r\n        validationErrors,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"NotificationGroupDetailsComposite:Error occured on handleReset\", error);\r\n    }\r\n  };\r\n  validateSave(modNotificationData) {\r\n    \r\n    var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    Object.keys(notificationGroupValidationDef).forEach(function (key) {\r\n      validationErrors[key] = Utilities.validateField(\r\n        notificationGroupValidationDef[key],\r\n        modNotificationData[key]\r\n      );\r\n    });\r\n    this.setState({\r\n      validationErrors\r\n    })\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n\r\n    return returnValue;\r\n  }\r\n  handleChange = (propertyName, data) => {\r\n    \r\n    try {\r\n      const modNotificationData = lodash.cloneDeep(this.state.modNotificationData);\r\n      modNotificationData[propertyName] = data;\r\n      \r\n      this.setState({ modNotificationData });\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (notificationGroupValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          notificationGroupValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"NotificationGroupDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleDelete = () => {\r\n    \r\n    try {\r\n      this.handleAuthenticationClose();\r\n      let modNotificationData=lodash.cloneDeep(this.state.modNotificationData)\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n      var GroupCode = modNotificationData.GroupCode\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.NotificationGroupCode,\r\n          value: GroupCode,\r\n        },\r\n      ]\r\n      let obj = {\r\n        keyDataCode: KeyCodes.NotificationGroupCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"NotificationGroup_DeleteMsg\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"NotificationGroup_GroupCode\"],\r\n            keyValues: [GroupCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.DeleteNotificationGroup,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          \r\n          var result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess\r\n          if (result.IsSuccess === true) {\r\n            operationsVisibilty.delete = false;\r\n            this.setState({ isReadyToRender: false, operationsVisibilty }, () => {\r\n              this.getNotificationGroupList();\r\n              this.setDefaultValues()\r\n            });\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              \"Notification_DelFailure\";\r\n            operationsVisibilty.delete = true;\r\n            this.setState({ operationsVisibilty });\r\n          }\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n\r\n          \r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error occured while deleting:\" + error);\r\n          var { operationsVisibilty } = { ...this.state };\r\n          operationsVisibilty.delete = true;\r\n          this.setState({ operationsVisibilty });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\"NotificationgroupComposite:Error occured on handleDelete\", error);\r\n    }\r\n  };\r\n\r\n  addUpdateNotificationGroup = () => {\r\n    try {\r\n      this.handleAuthenticationClose();\r\n      this.setState({ saveEnabled: false });\r\n      let tempNotificationData = lodash.cloneDeep(this.state.tempNotificationData);\r\n     \r\n      this.state.notificationData.GroupCode === \"\"\r\n          ? this.CreateNotificationGroup(tempNotificationData)\r\n          : this.updateNotificationGroup(tempNotificationData);\r\n\r\n    } catch (error) {\r\n      console.log(\"Notificatioon Details Composite : Error in addUpdateNotificationGroup\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n      // let modNotificationData = this.fillDetails();\r\n      let modNotificationData = lodash.cloneDeep(this.state.modNotificationData);\r\n      //this.setState({ saveEnabled: false });\r\n      if (this.validateSave(modNotificationData)){\r\n        let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempNotificationData = lodash.cloneDeep(modNotificationData);\r\n      this.setState({ showAuthenticationLayout, tempNotificationData }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.addUpdateNotificationGroup();\r\n        }\r\n    });\r\n      } else this.setState({ saveEnabled: true });\r\n    }\r\n    catch (error) {\r\n      console.log(\"NotificationGroupComposite:Error occured on handleSave\", error);\r\n    }\r\n  };\r\n  setDefaultValues() {\r\n    this.setState({\r\n      modNotificationData: lodash.cloneDeep(emptyNotificationGroup),\r\n      notificationData: lodash.cloneDeep(emptyNotificationGroup)\r\n    })\r\n  }\r\n  CreateNotificationGroup(modNotificationData) {\r\n    try {\r\n\r\n      modNotificationData.Active=modNotificationData.Active === \"\" || modNotificationData.Active === undefined ? true : modNotificationData.Active;\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.NotificationGroupCode,\r\n          value: modNotificationData.GroupCode,\r\n        },\r\n        {\r\n          key: KeyCodes.NotificationGroupStatus,\r\n          value: modNotificationData.Active,\r\n        },\r\n        {\r\n          key: KeyCodes.NotificationGroupDesc,\r\n          value: modNotificationData.Description,\r\n        },\r\n      ];\r\n      let obj = {\r\n        keyDataCode: KeyCodes.NotificationGroupCode,\r\n        KeyCodes: keyCode,\r\n        // Entity: modNotificationData,\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"NotificationGroup_SuccessMsg\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"NotificationGroup_GroupCode\"],\r\n            keyValues: [modNotificationData.GroupCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.CreateNotificationGroup,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n      \r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnNotificationGroup\r\n              ),\r\n              notificationData: modNotificationData,\r\n              modNotificationData: modNotificationData\r\n            },\r\n            () => {\r\n              this.getNotificationGroupList();\r\n              // this.setDefaultValues();\r\n            }\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnNotificationGroup\r\n            ),\r\n          });\r\n          console.log(\"Error in NotificationGroup:\", result.ErrorList);\r\n        }\r\n        const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n        if (notification.messageType === \"success\") {\r\n          operationsVisibilty.add = true;\r\n          operationsVisibilty.delete = true;\r\n          this.setState({ isDetails: true, operationsVisibilty });\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      })\r\n        .catch((error) => {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnNotificationGroup\r\n            ),\r\n          });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in Createnotificationgroup\",error)\r\n    }\r\n  }\r\n  updateNotificationGroup(modNotificationData) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.NotificationGroupCode,\r\n          value: modNotificationData.GroupCode,\r\n        },\r\n        {\r\n          key: KeyCodes.NotificationGroupStatus,\r\n          value: modNotificationData.Active,\r\n        },\r\n        {\r\n          key: KeyCodes.NotificationGroupDesc,\r\n          value: modNotificationData.Description,\r\n        },\r\n      ];\r\n      let obj = {\r\n        keyDataCode: KeyCodes.NotificationGroupCode,\r\n        KeyCodes: keyCode,\r\n        // Entity: modNotificationData,\r\n      };\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"NotificationGroup_SuccessMsg\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"NotificationGroup_GroupCode\"],\r\n            keyValues: [modNotificationData.GroupCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.UpdateNotificationGroup,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n      \r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnNotificationGroup\r\n              ),\r\n            },\r\n            () => {\r\n              this.getNotificationGroupList();\r\n              // this.setDefaultValues();\r\n            }\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnNotificationGroup\r\n            ),\r\n          });\r\n        }\r\n        \r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      \r\n      })\r\n        .catch((error) => {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnNotificationGroup\r\n            ),\r\n          });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error  while updatenotificatiogroup\",error)\r\n    }\r\n  }\r\n  getNotificationGroupList() {\r\n    \r\n    try {\r\n      axios(\r\n        RestAPIs.GetNotificationGroup,\r\n        Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              data: result.EntityResult, isReadyToRender: true, saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnNotificationGroup\r\n              ), });\r\n          } else {\r\n            this.setState({ data: [], isReadyToRender: true });\r\n            console.log(\"Error in getNotificationGroupList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error while getting getNotificationGroupList:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while getnotificationlist\",error)\r\n    }\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false, showDeleteAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  \r\n  getActionType() {\r\n    if (this.state.showDeleteAuthenticationLayout)\r\n     return functionGroups.remove;\r\n   else if (this.state.showAuthenticationLayout)\r\n     return (\r\n      this.state.notificationData.GroupCode === \"\"\r\n      ? functionGroups.add\r\n      : functionGroups.modify\r\n     )\r\n }\r\n\r\n getOperation () {\r\n  if (this.state.showDeleteAuthenticationLayout)\r\n    return this.handleDelete;\r\n  else if (this.state.showAuthenticationLayout)\r\n    return this.addUpdateNotificationGroup;\r\n  \r\n}\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showDeleteAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showDeleteAuthenticationLayout });\r\n      if (showDeleteAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"NotificationGroup Delete : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"buttonstyle\">\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n            onDelete={this.authenticateDelete}\r\n            onAdd={this.handleAdd}\r\n            shrVisible={false}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n          {this.state.isReadyToRender ? (\r\n            <ErrorBoundary>\r\n              <NotificationGroupSummaryPageComposite\r\n              tableData={this.state.data.Table}\r\n              pageSize={\r\n                this.props.userDetails.EntityResult.PageAttibutes\r\n                  .WebPortalListPageSize\r\n              }\r\n              terminalsToShow={\r\n                this.props.userDetails.EntityResult.PageAttibutes\r\n                  .NoOfTerminalsToShow\r\n              }\r\n              onRowClick={this.handleRowClick}\r\n              modNotificationData={this.state.modNotificationData}\r\n              notificationData={this.state.notificationData}\r\n               isDetails={this.state.isDetails}\r\n              handleSave={this.handleSave}\r\n              onFieldChange={this.handleChange}\r\n              handleReset={this.handleReset}\r\n              validationErrors={this.state.validationErrors}\r\n              saveEnabled={this.state.saveEnabled}\r\n              ></NotificationGroupSummaryPageComposite>\r\n          </ErrorBoundary>\r\n        ) : (\r\n          <>\r\n              <LoadingPage message=\"Loading\"></LoadingPage>\r\n          </>\r\n        )}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout || this.state.showDeleteAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={this.getActionType()}\r\n            functionGroup={fnNotificationGroup}\r\n            handleOperation={this.getOperation()}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n    \r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      userDetails: state.getUserDetails.userDetails,\r\n      tokenDetails: state.getUserDetails.TokenAuth,\r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps)(NotificationGroupComposite);\r\n  \r\n  NotificationGroupComposite.propTypes = {\r\n    activeItem: PropTypes.object,\r\n  };\r\n","import React from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { Input,  Button  } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nNotificationRestrictionSummaryPageComposite.propTypes = {\r\n    tableData: PropTypes.object.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    modNotificationData: PropTypes.object.isRequired,\r\n    isDetails: PropTypes.bool.isRequired,\r\n    handleSave: PropTypes.func.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    handleReset: PropTypes.func.isRequired,\r\n    validationErrors: PropTypes.object.isRequired,\r\n    saveEnabled:PropTypes.bool.isRequired\r\n};\r\nexport function NotificationRestrictionSummaryPageComposite({\r\n    tableData,\r\n    pageSize,\r\n    onRowClick,\r\n    modNotificationData,\r\n    handleSave,\r\n    onFieldChange,\r\n    handleReset,\r\n    validationErrors,\r\n    saveEnabled\r\n}) {\r\n    const [t] = useTranslation();\r\n    return (\r\n\r\n        <div className=\"detailsContainer\" style={{ marginTop: \"-2rem\" }}>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                    <Input\r\n                        // key={index}\r\n                        fluid\r\n                        value={modNotificationData.MessageSource}\r\n                        indicator=\"required\"\r\n                        onChange={(data) => onFieldChange(\"MessageSource\", data)}\r\n                        label={t(\"NotificationRestriction_Source\")}\r\n                        error={t(validationErrors.MessageSource)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        // key={index}\r\n                        fluid\r\n                        value={ modNotificationData.MessageCode}\r\n                        onChange={(data) => onFieldChange(\"MessageCode\", data)}\r\n                        indicator=\"required\"\r\n                        label={t(\"NotificationRestriction_MessageCode\")}\r\n                        error={t(validationErrors.MessageCode)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <div style={{ float: \"right\" ,marginTop:\"1.5rem\"}}>\r\n                        <Button\r\n                            content={t(\"NotificationGroup_Reset\")}\r\n                            className=\"cancelButton\"\r\n                            onClick={() => handleReset()}\r\n                        />\r\n                        <Button\r\n                            type=\"primary\"\r\n                            content={t(\"NotificationGroup_Save\")}\r\n                            disabled={!saveEnabled}\r\n                            onClick={() => handleSave()}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row marginRightZero tableScroll\">\r\n                <div className=\"col-12 detailsTable\" >\r\n                    <DataTable\r\n                        data={tableData}\r\n                        search={true}\r\n                        onCellClick={(data) =>\r\n                            onRowClick !== undefined ? onRowClick(data) : {}\r\n                        }\r\n                    >\r\n                        <DataTable.ActionBar />\r\n                        <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"MessageSource\"\r\n                            field=\"MessageSource\"\r\n                            sortable={true}\r\n                            header={t(\"NotificationRestriction_Source\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"MessageCode\"\r\n                            field=\"MessageCode\"\r\n                            header={t(\"NotificationRestriction_MessageCode\")}\r\n                        ></DataTable.Column>\r\n                        {Array.isArray(tableData) && tableData.length > pageSize ? (\r\n                            <DataTable.Pagination />\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                    </DataTable>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        // <TMSummaryPageComposite\r\n        //   tableData={tableData}\r\n        //   columnDetails={columnDetails}\r\n        //   pageSize={pageSize}\r\n        //   terminalsToShow={terminalsToShow}\r\n        //   selectedItems={selectedItems}\r\n        //   onSelectionChange={onSelectionChange}\r\n        //   onRowClick={onRowClick}\r\n        // ></TMSummaryPageComposite>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { NotificationRestrictionSummaryPageComposite } from \"../Summary/NotificationRestrictionSummaryComposite\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport lodash from \"lodash\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { functionGroups, fnNotificationRestriction } from \"../../../JS/FunctionGroups\";\r\nimport { emptyNotificationRestriction } from \"../../../JS/DefaultEntities\";\r\nimport { notificationRestrictionValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nclass NotificationRestrictionComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n    selectedRow: {},\r\n    data: [],\r\n    notificationData: lodash.cloneDeep(emptyNotificationRestriction),\r\n    validationErrors: Utilities.getInitialValidationErrors(notificationRestrictionValidationDef),\r\n    modNotificationData: {},\r\n    saveEnabled: false,\r\n    showAuthenticationLayout: false,\r\n    showDeleteAuthenticationLayout : false,\r\n    tempNotificationData: {},\r\n  }\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnNotificationRestriction\r\n      );\r\n      this.setState({\r\n        operationsVisibilty,\r\n      });\r\n      this.getNotificationRestrictionList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"NotificationGroupComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  handleAdd = () => {\r\n    \r\n    try {\r\n      var { operationsVisibilty} = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        operationsVisibilty,\r\n      })\r\n      this.setDefaultValues();\r\n    } catch (error) {\r\n      console.log(\"NotificationRestrictionComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n  setDefaultValues() {\r\n    this.setState({\r\n      modNotificationData: lodash.cloneDeep(emptyNotificationRestriction),\r\n      notificationData: lodash.cloneDeep(emptyNotificationRestriction)\r\n    })\r\n  }\r\n  handleRowClick = (item) => {\r\n\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnNotificationRestriction\r\n      );\r\n      operationsVisibilty.delete = true;\r\n      this.setState({\r\n        isDetails: true,\r\n        notificationData: item.rowData,\r\n        modNotificationData:item.rowData,\r\n        operationsVisibilty,\r\n      })\r\n    } catch (error) {\r\n      console.log(\"NotificationRestrictionComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n  handleReset = () => {\r\n    try {\r\n      const { validationErrors } = { ...this.state };\r\n      const notificationData = lodash.cloneDeep(this.state.notificationData);\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState({\r\n        modNotificationData: { ...notificationData },\r\n        validationErrors,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"NotificationGroupDetailsComposite:Error occured on handleReset\", error);\r\n    }\r\n  };\r\n  validateSave(modNotificationData) {\r\n    try {\r\n      var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      Object.keys(notificationRestrictionValidationDef).forEach(function (key) {\r\n        validationErrors[key] = Utilities.validateField(\r\n          notificationRestrictionValidationDef[key],\r\n          modNotificationData[key]\r\n        );\r\n      });\r\n      this.setState({\r\n        validationErrors\r\n      })\r\n      var returnValue = true;\r\n      if (returnValue)\r\n        returnValue = Object.values(validationErrors).every(function (value) {\r\n          return value === \"\";\r\n        });\r\n\r\n\r\n      return returnValue;\r\n    } catch (error) {\r\n      console.log(\"Error in Validatesave\",error)\r\n    }\r\n  }\r\n  handleChange = (propertyName, data) => {\r\n\r\n    try {\r\n      const modNotificationData = lodash.cloneDeep(this.state.modNotificationData);\r\n      modNotificationData[propertyName] = data;\r\n      this.setState({ modNotificationData });\r\n\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (notificationRestrictionValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          notificationRestrictionValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"NotificationGroupDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n \r\n  handleDelete = () => {\r\n   \r\n    try {\r\n      this.handleAuthenticationClose();\r\n      let modNotificationData = lodash.cloneDeep(this.state.modNotificationData)\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n      var MessageCode = modNotificationData.MessageCode\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.NotificationResMsgCode,\r\n          value: modNotificationData.MessageCode,\r\n        },\r\n\r\n        {\r\n          key: KeyCodes.NotificationResSource,\r\n          value: modNotificationData.MessageSource,\r\n        },\r\n      ]\r\n      let obj = {\r\n        keyDataCode: KeyCodes.NotificationResMsgCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"NotificationRestriction_DeleteMsg\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"NotificationGroup_GroupCode\"],\r\n            keyValues: [MessageCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.DeleteNotificationRestriction,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n\r\n          var result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess\r\n          if (result.IsSuccess === true) {\r\n            operationsVisibilty.delete = false;\r\n            this.setState({ isReadyToRender: false, operationsVisibilty }, () => {\r\n              this.getNotificationRestrictionList();\r\n              this.setDefaultValues();\r\n            });\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              \"Notification_DelFailure\";\r\n            operationsVisibilty.delete = true;\r\n            this.setState({ operationsVisibilty });\r\n          }\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error occured while deleting:\" + error);\r\n          var { operationsVisibilty } = { ...this.state };\r\n          operationsVisibilty.delete = true;\r\n          this.setState({ operationsVisibilty });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\"NotificationgroupComposite:Error occured on handleDelete\", error);\r\n    }\r\n  };\r\n\r\n  addUpdateNotificationRestriction = () => {\r\n    try {\r\n      this.handleAuthenticationClose();\r\n      this.setState({ saveEnabled: false });\r\n      let tempNotificationData = lodash.cloneDeep(this.state.tempNotificationData);\r\n     \r\n      this.state.notificationData.MessageSource === \"\"\r\n          ? this.CreateNotificationRestriction(tempNotificationData)\r\n          : this.updateNotificationRestriction(tempNotificationData);\r\n\r\n    } catch (error) {\r\n      console.log(\"Restrict Notification Details Composite : Error in addUpdateNotificationRestriction\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n      let modNotificationData = lodash.cloneDeep(this.state.modNotificationData);\r\n     // this.setState({ saveEnabled: false });\r\n      if (this.validateSave(modNotificationData)) {\r\n\r\n        let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempNotificationData = lodash.cloneDeep(modNotificationData);\r\n      this.setState({ showAuthenticationLayout, tempNotificationData }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.addUpdateNotificationRestriction();\r\n        }\r\n    });\r\n\r\n         \r\n      \r\n      \r\n        } else this.setState({ saveEnabled: true });\r\n    }\r\n    catch (error) {\r\n      console.log(\"NotificationGroupComposite:Error occured on handleSave\", error);\r\n    }\r\n  };\r\n  CreateNotificationRestriction(modNotificationData) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.NotificationResMsgCode,\r\n          value: modNotificationData.MessageCode,\r\n        },\r\n      \r\n        {\r\n          key: KeyCodes.NotificationResSource,\r\n          value: modNotificationData.MessageSource,\r\n        },\r\n      ];\r\n      let obj = {\r\n        keyDataCode: KeyCodes.NotificationResMsgCode,\r\n        KeyCodes: keyCode,\r\n        // Entity: modNotificationData,\r\n      };\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"NotificationRestriction_SuccessMsg\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"NotificationRestriction_MessageCode\"],\r\n            keyValues: [modNotificationData.MessageCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.CreateNotificationRestriction,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        console.log(result)\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnNotificationRestriction\r\n              ),\r\n            },\r\n            () => {\r\n              this.getNotificationRestrictionList();\r\n              this.setDefaultValues();\r\n            }\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnNotificationRestriction\r\n            ),\r\n          });\r\n          console.log(\"Error in NotificationGroup:\", result.ErrorList);\r\n        }\r\n        const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n        if (notification.messageType === \"success\") {\r\n          operationsVisibilty.add = true;\r\n          operationsVisibilty.delete = false;\r\n          this.setState({ isDetails: true, operationsVisibilty });\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      })\r\n        .catch((error) => {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnNotificationRestriction\r\n            ),\r\n          });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in getnotificationrestriction\",error)\r\n    }\r\n  }\r\n  updateNotificationRestriction(modNotificationData) {\r\n    try {\r\n      let notificationData = lodash.cloneDeep(this.state.notificationData)\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.NotificationResMsgCode,\r\n          value: modNotificationData.MessageCode,\r\n        },\r\n\r\n        {\r\n          key: KeyCodes.NotificationResSource,\r\n          value: modNotificationData.MessageSource,\r\n        },\r\n        {\r\n          key: KeyCodes.NotificationOrigResMsgCode,\r\n          value: notificationData.MessageCode,\r\n        },\r\n\r\n        {\r\n          key: KeyCodes.NotificationOrigResSource,\r\n          value: notificationData.MessageSource,\r\n        },\r\n      ];\r\n      let obj = {\r\n        keyDataCode: KeyCodes.NotificationResMsgCode,\r\n        KeyCodes: keyCode,\r\n        // Entity: modNotificationData,\r\n      };\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"NotificationRestriction_SuccessMsg\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"NotificationRestriction_MessageCode\"],\r\n            keyValues: [modNotificationData.MessageCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.UpdateNotificationRestriction,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnNotificationRestriction\r\n              ),\r\n            },\r\n            () => {\r\n              this.getNotificationRestrictionList();\r\n              this.setDefaultValues();\r\n            }\r\n          );\r\n\r\n          const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n          if (notification.messageType === \"success\") {\r\n            operationsVisibilty.add = true;\r\n            operationsVisibilty.delete = false;\r\n            this.setState({ isDetails: true, operationsVisibilty });\r\n          }\r\n\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnNotificationRestriction\r\n            ),\r\n          });\r\n        }\r\n        console.log(\"Error in update NotificationGroup:\", result.ErrorList);\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n\r\n      })\r\n        .catch((error) => {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnNotificationRestriction\r\n            ),\r\n          });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in update NotificationGroup\",error)\r\n    }\r\n  }\r\n  getNotificationRestrictionList() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetNotificationRestriction,\r\n        Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n      )\r\n        .then((response) => {\r\n        \r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              data: result.EntityResult, isReadyToRender: true, saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnNotificationRestriction\r\n              ), });\r\n          } else {\r\n            this.setState({ data: [], isReadyToRender: true });\r\n            console.log(\"Error in getNotificationGroupList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error while getting getNotificationGroupList:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in getNotificationRestriction\",error)\r\n    }\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false, showDeleteAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  \r\n  getActionType() {\r\n    if (this.state.showDeleteAuthenticationLayout)\r\n     return functionGroups.remove;\r\n   else if (this.state.showAuthenticationLayout)\r\n     return (\r\n      this.state.notificationData.MessageSource === \"\"\r\n      ? functionGroups.add\r\n      : functionGroups.modify\r\n     )\r\n }\r\n\r\n getOperation() {\r\n  if (this.state.showDeleteAuthenticationLayout)\r\n    return this.handleDelete;\r\n  else if (this.state.showAuthenticationLayout)\r\n    return this.addUpdateNotificationRestriction;\r\n  \r\n}\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showDeleteAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showDeleteAuthenticationLayout });\r\n      if (showDeleteAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"NotificationResctriction Delete : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n    render() {\r\n    // const user = this.props.userDetails.EntityResult;\r\n    // let tmuiInstallType=TMUIInstallType.LIVE;\r\n    // if(user.IsArchived)\r\n    // tmuiInstallType=TMUIInstallType.ARCHIVE;\r\n        return (\r\n          <div className=\"buttonstyle\">\r\n            <ErrorBoundary>\r\n              <TMUserActionsComposite\r\n                operationsVisibilty={this.state.operationsVisibilty}\r\n                shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n                onDelete={this.authenticateDelete}\r\n                onAdd={this.handleAdd}\r\n                shrVisible={false}\r\n              ></TMUserActionsComposite>\r\n            </ErrorBoundary>\r\n            {this.state.isReadyToRender ? (\r\n              <ErrorBoundary>\r\n                <NotificationRestrictionSummaryPageComposite\r\n                  tableData={this.state.data.Table}\r\n                  pageSize={\r\n                    this.props.userDetails.EntityResult.PageAttibutes\r\n                      .WebPortalListPageSize\r\n                  }\r\n                  terminalsToShow={\r\n                    this.props.userDetails.EntityResult.PageAttibutes\r\n                      .NoOfTerminalsToShow\r\n                  }\r\n                  selectedRow={this.state.selectedRow}\r\n                  onRowClick={this.handleRowClick}\r\n                  modNotificationData={this.state.modNotificationData}\r\n                  isDetails={this.state.isDetails}\r\n                  handleSave={this.handleSave}\r\n                  onFieldChange={this.handleChange}\r\n                  handleReset={this.handleReset}\r\n                  validationErrors={this.state.validationErrors}\r\n                  saveEnabled={this.state.saveEnabled}\r\n                ></NotificationRestrictionSummaryPageComposite>\r\n              </ErrorBoundary>\r\n            ) : (\r\n              <>\r\n                <LoadingPage message=\"Loading\"></LoadingPage>\r\n              </>\r\n            )}\r\n            <ErrorBoundary>\r\n              <ToastContainer\r\n                hideProgressBar={true}\r\n                closeOnClick={false}\r\n                closeButton={true}\r\n                newestOnTop={true}\r\n                position=\"bottom-right\"\r\n                toastClassName=\"toast-notification-wrap\"\r\n              />\r\n            </ErrorBoundary>\r\n            {this.state.showAuthenticationLayout || this.state.showDeleteAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={this.getActionType()}\r\n            functionGroup={fnNotificationRestriction}\r\n            handleOperation={this.getOperation()}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n\r\n        </div>\r\n        \r\n        // {/* <ErrorBoundary>\r\n        //   <div className=\"detailsContainer\">\r\n        //     <object\r\n        //       className=\"tmuiPlaceHolder\"\r\n        //       type=\"text/html\"\r\n        //       width=\"100%\"\r\n        //       height=\"880px\"\r\n        //       //data=\"http://localhost/tmui/NotificationRestriction.aspx\"\r\n        //       data={\"/\"+ tmuiInstallType +\"/NotificationRestriction.aspx\"}\r\n        //     ></object>\r\n        //   </div>\r\n        // </ErrorBoundary> */}\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      userDetails: state.getUserDetails.userDetails,\r\n      tokenDetails: state.getUserDetails.TokenAuth,\r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps)(NotificationRestrictionComposite);\r\n  \r\n  NotificationRestrictionComposite.propTypes = {\r\n    activeItem: PropTypes.object,\r\n  };\r\n","import React, { Component } from \"react\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport {Tab} from \"@scuf/common\";\r\nimport  NotificationGroupComposite  from \"../Entity/NotificationGroupComposite\";\r\nimport NotificationRestrictionComposite from \"../Entity/NotificationRestrictionComposite\";\r\nimport NotificationMessageComposite from \"../Entity/NotificationMessageComposite\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nclass NotificationSettingsComposite extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundary>\r\n                    <TMUserActionsComposite\r\n                        breadcrumbItem={this.props.activeItem}\r\n                        shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n                        deleteVisible={false}\r\n                        addVisible={false}\r\n                        shrVisible={false}\r\n                        handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n                    ></TMUserActionsComposite>\r\n                </ErrorBoundary>\r\n                <TranslationConsumer>\r\n            {(t) => (\r\n                   <div className=\"notificationTabAlignment\">\r\n                 <Tab defaultActiveIndex={0}>\r\n                  <Tab.Pane title={t(\"Group\")}>\r\n                <NotificationGroupComposite />\r\n                </Tab.Pane>\r\n                <Tab.Pane title={t(\"Messages\")}>\r\n                  <NotificationMessageComposite/>\r\n                </Tab.Pane>\r\n                <Tab.Pane title={t(\"Restriction\")}>\r\n                <NotificationRestrictionComposite />\r\n                </Tab.Pane>\r\n                </Tab>\r\n                            \r\n                </div>\r\n                    )}\r\n                </TranslationConsumer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userDetails: state.getUserDetails.userDetails,\r\n        tokenDetails: state.getUserDetails.TokenAuth,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NotificationSettingsComposite);\r\n\r\nNotificationGroupComposite.propTypes = {\r\n    activeItem: PropTypes.object,\r\n};"],"names":["NotificationGroupSummaryPageComposite","_ref","tableData","pageSize","onRowClick","modNotificationData","handleSave","onFieldChange","onActiveStatusChange","handleReset","validationErrors","notificationData","saveEnabled","t","useTranslation","_jsxs","className","style","marginTop","children","_jsx","Input","fluid","value","GroupCode","indicator","onChange","data","label","error","reserveSpace","disabled","Select","placeholder","Active","undefined","options","text","Description","float","Button","content","onClick","type","DataTable","search","onCellClick","ActionBar","Column","field","sortable","header","renderer","cellData","Icon","name","size","color","displayValues","Array","isArray","length","Pagination","NotificationGroupComposite","Component","constructor","arguments","state","isDetails","isReadyToRender","isDetailsModified","operationsVisibilty","add","delete","shareholder","selectedRow","lodash","emptyNotificationGroup","Utilities","notificationGroupValidationDef","showAuthenticationLayout","showDeleteAuthenticationLayout","tempNotificationData","handleAdd","this","setState","setDefaultValues","console","log","handleRowClick","item","props","userDetails","EntityResult","FunctionsList","functionGroups","fnNotificationGroup","rowData","Object","keys","forEach","key","handleChange","propertyName","handleDelete","handleAuthenticationClose","keyCode","KeyCodes","obj","keyDataCode","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","getNotificationGroupList","toast","ErrorBoundary","NotifyEvent","notificationMessage","autoClose","catch","addUpdateNotificationGroup","CreateNotificationGroup","updateNotificationGroup","validateSave","IsWebPortalUser","authenticateDelete","componentDidMount","IsArchived","returnValue","values","every","modify","ErrorList","getActionType","remove","getOperation","render","TMUserActionsComposite","shareholders","ShareholderList","onDelete","onAdd","shrVisible","Table","PageAttibutes","WebPortalListPageSize","terminalsToShow","NoOfTerminalsToShow","_Fragment","LoadingPage","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","position","toastClassName","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","connect","getUserDetails","TokenAuth","NotificationRestrictionSummaryPageComposite","MessageSource","MessageCode","NotificationRestrictionComposite","emptyNotificationRestriction","notificationRestrictionValidationDef","fnNotificationRestriction","getNotificationRestrictionList","addUpdateNotificationRestriction","CreateNotificationRestriction","updateNotificationRestriction","NotificationSettingsComposite","breadcrumbItem","activeItem","deleteVisible","addVisible","handleBreadCrumbClick","TranslationConsumer","Tab","defaultActiveIndex","Pane","title","NotificationMessageComposite","propTypes","PropTypes"],"sourceRoot":""}