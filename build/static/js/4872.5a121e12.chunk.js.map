{"version":3,"file":"static/js/4872.5a121e12.chunk.js","mappings":"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","sources":["Components/UIBase/Details/TankManualEntryDetails.jsx","Components/Composite/Details/TankManualEntryDetailsComposite.jsx","JS/functionalUtilities.js"],"sourcesContent":["import React from \"react\";\r\nimport { DataTable } from '@scuf/datatable';\r\nimport { Input, Select, DatePicker, Icon } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getOptionsWithSelect,\r\n  getCurrentDateFormat,\r\n} from \"../../../JS/functionalUtilities\";\r\n\r\nTankManualEntryDetails.propTypes = {\r\n  entryDate: PropTypes.object.isRequired,\r\n  modAssociations: PropTypes.array.isRequired,\r\n  selectedAssociations: PropTypes.array.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    tankCode: PropTypes.array,\r\n    baseProductCode: PropTypes.array,\r\n    quantityUOM: PropTypes.array,\r\n    densityQuantityUOM: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onTankSearchChange: PropTypes.func.isRequired,\r\n  handleAddAssociation: PropTypes.func.isRequired,\r\n  handleDeleteAssociation: PropTypes.func.isRequired,\r\n  handleAssociationSelectionChange: PropTypes.func.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired\r\n}\r\nTankManualEntryDetails.defaultProps = { isEnterpriseNode: false };\r\n\r\nexport function TankManualEntryDetails({\r\n  entryDate,\r\n  modAssociations,\r\n  selectedAssociations,\r\n  listOptions,\r\n  onFieldChange,\r\n  onTankSearchChange,\r\n  handleAddAssociation,\r\n  handleDeleteAssociation,\r\n  handleAssociationSelectionChange,\r\n  handleCellDataEdit,\r\n  isEnterpriseNode,\r\n}) {\r\n\r\n  const [t] = useTranslation();\r\n\r\n  const handleCustomEditDropDown = (cellData, dropDownOptions) => {\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownOptions}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleTankEditDropDown = (cellData) => {\r\n    return (\r\n      <Select\r\n        fluid\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        options={getOptionsWithSelect(\r\n          listOptions.tankCode,\r\n          t(\"Common_Select\")\r\n        )}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        search={true}\r\n        reserveSpace={false}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n        onSearch={onTankSearchChange}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleCustomEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  const decimalDisplayValues = (cellData) => {\r\n    const { value } = cellData;\r\n    if (typeof value === \"number\") {\r\n      return value.toLocaleString();\r\n    } else {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div style={{ padding: \"0 15px 15px 15px\" }}>\r\n              <DatePicker\r\n                fluid\r\n                value={entryDate === null ? \"\" : new Date(entryDate)}\r\n                label={t(\"TankEODEntry_EODEntryDate\")}\r\n                type=\"date\"\r\n                displayFormat={getCurrentDateFormat()}\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"EntryTime\", data)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row compartmentRow\">\r\n            <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n              <h4>{t(\"TankEODEntry_PageTitle\")}</h4>\r\n            </div>\r\n            <div className=\"col col-md-4 col-lg-3 col-xl-3\">\r\n              <div className=\"compartmentIconContainer\">\r\n                <div onClick={handleAddAssociation} className=\"compartmentIcon\">\r\n                  <div>\r\n                    <Icon root=\"common\" name=\"badge-plus\" size=\"medium\" />\r\n                  </div>\r\n                  <div className=\"margin_l10\">\r\n                    <h5 className=\"font14\">{t(\"FinishedProductInfo_Add\")}</h5>\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  onClick={handleDeleteAssociation}\r\n                  className=\"compartmentIcon margin_l30\"\r\n                >\r\n                  <div>\r\n                    <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n                  </div>\r\n                  <div className=\"margin_l10\">\r\n                    <h5 className=\"font14\">{t(\"DestAdd_Delete\")}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-12 detailsTable\">\r\n              <DataTable\r\n                data={modAssociations}\r\n                selectionMode=\"multiple\"\r\n                selection={selectedAssociations}\r\n                onSelectionChange={handleAssociationSelectionChange}\r\n              >\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"TankCode\"\r\n                  field=\"TankCode\"\r\n                  header={t(\"TankEODEntry_TankCode\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) => handleTankEditDropDown(cellData)}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"BaseProductCode\"\r\n                  field=\"BaseProductCode\"\r\n                  header={t(\"TankEODEntry_Product\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditDropDown(\r\n                      cellData,\r\n                      listOptions.baseProductCode\r\n                    )\r\n                  }\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"EOPGrossVolume\"\r\n                  field=\"EOPGrossVolume\"\r\n                  header={t(\"TankEODEntry_GrossQty\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                  customEditRenderer={handleCustomEditTextBox}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"EOPNetVolume\"\r\n                  field=\"EOPNetVolume\"\r\n                  header={t(\"TankEODEntry_NetQty\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                  customEditRenderer={handleCustomEditTextBox}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"QuantityUOM\"\r\n                  field=\"QuantityUOM\"\r\n                  header={t(\"TankUnaccountedTransaction_QuantityUOM\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditDropDown(\r\n                      cellData,\r\n                      listOptions.quantityUOM\r\n                    )\r\n                  }\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"EOPMassVolume\"\r\n                  field=\"EOPMassVolume\"\r\n                  header={t(\"TankEODEntry_MassVolume\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                  customEditRenderer={handleCustomEditTextBox}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"MassQuantityUOM\"\r\n                  field=\"MassQuantityUOM\"\r\n                  header={t(\"TankEODEntry_MassQuantityUOM\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditDropDown(\r\n                      cellData,\r\n                      listOptions.densityQuantityUOM\r\n                    )\r\n                  }\r\n                ></DataTable.Column>\r\n              </DataTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TankManualEntryDetails } from \"../../UIBase/Details/TankManualEntryDetails\";\r\n\r\nimport lodash from \"lodash\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { tankManualEntryDetailsDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport { functionGroups, fnTankEODEntry } from \"../../../JS/FunctionGroups\";\r\nimport axios from \"axios\";\r\nimport ErrorBoundary from \"./../../../Components/ErrorBoundary\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button } from \"@scuf/common\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass TankManualEntryDetailsComposite extends Component {\r\n  state = {\r\n    entryDate: new Date(),\r\n    isReadyToRender: false,\r\n    associations: [],\r\n    modAssociations: [],\r\n    selectedAssociations: [],\r\n    tankCodeOptions: [],\r\n    tankCodeSearchOptions: [],\r\n    baseProductCodeOptions: [],\r\n    quantityUOMOptions: [],\r\n    massQuantityUOMOptions: [],\r\n    saveEnabled: false,\r\n    showAuthenticationLayout: false,\r\n    tempAssociations: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getTankCodes(this.props.userDetails.EntityResult.PrimaryShareholder);\r\n      this.getBaseProductCodes();\r\n      this.getUOMs();\r\n      this.getTankManualEntryData(this.state.entryDate);\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankManualEntryDetailsComposite: Error occurred on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps() {\r\n    try {\r\n      this.getTankManualEntryData(this.state.entryDate);\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankManualEntryDetailsComposite: Error occurred on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getTankCodes(shareholder) {\r\n    axios(\r\n      RestAPIs.GetTanks + \"?ShareholderCode=\" + shareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            const tankCodeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            let tankCodeSearchOptions = lodash.cloneDeep(tankCodeOptions);\r\n            if (tankCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n              tankCodeSearchOptions = tankCodeSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({\r\n              tankCodeOptions,\r\n              tankCodeSearchOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getTankCode:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getTankCode:\", error);\r\n      });\r\n  }\r\n\r\n  getBaseProductCodes() {\r\n    axios(\r\n      RestAPIs.GetBaseProducts,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult !== undefined\r\n          ) {\r\n            const productList = [];\r\n            for (let key in result.EntityResult) {\r\n              for (let productCode of result.EntityResult[key]) {\r\n                productList.push(productCode);\r\n              }\r\n            }\r\n            this.setState({\r\n              baseProductCodeOptions: Utilities.transferListtoOptions(\r\n                productList\r\n              ),\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getBaseProductList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Base Product List:\", error);\r\n      });\r\n  }\r\n\r\n  getUOMs() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult.VOLUME)\r\n          ) {\r\n            const quantityUOMOptions = [];\r\n            const massQuantityUOMOptions = [];\r\n            result.EntityResult.VOLUME.forEach((UOM) => {\r\n              quantityUOMOptions.push({\r\n                text: UOM,\r\n                value: UOM,\r\n              });\r\n            });\r\n            result.EntityResult.MASS.forEach((UOM) => {\r\n              quantityUOMOptions.push({\r\n                text: UOM,\r\n                value: UOM,\r\n              });\r\n              massQuantityUOMOptions.push({\r\n                text: UOM,\r\n                value: UOM,\r\n              });\r\n            });\r\n            this.setState({ quantityUOMOptions, massQuantityUOMOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in GetUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getTankManualEntryData(entryDate) {\r\n    axios(\r\n      RestAPIs.GetTankEODData + \"?EntryDate=\" + entryDate.toISOString(),\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          const associations =\r\n            result.EntityResult === null ? [] : result.EntityResult;\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            associations: associations,\r\n            modAssociations: lodash.cloneDeep(associations),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnTankEODEntry\r\n            ),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            associations: [],\r\n            modAssociations: [],\r\n            saveEnabled: false,\r\n          });\r\n          console.log(\"Error in getTankManualEntryData:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting TankManualEntryData:\", error);\r\n      });\r\n  }\r\n\r\n  handleAssociationSelectionChange = (e) => {\r\n    this.setState({ selectedAssociations: e });\r\n  };\r\n\r\n  handleAddAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        const modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n        const newComp = {\r\n          BaseProductCode: \"\",\r\n          BOPGrossVolume: \"\",\r\n          BOPMassVolume: \"\",\r\n          BOPNetVolume: \"\",\r\n          EOPGrossVolume: \"\",\r\n          EOPMassVolume: \"\",\r\n          EOPNetVolume: \"\",\r\n          MassQuantityUOM: \"\",\r\n          QuantityUOM: \"\",\r\n          ReconciliationCode: \"\",\r\n          TransactionTotalGrossQty: \"\",\r\n          TransactionTotalNetQty: \"\",\r\n          TankCode: \"\",\r\n        };\r\n        newComp.SeqNumber = Utilities.getMaxSeqNumberfromListObject(\r\n          this.state.modAssociations\r\n        );\r\n        modAssociations.push(newComp);\r\n        this.setState({\r\n          modAssociations,\r\n          selectedAssociations: [],\r\n        });\r\n      } catch (error) {\r\n        console.log(\r\n          \"TankManualEntryDetailsComposite: Error occurred on handleAddAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDeleteAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedAssociations != null &&\r\n          this.state.selectedAssociations.length > 0\r\n        ) {\r\n          if (this.state.modAssociations.length > 0) {\r\n            let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n\r\n            this.state.selectedAssociations.forEach((obj, index) => {\r\n              modAssociations = modAssociations.filter((com, cindex) => {\r\n                return com.SeqNumber !== obj.SeqNumber;\r\n              });\r\n            });\r\n\r\n            this.setState({ modAssociations });\r\n          }\r\n        }\r\n\r\n        this.setState({ selectedAssociations: [] });\r\n      } catch (error) {\r\n        console.log(\r\n          \"TankManualEntryDetailsComposite: Error occurred on handleDeleteAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      this.getTankManualEntryData(data);\r\n      this.setState({ entryDate: data });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankManualEntryDetailsComposite: Error occurred on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n    modAssociations[cellData.rowIndex][cellData.field] = newVal;\r\n    this.setState({ modAssociations });\r\n  };\r\n\r\n  handleTankSearchChange = (tankCode) => {\r\n    try {\r\n      let tankCodeSearchOptions = this.state.tankCodeOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(tankCode.toLowerCase())\r\n      );\r\n\r\n      if (tankCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n        tankCodeSearchOptions = tankCodeSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        tankCodeSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankManualEntryDetailsComposite: Error occurred on handleTankSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getTankCodeSearchOptions() {\r\n    let tankCodeSearchOptions = lodash.cloneDeep(\r\n      this.state.tankCodeSearchOptions\r\n    );\r\n    // let modTankCode = this.state.modLeakageManualEntry.TankCode;\r\n    // if (\r\n    //   modTankCode !== null &&\r\n    //   modTankCode !== \"\" &&\r\n    //   modTankCode !== undefined\r\n    // ) {\r\n    //   let selectedTankCode = tankCodeSearchOptions.find(\r\n    //     (element) => element.value.toLowerCase() === modTankCode.toLowerCase()\r\n    //   );\r\n    //   if (selectedTankCode === undefined) {\r\n    //     tankCodeSearchOptions.push({\r\n    //       text: modTankCode,\r\n    //       value: modTankCode,\r\n    //     });\r\n    //   }\r\n    // }\r\n    return tankCodeSearchOptions;\r\n  }\r\n\r\n  handleTankManualEntry = () => {\r\n    this.setState({ saveEnabled: false });\r\n    this.handleAuthenticationClose();\r\n    let tempAssociations = lodash.cloneDeep(this.state.tempAssociations);\r\n    for (let item of tempAssociations) {\r\n      item.EOPGrossVolume = Utilities.convertStringtoDecimal(item.EOPGrossVolume);\r\n      item.EOPNetVolume = Utilities.convertStringtoDecimal(item.EOPNetVolume);\r\n      item.EOPMassVolume = Utilities.convertStringtoDecimal(item.EOPMassVolume);\r\n      item.MassQuantityUOM = Utilities.convertStringtoDecimal(item.MassQuantityUOM);\r\n    }\r\n    const isAdd = this.state.associations.length === 0;\r\n    this.updateTankEODData(isAdd, tempAssociations);\r\n  };\r\n\r\n\r\n  handleSave = () => {\r\n    try {\r\n    \r\n      const modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n      if (this.validateSave(modAssociations)) {\r\n\r\n        let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempAssociations = lodash.cloneDeep(modAssociations);\r\n      this.setState({ showAuthenticationLayout, tempAssociations }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.handleTankManualEntry();\r\n        }\r\n    });\r\n\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankManualEntryDetailsComposite: Error occurred on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateSave(modAssociations) {\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"TankEODEntry_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    if (Array.isArray(modAssociations) && modAssociations.length > 0) {\r\n      modAssociations.forEach((compart) => {\r\n        tankManualEntryDetailsDef.forEach((col) => {\r\n          let err = \"\";\r\n\r\n          if (col.validator !== undefined) {\r\n            err = Utilities.validateField(col.validator, compart[col.field]);\r\n          }\r\n          if (err !== \"\") {\r\n            notification.messageResultDetails.push({\r\n              keyFields: [col.displayName],\r\n              keyValues: [compart[col.field]],\r\n              isSuccess: false,\r\n              errorMessage: err,\r\n            });\r\n          }\r\n        });\r\n        if (\r\n          (compart.EOPMassVolume === \"\" && compart.MassQuantityUOM !== \"\") ||\r\n          (compart.MassQuantityUOM === \"\" && compart.EOPMassVolume !== \"\")\r\n        ) {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [],\r\n            keyValues: [],\r\n            isSuccess: false,\r\n            errorMessage: \"MassQtyMassUOM_ProvidedTogether\",\r\n          });\r\n        } else if (compart.EOPMassVolume < 0) {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [],\r\n            keyValues: [],\r\n            isSuccess: false,\r\n            errorMessage: \"TankManualEntry_MassQtyNonNegative\",\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [],\r\n        keyValues: [],\r\n        isSuccess: false,\r\n        errorMessage: \"ERRMSG_RECONCILIATIONTANKDATALIST_EMPTY\",\r\n      });\r\n    }\r\n\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modRailReceipt, \"update\", notification);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  updateTankEODData(isAdd, modAssociations) {\r\n    const keyCode = [\r\n      {\r\n        key: \"EntryDate\",\r\n        value: this.state.entryDate,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      KeyCodes: keyCode,\r\n      Entity: modAssociations,\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"TankEODEntry_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"TankEODEntry_EODEntryDate\"],\r\n          keyValues: [this.state.entryDate.toLocaleDateString()],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      isAdd ? RestAPIs.CreateTankManualEntry : RestAPIs.UpdateTankManualEntry,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getTankManualEntryData(this.state.entryDate);\r\n        } else {\r\n          this.setState({\r\n            saveEnabled: true,\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in updateTankEODData:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(this.state.modAssociations, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modAssociations, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: true,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      this.setState({\r\n        entryDate: new Date(),\r\n        modAssociations: [],\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankManualEntryDetailsComposite: Error occurred on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TankManualEntryDetails\r\n            entryDate={this.state.entryDate}\r\n            modAssociations={this.state.modAssociations}\r\n            selectedAssociations={this.state.selectedAssociations}\r\n            listOptions={{\r\n              tankCode: this.getTankCodeSearchOptions(),\r\n              baseProductCode: this.state.baseProductCodeOptions,\r\n              quantityUOM: this.state.quantityUOMOptions,\r\n              densityQuantityUOM: this.state.massQuantityUOMOptions,\r\n            }}\r\n            onFieldChange={this.handleChange}\r\n            onTankSearchChange={this.handleTankSearchChange}\r\n            handleAddAssociation={this.handleAddAssociation}\r\n            handleDeleteAssociation={this.handleDeleteAssociation}\r\n            handleAssociationSelectionChange={\r\n              this.handleAssociationSelectionChange\r\n            }\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n          />\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <div className=\"row\">\r\n                <div className=\"col\" style={{ textAlign: \"right\" }}>\r\n                  <Button\r\n                    content={t(\"LookUpData_btnReset\")}\r\n                    className=\"cancelButton\"\r\n                    onClick={this.handleReset}\r\n                  ></Button>\r\n                  <Button\r\n                    content={t(\"Save\")}\r\n                    disabled={!this.state.saveEnabled}\r\n                    onClick={this.handleSave}\r\n                  ></Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </TranslationConsumer>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.add}\r\n            functionGroup={fnTankEODEntry}\r\n            handleOperation={this.handleTankManualEntry}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\nconst mapRouteToProps = (route) => {\r\n  return {\r\n    userAction: bindActionCreators(getUserDetails, route),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapRouteToProps\r\n)(TankManualEntryDetailsComposite);\r\n","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TankManualEntryDetails","_ref","entryDate","modAssociations","selectedAssociations","listOptions","onFieldChange","onTankSearchChange","handleAddAssociation","handleDeleteAssociation","handleAssociationSelectionChange","handleCellDataEdit","isEnterpriseNode","t","useTranslation","handleCustomEditDropDown","cellData","dropDownOptions","_jsx","Select","className","value","rowIndex","field","fluid","options","onChange","indicator","reserveSpace","search","noResultsMessage","handleTankEditDropDown","getOptionsWithSelect","tankCode","onSearch","handleCustomEditTextBox","Input","decimalDisplayValues","toLocaleString","TranslationConsumer","children","_jsxs","style","padding","DatePicker","Date","label","type","displayFormat","getCurrentDateFormat","data","onClick","Icon","root","name","size","DataTable","selectionMode","selection","onSelectionChange","Column","header","editable","editFieldType","customEditRenderer","baseProductCode","renderer","quantityUOM","densityQuantityUOM","defaultProps","TankManualEntryDetailsComposite","Component","constructor","arguments","state","isReadyToRender","associations","tankCodeOptions","tankCodeSearchOptions","baseProductCodeOptions","quantityUOMOptions","massQuantityUOMOptions","saveEnabled","showAuthenticationLayout","tempAssociations","e","this","setState","props","userDetails","EntityResult","IsArchived","lodash","newComp","BaseProductCode","BOPGrossVolume","BOPMassVolume","BOPNetVolume","EOPGrossVolume","EOPMassVolume","EOPNetVolume","MassQuantityUOM","QuantityUOM","ReconciliationCode","TransactionTotalGrossQty","TransactionTotalNetQty","TankCode","SeqNumber","Utilities","push","error","console","log","length","forEach","obj","index","filter","com","cindex","handleChange","propertyName","getTankManualEntryData","newVal","handleTankSearchChange","item","toLowerCase","includes","Constants","slice","handleTankManualEntry","handleAuthenticationClose","isAdd","updateTankEODData","handleSave","validateSave","IsWebPortalUser","handleReset","componentDidMount","getTankCodes","PrimaryShareholder","getBaseProductCodes","getUOMs","componentWillReceiveProps","shareholder","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","Array","isArray","ErrorList","catch","undefined","productList","key","productCode","VOLUME","UOM","text","MASS","toISOString","FunctionsList","functionGroups","modify","fnTankEODEntry","getTankCodeSearchOptions","notification","messageType","message","messageResultDetails","compart","tankManualEntryDetailsDef","col","err","validator","keyFields","displayName","keyValues","isSuccess","errorMessage","onSaved","modRailReceipt","keyCode","ShareHolderCode","selectedShareholder","KeyCodes","Entity","toLocaleDateString","render","ErrorBoundary","IsEnterpriseNode","textAlign","Button","content","disabled","UserAuthenticationLayout","Username","UserName","functionName","add","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","route","userAction","bindActionCreators","ddlOptions","selectOptionText","option","unshift","language","window","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}