{"version":3,"file":"static/js/1803.b95aea8f.chunk.js","mappings":"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","sources":["Components/Composite/Entity/ProductAllocationComposite.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../../CSS/styles.css\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport {\r\n  functionGroups,\r\n  fnProductAllocation,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport { ShareholderAllocationsSummaryPageComposite } from \"../Summary/ShareholderAllocationsSummaryPageComposite\";\r\nimport ShareholderAllocationDetailsComposite from \"../Details/ShareholderAllocationDetailsComposite\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport Error from \"../../Error\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\n\r\nclass ProductAllocationComposite extends Component {\r\n\r\n  state = {\r\n    isDetails: \"false\",\r\n    isReadyToRender: false,\r\n    isDetailsModified: \"false\",\r\n    operationsVisibilty: { add: false, delete: false, shareholder: true },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    data: {},\r\n    isEnable: true,\r\n    allocationType: \"\",\r\n    selectedShareholder:\r\n      this.props.selectedShareholder === undefined ||\r\n        this.props.selectedShareholder === null ||\r\n        this.props.selectedShareholder === \"\"\r\n        ? this.props.userDetails.EntityResult.PrimaryShareholder\r\n        : this.props.selectedShareholder,\r\n      \r\n        showAuthenticationLayout: false,\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getLookUpData();\r\n\r\n    } catch (error) {\r\n      console.log(\"ProductAllocationComposite:Error occured on ComponentDidMount\", error);\r\n    }\r\n  }\r\n\r\n\r\n  getLookUpData() {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=ProductAllocation\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let isEnable = true;\r\n          let allocationType = result.EntityResult.AllocationEntity.toUpperCase();\r\n\r\n          if (result.EntityResult.AllocationEntity.toUpperCase() === Constants.AllocationEntityType.CUSTOMER_AND_SHAREHOLDER)\r\n            allocationType = Constants.AllocationEntityType.CUSTOMER\r\n          else\r\n            allocationType = result.EntityResult.AllocationEntity.toUpperCase();\r\n\r\n          if (result.EntityResult.AllocationEntity.toUpperCase() === Constants.AllocationEntityType.SHAREHOLDER) {\r\n            isEnable = false;\r\n          }\r\n          if (isEnable && result.EntityResult.EnableProductAllocation.toUpperCase() === \"FALSE\") {\r\n            isEnable = false;\r\n          }\r\n\r\n          this.setState({ lookUpData: result.EntityResult, isEnable });\r\n\r\n          if (isEnable) {\r\n            var { operationsVisibilty } = { ...this.state };\r\n            operationsVisibilty.add = Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnProductAllocation\r\n            );\r\n            this.setState({\r\n              operationsVisibilty,\r\n              allocationType: allocationType\r\n            }, () => {\r\n              this.getProductAllocationList(\r\n                this.state.selectedShareholder,\r\n                allocationType\r\n              );\r\n            });\r\n\r\n          }\r\n        } else {\r\n          console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"ShareholderAllocationComposite: Error occurred on getLookUpData\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getProductAllocationList(shareholder, allocationType) {\r\n    try {\r\n\r\n      axios(\r\n        RestAPIs.GetShareholderAllocationList + \"?ShareholderCode=\"\r\n        + shareholder + \"&allocationType=\" + allocationType,\r\n        Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n      )\r\n        .then((response) => {\r\n\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ data: result.EntityResult, isReadyToRender: true });\r\n          } else {\r\n            this.setState({ data: [], isReadyToRender: true });\r\n            console.log(\"Error in getProductAllocationList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error while getting product allocation List:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while getting product allocation List:\", error);\r\n    }\r\n  }\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.shareholder = false;\r\n\r\n      this.setState({\r\n        isDetails: \"true\",\r\n        selectedRow: {},\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"ProductAllocationComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showAuthenticationLayout });\r\n      if (showAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Product Allocation Composite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n\r\n  handleDelete = () => {\r\n    try {\r\n      this.handleAuthenticationClose();\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n\r\n      var deleteProductAllocationKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        var shCode = this.state.selectedShareholder;\r\n        var entityCode = this.state.selectedItems[i][\"Common_Code\"];\r\n        var keyData = {\r\n          keyDataCode: 0,\r\n          ShareHolderCode: shCode,\r\n          KeyCodes: [{\r\n            Key: KeyCodes.entityType,\r\n            Value: this.state.allocationType\r\n          },\r\n          {\r\n            Key: KeyCodes.entityCode,\r\n            Value: entityCode\r\n          }],\r\n        };\r\n        deleteProductAllocationKeys.push(keyData);\r\n      }\r\n\r\n      axios(\r\n        RestAPIs.DeleteShareholderAllocation,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteProductAllocationKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          var result = response.data;\r\n          var isRefreshDataRequire = result.isSuccess;\r\n\r\n          if (\r\n            result.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            var failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n\r\n          var notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"ProductAllocation_DeletionStatus\",\r\n            [\"EntityCode\"]\r\n          );\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({ isReadyToRender: false });\r\n            this.getProductAllocationList(\r\n              this.state.selectedShareholder,\r\n              this.state.allocationType);\r\n            // this.getKPIList(this.state.selectedShareholder);\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n            });\r\n          } else {\r\n            operationsVisibilty.delete = true;\r\n            this.setState({ operationsVisibilty });\r\n          }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0)\r\n              messageResult.keyFields[0] = this.state.allocationType\r\n                === Constants.AllocationEntityType.CUSTOMER ?\r\n                \"ShipmentCompDetail_CustomerCode\" : \"RailDispatchManualEntry_CarrierCode\";\r\n          });\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    } catch (error) {\r\n      console.log(\"ProductAllocationComposite:Error occured on handleDelete\", error);\r\n    }\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnProductAllocation\r\n      );\r\n      operationsVisibilty.delete = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.remove,\r\n        fnProductAllocation\r\n      );\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: \"true\",\r\n        selectedRow: item,\r\n        selectedItems: [item],\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"ProductAllocationComposite:Error occured on handleRowClick\", error);\r\n    }\r\n  };\r\n\r\n  handleSelection = (items) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n\r\n      operationsVisibilty.delete =\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnProductAllocation\r\n        );\r\n\r\n      this.setState({ selectedItems: items, operationsVisibilty });\r\n    } catch (error) {\r\n      console.log(\"ProductAllocationComposite:Error occured on handleSelection\", error);\r\n    }\r\n  };\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      if (notification === null) {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnProductAllocation\r\n        );\r\n\t      operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnProductAllocation\r\n        );\r\n        this.setState({ isDetailsModified: \"true\", operationsVisibilty });\r\n      }\r\n      else {\r\n\r\n        if (notification.messageType === \"success\") {\r\n          operationsVisibilty.add = true;\r\n          operationsVisibilty.delete = true;\r\n          this.setState({ isDetailsModified: \"true\", operationsVisibilty });\r\n        }\r\n        if (notification.messageType === \"success\" && saveType === \"add\") {\r\n          var selectedItems = [\r\n            {\r\n              Common_Code: data.EntityCode,\r\n            },\r\n          ];\r\n          this.setState({ selectedItems });\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"ProductAllocationComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnProductAllocation\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        isReadyToRender: false,\r\n      });\r\n      this.getProductAllocationList(\r\n        this.state.selectedShareholder,\r\n        this.state.allocationType);\r\n      // this.getKPIList();\r\n    } catch (error) {\r\n      console.log(\"ProductAllocationComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      this.setState({\r\n        selectedShareholder: shareholder,\r\n        isReadyToRender: false,\r\n        selectedItems: [],\r\n      });\r\n      this.getProductAllocationList(\r\n        shareholder,\r\n        this.state.allocationType);\r\n    } catch (error) {\r\n      console.log(\r\n        \"ProductAllocationComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            breadcrumbItem={this.props.activeItem}\r\n            shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n            selectedShareholder={this.state.selectedShareholder}\r\n            onShareholderChange={this.handleShareholderSelectionChange}\r\n            onDelete={this.authenticateDelete}\r\n            onAdd={this.handleAdd}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isDetails === \"true\" ? (\r\n          <ErrorBoundary>\r\n            <ShareholderAllocationDetailsComposite\r\n              key=\"ShareholderAllocationDetails\"\r\n              selectedRow={this.state.selectedRow}\r\n              onBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n              allocationType={this.state.allocationType}\r\n              selectedShareholder={this.state.selectedShareholder}\r\n            ></ShareholderAllocationDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isReadyToRender ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <ShareholderAllocationsSummaryPageComposite\r\n                tableData={this.state.data.Table}\r\n                columnDetails={this.state.data.Column}\r\n                pageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                exportRequired={true}\r\n                exportFileName=\"ShareholderAllocationList\"\r\n                columnPickerRequired={true}\r\n                terminalsToShow={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .NoOfTerminalsToShow\r\n                }\r\n                selectionRequired={true}\r\n                columnGroupingRequired={true}\r\n                selectedItems={this.state.selectedItems}\r\n                onRowClick={this.handleRowClick}\r\n                onSelectionChange={this.handleSelection}\r\n                parentComponent={this.componentName}\r\n              ></ShareholderAllocationsSummaryPageComposite>\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) :\r\n          (\r\n            <>\r\n              {this.state.isEnable ? (\r\n                <LoadingPage message=\"Loading\"></LoadingPage>\r\n              ) : (\r\n                <Error errorMessage=\"ProductAllocation_Enable\"></Error>\r\n              )}\r\n            </>\r\n          )}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.remove}\r\n            functionGroup={fnProductAllocation}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleDelete}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProductAllocationComposite);\r\n\r\nProductAllocationComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n"],"names":["ProductAllocationComposite","Component","constructor","arguments","state","isDetails","isReadyToRender","isDetailsModified","operationsVisibilty","add","delete","shareholder","selectedRow","selectedItems","data","isEnable","allocationType","selectedShareholder","undefined","this","props","userDetails","EntityResult","PrimaryShareholder","showAuthenticationLayout","handleAdd","setState","error","console","log","authenticateDelete","IsWebPortalUser","handleDelete","handleAuthenticationClose","deleteProductAllocationKeys","i","length","shCode","entityCode","keyData","keyDataCode","ShareHolderCode","KeyCodes","Key","Value","push","axios","RestAPIs","Utilities","tokenDetails","tokenInfo","then","response","result","isRefreshDataRequire","isSuccess","ResultDataList","filter","res","IsSuccess","notification","getProductAllocationList","messageResultDetails","forEach","messageResult","keyFields","Constants","CUSTOMER","toast","_jsx","ErrorBoundary","children","NotifyEvent","notificationMessage","autoClose","messageType","catch","handleRowClick","item","FunctionsList","functionGroups","fnProductAllocation","remove","handleSelection","items","savedEvent","saveType","Common_Code","EntityCode","handleBack","handleShareholderSelectionChange","componentDidMount","IsArchived","getLookUpData","AllocationEntity","toUpperCase","CUSTOMER_AND_SHAREHOLDER","SHAREHOLDER","EnableProductAllocation","lookUpData","ErrorList","render","_jsxs","TMUserActionsComposite","breadcrumbItem","activeItem","shareholders","ShareholderList","onShareholderChange","onDelete","onAdd","handleBreadCrumbClick","ShareholderAllocationDetailsComposite","onBack","onSaved","ShareholderAllocationsSummaryPageComposite","tableData","Table","columnDetails","Column","pageSize","PageAttibutes","WebPortalListPageSize","exportRequired","exportFileName","columnPickerRequired","terminalsToShow","NoOfTerminalsToShow","selectionRequired","columnGroupingRequired","onRowClick","onSelectionChange","parentComponent","componentName","_Fragment","LoadingPage","message","Error","errorMessage","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","position","toastClassName","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleClose","handleOperation","connect","getUserDetails","TokenAuth"],"sourceRoot":""}