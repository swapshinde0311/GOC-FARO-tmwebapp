{"version":3,"file":"static/js/5527.d5d4128f.chunk.js","mappings":"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","sources":["Components/UIBase/Details/LeakageManualEntryDetails.jsx","Components/Composite/Details/LeakageManualEntryDetailsComposite.jsx","JS/functionalUtilities.js"],"sourcesContent":["import React from \"react\";\r\nimport { Input, Select, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getOptionsWithSelect,\r\n  getCurrentDateFormat,\r\n} from \"../../../JS/functionalUtilities\";\r\n\r\nLeakageManualEntryDetails.propTypes = {\r\n  modLeakageManualEntry: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    productCategory: PropTypes.array,\r\n    productCode: PropTypes.array,\r\n    quantityUOM: PropTypes.array,\r\n    densityUOM: PropTypes.array,\r\n    tankCode: PropTypes.array,\r\n    meterCode: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onTankSearchChange: PropTypes.func.isRequired,\r\n  onMeterSearchChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n};\r\nLeakageManualEntryDetails.defaultProps = { isEnterpriseNode: false };\r\n\r\nexport function LeakageManualEntryDetails({\r\n  modLeakageManualEntry,\r\n  validationErrors,\r\n  listOptions,\r\n  onFieldChange,\r\n  onTankSearchChange,\r\n  onMeterSearchChange,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                indicator=\"required\"\r\n                label={t(\"LoadingDetailsEntry_ProductCategory\")}\r\n                value={modLeakageManualEntry.ProductCategory}\r\n                options={listOptions.productCategory}\r\n                error={t(validationErrors.ProductCategory)}\r\n                onChange={(data) => onFieldChange(\"ProductCategory\", data)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                indicator=\"required\"\r\n                label={t(\"ProductCode\")}\r\n                value={modLeakageManualEntry.ProductCode}\r\n                options={listOptions.productCode}\r\n                error={t(validationErrors.ProductCode)}\r\n                onChange={(data) => onFieldChange(\"ProductCode\", data)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                indicator=\"required\"\r\n                label={t(\"LoadingDetailsEntry_QuantityUOM\")}\r\n                value={modLeakageManualEntry.LeakageQtyUom}\r\n                options={listOptions.quantityUOM}\r\n                error={t(validationErrors.LeakageQtyUom)}\r\n                onChange={(data) => onFieldChange(\"LeakageQtyUom\", data)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLeakageManualEntry.LeakageQty}\r\n                label={t(\"GrossQuantity\")}\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"LeakageQty\", data)}\r\n                error={t(validationErrors.LeakageQty)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLeakageManualEntry.NetQuantity}\r\n                label={t(\"NetQuantity\")}\r\n                onChange={(data) => onFieldChange(\"NetQuantity\", data)}\r\n                error={t(validationErrors.NetQuantity)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLeakageManualEntry.Density}\r\n                label={t(\"Density\")}\r\n                onChange={(data) => onFieldChange(\"Density\", data)}\r\n                error={t(validationErrors.Density)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"BaseProductInfox_UOM\")}\r\n                value={modLeakageManualEntry.DensityUOM}\r\n                options={listOptions.densityUOM}\r\n                onChange={(data) => onFieldChange(\"DensityUOM\", data)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"TankCode\")}\r\n                indicator=\"required\"\r\n                value={modLeakageManualEntry.TankCode}\r\n                error={t(validationErrors.TankCode)}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.tankCode,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                onChange={(data) => onFieldChange(\"TankCode\", data)}\r\n                search={true}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                onSearch={onTankSearchChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"Meter_Code\")}\r\n                indicator=\"required\"\r\n                value={modLeakageManualEntry.MeterCode}\r\n                error={t(validationErrors.MeterCode)}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.meterCode,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                onChange={(data) => onFieldChange(\"MeterCode\", data)}\r\n                search={true}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                onSearch={onMeterSearchChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                value={\r\n                  modLeakageManualEntry.StartTime === null\r\n                    ? \"\"\r\n                    : new Date(modLeakageManualEntry.StartTime)\r\n                }\r\n                label={t(\"StartTime\")}\r\n                type=\"datetime\"\r\n                minuteStep=\"5\"\r\n                displayFormat={getCurrentDateFormat()}\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"StartTime\", data)}\r\n                error={t(validationErrors.StartTime)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                value={\r\n                  modLeakageManualEntry.EndTime === null\r\n                    ? \"\"\r\n                    : new Date(modLeakageManualEntry.EndTime)\r\n                }\r\n                label={t(\"EndTime\")}\r\n                type=\"datetime\"\r\n                minuteStep=\"5\"\r\n                displayFormat={getCurrentDateFormat()}\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"EndTime\", data)}\r\n                error={t(validationErrors.EndTime)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLeakageManualEntry.GrossStartTotalizer}\r\n                label={t(\"StartTotalizer\")}\r\n                onChange={(data) => onFieldChange(\"GrossStartTotalizer\", data)}\r\n                error={t(validationErrors.GrossStartTotalizer)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLeakageManualEntry.GrossEndTotalizer}\r\n                label={t(\"EndTotalizer\")}\r\n                onChange={(data) => onFieldChange(\"GrossEndTotalizer\", data)}\r\n                error={t(validationErrors.GrossEndTotalizer)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLeakageManualEntry.NetStartTotalizer}\r\n                label={t(\"LoadingDetailsEntry_NetStartTotalizer\")}\r\n                onChange={(data) => onFieldChange(\"NetStartTotalizer\", data)}\r\n                error={t(validationErrors.NetStartTotalizer)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLeakageManualEntry.NetEndTotalizer}\r\n                label={t(\"LoadingDetailsEntry_NetEndTotalizer\")}\r\n                onChange={(data) => onFieldChange(\"NetEndTotalizer\", data)}\r\n                error={t(validationErrors.NetEndTotalizer)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { LeakageManualEntryDetails } from \"../../UIBase/Details/LeakageManualEntryDetails\";\r\n\r\nimport lodash from \"lodash\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport axios from \"axios\";\r\nimport { leakageManualEntryValidationDef } from \"../../../JS/ValidationDef\";\r\nimport ErrorBoundary from \"./../../../Components/ErrorBoundary\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { emptyLeakageManualEntry } from \"../../../JS/DefaultEntities\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  functionGroups,\r\n  fnLeakageManualEntry,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button } from \"@scuf/common\";\r\n\r\nclass LeakageManualEntryDetailsComposite extends Component {\r\n  state = {\r\n    leakageManualEntry: {},\r\n    modLeakageManualEntry: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      leakageManualEntryValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    productCategoryOptions: [],\r\n    productCodeOptions: [],\r\n    quantityUOMOptions: [],\r\n    densityUOMOptions: [],\r\n    tankCodeOptions: [],\r\n    tankCodeSearchOptions: [],\r\n    meterCodeOptions: [],\r\n    meterCodeSearchOptions: [],\r\n    saveEnabled: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getProductCategory();\r\n      this.getUOMList();\r\n      this.getTankCode(this.props.userDetails.EntityResult.PrimaryShareholder);\r\n      this.getMeterCode();\r\n      this.setNewLeakageManualEntry();\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite: Error occurred on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps() {\r\n    try {\r\n      this.setNewLeakageManualEntry();\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite:Error occurred on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  setNewLeakageManualEntry() {\r\n    this.setState({\r\n      leakageManualEntry: lodash.cloneDeep(emptyLeakageManualEntry),\r\n      modLeakageManualEntry: lodash.cloneDeep(emptyLeakageManualEntry),\r\n      isReadyToRender: true,\r\n      saveEnabled: Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnLeakageManualEntry\r\n      ),\r\n    });\r\n  }\r\n\r\n  getProductCategory() {\r\n    try {\r\n      const productCategoryOptions = [\r\n        { text: \"Base Product\", value: \"BaseProduct\" },\r\n        { text: \"Additive\", value: \"Additive\" },\r\n      ];\r\n      this.setState({ productCategoryOptions });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite: Error occurred on getProductCategory\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getProductCode(productCategory) {\r\n    let apiAddress;\r\n    if (productCategory === \"BaseProduct\") {\r\n      apiAddress = RestAPIs.GetBaseProducts;\r\n    } else if (productCategory === \"Additive\") {\r\n      apiAddress = RestAPIs.GetAdditives;\r\n    }\r\n    axios(\r\n      apiAddress,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult !== undefined\r\n          ) {\r\n            const productList = [];\r\n            for (let key in result.EntityResult) {\r\n              for (let productCode of result.EntityResult[key]) {\r\n                productList.push(productCode);\r\n              }\r\n            }\r\n            this.setState({\r\n              productCodeOptions: Utilities.transferListtoOptions(productList),\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getBaseProductList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Base Product List:\", error);\r\n      });\r\n  }\r\n\r\n  getUOMList() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult.VOLUME)\r\n          ) {\r\n            const quantityUOMList = [\r\n              ...result.EntityResult.VOLUME,\r\n              ...result.EntityResult.MASS,\r\n            ];\r\n            this.setState({\r\n              quantityUOMOptions: Utilities.transferListtoOptions(\r\n                quantityUOMList\r\n              ),\r\n              densityUOMOptions: Utilities.transferListtoOptions(\r\n                result.EntityResult.DENSITY\r\n              ),\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getQuantityUOM:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getQuantityUOM:\", error);\r\n      });\r\n  }\r\n\r\n  getTankCode(shareholder) {\r\n    axios(\r\n      RestAPIs.GetTanks + \"?ShareholderCode=\" + shareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            const tankCodeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            let tankCodeSearchOptions = lodash.cloneDeep(tankCodeOptions);\r\n            if (tankCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n              tankCodeSearchOptions = tankCodeSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({\r\n              tankCodeOptions,\r\n              tankCodeSearchOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getTankCode:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getTankCode:\", error);\r\n      });\r\n  }\r\n\r\n  getMeterCode() {\r\n    axios(\r\n      RestAPIs.GetMeters,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            const meterCodeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            let meterCodeSearchOptions = lodash.cloneDeep(meterCodeOptions);\r\n            if (\r\n              meterCodeSearchOptions.length > Constants.filteredOptionsCount\r\n            ) {\r\n              meterCodeSearchOptions = meterCodeSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({\r\n              meterCodeOptions,\r\n              meterCodeSearchOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getMeterCode:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getMeterCode:\", error);\r\n      });\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      let modLeakageManualEntry = lodash.cloneDeep(\r\n        this.state.modLeakageManualEntry\r\n      );\r\n      modLeakageManualEntry[propertyName] = data;\r\n\r\n      if (propertyName === \"ProductCategory\") {\r\n        this.getProductCode(data);\r\n      }\r\n\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n\r\n      if (leakageManualEntryValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          leakageManualEntryValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n      this.setState({ validationErrors, modLeakageManualEntry });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite: Error occurred on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    this.setState({ saveEnabled: false });\r\n    const modLeakageManualEntry = lodash.cloneDeep(\r\n      this.state.modLeakageManualEntry\r\n    );\r\n    modLeakageManualEntry.UpdatedTime = new Date();\r\n    if (this.validateSave(modLeakageManualEntry)) {\r\n      modLeakageManualEntry.NetQuantity = Utilities.convertStringtoDecimal(\r\n        modLeakageManualEntry.NetQuantity\r\n      );\r\n      modLeakageManualEntry.Density = Utilities.convertStringtoDecimal(\r\n        modLeakageManualEntry.Density\r\n      );\r\n      modLeakageManualEntry.NetEndTotalizer = Utilities.convertStringtoDecimal(\r\n        modLeakageManualEntry.NetEndTotalizer\r\n      );\r\n      modLeakageManualEntry.NetStartTotalizer = Utilities.convertStringtoDecimal(\r\n        modLeakageManualEntry.NetStartTotalizer\r\n      );\r\n      modLeakageManualEntry.GrossEndTotalizer = Utilities.convertStringtoDecimal(\r\n        modLeakageManualEntry.GrossEndTotalizer\r\n      );\r\n      modLeakageManualEntry.GrossStartTotalizer = Utilities.convertStringtoDecimal(\r\n        modLeakageManualEntry.GrossStartTotalizer\r\n      );\r\n      modLeakageManualEntry.LeakageQty = Utilities.convertStringtoDecimal(\r\n        modLeakageManualEntry.LeakageQty\r\n      );\r\n      this.createLeakageManualEntry(modLeakageManualEntry);\r\n    } else {\r\n      this.setState({ saveEnabled: true });\r\n    }\r\n  };\r\n\r\n  validateSave(modLeakageManualEntry) {\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n\r\n    Object.keys(leakageManualEntryValidationDef).forEach((key) => {\r\n      if (modLeakageManualEntry[key] !== undefined) {\r\n        validationErrors[key] = Utilities.validateField(\r\n          leakageManualEntryValidationDef[key],\r\n          modLeakageManualEntry[key]\r\n        );\r\n      }\r\n    });\r\n\r\n    this.setState({ validationErrors });\r\n    let returnValue = Object.values(validationErrors).every((value) => {\r\n      return value === \"\";\r\n    });\r\n    return returnValue;\r\n  }\r\n\r\n  createLeakageManualEntry(modLeakageManualEntry) {\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      Entity: modLeakageManualEntry,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"LeakageManualEntry_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ProductCode\"],\r\n          keyValues: [modLeakageManualEntry.ProductCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.UpdateLeakageInfo,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ saveEnabled: false });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({ saveEnabled: true });\r\n          console.log(\"Error in CreateLeakageManualEntry: \", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modLeakageManualEntry, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnLeakageManualEntry\r\n          ),\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modLeakageManualEntry, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      const leakageManualEntry = lodash.cloneDeep(\r\n        this.state.leakageManualEntry\r\n      );\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState({\r\n        modLeakageManualEntry: leakageManualEntry,\r\n        validationErrors,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite: Error occurred on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleTankSearchChange = (tankCode) => {\r\n    try {\r\n      let tankCodeSearchOptions = this.state.tankCodeOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(tankCode.toLowerCase())\r\n      );\r\n\r\n      if (tankCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n        tankCodeSearchOptions = tankCodeSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        tankCodeSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite: Error occurred on handleRouteSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getTankCodeSearchOptions() {\r\n    let tankCodeSearchOptions = lodash.cloneDeep(\r\n      this.state.tankCodeSearchOptions\r\n    );\r\n    let modTankCode = this.state.modLeakageManualEntry.TankCode;\r\n    if (\r\n      modTankCode !== null &&\r\n      modTankCode !== \"\" &&\r\n      modTankCode !== undefined\r\n    ) {\r\n      let selectedTankCode = tankCodeSearchOptions.find(\r\n        (element) => element.value.toLowerCase() === modTankCode.toLowerCase()\r\n      );\r\n      if (selectedTankCode === undefined) {\r\n        tankCodeSearchOptions.push({\r\n          text: modTankCode,\r\n          value: modTankCode,\r\n        });\r\n      }\r\n    }\r\n    return tankCodeSearchOptions;\r\n  }\r\n\r\n  handleMeterSearchChange = (meterCode) => {\r\n    try {\r\n      let meterCodeSearchOptions = this.state.meterCodeOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(meterCode.toLowerCase())\r\n      );\r\n\r\n      if (meterCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n        meterCodeSearchOptions = meterCodeSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        meterCodeSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite: Error occurred on handleMeterSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      const modLeakageManualEntry = lodash.cloneDeep(this.state.modLeakageManualEntry);\r\n      validationErrors[propertyName] = error;\r\n      modLeakageManualEntry[propertyName] = value;\r\n      this.setState({ validationErrors, modLeakageManualEntry });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite: Error occurred on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getMeterCodeSearchOptions() {\r\n    let meterCodeSearchOptions = lodash.cloneDeep(\r\n      this.state.meterCodeSearchOptions\r\n    );\r\n    let modMeterCode = this.state.modLeakageManualEntry.MeterCode;\r\n    if (\r\n      modMeterCode !== null &&\r\n      modMeterCode !== \"\" &&\r\n      modMeterCode !== undefined\r\n    ) {\r\n      let selectedMeterCode = meterCodeSearchOptions.find(\r\n        (element) => element.value.toLowerCase() === modMeterCode.toLowerCase()\r\n      );\r\n      if (selectedMeterCode === undefined) {\r\n        meterCodeSearchOptions.push({\r\n          text: modMeterCode,\r\n          value: modMeterCode,\r\n        });\r\n      }\r\n    }\r\n    return meterCodeSearchOptions;\r\n  }\r\n\r\n  render() {\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <LeakageManualEntryDetails\r\n            modLeakageManualEntry={this.state.modLeakageManualEntry}\r\n            validationErrors={this.state.validationErrors}\r\n            listOptions={{\r\n              productCategory: this.state.productCategoryOptions,\r\n              productCode: this.state.productCodeOptions,\r\n              quantityUOM: this.state.quantityUOMOptions,\r\n              densityUOM: this.state.densityUOMOptions,\r\n              tankCode: this.getTankCodeSearchOptions(),\r\n              meterCode: this.getMeterCodeSearchOptions(),\r\n            }}\r\n            onFieldChange={this.handleChange}\r\n            onDateTextChange={this.handleDateTextChange}\r\n            onTankSearchChange={this.handleTankSearchChange}\r\n            onMeterSearchChange={this.handleMeterSearchChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n          />\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <div className=\"row\">\r\n                <div className=\"col\" style={{ textAlign: \"right\" }}>\r\n                  <Button\r\n                    content={t(\"LookUpData_btnReset\")}\r\n                    className=\"cancelButton\"\r\n                    onClick={this.handleReset}\r\n                  ></Button>\r\n                  <Button\r\n                    content={t(\"Save\")}\r\n                    disabled={!this.state.saveEnabled}\r\n                    onClick={this.handleSave}\r\n                  ></Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </TranslationConsumer>\r\n        </ErrorBoundary>\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\nconst mapRouteToProps = (route) => {\r\n  return {\r\n    userAction: bindActionCreators(getUserDetails, route),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapRouteToProps\r\n)(LeakageManualEntryDetailsComposite);\r\n","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["LeakageManualEntryDetails","_ref","modLeakageManualEntry","validationErrors","listOptions","onFieldChange","onTankSearchChange","onMeterSearchChange","_jsx","TranslationConsumer","children","t","className","_jsxs","Select","fluid","placeholder","indicator","label","value","ProductCategory","options","productCategory","error","onChange","data","noResultsMessage","ProductCode","productCode","LeakageQtyUom","quantityUOM","Input","LeakageQty","reserveSpace","NetQuantity","Density","DensityUOM","densityUOM","TankCode","getOptionsWithSelect","tankCode","search","onSearch","MeterCode","meterCode","DatePicker","StartTime","Date","type","minuteStep","displayFormat","getCurrentDateFormat","EndTime","GrossStartTotalizer","GrossEndTotalizer","NetStartTotalizer","NetEndTotalizer","defaultProps","isEnterpriseNode","LeakageManualEntryDetailsComposite","Component","constructor","arguments","state","leakageManualEntry","Utilities","leakageManualEntryValidationDef","isReadyToRender","productCategoryOptions","productCodeOptions","quantityUOMOptions","densityUOMOptions","tankCodeOptions","tankCodeSearchOptions","meterCodeOptions","meterCodeSearchOptions","saveEnabled","handleChange","propertyName","lodash","this","getProductCode","undefined","setState","console","log","handleSave","UpdatedTime","validateSave","createLeakageManualEntry","handleReset","Object","keys","forEach","key","handleTankSearchChange","filter","item","toLowerCase","includes","length","Constants","slice","handleMeterSearchChange","handleDateTextChange","componentDidMount","props","userDetails","EntityResult","IsArchived","getProductCategory","getUOMList","getTankCode","PrimaryShareholder","getMeterCode","setNewLeakageManualEntry","componentWillReceiveProps","emptyLeakageManualEntry","FunctionsList","functionGroups","add","fnLeakageManualEntry","text","apiAddress","RestAPIs","axios","tokenDetails","tokenInfo","then","response","result","IsSuccess","productList","push","ErrorList","catch","Array","isArray","VOLUME","quantityUOMList","MASS","DENSITY","shareholder","values","every","obj","ShareHolderCode","selectedShareholder","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","getTankCodeSearchOptions","modTankCode","find","element","getMeterCodeSearchOptions","modMeterCode","render","ErrorBoundary","onDateTextChange","IsEnterpriseNode","style","textAlign","Button","content","onClick","disabled","LoadingPage","connect","getUserDetails","TokenAuth","route","userAction","bindActionCreators","ddlOptions","selectOptionText","option","unshift","language","window","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}