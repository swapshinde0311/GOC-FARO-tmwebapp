{"version":3,"file":"static/js/8664.85430996.chunk.js","mappings":"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","sources":["Components/Composite/Summary/OperatorDashboardThroughputSummaryComposite.jsx","Components/UIBase/Details/OperatorDashboardOverviewDetails.jsx","Components/Composite/Details/OperatorDashboardDetailsComposite.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport * as RestApis from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { connect } from \"react-redux\";\r\nimport { Tab } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Divider } from \"@scuf/common\";\r\nimport { List } from \"@scuf/common\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport * as wijmo from \"@grapecity/wijmo\";\r\nimport * as wjChart from \"@grapecity/wijmo.react.chart\";\r\nimport * as wjcCore from \"@grapecity/wijmo\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nwjcCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nclass OperatorDashboardThroughputSummaryComposite extends Component {\r\n  state = {\r\n    drawerClassName: \"\",\r\n    tankInventory: [],\r\n    dispatchProductsThroughput: [],\r\n    dispatchPalette: [],\r\n    receiptProductsThroughput: [],\r\n    receiptPalette: [],\r\n  };\r\n\r\n  getDispatchProductsThroughput() {\r\n    const keyCode = [\r\n      {\r\n        key: \"Date\",\r\n        value: new Date(),\r\n      },\r\n      {\r\n        key: \"TransactionType\",\r\n        value: \"DISPATCH\",\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: this.props.transportationType,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.transportationType,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetProductsThroughput,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult === null) {\r\n            this.setState({ dispatchProductsThroughput: result.EntityResult });\r\n          } else {\r\n            let list = result.EntityResult.ProductThroughputItems;\r\n            let dispatchProductsThroughput = [];\r\n            let dispatchPalette = [];\r\n            list.forEach((item) => {\r\n              let data = {\r\n                name: item.ProductCode,\r\n                volQty: item.VolQty,\r\n                volumeUOM: result.EntityResult.VolumeUOM,\r\n                massQty: item.MassQty,\r\n                massUOM: result.EntityResult.MassUOM,\r\n              };\r\n              let color = \"#\" + item.Color;\r\n              dispatchProductsThroughput.push(data);\r\n              dispatchPalette.push(color);\r\n            });\r\n            this.setState({ dispatchProductsThroughput, dispatchPalette });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getProductsThroughput: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"OperatorDashboardDetailsComposite: Error occurred on getProductsThroughput\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getReceiptProductsThroughput() {\r\n    const keyCode = [\r\n      {\r\n        key: \"Date\",\r\n        value: new Date(),\r\n      },\r\n      {\r\n        key: \"TransactionType\",\r\n        value: \"RECEIPT\",\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: this.props.transportationType,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.transportationType,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetProductsThroughput,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult === null) {\r\n            this.setState({ receiptProductsThroughput: result.EntityResult });\r\n          } else {\r\n            let list = result.EntityResult.ProductThroughputItems;\r\n            let receiptProductsThroughput = [];\r\n            let receiptPalette = [];\r\n            list.forEach((item) => {\r\n              let data = {\r\n                name: item.ProductCode,\r\n                volQty: item.VolQty,\r\n                volumeUOM: result.EntityResult.VolumeUOM,\r\n                massQty: item.MassQty,\r\n                massUOM: result.EntityResult.MassUOM,\r\n              };\r\n              let color = \"#\" + item.Color;\r\n              receiptPalette.push(color);\r\n              receiptProductsThroughput.push(data);\r\n            });\r\n            this.setState({ receiptProductsThroughput, receiptPalette });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getProductsThroughput: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"OperatorDashboardDetailsComposite: Error occurred on getProductsThroughput\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getTankInventory() {\r\n    axios(\r\n      RestApis.GetTankInventory,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ tankInventory: result.EntityResult });\r\n        } else {\r\n          console.log(\"Error in getShifts: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"OperatorDashboardDetailsComposite: Error occurred on gerShifts\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  isDisplayDrawer = () => {\r\n    let drawerClassName = this.state.drawerClassName;\r\n    if (drawerClassName === \"\") {\r\n      drawerClassName = \"marineDashboardDrawerShow\";\r\n    } else {\r\n      drawerClassName = \"\";\r\n    }\r\n    this.setState({ drawerClassName });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getTankInventory();\r\n    this.getDispatchProductsThroughput();\r\n    this.getReceiptProductsThroughput();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      tankInventory,\r\n      dispatchProductsThroughput,\r\n      dispatchPalette,\r\n      receiptProductsThroughput,\r\n      receiptPalette,\r\n      drawerClassName,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <div className={\"marineDashboardDrawer \" + drawerClassName}>\r\n              <div\r\n                className=\"marineDashboardDrawerButton\"\r\n                onClick={this.isDisplayDrawer}\r\n              >\r\n                <Icon\r\n                  name={drawerClassName === \"\" ? \"menu-icon\" : \"close\"}\r\n                  size=\"medium\"\r\n                />\r\n              </div>\r\n\r\n              <ErrorBoundary>\r\n                <h3 style={{ marginTop: -10, fontWeight: 630 }}>\r\n                  {t(\"MarineDashboard_ThroughputSummary\")}\r\n                </h3>\r\n                <Divider fitted></Divider>\r\n                <Tab>\r\n                  <Tab.Pane\r\n                    className=\"marineDashboardThroughputSummaryTab\"\r\n                    title={t(\"MarineDashboard_Loading\")}\r\n                  >\r\n                    {dispatchProductsThroughput === null ? (\r\n                      <div className=\"marineDashboardNoDataAvailable\">\r\n                        {t(\"MarineDashboard_NoDataAvailable\")}\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <div\r\n                          className=\"container-fluid\"\r\n                          style={{ paddingLeft: 0 }}\r\n                        >\r\n                          <wjChart.FlexPie\r\n                            header=\"\"\r\n                            style={{ height: 369 }}\r\n                            bindingName=\"name\"\r\n                            binding=\"volQty\"\r\n                            innerRadius={0.9}\r\n                            itemsSource={dispatchProductsThroughput}\r\n                            palette={dispatchPalette}\r\n                            plotMargin=\"0 100 0 100 \"\r\n                          >\r\n                            <wjChart.FlexPieDataLabel\r\n                              position=\"Outside\"\r\n                              offset={3}\r\n                              content={(ht) => {\r\n                                return wijmo.format(\"{val} \", {\r\n                                  val:\r\n                                    ht.item.massQty > 0\r\n                                      ? ht.item.massQty.toLocaleString() +\r\n                                        \" \" +\r\n                                        ht.item.massUOM\r\n                                      : ht.value.toLocaleString() +\r\n                                        \" \" +\r\n                                        ht.item.volumeUOM,\r\n                                });\r\n                              }}\r\n                            ></wjChart.FlexPieDataLabel>\r\n                            <wjChart.FlexChartLegend position=\"Bottom\"></wjChart.FlexChartLegend>\r\n                          </wjChart.FlexPie>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </Tab.Pane>\r\n                  <Tab.Pane\r\n                    className=\"marineDashboardThroughputSummaryTab\"\r\n                    title={t(\"MarineDashboard_Unloading\")}\r\n                  >\r\n                    {receiptProductsThroughput === null ? (\r\n                      <div className=\"marineDashboardNoDataAvailable\">\r\n                        {t(\"MarineDashboard_NoDataAvailable\")}\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <div\r\n                          className=\"container-fluid\"\r\n                          style={{ paddingLeft: 0 }}\r\n                        >\r\n                          <wjChart.FlexPie\r\n                            header=\"\"\r\n                            style={{ height: 369 }}\r\n                            bindingName=\"name\"\r\n                            binding=\"volQty\"\r\n                            innerRadius={0.9}\r\n                            itemsSource={receiptProductsThroughput}\r\n                            palette={receiptPalette}\r\n                            plotMargin=\"0 100 0 100 \"\r\n                          >\r\n                            <wjChart.FlexPieDataLabel\r\n                              position=\"Outside\"\r\n                              content={(ht) => {\r\n                                try {\r\n                                  return wijmo.format(\"{val} \", {\r\n                                    val:\r\n                                      ht.item.massQty > 0\r\n                                        ? ht.item.massQty.toLocaleString() +\r\n                                          \" \" +\r\n                                          ht.item.massUOM\r\n                                        : ht.value.toLocaleString() +\r\n                                          \" \" +\r\n                                          ht.item.volumeUOM,\r\n                                  });\r\n                                } catch (error) {\r\n                                  console.log(\r\n                                    \"error in wjChart.FlexPieDataLabel \" + error\r\n                                  );\r\n                                  return wijmo.format(\"{val} \", {\r\n                                    val:\r\n                                      ht.item.massQty > 0\r\n                                        ? ht.item.massQty +\r\n                                          \" \" +\r\n                                          ht.item.massUOM\r\n                                        : ht.value + \" \" + ht.item.volumeUOM,\r\n                                  });\r\n                                }\r\n                              }}\r\n                            ></wjChart.FlexPieDataLabel>\r\n                            <wjChart.FlexChartLegend position=\"Bottom\"></wjChart.FlexChartLegend>\r\n                          </wjChart.FlexPie>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </Tab.Pane>\r\n                </Tab>\r\n              </ErrorBoundary>\r\n              <Divider fitted></Divider>\r\n              <h3 style={{ marginTop: 12, fontWeight: 630 }}>\r\n                {t(\"MarineDashboard_CurrentTankInventory\")}\r\n              </h3>\r\n              <ErrorBoundary>\r\n                <List horizontal={true}>\r\n                  <List.Content>\r\n                    <div className=\"marineDashboardThroughputSummaryListTitle\">\r\n                      {t(\"MarineDashboard_ProductName\")}\r\n                    </div>\r\n                    {tankInventory.map((item) => {\r\n                      return (\r\n                        <div className=\"marineDashboardThroughputSummaryListContent\">\r\n                          {item.ProductCode}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </List.Content>\r\n                  <List.Content>\r\n                    <div className=\"marineDashboardThroughputSummaryListTitle\">\r\n                      {t(\"MarineDashboard_ActiveTank\")}\r\n                    </div>\r\n                    {tankInventory.map((item) => {\r\n                      return (\r\n                        <div className=\"marineDashboardThroughputSummaryListContent\">\r\n                          {item.TankCode}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </List.Content>\r\n                  <List.Content>\r\n                    <div className=\"marineDashboardThroughputSummaryListTitle\">\r\n                      {t(\"MarineDashboard_CurrentStock\")}\r\n                    </div>\r\n                    {tankInventory.map((item) => {\r\n                      try {\r\n                        return (\r\n                          <div className=\"marineDashboardThroughputSummaryListContent\">\r\n                            {item.GrossVolume === null\r\n                              ? \"null\"\r\n                              : item.GrossVolume.toLocaleString()}\r\n                          </div>\r\n                        );\r\n                      } catch (error) {\r\n                        console.log(\"error in List.Content \" + error);\r\n                        return null;\r\n                      }\r\n                    })}\r\n                  </List.Content>\r\n                </List>\r\n              </ErrorBoundary>\r\n            </div>\r\n          )}\r\n        </TranslationConsumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(\r\n  OperatorDashboardThroughputSummaryComposite\r\n);\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport { Popup, List } from \"@scuf/common\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Divider } from \"@scuf/common\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\n\r\nOperatorDashboardOverviewDetails.propTypes = {\r\n  transportationType: PropTypes.string.isRequired,\r\n  filteredBayDetails: PropTypes.array.isRequired,\r\n  btnGoLiveClick: PropTypes.func.isRequired,\r\n  btnBackwardClick: PropTypes.func.isRequired,\r\n  btnForwardClick: PropTypes.func.isRequired,\r\n  ShiftsData: PropTypes.array.isRequired,\r\n  CurrentShift: PropTypes.object.isRequired,\r\n  DashboardConfig: PropTypes.object.isRequired,\r\n  transactionAndDeviceStatus: PropTypes.array.isRequired,\r\n  getQueuedTransaction: PropTypes.func.isRequired,\r\n  objOrderDetails: PropTypes.array.isRequired,\r\n  QueueDetails: PropTypes.array.isRequired,\r\n  selectedOption: PropTypes.array.isRequired,\r\n  onChangeSelectedOption: PropTypes.func.isRequired,\r\n  railOptions: PropTypes.array.isRequired,\r\n  heapClick: PropTypes.func.isRequired,\r\n  timetaken: PropTypes.number.isRequired,\r\n  viewShipmentStatus: PropTypes.number.isRequired,\r\n};\r\n\r\nOperatorDashboardOverviewDetails.defaultProps = {\r\n  objOrderDetails: null,\r\n};\r\n\r\nexport function OperatorDashboardOverviewDetails({\r\n  getRailLiveOrderDetails,\r\n  getRailOrderDetails,\r\n  handleOpen,\r\n  openBoolean,\r\n  hdnFGPrintBOL,\r\n  hdnFGPrintBOD,\r\n  hdnFGShipClose,\r\n  hdnFGRecClose,\r\n  orderDetails,\r\n  orderProductDetails,\r\n  orderloadedPartCommpartmentList,\r\n  orderloadedOtherCommpartmentList,\r\n  getOrderDetails,\r\n  print,\r\n  forceClose,\r\n  transportationType,\r\n  filteredBayDetails,\r\n  btnGoLiveClick,\r\n  btnForwardClick,\r\n  btnBackwardClick,\r\n  ShiftsData,\r\n  CurrentShift,\r\n  DashboardConfig,\r\n  transactionAndDeviceStatus,\r\n  getQueuedTransaction,\r\n  objOrderDetails,\r\n  QueueDetails,\r\n  selectedOption,\r\n  onChangeSelectedOption,\r\n  railOptions,\r\n  heapClick,\r\n  timetaken,\r\n  viewShipmentStatus,\r\n}) {\r\n  // const [selectedTransaction, setSelectedTransaction] = useState(-1);\r\n  // const [railOptions, setRailOptions] = useState([]);\r\n  //const [selectedOption, setSelectedOption] = useState(\"select\");\r\n  const [t] = useTranslation();\r\n  var [isDeviceStatusHover] = useState(false);\r\n  function timeGraphHTML() {\r\n    var timeGraphHtml = [];\r\n    var minsdiff = Math.floor(\r\n      (CurrentShift.EndTime - CurrentShift.StartTime) / 1000 / 60\r\n    );\r\n    var GraphPercentage = 100.0 / minsdiff;\r\n    var graphDuration = 0;\r\n\r\n    var requiredGraphPoints = minsdiff / 5;\r\n    var StartGraphTime = new Date(CurrentShift.StartTime);\r\n    var startwidth = Math.floor(StartGraphTime / 1000 / 60) % 5;\r\n    if (startwidth !== 0) {\r\n      requiredGraphPoints += 1;\r\n    }\r\n    for (var i = 1; i <= requiredGraphPoints; i++) {\r\n      if (i === 1) {\r\n        if (startwidth !== 0) {\r\n          if ((StartGraphTime.getMinutes() + (5 - startwidth)) % 30 !== 0) {\r\n            timeGraphHtml.push(\r\n              <div\r\n                className=\"marineGraphTimeShort\"\r\n                style={{\r\n                  borderRight: \"solid 1px #D0D0D0\",\r\n                  width: (5 - startwidth) * GraphPercentage + \"%\",\r\n                }}\r\n              >\r\n                &nbsp;\r\n              </div>\r\n            );\r\n          } else {\r\n            timeGraphHtml.push(\r\n              <div\r\n                className=\"marineGraphTimeLong\"\r\n                style={{\r\n                  borderRight: \"solid 1px #D0D0D0\",\r\n                  width: (5 - startwidth) * GraphPercentage + \"%\",\r\n                }}\r\n              >\r\n                &nbsp;\r\n              </div>\r\n            );\r\n          }\r\n          graphDuration += StartGraphTime.getMinutes() + (10 - startwidth);\r\n        } else {\r\n          if ((StartGraphTime.getMinutes() + 5) % 30 !== 0) {\r\n            timeGraphHtml.push(\r\n              <div\r\n                className=\"marineGraphTimeShort\"\r\n                style={{\r\n                  borderRight: \"solid 1px #D0D0D0\",\r\n                  width: 5 * GraphPercentage + \"%\",\r\n                }}\r\n              >\r\n                &nbsp;\r\n              </div>\r\n            );\r\n          } else {\r\n            timeGraphHtml.push(\r\n              <div\r\n                className=\"marineGraphTimeLong\"\r\n                style={{\r\n                  borderRight: \"solid 1px #D0D0D0\",\r\n                  width: 5 * GraphPercentage + \"%\",\r\n                }}\r\n              >\r\n                &nbsp;\r\n              </div>\r\n            );\r\n          }\r\n          graphDuration += StartGraphTime.getMinutes() + 10;\r\n        }\r\n      } else if (i === requiredGraphPoints) {\r\n        if (startwidth !== 0) {\r\n          if ((StartGraphTime.getMinutes() - startwidth) % 30 !== 0) {\r\n            timeGraphHtml.push(\r\n              <div\r\n                className=\"marineGraphTimeShort\"\r\n                style={{\r\n                  width: startwidth * GraphPercentage + \"%\",\r\n                }}\r\n              >\r\n                &nbsp;\r\n              </div>\r\n            );\r\n          } else {\r\n            timeGraphHtml.push(\r\n              <div\r\n                className=\"marineGraphTimeLong\"\r\n                style={{\r\n                  width: startwidth * GraphPercentage + \"%\",\r\n                }}\r\n              >\r\n                &nbsp;\r\n              </div>\r\n            );\r\n          }\r\n          graphDuration += StartGraphTime.getMinutes() + (5 - startwidth);\r\n        } else {\r\n          if (StartGraphTime.getMinutes() % 30 !== 0) {\r\n            timeGraphHtml.push(\r\n              <div\r\n                className=\"marineGraphTimeShort\"\r\n                style={{\r\n                  borderRight: \"solid 1px #D0D0D0\",\r\n                  width: 5 * GraphPercentage + \"%\",\r\n                }}\r\n              >\r\n                &nbsp;\r\n              </div>\r\n            );\r\n          } else {\r\n            timeGraphHtml.push(\r\n              <div\r\n                className=\"marineGraphTimeLong\"\r\n                style={{\r\n                  borderRight: \"solid 1px #D0D0D0\",\r\n                  width: 5 * GraphPercentage + \"%\",\r\n                }}\r\n              >\r\n                &nbsp;\r\n              </div>\r\n            );\r\n          }\r\n          graphDuration += StartGraphTime.getMinutes() + 5;\r\n        }\r\n      } else {\r\n        if (graphDuration % 30 === 0) {\r\n          timeGraphHtml.push(\r\n            <div\r\n              className=\"marineGraphTimeLong\"\r\n              style={{\r\n                borderRight: \"solid 1px #D0D0D0\",\r\n                width: 5 * GraphPercentage + \"%\",\r\n              }}\r\n            >\r\n              &nbsp;\r\n            </div>\r\n          );\r\n        } else {\r\n          timeGraphHtml.push(\r\n            <div\r\n              className=\"marineGraphTimeShort\"\r\n              style={{\r\n                borderRight: \"solid 1px #D0D0D0\",\r\n                width: 5 * GraphPercentage + \"%\",\r\n              }}\r\n            >\r\n              &nbsp;\r\n            </div>\r\n          );\r\n        }\r\n        graphDuration += 5;\r\n      }\r\n    }\r\n    return timeGraphHtml;\r\n  }\r\n\r\n  function baysInfoSuccess() {\r\n    if (filteredBayDetails !== undefined && filteredBayDetails.length !== 0) {\r\n      var resultshtml = [];\r\n      for (let j = 0; j < filteredBayDetails.length; j++) {\r\n        var loadingType = \"Dashboard_ShipmentReceipt\";\r\n        if (filteredBayDetails[j].LoadingType === \"LOADING\")\r\n          loadingType = \"Dashboard_Shipments\";\r\n        else if (filteredBayDetails[j].LoadingType === \"UNLOADING\")\r\n          loadingType = \"Dashboard_Receipts\";\r\n        else loadingType = \"Dashboard_ShipmentReceipt\";\r\n        if (\r\n          transactionAndDeviceStatus !== undefined &&\r\n          transactionAndDeviceStatus !== null\r\n        ) {\r\n          resultshtml.push(\r\n            baysComposition(\r\n              filteredBayDetails[j],\r\n              j,\r\n              loadingType,\r\n              transactionAndDeviceStatus[j]\r\n            )\r\n          );\r\n        }\r\n\r\n        // if (transportationType === Constants.TransportationType.ROAD) {\r\n        //   if (j !== 0) {\r\n        //     resultshtml.push(<div className=\"roadDashboardInQueueBac\"></div>);\r\n        //   }\r\n        //   // resultshtml.push(getQueueHTML(filteredBayDetails[j]));\r\n        //   // resultshtml += divQueueHtml;\r\n        // }\r\n      }\r\n      let marineDashboardDiv11Width = {};\r\n      if (transportationType === Constants.TransportationType.ROAD) {\r\n        marineDashboardDiv11Width = { width: \"77%\" };\r\n      } else {\r\n        marineDashboardDiv11Width = { width: \"86%\" };\r\n      }\r\n      resultshtml.push(\r\n        <div\r\n          id=\"divShiftBox\"\r\n          className=\"marineDashboardDiv11\"\r\n          style={marineDashboardDiv11Width}\r\n        >\r\n          {shiftLines()}\r\n        </div>\r\n      );\r\n      return resultshtml;\r\n    }\r\n  }\r\n\r\n  function baysComposition(\r\n    filteredBayDetail,\r\n    j,\r\n    loadingType,\r\n    transactionAndDeviceStatus\r\n  ) {\r\n    if (j !== 0) {\r\n      return (\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <table\r\n              cellSpacing=\"0\"\r\n              cellPadding=\"0\"\r\n              className=\"marineDashboardTable1\"\r\n            >\r\n              <tbody>\r\n                <tr>\r\n                  {transportationType === Constants.TransportationType.RAIL ? (\r\n                    <td className=\"railDashboardLeftTd\">\r\n                      <div className=\"marineDashboardDiv1\"></div>\r\n                      <div\r\n                        id={\"divBayWagon\" + j}\r\n                        className=\"railDashboardShiftmentHtmlSelect1\"\r\n                      >\r\n                        <select\r\n                          value={selectedOption[j]}\r\n                          onChange={(e) => {\r\n                            onChangeSelectedOption(e.target.value, j);\r\n                          }}\r\n                        >\r\n                          <option value=\"select\">{t(\"Dest_Select\")}</option>\r\n                          {railOptions[j].map((railOption) => (\r\n                            <option value={railOption.value}>\r\n                              {railOption.innerHTML}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </td>\r\n                  ) : (\r\n                    <td className=\"marineDashboardLeftTd\">\r\n                      <div className=\"marineDashboardDiv1\"></div>\r\n                      <div className=\"marineDashboardDiv2\">\r\n                        {t(loadingType)}\r\n                      </div>\r\n                    </td>\r\n                  )}\r\n\r\n                  {transportationType === Constants.TransportationType.ROAD ? (\r\n                    <td className=\"roadDashboardTd2\">\r\n                      <div className=\"marineDashboardDiv1\"></div>\r\n                      <div\r\n                        id={\"divShipment\" + j}\r\n                        className=\"marineDashboardDiv3\"\r\n                      >\r\n                        {getShipmentHTML(transactionAndDeviceStatus, j)}\r\n                      </div>\r\n                    </td>\r\n                  ) : transportationType ===\r\n                    Constants.TransportationType.RAIL ? (\r\n                    <td className=\"marineDashboardTd2\">\r\n                      <div className=\"marineDashboardDiv1\"></div>\r\n                      <div\r\n                        id={\"divShipment\" + j}\r\n                        className=\"marineDashboardDiv3\"\r\n                      >\r\n                        {getRailShipmentHTML(transactionAndDeviceStatus)}\r\n                        {selectedOption[j] !== \"select\"\r\n                          ? getTransactionHTML(\r\n                            transactionAndDeviceStatus,\r\n                            selectedOption[j]\r\n                          )\r\n                          : null}\r\n                      </div>\r\n                    </td>\r\n                  ) : (\r\n                    <td className=\"marineDashboardTd2\">\r\n                      <div className=\"marineDashboardDiv1\"></div>\r\n                      <div\r\n                        id={\"divShipment\" + j}\r\n                        className=\"marineDashboardDiv3\"\r\n                      >\r\n                        {getShipmentHTML(transactionAndDeviceStatus, j)}\r\n                      </div>\r\n                    </td>\r\n                  )}\r\n                  {transportationType === Constants.TransportationType.ROAD ? (\r\n                    <td\r\n                      id={\"tdQueue\" + j}\r\n                      className=\"roadDashboardInQueue\"\r\n                      style={{ rowspan: \"3\" }}\r\n                    >\r\n                      <div className=\"marineDashboardDiv1\"></div>\r\n                      {getQueueHTML(transactionAndDeviceStatus)}\r\n                    </td>\r\n                  ) : null}\r\n                </tr>\r\n                <tr>\r\n                  {transportationType === Constants.TransportationType.RAIL ? (\r\n                    <td className=\"railDashboardLeftTd\">\r\n                      <div className=\"railDashboardDeviceStatusDiv1\">\r\n                        {t(\"DeviceList_Status\")}\r\n                      </div>\r\n                    </td>\r\n                  ) : (\r\n                    <td className=\"marineDashboardLeftTd\">\r\n                      <div className=\"marineDashboardDiv2\">\r\n                        {t(\"DeviceList_Status\")}\r\n                      </div>\r\n                    </td>\r\n                  )}\r\n                  {transportationType === Constants.TransportationType.ROAD ? (\r\n                    <td className=\"roadDashboardTd2\">\r\n                      <div id={\"divDevice\" + j} className=\"marineDashboardDiv4\">\r\n                        {getDeviceHTMLNew(transactionAndDeviceStatus)}\r\n                      </div>\r\n                    </td>\r\n                  ) : (\r\n                    <td className=\"marineDashboardTd2\">\r\n                      <div id={\"divDevice\" + j} className=\"marineDashboardDiv4\">\r\n                        {getDeviceHTMLNew(transactionAndDeviceStatus)}\r\n                      </div>\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"marineDashboardLeftTd\">\r\n                    <div className=\"marineDashboardDiv9\">\r\n                      {filteredBayDetail.Code}\r\n                    </div>\r\n                  </td>\r\n                  {transportationType === Constants.TransportationType.ROAD ? (\r\n                    <td className=\"roadDashboardTd2\">\r\n                      <div\r\n                        id={\"divTimeGraph\" + j}\r\n                        className=\"marineDashboardDiv10\"\r\n                      >\r\n                        {timeGraphHTML()}\r\n                      </div>\r\n                    </td>\r\n                  ) : (\r\n                    <td className=\"marineDashboardTd2\">\r\n                      <div\r\n                        id={\"divTimeGraph\" + j}\r\n                        className=\"marineDashboardDiv10\"\r\n                      >\r\n                        {timeGraphHTML()}\r\n                      </div>\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </TranslationConsumer>\r\n      );\r\n    } else {\r\n      return (\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <table\r\n              cellSpacing=\"0\"\r\n              cellPadding=\"0\"\r\n              className=\"marineDashboardTable1\"\r\n            >\r\n              <tbody>\r\n                <tr>\r\n                  {transportationType === Constants.TransportationType.RAIL ? (\r\n                    <td className=\"railDashboardLeftTd\">\r\n                      <div\r\n                        id={\"divBayWagon\" + j}\r\n                        className=\"railDashboardShiftmentHtmlSelect1\"\r\n                      >\r\n                        <select\r\n                          value={selectedOption[j]}\r\n                          onChange={(e) => {\r\n                            onChangeSelectedOption(e.target.value, j);\r\n                          }}\r\n                        >\r\n                          <option value=\"select\">{t(\"Dest_Select\")}</option>\r\n                          {railOptions[j].map((railOption) => (\r\n                            <option value={railOption.value}>\r\n                              {railOption.innerHTML}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </td>\r\n                  ) : (\r\n                    <td className=\"marineDashboardLeftTd\">\r\n                      <div className=\"marineDashboardDiv2\">\r\n                        {t(loadingType)}\r\n                      </div>\r\n                    </td>\r\n                  )}\r\n                  {transportationType === Constants.TransportationType.ROAD ? (\r\n                    <td className=\"roadDashboardTd2\">\r\n                      <div\r\n                        id={\"divShipment\" + j}\r\n                        className=\"marineDashboardDiv3\"\r\n                      >\r\n                        {getShipmentHTML(transactionAndDeviceStatus, j)}\r\n                      </div>\r\n                    </td>\r\n                  ) : transportationType ===\r\n                    Constants.TransportationType.RAIL ? (\r\n                    <td className=\"marineDashboardTd2\">\r\n                      <div\r\n                        id={\"divShipment\" + j}\r\n                        className=\"marineDashboardDiv3\"\r\n                      >\r\n                        {getRailShipmentHTML(transactionAndDeviceStatus, j)}\r\n                        {selectedOption[j] !== \"select\"\r\n                          ? getTransactionHTML(\r\n                            transactionAndDeviceStatus,\r\n                            selectedOption[j]\r\n                          )\r\n                          : \"\"}\r\n                      </div>\r\n                    </td>\r\n                  ) : (\r\n                    <td className=\"marineDashboardTd2\">\r\n                      <div\r\n                        id={\"divShipment\" + j}\r\n                        className=\"marineDashboardDiv3\"\r\n                      >\r\n                        {getShipmentHTML(transactionAndDeviceStatus, j)}\r\n                      </div>\r\n                    </td>\r\n                  )}\r\n                  {transportationType === Constants.TransportationType.ROAD ? (\r\n                    <td\r\n                      id={\"tdQueue\" + j}\r\n                      className=\"roadDashboardInQueue\"\r\n                      style={{ rowspan: \"3\" }}\r\n                    >\r\n                      {getQueueHTML(transactionAndDeviceStatus)}\r\n                    </td>\r\n                  ) : null}\r\n                </tr>\r\n                <tr>\r\n                  {transportationType === Constants.TransportationType.RAIL ? (\r\n                    <td className=\"railDashboardLeftTd\">\r\n                      <div className=\"railDashboardDeviceStatusDiv1\">\r\n                        {t(\"DeviceList_Status\")}\r\n                      </div>\r\n                    </td>\r\n                  ) : (\r\n                    <td className=\"marineDashboardLeftTd\">\r\n                      <div className=\"marineDashboardDiv2\">\r\n                        {t(\"DeviceList_Status\")}\r\n                      </div>\r\n                    </td>\r\n                  )}\r\n                  {transportationType === Constants.TransportationType.ROAD ? (\r\n                    <td className=\"roadDashboardTd2\">\r\n                      <div id={\"divDevice\" + j} className=\"marineDashboardDiv4\">\r\n                        {getDeviceHTMLNew(transactionAndDeviceStatus)}\r\n                      </div>\r\n                    </td>\r\n                  ) : (\r\n                    <td className=\"marineDashboardTd2\">\r\n                      <div id={\"divDevice\" + j} className=\"marineDashboardDiv4\">\r\n                        {getDeviceHTMLNew(transactionAndDeviceStatus)}\r\n                      </div>\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"marineDashboardLeftTd\">\r\n                    <div className=\"marineDashboardDiv9\">\r\n                      {filteredBayDetail.Code}\r\n                    </div>\r\n                  </td>\r\n                  {transportationType === Constants.TransportationType.ROAD ? (\r\n                    <td className=\"roadDashboardTd2\">\r\n                      <div\r\n                        id={\"divTimeGraph\" + j}\r\n                        className=\"marineDashboardDiv10\"\r\n                      >\r\n                        {timeGraphHTML()}\r\n                      </div>\r\n                    </td>\r\n                  ) : (\r\n                    <td className=\"marineDashboardTd2\">\r\n                      <div\r\n                        id={\"divTimeGraph\" + j}\r\n                        className=\"marineDashboardDiv10\"\r\n                      >\r\n                        {timeGraphHTML()}\r\n                      </div>\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </TranslationConsumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  function shiftLines() {\r\n    var shiftLines = [];\r\n    var TodayShifts = getCurrentShifts(CurrentShift);\r\n    if (TodayShifts.length !== 0) {\r\n      var shiftDuration = Math.floor(\r\n        (CurrentShift.EndTime - CurrentShift.StartTime) / 1000 / 60\r\n      );\r\n      var GraphPercentage = 100.0 / shiftDuration;\r\n\r\n      for (var i = 0; i < TodayShifts.length; i++) {\r\n        var shift = TodayShifts[i];\r\n        if (\r\n          shift.StartTime > CurrentShift.StartTime &&\r\n          shift.StartTime < CurrentShift.EndTime\r\n        ) {\r\n          var minsdiff = Math.floor(\r\n            (shift.StartTime - CurrentShift.StartTime) / 1000 / 60\r\n          );\r\n          var gap = (minsdiff + 0.8) * GraphPercentage;\r\n          shiftLines.push(\r\n            <div\r\n              className=\"marineDashboardShiftLines1\"\r\n              style={{\r\n                left: gap + \"%\",\r\n              }}\r\n            ></div>\r\n          );\r\n        }\r\n        if (\r\n          shift.EndTime > CurrentShift.StartTime &&\r\n          shift.EndTime < CurrentShift.EndTime\r\n        ) {\r\n          var minsdiffs = Math.floor(\r\n            (CurrentShift.EndTime - shift.EndTime) / 1000 / 60\r\n          );\r\n          gap = (minsdiffs - 0.5) * GraphPercentage;\r\n          shiftLines.push(\r\n            <div\r\n              className=\"marineDashboardShiftLines2\"\r\n              style={{\r\n                right: gap + \"%\",\r\n              }}\r\n            ></div>\r\n          );\r\n        }\r\n        if (\r\n          CurrentShift.StartTime > shift.StartTime &&\r\n          CurrentShift.EndTime < shift.EndTime\r\n        ) {\r\n          shiftLines.push(<div className=\"marineDashboardShiftLines3\"></div>);\r\n        }\r\n      }\r\n    }\r\n    return shiftLines;\r\n  }\r\n\r\n  function shiftNames() {\r\n    var shiftName = [];\r\n    var TodayShifts = getCurrentShifts(CurrentShift);\r\n    if (TodayShifts.length !== 0) {\r\n      var shiftDuration = Math.floor(\r\n        (CurrentShift.EndTime - CurrentShift.StartTime) / 1000 / 60\r\n      );\r\n      var GraphPercentage = 100.0 / shiftDuration;\r\n\r\n      for (var i = 0; i < TodayShifts.length; i++) {\r\n        var shift = TodayShifts[i];\r\n        if (\r\n          shift.StartTime > CurrentShift.StartTime &&\r\n          shift.StartTime < CurrentShift.EndTime\r\n        ) {\r\n          var minsdiff = Math.floor(\r\n            (shift.StartTime - CurrentShift.StartTime) / 1000 / 60\r\n          );\r\n          var gap = (minsdiff + 0.8) * GraphPercentage;\r\n          shiftName.push(\r\n            <div\r\n              className=\"marineDashboardShiftName1\"\r\n              style={{\r\n                left: gap + \"%\",\r\n              }}\r\n            >\r\n              {/* {100 - gap > 10 ? `| Shift : ${shift.Name}` : \"|\"} */}\r\n              {100 - gap > 10\r\n                ? \"| \" + t(\"Dashboard_Shift\") + \" : \" + shift.Name\r\n                : \"|\"}\r\n            </div>\r\n          );\r\n        }\r\n        if (\r\n          shift.EndTime > CurrentShift.StartTime &&\r\n          shift.EndTime < CurrentShift.EndTime\r\n        ) {\r\n          var minsdiffs = Math.floor(\r\n            (CurrentShift.EndTime - shift.EndTime) / 1000 / 60\r\n          );\r\n          gap = (minsdiffs - 0.5) * GraphPercentage;\r\n          shiftName.push(\r\n            <div\r\n              className=\"marineDashboardShiftName2\"\r\n              style={{\r\n                right: gap + \"%\",\r\n              }}\r\n            >\r\n              {/* {100 - gap > 10 ? `Shift : ${shift.Name}  |` : \"|\"} */}\r\n              {100 - gap > 10\r\n                ? t(\"Dashboard_Shift\") + \" : \" + shift.Name + \" |\"\r\n                : \"|\"}\r\n            </div>\r\n          );\r\n        }\r\n        if (\r\n          CurrentShift.StartTime > shift.StartTime &&\r\n          CurrentShift.EndTime < shift.EndTime\r\n        ) {\r\n          shiftName.push(\r\n            <div className=\"marineDashboardShiftName3\">\r\n              {/* {\"|\" + \"Shift\" + \" : \" + shift.Name} */}\r\n              {`| Shift : ${shift.Name} `}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    }\r\n    return shiftName;\r\n  }\r\n\r\n  function getCurrentShifts() {\r\n    var todayShifts = [];\r\n    var interDayShift = null;\r\n    if (ShiftsData !== null && ShiftsData !== \"\") {\r\n      for (var i = 0; i < ShiftsData.length; i++) {\r\n        var shiftInfo = {\r\n          Name: ShiftsData[i].Name,\r\n          StartTime: ShiftsData[i].StartTime,\r\n          EndTime: ShiftsData[i].EndTime,\r\n        };\r\n        shiftInfo.StartTime.setDate(CurrentShift.StartTime.getDate());\r\n        shiftInfo.StartTime.setMonth(CurrentShift.StartTime.getMonth());\r\n        shiftInfo.StartTime.setYear(CurrentShift.StartTime.getFullYear());\r\n        shiftInfo.EndTime.setDate(CurrentShift.StartTime.getDate());\r\n        shiftInfo.EndTime.setMonth(CurrentShift.StartTime.getMonth());\r\n        shiftInfo.EndTime.setYear(CurrentShift.StartTime.getFullYear());\r\n        if (shiftInfo.StartTime > shiftInfo.EndTime) {\r\n          shiftInfo.EndTime.setDate(CurrentShift.StartTime.getDate() + 1);\r\n          interDayShift = shiftInfo;\r\n        }\r\n\r\n        todayShifts.push(shiftInfo);\r\n      }\r\n\r\n      if (ShiftsData.length > 0) {\r\n        var firstShift = {\r\n          Name: ShiftsData[0].Name,\r\n          StartTime: new Date(ShiftsData[0].StartTime),\r\n          EndTime: new Date(ShiftsData[0].EndTime),\r\n        };\r\n        firstShift.EndTime.setDate(firstShift.EndTime.getDate() + 1);\r\n        firstShift.StartTime.setDate(firstShift.StartTime.getDate() + 1);\r\n        todayShifts.push(firstShift);\r\n      }\r\n      if (interDayShift !== null) {\r\n        var interShifPrevObj = {\r\n          Name: interDayShift.Name,\r\n          StartTime: new Date(interDayShift.StartTime),\r\n          EndTime: new Date(interDayShift.EndTime),\r\n        };\r\n        interShifPrevObj.EndTime.setDate(interShifPrevObj.EndTime.getDate() - 1);\r\n        interShifPrevObj.StartTime.setDate(\r\n          interShifPrevObj.StartTime.getDate() - 1\r\n        );\r\n        todayShifts.push(interShifPrevObj);\r\n\r\n        var interShiftNextObj = {\r\n          Name: interDayShift.Name,\r\n          StartTime: new Date(interDayShift.StartTime),\r\n          EndTime: new Date(interDayShift.EndTime),\r\n        };\r\n        interShiftNextObj.EndTime.setDate(\r\n          interShiftNextObj.EndTime.getDate() + 1\r\n        );\r\n        interShiftNextObj.StartTime.setDate(\r\n          interShiftNextObj.StartTime.getDate() + 1\r\n        );\r\n        todayShifts.push(interShiftNextObj);\r\n      }\r\n    }\r\n    return todayShifts;\r\n  }\r\n\r\n  function timeGraphHtml() {\r\n    return {\r\n      ...(transportationType === Constants.TransportationType.ROAD ? (\r\n        <table\r\n          cellSpacing=\"0\"\r\n          cellPadding=\"0\"\r\n          id=\"tblFooter\"\r\n          className=\"roadTimeGraphHtml\"\r\n        >\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"timeGraphHtmlTd1\" style={{ width: \"13%\" }}>\r\n                <div style={{ float: \"right\" }}>\r\n                  <span>\r\n                    <Icon\r\n                      id=\"spanGoLive\"\r\n                      name=\"redo\"\r\n                      size=\"medium\"\r\n                      onClick={btnGoLiveClick}\r\n                    />\r\n                  </span>\r\n                  &nbsp;\r\n                  <span>\r\n                    <Icon\r\n                      id=\"btnBackward\"\r\n                      name=\"caret-left\"\r\n                      size=\"medium\"\r\n                      onClick={btnBackwardClick}\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </td>\r\n              <td className=\"timeGraphHtmlTd2\" style={{ width: \"82.5%\" }}>\r\n                <div id=\"divFooter\" className=\"timeGraphHtmlDiv1\">\r\n                  {timeGraphHtmlComposition()}\r\n                </div>\r\n              </td>\r\n              <td style={{ width: \"4.5%\" }}>\r\n                <div className=\"timeGraphHtmlDiv2\">\r\n                  <span>\r\n                    <Icon\r\n                      id=\"btnForward\"\r\n                      name=\"caret-right\"\r\n                      size=\"medium\"\r\n                      onClick={btnForwardClick}\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      ) : (transportationType === Constants.TransportationType.RAIL ? (\r\n        <table\r\n          cellSpacing=\"0\"\r\n          cellPadding=\"0\"\r\n          id=\"tblFooter\"\r\n          className=\"timeGraphHtmlTable1\"\r\n        >\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"timeGraphHtmlTd1\" style={{ width: \"12%\" }}>\r\n                <div style={{ float: \"right\" }}>\r\n                  <span>\r\n                    <Icon\r\n                      id=\"spanGoLive\"\r\n                      name=\"undo\"\r\n                      size=\"medium\"\r\n                      onClick={btnGoLiveClick}\r\n                    />\r\n                  </span>\r\n                  &nbsp;\r\n                  <span>\r\n                    <Icon\r\n                      id=\"btnBackward\"\r\n                      name=\"caret-left\"\r\n                      size=\"medium\"\r\n                      onClick={btnBackwardClick}\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </td>\r\n              <td className=\"timeGraphHtmlTd2\">\r\n                <div id=\"divFooter\" className=\"timeGraphHtmlDiv1\">\r\n                  {timeGraphHtmlComposition()}\r\n                </div>\r\n              </td>\r\n              <td style={{ width: \"2%\" }}>\r\n                <div className=\"timeGraphHtmlDiv2\" style={{ margineLeft: \"-4px\" }}>\r\n                  <span>\r\n                    <Icon\r\n                      id=\"btnForward\"\r\n                      name=\"caret-right\"\r\n                      size=\"medium\"\r\n                      onClick={btnForwardClick}\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <table\r\n          cellSpacing=\"0\"\r\n          cellPadding=\"0\"\r\n          id=\"tblFooter\"\r\n          className=\"timeGraphHtmlTable1\"\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"timeGraphHtmlTd1\" style={{ width: \"12%\" }}>\r\n                <div style={{ float: \"right\" }}>\r\n                  <span>\r\n                    <Icon\r\n                      id=\"spanGoLive\"\r\n                      name=\"undo\"\r\n                      size=\"medium\"\r\n                      onClick={btnGoLiveClick}\r\n                    />\r\n                  </span>\r\n                  &nbsp;\r\n                  <span>\r\n                    <Icon\r\n                      id=\"btnBackward\"\r\n                      name=\"caret-left\"\r\n                      size=\"medium\"\r\n                      onClick={btnBackwardClick}\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </td>\r\n              <td className=\"timeGraphHtmlTd2\" style={{ width: \"88%\" }}>\r\n                <div id=\"divFooter\" className=\"timeGraphHtmlDiv1\">\r\n                  {timeGraphHtmlComposition()}\r\n                </div>\r\n              </td>\r\n              <td style={{ width: \"2%\" }}>\r\n                <div className=\"timeGraphHtmlDiv2\">\r\n                  <span>\r\n                    <Icon\r\n                      id=\"btnForward\"\r\n                      name=\"caret-right\"\r\n                      size=\"medium\"\r\n                      onClick={btnForwardClick}\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      )))\r\n    };\r\n  }\r\n\r\n  function timeGraphHtmlComposition() {\r\n    var timeGraphHtml = [];\r\n    try {\r\n      var minsdiff = Math.floor(\r\n        (CurrentShift.EndTime - CurrentShift.StartTime) / 1000 / 60\r\n      );\r\n      var GraphPercentage = 100.0 / minsdiff;\r\n      var graphDuration = 0;\r\n      var requiredGraphPoints = minsdiff / 5;\r\n      var time = new Date(CurrentShift.StartTime);\r\n\r\n      var StartGraphTime = new Date(CurrentShift.StartTime);\r\n      var startwidth = StartGraphTime.getMinutes() % 5;\r\n      if (startwidth !== 0) {\r\n        requiredGraphPoints += 1;\r\n      }\r\n      var longWidth = parseInt(time.getMinutes() % 30);\r\n      if (longWidth !== 0) {\r\n        time.setMinutes(time.getMinutes() - parseInt(longWidth));\r\n      }\r\n      for (var i = 1; i <= requiredGraphPoints; i++) {\r\n        if (i === 1) {\r\n          if (longWidth === 0) {\r\n            timeGraphHtml.push(\r\n              <div\r\n                className=\"marineFooterTimeDiv1\"\r\n                style={{ width: 5 * GraphPercentage + \"%\", textIndent: \"50%\" }}\r\n              >\r\n                {(\"0\" + time.getHours()).slice(-2) +\r\n                  \":\" +\r\n                  (\"0\" + time.getMinutes()).slice(-2)}\r\n              </div>\r\n            );\r\n            graphDuration += 5;\r\n          } else {\r\n            if (startwidth !== 0) {\r\n              if ((StartGraphTime.getMinutes() + (5 - startwidth)) % 30 !== 0) {\r\n                timeGraphHtml.push(\r\n                  <div\r\n                    className=\"marineFooterTimeDiv1\"\r\n                    style={{ width: (5 - startwidth) * GraphPercentage + \"%\" }}\r\n                  ></div>\r\n                );\r\n              } else {\r\n                time.setMinutes(time.getMinutes() + 30);\r\n                timeGraphHtml.push(\r\n                  <div\r\n                    className=\"marineFooterTimeDiv1\"\r\n                    style={{ width: (5 - startwidth) * GraphPercentage + \"%\", textIndent: \"50%\" }}\r\n                  >\r\n                    {(\"0\" + time.getHours()).slice(-2) +\r\n                      \":\" +\r\n                      (\"0\" + time.getMinutes()).slice(-2)}\r\n                  </div>\r\n                );\r\n              }\r\n              graphDuration += StartGraphTime.getMinutes() + (10 - startwidth);\r\n            } else {\r\n              if ((StartGraphTime.getMinutes() + 5) % 30 !== 0) {\r\n                timeGraphHtml.push(\r\n                  <div\r\n                    className=\"marineFooterTimeDiv1\"\r\n                    style={{ width: 5 * GraphPercentage + \"%\" }}\r\n                  ></div>\r\n                );\r\n              } else {\r\n                time.setMinutes(time.getMinutes() + 30);\r\n                timeGraphHtml.push(\r\n                  <div\r\n                    className=\"marineFooterTimeDiv1\"\r\n                    style={{ width: 5 * GraphPercentage + \"%\", textIndent: \"50%\" }}\r\n                  >\r\n                    {(\"0\" + time.getHours()).slice(-2) +\r\n                      \":\" +\r\n                      (\"0\" + time.getMinutes()).slice(-2)}\r\n                  </div>\r\n                );\r\n              }\r\n              graphDuration += StartGraphTime.getMinutes() + 10;\r\n            }\r\n          }\r\n        } else if (i === requiredGraphPoints) {\r\n          if (startwidth !== 0) {\r\n            if ((StartGraphTime.getMinutes() - startwidth) % 30 !== 0) {\r\n              timeGraphHtml.push(\r\n                <div\r\n                  className=\"marineFooterTimeDiv1\"\r\n                  style={{ width: startwidth * GraphPercentage + \"%\" }}\r\n                ></div>\r\n              );\r\n            } else {\r\n              time.setMinutes(time.getMinutes() + 30);\r\n              timeGraphHtml.push(\r\n                <div\r\n                  className=\"marineFooterTimeDiv1\"\r\n                  style={{ width: startwidth * GraphPercentage + \"%\" }}\r\n                ></div>\r\n              );\r\n            }\r\n            graphDuration += StartGraphTime.getMinutes() + (5 - startwidth);\r\n          } else {\r\n            if (StartGraphTime.getMinutes() % 30 !== 0) {\r\n              timeGraphHtml.push(\r\n                <div\r\n                  className=\"marineFooterTimeDiv1\"\r\n                  style={{ width: 5 * GraphPercentage + \"%\" }}\r\n                ></div>\r\n              );\r\n            } else {\r\n              time.setMinutes(time.getMinutes() + 30);\r\n              timeGraphHtml.push(\r\n                <div\r\n                  className=\"marineFooterTimeDiv1\"\r\n                  style={{ width: 5 * GraphPercentage + \"%\", textIndent: \"50%\" }}\r\n                >\r\n                  {(\"0\" + time.getHours()).slice(-2) +\r\n                    \":\" +\r\n                    (\"0\" + time.getMinutes()).slice(-2)}\r\n                </div>\r\n              );\r\n            }\r\n            graphDuration += StartGraphTime.getMinutes() + 5;\r\n          }\r\n        } else {\r\n          if (graphDuration % 30 === 0) {\r\n            time.setMinutes(time.getMinutes() + 30);\r\n            timeGraphHtml.push(\r\n              <div\r\n                className=\"marineFooterTimeDiv1\"\r\n                style={{ width: 5 * GraphPercentage + \"%\", textIndent: \"50%\" }}\r\n              >\r\n                {(\"0\" + time.getHours()).slice(-2) +\r\n                  \":\" +\r\n                  (\"0\" + time.getMinutes()).slice(-2)}\r\n              </div>\r\n            );\r\n          } else {\r\n            timeGraphHtml.push(\r\n              <div\r\n                className=\"marineFooterTimeDiv1\"\r\n                style={{ width: 5 * GraphPercentage + \"%\" }}\r\n              ></div>\r\n            );\r\n          }\r\n          graphDuration += 5;\r\n        }\r\n      }\r\n      timeGraphHtml.push(\r\n        <table width=\"100%\">\r\n          <tbody>\r\n            <tr>\r\n              <td align=\"left\">\r\n                {CurrentShift.StartTime.getDate() +\r\n                  \"-\" +\r\n                  (CurrentShift.StartTime.getMonth() + 1) +\r\n                  \"-\" +\r\n                  CurrentShift.StartTime.getFullYear()}\r\n              </td>\r\n              <td align=\"right\">\r\n                {CurrentShift.EndTime.getDate() +\r\n                  \"-\" +\r\n                  (CurrentShift.EndTime.getMonth() + 1) +\r\n                  \"-\" +\r\n                  CurrentShift.EndTime.getFullYear()}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      );\r\n      return timeGraphHtml;\r\n    } catch (error) {\r\n      console.log(\"error in timeGraphHtmlComposition \" + error);\r\n      return timeGraphHtml;\r\n    }\r\n  }\r\n\r\n  function getCompartmentsHTML() {\r\n    var compartmentsHTML = [];\r\n    for (var j = 0; j < filteredBayDetails.length; j++) {\r\n      if (j !== 0) {\r\n        compartmentsHTML.push(\r\n          <div\r\n            id={\"divCompartment\" + j}\r\n            className=\"MarineDashboardCompartmentsDiv1\"\r\n          >\r\n            <div className=\"MarineDashboardCompartmentsDiv2\"></div>\r\n            <div className=\"MarineDashboardCompartmentsDiv3\">\r\n              {getCompartmentsHTMLComposition(objOrderDetails[j])}\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        compartmentsHTML.push(\r\n          <div\r\n            id={\"divCompartment\" + j}\r\n            className=\"MarineDashboardCompartmentsDiv1\"\r\n          >\r\n            <div className=\"MarineDashboardCompartmentsDiv3\">\r\n              {getCompartmentsHTMLComposition(objOrderDetails[j])}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return compartmentsHTML;\r\n  }\r\n\r\n  function getCompartmentsHTMLComposition(orderDetails) {\r\n    var resultshtml = [];\r\n    try {\r\n      if (orderDetails === undefined || orderDetails === null) {\r\n        if (transportationType === Constants.TransportationType.MARINE) {\r\n          for (var i = 0; i < DashboardConfig.NoOfMarineCompartments; i++) {\r\n            resultshtml.push(\r\n              <div className=\"marineDashboardCompartmentDiv\">\r\n                <div className=\"filled\"></div>\r\n                <span className=\"LiveCompartmentFont\">{i + 1}</span>\r\n              </div>\r\n            );\r\n          }\r\n        } else {\r\n          for (var j = 0; j < DashboardConfig.NoOfCompartments; j++) {\r\n            resultshtml.push(\r\n              <div className=\"roadDashboardCompartmentDiv\">\r\n                <div className=\"filled\"></div>\r\n                <span className=\"LiveCompartmentFont\">{j + 1}</span>\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n\r\n        resultshtml.push(\r\n          <table cellSpacing=\"0\" cellPadding=\"0\" width=\"100%\">\r\n            <tbody>\r\n              <tr>\r\n                <td align=\"left\" className=\"LiveCompartmentFont\">\r\n                  {t(\"Dashboard_ActiveTransctions\")}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        );\r\n      } else {\r\n        for (var k = 0; k < orderDetails.CompartmentInfoList.length; k++) {\r\n          var compartment = orderDetails.CompartmentInfoList[k];\r\n          var percentage =\r\n            (compartment.LoadedQty / compartment.PlannedQty) * 100;\r\n          percentage =\r\n            (orderDetails.IsShipment ? percentage : 100.0 - percentage) + \"%\";\r\n          var isDispatch = orderDetails.IsShipment ? 1 : 0;\r\n\r\n          var compOuterStyle = {};\r\n          var gradientCOlor =\r\n            compartment.Product == null\r\n              ? \"transparent\"\r\n              : \"#\" + compartment.Color;\r\n          switch (compartment.Status) {\r\n            case \"EMPTY\":\r\n            case \"UNLOAD_NOTSTARTED\":\r\n            case \"LOADING\":\r\n            case \"PART_FILLED\":\r\n            case \"INTERRUPTED\":\r\n            case \"PART_UNLOADED\":\r\n            case \"UNLOADING\":\r\n            case \"FORCE_COMPLETED\":\r\n            case \"COMPLETED\":\r\n            case \"DECANTED\":\r\n              compOuterStyle = {\r\n                cursor: \"pointer\",\r\n                backgroundColor: \"transparent\",\r\n                backgroundImage:\r\n                  \"linear-gradient(135deg, transparent 24%, \" +\r\n                  gradientCOlor +\r\n                  \" 25%, \" +\r\n                  gradientCOlor +\r\n                  \" 26%, transparent 27%, transparent 74%, \" +\r\n                  gradientCOlor +\r\n                  \" 75%, \" +\r\n                  gradientCOlor +\r\n                  \" 76%, transparent 77%, transparent)\",\r\n                backgroundSize: \"10px 10px\",\r\n              };\r\n              break;\r\n            case \"OVER_FILLED\":\r\n              compOuterStyle = {\r\n                borderTop: \"1px solid #EE3124\",\r\n                cursor: \"pointer\",\r\n                backgroundColor: \"transparent\",\r\n                backgroundImage:\r\n                  \"linear-gradient(135deg, transparent 24%,\" +\r\n                  gradientCOlor +\r\n                  \" 25%, \" +\r\n                  gradientCOlor +\r\n                  \" 26%, transparent 27%, transparent 74%, \" +\r\n                  gradientCOlor +\r\n                  \" 75%, \" +\r\n                  gradientCOlor +\r\n                  \" 76%, transparent 77%, transparent)\",\r\n                backgroundSize: \"10px 10px\",\r\n              };\r\n              break;\r\n            case \"OVER_UNLOADED\":\r\n              compOuterStyle = {\r\n                borderBootom: \"1px solid #EE3124\",\r\n                cursor: \"pointer\",\r\n                backgroundColor: \"transparent\",\r\n                backgroundImage:\r\n                  \"linear-gradient(135deg, transparent 24%, \" +\r\n                  gradientCOlor +\r\n                  \" 25%, rgba(0, 0, 0, .3) 26%, transparent 27%, transparent 74%, \" +\r\n                  gradientCOlor +\r\n                  \" 75%, \" +\r\n                  gradientCOlor +\r\n                  \" 76%, transparent 77%, transparent)\",\r\n                backgroundSize: \"10px 10px\",\r\n              };\r\n              break;\r\n            default:\r\n              compOuterStyle = {};\r\n              break;\r\n          }\r\n          resultshtml.push(\r\n            <div>\r\n              <div className=\"marineDashboardCompartmentDiv\">\r\n                <Popup\r\n                  className=\"popup-theme-wrap operatorDBPopup\"\r\n                  style={{ width: 160, padding: 15 }}\r\n                  element={\r\n                    <div style={compOuterStyle} className=\"filled\">\r\n                      <div\r\n                        className=\"filling\"\r\n                        style={{\r\n                          bottom: \"0\",\r\n                          backgroundColor:\r\n                            compartment.Product == null\r\n                              ? \"transparent\"\r\n                              : \"#\" + compartment.Color + \"\",\r\n                          height: percentage + \"\",\r\n                        }}\r\n\r\n                      // ref={(node) => {\r\n                      //   if (node) {\r\n                      //     node.style.setProperty(\r\n                      //       \"background-color\",\r\n                      //       compartment.Product == null\r\n                      //         ? \"transparent\"\r\n                      //         : \"#\" + compartment.Color + \"\",\r\n                      //       \"important\"\r\n                      //     );\r\n                      //     node.style.setProperty(\r\n                      //       \"height\",\r\n                      //       percentage + \"\",\r\n                      //       \"important\"\r\n                      //     );\r\n                      //   }\r\n                      // }}\r\n                      ></div>\r\n                    </div>\r\n                  }\r\n                  hoverable={false}\r\n                  on=\"click\"\r\n                >\r\n                  {CompartmentHoverDetails(\r\n                    compartment.Code,\r\n                    compartment.Customer,\r\n                    compartment.SFL.toLocaleString() + \" \" + orderDetails.UOM,\r\n                    compartment.PlannedQty.toLocaleString() +\r\n                    \" \" +\r\n                    orderDetails.UOM,\r\n                    compartment.LoadedQty.toLocaleString() +\r\n                    \" \" +\r\n                    orderDetails.UOM,\r\n                    isDispatch\r\n                  )}\r\n                </Popup>\r\n\r\n                <span className=\"LiveCompartmentFont\">{compartment.Code}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n        resultshtml.push(\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <table\r\n                cellSpacing=\"0\"\r\n                cellPadding=\"0\"\r\n                width=\"100%\"\r\n                className=\"LiveCompartmentFont\"\r\n              >\r\n                <tbody>\r\n                  <tr style={{ fontWeight: \"bold\" }}>\r\n                    <td align=\"left\">\r\n                      {orderDetails.IsShipment\r\n                        ? t(\"RoadDashboard_CurrentShipment\")\r\n                        : t(\"RoadDashboard_CurrentReceipt\")}\r\n                    </td>\r\n                    <td align=\"right\">\r\n                      {t(\r\n                        transportationType === Constants.TransportationType.ROAD\r\n                          ? \"DriverInfo_Code\"\r\n                          : \"CaptainInfo_Code\"\r\n                      ) +\r\n                        \"- \" +\r\n                        (orderDetails.Driver == null\r\n                          ? \"      \"\r\n                          : orderDetails.Driver)}\r\n                    </td>\r\n                  </tr>\r\n                  <tr style={{ fontWeight: \"bold\" }}>\r\n                    <td align=\"left\">{orderDetails.Code} </td>\r\n                    <td align=\"right\">\r\n                      {t(\r\n                        transportationType === Constants.TransportationType.ROAD\r\n                          ? \"Vehicle_Code\"\r\n                          : transportationType ===\r\n                            Constants.TransportationType.RAIL\r\n                            ? \"Wagon_Code\"\r\n                            : \"Vessel_Code\"\r\n                      ) +\r\n                        \"- \" +\r\n                        orderDetails.Vehicle}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            )}\r\n          </TranslationConsumer>\r\n        );\r\n      }\r\n      return resultshtml;\r\n    } catch (error) {\r\n      console.log(\"error in getCompartmentsHTMLComposition\" + error);\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  function getQueueHTML(objShipment) {\r\n    try {\r\n      if (objShipment !== undefined) {\r\n        var shipmentHtml = [];\r\n        var QueueCount =\r\n          objShipment.QueueCount > 3 ? 3 : objShipment.QueueCount;\r\n        if (QueueCount > 0) {\r\n          var divHeight = QueueCount * 15 + \"px\";\r\n          var divMarginTop =\r\n            parseInt(divHeight) / parseInt(QueueCount - 1) + 10 + \"px\";\r\n          divMarginTop = \"3px\";\r\n\r\n          var IsOdd = QueueCount % 2;\r\n\r\n          var shipmentHtmlComposeQueueCount1 = [];\r\n          for (var i = 0; i < QueueCount; i++) {\r\n            if (i === 0) {\r\n              shipmentHtmlComposeQueueCount1.push(\r\n                <div className=\"roadDashboardDiv1\"></div>\r\n              );\r\n            } else if (i === QueueCount - 1) {\r\n              shipmentHtmlComposeQueueCount1.push(\r\n                <div className=\"roadDashboardDiv2\"></div>\r\n              );\r\n            } else {\r\n              shipmentHtmlComposeQueueCount1.push(\r\n                <div className=\"roadDashboardDiv3\"></div>\r\n              );\r\n            }\r\n          }\r\n\r\n          divMarginTop = \"1px\";\r\n          // var bCode = \"'\" + objShipment.BayCode + \"'\";\r\n          var shipmentHtmlComposeQueueCount2 = [];\r\n          for (var j = 0; j < QueueCount; j++) {\r\n            if (IsOdd === 0 && j === 1) {\r\n              shipmentHtmlComposeQueueCount2.push(\r\n                <div className=\"roadDashboardDiv8\"></div>\r\n              );\r\n            } else {\r\n              shipmentHtmlComposeQueueCount2.push(\r\n                <div className=\"roadDashboardDiv9\"></div>\r\n              );\r\n            }\r\n          }\r\n\r\n          if (objShipment.QueueCount > 3) {\r\n            shipmentHtmlComposeQueueCount2.push(\r\n              <div className=\"roadDashboardDiv10\"></div>\r\n            );\r\n          }\r\n          shipmentHtml.push(\r\n            <div className=\"roadDashboardDiv4\">\r\n              <div className=\"roadDashboardDiv5\">&nbsp;</div>\r\n              <div className=\"roadDashboardDiv6\"></div>\r\n              <div className=\"roadDashboardDiv7\"></div>\r\n              <div\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  height: divHeight,\r\n                  marginTop: divMarginTop,\r\n                  float: \"left\",\r\n                  width: \"20px\",\r\n                }}\r\n              >\r\n                {shipmentHtmlComposeQueueCount1}\r\n              </div>\r\n              <Popup\r\n                style={{ padding: 15 }}\r\n                className=\"popup-theme-wrap operatorDBPopup\"\r\n                element={\r\n                  <div\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      height: \"1px\",\r\n                      marginTop: divMarginTop,\r\n                      float: \"left\",\r\n                      width: \"60px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onClick={() => {\r\n                      getQueuedTransaction(objShipment.BayCode);\r\n                    }}\r\n                  >\r\n                    {shipmentHtmlComposeQueueCount2}\r\n                  </div>\r\n                }\r\n                hoverable={false}\r\n                on=\"click\"\r\n              >\r\n                {drawQueuedTransactions()}\r\n              </Popup>\r\n            </div>\r\n          );\r\n        } else {\r\n          shipmentHtml.push(\r\n            <div className=\"roadDashboardDiv11\">\r\n              <div className=\"roadDashboardDiv12\">&nbsp;</div>\r\n              <div className=\"roadDashboardDiv13\"></div>\r\n              <div className=\"roadDashboardDiv14\">\r\n                <Icon\r\n                  root=\"building\"\r\n                  name=\"close-circled\"\r\n                  size=\"small\"\r\n                  className=\"roadDashboardDiv15\"\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        return shipmentHtml;\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error in getQueueHTML \" + error);\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  function drawQueuedTransactions() {\r\n    var hoverHtml = [];\r\n    if (QueueDetails !== null && QueueDetails.length > 0) {\r\n      hoverHtml.push(\r\n        <div className=\"roadDashboardQueuedTitle\">\r\n          <h4>\r\n            {t(\"RoadDashboard_Total_in_queue\") + \" - \" + QueueDetails.length}\r\n          </h4>\r\n        </div>\r\n      );\r\n      var hoverHtmlCompose = [];\r\n      for (var i = 0; i < QueueDetails.length; i++) {\r\n        if (i !== QueueDetails.length - 1 && QueueDetails.length > 1) {\r\n          hoverHtmlCompose.push(\r\n            <div\r\n              className=\"marineDashboardQueuedTransactionsDiv2\"\r\n              style={{ left: i * 195 + \"px\", height: \"130px\" }}\r\n            >\r\n              <div style={{ marginBottom: \"10px\" }}>\r\n                {`${t(\"RoadDashboard_QueueTranNo\")} -  ${QueueDetails[i].TransactionCode\r\n                  }`}\r\n              </div>\r\n              <div style={{ marginBottom: \"10px\" }}>\r\n                {t(\"RoadDashboard_Driver_Code\") +\r\n                  \" - \" +\r\n                  (QueueDetails[i].Driver === null\r\n                    ? \"     - \"\r\n                    : QueueDetails[i].Driver)}\r\n              </div>\r\n              <div style={{ marginBottom: \"10px\" }}>\r\n                {`${t(\"RoadDashboard_Vehicle_Code\")} - ${QueueDetails[i].vehicle\r\n                  }`}\r\n              </div>\r\n            </div>\r\n          );\r\n        } else {\r\n          hoverHtmlCompose.push(\r\n            <div\r\n              className=\"marineDashboardQueuedTransactionsDiv3\"\r\n              style={{ left: i * 195 + \"px\" }}\r\n            >\r\n              <div style={{ marginBottom: \"10px\" }}>\r\n                {`${t(\"RoadDashboard_QueueTranNo\")} - ${QueueDetails[i].TransactionCode\r\n                  }`}\r\n              </div>\r\n              <div style={{ marginBottom: \"10px\" }}>\r\n                {t(\"RoadDashboard_Driver_Code\") +\r\n                  \" - \" +\r\n                  (QueueDetails[i].Driver === null\r\n                    ? \"     - \"\r\n                    : QueueDetails[i].Driver)}\r\n              </div>\r\n              <div style={{ marginBottom: \"10px\" }}>\r\n                {`${t(\"RoadDashboard_Vehicle_Code\")} - ${QueueDetails[i].vehicle\r\n                  }`}\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      hoverHtml.push(\r\n        <div\r\n          style={{ width: QueueDetails.length * 195 + \"px\", height: \"130px\" }}\r\n        >\r\n          <div>\r\n            <span style={{ font: \"normal bold 18px Arial\" }}></span>\r\n          </div>\r\n          <div style={{ fontSize: \"13px\" }}>{hoverHtmlCompose}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return hoverHtml;\r\n  }\r\n\r\n  function CompartmentHoverDetails(\r\n    code,\r\n    customer,\r\n    SFL,\r\n    PlanQty,\r\n    CurrentQty,\r\n    isDispatch\r\n  ) {\r\n    return (\r\n      <div className=\"marineDashboardCompartmentLiveDetailsDiv\">\r\n        <div className=\"marineDashboardCompartmentHoverDetailsDiv1\">\r\n          <span className=\"marineDashboardCompartmentHoverDetailsSpan1\">\r\n            {t(\"MarineDashboard_Compartment\") + \" - \" + code}\r\n          </span>\r\n          <br />\r\n          <span className=\"marineDashboardCompartmentHoverDetailsSpan2\">\r\n            {(isDispatch === 1\r\n              ? t(\"MarineDashboard_Customer\")\r\n              : t(\"MarineDashboard_Supplier\")) +\r\n              \" : \" +\r\n              customer}\r\n          </span>\r\n          <br />\r\n        </div>\r\n        <div className=\"marineDashboardCompartmentHoverDetailsDiv2\">\r\n          <span className=\"marineDashboardCompartmentHoverDetailsSpan3\">\r\n            {t(\"MarineDashboard_SFL\") + \" : \" + SFL}\r\n          </span>\r\n          <br />\r\n        </div>\r\n        <div className=\"marineDashboardCompartmentHoverDetailsDiv2\">\r\n          <span className=\"marineDashboardCompartmentHoverDetailsSpan3\">\r\n            {t(\"MarineDashboard_Planned_Quantity\") + \" : \"}\r\n          </span>\r\n          <br />\r\n          <span className=\"marineDashboardCompartmentHoverDetailsSpan1\">\r\n            {PlanQty}\r\n          </span>\r\n          <br />\r\n          <span className=\"marineDashboardCompartmentHoverDetailsSpan3\">\r\n            {t(\"MarineDashboard_Current_Quantity\") + \" : \"}\r\n          </span>\r\n          <br />\r\n          <span className=\"marineDashboardCompartmentHoverDetailsSpan1\">\r\n            {CurrentQty}\r\n          </span>\r\n          <br />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function getShipmentHTML(objShipment, parentid) {\r\n    try {\r\n      if (objShipment !== undefined) {\r\n        var leakageObjects = [];\r\n        var shipmentHtml = [];\r\n        var shiftDuration = Math.floor(\r\n          (CurrentShift.EndTime - CurrentShift.StartTime) / 1000 / 60\r\n        );\r\n        var GraphPercentage = 100.0 / shiftDuration;\r\n        for (var i = 0; i < objShipment.TransactionAuditList.length; i++) {\r\n          let shipment = objShipment.TransactionAuditList[i];\r\n          var gap = 0;\r\n          var shipmentStartTime = \"\";\r\n          if (shipment.StartTime != null)\r\n            shipmentStartTime = new Date(shipment.StartTime);\r\n          var shipmentEndTime = null;\r\n          if (shipment.EndTime != null)\r\n            shipmentEndTime = new Date(shipment.EndTime);\r\n          if (shipmentStartTime > CurrentShift.StartTime) {\r\n            var minsdiff = Math.floor(\r\n              (shipmentStartTime - CurrentShift.StartTime) / 1000 / 60\r\n            );\r\n            gap = minsdiff * GraphPercentage;\r\n          }\r\n          var ShipmentGraphPercentage = 0;\r\n          if (shipmentEndTime != null) {\r\n            if (\r\n              shipmentEndTime < CurrentShift.EndTime &&\r\n              shipmentStartTime < CurrentShift.StartTime\r\n            ) {\r\n              ShipmentGraphPercentage =\r\n                GraphPercentage *\r\n                ((shipmentEndTime - CurrentShift.StartTime) / 1000 / 60);\r\n            } else if (\r\n              shipmentEndTime > CurrentShift.EndTime &&\r\n              shipmentStartTime < CurrentShift.StartTime\r\n            ) {\r\n              ShipmentGraphPercentage = 100;\r\n            } else if (\r\n              shipmentStartTime > CurrentShift.StartTime &&\r\n              shipmentEndTime < CurrentShift.EndTime\r\n            ) {\r\n              ShipmentGraphPercentage =\r\n                GraphPercentage *\r\n                ((shipmentEndTime - shipmentStartTime) / 1000 / 60);\r\n            } else if (\r\n              shipmentEndTime > CurrentShift.EndTime &&\r\n              shipmentStartTime > CurrentShift.StartTime\r\n            ) {\r\n              ShipmentGraphPercentage =\r\n                GraphPercentage *\r\n                ((CurrentShift.EndTime - shipmentStartTime) / 1000 / 60);\r\n            }\r\n          } else {\r\n            if (shipmentStartTime < CurrentShift.StartTime) {\r\n              ShipmentGraphPercentage = 100;\r\n            } else {\r\n              ShipmentGraphPercentage =\r\n                GraphPercentage *\r\n                ((CurrentShift.EndTime - shipmentStartTime) / 1000 / 60);\r\n            }\r\n          }\r\n          let shipDevID = \"Bay_\" + parentid + \"Transaction_\" + i;\r\n          // var objShipmentCode = \"'\" + shipment.TransactionCode + \"'\";\r\n          // var objBayCode = \"'\" + parentid + \"'\";\r\n          // var objType = \"'\" + shipment.TransactionType + \"'\";\r\n          // var objTimeTaken = \"'\" + shipment.TotalTime + \"'\";\r\n\r\n          if (\r\n            shipment.TransactionType === 0 ||\r\n            shipment.TransactionType === 1\r\n          ) {\r\n            if (\r\n              (timetaken === 0 ||\r\n                (shipment.TotalTime <= timetaken && timetaken !== 75) ||\r\n                (timetaken === 75 && shipment.TotalTime > 60)) &&\r\n              (viewShipmentStatus === 0 ||\r\n                (viewShipmentStatus === 1 && shipment.IsCompleted) ||\r\n                (viewShipmentStatus === 2 && shipment.EndIndicator === 3) ||\r\n                (viewShipmentStatus === 3 && shipment.HasAlarmOccured))\r\n            ) {\r\n              var radiusstyle = {};\r\n              if (\r\n                shipment.StartIndicator === 1 &&\r\n                shipmentStartTime > CurrentShift.StartTime\r\n              )\r\n                radiusstyle = {\r\n                  borderTopLeftRadius: \"12px\",\r\n                  borderBottomLeftRadius: \"12px\",\r\n                };\r\n              else if (shipment.StartIndicator === 2) {\r\n                radiusstyle = {};\r\n              } else if (\r\n                shipment.StartIndicator === 3 &&\r\n                shipmentStartTime < CurrentShift.StartTime\r\n              )\r\n                radiusstyle = {\r\n                  borderLeftColor: \"red\",\r\n                  borderLeftWidth: \"10px\",\r\n                  borderLeftStyle: \"solid\",\r\n                };\r\n              if (\r\n                shipment.EndIndicator === 1 &&\r\n                !(\r\n                  shipmentEndTime === null ||\r\n                  shipmentEndTime > CurrentShift.EndTime\r\n                )\r\n              ) {\r\n                radiusstyle[\"borderTopRightRadius\"] = \"12px\";\r\n                radiusstyle[\"borderBottomRightRadius\"] = \"12px\";\r\n              } else if (shipment.StartIndicator === 2) {\r\n              } else if (\r\n                shipment.EndIndicator === 3 &&\r\n                !(\r\n                  shipmentEndTime === null ||\r\n                  shipmentEndTime > CurrentShift.EndTime\r\n                )\r\n              ) {\r\n                radiusstyle[\"borderRightColor\"] = \"red\";\r\n                radiusstyle[\"borderRightWidth\"] = \"10px\";\r\n                radiusstyle[\"borderRightStyle\"] = \"solid\";\r\n              }\r\n              var shipBackColor = shipment.HasAlarmOccured\r\n                ? \"marineDashboardShipmentDiv2Red\"\r\n                : \"marineDashboardShipmentDiv2\";\r\n              var shipClass =\r\n                shipmentEndTime === null ? \"LiveShipmentBar\" : \"ShipmentBar\";\r\n\r\n              var shipstyle =\r\n                shipmentEndTime === null\r\n                  ? {\r\n                    zIndex: \"1\",\r\n                    width: ShipmentGraphPercentage + \"%\",\r\n                    borderBottom: \"dashed 1px #D0D0D0\",\r\n                    position: \"absolute\",\r\n                    left: gap + \"%\",\r\n                  }\r\n                  : {\r\n                    zIndex: \"1\",\r\n                    width: ShipmentGraphPercentage + \"%\",\r\n                    cursor: \"pointer\",\r\n                    borderBottom: \"dashed 1px #D0D0D0\",\r\n                    position: \"absolute\",\r\n                    left: gap + \"%\",\r\n                  };\r\n\r\n              var shipmentHtmlCompose = [];\r\n              if (shipmentEndTime !== null) {\r\n              }\r\n              shipmentHtmlCompose.push(\r\n                <div className=\"marineDashboardShipmentDiv4\">\r\n                  {shipmentStartTime < CurrentShift.StartTime ||\r\n                    shipmentEndTime === null ||\r\n                    shipmentEndTime > CurrentShift.EndTime\r\n                    ? \"\"\r\n                    : (\"0\" + shipmentEndTime.getHours()).slice(-2) +\r\n                    \":\" +\r\n                    (\"0\" + shipmentEndTime.getMinutes()).slice(-2)}\r\n                </div>\r\n              );\r\n\r\n              shipmentHtml.push(\r\n                <div>\r\n                  <Popup\r\n                    position=\"top left\"\r\n                    hoverable={false}\r\n                    open={openBoolean.key === shipDevID ? openBoolean.value : false}\r\n                    element={\r\n                      <div\r\n                        id={shipDevID}\r\n                        className={\r\n                          shipment.HasAlarmOccured\r\n                            ? \"failureship \"\r\n                            : \"shipment \"\r\n                        }\r\n                        data-toggle=\"popover\"\r\n                        style={shipstyle}\r\n                        onClick={() => {\r\n                          getOrderDetails(\r\n                            shipment.TransactionCode,\r\n                            shipment.TransactionType === 0\r\n                              ? \"Dispatch\"\r\n                              : shipment.TransactionType === 1\r\n                                ? \"Receipt\"\r\n                                : \"\",\r\n                            shipment.TotalTime\r\n                          );\r\n                          handleOpen(shipDevID, true);\r\n                        }}\r\n                      >\r\n                        <div className=\"marineDashboardShipmentDiv1\">\r\n                          {shipmentStartTime < CurrentShift.StartTime ||\r\n                            shipmentEndTime == null ||\r\n                            shipmentEndTime > CurrentShift.EndTime\r\n                            ? \"\"\r\n                            : shipment.TransactionCode}\r\n                        </div>\r\n                        <div className={shipClass} style={radiusstyle}></div>\r\n                        <div className={shipBackColor}>\r\n                          <div className=\"marineDashboardShipmentDiv3\">\r\n                            {shipmentStartTime < CurrentShift.StartTime ||\r\n                              shipmentEndTime == null ||\r\n                              shipmentEndTime > CurrentShift.EndTime\r\n                              ? \"\"\r\n                              : (\"0\" + shipmentStartTime.getHours()).slice(-2) +\r\n                              \":\" +\r\n                              (\"0\" + shipmentStartTime.getMinutes()).slice(\r\n                                -2\r\n                              )}\r\n                          </div>\r\n                          {shipmentHtmlCompose}\r\n                        </div>\r\n                      </div>\r\n                    }\r\n                    on=\"click\"\r\n                  >\r\n                    {orderDetails !== null &&\r\n                      orderDetails.CompartmentInfoList !== null ? (\r\n                      <TranslationConsumer>\r\n                        {(t) => (\r\n                          <div\r\n                            className=\"operatorOrder\"\r\n                            onMouseEnter={() => {\r\n                              handleOpen(shipDevID, true);\r\n                            }}\r\n                            onMouseLeave={() => {\r\n                              handleOpen(shipDevID, false);\r\n                            }}\r\n                            style={{\r\n                              width: (\r\n                                orderloadedPartCommpartmentList.length < 4 ? \"720px\" : (\r\n                                  orderloadedPartCommpartmentList.length === 4 ? \"800px\" : \"930px\"\r\n                                )\r\n                              )\r\n                            }}\r\n                          >\r\n                            <div className=\"operatorOrderButtonColumn\">\r\n                              <div\r\n                                className={\r\n                                  \"operatorOrderForceClose \" +\r\n                                  (orderDetails.Status !== \"CLOSED\" &&\r\n                                    orderDetails.Status !== \"LOADING\" &&\r\n                                    orderDetails.Status !== \"UNLOADING\" &&\r\n                                    ((orderDetails.TransactionType === 0 &&\r\n                                      hdnFGShipClose) ||\r\n                                      (orderDetails.TransactionType === 1 &&\r\n                                        hdnFGRecClose))\r\n                                    ? \"operatorOrderForceCloseEnable\"\r\n                                    : \"operatorOrderForceCloseDisable\")\r\n                                }\r\n                                // style={\r\n                                //   orderDetails.Status !== \"CLOSED\" &&\r\n                                //   orderDetails.Status !== \"LOADING\" &&\r\n                                //   orderDetails.Status !== \"UNLOADING\" &&\r\n                                //   ((orderDetails.TransactionType === 0 &&\r\n                                //     hdnFGShipClose) ||\r\n                                //     (orderDetails.TransactionType === 1 &&\r\n                                //       hdnFGRecClose))\r\n                                //     ? {\r\n                                //         backgroundColor: \"#F0F0F0\",\r\n                                //         cursor: \"pointer\",\r\n                                //       }\r\n                                //     : { color: \"#D3D3D3\" }\r\n                                // }\r\n                                onClick={() => {\r\n                                  if (\r\n                                    orderDetails.Status !== \"CLOSED\" &&\r\n                                    orderDetails.Status !== \"LOADING\" &&\r\n                                    orderDetails.Status !== \"UNLOADING\" &&\r\n                                    ((orderDetails.TransactionType === 0 &&\r\n                                      hdnFGShipClose) ||\r\n                                      (orderDetails.TransactionType === 1 &&\r\n                                        hdnFGRecClose))\r\n                                  ) {\r\n                                    forceClose(\r\n                                      orderDetails.Code,\r\n                                      orderDetails.TransactionType === 0\r\n                                        ? \"Dispatch\"\r\n                                        : orderDetails.TransactionType === 1\r\n                                          ? \"Receipt\"\r\n                                          : \"\"\r\n                                    );\r\n                                  }\r\n                                }}\r\n                              >\r\n                                {t(\"OperatorDashboard_OrderForceClosure\")}\r\n                              </div>\r\n                              <div\r\n                                className={\r\n                                  \"operatorOrderPrint \" +\r\n                                  (orderDetails.Status === \"CLOSED\" &&\r\n                                    ((orderDetails.TransactionType === 0 &&\r\n                                      hdnFGPrintBOL) ||\r\n                                      (orderDetails.TransactionType === 1 &&\r\n                                        hdnFGPrintBOD))\r\n                                    ? \"operatorOrderPrintClosed\"\r\n                                    : \"operatorOrderPrintOpen\")\r\n                                }\r\n                                // style={\r\n\r\n                                //     ? {\r\n                                //         backgroundColor: \"#F0F0F0\",\r\n                                //         fontWeight: \"bold\",\r\n                                //         cursor: \"pointer\",\r\n                                //       }\r\n                                //     : { color: \"#D3D3D3\" }\r\n                                // }\r\n                                onClick={() => {\r\n                                  if (\r\n                                    orderDetails.Status === \"CLOSED\" &&\r\n                                    ((orderDetails.TransactionType === 0 &&\r\n                                      hdnFGPrintBOL) ||\r\n                                      (orderDetails.TransactionType === 1 &&\r\n                                        hdnFGPrintBOD))\r\n                                  ) {\r\n                                    print(\r\n                                      orderDetails.Code,\r\n                                      orderDetails.TransactionType === 0\r\n                                        ? \"Dispatch\"\r\n                                        : orderDetails.TransactionType === 1\r\n                                          ? \"Receipt\"\r\n                                          : \"\"\r\n                                    );\r\n                                  }\r\n                                }}\r\n                              >\r\n                                {orderDetails.TransactionType === 0\r\n                                  ? t(\"OperatorDashboard_OrderPrintBOL\")\r\n                                  : t(\"OperatorDashboard_OrderPrintBOD\")}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div\r\n                              className=\"operatorOrdertransactionInfo\"\r\n                              style={\r\n                                transportationType ===\r\n                                  Constants.TransportationType.ROAD\r\n                                  ? { paddingBottom: 0 }\r\n                                  : {}\r\n                              }\r\n                            >\r\n                              <div style={{ fontWeight: \"bold\" }}>\r\n                                {orderDetails.TransactionType === 0\r\n                                  ? \"Shipment\"\r\n                                  : orderDetails.TransactionType === 1\r\n                                    ? \"Receipt\"\r\n                                    : \"\"}\r\n                                {\" No - \" + orderDetails.Code}\r\n                              </div>\r\n                              <Divider></Divider>\r\n                              <div\r\n                                style={{\r\n                                  borderBottom: \"1px dashed #A0A0A0\",\r\n                                  paddingBottom: 15,\r\n                                  marginBottom: 15,\r\n                                }}\r\n                              >\r\n                                {transportationType ===\r\n                                  Constants.TransportationType.ROAD ? (\r\n                                  <div style={{ marginBottom: 5 }}>\r\n                                    {t(\"OperatorDashboard_OrderDriverCode\") +\r\n                                      \" - \"}\r\n                                    <span style={{ fontWeight: \"bold\" }}>\r\n                                      {orderDetails.Driver === null\r\n                                        ? \"- \"\r\n                                        : orderDetails.Driver}\r\n                                    </span>\r\n                                  </div>\r\n                                ) : (\r\n                                  <div></div>\r\n                                )}\r\n\r\n                                <div>\r\n                                  {t(\r\n                                    transportationType ===\r\n                                      Constants.TransportationType.ROAD\r\n                                      ? \"Vehicle_Code\"\r\n                                      : transportationType ===\r\n                                        Constants.TransportationType.RAIL\r\n                                        ? \"Wagon_Code\"\r\n                                        : \"OperatorDashboard_OrderVesselCode\"\r\n                                  ) + \" - \"}\r\n                                  <span style={{ fontWeight: \"bold\" }}>\r\n                                    {orderDetails.Vehicle}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                              <List horizontal={true}>\r\n                                <List.Content>\r\n                                  <div className=\"operatorOrdertransactionInfoTitle\">\r\n                                    {t(\"OperatorDashboard_OrderStatus\") + \":\"}\r\n                                  </div>\r\n                                  <div className=\"operatorOrdertransactionInfoTitle\">\r\n                                    {t(\"OperatorDashboard_OrderAlarmsOccured\") +\r\n                                      \":\"}\r\n                                  </div>\r\n                                  <div className=\"operatorOrdertransactionInfoTitle\">\r\n                                    {t(\"OperatorDashboard_OrderTimeTakne\") +\r\n                                      \":\"}\r\n                                  </div>\r\n                                </List.Content>\r\n                                <List.Content>\r\n                                  <div className=\"operatorOrdertransactionInfoContent\">\r\n                                    {orderDetails.Status}\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"operatorOrdertransactionInfoContent\"\r\n                                    style={\r\n                                      orderDetails.AlarmCount > 0\r\n                                        ? { color: \"red\" }\r\n                                        : {}\r\n                                    }\r\n                                  >\r\n                                    {orderDetails.AlarmCount.toLocaleString()}\r\n                                  </div>\r\n                                  <div className=\"operatorOrdertransactionInfoContent\">\r\n                                    {orderDetails.TotalTime.toLocaleString() +\r\n                                      \" \" +\r\n                                      t(\"OperatorDashboard_OrderMin\")}\r\n                                  </div>\r\n                                </List.Content>\r\n                              </List>\r\n                              <Divider direction=\"vertical\"></Divider>\r\n                            </div>\r\n\r\n                            <div className=\"operatorOrderProductAndCompartmentDetails\">\r\n                              <div\r\n                                className=\"operatorOrderProductAndCompartmentDetailsTitle\"\r\n                                style={\r\n                                  orderloadedOtherCommpartmentList.length > 0\r\n                                    ? { paddingTop: 2, paddingBottom: 12 }\r\n                                    : {}\r\n                                }\r\n                              >\r\n                                {t(\r\n                                  \"OperatorDashboard_OrderProductAndCompartment\"\r\n                                )}\r\n                              </div>\r\n                              <div style={{ display: \"flex\" }}>\r\n                                <div\r\n                                  className=\"operatorOrderProduct\"\r\n                                >\r\n                                  {orderProductDetails.map((item) => {\r\n                                    let prodColor =\r\n                                      item.Color !== \"\"\r\n                                        ? \"#\" + item.Color\r\n                                        : \"#000000\";\r\n                                    return (\r\n                                      <div\r\n                                        style={{\r\n                                          color: prodColor,\r\n                                          marginBottom: 5,\r\n                                        }}\r\n                                      >\r\n                                        <div\r\n                                          className=\"operatorOrderCircle\"\r\n                                          style={{\r\n                                            float: \"left\",\r\n                                            marginTop: 2,\r\n                                            marginLeft: 3,\r\n                                            backgroundColor: prodColor,\r\n                                          }}\r\n                                        ></div>\r\n                                        <div style={{ textAlign: \"center\" }}>\r\n                                          {item.Product}\r\n                                        </div>\r\n                                        <div style={{ fontWeight: \"bold\" }}>\r\n                                          {item.LoadedQty.toLocaleString() +\r\n                                            \" \" +\r\n                                            orderDetails.UOM}\r\n                                        </div>\r\n                                      </div>\r\n                                    );\r\n                                  })}\r\n                                </div>\r\n\r\n                                <div className=\"operatorOrderCompartmentDetails\">\r\n                                  <div\r\n                                    style={{\r\n                                      borderBottom: \"1px dashed #A0A0A0\",\r\n                                      paddingBottom: 8,\r\n                                      marginBottom: 8,\r\n                                    }}\r\n                                  >\r\n                                    <List horizontal={true}>\r\n                                      <List.Content>\r\n                                        <div className=\"operatorOrderCompartmentDetailsListTitle\"></div>\r\n                                        <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                          {t(\"OperatorDashboard_OrderProduct\")}\r\n                                        </div>\r\n                                        <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                          {t(\"OperatorDashboard_OrderPlanned\")}\r\n                                        </div>\r\n                                        <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                          {t(\"OperatorDashboard_OrderActual\")}\r\n                                        </div>\r\n                                        <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                          {orderDetails.TransactionType === 0\r\n                                            ? t(\"OperatorDashboard_OrderCustomer\")\r\n                                            : t(\r\n                                              \"OperatorDashboard_OrderSupplier\"\r\n                                            )}\r\n                                        </div>\r\n                                      </List.Content>\r\n                                      {orderloadedPartCommpartmentList.map(\r\n                                        (item) => {\r\n                                          let prodColor =\r\n                                            item.Color !== \"\"\r\n                                              ? \"#\" + item.Color\r\n                                              : \"#000000\";\r\n                                          return (\r\n                                            <List.Content>\r\n                                              <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                                {item.Code}\r\n                                              </div>\r\n                                              <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                                <div\r\n                                                  className=\"operatorOrderCircle\"\r\n                                                  style={{\r\n                                                    float: \"right\",\r\n                                                    backgroundColor: prodColor,\r\n                                                  }}\r\n                                                ></div>\r\n                                              </div>\r\n                                              <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                                {item.PlannedQty.toLocaleString() +\r\n                                                  \" \" +\r\n                                                  orderDetails.UOM}\r\n                                              </div>\r\n                                              <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                                {item.LoadedQty.toLocaleString() +\r\n                                                  \" \" +\r\n                                                  orderDetails.UOM}\r\n                                              </div>\r\n                                              <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                                {item.Customer}\r\n                                              </div>\r\n                                            </List.Content>\r\n                                          );\r\n                                        }\r\n                                      )}\r\n                                    </List>\r\n                                  </div>\r\n\r\n                                  {orderloadedOtherCommpartmentList.length > 0 ? (\r\n                                    <div>\r\n                                      <List horizontal={true}>\r\n                                        <List.Content>\r\n                                          <div className=\"operatorOrderCompartmentDetailsListTitle\"></div>\r\n                                          <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                            {t(\"OperatorDashboard_OrderProduct\")}\r\n                                          </div>\r\n                                          <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                            {t(\"OperatorDashboard_OrderPlanned\")}\r\n                                          </div>\r\n                                          <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                            {t(\"OperatorDashboard_OrderActual\")}\r\n                                          </div>\r\n                                          <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                            {orderDetails.TransactionType === 0\r\n                                              ? t(\r\n                                                \"OperatorDashboard_OrderCustomer\"\r\n                                              )\r\n                                              : t(\r\n                                                \"OperatorDashboard_OrderSupplier\"\r\n                                              )}\r\n                                          </div>\r\n                                        </List.Content>\r\n                                        {orderloadedOtherCommpartmentList.map(\r\n                                          (item) => {\r\n                                            let prodColor =\r\n                                              item.Color !== \"\"\r\n                                                ? \"#\" + item.Color\r\n                                                : \"#000000\";\r\n                                            return (\r\n                                              <List.Content>\r\n                                                <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                                  {item.Code}\r\n                                                </div>\r\n                                                <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                                  <div\r\n                                                    className=\"operatorOrderCircle\"\r\n                                                    style={{\r\n                                                      float: \"right\",\r\n                                                      backgroundColor: prodColor,\r\n                                                    }}\r\n                                                  ></div>\r\n                                                </div>\r\n                                                <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                                  {item.PlannedQty.toLocaleString() +\r\n                                                    \" \" +\r\n                                                    orderDetails.UOM}\r\n                                                </div>\r\n                                                <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                                  {item.LoadedQty.toLocaleString() +\r\n                                                    \" \" +\r\n                                                    orderDetails.UOM}\r\n                                                </div>\r\n                                                <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                                  {item.Customer}\r\n                                                </div>\r\n                                              </List.Content>\r\n                                            );\r\n                                          }\r\n                                        )}\r\n                                      </List>\r\n                                    </div>\r\n                                  ) : (\r\n                                    <div></div>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </TranslationConsumer>\r\n                    ) : (\r\n                      <div className=\"operatorOrder\">\r\n                        <LoadingPage\r\n                          message=\"Loading\"\r\n                          loadingClass=\"operatorOrderLoader\"\r\n                        ></LoadingPage>\r\n                      </div>\r\n                    )}\r\n                  </Popup>\r\n                </div>\r\n              );\r\n            }\r\n          } else if (shipment.TransactionType === 2) {\r\n            if (shipmentStartTime > CurrentShift.StartTime)\r\n              gap =\r\n                GraphPercentage *\r\n                ((shipmentStartTime - CurrentShift.StartTime) / 1000 / 60);\r\n            else gap = 0;\r\n            leakageObjects = addLekageIntoConsolidatedList(\r\n              leakageObjects,\r\n              shipment.StartTotalizer,\r\n              shipment.EndTotalizer,\r\n              shipment.Quantity,\r\n              shipmentStartTime,\r\n              gap\r\n            );\r\n          } else {\r\n            var shipmentHtmlCompose1 = [];\r\n            if (shipmentEndTime !== null)\r\n              shipmentHtmlCompose1.push(\r\n                <div className=\"marineDashboardShipmentDiv8\">\r\n                  {shipmentStartTime < CurrentShift.StartTime ||\r\n                    shipmentEndTime === null ||\r\n                    shipmentEndTime > CurrentShift.EndTime\r\n                    ? \"\"\r\n                    : (\"0\" + shipmentEndTime.getHours()).slice(-2) +\r\n                    \":\" +\r\n                    (\"0\" + shipmentEndTime.getMinutes()).slice(-2)}\r\n                </div>\r\n              );\r\n            shipmentHtml.push(\r\n              <div\r\n                id={shipDevID}\r\n                className=\"marineDashboardShipmentDiv5\"\r\n                style={{\r\n                  width: ShipmentGraphPercentage + \"%\",\r\n                  left: gap + \"%\",\r\n                }}\r\n              >\r\n                <span className=\"LiveCompartmentFont\">Inactive</span>\r\n                <div className=\"marineDashboardShipmentDiv6\">\r\n                  <div className=\"marineDashboardShipmentDiv7\">\r\n                    {shipmentStartTime < CurrentShift.StartTime ||\r\n                      shipmentEndTime === null ||\r\n                      shipmentEndTime > CurrentShift.EndTime\r\n                      ? \"\"\r\n                      : (\"0\" + shipmentStartTime.getHours()).slice(-2) +\r\n                      \":\" +\r\n                      (\"0\" + shipmentStartTime.getMinutes()).slice(-2)}\r\n                  </div>\r\n                  {shipmentHtmlCompose1}\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n        for (var j = 0; j < leakageObjects.length; j++) {\r\n          shipmentHtml.push(\r\n            <span\r\n              className=\"marineDashboardShipmentSpan1\"\r\n              style={{ left: leakageObjects[j].Gap + \"%\" }}\r\n            >\r\n              <Popup\r\n                style={{ padding: 15 }}\r\n                className=\"popup-theme-wrap\"\r\n                element={<Icon root=\"common\" name=\"tint\" size=\"small\" />}\r\n                hoverable={false}\r\n                on=\"click\"\r\n              >\r\n                {showConsolidateLeakageHover(leakageObjects[j].leakInfo)}\r\n              </Popup>\r\n            </span>\r\n          );\r\n        }\r\n        return shipmentHtml;\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error in getShipmentHTML\" + error);\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  function addLekageIntoConsolidatedList(\r\n    leakageObjects,\r\n    startTotalizer,\r\n    endTotalizer,\r\n    Quantity,\r\n    shipmentStartTime,\r\n    gap\r\n  ) {\r\n    var isFound = false;\r\n    for (var i = 0; i < leakageObjects.length; i++) {\r\n      var leakObject = leakageObjects[i];\r\n      if (\r\n        leakObject.StartTime.getHours() === shipmentStartTime.getHours() &&\r\n        leakObject.StartTime.getMinutes() === shipmentStartTime.getMinutes()\r\n      ) {\r\n        leakObject.leakInfo =\r\n          leakObject.leakInfo +\r\n          \";\" +\r\n          startTotalizer +\r\n          \",\" +\r\n          endTotalizer +\r\n          \",\" +\r\n          Quantity;\r\n        isFound = true;\r\n        break;\r\n      }\r\n    }\r\n    if (isFound === false) {\r\n      var obj = {\r\n        StartTime: shipmentStartTime,\r\n        Gap: gap,\r\n        leakInfo: startTotalizer + \",\" + endTotalizer + \",\" + Quantity,\r\n      };\r\n      leakageObjects.push(obj);\r\n    }\r\n    return leakageObjects;\r\n  }\r\n\r\n  function showConsolidateLeakageHover(leakInfo) {\r\n    try {\r\n      var consolidateLeakageHover = [];\r\n      var leakageList = leakInfo.split(\";\");\r\n      for (var i = 0; i < leakageList.length; i++) {\r\n        var leak = leakageList[i].split(\",\");\r\n        var leakageQuantity = parseFloat(leak[2]);\r\n        var leakageQuantityUnit = leak[2].substr(\r\n          leakageQuantity.toString().length\r\n        );\r\n\r\n        if (i !== leakageList.length - 1 && leakageList.length > 1) {\r\n          consolidateLeakageHover.push(\r\n            <div\r\n              className=\"dashboardLeakageHoverDiv1\"\r\n              style={{ left: i * 195 + \"px\" }}\r\n            >\r\n              <div style={{ marginTop: \"5px\" }}>\r\n                {t(\"RoadDashboard_Start_Totalizer\") +\r\n                  \" : \" +\r\n                  leak[0].toLocaleString()}\r\n              </div>\r\n              <div className=\"dashboardLeakageHoverDiv3\">\r\n                {t(\"RoadDashboard_End_Totalizer\") +\r\n                  \" : \" +\r\n                  leak[1].toLocaleString()}\r\n              </div>\r\n              <div>\r\n                <div className=\"dashboardLeakageHoverDiv4\">\r\n                  {t(\"RoadDashboard_Total_Leakage_Quantity\")}\r\n                </div>\r\n                <div className=\"dashboardLeakageHoverDiv5\">\r\n                  {leakageQuantity.toLocaleString() + leakageQuantityUnit}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else {\r\n          consolidateLeakageHover.push(\r\n            <div\r\n              className=\"dashboardLeakageHoverDiv2\"\r\n              style={{ left: i * 195 + \"px\" }}\r\n            >\r\n              <div style={{ marginTop: \"5px\" }}>\r\n                {t(\"RoadDashboard_Start_Totalizer\") +\r\n                  \" : \" +\r\n                  leak[0].toLocaleString()}\r\n              </div>\r\n              <div className=\"dashboardLeakageHoverDiv3\">\r\n                {t(\"RoadDashboard_End_Totalizer\") +\r\n                  \" : \" +\r\n                  leak[1].toLocaleString()}\r\n              </div>\r\n              <div>\r\n                <div className=\"dashboardLeakageHoverDiv4\">\r\n                  {t(\"RoadDashboard_Total_Leakage_Quantity\")}\r\n                </div>\r\n                <div className=\"dashboardLeakageHoverDiv5\">\r\n                  {leakageQuantity.toLocaleString() + leakageQuantityUnit}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div\r\n          style={{\r\n            marginRight: \"10px\",\r\n            color: \"#707070\",\r\n            width: leakageList.length * 195 + \"px\",\r\n            height: \"130px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: \"40px\",\r\n              borderBottom: \"1px solid grey\",\r\n              marginLeft: \"15px\",\r\n            }}\r\n          >\r\n            <span\r\n            // style={{ fontSize: \"30px\" }}\r\n            // className=\"icon-SPECIFICATIONS-30\"\r\n            >\r\n              <Icon root=\"common\" name=\"tint\" size=\"small\" />\r\n            </span>\r\n            <div\r\n              style={{\r\n                font: \"normal bold 14px Arial\",\r\n                padding: \"5px 5px 0 0\",\r\n                float: \"left\",\r\n              }}\r\n            >\r\n              {t(\"RoadDashboard_Leakage\")}\r\n            </div>\r\n          </div>\r\n          <div style={{ fontSize: \"13px\" }}>{consolidateLeakageHover}</div>\r\n        </div>\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error in showConsolidateLeakageHover\" + error);\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  function getRailShipmentHTML(objShipment, parentid) {\r\n    try {\r\n      if (objShipment !== undefined && objShipment !== null) {\r\n        var shipmentHtml = [];\r\n        var shiftDuration = Math.floor(\r\n          (CurrentShift.EndTime - CurrentShift.StartTime) / 1000 / 60\r\n        );\r\n        var GraphPercentage = 100.0 / shiftDuration;\r\n        var HeapList = [];\r\n        for (var i = 0; i < objShipment.TransactionAuditList.length; i++) {\r\n          if (\r\n            objShipment.TransactionAuditList[i].TransactionType === 0 ||\r\n            objShipment.TransactionAuditList[i].TransactionType === 1\r\n          ) {\r\n            if (\r\n              (timetaken === 0 ||\r\n                (objShipment.TransactionAuditList[i].TotalTime <= timetaken &&\r\n                  timetaken !== 75) ||\r\n                (timetaken === 75 &&\r\n                  objShipment.TransactionAuditList[i].TotalTime > 60)) &&\r\n              (viewShipmentStatus === 0 ||\r\n                (viewShipmentStatus === 1 &&\r\n                  objShipment.TransactionAuditList[i].IsCompleted) ||\r\n                (viewShipmentStatus === 2 &&\r\n                  objShipment.TransactionAuditList[i].EndIndicator === 3) ||\r\n                (viewShipmentStatus === 3 &&\r\n                  objShipment.TransactionAuditList[i].HasAlarmOccured))\r\n            )\r\n              HeapList = GetHeapList(\r\n                HeapList,\r\n                objShipment.TransactionAuditList[i]\r\n              );\r\n          }\r\n        }\r\n        for (var j = 0; j < HeapList.length; j++) {\r\n          let Heap = HeapList[j];\r\n          var gap = 0;\r\n          var shipmentStartTime = \"\";\r\n          if (Heap.StartTime != null)\r\n            shipmentStartTime = new Date(Heap.StartTime);\r\n          let shipmentEndTime = null;\r\n          if (Heap.EndTime != null) shipmentEndTime = new Date(Heap.EndTime);\r\n          if (shipmentStartTime > CurrentShift.StartTime) {\r\n            var minsdiff = Math.floor(\r\n              (shipmentStartTime - CurrentShift.StartTime) / 1000 / 60\r\n            );\r\n            gap = minsdiff * GraphPercentage;\r\n          }\r\n          var ShipmentGraphPercentage = 0;\r\n\r\n          if (shipmentEndTime != null) {\r\n            if (\r\n              shipmentEndTime < CurrentShift.EndTime &&\r\n              shipmentStartTime < CurrentShift.StartTime\r\n            ) {\r\n              ShipmentGraphPercentage =\r\n                GraphPercentage *\r\n                ((shipmentEndTime - CurrentShift.StartTime) / 1000 / 60);\r\n            } else if (\r\n              shipmentEndTime > CurrentShift.EndTime &&\r\n              shipmentStartTime < CurrentShift.StartTime\r\n            ) {\r\n              ShipmentGraphPercentage = 100;\r\n            } else if (\r\n              shipmentStartTime > CurrentShift.StartTime &&\r\n              shipmentEndTime < CurrentShift.EndTime\r\n            ) {\r\n              ShipmentGraphPercentage =\r\n                GraphPercentage *\r\n                ((shipmentEndTime - shipmentStartTime) / 1000 / 60);\r\n            } else if (\r\n              shipmentEndTime > CurrentShift.EndTime &&\r\n              shipmentStartTime > CurrentShift.StartTime\r\n            ) {\r\n              ShipmentGraphPercentage =\r\n                GraphPercentage *\r\n                ((CurrentShift.EndTime - shipmentStartTime) / 1000 / 60);\r\n            }\r\n          } else {\r\n            if (shipmentStartTime < CurrentShift.StartTime) {\r\n              ShipmentGraphPercentage = 100;\r\n            } else {\r\n              ShipmentGraphPercentage =\r\n                GraphPercentage *\r\n                ((CurrentShift.EndTime - shipmentStartTime) / 1000 / 60);\r\n            }\r\n          }\r\n\r\n          if (Heap.AuditItems.length > 1) {\r\n            var HeapDevId = \"Bay_\" + parentid + \"Heap_\" + i;\r\n            shipmentHtml.push(\r\n              <div\r\n                id={HeapDevId}\r\n                className=\"heap railDashboardShiftmentHtmlDiv1\"\r\n                style={{\r\n                  width: ShipmentGraphPercentage + \"%\",\r\n                  left: gap + \"%\",\r\n                }}\r\n                onClick={() => {\r\n                  heapClick(Heap, parentid);\r\n                }}\r\n              >\r\n                <div className=\"railDashboardShiftmentHtmlDiv2\"></div>\r\n                <div className=\"HeapBar\"></div>\r\n                <div className=\"railDashboardShiftmentHtmlDiv3\">\r\n                  <div className=\"railDashboardShiftmentHtmlDiv4\"></div>\r\n                </div>\r\n              </div>\r\n            );\r\n          } else {\r\n            var shipDevID = \"Bay_\" + parentid + \"Transaction_\" + i;\r\n            // var objShipmentCode = \"'\" + Heap.AuditItems[0].TransactionCode + \"'\";\r\n            // var objBayCode = \"'\" + parentid + \"'\";\r\n            // var objType = \"'\" + Heap.AuditItems[0].TransactionType + \"'\";\r\n            // var objTimeTaken = \"'\" + Heap.AuditItems[0].TotalTime + \"'\";\r\n            // var objBCU = \"'\" + Heap.AuditItems[0].BCUPoint + \"'\";\r\n\r\n            var shipStyle =\r\n              shipmentEndTime === null\r\n                ? {\r\n                  zIndex: \"1\",\r\n                  width: ShipmentGraphPercentage + \"%\",\r\n                  borderBottom: \"dashed 1px #D0D0D0\",\r\n                  position: \"absolute\",\r\n                  left: gap + \"%\",\r\n                }\r\n                : {\r\n                  zIndex: \"1\",\r\n                  width: ShipmentGraphPercentage + \"%\",\r\n                  cursor: \"pointer\",\r\n                  borderBottom: \"dashed 1px #D0D0D0\",\r\n                  position: \"absolute\",\r\n                  left: gap + \"%\",\r\n                };\r\n\r\n            var radiusstyle = {};\r\n            if (\r\n              Heap.AuditItems[0].StartIndicator === 1 &&\r\n              shipmentStartTime > CurrentShift.StartTime\r\n            )\r\n              radiusstyle = {\r\n                borderTopLeftRadius: \"12px\",\r\n                borderBottomLeftRadius: \"12px\",\r\n              };\r\n            else if (Heap.AuditItems[0].StartIndicator === 2) {\r\n              radiusstyle = {};\r\n            } else if (\r\n              Heap.AuditItems[0].StartIndicator === 3 &&\r\n              shipmentStartTime < CurrentShift.StartTime\r\n            )\r\n              radiusstyle = {\r\n                borderLeftColor: \"red\",\r\n                borderLeftWidth: \"10px\",\r\n                borderLeftStyle: \"solid\",\r\n              };\r\n            if (\r\n              Heap.AuditItems[0].EndIndicator === 1 &&\r\n              !(\r\n                shipmentEndTime == null ||\r\n                shipmentEndTime > CurrentShift.EndTime\r\n              )\r\n            ) {\r\n              radiusstyle[\"borderTopRightRadius\"] = \"12px\";\r\n              radiusstyle[\"borderBottomRightRadius\"] = \"12px\";\r\n            } else if (Heap.AuditItems[0].StartIndicator === 2) {\r\n            } else if (\r\n              Heap.AuditItems[0].EndIndicator === 3 &&\r\n              !(\r\n                shipmentEndTime == null ||\r\n                shipmentEndTime > CurrentShift.EndTime\r\n              )\r\n            ) {\r\n              radiusstyle[\"borderRightColor\"] = \"red\";\r\n              radiusstyle[\"borderRightWidth\"] = \"10px\";\r\n              radiusstyle[\"borderRightStyle\"] = \"solid\";\r\n            }\r\n\r\n            var shipBackColor = Heap.AuditItems[0].HasAlarmOccured\r\n              ? \"railDashboardShiftmentHtmlDiv6Red\"\r\n              : \"railDashboardShiftmentHtmlDiv6\";\r\n            var shipClass =\r\n              shipmentEndTime == null ? \"LiveShipmentBar\" : \"ShipmentBar\";\r\n\r\n            var shipmentHtmlCompose = [];\r\n            if (shipmentEndTime != null)\r\n              shipmentHtmlCompose.push(\r\n                <div className=\"railDashboardShiftmentHtmlDiv8\">\r\n                  {shipmentStartTime < CurrentShift.StartTime ||\r\n                    shipmentEndTime == null ||\r\n                    shipmentEndTime > CurrentShift.EndTime\r\n                    ? \"\"\r\n                    : (\"0\" + shipmentEndTime.getHours()).slice(-2) +\r\n                    \":\" +\r\n                    (\"0\" + shipmentEndTime.getMinutes()).slice(-2)}\r\n                </div>\r\n              );\r\n\r\n            let railTransactionType =\r\n              Heap.AuditItems[0].TransactionType === 0 ? \"DISPATCH\" : \"RECEIPT\";\r\n            shipmentHtml.push(\r\n              <Popup\r\n                position=\"top left\"\r\n                hoverable={false}\r\n                className=\"operatorOrderDetails\"\r\n                element={\r\n                  <div\r\n                    id={shipDevID}\r\n                    className={\r\n                      Heap.AuditItems[0].HasAlarmOccured\r\n                        ? \"failureship \"\r\n                        : \"shipment \"\r\n                    }\r\n                    data-toggle=\"popover\"\r\n                    style={shipStyle}\r\n                    onClick={() => {\r\n                      try {\r\n                        let arr =\r\n                          Heap.AuditItems[0].TransactionCode.split(\"::\");\r\n                        if (shipmentEndTime === null) {\r\n                          getRailLiveOrderDetails(\r\n                            arr[0],\r\n                            railTransactionType,\r\n                            arr[1],\r\n                            Heap.AuditItems[0].BCUPoint\r\n                          );\r\n                        } else {\r\n                          getRailOrderDetails(\r\n                            arr[0],\r\n                            railTransactionType,\r\n                            arr[1]\r\n                          );\r\n                        }\r\n                      } catch (error) {\r\n                        console.log(\r\n                          \"error in Popup of RailShipmentHTML\",\r\n                          error\r\n                        );\r\n                      }\r\n                    }}\r\n                  >\r\n                    <div className=\"railDashboardShiftmentHtmlDiv5\">\r\n                      {shipmentStartTime < CurrentShift.StartTime ||\r\n                        shipmentEndTime == null ||\r\n                        shipmentEndTime > CurrentShift.EndTime\r\n                        ? \"\"\r\n                        : Heap.AuditItems[0].TransactionCode}\r\n                    </div>\r\n                    <div className={shipClass} style={radiusstyle}></div>\r\n                    <div className={shipBackColor}>\r\n                      <div className=\"railDashboardShiftmentHtmlDiv7\">\r\n                        {shipmentStartTime < CurrentShift.StartTime ||\r\n                          shipmentEndTime == null ||\r\n                          shipmentEndTime > CurrentShift.EndTime\r\n                          ? \"\"\r\n                          : (\"0\" + shipmentStartTime.getHours()).slice(-2) +\r\n                          \":\" +\r\n                          (\"0\" + shipmentStartTime.getMinutes()).slice(-2)}\r\n                      </div>\r\n                      {shipmentHtmlCompose}\r\n                    </div>\r\n                  </div>\r\n                }\r\n                on=\"click\"\r\n              >\r\n                {orderDetails !== null &&\r\n                  orderDetails.CompartmentInfoList !== null ? (\r\n                  <TranslationConsumer>\r\n                    {(t) => (\r\n                      <div className=\"operatorRailOrder\">\r\n                        <div className=\"operatorRailOrdertransactionInfo\">\r\n                          <div style={{ fontWeight: \"bold\" }}>\r\n                            {orderDetails.railTransactionType === \"DISPATCH\"\r\n                              ? \"Shipment\"\r\n                              : \"Receipt\"}\r\n                            {\" No - \" + orderDetails.Code}\r\n                          </div>\r\n                          <Divider></Divider>\r\n                          <List horizontal={true}>\r\n                            <List.Content>\r\n                              <div className=\"operatorOrdertransactionInfoTitle\">\r\n                                {t(\"OperatorDashboard_OrderAlarmsOccured\") +\r\n                                  \":\"}\r\n                              </div>\r\n                              <div className=\"operatorOrdertransactionInfoTitle\">\r\n                                {t(\"OperatorDashboard_OrderTimeTakne\") + \":\"}\r\n                              </div>\r\n                            </List.Content>\r\n                            <List.Content>\r\n                              <div\r\n                                className=\"operatorOrdertransactionInfoContent\"\r\n                                style={\r\n                                  orderDetails.AlarmCount > 0\r\n                                    ? { color: \"red\" }\r\n                                    : {}\r\n                                }\r\n                              >\r\n                                {orderDetails.AlarmCount.toLocaleString()}\r\n                              </div>\r\n                              <div className=\"operatorOrdertransactionInfoContent\">\r\n                                {Heap.AuditItems[0].TotalTime.toLocaleString() +\r\n                                  \" \" +\r\n                                  t(\"OperatorDashboard_OrderMin\")}\r\n                              </div>\r\n                            </List.Content>\r\n                          </List>\r\n                          <Divider direction=\"vertical\"></Divider>\r\n                        </div>\r\n\r\n                        <div className=\"operatorOrderProductAndCompartmentDetails\">\r\n                          <div\r\n                            className=\"operatorOrderProductAndCompartmentDetailsTitle\"\r\n                            style={\r\n                              orderloadedOtherCommpartmentList.length > 0\r\n                                ? { paddingTop: 2, paddingBottom: 12 }\r\n                                : {}\r\n                            }\r\n                          >\r\n                            {t(\"OperatorDashboard_OrderProductAndWagon\")}\r\n                          </div>\r\n                          <div\r\n                            className=\"operatorOrderProduct\"\r\n                            style={\r\n                              orderloadedOtherCommpartmentList.length > 0\r\n                                ? { height: 175 }\r\n                                : {}\r\n                            }\r\n                          >\r\n                            {orderProductDetails.map((item) => {\r\n                              let prodColor =\r\n                                item.Color !== \"\"\r\n                                  ? \"#\" + item.Color\r\n                                  : \"#000000\";\r\n                              return (\r\n                                <div\r\n                                  style={{\r\n                                    color: prodColor,\r\n                                    marginBottom: 5,\r\n                                  }}\r\n                                >\r\n                                  <div\r\n                                    className=\"operatorOrderCircle\"\r\n                                    style={{\r\n                                      float: \"left\",\r\n                                      marginTop: 2,\r\n                                      marginLeft: 3,\r\n                                      backgroundColor: prodColor,\r\n                                    }}\r\n                                  ></div>\r\n                                  <div style={{ marginLeft: -3 }}>\r\n                                    {item.Product}\r\n                                  </div>\r\n                                  <div style={{ fontWeight: \"bold\" }}>\r\n                                    {item.LoadedQty.toLocaleString() +\r\n                                      \" \" +\r\n                                      orderDetails.UOM}\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })}\r\n                          </div>\r\n\r\n                          <div className=\"operatorOrderCompartmentDetails\">\r\n                            <div\r\n                              style={{\r\n                                borderBottom: \"1px dashed #A0A0A0\",\r\n                                paddingBottom: 8,\r\n                                marginBottom: 8,\r\n                              }}\r\n                            >\r\n                              <List horizontal={true}>\r\n                                <List.Content>\r\n                                  <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                    {\"\"}\r\n                                  </div>\r\n                                  <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                    {t(\"OperatorDashboard_OrderProduct\")}\r\n                                  </div>\r\n                                  <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                    {t(\"OperatorDashboard_OrderPlanned\")}\r\n                                  </div>\r\n                                  <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                    {t(\"OperatorDashboard_OrderActual\")}\r\n                                  </div>\r\n                                  <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                    {t(\"OperatorDashboard_OrderStatus\")}\r\n                                  </div>\r\n                                  <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                    {orderDetails.railTransactionType ===\r\n                                      \"DISPATCH\"\r\n                                      ? t(\"OperatorDashboard_OrderCustomer\")\r\n                                      : t(\"OperatorDashboard_OrderSupplier\")}\r\n                                  </div>\r\n                                </List.Content>\r\n                                {orderloadedPartCommpartmentList.map((item) => {\r\n                                  let prodColor =\r\n                                    item.Color !== \"\"\r\n                                      ? \"#\" + item.Color\r\n                                      : \"#000000\";\r\n                                  return (\r\n                                    <List.Content>\r\n                                      <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                        {item.Code}\r\n                                      </div>\r\n                                      <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                        <div\r\n                                          className=\"operatorOrderCircle\"\r\n                                          style={{\r\n                                            float: \"right\",\r\n                                            backgroundColor: prodColor,\r\n                                          }}\r\n                                        ></div>\r\n                                      </div>\r\n                                      <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                        {item.PlannedQty.toLocaleString() +\r\n                                          \" \" +\r\n                                          orderDetails.UOM}\r\n                                      </div>\r\n                                      <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                        {item.LoadedQty.toLocaleString() +\r\n                                          \" \" +\r\n                                          orderDetails.UOM}\r\n                                      </div>\r\n                                      <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                        {item.Status}\r\n                                      </div>\r\n                                      <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                        {item.Customer}\r\n                                      </div>\r\n                                    </List.Content>\r\n                                  );\r\n                                })}\r\n                              </List>\r\n                            </div>\r\n\r\n                            {orderloadedOtherCommpartmentList.length > 0 ? (\r\n                              <div>\r\n                                <List horizontal={true}>\r\n                                  <List.Content>\r\n                                    <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                      {\"\"}\r\n                                    </div>\r\n                                    <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                      {t(\"OperatorDashboard_OrderProduct\")}\r\n                                    </div>\r\n                                    <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                      {t(\"OperatorDashboard_OrderPlanned\")}\r\n                                    </div>\r\n                                    <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                      {t(\"OperatorDashboard_OrderActual\")}\r\n                                    </div>\r\n                                    <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                      {orderDetails.railTransactionType ===\r\n                                        \"DISPATCH\"\r\n                                        ? t(\"OperatorDashboard_OrderCustomer\")\r\n                                        : t(\"OperatorDashboard_OrderSupplier\")}\r\n                                    </div>\r\n                                  </List.Content>\r\n                                  {orderloadedOtherCommpartmentList.map(\r\n                                    (item) => {\r\n                                      let prodColor =\r\n                                        item.Color !== \"\"\r\n                                          ? \"#\" + item.Color\r\n                                          : \"#000000\";\r\n                                      return (\r\n                                        <List.Content>\r\n                                          <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                            {item.Code}\r\n                                          </div>\r\n                                          <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                            <div\r\n                                              className=\"operatorOrderCircle\"\r\n                                              style={{\r\n                                                float: \"right\",\r\n                                                backgroundColor: prodColor,\r\n                                              }}\r\n                                            ></div>\r\n                                          </div>\r\n                                          <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                            {item.PlannedQty.toLocaleString() +\r\n                                              \" \" +\r\n                                              orderDetails.UOM}\r\n                                          </div>\r\n                                          <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                            {item.LoadedQty.toLocaleString() +\r\n                                              \" \" +\r\n                                              orderDetails.UOM}\r\n                                          </div>\r\n                                          <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                            {item.Customer}\r\n                                          </div>\r\n                                        </List.Content>\r\n                                      );\r\n                                    }\r\n                                  )}\r\n                                </List>\r\n                              </div>\r\n                            ) : (\r\n                              <div></div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </TranslationConsumer>\r\n                ) : (\r\n                  <div className=\"operatorOrder\">\r\n                    <LoadingPage\r\n                      message=\"Loading\"\r\n                      loadingClass=\"operatorOrderLoader\"\r\n                    ></LoadingPage>\r\n                  </div>\r\n                )}\r\n              </Popup>\r\n            );\r\n          }\r\n        }\r\n        return shipmentHtml;\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error in getRailShipmentHTML\" + error);\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  function GetHeapList(HeapList, TransactionAuditItem) {\r\n    var isFound = false;\r\n    var foundItem = -1;\r\n    var transactionStartTime = new Date(TransactionAuditItem.StartTime);\r\n    var transactionEndTime =\r\n      TransactionAuditItem.EndTime == null\r\n        ? null\r\n        : new Date(TransactionAuditItem.EndTime);\r\n    if (transactionStartTime < CurrentShift.EndTime) {\r\n      if (HeapList.length > 0) {\r\n        for (var i = 0; i < HeapList.length; i++) {\r\n          var itemStartTime = new Date(HeapList[i].StartTime);\r\n          var itemEndTime =\r\n            HeapList[i].EndTime == null ? null : new Date(HeapList[i].EndTime);\r\n\r\n          if (transactionStartTime <= itemStartTime) {\r\n            if (transactionEndTime == null) {\r\n              HeapList[i].EndTime = null;\r\n              HeapList[i].StartTime = TransactionAuditItem.StartTime;\r\n              isFound = true;\r\n              foundItem = i;\r\n              break;\r\n            } else if (\r\n              transactionEndTime != null &&\r\n              transactionEndTime > itemStartTime\r\n            ) {\r\n              HeapList[i].StartTime = TransactionAuditItem.StartTime;\r\n              if (itemEndTime != null && transactionEndTime > itemEndTime) {\r\n                HeapList[i].EndTime = TransactionAuditItem.EndTime;\r\n              }\r\n              isFound = true;\r\n              foundItem = i;\r\n              break;\r\n            }\r\n          } else {\r\n            if (itemEndTime == null) {\r\n              isFound = true;\r\n              foundItem = i;\r\n              break;\r\n            } else if (transactionStartTime < itemEndTime) {\r\n              isFound = true;\r\n              foundItem = i;\r\n              if (transactionEndTime == null)\r\n                HeapList[i].EndTime = TransactionAuditItem.EndTime;\r\n              else if (transactionEndTime > itemEndTime)\r\n                HeapList[i].EndTime = TransactionAuditItem.EndTime;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (isFound) {\r\n          HeapList[foundItem].AuditItems.push(TransactionAuditItem);\r\n        } else {\r\n          var obj = {\r\n            StartTime: TransactionAuditItem.StartTime,\r\n            EndTime: TransactionAuditItem.EndTime,\r\n            AuditItems: [TransactionAuditItem],\r\n          };\r\n          HeapList.push(obj);\r\n        }\r\n      } else {\r\n        var objs = {\r\n          StartTime: TransactionAuditItem.StartTime,\r\n          EndTime: TransactionAuditItem.EndTime,\r\n          AuditItems: [TransactionAuditItem],\r\n        };\r\n        HeapList.push(objs);\r\n      }\r\n    }\r\n    return HeapList;\r\n  }\r\n\r\n  function getTransactionHTML(transactionAndDeviceStatus, selectedOption) {\r\n    try {\r\n      if (\r\n        transactionAndDeviceStatus !== undefined &&\r\n        transactionAndDeviceStatus !== null\r\n      ) {\r\n        var shipment = {};\r\n        transactionAndDeviceStatus.TransactionAuditList.forEach((element) => {\r\n          if (element.TransactionCode === selectedOption) {\r\n            shipment = element;\r\n          }\r\n        });\r\n        var shiftDuration = Math.floor(\r\n          (CurrentShift.EndTime - CurrentShift.StartTime) / 1000 / 60\r\n        );\r\n        var GraphPercentage = 100.0 / shiftDuration;\r\n        var gap = 0;\r\n        var shipmentStartTime = \"\";\r\n        if (shipment.StartTime != null)\r\n          shipmentStartTime = new Date(shipment.StartTime);\r\n        var shipmentEndTime = null;\r\n        if (shipment.EndTime != null)\r\n          shipmentEndTime = new Date(shipment.EndTime);\r\n        if (shipmentStartTime > CurrentShift.StartTime) {\r\n          var minsdiff = Math.floor(\r\n            (shipmentStartTime - CurrentShift.StartTime) / 1000 / 60\r\n          );\r\n          gap = minsdiff * GraphPercentage;\r\n        }\r\n        var ShipmentGraphPercentage = 0;\r\n\r\n        if (shipmentEndTime != null) {\r\n          if (\r\n            shipmentEndTime < CurrentShift.EndTime &&\r\n            shipmentStartTime < CurrentShift.StartTime\r\n          ) {\r\n            ShipmentGraphPercentage =\r\n              GraphPercentage *\r\n              ((shipmentEndTime - CurrentShift.StartTime) / 1000 / 60);\r\n          } else if (\r\n            shipmentEndTime > CurrentShift.EndTime &&\r\n            shipmentStartTime < CurrentShift.StartTime\r\n          ) {\r\n            ShipmentGraphPercentage = 100;\r\n          } else if (\r\n            shipmentStartTime > CurrentShift.StartTime &&\r\n            shipmentEndTime < CurrentShift.EndTime\r\n          ) {\r\n            ShipmentGraphPercentage =\r\n              GraphPercentage *\r\n              ((shipmentEndTime - shipmentStartTime) / 1000 / 60);\r\n          } else if (\r\n            shipmentEndTime > CurrentShift.EndTime &&\r\n            shipmentStartTime > CurrentShift.StartTime\r\n          ) {\r\n            ShipmentGraphPercentage =\r\n              GraphPercentage *\r\n              ((CurrentShift.EndTime - shipmentStartTime) / 1000 / 60);\r\n          }\r\n        } else {\r\n          if (shipmentStartTime < CurrentShift.StartTime) {\r\n            ShipmentGraphPercentage = 100;\r\n          } else {\r\n            ShipmentGraphPercentage =\r\n              GraphPercentage *\r\n              ((CurrentShift.EndTime - shipmentStartTime) / 1000 / 60);\r\n          }\r\n        }\r\n        var shipStyle = {\r\n          zIndex: \"1\",\r\n          width: ShipmentGraphPercentage + \"%\",\r\n          cursor: \"pointer\",\r\n          borderBottom: \"dashed 1px #D0D0D0\",\r\n          position: \"absolute\",\r\n          left: gap + \"%\",\r\n        };\r\n        // shipmentEndTime === null\r\n        //   ? {\r\n        //       zIndex: \"1\",\r\n        //       width: ShipmentGraphPercentage + \"%\",\r\n        //       cursor: \"pointer\",\r\n        //       borderBottom: \"dashed 1px #D0D0D0\",\r\n        //       position: \"absolute\",\r\n        //       left: gap + \"%\",\r\n        //     }\r\n        //   : {\r\n        //       zIndex: \"1\",\r\n        //       width: ShipmentGraphPercentage + \"%\",\r\n        //       cursor: \"pointer\",\r\n        //       borderBottom: \"dashed 1px #D0D0D0\",\r\n        //       position: \"absolute\",\r\n        //       left: gap + \"%\",\r\n        //     };\r\n        var radiusstyle = {};\r\n        if (\r\n          shipment.StartIndicator === 1 &&\r\n          shipmentStartTime > CurrentShift.StartTime\r\n        )\r\n          radiusstyle = {\r\n            borderTopLeftRadius: \"12px\",\r\n            borderBottomLeftRadius: \"12px\",\r\n          };\r\n        else if (shipment.StartIndicator === 2) {\r\n          radiusstyle = {};\r\n        } else if (\r\n          shipment.StartIndicator === 3 &&\r\n          shipmentStartTime < CurrentShift.StartTime\r\n        )\r\n          radiusstyle = {\r\n            borderLeftColor: \"red\",\r\n            borderLeftWidth: \"10px\",\r\n            borderLeftStyle: \"solid\",\r\n          };\r\n        if (\r\n          shipment.StartIndicator === 1 &&\r\n          !(shipmentEndTime == null || shipmentEndTime > CurrentShift.EndTime)\r\n        ) {\r\n          radiusstyle[\"borderTopRightRadius\"] = \"12px\";\r\n          radiusstyle[\"borderBottomRightRadius\"] = \"12px\";\r\n        } else if (shipment.StartIndicator === 2) {\r\n        } else if (\r\n          shipment.StartIndicator === 3 &&\r\n          !(shipmentEndTime == null || shipmentEndTime > CurrentShift.EndTime)\r\n        ) {\r\n          radiusstyle[\"borderRightColor\"] = \"red\";\r\n          radiusstyle[\"borderRightWidth\"] = \"10px\";\r\n          radiusstyle[\"borderRightStyle\"] = \"solid\";\r\n        }\r\n\r\n        var shipBackColor = shipment.HasAlarmOccured\r\n          ? \"#FBD5D2\"\r\n          : \"transparent\";\r\n        var shipClass =\r\n          shipmentEndTime == null ? \"LiveShipmentBar\" : \"ShipmentBar\";\r\n\r\n        var TransactionHTMLCompose = [];\r\n        if (shipmentEndTime != null)\r\n          TransactionHTMLCompose.push(\r\n            <div className=\"railDashboardTransactionHTMLDiv4\">\r\n              {shipmentStartTime < CurrentShift.StartTime ||\r\n                shipmentEndTime == null ||\r\n                shipmentEndTime > CurrentShift.EndTime\r\n                ? \"\"\r\n                : (\"0\" + shipmentEndTime.getHours()).slice(-2) +\r\n                \":\" +\r\n                (\"0\" + shipmentEndTime.getMinutes()).slice(-2)}\r\n            </div>\r\n          );\r\n        let railTransactionType =\r\n          shipment.TransactionType === 0 ? \"DISPATCH\" : \"RECEIPT\";\r\n\r\n        return (\r\n          <div>\r\n            <Popup\r\n              position=\"top left\"\r\n              hoverable={false}\r\n              className=\"operatorOrderDetails\"\r\n              on=\"click\"\r\n              element={\r\n                <div\r\n                  className={\r\n                    shipment.HasAlarmOccured\r\n                      ? \"Heapfailureship \"\r\n                      : \"Heapshipment \"\r\n                  }\r\n                  data-toggle=\"popover\"\r\n                  style={shipStyle}\r\n                  onClick={() => {\r\n                    try {\r\n                      let arr = shipment.TransactionCode.split(\"::\");\r\n                      let newIsLive = shipmentEndTime === null ? true : false;\r\n                      if (newIsLive) {\r\n                        getRailLiveOrderDetails(\r\n                          arr[0],\r\n                          railTransactionType,\r\n                          arr[1],\r\n                          shipment.BCUPoint\r\n                        );\r\n                      } else {\r\n                        getRailOrderDetails(\r\n                          arr[0],\r\n                          railTransactionType,\r\n                          arr[1]\r\n                        );\r\n                      }\r\n                    } catch (error) {\r\n                      console.log(\"error in Popup of TransactionHTML\", error);\r\n                    }\r\n                  }}\r\n                >\r\n                  <div className=\"railDashboardTransactionHTMLDiv1\">\r\n                    {shipmentStartTime < CurrentShift.StartTime ||\r\n                      shipmentEndTime == null ||\r\n                      shipmentEndTime > CurrentShift.EndTime\r\n                      ? \"\"\r\n                      : shipment.TransactionCode}\r\n                  </div>\r\n                  <div className={shipClass} style={radiusstyle}></div>\r\n                  <div\r\n                    className=\"railDashboardTransactionHTMLDiv2\"\r\n                    style={{ backgroundColor: shipBackColor }}\r\n                  >\r\n                    <div className=\"railDashboardTransactionHTMLDiv3\">\r\n                      {shipmentStartTime < CurrentShift.StartTime ||\r\n                        shipmentEndTime == null ||\r\n                        shipmentEndTime > CurrentShift.EndTime\r\n                        ? \"\"\r\n                        : (\"0\" + shipmentStartTime.getHours()).slice(-2) +\r\n                        \":\" +\r\n                        (\"0\" + shipmentStartTime.getMinutes()).slice(-2)}\r\n                    </div>\r\n                    {TransactionHTMLCompose}\r\n                  </div>\r\n                </div>\r\n              }\r\n            >\r\n              {orderDetails !== null &&\r\n                orderDetails.CompartmentInfoList !== null ? (\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <div className=\"operatorRailOrder\">\r\n                      <div className=\"operatorRailOrdertransactionInfo\">\r\n                        <div style={{ fontWeight: \"bold\" }}>\r\n                          {orderDetails.railTransactionType === \"DISPATCH\"\r\n                            ? \"Shipment\"\r\n                            : \"Receipt\"}\r\n                          {\" No - \" + orderDetails.Code}\r\n                        </div>\r\n                        <Divider></Divider>\r\n                        <List horizontal={true}>\r\n                          <List.Content>\r\n                            <div className=\"operatorOrdertransactionInfoTitle\">\r\n                              {t(\"OperatorDashboard_OrderAlarmsOccured\") + \":\"}\r\n                            </div>\r\n                            <div className=\"operatorOrdertransactionInfoTitle\">\r\n                              {t(\"OperatorDashboard_OrderTimeTakne\") + \":\"}\r\n                            </div>\r\n                          </List.Content>\r\n                          <List.Content>\r\n                            <div\r\n                              className=\"operatorOrdertransactionInfoContent\"\r\n                              style={\r\n                                orderDetails.AlarmCount > 0\r\n                                  ? { color: \"red\" }\r\n                                  : {}\r\n                              }\r\n                            >\r\n                              {orderDetails.AlarmCount.toLocaleString()}\r\n                            </div>\r\n                            <div className=\"operatorOrdertransactionInfoContent\">\r\n                              {shipment.TotalTime.toLocaleString() +\r\n                                \" \" +\r\n                                t(\"OperatorDashboard_OrderMin\")}\r\n                            </div>\r\n                          </List.Content>\r\n                        </List>\r\n                        <Divider direction=\"vertical\"></Divider>\r\n                      </div>\r\n\r\n                      <div className=\"operatorOrderProductAndCompartmentDetails\">\r\n                        <div\r\n                          className=\"operatorOrderProductAndCompartmentDetailsTitle\"\r\n                          style={\r\n                            orderloadedOtherCommpartmentList.length > 0\r\n                              ? { paddingTop: 2, paddingBottom: 12 }\r\n                              : {}\r\n                          }\r\n                        >\r\n                          {t(\"OperatorDashboard_OrderProductAndWagon\")}\r\n                        </div>\r\n                        <div\r\n                          className=\"operatorOrderProduct\"\r\n                          style={\r\n                            orderloadedOtherCommpartmentList.length > 0\r\n                              ? { height: 175 }\r\n                              : {}\r\n                          }\r\n                        >\r\n                          {orderProductDetails.map((item) => {\r\n                            let prodColor =\r\n                              item.Color !== \"\" ? \"#\" + item.Color : \"#000000\";\r\n                            return (\r\n                              <div\r\n                                style={{\r\n                                  color: prodColor,\r\n                                  marginBottom: 5,\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  className=\"operatorOrderCircle\"\r\n                                  style={{\r\n                                    float: \"left\",\r\n                                    marginTop: 2,\r\n                                    marginLeft: 3,\r\n                                    backgroundColor: prodColor,\r\n                                  }}\r\n                                ></div>\r\n                                <div style={{ marginLeft: -3 }}>\r\n                                  {item.Product}\r\n                                </div>\r\n                                <div style={{ fontWeight: \"bold\" }}>\r\n                                  {item.LoadedQty.toLocaleString() +\r\n                                    \" \" +\r\n                                    orderDetails.UOM}\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n\r\n                        <div className=\"operatorOrderCompartmentDetails\">\r\n                          <div\r\n                            style={{\r\n                              borderBottom: \"1px dashed #A0A0A0\",\r\n                              paddingBottom: 8,\r\n                              marginBottom: 8,\r\n                            }}\r\n                          >\r\n                            <List horizontal={true}>\r\n                              <List.Content>\r\n                                <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                  {\"\"}\r\n                                </div>\r\n                                <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                  {t(\"OperatorDashboard_OrderProduct\")}\r\n                                </div>\r\n                                <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                  {t(\"OperatorDashboard_OrderPlanned\")}\r\n                                </div>\r\n                                <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                  {t(\"OperatorDashboard_OrderActual\")}\r\n                                </div>\r\n                                <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                  {t(\"OperatorDashboard_OrderStatus\")}\r\n                                </div>\r\n                                <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                  {orderDetails.railTransactionType ===\r\n                                    \"DISPATCH\"\r\n                                    ? t(\"OperatorDashboard_OrderCustomer\")\r\n                                    : t(\"OperatorDashboard_OrderSupplier\")}\r\n                                </div>\r\n                              </List.Content>\r\n                              {orderloadedPartCommpartmentList.map((item) => {\r\n                                let prodColor =\r\n                                  item.Color !== \"\"\r\n                                    ? \"#\" + item.Color\r\n                                    : \"#000000\";\r\n                                return (\r\n                                  <List.Content>\r\n                                    <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                      {item.Code}\r\n                                    </div>\r\n                                    <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                      <div\r\n                                        className=\"operatorOrderCircle\"\r\n                                        style={{\r\n                                          float: \"right\",\r\n                                          backgroundColor: prodColor,\r\n                                        }}\r\n                                      ></div>\r\n                                    </div>\r\n                                    <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                      {item.PlannedQty.toLocaleString() +\r\n                                        \" \" +\r\n                                        orderDetails.UOM}\r\n                                    </div>\r\n                                    <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                      {item.LoadedQty.toLocaleString() +\r\n                                        \" \" +\r\n                                        orderDetails.UOM}\r\n                                    </div>\r\n                                    <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                      {item.Status}\r\n                                    </div>\r\n                                    <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                      {item.Customer}\r\n                                    </div>\r\n                                  </List.Content>\r\n                                );\r\n                              })}\r\n                            </List>\r\n                          </div>\r\n\r\n                          {orderloadedOtherCommpartmentList.length > 0 ? (\r\n                            <div>\r\n                              <List horizontal={true}>\r\n                                <List.Content>\r\n                                  <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                    {\"\"}\r\n                                  </div>\r\n                                  <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                    {t(\"OperatorDashboard_OrderProduct\")}\r\n                                  </div>\r\n                                  <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                    {t(\"OperatorDashboard_OrderPlanned\")}\r\n                                  </div>\r\n                                  <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                    {t(\"OperatorDashboard_OrderActual\")}\r\n                                  </div>\r\n                                  <div className=\"operatorOrderCompartmentDetailsListTitle\">\r\n                                    {orderDetails.railTransactionType ===\r\n                                      \"DISPATCH\"\r\n                                      ? t(\"OperatorDashboard_OrderCustomer\")\r\n                                      : t(\"OperatorDashboard_OrderSupplier\")}\r\n                                  </div>\r\n                                </List.Content>\r\n                                {orderloadedOtherCommpartmentList.map(\r\n                                  (item) => {\r\n                                    let prodColor =\r\n                                      item.Color !== \"\"\r\n                                        ? \"#\" + item.Color\r\n                                        : \"#000000\";\r\n                                    return (\r\n                                      <List.Content>\r\n                                        <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                          {item.Code}\r\n                                        </div>\r\n                                        <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                          <div\r\n                                            className=\"operatorOrderCircle\"\r\n                                            style={{\r\n                                              float: \"right\",\r\n                                              backgroundColor: prodColor,\r\n                                            }}\r\n                                          ></div>\r\n                                        </div>\r\n                                        <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                          {item.PlannedQty.toLocaleString() +\r\n                                            \" \" +\r\n                                            orderDetails.UOM}\r\n                                        </div>\r\n                                        <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                          {item.LoadedQty.toLocaleString() +\r\n                                            \" \" +\r\n                                            orderDetails.UOM}\r\n                                        </div>\r\n                                        <div className=\"operatorOrderCompartmentDetailsListContent\">\r\n                                          {item.Customer}\r\n                                        </div>\r\n                                      </List.Content>\r\n                                    );\r\n                                  }\r\n                                )}\r\n                              </List>\r\n                            </div>\r\n                          ) : (\r\n                            <div></div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </TranslationConsumer>\r\n              ) : (\r\n                <div className=\"operatorOrder\">\r\n                  <LoadingPage\r\n                    message=\"Loading\"\r\n                    loadingClass=\"operatorOrderLoader\"\r\n                  ></LoadingPage>\r\n                </div>\r\n              )}\r\n            </Popup>\r\n          </div>\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error in getTransactionHTML \" + error);\r\n    }\r\n  }\r\n\r\n  // function heapClick(selectedHeap) {\r\n  //   var railOptions = [];\r\n  //   for (var i = 0; i < selectedHeap.AuditItems.length; i++) {\r\n  //     var option = {};\r\n  //     option.innerHTML = selectedHeap.AuditItems[i].TransactionCode;\r\n  //     option.value = selectedHeap.AuditItems[i].TransactionCode;\r\n  //     railOptions.push(option);\r\n  //   }\r\n  //   setRailOptions(railOptions);\r\n  // }\r\n\r\n  function AddConsolidatedDeviceList(ConsolidatedDeviceList, DeviceItem) {\r\n    var isFound = false;\r\n    var foundItem = -1;\r\n    var deviceItemStartTime =\r\n      DeviceItem.StartTime == null ? null : new Date(DeviceItem.StartTime);\r\n    var deviceItemEndTime =\r\n      DeviceItem.EndTime == null ? null : new Date(DeviceItem.EndTime);\r\n    if (ConsolidatedDeviceList.length > 0) {\r\n      for (var i = 0; i < ConsolidatedDeviceList.length; i++) {\r\n        var itemStartTime = new Date(ConsolidatedDeviceList[i].StartTime);\r\n        var itemEndTime =\r\n          ConsolidatedDeviceList[i].EndTime == null\r\n            ? null\r\n            : new Date(ConsolidatedDeviceList[i].EndTime);\r\n\r\n        if (deviceItemStartTime <= itemStartTime) {\r\n          if (DeviceItem.EndTime == null) {\r\n            ConsolidatedDeviceList[i].EndTime = null;\r\n            ConsolidatedDeviceList[i].StartTime = DeviceItem.StartTime;\r\n            isFound = true;\r\n            foundItem = i;\r\n            break;\r\n          } else if (\r\n            deviceItemEndTime != null &&\r\n            deviceItemEndTime > itemStartTime\r\n          ) {\r\n            ConsolidatedDeviceList[i].StartTime = DeviceItem.StartTime;\r\n            if (itemEndTime != null && deviceItemEndTime > itemEndTime) {\r\n              ConsolidatedDeviceList[i].EndTime = DeviceItem.EndTime;\r\n            }\r\n            isFound = true;\r\n            foundItem = i;\r\n            break;\r\n          }\r\n        } else {\r\n          if (itemEndTime == null) {\r\n            isFound = true;\r\n            foundItem = i;\r\n            break;\r\n          } else if (deviceItemStartTime < itemEndTime) {\r\n            isFound = true;\r\n            foundItem = i;\r\n            if (deviceItemEndTime == null)\r\n              ConsolidatedDeviceList[i].EndTime = DeviceItem.EndTime;\r\n            else if (deviceItemEndTime > itemEndTime)\r\n              ConsolidatedDeviceList[i].EndTime = DeviceItem.EndTime;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (isFound) {\r\n        ConsolidatedDeviceList[foundItem].DeviceInfo +=\r\n          \";\" +\r\n          DeviceItem.DeviceCode +\r\n          \",\" +\r\n          (deviceItemStartTime == null\r\n            ? \"--\"\r\n            : deviceItemStartTime.getDate() +\r\n            \"-\" +\r\n            (deviceItemStartTime.getMonth() + 1) +\r\n            \"-\" +\r\n            deviceItemStartTime.getFullYear() +\r\n            \"  \" +\r\n            (\"0\" + deviceItemStartTime.getHours()).slice(-2) +\r\n            \":\" +\r\n            (\"0\" + deviceItemStartTime.getMinutes()).slice(-2)) +\r\n          \",\" +\r\n          (deviceItemEndTime == null\r\n            ? \"--\"\r\n            : deviceItemEndTime.getDate() +\r\n            \"-\" +\r\n            (deviceItemEndTime.getMonth() + 1) +\r\n            \"-\" +\r\n            deviceItemEndTime.getFullYear() +\r\n            \"  \" +\r\n            (\"0\" + deviceItemEndTime.getHours()).slice(-2) +\r\n            \":\" +\r\n            (\"0\" + deviceItemEndTime.getMinutes()).slice(-2));\r\n      } else {\r\n        var obj = {\r\n          StartTime: DeviceItem.StartTime,\r\n          EndTime: DeviceItem.EndTime,\r\n          DeviceInfo:\r\n            DeviceItem.DeviceCode +\r\n            \",\" +\r\n            (deviceItemStartTime == null\r\n              ? \"--\"\r\n              : deviceItemStartTime.getDate() +\r\n              \"-\" +\r\n              (deviceItemStartTime.getMonth() + 1) +\r\n              \"-\" +\r\n              deviceItemStartTime.getFullYear() +\r\n              \"  \" +\r\n              (\"0\" + deviceItemStartTime.getHours()).slice(-2) +\r\n              \":\" +\r\n              (\"0\" + deviceItemStartTime.getMinutes()).slice(-2)) +\r\n            \",\" +\r\n            (deviceItemEndTime == null\r\n              ? \"--\"\r\n              : deviceItemEndTime.getDate() +\r\n              \"-\" +\r\n              (deviceItemEndTime.getMonth() + 1) +\r\n              \"-\" +\r\n              deviceItemEndTime.getFullYear() +\r\n              \"  \" +\r\n              (\"0\" + deviceItemEndTime.getHours()).slice(-2) +\r\n              \":\" +\r\n              (\"0\" + deviceItemEndTime.getMinutes()).slice(-2)),\r\n        };\r\n        ConsolidatedDeviceList.push(obj);\r\n      }\r\n    } else {\r\n      var objs = {\r\n        StartTime: DeviceItem.StartTime,\r\n        EndTime: DeviceItem.EndTime,\r\n        DeviceInfo:\r\n          DeviceItem.DeviceCode +\r\n          \",\" +\r\n          (deviceItemStartTime == null\r\n            ? \"--\"\r\n            : deviceItemStartTime.getDate() +\r\n            \"-\" +\r\n            (deviceItemStartTime.getMonth() + 1) +\r\n            \"-\" +\r\n            deviceItemStartTime.getFullYear() +\r\n            \"  \" +\r\n            (\"0\" + deviceItemStartTime.getHours()).slice(-2) +\r\n            \":\" +\r\n            (\"0\" + deviceItemStartTime.getMinutes()).slice(-2)) +\r\n          \",\" +\r\n          (deviceItemEndTime == null\r\n            ? \"--\"\r\n            : deviceItemEndTime.getDate() +\r\n            \"-\" +\r\n            (deviceItemEndTime.getMonth() + 1) +\r\n            \"-\" +\r\n            deviceItemEndTime.getFullYear() +\r\n            \"  \" +\r\n            (\"0\" + deviceItemEndTime.getHours()).slice(-2) +\r\n            \":\" +\r\n            (\"0\" + deviceItemEndTime.getMinutes()).slice(-2)),\r\n      };\r\n      ConsolidatedDeviceList.push(objs);\r\n    }\r\n    return ConsolidatedDeviceList;\r\n  }\r\n\r\n  function getDeviceHTMLNew(objShipment) {\r\n    if (objShipment !== undefined && objShipment !== null) {\r\n      var deviceHtml = [];\r\n      var shiftDuration = Math.floor(\r\n        (CurrentShift.EndTime - CurrentShift.StartTime) / 1000 / 60\r\n      );\r\n      var GraphPercentage = 100.0 / shiftDuration;\r\n      var ConsolidatedDeviceList = [];\r\n\r\n      deviceHtml.push(\r\n        <div className=\"marineDashboardDeviceHtmlDiv5\">\r\n          <div className=\"marineDashboardDeviceHtmlDiv6\">&nbsp;</div>\r\n          <div className=\"marineDashboardDeviceHtmlDiv7\"></div>\r\n          <div className=\"marineDashboardDeviceHtmlDiv8\">&nbsp;</div>\r\n        </div>\r\n      );\r\n\r\n      for (var i = 0; i < objShipment.DeviceHealthAuditList.length; i++) {\r\n        ConsolidatedDeviceList = AddConsolidatedDeviceList(\r\n          ConsolidatedDeviceList,\r\n          objShipment.DeviceHealthAuditList[i]\r\n        );\r\n      }\r\n      for (var j = 0; j < ConsolidatedDeviceList.length; j++) {\r\n        var gap = 0;\r\n        var device = ConsolidatedDeviceList[j];\r\n        var DeviceStartTime = null;\r\n\r\n        if (device.StartTime != null)\r\n          DeviceStartTime = new Date(device.StartTime);\r\n        var DeviceEndTime = null;\r\n        if (device.EndTime != null) DeviceEndTime = new Date(device.EndTime);\r\n\r\n        var minsdiff = Math.floor(\r\n          (DeviceStartTime - CurrentShift.StartTime) / 1000 / 60\r\n        );\r\n        if (CurrentShift.StartTime < DeviceStartTime)\r\n          gap = minsdiff * GraphPercentage;\r\n        var DeviceGraphPercentage = 0;\r\n\r\n        if (DeviceEndTime != null) {\r\n          if (\r\n            DeviceEndTime < CurrentShift.EndTime &&\r\n            DeviceStartTime < CurrentShift.StartTime\r\n          ) {\r\n            DeviceGraphPercentage =\r\n              GraphPercentage *\r\n              ((DeviceEndTime - CurrentShift.StartTime) / 1000 / 60);\r\n          } else if (\r\n            DeviceEndTime > CurrentShift.EndTime &&\r\n            DeviceStartTime < CurrentShift.StartTime\r\n          ) {\r\n            DeviceGraphPercentage = 100;\r\n          } else if (\r\n            DeviceStartTime > CurrentShift.StartTime &&\r\n            DeviceEndTime < CurrentShift.EndTime\r\n          ) {\r\n            DeviceGraphPercentage =\r\n              GraphPercentage * ((DeviceEndTime - DeviceStartTime) / 1000 / 60);\r\n          } else if (\r\n            DeviceEndTime > CurrentShift.EndTime &&\r\n            DeviceStartTime > CurrentShift.StartTime\r\n          ) {\r\n            DeviceGraphPercentage =\r\n              GraphPercentage *\r\n              ((CurrentShift.EndTime - DeviceStartTime) / 1000 / 60);\r\n          }\r\n        } else {\r\n          if (DeviceStartTime < CurrentShift.StartTime) {\r\n            DeviceGraphPercentage = 100;\r\n          } else {\r\n            DeviceGraphPercentage =\r\n              GraphPercentage *\r\n              ((CurrentShift.EndTime - DeviceStartTime) / 1000 / 60);\r\n          }\r\n        }\r\n        var endCircleClass =\r\n          device.EndTime == null || DeviceEndTime > CurrentShift.EndTime\r\n            ? \"circle_red_right\"\r\n            : \"circle_green_right\";\r\n        var circleRedStyle = isDeviceStatusHover\r\n          ? \"circleRedHover\"\r\n          : \"circleRed\";\r\n        deviceHtml.push(\r\n          <div\r\n            className=\"marineDashboardDeviceHtmlDiv1\"\r\n            style={{ width: DeviceGraphPercentage + \"%\", left: gap + \"%\" }}\r\n          >\r\n            <div className=\"marineDashboardDeviceHtmlDiv2\">&nbsp;</div>\r\n\r\n            <Popup\r\n              className=\"operatorDBPopup\"\r\n              element={\r\n                <div className=\"marineDashboardDeviceHtmlDiv3\">\r\n                  <div\r\n                    // style={{ padding: 15 }}\r\n                    className={circleRedStyle}\r\n                    data-toggle=\"popover\"\r\n                  // style={{ circleRedStyle }}\r\n                  // id=\"circleRed\"\r\n                  // onClick={() => {\r\n                  //   changeCircleStyle(device);\r\n                  // }}\r\n                  ></div>\r\n                  <div\r\n                    className={endCircleClass}\r\n                    data-toggle=\"popover\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  ></div>\r\n                </div>\r\n              }\r\n              hoverable={false}\r\n              on=\"click\"\r\n            >\r\n              {deviceStatusHover(device.DeviceInfo)}\r\n            </Popup>\r\n\r\n            <div className=\"marineDashboardDeviceHtmlDiv4\">&nbsp;</div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return deviceHtml;\r\n    }\r\n  }\r\n\r\n  // function changeCircleStyle(device) {\r\n  //   if (!isDeviceStatusHover) {\r\n  //     setIsDeviceStatusHover(true);\r\n  //     // document.getElementById(\"circleRed\").style.backgroundColor = \"#ee3124\";\r\n  //   }\r\n  // }\r\n\r\n  function deviceStatusHover(deviceDetails) {\r\n    var hoverHTML = [];\r\n    try {\r\n      var deviceList = deviceDetails.split(\";\");\r\n      for (var i = 0; i < deviceList.length; i++) {\r\n        var deviceInfo = deviceList[i].split(\",\");\r\n        var hoverHTMLCompose = [];\r\n        for (var j = 0; j < deviceInfo.length; j++) {\r\n          hoverHTMLCompose.push(<td>{deviceInfo[j]}</td>);\r\n        }\r\n        hoverHTML.push(<tr>{hoverHTMLCompose}</tr>);\r\n      }\r\n      return (\r\n        <div>\r\n          <div className=\"marineDashboardDeviceStatusHoverDiv1\">\r\n            <div style={{ paddingTop: \"5px\" }}>\r\n              <span>{t(\"MarineDashboard_Device_Status\")}</span>\r\n            </div>\r\n          </div>\r\n          <div style={{ paddingTop: \"5px\" }}>\r\n            <table\r\n              cellSpacing=\"1\"\r\n              cellPadding=\"1\"\r\n              width=\"300px\"\r\n              className=\"marineDashboardDeviceStatusHoverTable1\"\r\n            >\r\n              <tbody>\r\n                <tr style={{ fontWeight: \"bold\" }}>\r\n                  <td>{t(\"MarineDashboard_Device\")}</td>\r\n                  <td>{t(\"MarineDashboard_Stopped_Time\")}</td>\r\n                  <td>{t(\"MarineDashboard_Started_Time\")}</td>\r\n                </tr>\r\n                {hoverHTML}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error in deviceStatusHover\", error);\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div>\r\n          {transportationType === Constants.TransportationType.RAIL ? (\r\n            <div>\r\n              <table style={{ width: \"99%\" }} cellPadding=\"0\" cellSpacing=\"0\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td className=\"railDashboardIdentification\">\r\n                      <table\r\n                        style={{ width: \"100%\" }}\r\n                        cellPadding=\"0\"\r\n                        cellSpacing=\"0\"\r\n                      >\r\n                        <tbody>\r\n                          <tr>\r\n                            <td style={{ width: \"12%\" }}>\r\n                              <div\r\n                                style={{ width: \"100%\", height: \"15px\" }}\r\n                              ></div>\r\n                            </td>\r\n                            <td className=\"railTableIdentification\">\r\n                              <div\r\n                                id=\"divShiftNames\"\r\n                                style={{ width: \"100%\", height: \"15px\" }}\r\n                              >\r\n                                {shiftNames()}\r\n                              </div>\r\n                            </td>\r\n                            <td style={{ width: \"1.2%\" }}>\r\n                              <div\r\n                                style={{ width: \"100%\", height: \"15px\" }}\r\n                              ></div>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </td>\r\n                    <td style={{ width: \"1%\", verticalAlign: \"top\" }}></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div className=\"railTableResults\">\r\n                <table id=\"tblResults\" style={{ width: \"100%\" }}>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"railDivResults\">\r\n                        <div id=\"divResults\">{baysInfoSuccess()}</div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <table style={{ width: \"100%\" }} cellPadding=\"0\" cellSpacing=\"0\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td style={{ width: \"99%\", position: \"relative\" }}>\r\n                      <div id=\"divFooterTime\">{timeGraphHtml()}</div>\r\n                    </td>\r\n                    <td></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : transportationType === Constants.TransportationType.ROAD ? (\r\n            <div>\r\n              <table style={{ width: \"99%\" }} cellPadding=\"0\" cellSpacing=\"0\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td className=\"truckDashboardIdentification\">\r\n                      <table\r\n                        style={{ width: \"100%\" }}\r\n                        cellPadding=\"0\"\r\n                        cellSpacing=\"0\"\r\n                      >\r\n                        <tbody>\r\n                          <tr>\r\n                            <td style={{ width: \"12%\" }}>\r\n                              <div\r\n                                style={{ width: \"100%\", height: \"15px\" }}\r\n                              ></div>\r\n                            </td>\r\n                            <td className=\"truckTableIdentification\">\r\n                              <div\r\n                                id=\"divShiftNames\"\r\n                                style={{ width: \"100%\", height: \"15px\" }}\r\n                              >\r\n                                {shiftNames()}\r\n                              </div>\r\n                            </td>\r\n                            <td style={{ width: \"11.3%\" }}>\r\n                              <div\r\n                                id=\"divQueueListHeader\"\r\n                                className=\"truckDivQueueListHeader\"\r\n                              >\r\n                                {\"| \" + t(\"RoadDashboard_InQueue\")}\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </td>\r\n                    <td style={{ width: \"20%\", verticalAlign: \"top\" }}>\r\n                      <div\r\n                        id=\"divLiveCompHeader\"\r\n                        className=\"truckDivLiveCompHeader\"\r\n                      >\r\n                        {\"| \" + t(\"Dashboard_Live_Comp_Header\")}\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div className=\"truckTableResults\">\r\n                <table id=\"tblResults\" style={{ width: \"100%\" }}>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"truckDivResults\">\r\n                        <div id=\"divResults\">{baysInfoSuccess()}</div>\r\n                      </td>\r\n                      <td style={{ width: \"20%\", verticalAlign: \"top\" }}>\r\n                        <div>\r\n                          <div id=\"divcompartments\">\r\n                            {getCompartmentsHTML()}\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <table style={{ width: \"100%\" }} cellPadding=\"0\" cellSpacing=\"0\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td style={{ width: \"80%\", position: \"relative\" }}>\r\n                      <div id=\"divFooterTime\">{timeGraphHtml()}</div>\r\n                    </td>\r\n                    <td></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <table style={{ width: \"99%\" }} cellPadding=\"0\" cellSpacing=\"0\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td className=\"marineDashboardFrameTd1\">\r\n                      <table\r\n                        style={{ width: \"100%\" }}\r\n                        cellPadding=\"0\"\r\n                        cellSpacing=\"0\"\r\n                      >\r\n                        <tbody>\r\n                          <tr>\r\n                            <td style={{ width: \"12%\" }}>\r\n                              <div\r\n                                style={{ width: \"100%\", height: \"15px\" }}\r\n                              ></div>\r\n                            </td>\r\n                            <td className=\"marineDashboardFrameTd2\">\r\n                              <div\r\n                                id=\"divShiftNames\"\r\n                                style={{ width: \"100%\", height: \"15px\" }}\r\n                              >\r\n                                {shiftNames()}\r\n                              </div>\r\n                            </td>\r\n                            <td style={{ width: \"2.1%\" }}>\r\n                              <div\r\n                                style={{ width: \"100%\", height: \"15px\" }}\r\n                              ></div>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </td>\r\n                    <td className=\"marineDashboardFrameTd3\">\r\n                      <div\r\n                        id=\"divLiveCompHeader\"\r\n                        className=\"marineDashboardFrameDiv1\"\r\n                      >\r\n                        {\"| \" + t(\"Dashboard_Live_Comp_Header\")}\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div className=\"marineDashboardFrameDiv2\">\r\n                <table id=\"tblResults\" style={{ width: \"100%\" }}>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"marineDashboardFrameTd4\">\r\n                        <div id=\"divResults\">{baysInfoSuccess()}</div>\r\n                      </td>\r\n                      <td style={{ verticalAlign: \"top\" }}>\r\n                        <div>\r\n                          <div id=\"divcompartments\">\r\n                            {getCompartmentsHTML()}\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <table width=\"99%\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td className=\"marineDashboardFrameTd5\">\r\n                      <div id=\"divFooterTime\">{timeGraphHtml()}</div>\r\n                    </td>\r\n                    <td></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport PropTypes from \"prop-types\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport OperatorDashboardThroughputSummaryComposite from \"../Summary/OperatorDashboardThroughputSummaryComposite\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport {\r\n  functionGroups,\r\n  fnPrintMarineBOL,\r\n  fnPrintMarineBOD,\r\n  fnCloseMarineShipment,\r\n  fnCloseMarineReceipt,\r\n  fnPrintBOL,\r\n  fnPrintBOD,\r\n  fnCloseShipment,\r\n  fnCloseReceipt,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  Modal,\r\n  Select,\r\n  Slider,\r\n  Input,\r\n} from \"@scuf/common\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestApis from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport {\r\n  emptyMarineOperatorDashboardFilterInfo,\r\n  emptyOthersOperatorDashboardFilterInfo,\r\n} from \"../../../JS/DefaultEntities\";\r\nimport lodash from \"lodash\";\r\nimport { marineReceiptValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { OperatorDashboardOverviewDetails } from \"../../UIBase/Details/OperatorDashboardOverviewDetails\";\r\n\r\nclass OperatorDashboardDetailsComposite extends Component {\r\n  state = {\r\n    isPopupOpen: { key: null, value: false },\r\n    hdnFGPrintBOL: null,\r\n    hdnFGPrintBOD: null,\r\n    hdnFGShipClose: null,\r\n    hdnFGRecClose: null,\r\n    openReceipt: false,\r\n    reason: \"\",\r\n    transactionCode: \"\",\r\n    transactionType: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      marineReceiptValidationDef\r\n    ),\r\n    marineReceiptBtnCloseOK: false,\r\n    marineOrderDetails: null,\r\n    marineOrderProductDetails: [],\r\n    marineOrderloadedPartCommpartmentList: [],\r\n    marineOrderloadedOtherCommpartmentList: [],\r\n    CurrentShift: {},\r\n    timeScaleDuration: 4,\r\n    marineTimeScaleDuration: 12,\r\n    modFilter: {},\r\n    isFilterOpen: false,\r\n    selectList: [],\r\n    webServiceName: \"TMDashboardGet.asmx\",\r\n    filteredBayDetails: [],\r\n    modFilteredBayDetails: [],\r\n    BayDetails: [],\r\n    buttonGroup: [\r\n      { content: \"View All\", type: \"primary\" },\r\n      { content: \"Completed\", type: \"secondary\" },\r\n      { content: \"Interrupted\", type: \"secondary\" },\r\n      { content: \"With Alarms\", type: \"secondary\" },\r\n    ],\r\n    DashboardConfig: {\r\n      TimeDuration: 4,\r\n      MassUOM: \"Kg\",\r\n      VolUOM: \"L\",\r\n      RefreshRate: 60000,\r\n      RefreshRateOfCompartments: 60000,\r\n      NoOfCompartments: 10,\r\n      NoOfMarineCompartments: 30,\r\n      PurgeInterval: 48,\r\n    },\r\n    ShiftsData: [],\r\n    transactionAndDeviceStatus: [],\r\n    timetaken: 0,\r\n    graphDuration: 0,\r\n    viewShipmentStatus: 0,\r\n    isLive: true,\r\n    QueueDetails: [],\r\n    queueHoverHtml: [],\r\n    objOrderDetails: [],\r\n    selectedOption: [],\r\n    railOptions: [],\r\n  };\r\n\r\n  GetCurrentShift() {\r\n    let EndTime = new Date();\r\n    let StartTime = new Date();\r\n    let { transportationType } = this.props;\r\n    let { marineTimeScaleDuration, timeScaleDuration } = this.state;\r\n\r\n    if (transportationType === Constants.TransportationType.MARINE) {\r\n      StartTime.setHours(StartTime.getHours() - marineTimeScaleDuration);\r\n    } else {\r\n      StartTime.setHours(StartTime.getHours() - timeScaleDuration);\r\n    }\r\n    let CurrentShift = { StartTime: StartTime, EndTime: EndTime };\r\n    this.setState({ CurrentShift });\r\n  }\r\n\r\n  getShifts() {\r\n    const { tokenDetails } = this.props;\r\n    axios(\r\n      RestApis.GetShifts,\r\n      Utilities.getAuthenticationObjectforGet(tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let ShiftsData = result.EntityResult;\r\n\r\n          if (ShiftsData !== null && ShiftsData !== undefined) {\r\n            for (var i = 0; i < ShiftsData.length; i++) {\r\n              if (ShiftsData[i].StartTime.length === 25) {\r\n                ShiftsData[i].StartTime = new Date(\r\n                  Date.parse(ShiftsData[i].StartTime.slice(0, -6))\r\n                );\r\n              } else {\r\n                ShiftsData[i].StartTime = new Date(\r\n                  Date.parse(ShiftsData[i].StartTime)\r\n                );\r\n              }\r\n              if (ShiftsData[i].EndTime.length === 25) {\r\n                ShiftsData[i].EndTime = new Date(\r\n                  Date.parse(ShiftsData[i].EndTime.slice(0, -6))\r\n                );\r\n              } else {\r\n                ShiftsData[i].EndTime = new Date(\r\n                  Date.parse(ShiftsData[i].EndTime)\r\n                );\r\n              }\r\n            }\r\n          }\r\n\r\n          this.setState({ ShiftsData });\r\n        } else {\r\n          console.log(\"Error in getShifts:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"OperatorDashboardDetailsComposite:Error occurred on getShifts\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getBayDetails() {\r\n    const { transportationType, userDetails, tokenDetails } = this.props;\r\n    const keyCode = [\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: transportationType,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.transportationType,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetDashboardBayDetails,\r\n      Utilities.getAuthenticationObjectforPost(obj, tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess) {\r\n          let filteredBayDetails = result.EntityResult;\r\n          let BayDetails = response.data;\r\n\r\n          this.setState(\r\n            {\r\n              filteredBayDetails,\r\n              BayDetails,\r\n              modFilteredBayDetails: filteredBayDetails,\r\n            },\r\n            () => {\r\n              this.getLiveOrdersForBays(filteredBayDetails);\r\n              let selectList = [];\r\n              let modFilter =\r\n                transportationType === Constants.TransportationType.MARINE\r\n                  ? lodash.cloneDeep(emptyMarineOperatorDashboardFilterInfo)\r\n                  : lodash.cloneDeep(emptyOthersOperatorDashboardFilterInfo);\r\n              if (Array.isArray(filteredBayDetails)) {\r\n                filteredBayDetails.forEach((bayDetail) => {\r\n                  selectList.push(bayDetail.Code);\r\n                });\r\n              }\r\n              modFilter.selectList = selectList;\r\n              this.setState({\r\n                selectList,\r\n                modFilter,\r\n              });\r\n              // if (transportationType === Constants.TransportationType.ROAD) {\r\n              //   if (\r\n              //     filteredBayDetails !== undefined &&\r\n              //     filteredBayDetails !== null\r\n              //   ) {\r\n              //     filteredBayDetails.forEach((bayDetail) => {\r\n              //       selectList.push(bayDetail.Code);\r\n              //     });\r\n              //   }\r\n              //   modFilter.selectList = selectList;\r\n              //   this.setState({\r\n              //     selectList,\r\n              //     modFilter,\r\n              //   });\r\n              //   // this.roadBaysInfoSuccess(filteredBayDetails);\r\n              // } else {\r\n              //   // this.baysInfoSuccess(filteredBayDetails);\r\n              //   if (\r\n              //     filteredBayDetails !== undefined &&\r\n              //     filteredBayDetails !== null\r\n              //   ) {\r\n              //     filteredBayDetails.forEach((bayDetail) => {\r\n              //       selectList.push(bayDetail.Code);\r\n              //     });\r\n              //   }\r\n\r\n              //   modFilter.selectList = selectList;\r\n              //   this.setState({\r\n              //     selectList,\r\n              //     modFilter,\r\n              //   });\r\n              // }\r\n              this.getTransactionAndDeviceStatus(filteredBayDetails);\r\n              this.getTransactionAudit(filteredBayDetails);\r\n              this.getDeviceStatus(filteredBayDetails);\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting BayDetails\", error);\r\n      });\r\n  }\r\n\r\n  getTransactionAndDeviceStatus = (filteredBayDetails) => {\r\n    const { transportationType, userDetails, tokenDetails } = this.props;\r\n    const {\r\n      isLive,\r\n      marineTimeScaleDuration,\r\n      timeScaleDuration,\r\n      DashboardConfig,\r\n    } = this.state;\r\n    let CurrentShift = {};\r\n    try {\r\n      if (isLive) {\r\n        let EndTime = new Date();\r\n        let StartTime = new Date();\r\n        if (transportationType === Constants.TransportationType.MARINE) {\r\n          StartTime.setHours(StartTime.getHours() - marineTimeScaleDuration);\r\n        } else {\r\n          StartTime.setHours(StartTime.getHours() - timeScaleDuration);\r\n        }\r\n        CurrentShift = { StartTime: StartTime, EndTime: EndTime };\r\n        this.setState({ CurrentShift });\r\n      } else {\r\n        CurrentShift.StartTime = new Date(this.state.CurrentShift.EndTime);\r\n        CurrentShift.EndTime = new Date(this.state.CurrentShift.EndTime);\r\n        if (transportationType === Constants.TransportationType.MARINE) {\r\n          CurrentShift.StartTime.setHours(\r\n            CurrentShift.StartTime.getHours() - marineTimeScaleDuration\r\n          );\r\n        } else {\r\n          CurrentShift.StartTime.setHours(\r\n            CurrentShift.StartTime.getHours() - timeScaleDuration\r\n          );\r\n        }\r\n        this.setState({ CurrentShift });\r\n      }\r\n      let baycode = [];\r\n      filteredBayDetails.forEach((filteredBayDetail) => {\r\n        baycode.push(filteredBayDetail.Code);\r\n      });\r\n      const obj = {\r\n        ShareHolderCode: userDetails.EntityResult.PrimaryShareholder,\r\n        keyDataCode: KeyCodes.transportationType,\r\n        Entity: {\r\n          BayCodes: baycode,\r\n          EndTime: CurrentShift.EndTime,\r\n          StartTime: CurrentShift.StartTime,\r\n          TransportationType: transportationType,\r\n        },\r\n      };\r\n      axios(\r\n        RestApis.GetTransactionAndDeviceStatus,\r\n        Utilities.getAuthenticationObjectforPost(obj, tokenDetails.tokenInfo)\r\n      )\r\n        .then((response) => {\r\n          const result = response.data;\r\n          if (result.IsSuccess) {\r\n            let transactionAndDeviceStatus = result.EntityResult;\r\n            this.setState({ transactionAndDeviceStatus });\r\n          } else {\r\n            console.log(\r\n              \"Error in getTransactionAndDeviceStatus:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Error while getting transaction and device status\",\r\n            error\r\n          );\r\n        });\r\n\r\n      if (isLive) {\r\n        this.shipmentsDataTimer = setTimeout(\r\n          () => this.getTransactionAndDeviceStatus(filteredBayDetails),\r\n          parseInt(DashboardConfig.RefreshRate)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error in getTransactionAndDeviceStatus \" + error);\r\n    }\r\n  };\r\n\r\n  getTransactionAudit(filteredBayDetails) {\r\n    var baycode = [];\r\n    const { CurrentShift } = this.state;\r\n    // const filteredBayDetails = this.state.filteredBayDetails;\r\n    filteredBayDetails.forEach((filteredBayDetail) => {\r\n      baycode.push(filteredBayDetail.Code);\r\n    });\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.transportationType,\r\n      Entity: {\r\n        BayCodes: baycode,\r\n        EndTime: CurrentShift.EndTime,\r\n        StartTime: CurrentShift.StartTime,\r\n        TransportationType: this.props.transportationType,\r\n      },\r\n    };\r\n    axios(\r\n      RestApis.GetTransactionAudit,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess) {\r\n          // console.info(\"getTransactionAudit\", result);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting transactionAudit\");\r\n      });\r\n  }\r\n\r\n  // getLiveOrdersForBays(filteredBayDetails) {\r\n  //   const { userDetails, tokenDetails, transportationType } = this.props;\r\n  //   const { CurrentShift } = this.state;\r\n  //   var baycode = [];\r\n  //   if (filteredBayDetails !== null)\r\n  //     filteredBayDetails.forEach((filteredBayDetail) => {\r\n  //       baycode.push(filteredBayDetail.Code);\r\n  //     });\r\n  //   // const keyCode = [\r\n  //   //   {\r\n  //   //     key: KeyCodes.transportationType,\r\n  //   //     value: this.props.transportationType,\r\n  //   //   },\r\n  //   // ];\r\n  //   const obj = {\r\n  //     ShareHolderCode: userDetails.EntityResult.PrimaryShareholder,\r\n  //     keyDataCode: KeyCodes.transportationType,\r\n  //     Entity: {\r\n  //       BayCodes: baycode,\r\n  //       EndTime: CurrentShift.EndTime,\r\n  //       StartTime: CurrentShift.StartTime,\r\n  //       TransportationType: transportationType,\r\n  //     },\r\n  //   };\r\n  //   axios(\r\n  //     RestApis.GetTransactionAudit,\r\n  //     Utilities.getAuthenticationObjectforPost(obj, tokenDetails.tokenInfo)\r\n  //   )\r\n  //     .then((response) => {\r\n  //       const result = response.data;\r\n  //       if (result.IsSuccess) {\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(\"Error while getting transactionAudit\", error);\r\n  //     });\r\n  // }\r\n\r\n  getDeviceStatus(filteredBayDetails) {\r\n    const { userDetails, transportationType, tokenDetails } = this.props;\r\n    const { CurrentShift } = this.state;\r\n    let baycode = [];\r\n    filteredBayDetails.forEach((filteredBayDetail) => {\r\n      baycode.push(filteredBayDetail.Code);\r\n    });\r\n    const obj = {\r\n      ShareHolderCode: userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.transportationType,\r\n      Entity: {\r\n        BayCodes: baycode,\r\n        EndTime: CurrentShift.EndTime,\r\n        StartTime: CurrentShift.StartTime,\r\n        TransportationType: transportationType,\r\n      },\r\n    };\r\n    axios(\r\n      RestApis.GetDeviceStatus,\r\n      Utilities.getAuthenticationObjectforPost(obj, tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess) {\r\n          // console.info(\"getDeviceStatus\", result);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting DeviceStatus\", error);\r\n      });\r\n  }\r\n\r\n  getSpurDetails() {\r\n    const { transportationType, tokenDetails } = this.props;\r\n    axios(\r\n      RestApis.GetSpurDetails,\r\n      Utilities.getAuthenticationObjectforGet(tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess) {\r\n          let filteredBayDetails = result.EntityResult;\r\n          let BayDetails = response.data;\r\n          let selectList = [];\r\n          let selectedOption = [];\r\n          let railOptions = [];\r\n          if (filteredBayDetails !== undefined && filteredBayDetails !== null) {\r\n            filteredBayDetails.forEach((bayDetail) => {\r\n              selectList.push(bayDetail.Code);\r\n              selectedOption.push(\"select\");\r\n              railOptions.push([]);\r\n            });\r\n          }\r\n          let modFilter =\r\n            transportationType === Constants.TransportationType.MARINE\r\n              ? lodash.cloneDeep(emptyMarineOperatorDashboardFilterInfo)\r\n              : lodash.cloneDeep(emptyOthersOperatorDashboardFilterInfo);\r\n          modFilter.selectList = selectList;\r\n          this.setState(\r\n            {\r\n              filteredBayDetails,\r\n              modFilteredBayDetails: filteredBayDetails,\r\n              BayDetails,\r\n              selectList,\r\n              modFilter,\r\n              selectedOption,\r\n              railOptions,\r\n            },\r\n            () => {\r\n              this.getLiveOrdersForBays(filteredBayDetails);\r\n              // if (\r\n              //   this.props.transportationType===\r\n              //   Constants.TransportationType.RAIL\r\n              // ) {\r\n              //   this.railBaysInfoSuccess(filteredBayDetails);\r\n              // }\r\n              this.getTransactionAndDeviceStatus(filteredBayDetails);\r\n              this.getTransactionAudit(filteredBayDetails);\r\n              this.getDeviceStatus(filteredBayDetails);\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting spurDetails\", error);\r\n      });\r\n  }\r\n\r\n  getLiveOrdersForBays(filteredBayDetails) {\r\n    const { userDetails, transportationType, tokenDetails } = this.props;\r\n    const { DashboardConfig } = this.state;\r\n    let baycode = [];\r\n    try {\r\n      filteredBayDetails.forEach((filteredBayDetail) => {\r\n        baycode.push(filteredBayDetail.Code);\r\n      });\r\n      const keyCode = [\r\n        {\r\n          key: KeyCodes.transportationType,\r\n          value: transportationType,\r\n        },\r\n      ];\r\n      const obj = {\r\n        ShareHolderCode: userDetails.EntityResult.PrimaryShareholder,\r\n        keyDataCode: KeyCodes.transportationType,\r\n        KeyCodes: keyCode,\r\n        Entity: baycode,\r\n      };\r\n      axios(\r\n        RestApis.GetLiveOrdersForBays,\r\n        Utilities.getAuthenticationObjectforPost(obj, tokenDetails.tokenInfo)\r\n      )\r\n        .then((response) => {\r\n          const result = response.data;\r\n          if (result.IsSuccess) {\r\n            this.setState({\r\n              objOrderDetails: result.EntityResult,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              objOrderDetails: [],\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting LiveOrdersForBays\", error);\r\n        });\r\n      this.liveCompartmentsTimer = setTimeout(\r\n        () => this.getLiveOrdersForBays(filteredBayDetails),\r\n        parseInt(DashboardConfig.RefreshRateOfCompartments)\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error in getLiveOrdersForBays\", error);\r\n    }\r\n  }\r\n\r\n  getRailOrderDetails = (transactionCode, transactionType, wagonCode) => {\r\n    const { userDetails, tokenDetails } = this.props;\r\n    const keyCode = [\r\n      {\r\n        key: \"TransactionCode\",\r\n        value: transactionCode,\r\n      },\r\n      {\r\n        key: \"TransactionType\",\r\n        value: transactionType,\r\n      },\r\n      {\r\n        key: \"WagonCode\",\r\n        value: wagonCode,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.transportationType,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetRailOrderDetails,\r\n      Utilities.getAuthenticationObjectforPost(obj, tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        let marineOrderDetails = result.EntityResult;\r\n        let marineOrderProductDetails = [];\r\n        let marineOrderloadedPartCommpartmentList = [];\r\n        let marineOrderloadedOtherCommpartmentList = [];\r\n        let length = marineOrderDetails.CompartmentInfoList.length;\r\n        let CompBlocks = parseInt(length / 2) + (length % 2);\r\n\r\n        for (let i = 0; i < length; i++) {\r\n          if (marineOrderDetails.CompartmentInfoList[i].Product != null) {\r\n            marineOrderProductDetails = this.addProductDetailsObject(\r\n              marineOrderProductDetails,\r\n              marineOrderDetails.CompartmentInfoList[i]\r\n            );\r\n          }\r\n        }\r\n\r\n        for (let i = 0; i < CompBlocks; i++) {\r\n          if (marineOrderDetails.CompartmentInfoList[i].Product != null) {\r\n            marineOrderloadedPartCommpartmentList.push(\r\n              marineOrderDetails.CompartmentInfoList[i]\r\n            );\r\n          }\r\n        }\r\n        for (let i = CompBlocks; i < length; i++) {\r\n          if (marineOrderDetails.CompartmentInfoList[i].Product != null) {\r\n            marineOrderloadedOtherCommpartmentList.push(\r\n              marineOrderDetails.CompartmentInfoList[i]\r\n            );\r\n          }\r\n        }\r\n\r\n        marineOrderDetails.railTransactionType = transactionType;\r\n\r\n        this.setState({\r\n          marineOrderDetails,\r\n          marineOrderProductDetails,\r\n          marineOrderloadedPartCommpartmentList,\r\n          marineOrderloadedOtherCommpartmentList,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting OrderDetails: \", error);\r\n      });\r\n  };\r\n\r\n  getRailLiveOrderDetails = (\r\n    transactionCode,\r\n    transactionType,\r\n    wagonCode,\r\n    BCUPoint\r\n  ) => {\r\n    const { userDetails, tokenDetails } = this.props;\r\n    const keyCode = [\r\n      {\r\n        key: \"TransactionCode\",\r\n        value: transactionCode,\r\n      },\r\n      {\r\n        key: \"TransactionType\",\r\n        value: transactionType,\r\n      },\r\n      {\r\n        key: \"WagonCode\",\r\n        value: wagonCode,\r\n      },\r\n      {\r\n        key: \"BCUPoint\",\r\n        value: BCUPoint,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.transportationType,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetRailLiveOrderDetails,\r\n      Utilities.getAuthenticationObjectforPost(obj, tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        let marineOrderDetails = result.EntityResult;\r\n\r\n        let marineOrderProductDetails = [];\r\n        // let marineOrderloadedCommpartmentList = [];\r\n        let marineOrderloadedPartCommpartmentList = [];\r\n        let marineOrderloadedOtherCommpartmentList = [];\r\n        let length = marineOrderDetails.CompartmentInfoList.length;\r\n        let CompBlocks = parseInt(length / 2) + (length % 2);\r\n\r\n        for (let i = 0; i < length; i++) {\r\n          if (marineOrderDetails.CompartmentInfoList[i].Product != null) {\r\n            // marineOrderloadedCommpartmentList.push(marineOrderDetails.CompartmentInfoList[i]);\r\n            marineOrderProductDetails = this.addProductDetailsObject(\r\n              marineOrderProductDetails,\r\n              marineOrderDetails.CompartmentInfoList[i]\r\n            );\r\n          }\r\n        }\r\n\r\n        for (let i = 0; i < CompBlocks; i++) {\r\n          if (marineOrderDetails.CompartmentInfoList[i].Product != null) {\r\n            marineOrderloadedPartCommpartmentList.push(\r\n              marineOrderDetails.CompartmentInfoList[i]\r\n            );\r\n          }\r\n        }\r\n        for (let i = CompBlocks; i < length; i++) {\r\n          if (marineOrderDetails.CompartmentInfoList[i].Product != null) {\r\n            marineOrderloadedOtherCommpartmentList.push(\r\n              marineOrderDetails.CompartmentInfoList[i]\r\n            );\r\n          }\r\n        }\r\n\r\n        marineOrderDetails.railTransactionType = transactionType;\r\n\r\n        this.setState({\r\n          marineOrderDetails,\r\n          marineOrderProductDetails,\r\n          marineOrderloadedPartCommpartmentList,\r\n          marineOrderloadedOtherCommpartmentList,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting OrderDetails: \", error);\r\n      });\r\n  };\r\n\r\n  getMarineOrderDetails = (transactionCode, transactionType, totalTime) => {\r\n    const { userDetails, transportationType, tokenDetails } = this.props;\r\n    const keyCode = [\r\n      {\r\n        key: \"TransactionCode\",\r\n        value: transactionCode,\r\n      },\r\n      {\r\n        key: \"TransactionType\",\r\n        value: transactionType.toUpperCase(),\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.transportationType,\r\n      KeyCodes: keyCode,\r\n    };\r\n    let webAPI =\r\n      transportationType.toUpperCase() === \"MARINE\"\r\n        ? RestApis.GetMarineOrderDetails\r\n        : transportationType.toUpperCase() === \"ROAD\"\r\n          ? RestApis.GetOrderDetails\r\n          : \"\";\r\n\r\n    axios(\r\n      webAPI,\r\n      Utilities.getAuthenticationObjectforPost(obj, tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        let marineOrderDetails = result.EntityResult;\r\n        let marineOrderProductDetails = [];\r\n        let marineOrderloadedPartCommpartmentList = [];\r\n        let marineOrderloadedOtherCommpartmentList = [];\r\n        let length = marineOrderDetails.CompartmentInfoList.length;\r\n        let CompBlocks = parseInt(length / 2) + (length % 2);\r\n\r\n        for (let i = 0; i < length; i++) {\r\n          if (marineOrderDetails.CompartmentInfoList[i].Product != null) {\r\n            marineOrderProductDetails = this.addProductDetailsObject(\r\n              marineOrderProductDetails,\r\n              marineOrderDetails.CompartmentInfoList[i]\r\n            );\r\n          }\r\n        }\r\n\r\n        for (let i = 0; i < CompBlocks; i++) {\r\n          if (marineOrderDetails.CompartmentInfoList[i].Product != null) {\r\n            marineOrderloadedPartCommpartmentList.push(\r\n              marineOrderDetails.CompartmentInfoList[i]\r\n            );\r\n          }\r\n        }\r\n        for (let i = CompBlocks; i < length; i++) {\r\n          if (marineOrderDetails.CompartmentInfoList[i].Product != null) {\r\n            marineOrderloadedOtherCommpartmentList.push(\r\n              marineOrderDetails.CompartmentInfoList[i]\r\n            );\r\n          }\r\n        }\r\n\r\n        if (transactionType === \"Dispatch\") {\r\n          marineOrderDetails.TransactionType = 0;\r\n        } else {\r\n          marineOrderDetails.TransactionType = 1;\r\n        }\r\n        marineOrderDetails.TotalTime = totalTime;\r\n\r\n        this.setState({\r\n          marineOrderDetails,\r\n          marineOrderProductDetails,\r\n          marineOrderloadedPartCommpartmentList,\r\n          marineOrderloadedOtherCommpartmentList,\r\n          hdnFGPrintBOL: Utilities.isInFunction(\r\n            userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            transportationType === Constants.TransportationType.MARINE\r\n              ? fnPrintMarineBOL\r\n              : fnPrintBOL\r\n          ),\r\n          hdnFGPrintBOD: Utilities.isInFunction(\r\n            userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            transportationType === Constants.TransportationType.MARINE\r\n              ? fnPrintMarineBOD\r\n              : fnPrintBOD\r\n          ),\r\n          hdnFGShipClose: Utilities.isInFunction(\r\n            userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            transportationType === Constants.TransportationType.MARINE\r\n              ? fnCloseMarineShipment\r\n              : fnCloseShipment\r\n          ),\r\n          hdnFGRecClose: Utilities.isInFunction(\r\n            userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            transportationType === Constants.TransportationType.MARINE\r\n              ? fnCloseMarineReceipt\r\n              : fnCloseReceipt\r\n          ),\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting MarineOrderDetails : \", error);\r\n      });\r\n  };\r\n\r\n  addProductDetailsObject(productDetails, objProductInfo) {\r\n    var isFound = false;\r\n    for (var i = 0; i < productDetails.length; i++) {\r\n      if (productDetails[i].Product === objProductInfo.Product) {\r\n        isFound = true;\r\n        productDetails[i].LoadedQty += objProductInfo.LoadedQty;\r\n        break;\r\n      }\r\n    }\r\n    if (!isFound) {\r\n      var obj = {\r\n        Product: objProductInfo.Product,\r\n        Color: objProductInfo.Color,\r\n        LoadedQty: objProductInfo.LoadedQty,\r\n      };\r\n      productDetails.push(obj);\r\n    }\r\n    return productDetails;\r\n  }\r\n\r\n  print = (transactionCode, transactionType) => {\r\n    const { transportationType, userDetails, tokenDetails } = this.props;\r\n    const keyCode = [\r\n      {\r\n        key: \"TransportationType\",\r\n        value: transportationType.toUpperCase(),\r\n      },\r\n      {\r\n        key: \"TransactionType\",\r\n        value: transactionType.toUpperCase(),\r\n      },\r\n      {\r\n        key: \"Code\",\r\n        value: transactionCode,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: userDetails.EntityResult.PrimaryShareholder,\r\n      KeyCodes: keyCode,\r\n    };\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message:\r\n        transactionType === \"Dispatch\"\r\n          ? \"OperatorDashboard_OrderPrintBOLSuccessfully\"\r\n          : \"OperatorDashboard_OrderPrintBODSuccessfully\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\r\n            this.state.transactionType === \"DISPATCH\"\r\n              ? \"MarineShipmentList_ShipmentCode\"\r\n              : \"Marine_ReceiptCompDetail_ShipmentNumber\",\r\n          ],\r\n          keyValues: [transactionCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestApis.Print,\r\n      Utilities.getAuthenticationObjectforPost(obj, tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n        } else {\r\n          notification.message =\r\n            transactionType === \"Dispatch\"\r\n              ? \"OperatorDashboard_OrderPrintBOLfailed\"\r\n              : \"OperatorDashboard_OrderPrintBODfailed\";\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        console.log(\"Error while getting OrderDetails: \", error);\r\n      });\r\n  };\r\n\r\n  forceCloseOK() {\r\n    const { transportationType, userDetails, tokenDetails } = this.props;\r\n    const { transactionCode, transactionType, reason } = this.state;\r\n    this.setState({ marineReceiptBtnCloseOK: true });\r\n    setTimeout(() => {\r\n      this.setState({ marineReceiptBtnCloseOK: false });\r\n    }, 1800);\r\n    const keyCode = [\r\n      {\r\n        key: \"TransactionCode\",\r\n        value: transactionCode,\r\n      },\r\n      {\r\n        key: \"TransactionType\",\r\n        value: transactionType,\r\n      },\r\n      {\r\n        key: \"TransportationType\",\r\n        value: transportationType.toUpperCase(),\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: userDetails.EntityResult.PrimaryShareholder,\r\n      KeyCodes: keyCode,\r\n      Entity: {\r\n        Reason: reason,\r\n      },\r\n    };\r\n    let notification = {\r\n      messageType: \"success\",\r\n      message:\r\n        this.state.transactionType === \"DISPATCH\"\r\n          ? \"OperatorDashboard_OrderShipmentForceClosureSuccessfull\"\r\n          : \"OperatorDashboard_OrderReceiptForceClosureSuccessfull\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\r\n            this.state.transactionType === \"DISPATCH\"\r\n              ? \"MarineShipmentList_ShipmentCode\"\r\n              : \"Marine_ReceiptCompDetail_ShipmentNumber\",\r\n          ],\r\n          keyValues: [transactionCode],\r\n          isSuccess: true,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    if (this.onFieldChange(\"Reason\", reason)) {\r\n      axios(\r\n        RestApis.ForceClose,\r\n        Utilities.getAuthenticationObjectforPost(obj, tokenDetails.tokenInfo)\r\n      )\r\n        .then((response) => {\r\n          const result = response.data;\r\n          this.setState({ openReceipt: false, reason: \"\" });\r\n          if (result.IsSuccess === true) {\r\n            if (this.shipmentsDataTimer) clearTimeout(this.shipmentsDataTimer);\r\n            this.getTransactionAndDeviceStatus(this.state.filteredBayDetails);\r\n          } else {\r\n            notification.messageType = \"critical\";\r\n            notification.message =\r\n              this.state.transactionType === \"DISPATCH\"\r\n                ? \"OperatorDashboard_OrderShipmentForceClosurefailed\"\r\n                : \"OperatorDashboard_OrderReceiptForceClosurefailed\";\r\n            notification.messageResultDetails[0].isSuccess = false;\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n          }\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting OrderDetails: \", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  handleOpen = (key, boolean) => {\r\n    this.setState({ isPopupOpen: { key: (boolean ? key : null), value: boolean } });\r\n  };\r\n\r\n  forceClose = (transactionCode, transactionType) => {\r\n    this.setState({\r\n      openReceipt: true,\r\n      transactionCode,\r\n      transactionType: transactionType.toUpperCase(),\r\n      isPopupOpen: { key: null, value: false },\r\n    });\r\n  };\r\n\r\n  renderModal() {\r\n    const { openReceipt, validationErrors, marineReceiptBtnCloseOK } =\r\n      this.state;\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal\r\n            onClose={() => this.setState({ openReceipt: false })}\r\n            size=\"small\"\r\n            open={openReceipt}\r\n            closeOnDimmerClick={false}\r\n          >\r\n            <Modal.Content>\r\n              <div className=\"ViewMarineReceiptCloseHeader\">\r\n                <b>\r\n                  {\" \"}\r\n                  {this.state.transactionType === \"DISPATCH\"\r\n                    ? t(\"OperatorDashboard_OrderDispatchForceClosureHeader\")\r\n                    : t(\"OperatorDashboard_OrderReceiptForceClosureHeader\")}\r\n                </b>\r\n              </div>\r\n              <div>\r\n                <Input\r\n                  fluid\r\n                  value={this.state.reason}\r\n                  indicator=\"required\"\r\n                  onChange={(data) => this.onFieldChange(\"Reason\", data)}\r\n                  label={t(\"ViewMarineReceiptList_Reason\")}\r\n                  error={t(validationErrors.Reason)}\r\n                />\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                size=\"small\"\r\n                content={t(\"ViewMarineReceiptList_Cancel\")}\r\n                onClick={() =>\r\n                  this.setState({\r\n                    openReceipt: false,\r\n                    validationErrors: [],\r\n                    reason: \"\",\r\n                  })\r\n                }\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                content={t(\"ViewMarineReceiptList_Ok\")}\r\n                onClick={() => {\r\n                  this.forceCloseOK();\r\n                }}\r\n                disabled={marineReceiptBtnCloseOK}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n\r\n  onFieldChange(propertyName, data) {\r\n    try {\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      this.setState({ reason: data });\r\n      if (marineReceiptValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          marineReceiptValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n        if (\r\n          validationErrors.Reason === \"\" ||\r\n          validationErrors.Reason === undefined\r\n        ) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getQueuedTransaction = (bayCode) => {\r\n    const { userDetails, tokenDetails } = this.props;\r\n    const keyCode = [\r\n      {\r\n        key: \"BayCode\",\r\n        value: bayCode,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.transportationType,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetQueuedTransaction,\r\n      Utilities.getAuthenticationObjectforPost(obj, tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess) {\r\n          this.setState({\r\n            QueueDetails: result.EntityResult,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting QueuedTransaction\", error);\r\n      });\r\n  };\r\n\r\n  getAlarmList = (orderCode) => {\r\n    const { userDetails, tokenDetails } = this.props;\r\n    const keyCode = [\r\n      {\r\n        key: \"OrderCode\",\r\n        value: \"mjtest668\",\r\n      },\r\n      {\r\n        key: \"TransactionType\",\r\n        value: \"DISPATCH\", //or RECEIPT\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.transportationType,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetAlarmList,\r\n      Utilities.getAuthenticationObjectforPost(obj, tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess) {\r\n          // console.info(\"getAlarmList\", result);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting AlarmList\", error);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    var modFilter =\r\n      this.props.transportationType === Constants.TransportationType.MARINE\r\n        ? lodash.cloneDeep(emptyMarineOperatorDashboardFilterInfo)\r\n        : lodash.cloneDeep(emptyOthersOperatorDashboardFilterInfo);\r\n    this.setState({\r\n      modFilter,\r\n    });\r\n    if (this.props.transportationType === Constants.TransportationType.RAIL) {\r\n      this.getSpurDetails();\r\n    } else {\r\n      this.getBayDetails();\r\n    }\r\n    this.getShifts();\r\n    // this.getOrderDetails();\r\n    // this.getQueuedTransaction();\r\n    // this.getAlarmList();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.GetCurrentShift();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.timerStop();\r\n  }\r\n\r\n  timerStop = () => {\r\n    if (this.shipmentsDataTimer) clearTimeout(this.shipmentsDataTimer);\r\n    if (this.liveCompartmentsTimer) clearTimeout(this.liveCompartmentsTimer);\r\n  };\r\n\r\n  onSelectChange = (data) => {\r\n    let { modFilter } = this.state;\r\n    let { selectList } = this.state;\r\n    let selectlist = [];\r\n    selectList.forEach((element) => {\r\n      let i = data.findIndex(function (el) {\r\n        return el === element;\r\n      });\r\n      if (i > -1) {\r\n        selectlist.push(element);\r\n      }\r\n    });\r\n    modFilter.selectList = selectlist;\r\n    this.setState({ modFilter });\r\n  };\r\n\r\n  onCheckChange = (data) => {\r\n    let modFilter = lodash.cloneDeep(this.state.modFilter);\r\n    if (data) {\r\n      modFilter.selectList = this.state.selectList;\r\n      this.setState({ modFilter });\r\n    } else {\r\n      modFilter.selectList = [];\r\n      this.setState({ modFilter });\r\n    }\r\n  };\r\n\r\n  onTimeTakenChange = (data) => {\r\n    let { modFilter } = this.state;\r\n    modFilter.timeTaken = data;\r\n    this.setState({ modFilter });\r\n  };\r\n\r\n  onGraphDurationChange = (data) => {\r\n    let { modFilter } = this.state;\r\n    modFilter.graphDuration = data;\r\n    this.setState({ modFilter });\r\n  };\r\n\r\n  clearRailSelect = () => {\r\n    let selectedOption = lodash.cloneDeep(this.state.selectedOption);\r\n    let railOptions = lodash.cloneDeep(this.state.railOptions);\r\n    selectedOption.forEach((value, index) => {\r\n      selectedOption[index] = \"select\";\r\n      railOptions[index] = [];\r\n    });\r\n    this.setState({ railOptions, selectedOption });\r\n  };\r\n\r\n  handleApply = () => {\r\n    this.timerStop();\r\n    this.clearRailSelect();\r\n    let { buttonGroup, modFilter, modFilteredBayDetails } = this.state;\r\n    let timetaken = 0;\r\n    let viewShipmentStatus = 0;\r\n    let filteredBayDetails = [];\r\n    if (modFilter.timeTaken !== 1) {\r\n      timetaken = modFilter.timeTaken;\r\n    }\r\n    buttonGroup.forEach((button, index) => {\r\n      if (button.type === \"primary\") {\r\n        viewShipmentStatus = index;\r\n      }\r\n    });\r\n    modFilter.selectList.forEach((filteredBay, index) => {\r\n      modFilteredBayDetails.forEach((filteredBayDetail) => {\r\n        if (filteredBay === filteredBayDetail.Code) {\r\n          filteredBayDetails.push(filteredBayDetail);\r\n        }\r\n      });\r\n    });\r\n    if (this.props.transportationType === Constants.TransportationType.MARINE) {\r\n      var marineTimeScaleDuration = this.state.modFilter.graphDuration;\r\n      this.setState(\r\n        {\r\n          timetaken,\r\n          marineTimeScaleDuration,\r\n          viewShipmentStatus,\r\n          isFilterOpen: false,\r\n          filteredBayDetails,\r\n        },\r\n        () => {\r\n          this.getLiveOrdersForBays(filteredBayDetails);\r\n          this.getTransactionAndDeviceStatus(filteredBayDetails);\r\n        }\r\n      );\r\n    } else {\r\n      var timeScaleDuration = this.state.modFilter.graphDuration;\r\n      this.setState(\r\n        {\r\n          timetaken,\r\n          timeScaleDuration,\r\n          viewShipmentStatus,\r\n          isFilterOpen: false,\r\n          filteredBayDetails,\r\n        },\r\n        () => {\r\n          this.getLiveOrdersForBays(filteredBayDetails);\r\n          this.getTransactionAndDeviceStatus(filteredBayDetails);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  openFilter = () => {\r\n    this.setState({ isFilterOpen: true });\r\n  };\r\n\r\n  handleReset() {\r\n    var filteredBays = this.state.modFilteredBayDetails;\r\n    this.toggleButton(0);\r\n    var modFilter =\r\n      this.props.transportationType === Constants.TransportationType.MARINE\r\n        ? lodash.cloneDeep(emptyMarineOperatorDashboardFilterInfo)\r\n        : lodash.cloneDeep(emptyOthersOperatorDashboardFilterInfo);\r\n    modFilter.selectList = this.state.selectList;\r\n\r\n    if (this.props.transportationType === Constants.TransportationType.MARINE) {\r\n      this.setState(\r\n        {\r\n          modFilter,\r\n          timeTaken: modFilter.timeTaken,\r\n          marineTimeScaleDuration: modFilter.graphDuration,\r\n          viewShipmentStatus: 0,\r\n          isFilterOpen: false,\r\n          filteredBayDetails: filteredBays,\r\n        },\r\n        () => {\r\n          this.getLiveOrdersForBays(filteredBays);\r\n          this.getTransactionAndDeviceStatus(filteredBays);\r\n        }\r\n      );\r\n    } else {\r\n      this.setState(\r\n        {\r\n          modFilter,\r\n          timeTaken: modFilter.timeTaken,\r\n          timeScaleDuration: modFilter.graphDuration,\r\n          viewShipmentStatus: 0,\r\n          isFilterOpen: false,\r\n          filteredBayDetails: filteredBays,\r\n        },\r\n        () => {\r\n          this.getLiveOrdersForBays(filteredBays);\r\n          this.getTransactionAndDeviceStatus(filteredBays);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  toggleButton(clickedButtonIndex, buttonData) {\r\n    const buttons = this.state.buttonGroup;\r\n    buttons.forEach((button, index) => {\r\n      if (clickedButtonIndex !== index) {\r\n        buttons[index].type = \"secondary\";\r\n      } else {\r\n        buttons[index].type = \"primary\";\r\n      }\r\n    });\r\n    this.setState({ buttonGroup: buttons });\r\n  }\r\n\r\n  getCurrentShifts(CurrentShift) {\r\n    var todayShifts = [];\r\n    var interDayShift = null;\r\n    const { ShiftsData } = this.state;\r\n    for (var i = 0; i < ShiftsData.length; i++) {\r\n      var shiftInfo = {\r\n        Name: ShiftsData[i].Name,\r\n        StartTime: ShiftsData[i].StartTime,\r\n        EndTime: ShiftsData[i].EndTime,\r\n      };\r\n      shiftInfo.StartTime.setDate(CurrentShift.StartTime.getDate());\r\n      shiftInfo.StartTime.setMonth(CurrentShift.StartTime.getMonth());\r\n      shiftInfo.StartTime.setYear(CurrentShift.StartTime.getFullYear());\r\n      shiftInfo.EndTime.setDate(CurrentShift.StartTime.getDate());\r\n      shiftInfo.EndTime.setMonth(CurrentShift.StartTime.getMonth());\r\n      shiftInfo.EndTime.setYear(CurrentShift.StartTime.getFullYear());\r\n      if (shiftInfo.StartTime > shiftInfo.EndTime) {\r\n        shiftInfo.EndTime.setDate(CurrentShift.StartTime.getDate() + 1);\r\n        interDayShift = shiftInfo;\r\n      }\r\n\r\n      todayShifts.push(shiftInfo);\r\n    }\r\n\r\n    if (ShiftsData.length > 0) {\r\n      var firstShift = {\r\n        Name: ShiftsData[0].Name,\r\n        StartTime: new Date(ShiftsData[0].StartTime),\r\n        EndTime: new Date(ShiftsData[0].EndTime),\r\n      };\r\n      firstShift.EndTime.setDate(firstShift.EndTime.getDate() + 1);\r\n      firstShift.StartTime.setDate(firstShift.StartTime.getDate() + 1);\r\n      todayShifts.push(firstShift);\r\n    }\r\n    if (interDayShift !== null) {\r\n      var interShifPrevObj = {\r\n        Name: interDayShift.Name,\r\n        StartTime: new Date(interDayShift.StartTime),\r\n        EndTime: new Date(interDayShift.EndTime),\r\n      };\r\n      interShifPrevObj.EndTime.setDate(interShifPrevObj.EndTime.getDate() - 1);\r\n      interShifPrevObj.StartTime.setDate(\r\n        interShifPrevObj.StartTime.getDate() - 1\r\n      );\r\n      todayShifts.push(interShifPrevObj);\r\n\r\n      var interShiftNextObj = {\r\n        Name: interDayShift.Name,\r\n        StartTime: new Date(interDayShift.StartTime),\r\n        EndTime: new Date(interDayShift.EndTime),\r\n      };\r\n      interShiftNextObj.EndTime.setDate(\r\n        interShiftNextObj.EndTime.getDate() + 1\r\n      );\r\n      interShiftNextObj.StartTime.setDate(\r\n        interShiftNextObj.StartTime.getDate() + 1\r\n      );\r\n      todayShifts.push(interShiftNextObj);\r\n    }\r\n    return todayShifts;\r\n  }\r\n\r\n  btnGoLiveClick = () => {\r\n    if (!this.state.isLive) {\r\n      document.getElementById(\"spanGoLive\").style.cursor = \"pointer\";\r\n      this.setState({ isLive: true }, () => {\r\n        this.getTransactionAndDeviceStatus(this.state.filteredBayDetails);\r\n      });\r\n    }\r\n    this.clearRailSelect();\r\n  };\r\n\r\n  btnBackwardClick = () => {\r\n    try {\r\n      var CurrentShift = this.state.CurrentShift;\r\n      var { DashboardConfig } = this.state;\r\n      var PurgedTime = new Date();\r\n      PurgedTime.setHours(\r\n        PurgedTime.getHours() - parseInt(DashboardConfig.PurgeInterval)\r\n      );\r\n      var proposedTime = new Date(CurrentShift.StartTime);\r\n      proposedTime.setMinutes(proposedTime.getMinutes() - 30);\r\n      if (PurgedTime < proposedTime) {\r\n        this.setState({ isLive: false });\r\n        document.getElementById(\"btnBackward\").style.cursor = \"pointer\";\r\n        CurrentShift.StartTime.setMinutes(\r\n          CurrentShift.StartTime.getMinutes() - 30\r\n        );\r\n        CurrentShift.EndTime.setMinutes(CurrentShift.EndTime.getMinutes() - 30);\r\n        this.setState({ CurrentShift });\r\n        if (this.shipmentsDataTimer) clearTimeout(this.shipmentsDataTimer);\r\n        this.getTransactionAndDeviceStatus(this.state.filteredBayDetails);\r\n      }\r\n      this.clearRailSelect();\r\n    } catch (error) {\r\n      console.log(\"error in btnBackwardClick\", error);\r\n    }\r\n  };\r\n\r\n  btnForwardClick = () => {\r\n    if (!this.state.isLive) {\r\n      var CurrentShift = this.state.CurrentShift;\r\n      var currentTime = new Date();\r\n      var proposedTime = new Date(CurrentShift.EndTime);\r\n      proposedTime.setMinutes(proposedTime.getMinutes() + 30);\r\n      if (proposedTime < currentTime) {\r\n        this.setState({ isLive: false });\r\n        document.getElementById(\"btnForward\").style.cursor = \"pointer\";\r\n        CurrentShift.StartTime.setMinutes(\r\n          CurrentShift.StartTime.getMinutes() + 30\r\n        );\r\n        CurrentShift.EndTime.setMinutes(CurrentShift.EndTime.getMinutes() + 30);\r\n        this.setState({ CurrentShift });\r\n        if (this.shipmentsDataTimer) clearTimeout(this.shipmentsDataTimer);\r\n        this.getTransactionAndDeviceStatus(this.state.filteredBayDetails);\r\n      }\r\n    }\r\n    this.clearRailSelect();\r\n  };\r\n\r\n  onChangeSelectedOption = (data, value) => {\r\n    let selectedOption = lodash.cloneDeep(this.state.selectedOption);\r\n    selectedOption[value] = data;\r\n    this.setState({ selectedOption });\r\n  };\r\n\r\n  heapClick = (selectedHeap, index) => {\r\n    let railOptions = lodash.cloneDeep(this.state.railOptions);\r\n    railOptions[index] = [];\r\n    for (var i = 0; i < selectedHeap.AuditItems.length; i++) {\r\n      var option = {};\r\n      option.innerHTML = selectedHeap.AuditItems[i].TransactionCode;\r\n      option.value = selectedHeap.AuditItems[i].TransactionCode;\r\n      railOptions[index].push(option);\r\n    }\r\n    this.setState({ railOptions });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderModal()}\r\n        <ErrorBoundary>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <div\r\n                className=\"row\"\r\n                style={{ paddingTop: \"10px\", paddingBottom: \"15px\" }}\r\n              >\r\n                <OperatorDashboardThroughputSummaryComposite\r\n                  transportationType={this.props.transportationType}\r\n                ></OperatorDashboardThroughputSummaryComposite>\r\n                <div className=\"marineDashboardHeader\">\r\n                  {this.props.transportationType ===\r\n                    Constants.TransportationType.MARINE\r\n                    ? t(\"MarineDashboard_LoadingUnloadingOverview\")\r\n                    : this.props.transportationType ===\r\n                      Constants.TransportationType.ROAD\r\n                      ? t(\"TruckDashboard_LoadingUnloadingOverview\")\r\n                      : t(\"RailDashboard_LoadingUnloadingOverview\")}\r\n                </div>\r\n                <div className=\"marineDashboardFilter\">\r\n                  <Button\r\n                    content={t(\"MarineDashboard_FilterOptions\")}\r\n                    onClick={this.openFilter}\r\n                  ></Button>\r\n                  <Modal\r\n                    className=\"dashboardFilterModal\"\r\n                    onClose={() => this.setState({ isFilterOpen: false })}\r\n                    open={this.state.isFilterOpen}\r\n                    closeOnDimmerClick={true}\r\n                    closeOnDocumentClick={true}\r\n                    style={{ width: \"50%\" }}\r\n                    closeIcon={true}\r\n                  >\r\n                    <Modal.Content>\r\n                      <div className=\"berthFilter\">\r\n                        {this.props.transportationType ===\r\n                          Constants.TransportationType.MARINE ? (\r\n                          <span className=\"filterOrderStatus\">\r\n                            {t(\"MarineDispatchManualEntry_Bay\")}\r\n                          </span>\r\n                        ) : this.props.transportationType ===\r\n                          Constants.TransportationType.RAIL ? (\r\n                          <span className=\"filterOrderStatus\">\r\n                            {t(\"OperatorDashboard_Spur\")}\r\n                          </span>\r\n                        ) : (\r\n                          <span className=\"filterOrderStatus\">\r\n                            {t(\"OperatorDashboard_Bay\")}\r\n                          </span>\r\n                        )}\r\n                        <div className=\"berthSelectFilter\">\r\n                          <Select\r\n                            fluid\r\n                            placeholder={t(\"Common_Select\")}\r\n                            options={Utilities.transferListtoOptions(\r\n                              this.state.selectList\r\n                            )}\r\n                            multiple={true}\r\n                            value={this.state.modFilter.selectList}\r\n                            onChange={(data) => this.onSelectChange(data)}\r\n                          />\r\n                        </div>\r\n                        <div className=\"berthCheckboxFilter\">\r\n                          <Checkbox\r\n                            label={t(\"Common_All\")}\r\n                            checked={\r\n                              Array.isArray(this.state.modFilter.selectList) &&\r\n                              this.state.modFilter.selectList.length ===\r\n                              this.state.selectList.length\r\n                            }\r\n                            onChange={(checked) => this.onCheckChange(checked)}\r\n                          ></Checkbox>\r\n                        </div>\r\n                      </div>\r\n                      <Slider\r\n                        label={t(\"OperatorDashboard_TimeTaken\")}\r\n                        value={this.state.modFilter.timeTaken}\r\n                        step={15}\r\n                        max={75}\r\n                        style={{\r\n                          width: \"700px\",\r\n                          marginLeft: \"10px\",\r\n                          marginTop: \"5px\",\r\n                        }}\r\n                        fluid={true}\r\n                        onChange={(data) => this.onTimeTakenChange(data)}\r\n                      />\r\n                      <div style={{ width: \"100%\", display: \"flex\" }}>\r\n                        <div style={{ textAlign: \"end\", width: \"90px\" }}>|</div>\r\n                        <div className=\"timeTakenSliderDescription\">\r\n                          <div className=\"timeTakenDescriptionItem\">|</div>\r\n                          <div className=\"timeTakenDescriptionItem\">|</div>\r\n                          <div className=\"timeTakenDescriptionItem\">|</div>\r\n                          <div className=\"timeTakenDescriptionItem\">|</div>\r\n                          <div className=\"timeTakenDescriptionItem\">|</div>\r\n                        </div>\r\n                      </div>\r\n                      <div style={{ width: \"100%\", display: \"flex\" }}>\r\n                        <div className=\"timeTakenDescriptionText\">\r\n                          {t(\"OperatorDashboard_ViewAll\")}\r\n                        </div>\r\n                        <div style={{ display: \"flex\", width: \"calc(100% - 105px)\" }}>\r\n                          <div className=\"timeTakenDescriptionTextItem\">\r\n                            {t(\"OperatorDashboard_TimeTakenOne\")}\r\n                          </div>\r\n                          <div className=\"timeTakenDescriptionTextItem\">\r\n                            {t(\"OperatorDashboard_TimeTakenTwo\")}\r\n                          </div>\r\n                          <div className=\"timeTakenDescriptionTextItem\">\r\n                            {t(\"OperatorDashboard_TimeTakenThree\")}\r\n                          </div>\r\n                          <div className=\"timeTakenDescriptionTextItem\">\r\n                            {t(\"OperatorDashboard_TimeTakenFour\")}\r\n                          </div>\r\n                          <div className=\"timeTakenDescriptionTextItem\">\r\n                            {t(\"OperatorDashboard_TimeTakenFive\")}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <Divider />\r\n                      <span className=\"row\" style={{ width: \"99%\" }}>\r\n                        <span className=\"filterOrderStatus\">\r\n                          {t(\"OperatorDashboard_TransactionStatus\")}\r\n                        </span>\r\n                        <Button.Group>\r\n                          {this.state.buttonGroup.map((buttonData, index) => {\r\n                            return (\r\n                              <Button\r\n                                key={index}\r\n                                size=\"small\"\r\n                                content={t(buttonData.content)}\r\n                                type={buttonData.type}\r\n                                onClick={() =>\r\n                                  this.toggleButton(index, buttonData)\r\n                                }\r\n                              />\r\n                            );\r\n                          })}\r\n                        </Button.Group>\r\n                      </span>\r\n                      <Divider />\r\n                      {this.props.transportationType ===\r\n                        Constants.TransportationType.MARINE ? (\r\n                        <div>\r\n                          <Slider\r\n                            label={t(\"OperatorDashboard_GraphDuration\")}\r\n                            step={6}\r\n                            min={6}\r\n                            max={24}\r\n                            style={{\r\n                              width: \"700px\",\r\n                              marginLeft: \"10px\",\r\n                              marginTop: \"5px\",\r\n                            }}\r\n                            fluid={true}\r\n                            onChange={(data) =>\r\n                              this.onGraphDurationChange(data)\r\n                            }\r\n                            value={this.state.modFilter.graphDuration}\r\n                          />\r\n\r\n                          <div style={{ width: \"100%\", display: \"flex\" }}>\r\n                            <div className=\"graphDurationDescription\">\r\n                              |\r\n                            </div>\r\n                            <div className=\"marineDurationMarker\">\r\n                              <div className=\"graphDurationDescriptionItem\">\r\n                                |\r\n                              </div>\r\n                              <div className=\"graphDurationDescriptionItem\">\r\n                                |\r\n                              </div>\r\n                              <div className=\"graphDurationDescriptionItem\">\r\n                                |\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div style={{ width: \"100%\", display: \"flex\" }}>\r\n                            <div className=\"graphDurationDescriptionText\">\r\n                              {t(\"OperatorDashboard_GraphDurationOne\")}\r\n                            </div>\r\n                            <div className=\"marineDurationDesc\">\r\n                              <div className=\"graphDurationDescriptionTextItem\">\r\n                                {t(\"OperatorDashboard_GraphDurationTwo\")}\r\n                              </div>\r\n                              <div className=\"graphDurationDescriptionTextItem\">\r\n                                {t(\"OperatorDashboard_GraphDurationThree\")}\r\n                              </div>\r\n                              <div className=\"graphDurationDescriptionTextItem\">\r\n                                {t(\"OperatorDashboard_GraphDurationFour\")}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <div>\r\n                          <Slider\r\n                            label={t(\"OperatorDashboard_GraphDuration\")}\r\n                            step={1}\r\n                            min={2}\r\n                            max={4}\r\n                            style={{\r\n                              width: \"700px\",\r\n                              marginLeft: \"10px\",\r\n                              marginTop: \"5px\",\r\n                            }}\r\n                            fluid={true}\r\n                            onChange={(data) =>\r\n                              this.onGraphDurationChange(data)\r\n                            }\r\n                            value={this.state.modFilter.graphDuration}\r\n                          />\r\n                          <div style={{ width: \"100%\", display: \"flex\" }}>\r\n                            <div className=\"roadGraphDurationDescription\">\r\n                              |\r\n                            </div>\r\n                            <div className=\"roadGraphMarkerDesc\">\r\n                              <div className=\"roadGraphDurationDescriptionItem\">\r\n                                |\r\n                              </div>\r\n                              <div className=\"roadGraphDurationDescriptionLastItem\">\r\n                                |\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div style={{ width: \"100%\", display: \"flex\" }}>\r\n                            <div className=\"roadGraphDurationDescriptionText\">\r\n                              {t(\"OperatorDashboard_OthersGraphDurationOne\")}\r\n                            </div>\r\n                            <div className=\"roadGraphDurationDesc\">\r\n                              <div className=\"roadGraphDurationDescriptionTextItem\">\r\n                                {t(\"OperatorDashboard_OthersGraphDurationTwo\")}\r\n                              </div>\r\n                              <div className=\"roadGraphDurationDescriptionTextItem\">\r\n                                {t(\"OperatorDashboard_OthersGraphDurationThree\")}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      <Divider />\r\n                    </Modal.Content>\r\n                    <Modal.Footer>\r\n                      <div\r\n                        className=\"filterButton\"\r\n                        style={{ textAlign: \"right\" }}\r\n                      >\r\n                        <Button\r\n                          content={t(\"LookUpData_btnReset\")}\r\n                          className=\"cancelButton\"\r\n                          size=\"small\"\r\n                          onClick={() => this.handleReset()}\r\n                        ></Button>\r\n                        <Button\r\n                          content={t(\"RoleAdminEdit_Apply\")}\r\n                          size=\"small\"\r\n                          onClick={() => this.handleApply()}\r\n                        ></Button>\r\n                      </div>\r\n                    </Modal.Footer>\r\n                  </Modal>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </TranslationConsumer>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <OperatorDashboardOverviewDetails\r\n            handleOpen={this.handleOpen}\r\n            openBoolean={this.state.isPopupOpen}\r\n            hdnFGPrintBOL={this.state.hdnFGPrintBOL}\r\n            hdnFGPrintBOD={this.state.hdnFGPrintBOD}\r\n            hdnFGShipClose={this.state.hdnFGShipClose}\r\n            hdnFGRecClose={this.state.hdnFGRecClose}\r\n            orderDetails={this.state.marineOrderDetails}\r\n            orderProductDetails={this.state.marineOrderProductDetails}\r\n            orderloadedPartCommpartmentList={\r\n              this.state.marineOrderloadedPartCommpartmentList\r\n            }\r\n            orderloadedOtherCommpartmentList={\r\n              this.state.marineOrderloadedOtherCommpartmentList\r\n            }\r\n            getOrderDetails={this.getMarineOrderDetails}\r\n            getRailLiveOrderDetails={this.getRailLiveOrderDetails}\r\n            getRailOrderDetails={this.getRailOrderDetails}\r\n            isLive={this.state.isLive}\r\n            print={this.print}\r\n            forceClose={this.forceClose}\r\n            btnGoLiveClick={this.btnGoLiveClick}\r\n            btnBackwardClick={this.btnBackwardClick}\r\n            btnForwardClick={this.btnForwardClick}\r\n            getQueuedTransaction={this.getQueuedTransaction}\r\n            transportationType={this.props.transportationType}\r\n            filteredBayDetails={this.state.filteredBayDetails}\r\n            ShiftsData={this.state.ShiftsData}\r\n            CurrentShift={this.state.CurrentShift}\r\n            DashboardConfig={this.state.DashboardConfig}\r\n            transactionAndDeviceStatus={this.state.transactionAndDeviceStatus}\r\n            QueueDetails={this.state.QueueDetails}\r\n            viewShipmentStatus={this.state.viewShipmentStatus}\r\n            timetaken={this.state.timetaken}\r\n            objOrderDetails={this.state.objOrderDetails}\r\n            selectedOption={this.state.selectedOption}\r\n            onChangeSelectedOption={this.onChangeSelectedOption}\r\n            heapClick={this.heapClick}\r\n            railOptions={this.state.railOptions}\r\n          ></OperatorDashboardOverviewDetails>\r\n        </ErrorBoundary>\r\n\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(OperatorDashboardDetailsComposite);\r\n\r\nOperatorDashboardDetailsComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n  transportationType: PropTypes.string,\r\n};\r\n"],"names":["wjcCore","Constants","OperatorDashboardThroughputSummaryComposite","Component","constructor","arguments","state","drawerClassName","tankInventory","dispatchProductsThroughput","dispatchPalette","receiptProductsThroughput","receiptPalette","isDisplayDrawer","this","setState","getDispatchProductsThroughput","keyCode","key","value","Date","KeyCodes","props","transportationType","obj","ShareHolderCode","userDetails","EntityResult","PrimaryShareholder","keyDataCode","axios","RestApis","Utilities","tokenDetails","tokenInfo","then","response","result","data","IsSuccess","list","ProductThroughputItems","forEach","item","name","ProductCode","volQty","VolQty","volumeUOM","VolumeUOM","massQty","MassQty","massUOM","MassUOM","color","Color","push","console","log","ErrorList","catch","error","getReceiptProductsThroughput","getTankInventory","componentDidMount","render","_jsx","children","TranslationConsumer","t","_jsxs","className","onClick","Icon","size","ErrorBoundary","style","marginTop","fontWeight","Divider","fitted","Tab","Pane","title","paddingLeft","wjChart","header","height","bindingName","binding","innerRadius","itemsSource","palette","plotMargin","position","offset","content","ht","wijmo","val","toLocaleString","List","horizontal","Content","map","TankCode","GrossVolume","connect","getUserDetails","TokenAuth","OperatorDashboardOverviewDetails","_ref","getRailLiveOrderDetails","getRailOrderDetails","handleOpen","openBoolean","hdnFGPrintBOL","hdnFGPrintBOD","hdnFGShipClose","hdnFGRecClose","orderDetails","orderProductDetails","orderloadedPartCommpartmentList","orderloadedOtherCommpartmentList","getOrderDetails","print","forceClose","filteredBayDetails","btnGoLiveClick","btnForwardClick","btnBackwardClick","ShiftsData","CurrentShift","DashboardConfig","transactionAndDeviceStatus","getQueuedTransaction","objOrderDetails","QueueDetails","selectedOption","onChangeSelectedOption","railOptions","heapClick","timetaken","viewShipmentStatus","useTranslation","isDeviceStatusHover","useState","timeGraphHTML","timeGraphHtml","minsdiff","Math","floor","EndTime","StartTime","GraphPercentage","graphDuration","requiredGraphPoints","StartGraphTime","startwidth","i","getMinutes","borderRight","width","baysInfoSuccess","undefined","length","resultshtml","j","loadingType","LoadingType","baysComposition","marineDashboardDiv11Width","ROAD","id","shiftLines","filteredBayDetail","cellSpacing","cellPadding","RAIL","onChange","e","target","railOption","innerHTML","getShipmentHTML","getRailShipmentHTML","getTransactionHTML","rowspan","getQueueHTML","getDeviceHTMLNew","Code","TodayShifts","getCurrentShifts","shift","gap","left","right","shiftNames","shiftName","Name","concat","todayShifts","interDayShift","shiftInfo","setDate","getDate","setMonth","getMonth","setYear","getFullYear","firstShift","interShifPrevObj","interShiftNextObj","float","timeGraphHtmlComposition","margineLeft","time","longWidth","parseInt","setMinutes","textIndent","getHours","slice","align","getCompartmentsHTML","compartmentsHTML","getCompartmentsHTMLComposition","MARINE","NoOfMarineCompartments","NoOfCompartments","k","CompartmentInfoList","compartment","percentage","LoadedQty","PlannedQty","IsShipment","isDispatch","compOuterStyle","gradientCOlor","Product","Status","cursor","backgroundColor","backgroundImage","backgroundSize","borderTop","borderBootom","Popup","padding","element","bottom","hoverable","on","CompartmentHoverDetails","Customer","SFL","UOM","Driver","Vehicle","objShipment","shipmentHtml","QueueCount","divHeight","IsOdd","shipmentHtmlComposeQueueCount1","shipmentHtmlComposeQueueCount2","display","BayCode","drawQueuedTransactions","root","hoverHtml","hoverHtmlCompose","marginBottom","TransactionCode","vehicle","font","fontSize","code","customer","PlanQty","CurrentQty","parentid","leakageObjects","TransactionAuditList","shipment","shipmentStartTime","shipmentEndTime","ShipmentGraphPercentage","shipDevID","TransactionType","TotalTime","IsCompleted","EndIndicator","HasAlarmOccured","radiusstyle","StartIndicator","borderTopLeftRadius","borderBottomLeftRadius","borderLeftColor","borderLeftWidth","borderLeftStyle","shipBackColor","shipClass","shipstyle","zIndex","borderBottom","shipmentHtmlCompose","open","onMouseEnter","onMouseLeave","paddingBottom","AlarmCount","direction","paddingTop","prodColor","marginLeft","textAlign","LoadingPage","message","loadingClass","addLekageIntoConsolidatedList","StartTotalizer","EndTotalizer","Quantity","shipmentHtmlCompose1","Gap","showConsolidateLeakageHover","leakInfo","startTotalizer","endTotalizer","isFound","leakObject","consolidateLeakageHover","leakageList","split","leak","leakageQuantity","parseFloat","leakageQuantityUnit","substr","toString","marginRight","HeapList","GetHeapList","Heap","AuditItems","HeapDevId","shipStyle","railTransactionType","arr","BCUPoint","TransactionAuditItem","foundItem","transactionStartTime","transactionEndTime","itemStartTime","itemEndTime","objs","TransactionHTMLCompose","AddConsolidatedDeviceList","ConsolidatedDeviceList","DeviceItem","deviceItemStartTime","deviceItemEndTime","DeviceInfo","DeviceCode","deviceHtml","DeviceHealthAuditList","device","DeviceStartTime","DeviceEndTime","DeviceGraphPercentage","endCircleClass","circleRedStyle","deviceStatusHover","deviceDetails","hoverHTML","deviceList","deviceInfo","hoverHTMLCompose","verticalAlign","defaultProps","OperatorDashboardDetailsComposite","isPopupOpen","openReceipt","reason","transactionCode","transactionType","validationErrors","marineReceiptValidationDef","marineReceiptBtnCloseOK","marineOrderDetails","marineOrderProductDetails","marineOrderloadedPartCommpartmentList","marineOrderloadedOtherCommpartmentList","timeScaleDuration","marineTimeScaleDuration","modFilter","isFilterOpen","selectList","webServiceName","modFilteredBayDetails","BayDetails","buttonGroup","type","TimeDuration","VolUOM","RefreshRate","RefreshRateOfCompartments","PurgeInterval","isLive","queueHoverHtml","getTransactionAndDeviceStatus","setHours","baycode","Entity","BayCodes","TransportationType","shipmentsDataTimer","setTimeout","wagonCode","CompBlocks","addProductDetailsObject","getMarineOrderDetails","totalTime","toUpperCase","webAPI","FunctionsList","functionGroups","modify","fnPrintMarineBOL","fnPrintBOL","fnPrintMarineBOD","fnPrintBOD","fnCloseMarineShipment","fnCloseShipment","fnCloseMarineReceipt","fnCloseReceipt","notification","messageType","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","toast","NotifyEvent","notificationMessage","autoClose","boolean","bayCode","getAlarmList","orderCode","timerStop","clearTimeout","liveCompartmentsTimer","onSelectChange","selectlist","findIndex","el","onCheckChange","lodash","onTimeTakenChange","timeTaken","onGraphDurationChange","clearRailSelect","index","handleApply","button","filteredBay","getLiveOrdersForBays","openFilter","document","getElementById","PurgedTime","proposedTime","currentTime","selectedHeap","option","GetCurrentShift","getShifts","parse","getBayDetails","emptyMarineOperatorDashboardFilterInfo","emptyOthersOperatorDashboardFilterInfo","Array","isArray","bayDetail","getTransactionAudit","getDeviceStatus","getSpurDetails","productDetails","objProductInfo","forceCloseOK","Reason","onFieldChange","renderModal","Modal","onClose","closeOnDimmerClick","Input","fluid","indicator","label","Footer","Button","disabled","propertyName","componentWillMount","componentWillUnmount","handleReset","filteredBays","toggleButton","clickedButtonIndex","buttonData","buttons","closeOnDocumentClick","closeIcon","Select","placeholder","options","multiple","Checkbox","checked","Slider","step","max","Group","min","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName"],"sourceRoot":""}