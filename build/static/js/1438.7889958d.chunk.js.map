{"version":3,"file":"static/js/1438.7889958d.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Details/TankManualEntryDetails.jsx","Components/Composite/Details/TankManualEntryDetailsComposite.jsx","Components/Composite/Entity/TankManualEntryComposite.jsx","JS/FunctionGroups.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { DataTable } from '@scuf/datatable';\r\nimport { Input, Select, DatePicker, Icon } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getOptionsWithSelect,\r\n  getCurrentDateFormat,\r\n} from \"../../../JS/functionalUtilities\";\r\n\r\nTankManualEntryDetails.propTypes = {\r\n  entryDate: PropTypes.object.isRequired,\r\n  modAssociations: PropTypes.array.isRequired,\r\n  selectedAssociations: PropTypes.array.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    tankCode: PropTypes.array,\r\n    baseProductCode: PropTypes.array,\r\n    quantityUOM: PropTypes.array,\r\n    densityQuantityUOM: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onTankSearchChange: PropTypes.func.isRequired,\r\n  handleAddAssociation: PropTypes.func.isRequired,\r\n  handleDeleteAssociation: PropTypes.func.isRequired,\r\n  handleAssociationSelectionChange: PropTypes.func.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired\r\n}\r\nTankManualEntryDetails.defaultProps = { isEnterpriseNode: false };\r\n\r\nexport function TankManualEntryDetails({\r\n  entryDate,\r\n  modAssociations,\r\n  selectedAssociations,\r\n  listOptions,\r\n  onFieldChange,\r\n  onTankSearchChange,\r\n  handleAddAssociation,\r\n  handleDeleteAssociation,\r\n  handleAssociationSelectionChange,\r\n  handleCellDataEdit,\r\n  isEnterpriseNode,\r\n}) {\r\n\r\n  const [t] = useTranslation();\r\n\r\n  const handleCustomEditDropDown = (cellData, dropDownOptions) => {\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownOptions}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleTankEditDropDown = (cellData) => {\r\n    return (\r\n      <Select\r\n        fluid\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        options={getOptionsWithSelect(\r\n          listOptions.tankCode,\r\n          t(\"Common_Select\")\r\n        )}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        search={true}\r\n        reserveSpace={false}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n        onSearch={onTankSearchChange}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleCustomEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  const decimalDisplayValues = (cellData) => {\r\n    const { value } = cellData;\r\n    if (typeof value === \"number\") {\r\n      return value.toLocaleString();\r\n    } else {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div style={{ padding: \"0 15px 15px 15px\" }}>\r\n              <DatePicker\r\n                fluid\r\n                value={entryDate === null ? \"\" : new Date(entryDate)}\r\n                label={t(\"TankEODEntry_EODEntryDate\")}\r\n                type=\"date\"\r\n                displayFormat={getCurrentDateFormat()}\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"EntryTime\", data)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row compartmentRow\">\r\n            <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n              <h4>{t(\"TankEODEntry_PageTitle\")}</h4>\r\n            </div>\r\n            <div className=\"col col-md-4 col-lg-3 col-xl-3\">\r\n              <div className=\"compartmentIconContainer\">\r\n                <div onClick={handleAddAssociation} className=\"compartmentIcon\">\r\n                  <div>\r\n                    <Icon root=\"common\" name=\"badge-plus\" size=\"medium\" />\r\n                  </div>\r\n                  <div className=\"margin_l10\">\r\n                    <h5 className=\"font14\">{t(\"FinishedProductInfo_Add\")}</h5>\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  onClick={handleDeleteAssociation}\r\n                  className=\"compartmentIcon margin_l30\"\r\n                >\r\n                  <div>\r\n                    <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n                  </div>\r\n                  <div className=\"margin_l10\">\r\n                    <h5 className=\"font14\">{t(\"DestAdd_Delete\")}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-12 detailsTable\">\r\n              <DataTable\r\n                data={modAssociations}\r\n                selectionMode=\"multiple\"\r\n                selection={selectedAssociations}\r\n                onSelectionChange={handleAssociationSelectionChange}\r\n              >\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"TankCode\"\r\n                  field=\"TankCode\"\r\n                  header={t(\"TankEODEntry_TankCode\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) => handleTankEditDropDown(cellData)}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"BaseProductCode\"\r\n                  field=\"BaseProductCode\"\r\n                  header={t(\"TankEODEntry_Product\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditDropDown(\r\n                      cellData,\r\n                      listOptions.baseProductCode\r\n                    )\r\n                  }\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"EOPGrossVolume\"\r\n                  field=\"EOPGrossVolume\"\r\n                  header={t(\"TankEODEntry_GrossQty\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                  customEditRenderer={handleCustomEditTextBox}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"EOPNetVolume\"\r\n                  field=\"EOPNetVolume\"\r\n                  header={t(\"TankEODEntry_NetQty\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                  customEditRenderer={handleCustomEditTextBox}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"QuantityUOM\"\r\n                  field=\"QuantityUOM\"\r\n                  header={t(\"TankUnaccountedTransaction_QuantityUOM\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditDropDown(\r\n                      cellData,\r\n                      listOptions.quantityUOM\r\n                    )\r\n                  }\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"EOPMassVolume\"\r\n                  field=\"EOPMassVolume\"\r\n                  header={t(\"TankEODEntry_MassVolume\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                  customEditRenderer={handleCustomEditTextBox}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"MassQuantityUOM\"\r\n                  field=\"MassQuantityUOM\"\r\n                  header={t(\"TankEODEntry_MassQuantityUOM\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditDropDown(\r\n                      cellData,\r\n                      listOptions.densityQuantityUOM\r\n                    )\r\n                  }\r\n                ></DataTable.Column>\r\n              </DataTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TankManualEntryDetails } from \"../../UIBase/Details/TankManualEntryDetails\";\r\n\r\nimport lodash from \"lodash\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { tankManualEntryDetailsDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport { functionGroups, fnTankEODEntry } from \"../../../JS/FunctionGroups\";\r\nimport axios from \"axios\";\r\nimport ErrorBoundary from \"./../../../Components/ErrorBoundary\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button } from \"@scuf/common\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass TankManualEntryDetailsComposite extends Component {\r\n  state = {\r\n    entryDate: new Date(),\r\n    isReadyToRender: false,\r\n    associations: [],\r\n    modAssociations: [],\r\n    selectedAssociations: [],\r\n    tankCodeOptions: [],\r\n    tankCodeSearchOptions: [],\r\n    baseProductCodeOptions: [],\r\n    quantityUOMOptions: [],\r\n    massQuantityUOMOptions: [],\r\n    saveEnabled: false,\r\n    showAuthenticationLayout: false,\r\n    tempAssociations: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getTankCodes(this.props.userDetails.EntityResult.PrimaryShareholder);\r\n      this.getBaseProductCodes();\r\n      this.getUOMs();\r\n      this.getTankManualEntryData(this.state.entryDate);\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankManualEntryDetailsComposite: Error occurred on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps() {\r\n    try {\r\n      this.getTankManualEntryData(this.state.entryDate);\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankManualEntryDetailsComposite: Error occurred on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getTankCodes(shareholder) {\r\n    axios(\r\n      RestAPIs.GetTanks + \"?ShareholderCode=\" + shareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            const tankCodeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            let tankCodeSearchOptions = lodash.cloneDeep(tankCodeOptions);\r\n            if (tankCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n              tankCodeSearchOptions = tankCodeSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({\r\n              tankCodeOptions,\r\n              tankCodeSearchOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getTankCode:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getTankCode:\", error);\r\n      });\r\n  }\r\n\r\n  getBaseProductCodes() {\r\n    axios(\r\n      RestAPIs.GetBaseProducts,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult !== undefined\r\n          ) {\r\n            const productList = [];\r\n            for (let key in result.EntityResult) {\r\n              for (let productCode of result.EntityResult[key]) {\r\n                productList.push(productCode);\r\n              }\r\n            }\r\n            this.setState({\r\n              baseProductCodeOptions: Utilities.transferListtoOptions(\r\n                productList\r\n              ),\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getBaseProductList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Base Product List:\", error);\r\n      });\r\n  }\r\n\r\n  getUOMs() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult.VOLUME)\r\n          ) {\r\n            const quantityUOMOptions = [];\r\n            const massQuantityUOMOptions = [];\r\n            result.EntityResult.VOLUME.forEach((UOM) => {\r\n              quantityUOMOptions.push({\r\n                text: UOM,\r\n                value: UOM,\r\n              });\r\n            });\r\n            result.EntityResult.MASS.forEach((UOM) => {\r\n              quantityUOMOptions.push({\r\n                text: UOM,\r\n                value: UOM,\r\n              });\r\n              massQuantityUOMOptions.push({\r\n                text: UOM,\r\n                value: UOM,\r\n              });\r\n            });\r\n            this.setState({ quantityUOMOptions, massQuantityUOMOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in GetUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getTankManualEntryData(entryDate) {\r\n    axios(\r\n      RestAPIs.GetTankEODData + \"?EntryDate=\" + entryDate.toISOString(),\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          const associations =\r\n            result.EntityResult === null ? [] : result.EntityResult;\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            associations: associations,\r\n            modAssociations: lodash.cloneDeep(associations),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnTankEODEntry\r\n            ),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            associations: [],\r\n            modAssociations: [],\r\n            saveEnabled: false,\r\n          });\r\n          console.log(\"Error in getTankManualEntryData:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting TankManualEntryData:\", error);\r\n      });\r\n  }\r\n\r\n  handleAssociationSelectionChange = (e) => {\r\n    this.setState({ selectedAssociations: e });\r\n  };\r\n\r\n  handleAddAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        const modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n        const newComp = {\r\n          BaseProductCode: \"\",\r\n          BOPGrossVolume: \"\",\r\n          BOPMassVolume: \"\",\r\n          BOPNetVolume: \"\",\r\n          EOPGrossVolume: \"\",\r\n          EOPMassVolume: \"\",\r\n          EOPNetVolume: \"\",\r\n          MassQuantityUOM: \"\",\r\n          QuantityUOM: \"\",\r\n          ReconciliationCode: \"\",\r\n          TransactionTotalGrossQty: \"\",\r\n          TransactionTotalNetQty: \"\",\r\n          TankCode: \"\",\r\n        };\r\n        newComp.SeqNumber = Utilities.getMaxSeqNumberfromListObject(\r\n          this.state.modAssociations\r\n        );\r\n        modAssociations.push(newComp);\r\n        this.setState({\r\n          modAssociations,\r\n          selectedAssociations: [],\r\n        });\r\n      } catch (error) {\r\n        console.log(\r\n          \"TankManualEntryDetailsComposite: Error occurred on handleAddAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDeleteAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedAssociations != null &&\r\n          this.state.selectedAssociations.length > 0\r\n        ) {\r\n          if (this.state.modAssociations.length > 0) {\r\n            let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n\r\n            this.state.selectedAssociations.forEach((obj, index) => {\r\n              modAssociations = modAssociations.filter((com, cindex) => {\r\n                return com.SeqNumber !== obj.SeqNumber;\r\n              });\r\n            });\r\n\r\n            this.setState({ modAssociations });\r\n          }\r\n        }\r\n\r\n        this.setState({ selectedAssociations: [] });\r\n      } catch (error) {\r\n        console.log(\r\n          \"TankManualEntryDetailsComposite: Error occurred on handleDeleteAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      this.getTankManualEntryData(data);\r\n      this.setState({ entryDate: data });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankManualEntryDetailsComposite: Error occurred on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n    modAssociations[cellData.rowIndex][cellData.field] = newVal;\r\n    this.setState({ modAssociations });\r\n  };\r\n\r\n  handleTankSearchChange = (tankCode) => {\r\n    try {\r\n      let tankCodeSearchOptions = this.state.tankCodeOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(tankCode.toLowerCase())\r\n      );\r\n\r\n      if (tankCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n        tankCodeSearchOptions = tankCodeSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        tankCodeSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankManualEntryDetailsComposite: Error occurred on handleTankSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getTankCodeSearchOptions() {\r\n    let tankCodeSearchOptions = lodash.cloneDeep(\r\n      this.state.tankCodeSearchOptions\r\n    );\r\n    // let modTankCode = this.state.modLeakageManualEntry.TankCode;\r\n    // if (\r\n    //   modTankCode !== null &&\r\n    //   modTankCode !== \"\" &&\r\n    //   modTankCode !== undefined\r\n    // ) {\r\n    //   let selectedTankCode = tankCodeSearchOptions.find(\r\n    //     (element) => element.value.toLowerCase() === modTankCode.toLowerCase()\r\n    //   );\r\n    //   if (selectedTankCode === undefined) {\r\n    //     tankCodeSearchOptions.push({\r\n    //       text: modTankCode,\r\n    //       value: modTankCode,\r\n    //     });\r\n    //   }\r\n    // }\r\n    return tankCodeSearchOptions;\r\n  }\r\n\r\n  handleTankManualEntry = () => {\r\n    this.setState({ saveEnabled: false });\r\n    this.handleAuthenticationClose();\r\n    let tempAssociations = lodash.cloneDeep(this.state.tempAssociations);\r\n    for (let item of tempAssociations) {\r\n      item.EOPGrossVolume = Utilities.convertStringtoDecimal(item.EOPGrossVolume);\r\n      item.EOPNetVolume = Utilities.convertStringtoDecimal(item.EOPNetVolume);\r\n      item.EOPMassVolume = Utilities.convertStringtoDecimal(item.EOPMassVolume);\r\n      item.MassQuantityUOM = Utilities.convertStringtoDecimal(item.MassQuantityUOM);\r\n    }\r\n    const isAdd = this.state.associations.length === 0;\r\n    this.updateTankEODData(isAdd, tempAssociations);\r\n  };\r\n\r\n\r\n  handleSave = () => {\r\n    try {\r\n    \r\n      const modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n      if (this.validateSave(modAssociations)) {\r\n\r\n        let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempAssociations = lodash.cloneDeep(modAssociations);\r\n      this.setState({ showAuthenticationLayout, tempAssociations }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.handleTankManualEntry();\r\n        }\r\n    });\r\n\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankManualEntryDetailsComposite: Error occurred on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateSave(modAssociations) {\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"TankEODEntry_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    if (Array.isArray(modAssociations) && modAssociations.length > 0) {\r\n      modAssociations.forEach((compart) => {\r\n        tankManualEntryDetailsDef.forEach((col) => {\r\n          let err = \"\";\r\n\r\n          if (col.validator !== undefined) {\r\n            err = Utilities.validateField(col.validator, compart[col.field]);\r\n          }\r\n          if (err !== \"\") {\r\n            notification.messageResultDetails.push({\r\n              keyFields: [col.displayName],\r\n              keyValues: [compart[col.field]],\r\n              isSuccess: false,\r\n              errorMessage: err,\r\n            });\r\n          }\r\n        });\r\n        if (\r\n          (compart.EOPMassVolume === \"\" && compart.MassQuantityUOM !== \"\") ||\r\n          (compart.MassQuantityUOM === \"\" && compart.EOPMassVolume !== \"\")\r\n        ) {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [],\r\n            keyValues: [],\r\n            isSuccess: false,\r\n            errorMessage: \"MassQtyMassUOM_ProvidedTogether\",\r\n          });\r\n        } else if (compart.EOPMassVolume < 0) {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [],\r\n            keyValues: [],\r\n            isSuccess: false,\r\n            errorMessage: \"TankManualEntry_MassQtyNonNegative\",\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [],\r\n        keyValues: [],\r\n        isSuccess: false,\r\n        errorMessage: \"ERRMSG_RECONCILIATIONTANKDATALIST_EMPTY\",\r\n      });\r\n    }\r\n\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modRailReceipt, \"update\", notification);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  updateTankEODData(isAdd, modAssociations) {\r\n    const keyCode = [\r\n      {\r\n        key: \"EntryDate\",\r\n        value: this.state.entryDate,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      KeyCodes: keyCode,\r\n      Entity: modAssociations,\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"TankEODEntry_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"TankEODEntry_EODEntryDate\"],\r\n          keyValues: [this.state.entryDate.toLocaleDateString()],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      isAdd ? RestAPIs.CreateTankManualEntry : RestAPIs.UpdateTankManualEntry,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getTankManualEntryData(this.state.entryDate);\r\n        } else {\r\n          this.setState({\r\n            saveEnabled: true,\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in updateTankEODData:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(this.state.modAssociations, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modAssociations, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: true,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      this.setState({\r\n        entryDate: new Date(),\r\n        modAssociations: [],\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankManualEntryDetailsComposite: Error occurred on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TankManualEntryDetails\r\n            entryDate={this.state.entryDate}\r\n            modAssociations={this.state.modAssociations}\r\n            selectedAssociations={this.state.selectedAssociations}\r\n            listOptions={{\r\n              tankCode: this.getTankCodeSearchOptions(),\r\n              baseProductCode: this.state.baseProductCodeOptions,\r\n              quantityUOM: this.state.quantityUOMOptions,\r\n              densityQuantityUOM: this.state.massQuantityUOMOptions,\r\n            }}\r\n            onFieldChange={this.handleChange}\r\n            onTankSearchChange={this.handleTankSearchChange}\r\n            handleAddAssociation={this.handleAddAssociation}\r\n            handleDeleteAssociation={this.handleDeleteAssociation}\r\n            handleAssociationSelectionChange={\r\n              this.handleAssociationSelectionChange\r\n            }\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n          />\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <div className=\"row\">\r\n                <div className=\"col\" style={{ textAlign: \"right\" }}>\r\n                  <Button\r\n                    content={t(\"LookUpData_btnReset\")}\r\n                    className=\"cancelButton\"\r\n                    onClick={this.handleReset}\r\n                  ></Button>\r\n                  <Button\r\n                    content={t(\"Save\")}\r\n                    disabled={!this.state.saveEnabled}\r\n                    onClick={this.handleSave}\r\n                  ></Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </TranslationConsumer>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.add}\r\n            functionGroup={fnTankEODEntry}\r\n            handleOperation={this.handleTankManualEntry}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\nconst mapRouteToProps = (route) => {\r\n  return {\r\n    userAction: bindActionCreators(getUserDetails, route),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapRouteToProps\r\n)(TankManualEntryDetailsComposite);\r\n","import React, { Component } from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport TankManualEntryDetailsComposite from \"../Details/TankManualEntryDetailsComposite\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport ErrorBoundary from \"./../../../Components/ErrorBoundary\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport lodash from \"lodash\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\n\r\nclass TankManualEntryComposite extends Component {\r\n  state = {\r\n    isReadyToRender: false,\r\n    operationsVisibility: { add: false, delete: false, shareholder: false },\r\n    selectedShareholder: \"\",\r\n    refreshFlag: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.setState({\r\n        isReadyToRender: true,\r\n        selectedShareholder:\r\n          this.props.userDetails.EntityResult.PrimaryShareholder,\r\n        refreshFlag: {},\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankManualEntry: Error occurred on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      const operationsVisibility = lodash.cloneDeep(\r\n        this.state.operationsVisibility\r\n      );\r\n      if (notification.messageType === \"success\") {\r\n        // operationsVisibility.add = true;\r\n        // operationsVisibility.delete = true;\r\n        this.setState({ operationsVisibility });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"TankManualEntry: Error occurred on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      const operationsVisibility = lodash.cloneDeep(\r\n        this.state.operationsVisibility\r\n      );\r\n      operationsVisibility.add = false;\r\n      this.setState({ operationsVisibility, refreshFlag: {} });\r\n    } catch (error) {\r\n      console.log(\"TankManualEntry: Error occurred on handleAdd\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibility}\r\n            breadcrumbItem={this.props.activeItem}\r\n            onAdd={this.handleAdd}\r\n            shrVisible={false}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n          />\r\n        </ErrorBoundary>\r\n        {this.state.isReadyToRender ? (\r\n          <TankManualEntryDetailsComposite\r\n            key=\"TankManualEntryDetails\"\r\n            onSaved={this.savedEvent}\r\n            onRefresh={this.state.refreshFlag}\r\n            selectedShareholder={this.state.selectedShareholder}\r\n          />\r\n        ) : (\r\n          <LoadingPage message=\"Loading\"></LoadingPage>\r\n        )}\r\n\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TankManualEntryComposite);\r\n\r\nTankManualEntryComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","TankManualEntryDetails","entryDate","modAssociations","selectedAssociations","listOptions","onTankSearchChange","handleAddAssociation","handleDeleteAssociation","handleAssociationSelectionChange","handleCellDataEdit","isEnterpriseNode","useTranslation","handleCustomEditDropDown","cellData","dropDownOptions","rowIndex","field","search","noResultsMessage","handleTankEditDropDown","getOptionsWithSelect","tankCode","onSearch","handleCustomEditTextBox","decimalDisplayValues","toLocaleString","DatePicker","Date","displayFormat","getCurrentDateFormat","DataTable","selectionMode","selection","onSelectionChange","Column","header","editable","editFieldType","customEditRenderer","baseProductCode","renderer","quantityUOM","densityQuantityUOM","TankManualEntryDetailsComposite","isReadyToRender","associations","tankCodeOptions","tankCodeSearchOptions","baseProductCodeOptions","quantityUOMOptions","massQuantityUOMOptions","saveEnabled","showAuthenticationLayout","tempAssociations","e","IsArchived","newComp","BaseProductCode","BOPGrossVolume","BOPMassVolume","BOPNetVolume","EOPGrossVolume","EOPMassVolume","EOPNetVolume","MassQuantityUOM","QuantityUOM","ReconciliationCode","TransactionTotalGrossQty","TransactionTotalNetQty","TankCode","SeqNumber","push","forEach","obj","index","filter","com","cindex","handleChange","getTankManualEntryData","newVal","handleTankSearchChange","includes","Constants","slice","handleTankManualEntry","handleAuthenticationClose","isAdd","updateTankEODData","handleSave","validateSave","IsWebPortalUser","handleReset","getTankCodes","PrimaryShareholder","getBaseProductCodes","getUOMs","componentWillReceiveProps","Array","isArray","productList","productCode","VOLUME","UOM","text","MASS","toISOString","FunctionsList","functionGroups","modify","fnTankEODEntry","getTankCodeSearchOptions","notification","messageType","message","messageResultDetails","compart","tankManualEntryDetailsDef","col","err","validator","keyFields","displayName","keyValues","isSuccess","errorMessage","onSaved","modRailReceipt","keyCode","ShareHolderCode","KeyCodes","Entity","toLocaleDateString","IsEnterpriseNode","UserName","LoadingPage","route","userAction","bindActionCreators","TankManualEntryComposite","operationsVisibility","refreshFlag","savedEvent","saveType","toast","NotifyEvent","notificationMessage","autoClose","handleAdd","activeItem","onRefresh","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","view","remove","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","ddlOptions","selectOptionText","option","unshift","language","window","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}