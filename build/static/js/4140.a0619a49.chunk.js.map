{"version":3,"file":"static/js/4140.a0619a49.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Common/WijmoGrid.jsx","Components/Composite/Common/WijmoGridComposite.jsx","Components/Composite/Summary/TankShareholderAssociationSummaryComposite.jsx","Components/UIBase/Details/TankShareholderAssociationViewAuditTrailDetails.jsx","Components/Composite/Entity/TankShareholderAssociationComposite.jsx","Components/UIBase/Common/TMReportViewer.jsx","Components/UIBase/Details/ReportDetails.jsx","JS/FunctionGroups.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as wjCore from \"@grapecity/wijmo\";\r\nimport * as wjGrid from \"@grapecity/wijmo.grid\";\r\nimport {\r\n  FlexGrid,\r\n  FlexGridColumn,\r\n  FlexGridCellTemplate,\r\n} from \"@grapecity/wijmo.react.grid\";\r\nimport { FlexGridFilter } from \"@grapecity/wijmo.react.grid.filter\";\r\nimport { Operator } from \"@grapecity/wijmo.grid.filter\";\r\nimport { FlexGridSearch } from \"@grapecity/wijmo.react.grid.search\";\r\nimport { CollectionView } from \"@grapecity/wijmo\";\r\nimport { CollectionViewNavigator, ListBox } from \"@grapecity/wijmo.react.input\";\r\nimport { Selector } from \"@grapecity/wijmo.grid.selector\";\r\nimport { HeadersVisibility } from \"@grapecity/wijmo.grid\";\r\nimport { showPopup, hidePopup, PopupPosition } from \"@grapecity/wijmo\";\r\nimport * as wjcGridXlsx from \"@grapecity/wijmo.grid.xlsx\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport { GroupPanel } from \"@grapecity/wijmo.react.grid.grouppanel\";\r\nimport { Button, Card, Popup } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as loadash from \"lodash\";\r\nimport \"@grapecity/wijmo.touch\";\r\n\r\nconst WijmoGrid = (props) => {\r\n  const [flex, setFlex] = useState(null);\r\n  const [translator] = useTranslation();\r\n  const _getData = (pageLength) => {\r\n    return new CollectionView(props.sourceData, {\r\n      pageSize: pageLength,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState(_getData(props.rowsPerPage));\r\n  const theGrid = React.createRef();\r\n  const theSearch = React.createRef();\r\n  const gridFilter = React.createRef();\r\n  const pagingComponent = React.createRef();\r\n  const colPicker = React.useRef();\r\n\r\n  // to keep track of selected rows\r\n  const selectedRows = React.useRef(props.selectionRequired ? [] : null);\r\n\r\n  // to initialize grid checkbox selection\r\n  let selector = null;\r\n\r\n  //Initialize grid\r\n  const gridInitialized = (grid) => {\r\n    try {\r\n      // localize grid filter\r\n      customizeFilterConditions();\r\n\r\n      if (props.onRowClick) {\r\n        // add row click event handler\r\n        grid.addEventListener(grid.hostElement, \"click\", (e) => {\r\n          let ht = grid.hitTest(e);\r\n          // condition to check if cell is not a grouped cell and a data cell\r\n          if (\r\n            ht.target.closest(\".wj-cell\") &&\r\n            ![...ht.target.closest(\".wj-cell\").classList].includes(\r\n              \"wj-group\"\r\n            ) &&\r\n            ht.cellType === wjGrid.CellType.Cell\r\n          ) {\r\n            // fetch row data\r\n            const rowData = grid.rows[ht.row].dataItem;\r\n            props.onRowClick(rowData);\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      grid.select(-1, -1);\r\n\r\n      setFlex(grid);\r\n      if (props.selectionRequired) {\r\n        // enable checkbox selection\r\n        selector = new Selector(grid, {\r\n          itemChecked: (s, e) => {\r\n            // if only single checkbox selection is required\r\n            if (props.singleSelection) {\r\n              grid.rows\r\n                .filter((row) => {\r\n                  return (\r\n                    row.isSelected &&\r\n                    selectedRows.current.filter((item) =>\r\n                      loadash.isEqual(item, row.dataItem)\r\n                    ).length === 1\r\n                  );\r\n                })\r\n                .forEach((row) => {\r\n                  row.isSelected = false;\r\n                });\r\n            }\r\n\r\n            // pass row data as parameter to checkbox selection handler\r\n            props.onSelectionHandle(\r\n              grid.rows\r\n                .filter((r) => r.isSelected)\r\n                .map((selectedRow) => selectedRow.dataItem)\r\n            );\r\n          },\r\n          // if only single checkbox selection is required\r\n          showCheckAll: !props.singleSelection,\r\n        });\r\n\r\n        let theGrid = selector.column.grid;\r\n        selector.column = theGrid.rowHeaders.columns[0];\r\n        theGrid.headersVisibility = HeadersVisibility.All;\r\n        theGrid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in gridInitialized: \" + error);\r\n    }\r\n  };\r\n\r\n  //Update grid when data changes\r\n  useEffect(() => {\r\n    try {\r\n      if (theGrid != null) {\r\n        //Connect search to the grid\r\n        let grid = theGrid.current.control;\r\n        let search = theSearch.current.control;\r\n        search.grid = grid;\r\n      }\r\n\r\n      setData(_getData(props.rowsPerPage));\r\n    } catch (error) {\r\n      console.log(\"Error in grid update:\", error);\r\n    }\r\n  }, [props.sourceData]);\r\n\r\n  // Pre-select grid rows based on selectedItems props\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && props.selectionRequired) {\r\n        // clear the selectedRows array\r\n        selectedRows.current.length = 0;\r\n        // add selectedItems array items to selectedRows\r\n        selectedRows.current.push(...props.selectedItems);\r\n\r\n        flex.rows.forEach((row) => {\r\n          if (\r\n            props.selectedItems.filter((item) =>\r\n              loadash.isEqual(item, row.dataItem)\r\n            ).length === 1\r\n          ) {\r\n            // checks the row checkbox\r\n            row.isSelected = true;\r\n          } else {\r\n            // unchecks the row checkbox\r\n            row.isSelected = false;\r\n          }\r\n        });\r\n\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in pre-selecting rows:\", error);\r\n    }\r\n  }, [props.selectedItems]);\r\n\r\n  //Load the state of grid\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(props.parentComponent + \"GridState\") &&\r\n        localStorage.getItem(props.parentComponent + \"GridState\") !== \"null\" &&\r\n        flex\r\n      ) {\r\n        // restore grid settings\r\n        let gridState = JSON.parse(\r\n          localStorage.getItem(props.parentComponent + \"GridState\")\r\n        );\r\n        let newFlex = flex;\r\n\r\n        // restore column picker settings\r\n        newFlex.columns.forEach((col) => {\r\n          let matchedCol = gridState.columns.filter(\r\n            (colSetting) => colSetting.binding === col.binding\r\n          );\r\n          col.visible =\r\n            matchedCol.length > 0 ? matchedCol[0].visible : col.visible;\r\n        });\r\n\r\n        // restore filter settings\r\n        gridFilter.current.control.filterDefinition =\r\n          gridState.filterDefinition;\r\n\r\n        // restore sort settings\r\n        newFlex.collectionView.deferUpdate(() => {\r\n          newFlex.collectionView.sortDescriptions.clear();\r\n          for (let i = 0; i < gridState.sortDescriptions.length; i++) {\r\n            let sortDesc = gridState.sortDescriptions[i];\r\n            newFlex.collectionView.sortDescriptions.push(\r\n              new wjCore.SortDescription(sortDesc.property, sortDesc.ascending)\r\n            );\r\n          }\r\n        });\r\n\r\n        // restore grouping settings\r\n        for (let i = 0; i < gridState.groupDescriptions.length; i++) {\r\n          newFlex.collectionView.groupDescriptions.push(\r\n            new wjCore.PropertyGroupDescription(gridState.groupDescriptions[i])\r\n          );\r\n          newFlex.columns.filter(\r\n            (col) => col.binding === gridState.groupDescriptions[i]\r\n          )[0].visible = false;\r\n        }\r\n\r\n        if (\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") &&\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") !== \"null\"\r\n        ) {\r\n          let gridSessionState = JSON.parse(\r\n            sessionStorage.getItem(props.parentComponent + \"GridState\")\r\n          );\r\n          // restore paging settings\r\n          newFlex.collectionView.moveToPage(\r\n            newFlex.collectionView.pageCount - 1 >= gridSessionState.pageIndex\r\n              ? gridSessionState.pageIndex\r\n              : newFlex.collectionView.pageCount - 1\r\n          );\r\n\r\n          // restore search settings\r\n          if (theSearch) {\r\n            theSearch.current.control.text = gridSessionState.searchText;\r\n          }\r\n        }\r\n\r\n        setFlex(newFlex);\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in restoring local storage settings: \", error);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set Column Picker Properties\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && colPicker.current && props.columnPickerRequired) {\r\n        colPicker.current.itemsSource = flex.columns;\r\n        colPicker.current.checkedMemberPath = \"visible\";\r\n        colPicker.current.displayMemberPath = \"header\";\r\n        colPicker.current.lostFocus.addHandler(() => {\r\n          hidePopup(colPicker.current.hostElement);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in initializing column picker properties:\", error);\r\n    }\r\n  }, [colPicker.current]);\r\n\r\n  useEffect(() => {\r\n    // remove column picker pop-up on component unmount\r\n    return () => {\r\n      if (props.columnPickerRequired && colPicker.current) {\r\n        hidePopup(colPicker.current.hostElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // export grid data to excel\r\n  const exportExcel = () => {\r\n    try {\r\n      let gridFlex = flex;\r\n      //to download all rows from all pages\r\n      gridFlex.itemsSource.pageSize = props.sourceData.length;\r\n      setFlex(gridFlex);\r\n      wjcGridXlsx.FlexGridXlsxConverter.saveAsync(\r\n        flex,\r\n        {\r\n          includeColumnHeaders: true,\r\n          includeCellStyles: false,\r\n          formatItem: null,\r\n        },\r\n        props.exportFileName\r\n      );\r\n\r\n      //to restore paging\r\n      gridFlex.itemsSource.pageSize = props.rowsPerPage;\r\n      setFlex(gridFlex);\r\n    } catch (error) {\r\n      console.log(\"Error in export grid to excel:\", error);\r\n    }\r\n  };\r\n\r\n  const terminalPopOver = (terminalCodes) => {\r\n    if (terminalCodes.split(\",\").length > props.terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={terminalCodes.split(\",\").length}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return terminalCodes;\r\n    }\r\n  };\r\n\r\n  const displayValues = (value, columnDetail) => {\r\n    if (columnDetail !== undefined && columnDetail !== null) {\r\n      if (typeof value === \"boolean\" || columnDetail.Name === \"Active\") {\r\n        if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n        else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n      } else if (value === \"\" || value === null || value === undefined) {\r\n        return value;\r\n      } else if (\r\n        (columnDetail.Name === \"TerminalCodes\" ||\r\n          columnDetail.PopOver === \"1\") &&\r\n        value !== null\r\n      ) {\r\n        return terminalPopOver(value);\r\n      }\r\n      // var columnType = columnDetails.find(function (detail) {\r\n      //   if (detail.Name === field) {\r\n      //     return detail;\r\n      //   }\r\n      // });\r\n      else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"DateTime\"\r\n      ) {\r\n        return (\r\n          new Date(value).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(value).toLocaleTimeString()\r\n        );\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Date\"\r\n      ) {\r\n        return new Date(value).toLocaleDateString();\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Time\"\r\n      ) {\r\n        return new Date(value).toLocaleTimeString();\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  //Initialize Column Picker\r\n  const initializedPicker = (picker) => {\r\n    if (props.columnPickerRequired) {\r\n      colPicker.current = picker;\r\n    }\r\n  };\r\n\r\n  // Column Picker Handler\r\n  const colPickerClickHandler = (event) => {\r\n    try {\r\n      let host = colPicker.current.hostElement;\r\n      if (!host.offsetHeight) {\r\n        showPopup(host, event.target, PopupPosition.Below, true, false);\r\n        colPicker.current.focus();\r\n      } else {\r\n        hidePopup(host, true, true);\r\n        flex.focus();\r\n      }\r\n\r\n      colPicker.current.focus();\r\n      event.preventDefault();\r\n    } catch (error) {\r\n      console.log(\"Error in Column Picker click event:\", error);\r\n    }\r\n  };\r\n\r\n  const saveGridState = () => {\r\n    try {\r\n      if (flex && gridFilter.current) {\r\n        // grid column, filter, sort and grouping settings\r\n        let gridState = {\r\n          columns: flex.columns.map((col) => {\r\n            return {\r\n              binding: col.binding,\r\n              visible: col.visible,\r\n            };\r\n          }),\r\n          filterDefinition: gridFilter.current.control.filterDefinition,\r\n          sortDescriptions: flex.collectionView.sortDescriptions.map(\r\n            (sortDesc) => {\r\n              return {\r\n                property: sortDesc.property,\r\n                ascending: sortDesc.ascending,\r\n              };\r\n            }\r\n          ),\r\n          groupDescriptions: flex.collectionView.groupDescriptions.map(\r\n            (group) => {\r\n              if (group.propertyName) {\r\n                return group.propertyName;\r\n              }\r\n\r\n              return null;\r\n            }\r\n          ),\r\n        };\r\n\r\n        // add class to grouped checkbox div element\r\n        if (\r\n          flex.collectionView.groupDescriptions &&\r\n          flex.collectionView.groupDescriptions.length > 0\r\n        ) {\r\n          let groupedCheckboxes = [\r\n            ...document.getElementsByClassName(\"wj-column-selector-group\"),\r\n          ];\r\n          groupedCheckboxes.forEach((chkbx) => {\r\n            chkbx.parentNode.parentNode.classList.add(\"wj-grouped-checkbox\");\r\n          });\r\n        }\r\n\r\n        // grid paging and search settings\r\n        let sessionState = {\r\n          pageIndex: flex.collectionView.pageIndex,\r\n          searchText: theSearch.current.control.text,\r\n        };\r\n\r\n        localStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(gridState)\r\n        );\r\n        sessionStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(sessionState)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in saving grid state\");\r\n    }\r\n  };\r\n\r\n  // customize grid filter text and dropdowns\r\n  const customizeFilterConditions = () => {\r\n    // localize the FlexGrid filter\r\n    let filter = wjCore.culture.FlexGridFilter,\r\n      operator = Operator;\r\n    wjCore.culture.FlexGridFilter.header = translator(\"WijmoGridFilterHeader\");\r\n    wjCore.culture.FlexGridFilter.ascending =\r\n      \"\\u2191 \" + translator(\"WijmoGridFilterAscending\");\r\n    wjCore.culture.FlexGridFilter.descending =\r\n      \"\\u2193 \" + translator(\"WijmoGridFilterDescending\");\r\n    wjCore.culture.FlexGridFilter.apply = translator(\"RoleAdminEdit_Apply\");\r\n    wjCore.culture.FlexGridFilter.clear = translator(\"OrderCreate_btnClear\");\r\n    wjCore.culture.FlexGridFilter.conditions = translator(\r\n      \"WijmoGridFilterCondition\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.values = translator(\"WijmoGridFilterValue\");\r\n    wjCore.culture.FlexGridFilter.search = translator(\r\n      \"LoadingDetailsView_SearchGrid\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.selectAll = translator(\r\n      \"WijmoGridFilterSelectAll\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.and = translator(\"WijmoGridFilterAnd\");\r\n    wjCore.culture.FlexGridFilter.or = translator(\"WijmoGridFilterOr\");\r\n    wjCore.culture.FlexGridFilter.cancel = translator(\"AccessCardInfo_Cancel\");\r\n    // wjCore.culture.FlexGridFilter.null = 'test';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.and = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.asc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dialog = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dsc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.edit = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op2 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.or = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.search = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val2 = '';\r\n\r\n    // localize FlexGrid filter operators\r\n    filter.stringOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterBeginsWith\"), op: operator.BW },\r\n      { name: translator(\"WijmoGridFilterEndsWith\"), op: operator.EW },\r\n      { name: translator(\"WijmoGridFilterContains\"), op: operator.CT },\r\n      { name: translator(\"WijmoGridFilterDoesNotContain\"), op: operator.NC },\r\n    ];\r\n    filter.numberOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterGreaterThan\"), op: operator.GT },\r\n      { name: translator(\"WijmoGridFilterLessThan\"), op: operator.LT },\r\n      {\r\n        name: translator(\"WijmoGridFilterGreaterThanOrEqual\"),\r\n        op: operator.GE,\r\n      },\r\n      { name: translator(\"WijmoGridFilterLessThanOrEqual\"), op: operator.LE },\r\n    ];\r\n    filter.dateOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterDateEarlierThan\"), op: operator.LT },\r\n      { name: translator(\"WijmoGridFilterDateLaterThan\"), op: operator.GT },\r\n    ];\r\n    filter.booleanOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n    ];\r\n  };\r\n\r\n  // set column width based on screen size\r\n  const getWidth = (columnDetails) => {\r\n    try {\r\n      const screenWidth = window.screen.width;\r\n      if (screenWidth < 1024) {\r\n        if (columnDetails.WidthPx && columnDetails.WidthPx !== \"\")\r\n          return parseInt(columnDetails.WidthPx);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in width:\", error);\r\n    }\r\n\r\n    return columnDetails.WidthPercentage.includes(\"*\")\r\n      ? columnDetails.WidthPercentage\r\n      : parseInt(columnDetails.WidthPercentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pl-1\">\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <React.Fragment>\r\n              <div className=\"row pl-0\">\r\n                <div className=\"col-10 col-sm-12 col-md-5 col-lg-6\">\r\n                  <FlexGridSearch\r\n                    class=\"ui single-input\"\r\n                    ref={theSearch}\r\n                    placeholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-10 col-sm-12 col-md-7 col-lg-6\">\r\n                  <div style={{ float: \"right\" }}>\r\n                    {props.columnPickerRequired ? (\r\n                      <Button\r\n                        id=\"colPicker\"\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        onClick={(event) => colPickerClickHandler(event)}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridColumnPicker\")}\r\n                        </div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          <Icon\r\n                            name=\"caret-down\"\r\n                            className=\"btnIcon\"\r\n                            size=\"small\"\r\n                          />\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.exportRequired ? (\r\n                      <Button\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        className=\"mt-3 mt-md-0\"\r\n                        onClick={exportExcel}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridExport\")}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            className=\"icon-Xls\"\r\n                            style={{\r\n                              fontSize: \"17px\",\r\n                              position: \"absolute\",\r\n                              top: \"3px\",\r\n                            }}\r\n                          ></span>\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tableScroll\">\r\n                {props.columnGroupingRequired ? (\r\n                  <GroupPanel\r\n                    className=\"group-panel\"\r\n                    grid={flex}\r\n                    placeholder={t(\"WijmoGridGroupPanelPlaceholder\")}\r\n                  />\r\n                ) : null}\r\n                <ErrorBoundary>\r\n                  <FlexGrid\r\n                    ref={theGrid}\r\n                    autoGenerateColumns={false}\r\n                    alternatingRowStep={0}\r\n                    autoRowHeights={true}\r\n                    headersVisibility=\"Column\"\r\n                    itemsSource={data}\r\n                    selectionMode={wjCore.asEnum(\"None\", wjGrid.SelectionMode)}\r\n                    initialized={gridInitialized}\r\n                    virtualizationThreshold={[0, 10000]}\r\n                    onUpdatedView={saveGridState}\r\n                  >\r\n                    <FlexGridFilter ref={gridFilter} />\r\n                    {props.columns.map((column) => {\r\n                      return (\r\n                        <FlexGridColumn\r\n                          header={t(column.Name)}\r\n                          key={column.Name}\r\n                          binding={column.Name}\r\n                          width={getWidth(column)}\r\n                          minWidth={100}\r\n                          isReadOnly={true}\r\n                          wordWrap={true}\r\n                          align=\"left\"\r\n                        >\r\n                          <FlexGridCellTemplate\r\n                            cellType=\"Cell\"\r\n                            template={(context) => {\r\n                              return (\r\n                                <span\r\n                                  style={\r\n                                    props.conditionalRowStyleCheck == null ||\r\n                                    !props.conditionalRowStyleCheck(\r\n                                      context.item\r\n                                    )\r\n                                      ? null\r\n                                      : { ...props.conditionalRowStyles }\r\n                                  }\r\n                                >\r\n                                  {displayValues(\r\n                                    context.item[column.Name],\r\n                                    column\r\n                                  )}\r\n                                </span>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FlexGridColumn>\r\n                      );\r\n                    })}\r\n                  </FlexGrid>\r\n                </ErrorBoundary>\r\n                {props.columnPickerRequired ? (\r\n                  <div className=\"column-picker-div\">\r\n                    <ListBox\r\n                      className=\"column-picker\"\r\n                      initialized={(picker) => initializedPicker(picker)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"row\">\r\n                <CollectionViewNavigator\r\n                  ref={pagingComponent}\r\n                  className=\"ml-auto mr-auto mt-3\"\r\n                  headerFormat={t(\"WijmoGridPagingTemplate\")}\r\n                  byPage={true}\r\n                  cv={data}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nWijmoGrid.propTypes = {\r\n  sourceData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  exportRequired: PropTypes.bool.isRequired,\r\n  exportFileName: PropTypes.string,\r\n  selectionRequired: PropTypes.bool,\r\n  columnPickerRequired: PropTypes.bool,\r\n  columnGroupingRequired: PropTypes.bool,\r\n  conditionalRowStyleCheck: PropTypes.func,\r\n  conditionalRowStyles: PropTypes.object,\r\n  rowsPerPage: PropTypes.number,\r\n  onSelectionHandle: PropTypes.func,\r\n  parentComponent: PropTypes.string.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  terminalsToShow: PropTypes.number,\r\n  singleSelection: PropTypes.bool,\r\n  selectedItems: PropTypes.array,\r\n};\r\n\r\nWijmoGrid.defaultProps = {\r\n  sourceData: [],\r\n  columns: [],\r\n  exportRequired: true,\r\n  exportFileName: \"Grid.xlsx\",\r\n  selectionRequired: false,\r\n  columnPickerRequired: false,\r\n  columnGroupingRequired: false,\r\n  rowsPerPage: 10,\r\n  terminalsToShow: 2,\r\n  singleSelection: false,\r\n  selectedItems: [],\r\n};\r\n\r\nexport default WijmoGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WijmoGrid from '../../UIBase/Common/WijmoGrid';\r\n\r\nconst WijmoGridComposite = (props) => {\r\n    return (\r\n        <WijmoGrid\r\n            sourceData={props.data}\r\n            columns={props.columns}\r\n            exportRequired={props.exportRequired}\r\n            exportFileName={props.exportFileName}\r\n            columnPickerRequired={props.columnPickerRequired}\r\n            selectionRequired={props.selectionRequired}\r\n            columnGroupingRequired={props.columnGroupingRequired}\r\n            conditionalRowStyleCheck={props.conditionalRowStyleCheck}\r\n            conditionalRowStyles={props.conditionalRowStyles}\r\n            rowsPerPage={props.rowsPerPage}\r\n            onSelectionHandle={props.onSelectionHandle}\r\n            onRowClick={props.onRowClick}\r\n            parentComponent={props.parentComponent}\r\n            terminalsToShow={props.terminalsToShow}\r\n            singleSelection={props.singleSelection}\r\n            selectedItems={props.selectedItems}\r\n        />\r\n    )\r\n}\r\n\r\nWijmoGridComposite.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n    exportRequired: PropTypes.bool.isRequired,\r\n    exportFileName: PropTypes.string,\r\n    selectionRequired: PropTypes.bool,\r\n    columnPickerRequired: PropTypes.bool,\r\n    columnGroupingRequired: PropTypes.bool,\r\n    conditionalRowStyleCheck: PropTypes.func,\r\n    conditionalRowStyles: PropTypes.object,\r\n    rowsPerPage: PropTypes.number,\r\n    onSelectionHandle: PropTypes.func,\r\n    parentComponent: PropTypes.string.isRequired,\r\n    onRowClick: PropTypes.func,\r\n    terminalsToShow: PropTypes.number,\r\n    singleSelection: PropTypes.bool,\r\n    selectedItems: PropTypes.array\r\n}\r\n\r\nexport default WijmoGridComposite;","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { Button, Input, Label } from \"@scuf/common\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\n\r\nexport function TankShareholderAssociationSummaryComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  terminalsToShow,\r\n  selectionRequired,\r\n  onSelectionChange,\r\n  parentComponent,\r\n  handleViewAuditTrail,\r\n  selectedItems,\r\n  isDetails,\r\n  handleEditTank,\r\n  isEnableModify,\r\n  modShareholderList,\r\n  handleFieldChange,\r\n  modSelectedTankShareholderDetails,\r\n  handleSave,\r\n  saveEnabled,\r\n  handleReset,\r\n  handleViewReport,\r\n  selectedShareholder,\r\n  OverwriteGrossNetValues\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  const decimalDisplayValues = (cellData) => {\r\n    const { value } = cellData;\r\n    if (typeof value === \"number\" && value !== null) {\r\n      return value.toLocaleString();\r\n    } else {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  const handleCustomEditTextBox = (cellData, type) => {\r\n    if (type === \"grossQuantity\") {\r\n      // if (selectedShareholder !== \"All\" && selectedShareholder.includes(cellData.rowData.ShareholderCode)) {\r\n      return (<Input\r\n        fluid\r\n        value={modSelectedTankShareholderDetails[cellData.rowIndex][cellData.field]}\r\n        onChange={(value) => handleFieldChange(value, cellData, type)}\r\n        reserveSpace={false}\r\n        disabled={(cellData.rowData.CalculatedGrossVolume !== null\r\n          && (cellData.rowData.CalculatedGrossVolume >= 0)\r\n          && !OverwriteGrossNetValues && cellData.rowData.LimitQuantity > 0) ? true : false}\r\n      />)\r\n      //}\r\n    }\r\n    else\r\n      return (\r\n        <Input\r\n          fluid\r\n          value={type === \"shareholder\" ?\r\n            modShareholderList[cellData.rowIndex][cellData.field]\r\n            : modSelectedTankShareholderDetails[cellData.rowIndex][cellData.field]}\r\n          onChange={(value) => handleFieldChange(value, cellData, type)}\r\n          reserveSpace={false}\r\n        />\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <WijmoGridComposite\r\n        data={tableData}\r\n        columns={columnDetails}\r\n        rowsPerPage={pageSize}\r\n        exportRequired={exportRequired}\r\n        exportFileName={exportFileName}\r\n        columnPickerRequired={columnPickerRequired}\r\n        columnGroupingRequired={columnGroupingRequired}\r\n        terminalsToShow={terminalsToShow}\r\n        selectionRequired={selectionRequired}\r\n        onSelectionHandle={onSelectionChange}\r\n        parentComponent={parentComponent}\r\n      ></WijmoGridComposite>\r\n\r\n      <div className=\"row userActionPosition\">\r\n        {selectedItems.length > 0 ?\r\n          <div className=\"col-12 col-md-3 col-lg-6\">\r\n            <Button\r\n              content={isEnableModify ? t(\"TankShareholderAssn_EditCommingleButton\") : t(\"TankShareholderAssn_ViewCommingleButton\")}\r\n              onClick={handleEditTank}\r\n            ></Button>\r\n          </div> : <div className=\"col-12 col-md-3 col-lg-6\" />}\r\n        <div className=\"col-12 col-md-9 col-lg-6\">\r\n          <div style={{ float: \"right\" }}>\r\n            <Button\r\n              content={t(\"ViewShipmentStatus_ViewAuditTrail\")}\r\n              onClick={handleViewAuditTrail}\r\n            ></Button>\r\n            <Button\r\n              content={t(\"TankShareholderAssn_ViewComminglingReport\")}\r\n              onClick={handleViewReport}\r\n            ></Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        isDetails && selectedItems.length > 0 ?\r\n          <>\r\n            <div style={{ display: \"flex\", flexWrap: \"wrap\" }} >\r\n              <div className=\"col col-lg-3\">\r\n                <h5>{t(\"TankShareholderAssn_ProposedPercentageQuantity\")}</h5>\r\n                {/* <fieldset className=\"fieldset\" style={{ \"width\": \"95%\" }}>\r\n                  <legend className=\"legend\">{t(\"TankShareholderAssn_ProposedPercentageQuantity\")}</legend>\r\n                </fieldset> */}\r\n                <DataTable data={modShareholderList}>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"ShareholderCode\"\r\n                    field=\"ShareholderCode\"\r\n                    header={t(\"AccessCardInfo_Shareholder\")}\r\n\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"Volume\"\r\n                    field=\"Volume\"\r\n                    header={t(\"TankShareholderAssn_PercentageLimitQuantity\")}\r\n                    editFieldType=\"text\"\r\n                    renderer={(cellData) =>\r\n                      decimalDisplayValues(cellData)\r\n                    }\r\n                    customEditRenderer={(cellData) =>\r\n                      handleCustomEditTextBox(\r\n                        cellData, \"shareholder\"\r\n                      )\r\n                    }\r\n                    editable={true}\r\n                    initialWidth='100px'\r\n                  ></DataTable.Column>\r\n                </DataTable>\r\n              </div>\r\n              <div className=\"col col-lg-9\">\r\n                {/* <fieldset className=\"fieldset\">\r\n                  <legend className=\"legend\">{t(\"TankShareholderAssn_ComminglingDetails\")}</legend>\r\n                </fieldset> */}\r\n                <h5>{t(\"TankShareholderAssn_ComminglingDetails\")}</h5>\r\n                <DataTable data={modSelectedTankShareholderDetails}>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"TankCode\"\r\n                    field=\"TankCode\"\r\n                    header={t(\"AtgConfigure_TankCode\")}\r\n                    initialWidth='120px'\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"ShareholderCode\"\r\n                    field=\"ShareholderCode\"\r\n                    header={t(\"AccessCardInfo_Shareholder\")}\r\n\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"BaseProductCode\"\r\n                    field=\"BaseProductCode\"\r\n                    header={t(\"BaseProductInfo_BaseProdCode\")}\r\n\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"LimitQuantity\"\r\n                    field=\"LimitQuantity\"\r\n                    header={t(\"TankShareholderAssn_CurrentLimitCapacity\")}\r\n\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"LimitQuantityPercentage\"\r\n                    field=\"LimitQuantityPercentage\"\r\n                    header={t(\"TankShareholderAssn_PercentageCurrentLimitCapacity\")}\r\n\r\n                  ></DataTable.Column>\r\n                  {/* {<>{handleTableColumn()}</>} */}\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"CalculatedGrossVolume\"\r\n                    field=\"CalculatedGrossVolume\"\r\n                    header={t(\"TankShareholderAssn_CalculatedGrossQuantity\")}\r\n                    renderer={(cellData) =>\r\n                      decimalDisplayValues(cellData)\r\n                    }\r\n                    customEditRenderer={(cellData) =>\r\n                      handleCustomEditTextBox(\r\n                        cellData, \"grossQuantity\"\r\n                      )\r\n                    }\r\n                    editable={true}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"VolumeUOM\"\r\n                    field=\"VolumeUOM\"\r\n                    header={t(\"ExchangeAgreementDetailsItem_UOM\")}\r\n                    initialWidth='80px'\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"NewLimitQuantity\"\r\n                    field=\"NewLimitQuantity\"\r\n                    header={t(\"TankShareholderAssn_ProposedLimitCapacity\")}\r\n                    renderer={(cellData) =>\r\n                      decimalDisplayValues(cellData)\r\n                    }\r\n                    customEditRenderer={(cellData) =>\r\n                      handleCustomEditTextBox(\r\n                        cellData, \"newQuantity\"\r\n                      )\r\n                    }\r\n                    editable={true}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                </DataTable>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-9 col-lg-12\">\r\n              <div style={{ float: \"right\" }}>\r\n                <Button\r\n                  content={t(\"LookUpData_btnReset\")}\r\n                  className=\"cancelButton\"\r\n                  onClick={handleReset}\r\n                ></Button>\r\n                <Button\r\n                  content={t(\"Save\")}\r\n                  disabled={!saveEnabled}\r\n                  onClick={handleSave}\r\n                ></Button>\r\n              </div>\r\n            </div>\r\n          </> : null\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button, Modal, Icon } from \"@scuf/common\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\n\r\nTankShareholderAssociationViewAuditTrailDetails.propTypes = {\r\n    auditTrailList: PropTypes.array.isRequired,\r\n    handleBack: PropTypes.func.isRequired,\r\n};\r\n\r\nTankShareholderAssociationViewAuditTrailDetails.defaultProps = {};\r\n\r\nexport function TankShareholderAssociationViewAuditTrailDetails({\r\n    auditTrailList,\r\n    handleBack,\r\n}) {\r\n\r\n    const [modelOpen, setModelOpen] = useState(false);\r\n    function displayTMModalforPrintConfirm() {\r\n        return (\r\n            <TranslationConsumer>\r\n                {(t) => (\r\n                    <Modal open={modelOpen} className=\"marineModalPrint\">\r\n                        <Modal.Content>\r\n                            <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                                <div className=\"col col-lg-8\">\r\n                                    <h3>\r\n                                        {t(\"ViewTankShAuditTrail_Title\")}\r\n                                    </h3>\r\n                                </div>\r\n                                <div className=\"col col-lg-4\" style={{ textAlign: \"right\" }}>\r\n                                    <div\r\n                                        onClick={() => {\r\n                                            setModelOpen(false);\r\n                                        }}\r\n                                    >\r\n                                        <Icon root=\"common\" name=\"close\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 detailsTable\">\r\n                                <DataTable data={auditTrailList}>\r\n                                    <DataTable.Column\r\n                                        className=\"compColHeight\"\r\n                                        key=\"ShareholderCode\"\r\n                                        field=\"ShareholderCode\"\r\n                                        header={t(\"AccessCardInfo_Shareholder\")}\r\n\r\n                                    ></DataTable.Column>\r\n                                    <DataTable.Column\r\n                                        className=\"compColHeight\"\r\n                                        key=\"TankCode\"\r\n                                        field=\"TankCode\"\r\n                                        header={t(\"AtgConfigure_TankCode\")}\r\n\r\n                                    ></DataTable.Column>\r\n                                    <DataTable.Column\r\n                                        className=\"compColHeight\"\r\n                                        key=\"BaseProductCode\"\r\n                                        field=\"BaseProductCode\"\r\n                                        header={t(\"BaseProductInfo_BaseProdCode\")}\r\n\r\n                                    ></DataTable.Column>\r\n                                    <DataTable.Column\r\n                                        className=\"compColHeight\"\r\n                                        key=\"LimitQuantity\"\r\n                                        field=\"LimitQuantity\"\r\n                                        header={t(\"TankShareholderAssn_LimitCapacity\")}\r\n\r\n                                    ></DataTable.Column>\r\n                                    <DataTable.Column\r\n                                        className=\"compColHeight\"\r\n                                        key=\"LastUpdatedTime\"\r\n                                        field=\"LastUpdatedTime\"\r\n                                        header={t(\"AccessCardInfo_LastUpdated\")}\r\n\r\n                                    ></DataTable.Column>\r\n                                    <DataTable.Column\r\n                                        className=\"compColHeight\"\r\n                                        key=\"LastUpdatedBy\"\r\n                                        field=\"LastUpdatedBy\"\r\n                                        header={t(\"AdditiveInjectorInfo_LastUpdatedBy\")}\r\n\r\n                                    ></DataTable.Column>\r\n                                </DataTable>\r\n                            </div>\r\n                            <Modal.Footer>\r\n                                <div style={{ marginBottom: \"10px\" }}>\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        size=\"small\"\r\n                                        content={t(\"ViewAuditTrail_Print\")}\r\n                                        onClick={() => {\r\n                                            let el =\r\n                                                window.document.getElementById(\"printTable\").innerHTML;\r\n                                            const iframe = window.document.createElement(\"IFRAME\");\r\n                                            let doc = null;\r\n                                            window.document.body.appendChild(iframe);\r\n                                            doc = iframe.contentWindow.document;\r\n                                            const str1 = el.substring(0, el.indexOf(\"<table\") + 6);\r\n                                            const str2 = el.substring(\r\n                                                el.indexOf(\"<table\") + 6,\r\n                                                el.length\r\n                                            );\r\n                                            el = str1 + ' border=\"1\" cellspacing=\"1\"' + str2;\r\n                                            doc.write(el);\r\n                                            doc.close();\r\n                                            iframe.contentWindow.focus();\r\n                                            iframe.contentWindow.print();\r\n                                            setTimeout(() => {\r\n                                                window.document.body.removeChild(iframe);\r\n                                            }, 2000);\r\n                                        }}\r\n                                    />\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        size=\"small\"\r\n                                        content={t(\"MarineEOD_Close\")}\r\n                                        onClick={() => {\r\n                                            setModelOpen(false);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </Modal.Footer>\r\n                        </Modal.Content>\r\n                    </Modal>\r\n                )}\r\n            </TranslationConsumer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TranslationConsumer>\r\n                {(t) => (\r\n                    <div>\r\n                        <div className=\"detailsContainer\">\r\n                            <div id=\"printTable\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <h3>\r\n                                            {t(\"ViewTankShAuditTrail_Title\")}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row marginRightZero tableScroll\">\r\n                                    <div className=\"col-12 detailsTable \">\r\n                                        <DataTable data={auditTrailList} scrollable={true}>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"ShareholderCode\"\r\n                                                field=\"ShareholderCode\"\r\n                                                header={t(\"AccessCardInfo_Shareholder\")}\r\n\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"TankCode\"\r\n                                                field=\"TankCode\"\r\n                                                header={t(\"AtgConfigure_TankCode\")}\r\n\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"BaseProductCode\"\r\n                                                field=\"BaseProductCode\"\r\n                                                header={t(\"BaseProductInfo_BaseProdCode\")}\r\n\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"LimitQuantity\"\r\n                                                field=\"LimitQuantity\"\r\n                                                header={t(\"TankShareholderAssn_LimitCapacity\")}\r\n\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"LastUpdatedTime\"\r\n                                                field=\"LastUpdatedTime\"\r\n                                                header={t(\"AccessCardInfo_LastUpdated\")}\r\n\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"LastUpdatedBy\"\r\n                                                field=\"LastUpdatedBy\"\r\n                                                header={t(\"AdditiveInjectorInfo_LastUpdatedBy\")}\r\n\r\n                                            ></DataTable.Column>\r\n                                        </DataTable>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" >\r\n                                <div className=\"col-12 col-sm-6 col-lg-8\">\r\n                                    <Button\r\n                                        className=\"backButton\"\r\n                                        onClick={handleBack}\r\n                                        content={t(\"Back\")}\r\n                                    ></Button>\r\n                                </div>\r\n                                <div\r\n                                    className=\"col-12 col-sm-6 col-lg-4\"\r\n                                    style={{ textAlign: \"right\" }}\r\n                                >\r\n                                    <Button\r\n                                        className=\"printButton\"\r\n                                        onClick={() => {\r\n                                            setModelOpen(true);\r\n                                        }}\r\n                                        content={t(\"ViewAuditTrail_PrintAuditTrail\")}\r\n                                    ></Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </TranslationConsumer>\r\n            {displayTMModalforPrintConfirm()}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { TankShareholderAssociationSummaryComposite } from \"../Summary/TankShareholderAssociationSummaryComposite\";\r\nimport { TankShareholderAssociationViewAuditTrailDetails } from \"../../UIBase/Details/TankShareholderAssociationViewAuditTrailDetails\";\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport { kpiTankShareholderAssociationList } from \"../../../JS/KPIPageName\";\r\nimport {\r\n  functionGroups,\r\n  fnKPIInformation,\r\n  fnTankShareholderPrimeFunction,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport lodash from \"lodash\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ReportDetails from \"../../UIBase/Details/ReportDetails\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport {\r\n  tankShAsscVolumeValidationDef,\r\n  tankShNewQtyValidationDef,\r\n} from \"../../../JS/DetailsTableValidationDef\";\r\nimport Error from \"../../Error\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button } from \"@scuf/common\";\r\n\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass TankShareholderAssociationComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    operationsVisibilty: { shareholder: true },\r\n    selectedItems: [],\r\n    data: {},\r\n    lookUpData: null,\r\n    selectedShareholder: \"\",\r\n    noOfSignificantDigits: \"3\", //To be used later\r\n    isViewAuditTrail: false,\r\n    auditTrailList: [],\r\n    tankShareholderAssociationKPIList: [],\r\n    allShareholder: [],\r\n    shareholderList: [],\r\n    modShareholderList: [],\r\n    selectedTankShareholderDetails: [],\r\n    modSelectedTankShareholderDetails: [],\r\n    saveEnabled: false,\r\n    showReport: false,\r\n    isEnable: true,\r\n    OverwriteGrossNetValues: false,\r\n    isValidVolume: true,\r\n    errorMsg: \"\",\r\n    showAuthenticationLayout: false,\r\n    tempSelectedTankShareholderDetails: {},\r\n\r\n  };\r\n\r\n  componentName = \"TankShareholderAssociationComponent\";\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getLookUpData();\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankShareholderAssociationComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n    // clear session storage on window refresh event\r\n    window.addEventListener(\"beforeunload\", this.clearStorage);\r\n  }\r\n\r\n  getLookUpData() {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=Commingling\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let isEnable = true;\r\n\r\n          if (result.EntityResult.EnableCommingling.toUpperCase() === \"FALSE\")\r\n            isEnable = false;\r\n\r\n          this.setState({\r\n            isEnable,\r\n            OverwriteGrossNetValues:\r\n              result.EntityResult.OverwriteGrossNetValues.toUpperCase() ===\r\n              \"FALSE\"\r\n                ? false\r\n                : true,\r\n          });\r\n\r\n          if (isEnable) {\r\n            let allShareholder = lodash.cloneDeep(\r\n              this.props.userDetails.EntityResult.ShareholderList\r\n            );\r\n            allShareholder.splice(0, 0, \"All\");\r\n\r\n            let shareholderList = [];\r\n\r\n            this.props.userDetails.EntityResult.ShareholderList.forEach(\r\n              (item) => {\r\n                shareholderList.push({\r\n                  ShareholderCode: item,\r\n                  Volume: null,\r\n                });\r\n              }\r\n            );\r\n\r\n            this.setState({\r\n              selectedShareholder: allShareholder[0],\r\n              allShareholder,\r\n              shareholderList,\r\n              modShareholderList: shareholderList,\r\n            });\r\n\r\n            this.GetTankShareholderList(\"\");\r\n\r\n            this.getKPIList(\r\n              this.props.userDetails.EntityResult.PrimaryShareholder\r\n            );\r\n          }\r\n        } else {\r\n          console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"TankShareholderAssociationComposite: Error occurred on getLookUpData\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  handleModalBack = () => {\r\n    this.setState({ showReport: false });\r\n  };\r\n\r\n  renderModal() {\r\n    let path = null;\r\n    let ShareholderList =\r\n      this.props.userDetails.EntityResult.ShareholderList.join(\r\n        Constants.delimiter\r\n      );\r\n    if (this.props.userDetails.EntityResult.IsArchived) {\r\n      path = \"TM/\" + Constants.TMReportArchive + \"/TankCominglingReport\";\r\n    } else {\r\n      path = \"TM/\" + Constants.TMReports + \"/TankCominglingReport\";\r\n    }\r\n    let paramValues = {\r\n      Culture: this.props.userDetails.EntityResult.UICulture,\r\n      ShareholderList: ShareholderList,\r\n      readonly: 1,\r\n    };\r\n\r\n    return (\r\n      <ReportDetails\r\n        showReport={this.state.showReport}\r\n        handleBack={this.handleModalBack}\r\n        handleModalClose={this.handleModalBack}\r\n        // proxyServerHost=\"http://epksr5115dit:3625/TMWebAPI/\"\r\n        proxyServerHost={RestAPIs.WebAPIURL}\r\n        reportServiceHost={this.reportServiceURI}\r\n        filePath={path}\r\n        parameters={paramValues}\r\n      />\r\n    );\r\n  }\r\n\r\n  handleViewReport = () => {\r\n    if (this.reportServiceURI === undefined) {\r\n      axios(\r\n        RestAPIs.GetReportServiceURI,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        if (response.data.IsSuccess) {\r\n          this.reportServiceURI = response.data.EntityResult;\r\n          this.setState({ showReport: true });\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ showReport: true });\r\n    }\r\n  };\r\n\r\n  getKPIList(shareholder) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      var notification = {\r\n        message: \"\",\r\n        messageType: \"critical\",\r\n        messageResultDetails: [],\r\n      };\r\n      let objKPIRequestData = {\r\n        PageName: kpiTankShareholderAssociationList,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              tankShareholderAssociationKPIList:\r\n                result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ tankShareholderAssociationKPIList: [] });\r\n            console.log(\r\n              \"Error in tank shareholder association KPIList:\",\r\n              result.ErrorList\r\n            );\r\n            notification.messageResultDetails.push({\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: result.ErrorList[0],\r\n            });\r\n          }\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Error while getting tank shareholder association KPIList:\",\r\n            error\r\n          );\r\n        });\r\n    }\r\n  }\r\n\r\n  GetSignificantDigits() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=Common\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          const result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (\r\n              result.EntityResult.NumberOfSignificantDigits !== undefined &&\r\n              result.EntityResult.NumberOfSignificantDigits !== null\r\n            ) {\r\n              this.setState({\r\n                noOfSignificantDigits:\r\n                  result.EntityResult.NumberOfSignificantDigits,\r\n              });\r\n            }\r\n          } else {\r\n            console.log(\"Error in getSignificantDigits: \", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"TankShareholderAssociationComposite: Error occurred on getSignificantDigits\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankShareholderAssociationComposite:Error occured on geting RefrenceSourceLookUp Value\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    // clear session storage\r\n    Utilities.clearSessionStorage(this.componentName + \"GridState\");\r\n    window.removeEventListener(\"beforeunload\", () =>\r\n      Utilities.clearSessionStorage(this.componentName + \"GridState\")\r\n    );\r\n  };\r\n\r\n  GetTankShareholderList(shareholder) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetTankShareholderBySearchFilter +\r\n          \"?shareholderCode=\" +\r\n          shareholder,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              data: result.EntityResult,\r\n              isReadyToRender: true,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              data: [],\r\n              isReadyToRender: true,\r\n            });\r\n            console.log(\"Error in getTankshareholder:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error while getting getTankshareholder:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankShareholderAssociationComposite : Error while getting getTankshareholder list:\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleSelection = (items) => {\r\n    if (items.length == 0)\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedItems: items,\r\n        modShareholderList: this.state.shareholderList,\r\n      });\r\n    else\r\n      this.setState({\r\n        selectedItems: items,\r\n        modShareholderList: this.state.shareholderList,\r\n      });\r\n  };\r\n\r\n  ValidateShareHolderVolume(\r\n    modShareholderList,\r\n    value,\r\n    cellData,\r\n    modSelectedTankShareholderDetails\r\n  ) {\r\n    let noOfSignificantDigits = lodash.cloneDeep(\r\n      this.state.noOfSignificantDigits\r\n    );\r\n\r\n    var notification = {\r\n      message: \"\",\r\n      messageType: \"critical\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    let validation = true;\r\n    modShareholderList.forEach((shareholder) => {\r\n      tankShAsscVolumeValidationDef.forEach((item) => {\r\n        let err = \"\";\r\n        if (item.validator !== undefined) {\r\n          err = Utilities.validateField(\r\n            item.validator,\r\n            shareholder[item.field]\r\n          );\r\n        }\r\n        if (err !== \"\") {\r\n          validation = false;\r\n          notification.messageResultDetails.push({\r\n            keyFields: [\"AccessCardInfo_Shareholder\", item.displayName],\r\n            keyValues: [shareholder.ShareholderCode, shareholder[item.field]],\r\n            isSuccess: false,\r\n            errorMessage: err,\r\n          });\r\n\r\n          let index = modShareholderList.findIndex((item) => {\r\n            return item.ShareholderCode === cellData.rowData.ShareholderCode;\r\n          });\r\n          modShareholderList[index].Volume = null;\r\n\r\n          this.setState({\r\n            modShareholderList,\r\n          });\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        }\r\n      });\r\n    });\r\n    if (validation) {\r\n      let errorMsg = \"\";\r\n      if (parseFloat(value) > 100.0)\r\n        errorMsg = \"Commingling_IndividualStakeError\";\r\n      else {\r\n        let total_stake = 0;\r\n        modShareholderList.forEach((shareholder) => {\r\n          if (shareholder.Volume !== null && shareholder.Volume !== undefined)\r\n            total_stake += parseFloat(shareholder.Volume);\r\n        });\r\n\r\n        if (parseFloat(total_stake) > 100)\r\n          errorMsg = \"Commingling_CombinedStakeError\";\r\n        else {\r\n          modSelectedTankShareholderDetails.forEach((item) => {\r\n            if (item.ShareholderCode === cellData.rowData.ShareholderCode) {\r\n              item.NewLimitQuantity = Math.round(\r\n                item.TankCapacity * (value / 100),\r\n                noOfSignificantDigits\r\n              );\r\n\r\n              if (\r\n                item.TankGrossVolume !== 0 &&\r\n                item.TankGrossVolume !== null &&\r\n                item.TankGrossVolume !== undefined &&\r\n                item.TankGrossVolume !== \"\"\r\n              )\r\n                item.CalculatedGrossVolume = Math.round(\r\n                  (item.NewLimitQuantity / item.TankCapacity) *\r\n                    item.TankGrossVolume,\r\n                  noOfSignificantDigits\r\n                );\r\n\r\n              if (\r\n                item.TankNetVolume !== 0 &&\r\n                item.TankNetVolume !== null &&\r\n                item.TankNetVolume !== undefined &&\r\n                item.TankNetVolume !== \"\"\r\n              )\r\n                item.CalculatedNetVolume = Math.round(\r\n                  (item.NewLimitQuantity / item.TankCapacity) *\r\n                    item.TankNetVolume,\r\n                  noOfSignificantDigits\r\n                );\r\n            }\r\n          });\r\n          this.setState({\r\n            modSelectedTankShareholderDetails,\r\n          });\r\n        }\r\n      }\r\n\r\n      if (errorMsg !== \"\") {\r\n        let index = modShareholderList.findIndex((item) => {\r\n          return item.ShareholderCode === cellData.rowData.ShareholderCode;\r\n        });\r\n        modShareholderList[index].Volume = null;\r\n        this.setState({\r\n          isValidVolume: false,\r\n          errorMsg,\r\n          modShareholderList,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFieldChange = (value, cellData, type) => {\r\n    try {\r\n      let modSelectedTankShareholderDetails = lodash.cloneDeep(\r\n        this.state.modSelectedTankShareholderDetails\r\n      );\r\n\r\n      let modShareholderList = lodash.cloneDeep(this.state.modShareholderList);\r\n\r\n      if (type === \"shareholder\") {\r\n        let index = modShareholderList.findIndex((item) => {\r\n          return item.ShareholderCode === cellData.rowData.ShareholderCode;\r\n        });\r\n        modShareholderList[index].Volume = value;\r\n\r\n        this.setState(\r\n          {\r\n            modShareholderList,\r\n          },\r\n          () =>\r\n            this.ValidateShareHolderVolume(\r\n              modShareholderList,\r\n              value,\r\n              cellData,\r\n              modSelectedTankShareholderDetails\r\n            )\r\n        );\r\n      } else if (type === \"grossQuantity\") {\r\n        let index = modSelectedTankShareholderDetails.findIndex((item) => {\r\n          return (\r\n            item.ShareholderCode === cellData.rowData.ShareholderCode &&\r\n            item.TankCode === cellData.rowData.TankCode\r\n          );\r\n        });\r\n        modSelectedTankShareholderDetails[index].CalculatedGrossVolume = value;\r\n        this.setState({\r\n          modSelectedTankShareholderDetails,\r\n        });\r\n      } else {\r\n        let index = modSelectedTankShareholderDetails.findIndex((item) => {\r\n          return (\r\n            item.ShareholderCode === cellData.rowData.ShareholderCode &&\r\n            item.TankCode === cellData.rowData.TankCode\r\n          );\r\n        });\r\n\r\n        modSelectedTankShareholderDetails[index].NewLimitQuantity = value;\r\n\r\n        this.setState({\r\n          modSelectedTankShareholderDetails,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankShareholderAssociationComposite : Error in handleFieldChange\"\r\n      );\r\n    }\r\n  };\r\n\r\n  UpdateTankShareholderAssociate(tankShareholderInfoList) {\r\n    this.handleAuthenticationClose();\r\n    try {\r\n      let obj = {\r\n        Entity: tankShareholderInfoList,\r\n      };\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"TankShareholderInfo_SavedStatus\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [],\r\n            keyValues: [],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.UpdateTankShareholderAssociate,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnTankShareholderPrimeFunction\r\n              ),\r\n              modShareholderList: lodash.cloneDeep(this.state.shareholderList),\r\n            });\r\n            this.GetTankShareholderAssociation();\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            this.setState({\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.add,\r\n                fnTankShareholderPrimeFunction\r\n              ),\r\n            });\r\n            console.log(\r\n              \"Error in Update Tank Shareholder Info:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnTankShareholderPrimeFunction\r\n            ),\r\n          });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankShareholderAssociationComposite : Error in UpdateTankShareholderAssociate\"\r\n      );\r\n    }\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      this.setState({\r\n        modSelectedTankShareholderDetails: lodash.cloneDeep(\r\n          this.state.selectedTankShareholderDetails\r\n        ),\r\n        modShareholderList: lodash.cloneDeep(this.state.shareholderList),\r\n      });\r\n    } catch (error) {\r\n      console.log(\"TankShareholderAssociationComposite : Error in handleReset\");\r\n    }\r\n  };\r\n\r\n  ValidateSave(modSelectedTankShareholderDetails) {\r\n    let returnValue = true;\r\n    try {\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"TankShareholderInfo_SavedStatus\",\r\n        messageResultDetails: [],\r\n      };\r\n      if (modSelectedTankShareholderDetails.length > 0) {\r\n        modSelectedTankShareholderDetails.forEach((item) => {\r\n          tankShNewQtyValidationDef.forEach((col) => {\r\n            let err = \"\";\r\n            if (col.validator !== undefined) {\r\n              err = Utilities.validateField(col.validator, item[col.field]);\r\n            }\r\n\r\n            if (err !== \"\") {\r\n              notification.messageResultDetails.push({\r\n                keyFields: [\"AtgConfigure_TankCode\", col.displayName],\r\n                keyValues: [item.TankCode, item[col.field]],\r\n                isSuccess: false,\r\n                errorMessage: err,\r\n              });\r\n            }\r\n          });\r\n        });\r\n      } else {\r\n        notification.messageResultDetails.push({\r\n          keyFields: [],\r\n          keyValues: [],\r\n          isSuccess: false,\r\n          errorMessage: \"TankShareholderAssn_EnterProposedQtyMessage\",\r\n        });\r\n      }\r\n\r\n      if (notification.messageResultDetails.length > 0) {\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankShareholderAssociationComposite : Error in ValidateSave\"\r\n      );\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  handleUpdate = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempSelectedTankShareholderDetails = lodash.cloneDeep(this.state.tempSelectedTankShareholderDetails);\r\n\r\n      this.UpdateTankShareholderAssociate(tempSelectedTankShareholderDetails);\r\n\r\n    } catch (error) {\r\n      console.log(\"Tank shareholder Association Composite : Error in UpdateTankShareholderAssociation\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n      let modSelectedTankShareholderDetails = lodash.cloneDeep(\r\n        this.state.modSelectedTankShareholderDetails\r\n      );\r\n\r\n      let tempmodSelectedTankShareholderDetails = [];\r\n\r\n      modSelectedTankShareholderDetails.forEach((item) => {\r\n        if (\r\n          item.NewLimitQuantity !== null &&\r\n          item.NewLimitQuantity !== undefined &&\r\n          item.NewLimitQuantity !== \"\"\r\n        ) {\r\n          item.Active = true;\r\n          item.NewLimitQuantity = Utilities.convertStringtoDecimal(\r\n            item.NewLimitQuantity\r\n          );\r\n          tempmodSelectedTankShareholderDetails.push(item);\r\n          item.LimitQuantity = item.NewLimitQuantity;\r\n        }\r\n      });\r\n\r\n      if (this.ValidateSave(tempmodSelectedTankShareholderDetails))\r\n        {\r\n          let showAuthenticationLayout =this.props.userDetails.EntityResult.IsWebPortalUser !== true? true: false;\r\n        \r\n          let tempSelectedTankShareholderDetails = lodash.cloneDeep(tempmodSelectedTankShareholderDetails);\r\n          this.setState({ showAuthenticationLayout, tempSelectedTankShareholderDetails }, () => {\r\n            if (showAuthenticationLayout === false) {\r\n              this.handleUpdate();\r\n            }\r\n        });\r\n        }\r\n      else\r\n        this.setState({\r\n          saveEnabled: true,\r\n        });\r\n    } catch (error) {\r\n      console.log(\"TankShareholderAssociationComposite : Error in handleSave\");\r\n    }\r\n  };\r\n\r\n  GetTankShareholderAssociation() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetTankShareholderAssociation,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let tankShareholderDetails = lodash.cloneDeep(result.EntityResult);\r\n            let selectedItems = lodash.cloneDeep(this.state.selectedItems);\r\n            let selectedShareholder = lodash.cloneDeep(\r\n              this.state.selectedShareholder\r\n            );\r\n            let selectedTankShareholderDetails = lodash.cloneDeep(\r\n              result.EntityResult\r\n            );\r\n            let selectedTanks = [];\r\n            let dummyTankShareholderDetails = [];\r\n\r\n            selectedItems.forEach((item) => {\r\n              selectedTanks.push(item.Common_Code);\r\n              this.props.userDetails.EntityResult.ShareholderList.forEach(\r\n                (sh) => {\r\n                  dummyTankShareholderDetails.push({\r\n                    TankCode: item.Common_Code,\r\n                    ShareholderCode: sh,\r\n                    BaseProductCode: item.TankList_BaseProduct,\r\n                    LimitQuantity: 0,\r\n                    LimitQuantityPercentage: 0,\r\n                    VolumeUOM: item.TankList_Units,\r\n                    TankCapacity: item.TankList_Capacity,\r\n                    TankGrossVolume: item.TankList_GrossVolume,\r\n                    TankNetVolume: item.TankList_NetVolume,\r\n                  });\r\n                }\r\n              );\r\n            });\r\n\r\n            selectedTankShareholderDetails =\r\n              selectedTankShareholderDetails.filter((item) =>\r\n                selectedTanks.includes(item.TankCode)\r\n              );\r\n\r\n            dummyTankShareholderDetails.forEach((selectedTank) => {\r\n              let existing_tank_index =\r\n                selectedTankShareholderDetails.findIndex((tank) => {\r\n                  return (\r\n                    tank.TankCode === selectedTank.TankCode &&\r\n                    tank.BaseProductCode === selectedTank.BaseProductCode &&\r\n                    tank.ShareholderCode === selectedTank.ShareholderCode\r\n                  );\r\n                });\r\n\r\n              if (existing_tank_index < 0) {\r\n                selectedTank.CalculatedGrossVolume = 0;\r\n                selectedTank.CalculatedNetVolume = 0;\r\n                selectedTankShareholderDetails.push(selectedTank);\r\n              }\r\n            });\r\n            selectedTankShareholderDetails.forEach((item) => {\r\n              if (selectedShareholder !== \"All\") {\r\n                if (!selectedShareholder.includes(item.ShareholderCode)) {\r\n                  item.LimitQuantity = 0;\r\n                  item.CalculatedGrossVolume = 0;\r\n                }\r\n              } else {\r\n                let userShareholders =\r\n                  this.props.userDetails.EntityResult.ShareholderList;\r\n                if (userShareholders.indexOf(item.ShareholderCode) === -1) {\r\n                  item.LimitQuantity = 0;\r\n                  item.CalculatedGrossVolume = 0;\r\n                }\r\n              }\r\n              item.NewLimitQuantity = null;\r\n              item.LimitQuantityPercentage = parseFloat(\r\n                (item.LimitQuantity / item.TankCapacity) * 100\r\n              ).toFixed(this.state.noOfSignificantDigits);\r\n            });\r\n\r\n            this.setState({\r\n              tankShareholderDetails,\r\n              isDetails: true,\r\n              selectedTankShareholderDetails,\r\n              modSelectedTankShareholderDetails: lodash.cloneDeep(\r\n                selectedTankShareholderDetails\r\n              ),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.add,\r\n                fnTankShareholderPrimeFunction\r\n              ),\r\n            });\r\n          } else {\r\n            this.setState({\r\n              tankShareholderDetails: [],\r\n              isDetails: false,\r\n              saveEnabled: false,\r\n            });\r\n            console.log(\r\n              \"Error in getTankShareholderAssociationDetails:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            tankShareholderDetails: [],\r\n            isDetails: false,\r\n          });\r\n          console.log(\r\n            \"Error while getting TankShareholderAssociationDetails:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankShareholderAssociationComposite: Error in GetTankShareholderAssociation\"\r\n      );\r\n    }\r\n  }\r\n\r\n  handleEditTank = () => {\r\n    this.GetTankShareholderAssociation();\r\n  };\r\n\r\n  handleViewAuditTrail = () => {\r\n    try {\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"TankShareholderAssociationViewAuditTrailStatus\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [],\r\n            keyValues: [],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.GetTankShareholderAuditTrial,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let auditTrailList = result.EntityResult.Table;\r\n\r\n            if (Array.isArray(auditTrailList) && auditTrailList.length > 0) {\r\n              auditTrailList.forEach((item) => {\r\n                let time =\r\n                  new Date(item.LastUpdatedTime).toLocaleDateString() +\r\n                  \" \" +\r\n                  new Date(item.LastUpdatedTime).toLocaleTimeString();\r\n\r\n                item.LastUpdatedTime = time;\r\n              });\r\n            }\r\n            let operationsVisibilty = { ...this.state.operationsVisibility };\r\n            operationsVisibilty.shareholder = false;\r\n\r\n            this.setState({\r\n              auditTrailList: auditTrailList,\r\n              isReadyToRender: false,\r\n              isViewAuditTrail: true,\r\n              operationsVisibilty,\r\n            });\r\n          } else {\r\n            this.setState(\r\n              {\r\n                auditTrailList: [],\r\n                isReadyToRender: true,\r\n              },\r\n              () => {\r\n                notification.messageType = result.IsSuccess\r\n                  ? \"success\"\r\n                  : \"critical\";\r\n                notification.messageResultDetails[0].isSuccess =\r\n                  result.IsSuccess;\r\n                notification.messageResultDetails[0].errorMessage =\r\n                  result.ErrorList[0];\r\n                toast(\r\n                  <ErrorBoundary>\r\n                    <NotifyEvent\r\n                      notificationMessage={notification}\r\n                    ></NotifyEvent>\r\n                  </ErrorBoundary>,\r\n                  {\r\n                    autoClose:\r\n                      notification.messageType === \"success\" ? 10000 : false,\r\n                  }\r\n                );\r\n              }\r\n            );\r\n            console.log(\"Error in handleViewAuditTrail:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error while handleViewAuditTrail:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankShareholderAssociationComposite:Error occured on getting view audit trail\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  inValidVolumePopUp = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={!this.state.isValidVolume} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h5>{t(this.state.errorMsg)}</h5>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"AccessCardInfo_Ok\")}\r\n                onClick={() => {\r\n                  this.setState({ isValidVolume: true });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibility };\r\n      operationsVisibilty.shareholder = true;\r\n\r\n      this.setState(\r\n        {\r\n          isDetails: false,\r\n          selectedItems: [],\r\n          isViewAuditTrail: false,\r\n          isReadyToRender: true,\r\n          operationsVisibilty,\r\n        },\r\n        () => {\r\n          this.GetTankShareholderList(\r\n            this.state.selectedShareholder === \"All\"\r\n              ? \"\"\r\n              : this.state.selectedShareholder\r\n          );\r\n          this.getKPIList(\r\n            this.state.selectedShareholder === \"All\"\r\n              ? this.props.userDetails.EntityResult.PrimaryShareholder\r\n              : this.state.selectedShareholder\r\n          );\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankShareholderAssociationComposite:Error occured on Back click\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      this.setState(\r\n        {\r\n          selectedShareholder: shareholder,\r\n          isReadyToRender: false,\r\n          selectedItems: [],\r\n          isDetails: false,\r\n        },\r\n        () => {\r\n          this.GetTankShareholderList(shareholder === \"All\" ? \"\" : shareholder);\r\n          this.getKPIList(\r\n            shareholder === \"All\"\r\n              ? this.props.userDetails.EntityResult.PrimaryShareholder\r\n              : shareholder\r\n          );\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankShareholderAssociationComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            shareholders={this.state.allShareholder}\r\n            breadcrumbItem={this.props.activeItem}\r\n            onShareholderChange={this.handleShareholderSelectionChange}\r\n            selectedShareholder={this.state.selectedShareholder}\r\n            addVisible={false}\r\n            deleteVisible={false}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isViewAuditTrail ? (\r\n          <TankShareholderAssociationViewAuditTrailDetails\r\n            auditTrailList={this.state.auditTrailList}\r\n            handleBack={this.handleBack}\r\n          ></TankShareholderAssociationViewAuditTrailDetails>\r\n        ) : this.state.isReadyToRender ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <KPIDashboardLayout\r\n                kpiList={this.state.tankShareholderAssociationKPIList}\r\n                pageName=\"TankShareholderAssociation\"\r\n              ></KPIDashboardLayout>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n              <TankShareholderAssociationSummaryComposite\r\n                tableData={this.state.data.Table}\r\n                columnDetails={this.state.data.Column}\r\n                pageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                terminalsToShow={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .NoOfTerminalsToShow\r\n                }\r\n                selectedItems={this.state.selectedItems}\r\n                onSelectionChange={this.handleSelection}\r\n                handleViewAuditTrail={this.handleViewAuditTrail}\r\n                exportRequired={true}\r\n                exportFileName=\"TankShareholderAssociationList\"\r\n                columnPickerRequired={true}\r\n                selectionRequired={true}\r\n                columnGroupingRequired={true}\r\n                parentComponent={this.componentName}\r\n                isDetails={this.state.isDetails}\r\n                handleEditTank={this.handleEditTank}\r\n                isEnableModify={Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnTankShareholderPrimeFunction\r\n                )}\r\n                shareholderList={this.state.shareholderList}\r\n                modShareholderList={this.state.modShareholderList}\r\n                handleFieldChange={this.handleFieldChange}\r\n                selectedTankShareholderDetails={\r\n                  this.state.selectedTankShareholderDetails\r\n                }\r\n                modSelectedTankShareholderDetails={\r\n                  this.state.modSelectedTankShareholderDetails\r\n                }\r\n                handleSave={this.handleSave}\r\n                saveEnabled={this.state.saveEnabled}\r\n                handleReset={this.handleReset}\r\n                handleViewReport={this.handleViewReport}\r\n                selectedShareholder={this.state.selectedShareholder}\r\n                OverwriteGrossNetValues={this.state.OverwriteGrossNetValues}\r\n              ></TankShareholderAssociationSummaryComposite>\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : this.state.isEnable ? (\r\n          <LoadingPage message=\"Loading\"></LoadingPage>\r\n        ) : (\r\n          <Error errorMessage=\"Commingling_Enable\"></Error>\r\n        )}\r\n        {this.state.showReport ? this.renderModal() : \"\"}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n        {!this.state.isValidVolume ? this.inValidVolumePopUp() : null}\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.modify}\r\n            functionGroup={fnTankShareholderPrimeFunction}\r\n            handleOperation={this.handleUpdate}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TankShareholderAssociationComposite);\r\n\r\nTankShareholderAssociationComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport * as WjCore from \"@grapecity/wijmo\";\r\nimport { ReportViewer } from \"@grapecity/wijmo.react.viewer\";\r\nimport * as wjViewer from \"@grapecity/wijmo.viewer\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { connect } from \"react-redux\";\r\n\r\nTMReportViewer.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\n\r\nTMReportViewer.defaultProps = {\r\n  parameters: {},\r\n};\r\n\r\nWjCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nfunction TMReportViewer({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  parameters,\r\n  filePath,\r\n  ...props\r\n}) {\r\n  //   const [proxyHost, setProxyHost] = useState(\r\n  //     \"http://localhost:8888/TMWebProxyAPI/\"\r\n  //   );\r\n  //   const [reportServiceHost, setReportServiceHost] = useState(\r\n  //     \"http://localhost:5632/\"\r\n  //   );\r\n  //   const [reportUrl, setReportUrl] = useState(proxyHost + \"api/report\");\r\n  //   const [filePath, setFilePath] = useState(\r\n  //     \"TM/\" + \"TMReports/\" + \"CarrierCompanyReport\"\r\n  //   );\r\n  const reportUrl = proxyServerHost + \"api/report\";\r\n  //const filePath = \"TM/\" + \"TMReports/\" + reportName;\r\n\r\n  const beforeXhrRequestSend = (s, event) => {\r\n    // use this event for Authorization purpose\r\n    const prevBeforeSend = event.settings.beforeSend;\r\n    event.settings.beforeSend = function (xhr) {\r\n      prevBeforeSend && prevBeforeSend(xhr);\r\n      //here you may add the params for XMLHttpRequest as required\r\n      if (!props.userDetails.EntityResult.IsWebPortalUser)\r\n        xhr.withCredentials = true;\r\n      if (xhr.URL_DEBUG.indexOf(\"parameters\") > -1) {\r\n        xhr.onreadystatechange = function () {\r\n          if (this.readyState === 4 && this.status === 200) {\r\n            var host = s.hostElement;\r\n            setTimeout(() => {\r\n              var splitter = host.querySelector(\".wj-viewer-splitter\");\r\n              var param = host\r\n                .querySelector(\".wj-viewer-tabsleft\")\r\n                .querySelectorAll(\"li\")[2];\r\n              if (!param.disabled) {\r\n                param.className = \"hidden\";\r\n                splitter.click();\r\n              }\r\n            }, 1000);\r\n          }\r\n        };\r\n      }\r\n    };\r\n  };\r\n  let header = {\r\n    Authorization: \"Bearer \" + props.tokenDetails.tokenInfo,\r\n  };\r\n\r\n  // let header = {\r\n  //   Authorization: \"Bearer \" + \"fiewjfjewifi\",\r\n  // };\r\n\r\n  const initViewer = (s, event) => {\r\n    wjViewer._ReportService.prototype.load = function (data) {\r\n      var _this = this;\r\n      var promise = new wjViewer._Promise();\r\n      if (!this._checkReportController(promise)) {\r\n        return promise;\r\n      }\r\n      this.httpRequest(this._getReportInstancesUrl(), {\r\n        method: \"POST\",\r\n        data: data,\r\n      }).then(\r\n        function (xhr) {\r\n          var v = wjViewer._parseReportExecutionInfo(xhr.responseText);\r\n          _this._instanceId = v.id;\r\n          _this._status = wjViewer._ExecutionStatus.loaded;\r\n          _this._outlinesLocation = v.outlinesLocation;\r\n          _this._statusLocation = v.statusLocation.replace(\r\n            reportServiceHost,\r\n            proxyServerHost\r\n          );\r\n          _this._pageSettingsLocation = v.pageSettingsLocation;\r\n          _this._featuresLocation = v.featuresLocation;\r\n          _this._parametersLocation = v.parametersLocation;\r\n          promise.resolve(v);\r\n        },\r\n        function (xhr) {\r\n          promise.reject(_this._getError(xhr));\r\n        }\r\n      );\r\n      return promise;\r\n    };\r\n  };\r\n\r\n  //console.log(props.userDetails.EntityResult.IsWebPortalUser, header);\r\n  return (\r\n    <div>\r\n      {props.userDetails.EntityResult.IsWebPortalUser ? (\r\n        <div>\r\n          <ReportViewer\r\n            requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <ReportViewer\r\n            //requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TMReportViewer);\r\n","import React from \"react\";\r\nimport { Modal, Button, Header } from \"@scuf/common\";\r\nimport TMReportViewer from \"../Common/TMReportViewer\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nReportDetails.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  filePath: PropTypes.string.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  showReport: PropTypes.bool.isRequired,\r\n  handleModalClose: PropTypes.func.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\nReportDetails.defaultProps = {\r\n  parameters: {},\r\n};\r\nexport default function ReportDetails({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  filePath,\r\n  handleBack,\r\n  showReport,\r\n  handleModalClose,\r\n  parameters,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <Modal\r\n      style={{ padding: \"0px\" }}\r\n      size=\"fullscreen\"\r\n      open={showReport}\r\n      // onClose={handleModalClose}\r\n    >\r\n      <div>\r\n        <Header title={t(\"Header_TerminalManager\")} menu={false} />\r\n        <TMReportViewer\r\n          proxyServerHost={proxyServerHost}\r\n          reportServiceHost={reportServiceHost}\r\n          filePath={filePath}\r\n          parameters={parameters}\r\n        />\r\n        <div style={{ marginTop: \"10px\", marginLeft: \"20px\" }}>\r\n          <Button\r\n            className=\"backButton\"\r\n            onClick={handleBack}\r\n            content={t(\"Report_Back\")}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","WijmoGrid","flex","setFlex","translator","useTranslation","_getData","pageLength","CollectionView","sourceData","pageSize","setData","rowsPerPage","theGrid","React","theSearch","gridFilter","pagingComponent","colPicker","selectedRows","selectionRequired","selector","gridInitialized","grid","customizeFilterConditions","onRowClick","addEventListener","hostElement","e","ht","hitTest","target","closest","classList","includes","cellType","wjGrid","Cell","rowData","rows","row","dataItem","selectionMode","wjCore","select","Selector","itemChecked","s","singleSelection","filter","isSelected","current","loadash","forEach","onSelectionHandle","r","selectedRow","showCheckAll","column","rowHeaders","columns","headersVisibility","HeadersVisibility","All","useEffect","control","push","selectedItems","refresh","localStorage","getItem","parentComponent","gridState","JSON","parse","newFlex","col","matchedCol","colSetting","binding","visible","filterDefinition","collectionView","deferUpdate","sortDescriptions","clear","i","sortDesc","property","ascending","groupDescriptions","sessionStorage","gridSessionState","moveToPage","pageCount","pageIndex","text","searchText","columnPickerRequired","itemsSource","checkedMemberPath","displayMemberPath","lostFocus","addHandler","hidePopup","exportExcel","gridFlex","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","exportFileName","displayValues","columnDetail","Name","PopOver","terminalCodes","split","terminalsToShow","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","saveGridState","group","document","getElementsByClassName","chkbx","parentNode","sessionState","setItem","stringify","FlexGridFilter","operator","Operator","header","descending","apply","conditions","search","selectAll","and","or","cancel","stringOperators","op","EQ","NE","BW","EW","CT","NC","numberOperators","GT","LT","GE","LE","dateOperators","booleanOperators","getWidth","columnDetails","window","screen","width","WidthPx","parseInt","WidthPercentage","FlexGridSearch","class","ref","id","actionType","event","host","offsetHeight","focus","showPopup","PopupPosition","Below","preventDefault","colPickerClickHandler","exportRequired","fontSize","top","columnGroupingRequired","GroupPanel","FlexGrid","autoGenerateColumns","alternatingRowStep","autoRowHeights","initialized","virtualizationThreshold","onUpdatedView","FlexGridColumn","minWidth","isReadOnly","wordWrap","align","FlexGridCellTemplate","template","context","conditionalRowStyleCheck","conditionalRowStyles","ListBox","picker","initializedPicker","CollectionViewNavigator","headerFormat","byPage","cv","TankShareholderAssociationSummaryComposite","tableData","onSelectionChange","handleViewAuditTrail","isDetails","handleEditTank","isEnableModify","modShareholderList","handleFieldChange","modSelectedTankShareholderDetails","handleSave","saveEnabled","handleReset","handleViewReport","OverwriteGrossNetValues","decimalDisplayValues","cellData","toLocaleString","handleCustomEditTextBox","rowIndex","field","CalculatedGrossVolume","LimitQuantity","WijmoGridComposite","DataTable","Column","editFieldType","renderer","customEditRenderer","editable","initialWidth","TankShareholderAssociationViewAuditTrailDetails","auditTrailList","handleBack","scrollable","marginBottom","el","getElementById","innerHTML","iframe","createElement","doc","body","appendChild","contentWindow","str1","substring","indexOf","str2","write","close","print","setTimeout","removeChild","TankShareholderAssociationComposite","isReadyToRender","lookUpData","noOfSignificantDigits","isViewAuditTrail","tankShareholderAssociationKPIList","allShareholder","shareholderList","selectedTankShareholderDetails","showReport","isEnable","isValidVolume","errorMsg","showAuthenticationLayout","tempSelectedTankShareholderDetails","componentName","handleModalBack","reportServiceURI","componentWillUnmount","removeEventListener","handleSelection","items","index","findIndex","ShareholderCode","Volume","ValidateShareHolderVolume","TankCode","NewLimitQuantity","handleUpdate","UpdateTankShareholderAssociate","tempmodSelectedTankShareholderDetails","Active","ValidateSave","IsWebPortalUser","GetTankShareholderAssociation","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","Table","Array","isArray","time","LastUpdatedTime","operationsVisibility","toast","NotifyEvent","notificationMessage","autoClose","inValidVolumePopUp","GetTankShareholderList","getKPIList","PrimaryShareholder","handleShareholderSelectionChange","handleAuthenticationClose","IsArchived","getLookUpData","clearStorage","EnableCommingling","toUpperCase","ShareholderList","splice","renderModal","path","join","Constants","paramValues","Culture","UICulture","readonly","ReportDetails","handleModalClose","proxyServerHost","reportServiceHost","filePath","parameters","FunctionsList","functionGroups","view","fnKPIInformation","objKPIRequestData","PageName","kpiTankShareholderAssociationList","InputParameters","ListKPIDetails","GetSignificantDigits","NumberOfSignificantDigits","validation","tankShAsscVolumeValidationDef","err","validator","displayName","parseFloat","total_stake","Math","round","TankCapacity","TankGrossVolume","TankNetVolume","CalculatedNetVolume","tankShareholderInfoList","obj","Entity","modify","fnTankShareholderPrimeFunction","tankShNewQtyValidationDef","tankShareholderDetails","selectedTanks","dummyTankShareholderDetails","Common_Code","sh","BaseProductCode","TankList_BaseProduct","LimitQuantityPercentage","VolumeUOM","TankList_Units","TankList_Capacity","TankList_GrossVolume","TankList_NetVolume","selectedTank","tank","toFixed","activeItem","KPIDashboardLayout","kpiList","pageName","PageAttibutes","WebPortalListPageSize","NoOfTerminalsToShow","LoadingPage","Error","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","UserName","TMReportViewer","reportUrl","beforeXhrRequestSend","prevBeforeSend","settings","beforeSend","xhr","withCredentials","URL_DEBUG","onreadystatechange","readyState","status","splitter","querySelector","param","querySelectorAll","click","Authorization","initViewer","wjViewer","prototype","load","_this","promise","_checkReportController","httpRequest","_getReportInstancesUrl","method","v","responseText","_instanceId","_status","loaded","_outlinesLocation","outlinesLocation","_statusLocation","statusLocation","replace","_pageSettingsLocation","pageSettingsLocation","_featuresLocation","featuresLocation","_parametersLocation","parametersLocation","resolve","reject","_getError","ReportViewer","requestHeaders","height","serviceUrl","beforeSendRequest","WjCore","title","menu","remove","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration"],"sourceRoot":""}