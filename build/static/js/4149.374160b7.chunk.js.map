{"version":3,"file":"static/js/4149.374160b7.chunk.js","mappings":"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","sources":["Components/UIBase/Details/TruckShipmentDetails.jsx","Components/UIBase/Details/TruckShipmentTrailerDetails.jsx","Components/Composite/Details/TruckShipmentDetailsComposite.jsx","Components/Composite/Details/TruckShipmentSealDetailsComposite.jsx","Components/UIBase/Common/AssociatedTerminals.jsx","Components/UIBase/Details/TruckShipmentViewAuditTrailDetails.jsx","Components/UIBase/Details/TruckShipmentViewLoadingDetails.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Select,\r\n  Modal,\r\n  Icon,\r\n  Input,\r\n  DatePicker,\r\n  Tab,\r\n  Checkbox,\r\n  Button,\r\n  Accordion,\r\n  Badge,\r\n  Tooltip,\r\n} from \"@scuf/common\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport { fnSBC } from \"../../../JS/FunctionGroups\";\r\nimport {\r\n  getOptionsWithSelect,\r\n  getCurrentDateFormat,\r\n  handleIsRequiredCompartmentCell,\r\n} from \"../../../JS/functionalUtilities\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\n//import { convertStringtoDecimal } from \"../../../JS/Utilities\";\r\n\r\nTruckShipmentDetails.propTypes = {\r\n  shipment: PropTypes.object.isRequired,\r\n  modShipment: PropTypes.object.isRequired,\r\n  modCustomValues: PropTypes.object.isRequired,\r\n  //modAssociations: PropTypes.array.isRequired,\r\n  modCompartmentPlans: PropTypes.array.isRequired,\r\n  modProductPlans: PropTypes.array.isRequired,\r\n  modLoadingDetails: PropTypes.array.isRequired,\r\n  loadingDetails: PropTypes.array.isRequired,\r\n  expandedRows: PropTypes.array.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    terminalCodes: PropTypes.array,\r\n    quantityUOMOptions: PropTypes.array,\r\n    vehicleOptions: PropTypes.array,\r\n    driverOptions: PropTypes.array,\r\n    compSeqOptions: PropTypes.array,\r\n    finishedProductOptions: PropTypes.array,\r\n    shipmentFromOptions: PropTypes.array,\r\n    customerDestinationOptions: PropTypes.array,\r\n    transloadingOptions: PropTypes.array,\r\n    marineReceiptCompCodes: PropTypes.array,\r\n    marineReceiptCodes: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  handleCompartmentPlanCellDataEdit: PropTypes.func.isRequired,\r\n  handleProductPlanCellDataEdit: PropTypes.func.isRequired,\r\n  selectedProductPlans: PropTypes.array.isRequired,\r\n  selectedCompartmentPlans: PropTypes.array.isRequired,\r\n  handleCompartmentPlansSelectionChange: PropTypes.func.isRequired,\r\n  handleProductPlansSelectionChange: PropTypes.func.isRequired,\r\n  handleAddCompartmentPlan: PropTypes.func.isRequired,\r\n  handleDeleteCompartmentPlan: PropTypes.func.isRequired,\r\n  handleAddProductPlan: PropTypes.func.isRequired,\r\n  handleDeleteProductPlan: PropTypes.func.isRequired,\r\n  onActiveStatusChange: PropTypes.func.isRequired,\r\n  onVehicleChange: PropTypes.func.isRequired,\r\n  onVehicleSearchChange: PropTypes.func.isRequired,\r\n  onDriverSearchChange: PropTypes.func.isRequired,\r\n  toggleExpand: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  //IsWebPortalUser: PropTypes.bool.isRequired,\r\n  isDisableSubmitForApproval: PropTypes.bool.isRequired,\r\n  shipmentType: PropTypes.string.isRequired,\r\n  attributeValidationErrors: PropTypes.object.isRequired,\r\n  handleAttributeCellDataEdit: PropTypes.func.isRequired,\r\n  handleCompAttributeCellDataEdit: PropTypes.func.isRequired,\r\n  handleProdPlanAttributeCellDataEdit: PropTypes.func.isRequired,\r\n  onTabChange: PropTypes.func.isRequired,\r\n  attributeToggleExpand: PropTypes.func.isRequired,\r\n  handleTopUpDecantApproval: PropTypes.func.isRequired,\r\n  selectedAttributeList: PropTypes.object.isRequired,\r\n  activeTab: PropTypes.number.isRequired,\r\n  compartmentDetailsPageSize: PropTypes.number.isRequired,\r\n  prodTypeTab: PropTypes.array.isRequired,\r\n  compTypeTab: PropTypes.array.isRequired,\r\n  LoadTypeTab: PropTypes.array.isRequired,\r\n  customerInventoryTab: PropTypes.array.isRequired,\r\n  productAllocationTab: PropTypes.array.isRequired,\r\n  //productAllocationShareholderTab: PropTypes.array.isRequired,\r\n  customerInventory: PropTypes.array.isRequired,\r\n  isSlotbookinginUI: PropTypes.bool.isRequired,\r\n  productAllocationList: PropTypes.array.isRequired,\r\n  productShareholderAllocationList: PropTypes.array.isRequired,\r\n  ProdAllocEntity: PropTypes.string.isRequired,\r\n  handleCellCheck: PropTypes.func.isRequired,\r\n  handleLoadingDetailsChange: PropTypes.func.isRequired,\r\n  ddlTopUpDecantStatus: PropTypes.string.isRequired,\r\n  isMarineTransloading: PropTypes.bool.isRequired,\r\n  isRailTransloading: PropTypes.bool.isRequired,\r\n  isPlanned: PropTypes.bool.isRequired,\r\n  updateTransloadingInfo: PropTypes.func.isRequired,\r\n  handleTransLoadCompSeq: PropTypes.func,\r\n  shipmentSource: PropTypes.number,\r\n  isAutoGeneratedShipmentCode: PropTypes.bool.isRequired,\r\n  isEnforcingEnabled: PropTypes.bool.isRequired,\r\n  isBonded: PropTypes.bool.isRequired,\r\n  overrideSequence: PropTypes.func.isRequired,\r\n  isOverrideSequenceButtonEnabled: PropTypes.bool.isRequired,\r\n  updateShipmentBondNo: PropTypes.func.isRequired,\r\n  updateShipmentAllowed: PropTypes.bool.isRequired,\r\n  ShipmentBay: PropTypes.string.isRequired,\r\n  UpdateShipmentDriver: PropTypes.func.isRequired,\r\n  isWebportalCarrierRoleUser: PropTypes.bool.isRequired,\r\n};\r\n\r\nTruckShipmentDetails.defaultProps = {\r\n  listOptions: {\r\n    quantityUOMOptions: [],\r\n    vehicleOptions: [],\r\n    terminalCodes: [],\r\n    driverOptions: [],\r\n    compSeqOptions: [],\r\n    finishedProductOptions: [],\r\n    customerDestinationOptions: {},\r\n    shipmentFromOptions: [],\r\n    transloadingOptions: [],\r\n  },\r\n  isEnterpriseNode: false,\r\n  //IsWebPortalUser: false,\r\n  isDisableSubmitForApproval: true,\r\n  isSlotbookinginUI: false,\r\n  isEnforcingEnabled: false,\r\n  isBonded: false,\r\n  ShipmentBay: \"\",\r\n};\r\n\r\nexport default function TruckShipmentDetails({\r\n  shipment,\r\n  modShipment,\r\n  modCustomValues,\r\n  modCompartmentPlans,\r\n  modProductPlans,\r\n  modLoadingDetails,\r\n  loadingDetails,\r\n  validationErrors,\r\n  listOptions,\r\n  onFieldChange,\r\n  onDateTextChange,\r\n  onAllTerminalsChange,\r\n  selectedProductPlans,\r\n  selectedCompartmentPlans,\r\n  handleCompartmentPlansSelectionChange,\r\n  handleProductPlansSelectionChange,\r\n  handleCompartmentPlanCellDataEdit,\r\n  handleProductPlanCellDataEdit,\r\n  handleAddCompartmentPlan,\r\n  handleDeleteCompartmentPlan,\r\n  handleAddProductPlan,\r\n  handleDeleteProductPlan,\r\n  onActiveStatusChange,\r\n  onVehicleChange,\r\n  onVehicleSearchChange,\r\n  onDriverSearchChange,\r\n  isEnterpriseNode,\r\n  shipmentType,\r\n  prodTypeTab,\r\n  compTypeTab,\r\n  LoadTypeTab,\r\n  customerInventoryTab,\r\n  expandedRows,\r\n  toggleExpand,\r\n  attributeValidationErrors,\r\n  handleAttributeCellDataEdit,\r\n  handleCompAttributeCellDataEdit,\r\n  handleProdPlanAttributeCellDataEdit,\r\n  selectedAttributeList,\r\n  compartmentDetailsPageSize,\r\n  attributeToggleExpand,\r\n  customerInventory,\r\n  activeTab,\r\n  onTabChange,\r\n  //IsWebPortalUser,\r\n  handleTopUpDecantApproval,\r\n  //isDisableSubmitForApproval,\r\n  isSlotbookinginUI,\r\n  productAllocationTab,\r\n  handleCellCheck,\r\n  handleLoadingDetailsChange,\r\n  productAllocationList,\r\n  productShareholderAllocationList,\r\n  ProdAllocEntity,\r\n  ddlTopUpDecantStatus,\r\n  isMarineTransloading,\r\n  isRailTransloading,\r\n  isPlanned,\r\n  updateTransloadingInfo,\r\n  handleTransLoadCompSeq,\r\n  shipmentSource,\r\n  isAutoGeneratedShipmentCode,\r\n  isEnforcingEnabled,\r\n  isBonded,\r\n  overrideSequence,\r\n  isOverrideSequenceButtonEnabled,\r\n  updateShipmentBondNo,\r\n  updateShipmentAllowed,\r\n  ShipmentBay,\r\n  UpdateShipmentDriver,\r\n  isWebportalCarrierRoleUser\r\n}) {\r\n  const [t] = useTranslation();\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [modCellData, setModCellData] = useState({});\r\n  const [modTopUpEnable, setModTopUpEnable] = useState(false);\r\n  if (\r\n    modCustomValues[\"EnableTopUpDecant\"] === \"TRUE\" &&\r\n    modCustomValues[\"TopUpDecantAllow\"] === \"TRUE\" &&\r\n    modCustomValues[\"f_ViewShipTopUpDecantApprovalAccess\"] === \"TRUE\" &&\r\n    modCustomValues[\"TopUpDecantStatusText\"] ===\r\n      Constants.TopUpDecantApprovalStatus.SUBMITTED\r\n  ) {\r\n    modCustomValues[\"TopUpDecantStatusVisible\"] = \"FALSE\";\r\n    modCustomValues[\"TopUpDecantStatusDropDownVisible\"] = \"TRUE\";\r\n  }\r\n  let submitBtnName =\r\n    modCustomValues[\"f_ViewShipTopUpDecantApprovalAccess\"] === \"TRUE\"\r\n      ? \"ViewShipmentTopUpDecant_AutoApproved\"\r\n      : \"ViewShipmentTopUpDecant_SubmitForApproved\";\r\n\r\n  if (modCustomValues[\"TopUpDecantApprovalEnabled\"] === \"TRUE\")\r\n    submitBtnName = \"ViewShipmentTopUpDecant_AutoApproved\";\r\n\r\n  function displayTMModalForceCompleteConfirm() {\r\n    return (\r\n      <Modal open={modelOpen} size=\"small\">\r\n        <Modal.Content>\r\n          <div>\r\n            <b>{t(\"ForceToComplete\")}</b>\r\n          </div>\r\n        </Modal.Content>\r\n        <Modal.Footer>\r\n          <Button\r\n            type=\"secondary\"\r\n            content={t(\"Cancel\")}\r\n            onClick={() => {\r\n              setModelOpen(false);\r\n              handleCellCheck(modCellData, false);\r\n            }}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            content={t(\"Confirm\")}\r\n            onClick={() => {\r\n              setModelOpen(false);\r\n              handleCellCheck(modCellData, true);\r\n            }}\r\n          />\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  const handleAttributeType = (data) => {\r\n    const attribute = data.rowData;\r\n\r\n    const handleAttributeDateValue = (dateval) => {\r\n      var chars = dateval.split(\"-\");\r\n      return new Date(chars[0], chars[1] - 1, chars[2]);\r\n    };\r\n    const convertAttributeDatetoString = (data, value) => {\r\n      var Dateval = new Date(value);\r\n      value =\r\n        Dateval.getFullYear() +\r\n        \"-\" +\r\n        (\"0\" + (Dateval.getMonth() + 1)).slice(-2) +\r\n        \"-\" +\r\n        (\"0\" + Dateval.getDate()).slice(-2);\r\n      attribute.AttributeType === Constants.shipmentType.COMPARTMENT\r\n        ? handleCompAttributeCellDataEdit(data, value)\r\n        : handleProdPlanAttributeCellDataEdit(data, value);\r\n      //handleCompAttributeCellDataEdit(attribute,value);\r\n    };\r\n\r\n    try {\r\n      return attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.STRING.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) =>\r\n            attribute.AttributeType === Constants.shipmentType.COMPARTMENT\r\n              ? handleCompAttributeCellDataEdit(data, value)\r\n              : handleProdPlanAttributeCellDataEdit(data, value)\r\n          }\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.INT.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) =>\r\n            attribute.AttributeType === Constants.shipmentType.COMPARTMENT\r\n              ? handleCompAttributeCellDataEdit(data, value)\r\n              : handleProdPlanAttributeCellDataEdit(data, value)\r\n          }\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.FLOAT.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.LONG.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.DOUBLE.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) =>\r\n            attribute.AttributeType === Constants.shipmentType.COMPARTMENT\r\n              ? handleCompAttributeCellDataEdit(data, value)\r\n              : handleProdPlanAttributeCellDataEdit(data, value)\r\n          }\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.BOOL.toLowerCase() ? (\r\n        <Checkbox\r\n          checked={\r\n            attribute.AttributeValue.toString().toLowerCase() === \"true\"\r\n              ? true\r\n              : false\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) =>\r\n            attribute.AttributeType === Constants.shipmentType.COMPARTMENT\r\n              ? handleCompAttributeCellDataEdit(data, value)\r\n              : handleProdPlanAttributeCellDataEdit(data, value)\r\n          }\r\n        ></Checkbox>\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.DATETIME.toLowerCase() ? (\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n            attribute.AttributeValue === undefined ||\r\n            attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : handleAttributeDateValue(attribute.AttributeValue)\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          showYearSelector=\"true\"\r\n          minuteStep={1}\r\n          onChange={(value) => convertAttributeDatetoString(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : null;\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentDetails:Error occured on handleAttributeType\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleIsRequiredCompAttributes = (data) => {\r\n    return data.rowData.IsMandatory ? (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n        <div class=\"ui red circular empty label badge  circle-padding\" />\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const attributeExpanderTemplate = (data) => {\r\n    //const open = expandedRows.includes(data.rowData);\r\n    const open =\r\n      expandedRows.findIndex((x) => x.SeqNumber === data.rowData.SeqNumber) >= 0\r\n        ? true\r\n        : false;\r\n\r\n    return (\r\n      <div\r\n        onClick={() => attributeToggleExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        <span>{open ? t(\"Hide_Attributes\") : t(\"View_Attributes\")}</span>\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"caret-up\" : \"caret-down\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  function attributeRowExpansionTemplate(data) {\r\n    return Array.isArray(data.AttributesforUI) &&\r\n      data.AttributesforUI.length > 0 ? (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable\r\n          data={data.AttributesforUI}\r\n          rows={compartmentDetailsPageSize}\r\n        >\r\n          {isEnterpriseNode ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"TerminalCode\"\r\n              field=\"TerminalCode\"\r\n              header={t(\"CompartmentTerminal\")}\r\n              editable={false}\r\n            ></DataTable.Column>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"AttributeName\"\r\n            header={t(\"CompartmentAttributeName\")}\r\n            renderer={handleIsRequiredCompAttributes}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            header={t(\"CompartmentAttributeValue\")}\r\n            renderer={handleAttributeType}\r\n          />\r\n          {Array.isArray(data.AttributesforUI) &&\r\n          data.AttributesforUI.length > compartmentDetailsPageSize ? (\r\n            <DataTable.Pagination />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </DataTable>\r\n      </div>\r\n    ) : (\r\n      <div className=\"compartmentIcon\">\r\n        <div className=\"gridButtonAlignLeft\">\r\n          {t(\"CustomerInventory_NoRecordsFound\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleCustomEditDropDown = (cellData, dropDownoptions, type) => {\r\n    try {\r\n      if (type === Constants.shipmentType.COMPARTMENT)\r\n        return (\r\n          <Select\r\n            className=\"selectDropwdown\"\r\n            value={modCompartmentPlans[cellData.rowIndex][cellData.field]}\r\n            fluid\r\n            options={dropDownoptions}\r\n            onChange={(value) =>\r\n              handleCompartmentPlanCellDataEdit(value, cellData)\r\n            }\r\n            onFocus={() => {\r\n              if (\r\n                cellData.field === \"TransCompSequenceNumber\" &&\r\n                modCompartmentPlans[cellData.rowIndex][\"TransReceiptCode\"] !==\r\n                  null\r\n              )\r\n                handleTransLoadCompSeq(\r\n                  modCompartmentPlans[cellData.rowIndex][\"TransReceiptCode\"]\r\n                );\r\n            }}\r\n            indicator=\"required\"\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        );\r\n      else\r\n        return (\r\n          <Select\r\n            className=\"selectDropwdown\"\r\n            value={modProductPlans[cellData.rowIndex][cellData.field]}\r\n            fluid\r\n            options={dropDownoptions}\r\n            onChange={(value) => handleProductPlanCellDataEdit(value, cellData)}\r\n            indicator=\"required\"\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        );\r\n    } catch (error) {\r\n      console.log(\r\n        shipmentType + \":Error occured on handleCustomEditDropDown\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  const handleCustomerEditDropDown = (cellData, type) => {\r\n    let customerOptions = [];\r\n    if (\r\n      listOptions.customerDestinationOptions !== undefined &&\r\n      listOptions.customerDestinationOptions !== null\r\n    ) {\r\n      Object.keys(listOptions.customerDestinationOptions).forEach((customer) =>\r\n        customerOptions.push({ text: customer, value: customer })\r\n      );\r\n    }\r\n    return handleCustomEditDropDown(cellData, customerOptions, type);\r\n  };\r\n  const handleDestinationEditDropDown = (cellData, type) => {\r\n    let destinationOptions = [];\r\n    if (\r\n      listOptions.customerDestinationOptions !== undefined &&\r\n      listOptions.customerDestinationOptions !== null\r\n    ) {\r\n      if (\r\n        listOptions.customerDestinationOptions[\r\n          cellData.rowData.CustomerCode\r\n        ] !== undefined &&\r\n        Array.isArray(\r\n          listOptions.customerDestinationOptions[cellData.rowData.CustomerCode]\r\n        )\r\n      ) {\r\n        listOptions.customerDestinationOptions[\r\n          cellData.rowData.CustomerCode\r\n        ].forEach((destination) =>\r\n          destinationOptions.push({ text: destination, value: destination })\r\n        );\r\n      }\r\n    }\r\n    return handleCustomEditDropDown(cellData, destinationOptions, type);\r\n  };\r\n  const handleCustomEditTextBox = (cellData, type) => {\r\n    if (type === Constants.shipmentType.COMPARTMENT)\r\n      return (\r\n        <Input\r\n          fluid\r\n          value={modCompartmentPlans[cellData.rowIndex][cellData.field]}\r\n          onChange={(value) =>\r\n            handleCompartmentPlanCellDataEdit(value, cellData)\r\n          }\r\n          reserveSpace={false}\r\n        />\r\n      );\r\n    else\r\n      return (\r\n        <Input\r\n          fluid\r\n          value={modProductPlans[cellData.rowIndex][cellData.field]}\r\n          onChange={(value) => handleProductPlanCellDataEdit(value, cellData)}\r\n          reserveSpace={false}\r\n        />\r\n      );\r\n  };\r\n\r\n  const decimalDisplayValues = (cellData) => {\r\n    const { value } = cellData;\r\n    if (typeof value === \"number\" && value !== null) {\r\n      return value.toLocaleString();\r\n    } else {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  const getBlendSpecData = () => {\r\n    //let compBlendInfo = \"\";\r\n    //let stringLength = 0;\r\n\r\n    let blendSpec = [];\r\n\r\n    for (let idx = 0; idx < modLoadingDetails.length; idx++) {\r\n      let compStatus = Constants.ShipmentCompartmentStatus[\"EMPTY\"];\r\n      compStatus = modLoadingDetails[idx]?.Compartment_Status\r\n        ? Constants.ShipmentCompartmentStatus[\r\n            modLoadingDetails[idx]?.Compartment_Status\r\n          ]\r\n        : compStatus;\r\n\r\n      if (compStatus === Constants.ShipmentCompartmentStatus.EMPTY) {\r\n        blendSpec.push(\r\n          <>\r\n            <Tooltip\r\n              element={\r\n                <Badge className=\"EmptyLabelStyle\">\r\n                  {modLoadingDetails[idx]?.SeqNo}\r\n                </Badge>\r\n              }\r\n              content={t(\"Spec_ToolTip_NotLoaded\")}\r\n              size=\"mini\"\r\n            />\r\n          </>\r\n        );\r\n        //compBlendInfo = compBlendInfo + `<span class=\"EmptyLabelStyle\">${modLoadingDetails[idx]?.SeqNo}</span>`;\r\n      } else {\r\n        modLoadingDetails[idx]?.BlendState === 1\r\n          ? blendSpec.push(\r\n              <>\r\n                <Tooltip\r\n                  element={\r\n                    <Badge className=\"InSpecLabelStyle\" color=\"green\">\r\n                      {modLoadingDetails[idx]?.SeqNo}\r\n                    </Badge>\r\n                  }\r\n                  content={t(\"Spec_ToolTip_InSpec\")}\r\n                  size=\"mini\"\r\n                />\r\n              </>\r\n            )\r\n          : //compBlendInfo = compBlendInfo + `<span class=\"InSpecLabelStyle\">${modLoadingDetails[idx]?.SeqNo}</span>`\r\n          modLoadingDetails[idx]?.BlendState === 2\r\n          ? blendSpec.push(\r\n              <>\r\n                <Tooltip\r\n                  element={\r\n                    <Badge\r\n                      className=\"OffSpecCorrectableLabelStyle\"\r\n                      color=\"orange\"\r\n                    >\r\n                      {modLoadingDetails[idx]?.SeqNo}\r\n                    </Badge>\r\n                  }\r\n                  content={t(\"Spec_ToolTip_OffSpecCorrectable\")}\r\n                  size=\"mini\"\r\n                />\r\n              </>\r\n            )\r\n          : //compBlendInfo = compBlendInfo + `<span class=\"OffSpecCorrectableLabelStyle\">${modLoadingDetails[idx]?.SeqNo}</span>`\r\n          modLoadingDetails[idx]?.BlendState === 3\r\n          ? blendSpec.push(\r\n              <>\r\n                <Tooltip\r\n                  element={\r\n                    <Badge\r\n                      className=\"OffSpecNotCorrectableLabelStyle\"\r\n                      color=\"red\"\r\n                    >\r\n                      {modLoadingDetails[idx]?.SeqNo}\r\n                    </Badge>\r\n                  }\r\n                  content={t(\"Spec_ToolTip_OffSpecNotCorrectable\")}\r\n                  size=\"mini\"\r\n                />\r\n              </>\r\n            )\r\n          : //compBlendInfo = compBlendInfo + `<span class=\"OffSpecNotCorrectableLabelStyle\">${modLoadingDetails[idx]?.SeqNo}</span>`\r\n            //compBlendInfo = compBlendInfo + `<span class=\"EmptyLabelStyle\">${modLoadingDetails[idx]?.SeqNo}</span>`\r\n            blendSpec.push(\r\n              <>\r\n                <Tooltip\r\n                  element={\r\n                    <Badge className=\"EmptyLabelStyle\">\r\n                      {modLoadingDetails[idx]?.SeqNo}\r\n                    </Badge>\r\n                  }\r\n                  content={t(\"Spec_ToolTip_NotLoaded\")}\r\n                  size=\"mini\"\r\n                />\r\n              </>\r\n            );\r\n      }\r\n    }\r\n    return blendSpec;\r\n  };\r\n\r\n  const getVehicleHSEValue = () => {\r\n    let hseStatus = \"\";\r\n    try {\r\n      let hSEInpectionStatus = Constants.HSEInspectionStatus.NOT_DONE;\r\n      if (modShipment.HSEInspectionStatus) {\r\n        hSEInpectionStatus = modShipment.HSEInspectionStatus;\r\n      }\r\n      if (\r\n        Constants.ShipmentStatus[modShipment.Status.toUpperCase()] ===\r\n        Constants.ShipmentStatus.CLOSED\r\n      ) {\r\n        hseStatus = Object.keys(Constants.HSEInspectionStatus).find(\r\n          (key) => Constants.HSEInspectionStatus[key] === hSEInpectionStatus\r\n        );\r\n      } else {\r\n        hseStatus = modCustomValues.VehicleHSEStatus;\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in getVehicleHSEValue\" + error);\r\n    }\r\n    return hseStatus;\r\n  };\r\n\r\n  const expanderTemplate = (data) => {\r\n    const open =\r\n      expandedRows.findIndex((x) => x.SeqNumber === data.rowData.SeqNumber) >= 0\r\n        ? true\r\n        : false;\r\n    return (\r\n      <div\r\n        onClick={() => toggleExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        {/* <span>{open ? t(\"Hide_Attributes\") : t(\"View_Attributes\")}</span> */}\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"slidercontrols-minus\" : \"ellipsis-horizontal\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleForceComplete = (data) => {\r\n    //let modChkForceCompleted = modCustomValues.EnableChkForceCompleted === \"TRUE\" ? false : true;\r\n    let chkForceCompleted = false;\r\n    if (\r\n      data.rowData.Compartment_Status !== null ||\r\n      data.rowData.Compartment_Status !== undefined\r\n    )\r\n      chkForceCompleted =\r\n        Constants.ShipmentStatus[modShipment.Status] ===\r\n          Constants.ShipmentStatus.CLOSED ||\r\n        Constants.ShipmentCompartmentStatus[data.rowData.Compartment_Status] ===\r\n          Constants.ShipmentCompartmentStatus.COMPLETED ||\r\n        Constants.ShipmentCompartmentStatus[data.rowData.Compartment_Status] ===\r\n          Constants.ShipmentCompartmentStatus.LOADING ||\r\n        Constants.ShipmentCompartmentStatus[data.rowData.Compartment_Status] ===\r\n          Constants.ShipmentCompartmentStatus.FORCE_COMPLETED\r\n          ? true\r\n          : false;\r\n\r\n    return (\r\n      <Checkbox\r\n        className=\"forceCompleteChkBox\"\r\n        disabled={\r\n          modCustomValues.EnableChkForceCompleted === \"FALSE\"\r\n            ? true\r\n            : data.rowData.Compartment_Status !== null ||\r\n              data.rowData.Compartment_Status !== undefined\r\n            ? chkForceCompleted\r\n            : false\r\n        }\r\n        checked={data.rowData.Force_Complete}\r\n        onChange={(cellData) => {\r\n          //console.log(\"CellData\", cellData)\r\n          //e.stopPropagation();\r\n          setModCellData(data);\r\n          if (cellData) {\r\n            setModelOpen(true);\r\n          } else {\r\n            handleCellCheck(data, cellData);\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleInputTextBox = (data) => {\r\n    let field = data.field;\r\n    let topUpdecantedComps = loadingDetails.Table.filter((item) => {\r\n      return (\r\n        item.TopUpDecantQuantity !== \"\" &&\r\n        item.TopUpDecantQuantity !== null &&\r\n        item.TopUpDecantQuantity !== undefined\r\n      );\r\n    });\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={data.rowData[field]} //Top_Up_Decant_Quantity}\r\n        onChange={(value) => handleLoadingDetailsChange(value, data)}\r\n        onFocus={() => {\r\n          setModTopUpEnable(false);\r\n          if (field === \"Top_Up_Decant_Quantity\" || field === \"Notes\")\r\n            setModTopUpEnable(true);\r\n          else setModTopUpEnable(false);\r\n        }}\r\n        disabled={\r\n          field === \"Top_Up_Decant_Quantity\" || field === \"Notes\"\r\n            ? modCustomValues[\"EnableTopUpDecant\"] === \"TRUE\" &&\r\n              (Constants.ShipmentStatus[modShipment.Status] ===\r\n                Constants.ShipmentStatus.PARTIALLY_LOADED ||\r\n                Constants.ShipmentStatus[modShipment.Status] ===\r\n                  Constants.ShipmentStatus.MANUALLY_LOADED ||\r\n                Constants.ShipmentStatus[modShipment.Status] ===\r\n                  Constants.ShipmentStatus.AUTO_LOADED) &&\r\n              (Constants.ShipmentCompartmentStatus[\r\n                data.rowData.Compartment_Status\r\n              ] === Constants.ShipmentCompartmentStatus.COMPLETED ||\r\n                Constants.ShipmentCompartmentStatus[\r\n                  data.rowData.Compartment_Status\r\n                ] === Constants.ShipmentCompartmentStatus.PART_FILLED ||\r\n                Constants.ShipmentCompartmentStatus[\r\n                  data.rowData.Compartment_Status\r\n                ] === Constants.ShipmentCompartmentStatus.OVER_FILLED) &&\r\n              topUpdecantedComps.length === 0\r\n              ? false\r\n              : true\r\n            : field === \"Adjust_Plan\"\r\n            ? Constants.ShipmentStatus[modShipment.Status] ===\r\n              Constants.ShipmentStatus.CLOSED\r\n              ? true\r\n              : false\r\n            : false\r\n        }\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  function rowExpansionTemplate(data) {\r\n    let compData = [];\r\n    compData.push(data);\r\n    return Array.isArray(compData) && compData.length > 0 ? (\r\n      <div className=\"ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable data={compData}>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"Left_Quantity\"\r\n            field=\"Left_Quantity\"\r\n            header={t(\"Shipment_Compartment_Left_Quantity\")}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            field={\"Adjust_Plan\"}\r\n            header={t(\"ViewShipment_AdjustmentToPlannedQuantity\")}\r\n            renderer={handleInputTextBox}\r\n          />\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            field=\"Top_Up_Decant_Quantity\"\r\n            header={t(\"ViewShipment_TopUpDecantQty\")}\r\n            renderer={handleInputTextBox}\r\n          />\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            field=\"Notes\"\r\n            header={t(\"ViewShipment_Notes\")}\r\n            renderer={handleInputTextBox}\r\n          />\r\n        </DataTable>\r\n        {compData[0].BaseProductDetails.map((item) => {\r\n          let itemList = [item];\r\n          return (\r\n            <>\r\n              <DataTable data={itemList}>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  field={\"baseproductcode\"}\r\n                  header={t(\"BaseProductCode\")}\r\n                  editable={false}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  field=\"plannedquantity\"\r\n                  header={t(\"ViewShipmentCompartment_PlannedQuantity\")}\r\n                  editable={false}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  field=\"revisedplannedquantity\"\r\n                  header={t(\"ViewShipmentCompartment_AdjustedQuantity\")}\r\n                  editable={false}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  field=\"loadedquantity\"\r\n                  header={t(\"ContractInfo_LoadedQty\")}\r\n                  editable={false}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  field=\"adjustedquantity\"\r\n                  header={t(\"ViewAllShipment_AdjustedQuantity\")}\r\n                  editable={false}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  field=\"TotalQuantity\"\r\n                  header={t(\"TankMeter_TotalQuantity\")}\r\n                  editable={false}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  field=\"LeftQuantity\"\r\n                  header={t(\"Shipment_Compartment_Left_Quantity\")}\r\n                  editable={false}\r\n                />\r\n              </DataTable>\r\n              {item.AdditiveProductDetails !== null &&\r\n              item.AdditiveProductDetails !== undefined &&\r\n              item.AdditiveProductDetails.length > 0 ? (\r\n                <DataTable data={item.AdditiveProductDetails}>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    field={\"additivecode\"}\r\n                    header={t(\"ViewShipment_AdditiveCode\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    field=\"plannedquantity\"\r\n                    header={t(\"ViewShipmentCompartment_PlannedQuantity\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    field=\"revisedplannedquantity\"\r\n                    header={t(\"ViewShipmentCompartment_AdjustedQuantity\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    field=\"loadedquantity\"\r\n                    header={t(\"ContractInfo_LoadedQty\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    field=\"adjustedquantity\"\r\n                    header={t(\"ViewAllShipment_AdjustedQuantity\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    field=\"TotalQuantity\"\r\n                    header={t(\"TankMeter_TotalQuantity\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    field=\"LeftQuantity\"\r\n                    header={t(\"Shipment_Compartment_Left_Quantity\")}\r\n                    editable={false}\r\n                  />\r\n                </DataTable>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    ) : (\r\n      <div className=\"compartmentIcon\">\r\n        <div className=\"gridButtonAlignLeft\">\r\n          {t(\"CustomerInventory_NoRecordsFound\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"detailsContainer\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modShipment.ShipmentCode}\r\n              label={t(\"ShipmentCompDetail_ShipmentNumber\")}\r\n              indicator=\"required\"\r\n              disabled={\r\n                isAutoGeneratedShipmentCode\r\n                  ? true\r\n                  : shipment.ShipmentCode !== \"\"\r\n              }\r\n              onChange={(data) => onFieldChange(\"ShipmentCode\", data)}\r\n              error={t(validationErrors.ShipmentCode)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modShipment.Status === null ? \"\" : modShipment.Status}\r\n              label={t(\"ShipmentCompDetail_ShipmentStatus\")}\r\n              disabled={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <DatePicker\r\n              fluid\r\n              value={new Date(modShipment.ScheduledDate)}\r\n              label={t(\"ShipmentCompDetail_ScheduledDate\")}\r\n              displayFormat={getCurrentDateFormat()}\r\n              type=\"datetime\"\r\n              showYearSelector=\"true\"\r\n              minuteStep={1}\r\n              disablePast={\r\n                modCustomValues[\r\n                  \"ShipConfigNumberofDaysBeforeOldShipmentsCreationIsAllowed\"\r\n                ] !== null &&\r\n                modCustomValues[\r\n                  \"ShipConfigNumberofDaysBeforeOldShipmentsCreationIsAllowed\"\r\n                ] !== undefined\r\n                  ? false\r\n                  : true\r\n              }\r\n              indicator=\"required\"\r\n              onChange={(data) => onFieldChange(\"ScheduledDate\", data)}\r\n              onTextChange={(value, error) => {\r\n                onDateTextChange(\"ScheduledDate\", value, error);\r\n              }}\r\n              error={t(validationErrors.ScheduledDate)}\r\n              reserveSpace={false}\r\n              disabled={\r\n                shipment.ShipmentCode !== \"\"\r\n                  ? updateShipmentAllowed !== true\r\n                  : false\r\n                //shipment.Status !== \"READY\"// || shipment.CreatedFromEntity !== 0\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"FinishedProductInfo_Select\")}\r\n              label={t(\"ShipmentCompDetail_Vehicle\")}\r\n              value={\r\n                modShipment.VehicleCode === null ? \"\" : modShipment.VehicleCode\r\n              }\r\n              options={listOptions.vehicleOptions}\r\n              onChange={(data) => {\r\n                onVehicleChange(data);\r\n              }}\r\n              indicator=\"required\"\r\n              search={true}\r\n              noResultsMessage={t(\"noResultsMessage\")}\r\n              error={t(validationErrors.VehicleCode)}\r\n              reserveSpace={false}\r\n              disabled={\r\n                shipment.ShipmentCode !== \"\"\r\n                  ? updateShipmentAllowed !== true\r\n                  : false\r\n                //shipment.Status !== \"READY\"// ||\r\n                //shipment.CreatedFromEntity !== 0\r\n              }\r\n              onSearch={onVehicleSearchChange}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={\r\n                modShipment.CarrierCode === null ? \"\" : modShipment.CarrierCode\r\n              }\r\n              label={t(\"ShipmentCompDetail_CarrierCompany\")}\r\n              disabled={true}\r\n              error={t(validationErrors.CarrierCode)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <Select  className={isWebportalCarrierRoleUser?\"pr-2\":\"\"}\r\n              fluid\r\n              placeholder={t(\"FinishedProductInfo_Select\")}\r\n              label={t(\"ShipmentCompDetail_Driver\")}\r\n              value={\r\n                modShipment.DriverCode === null ? \"\" : modShipment.DriverCode\r\n              }\r\n              options={getOptionsWithSelect(\r\n                listOptions.driverOptions,\r\n                t(\"Common_Select\")\r\n              )}\r\n              onChange={(data) => {\r\n                onFieldChange(\"DriverCode\", data);\r\n              }}\r\n              search={true}\r\n              disabled={ (isWebportalCarrierRoleUser && modShipment.Status === Constants.Shipment_Status.READY)?false:(shipment.ShipmentCode !== \"\"\r\n              ? updateShipmentAllowed !== true\r\n              : false) }\r\n              noResultsMessage={t(\"noResultsMessage\")}\r\n              onSearch={onDriverSearchChange}\r\n            />\r\n\r\n            {isWebportalCarrierRoleUser ? (\r\n\r\n                  <Tooltip\r\n                  content={t(\"ShipmentCompDetail_BtnSave\")}\r\n                  element={\r\n                    <Button  className=\"iconBtn mt-auto\"\r\n                    type=\"primary\"\r\n                  \r\n                    onClick={() => {\r\n                      UpdateShipmentDriver();\r\n                    }}\r\n                    disabled={modShipment.Status === Constants.Shipment_Status.READY ? false : true}\r\n                  ><Icon root=\"building\" name=\"save\" size=\"large\" className=\"mt-auto\"/>\r\n                  \r\n                  </Button>\r\n                  }\r\n                  position=\"left center\"\r\n                  event=\"hover\"\r\n                  hoverable={true}\r\n                  />\r\n\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n             \r\n             </div>\r\n          </div>\r\n          {(isMarineTransloading === true || isRailTransloading === true) &&\r\n          isEnterpriseNode === false &&\r\n          shipmentType === fnSBC ? (\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"FinishedProductInfo_Select\")}\r\n                label={t(\"Ship_transLoad_source\")}\r\n                value={\r\n                  modShipment.TransloadSourceType === null\r\n                    ? \"\"\r\n                    : modShipment.TransloadSourceType\r\n                }\r\n                options={Utilities.transferListtoOptions(\r\n                  listOptions.transloadingOptions\r\n                )}\r\n                onChange={(data) => onFieldChange(\"TransloadSourceType\", data)}\r\n                //indicator=\"required\"\r\n                //error={t(validationErrors.ShipmentQuantityUOM)}\r\n                reserveSpace={false}\r\n                disabled={\r\n                  shipment.ShipmentCode !== \"\"\r\n                    ? updateShipmentAllowed !== true\r\n                    : false\r\n                  //shipment.Status !== \"READY\"\r\n                }\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"FinishedProductInfo_Select\")}\r\n              label={t(\"ShipmentCompDetail_UOM\")}\r\n              value={\r\n                modShipment.ShipmentQuantityUOM === null\r\n                  ? \"\"\r\n                  : modShipment.ShipmentQuantityUOM\r\n              }\r\n              options={listOptions.quantityUOMOptions}\r\n              onChange={(data) => onFieldChange(\"ShipmentQuantityUOM\", data)}\r\n              indicator=\"required\"\r\n              error={t(validationErrors.ShipmentQuantityUOM)}\r\n              reserveSpace={false}\r\n              disabled={\r\n                shipment.ShipmentCode !== \"\"\r\n                  ? updateShipmentAllowed !== true\r\n                  : false\r\n                //shipment.Status !== \"READY\"// || shipment.CreatedFromEntity !== 0\r\n              }\r\n              search={true}\r\n              noResultsMessage={t(\"noResultsMessage\")}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={\r\n                modShipment.Description === null ? \"\" : modShipment.Description\r\n              }\r\n              onChange={(data) => onFieldChange(\"Description\", data)}\r\n              label={t(\"CarrierDetails_Desc\")}\r\n              error={t(validationErrors.Description)}\r\n              reserveSpace={false}\r\n              disabled={\r\n                shipment.ShipmentCode !== \"\"\r\n                  ? updateShipmentAllowed !== true\r\n                  : false\r\n                //shipment.Status !== \"READY\" //|| shipment.CreatedFromEntity !== 0\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"FinishedProductInfo_Select\")}\r\n              label={t(\"ShipmentProdDetail_CreatedFrom\")}\r\n              value={modShipment.CreatedFromEntity}\r\n              onChange={(data) => onFieldChange(\"CreatedFromEntity\", data)}\r\n              options={listOptions.shipmentFromOptions}\r\n              disabled={\r\n                shipment.ShipmentCode !== \"\" || shipmentSource !== undefined\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n          </div>\r\n          {isEnforcingEnabled ? (\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modShipment.PlannedTripNo === null\r\n                    ? \"\"\r\n                    : modShipment.PlannedTripNo\r\n                }\r\n                onChange={(data) => onFieldChange(\"PlannedTripNo\", data)}\r\n                label={t(\"ShipmentCompDetail_ShipmentSequence\")}\r\n                reserveSpace={false}\r\n                disabled={\r\n                  shipment.ShipmentCode !== \"\"\r\n                    ? updateShipmentAllowed !== true\r\n                    : false\r\n                  //shipment.Status !== \"READY\" //|| shipment.CreatedFromEntity !== 0\r\n                }\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {isEnforcingEnabled ? (\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <div\r\n                className=\"ui single-input fluid disabled\"\r\n                style={{ width: \"50%\", float: \"left\" }}\r\n              >\r\n                <div class=\"ui input-label\">\r\n                  <span className=\"input-label-message\">\r\n                    {t(\"ShipmentCompDetail_OverrideSequence\")}\r\n                  </span>\r\n                </div>\r\n                <div className=\"input-wrap\">\r\n                  <Checkbox\r\n                    //className=\"LabelEnabled\"\r\n                    //label={t(\"ViewShipment_IsForceClosed\")}\r\n                    checked={modShipment.IsPriority}\r\n                    disabled={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n              {shipment.Status === \"READY\" ? (\r\n                <div style={{ width: \"50%\", float: \"right\" }}>\r\n                  <Button\r\n                    className=\"shipmentRecordWeightButton\"\r\n                    content={\r\n                      modShipment.IsPriority\r\n                        ? t(\"ShipmentCompDetail_OverrideReset\")\r\n                        : t(\"ShipmentCompDetail_OverrideSet\")\r\n                    }\r\n                    disabled={\r\n                      shipment.ShipmentCode === \"\" ||\r\n                      !isOverrideSequenceButtonEnabled\r\n                    }\r\n                    onClick={overrideSequence}\r\n                  ></Button>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {isBonded ? (\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <div\r\n                className=\"ui single-input fluid disabled\"\r\n                style={{ width: \"30%\", float: \"left\" }}\r\n              >\r\n                <div class=\"ui input-label\">\r\n                  <span className=\"input-label-message\">\r\n                    {t(\"VehicleInfo_Bonded\")}\r\n                  </span>\r\n                </div>\r\n                <div className=\"input-wrap\">\r\n                  <Checkbox\r\n                    //className=\"LabelEnabled\"\r\n                    //label={t(\"ViewShipment_IsForceClosed\")}\r\n                    onChange={(data) => onFieldChange(\"IsBonded\", data)}\r\n                    checked={modShipment.IsBonded}\r\n                    disabled={\r\n                      shipment.ShipmentCode !== \"\"\r\n                        ? updateShipmentAllowed !== true\r\n                        : false\r\n                      //shipment.Status !== \"READY\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              {modShipment.IsBonded ? (\r\n                <div style={{ width: \"70%\", float: \"right\" }}>\r\n                  <Input\r\n                    fluid\r\n                    value={\r\n                      modShipment.ShipmentBondNo === null\r\n                        ? \"\"\r\n                        : modShipment.ShipmentBondNo\r\n                    }\r\n                    onChange={(data) => onFieldChange(\"ShipmentBondNo\", data)}\r\n                    label={t(\"ShipmentCompDetail_ShipmentBondNo\")}\r\n                    reserveSpace={false}\r\n                    disabled={\r\n                      shipment.ShipmentCode !== \"\" &&\r\n                      modCustomValues[\"BondUpdateAllow\"] !== \"TRUE\"\r\n                    }\r\n                  />\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {shipment.ShipmentCode !== \"\" && //shipmentSource === undefined &&\r\n          isPlanned !== false &&\r\n          modShipment.IsBonded &&\r\n          isBonded &&\r\n          modCustomValues[\"BondUpdateAllow\"] === \"TRUE\" ? (\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Button\r\n                content={t(\"ShipmentCompDetail_SaveShipmentBondNo\")}\r\n                disabled={modCustomValues[\"BondUpdateAllow\"] !== \"TRUE\"}\r\n                onClick={updateShipmentBondNo}\r\n              ></Button>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {shipment.ShipmentCode !== \"\" && //shipmentSource === undefined &&\r\n          isPlanned !== false ? (\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCustomValues.VehicleAccessCard}\r\n                editable={false}\r\n                label={t(\"ViewShipment_VehicleAccessCard\")}\r\n                reserveSpace={false}\r\n                disabled={true}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {shipment.ShipmentCode !== \"\" && //shipmentSource === undefined &&\r\n          isPlanned !== false ? (\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modShipment.ShipmentType === 0\r\n                    ? Constants.shipmentType.COMPARTMENT\r\n                    : Constants.shipmentType.PRODUCT\r\n                }\r\n                editable={false}\r\n                label={t(\"ViewShipmentStatus_ShipmentType\")}\r\n                //error={t(validationErrors.Description)}\r\n                reserveSpace={false}\r\n                disabled={true}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {shipment.ShipmentCode !== \"\" && //shipmentSource === undefined &&\r\n          isPlanned !== false &&\r\n          modCustomValues[\"TopUpDecantStatusVisible\"] === \"TRUE\" ? (\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCustomValues.TopUpDecantStatusText}\r\n                label={t(\"ViewShipment_TopUpDecantStatus\")}\r\n                reserveSpace={false}\r\n                disabled={true}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {shipment.ShipmentCode !== \"\" && //shipmentSource === undefined &&\r\n          isPlanned !== false &&\r\n          modCustomValues[\"TopUpDecantStatusDropDownVisible\"] === \"TRUE\" ? (\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"FinishedProductInfo_Select\")}\r\n                label={t(\"ViewShipment_TopUpDecantStatus\")}\r\n                value={ddlTopUpDecantStatus}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.topUpDecantOptions,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                onChange={(data) => onFieldChange(\"ddlTopUpDecant\", data)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {shipment.ShipmentCode !== \"\" && //shipmentSource === undefined &&\r\n          isPlanned !== false ? (\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modShipment.ForceClosureReason}\r\n                label={t(\"ViewShipment_CloseHeader\")}\r\n                //error={t(validationErrors.Description)}\r\n                reserveSpace={false}\r\n                disabled={true}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {shipment.ShipmentCode !== \"\" && //shipmentSource === undefined &&\r\n          isPlanned !== false ? (\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <div className=\"ui single-input fluid disabled\">\r\n                <div class=\"ui input-label\">\r\n                  <span className=\"input-label-message\">\r\n                    {t(\"ViewShipment_IsForceClosed\")}\r\n                  </span>\r\n                </div>\r\n                <div className=\"input-wrap\">\r\n                  <Checkbox\r\n                    //className=\"LabelEnabled\"\r\n                    //label={t(\"ViewShipment_IsForceClosed\")}\r\n                    checked={modShipment.ForceClosed}\r\n                    disabled={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {shipment.ShipmentCode !== \"\" && //shipmentSource === undefined &&\r\n          isPlanned !== false &&\r\n          isSlotbookinginUI ? (\r\n            <div className=\"col-12 col-md-6 col-lg-4 ddlSelectAll\">\r\n              <div className=\"ui single-input fluid disabled\">\r\n                <div class=\"ui input-label\">\r\n                  <span className=\"input-label-message\">\r\n                    {t(\"ViewShipment_IsSlotBooked\")}\r\n                  </span>\r\n                </div>\r\n                <div className=\"input-wrap\">\r\n                  <label style={{ fontWeight: \"bold\" }}>\r\n                    {modShipment.SlotBooked ? \"Booked\" : \"Not Booked\"}\r\n                  </label>\r\n                  {/* <Checkbox\r\n                                            //className=\"LabelEnabled\"\r\n                                            //label={t(\"ViewShipment_IsSlotBooked\")}\r\n                                            checked={modShipment.SlotBooked}\r\n                                            disabled={true}\r\n                                        /> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {shipment.ShipmentCode !== \"\" && //shipmentSource === undefined &&\r\n          shipment.Status !== \"READY\" &&\r\n          shipment.Status !== \"CLOSE\" &&\r\n          isPlanned !== false &&\r\n          ShipmentBay !== null &&\r\n          ShipmentBay !== \"\" &&\r\n          ShipmentBay !== undefined ? (\r\n            <div className=\"col-12 col-md-6 col-lg-4 ddlSelectAll\">\r\n              <div className=\"ui single-input fluid disabled\">\r\n                <div class=\"ui input-label\">\r\n                  <span className=\"input-label-message\">\r\n                    {t(\"ViewAllocateBay_AllocatedBay\")}\r\n                    {\":\"}\r\n                  </span>\r\n                </div>\r\n                <div className=\"input-wrap\">\r\n                  <label style={{ fontWeight: \"bold\" }}>{ShipmentBay}</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {shipment.ShipmentCode !== \"\" && //shipmentSource === undefined &&\r\n          isPlanned !== false ? (\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <label>{t(\"ViewShipment_CompBlendState\")}</label>\r\n              <br />\r\n              {/* <div dangerouslySetInnerHTML={getBlendSpecData()}> </div.*/}\r\n              <div> {getBlendSpecData()}</div>\r\n              {/* {getBlendSpecData()} */}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {shipment.ShipmentCode !== \"\" && //shipmentSource === undefined &&\r\n          isPlanned !== false &&\r\n          modCustomValues.VehicleHSEEnabled === \"TRUE\" ? (\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              {/* Need to disable based on lookup value */}\r\n              <Input\r\n                fluid\r\n                value={getVehicleHSEValue()}\r\n                // modShipment.HSEInspectionStatus\r\n                // }\r\n                label={t(\"VehHSE_Inspection\")}\r\n                //error={t(validationErrors.Description)}\r\n                reserveSpace={false}\r\n                disabled={true}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {shipment.ShipmentCode !== \"\" && //shipmentSource === undefined &&\r\n          isPlanned !== false ? (\r\n            // && isEnterpriseNode\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={modShipment.ActualTerminalCode}\r\n                label={t(\"Shipment_LoadedTerminal\")}\r\n                options={Utilities.transferListtoOptions([\r\n                  modShipment.ActualTerminalCode,\r\n                ])}\r\n                disabled={true}\r\n                multiple={true}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"FinishedProductInfo_Select\")}\r\n              label={t(\"Cust_Status\")}\r\n              value={modShipment.Active}\r\n              options={[\r\n                { text: t(\"ViewShipment_Ok\"), value: true },\r\n                { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n              ]}\r\n              onChange={(data) => onActiveStatusChange(data)}\r\n              disabled={\r\n                //shipment.Status !== \"READY\" ||\r\n                //shipment.CreatedFromEntity !== 0 ||\r\n                updateShipmentAllowed !== true || shipment.ShipmentCode === \"\"\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modShipment.Remarks === null ? \"\" : modShipment.Remarks}\r\n              label={t(\"Cust_Remarks\")}\r\n              onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n              indicator={\r\n                modShipment.Active !== shipment.Active ? \"required\" : \"\"\r\n              }\r\n              error={t(validationErrors.Remarks)}\r\n              reserveSpace={false}\r\n              disabled={\r\n                shipment.ShipmentCode !== \"\"\r\n                  ? updateShipmentAllowed !== true\r\n                  : false\r\n                //shipment.Status !== \"READY\" //|| shipment.CreatedFromEntity !== 0\r\n              }\r\n            />\r\n          </div>\r\n          {isEnterpriseNode ? (\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <AssociatedTerminals\r\n                terminalList={listOptions.terminalCodes}\r\n                selectedTerminal={modShipment.TerminalCodes}\r\n                error={t(validationErrors.TerminalCodes)}\r\n                onFieldChange={onFieldChange}\r\n                onCheckChange={onAllTerminalsChange}\r\n              ></AssociatedTerminals>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        {selectedAttributeList.length > 0\r\n          ? selectedAttributeList.map((attire) => (\r\n              <ErrorBoundary>\r\n                <Accordion>\r\n                  <Accordion.Content\r\n                    className=\"attributeAccordian\"\r\n                    title={\r\n                      isEnterpriseNode\r\n                        ? attire.TerminalCode + \" - \" + t(\"Attributes_Header\")\r\n                        : t(\"Attributes_Header\")\r\n                    }\r\n                  >\r\n                    <AttributeDetails\r\n                      selectedAttributeList={attire.attributeMetaDataList}\r\n                      handleCellDataEdit={handleAttributeCellDataEdit}\r\n                      attributeValidationErrors={handleValidationErrorFilter(\r\n                        attributeValidationErrors,\r\n                        attire.TerminalCode\r\n                      )}\r\n                    ></AttributeDetails>\r\n                  </Accordion.Content>\r\n                </Accordion>\r\n              </ErrorBoundary>\r\n            ))\r\n          : null}\r\n        <div className=\"shipmentTabAlignment\">\r\n          <Tab\r\n            activeIndex={activeTab}\r\n            onTabChange={(activeIndex) => {\r\n              onTabChange(activeIndex);\r\n            }}\r\n          >\r\n            {prodTypeTab.map((index) => {\r\n              return (\r\n                <Tab.Pane\r\n                  key={index}\r\n                  title={t(\"Shipment_Product_Planning_Tab_Header\")}\r\n                  // disabled={shipmentType === fnSBC}\r\n                >\r\n                  <div className=\"row compartmentRow\">\r\n                    <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n                      {/* <h4>{shipmentType === fnSBC ? t(\"ShipmentCompDetail_PlanHeader\") : t(\"ShipmentProdDetail_PlanHeader\")}</h4> */}\r\n                    </div>\r\n                    <div className=\"col col-md-4 col-lg-3 col-xl-3\">\r\n                      <div className=\"compartmentIconContainer\">\r\n                        <div\r\n                          onClick={handleAddProductPlan}\r\n                          className=\"compartmentIcon\"\r\n                        >\r\n                          <div>\r\n                            <Icon\r\n                              root=\"common\"\r\n                              name=\"badge-plus\"\r\n                              size=\"medium\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"margin_l10\">\r\n                            <h5 className=\"font14\">\r\n                              {t(\"FinishedProductInfo_Add\")}\r\n                            </h5>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          onClick={handleDeleteProductPlan}\r\n                          className=\"compartmentIcon margin_l30\"\r\n                        >\r\n                          <div>\r\n                            <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n                          </div>\r\n                          <div className=\"margin_l10\">\r\n                            <h5 className=\"font14\">{t(\"DestAdd_Delete\")}</h5>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row marginRightZero tableScroll\">\r\n                    <div className=\"col-12 detailsTable\">\r\n                      <DataTable\r\n                        data={modProductPlans}\r\n                        rowExpansionTemplate={attributeRowExpansionTemplate}\r\n                        selectionMode=\"multiple\"\r\n                        selection={selectedProductPlans}\r\n                        onSelectionChange={handleProductPlansSelectionChange}\r\n                        scrollable={true}\r\n                        scrollHeight=\"320px\"\r\n                        expandedRows={expandedRows}\r\n                      >\r\n                        {(() => {\r\n                          switch (modShipment.CreatedFromEntity) {\r\n                            case 2:\r\n                              return (\r\n                                <DataTable.Column\r\n                                  className=\"compColHeight colminWidth\"\r\n                                  key=\"ContractCode\"\r\n                                  field=\"ContractCode\"\r\n                                  header={handleIsRequiredCompartmentCell(\r\n                                    t(\"ShipmentProdDetail_ContractCode\")\r\n                                  )}\r\n                                  editable={\r\n                                    modShipment.Status ===\r\n                                    Constants.Shipment_Status.READY\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  editFieldType=\"text\"\r\n                                  customEditRenderer={(celldata) =>\r\n                                    handleCustomEditDropDown(\r\n                                      celldata,\r\n                                      listOptions.contractCodeOptions,\r\n                                      Constants.shipmentType.PRODUCT\r\n                                    )\r\n                                  }\r\n                                ></DataTable.Column>\r\n                              );\r\n                            case 1:\r\n                              return (\r\n                                <DataTable.Column\r\n                                  className=\"compColHeight colminWidth\"\r\n                                  key=\"OrderCode\"\r\n                                  field=\"OrderCode\"\r\n                                  header={handleIsRequiredCompartmentCell(\r\n                                    t(\"ShipmentCompDetail_OrderCode\")\r\n                                  )}\r\n                                  editable={\r\n                                    modShipment.Status ===\r\n                                    Constants.Shipment_Status.READY\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  editFieldType=\"text\"\r\n                                  customEditRenderer={(celldata) =>\r\n                                    handleCustomEditDropDown(\r\n                                      celldata,\r\n                                      listOptions.orderCodeOptions,\r\n                                      Constants.shipmentType.PRODUCT\r\n                                    )\r\n                                  }\r\n                                ></DataTable.Column>\r\n                              );\r\n                            default:\r\n                              return \"\";\r\n                          }\r\n                        })()}\r\n\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"FinishedProductCode\"\r\n                          field=\"FinishedProductCode\"\r\n                          header={handleIsRequiredCompartmentCell(\r\n                            t(\"ContractInfo_Product\")\r\n                          )}\r\n                          editable={\r\n                            modShipment.Status ===\r\n                            Constants.Shipment_Status.READY\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          editFieldType=\"text\"\r\n                          customEditRenderer={(celldata) =>\r\n                            handleCustomEditDropDown(\r\n                              celldata,\r\n                              listOptions.finishedProductOptions,\r\n                              Constants.shipmentType.PRODUCT\r\n                            )\r\n                          }\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"CustomerCode\"\r\n                          field=\"CustomerCode\"\r\n                          header={handleIsRequiredCompartmentCell(\r\n                            t(\"ShipmentCompDetail_Customer\")\r\n                          )}\r\n                          editable={\r\n                            modShipment.Status ===\r\n                            Constants.Shipment_Status.READY\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          editFieldType=\"text\"\r\n                          customEditRenderer={(celldata) =>\r\n                            handleCustomerEditDropDown(\r\n                              celldata,\r\n                              Constants.shipmentType.PRODUCT\r\n                            )\r\n                          }\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"DestinationCode\"\r\n                          field=\"DestinationCode\"\r\n                          header={handleIsRequiredCompartmentCell(\r\n                            t(\"ContractInfo_Destination\")\r\n                          )}\r\n                          editable={\r\n                            modShipment.Status ===\r\n                            Constants.Shipment_Status.READY\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          editFieldType=\"text\"\r\n                          customEditRenderer={(celldata) =>\r\n                            handleDestinationEditDropDown(\r\n                              celldata,\r\n                              Constants.shipmentType.PRODUCT\r\n                            )\r\n                          }\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"Quantity\"\r\n                          field=\"Quantity\"\r\n                          header={handleIsRequiredCompartmentCell(\r\n                            t(\"ShipmentCompDetail_Quantity\")\r\n                          )}\r\n                          editable={\r\n                            modShipment.Status ===\r\n                            Constants.Shipment_Status.READY\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          editFieldType=\"text\"\r\n                          renderer={(cellData) =>\r\n                            decimalDisplayValues(cellData)\r\n                          }\r\n                          customEditRenderer={(cellData) =>\r\n                            handleCustomEditTextBox(\r\n                              cellData,\r\n                              Constants.shipmentType.PRODUCT\r\n                            )\r\n                          }\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          initialWidth=\"200px\"\r\n                          renderer={attributeExpanderTemplate}\r\n                        />\r\n                      </DataTable>\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n              );\r\n              //}\r\n            })}\r\n            {compTypeTab.map((index) => {\r\n              return (\r\n                <Tab.Pane\r\n                  title={t(\"Shipment_Compartment_Planning_Tab_Header\")}\r\n                  key={index}\r\n                  // disabled={shipmentType[0] === fnSBP &&\r\n                  //     (modShipment.ShipmentDetailsInfo === null || modShipment.ShipmentDetailsInfo === undefined || modShipment.ShipmentDetailsInfo.length === 0)}\r\n                >\r\n                  <div className=\"row compartmentRow\">\r\n                    <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n                      {/* <h4>{shipmentType === fnSBC ? t(\"ShipmentCompDetail_PlanHeader\") : t(\"ShipmentProdDetail_PlanHeader\")}</h4> */}\r\n                    </div>\r\n                    <div className=\"col col-md-4 col-lg-3 col-xl-3\">\r\n                      <div className=\"compartmentIconContainer\">\r\n                        <div\r\n                          onClick={handleAddCompartmentPlan}\r\n                          className=\"compartmentIcon\"\r\n                        >\r\n                          <div>\r\n                            <Icon\r\n                              root=\"common\"\r\n                              name=\"badge-plus\"\r\n                              size=\"medium\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"margin_l10\">\r\n                            <h5 className=\"font14\">\r\n                              {t(\"FinishedProductInfo_Add\")}\r\n                            </h5>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          onClick={handleDeleteCompartmentPlan}\r\n                          className=\"compartmentIcon margin_l30\"\r\n                        >\r\n                          <div>\r\n                            <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n                          </div>\r\n                          <div className=\"margin_l10\">\r\n                            <h5 className=\"font14\">{t(\"DestAdd_Delete\")}</h5>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row marginRightZero tableScroll\">\r\n                    <div className=\"col-12 detailsTable\">\r\n                      <DataTable\r\n                        data={modCompartmentPlans}\r\n                        rowExpansionTemplate={attributeRowExpansionTemplate}\r\n                        selectionMode=\"multiple\"\r\n                        selection={selectedCompartmentPlans}\r\n                        onSelectionChange={\r\n                          handleCompartmentPlansSelectionChange\r\n                        }\r\n                        scrollable={true}\r\n                        scrollHeight=\"320px\"\r\n                        expandedRows={expandedRows}\r\n                      >\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"CompartmentSeqNoInVehicle\"\r\n                          field=\"CompartmentSeqNoInVehicle\"\r\n                          header={handleIsRequiredCompartmentCell(\r\n                            t(\"ShipmentCompDetail_CompSeqInVehicle\")\r\n                          )}\r\n                          editable={\r\n                            modShipment.Status ===\r\n                            Constants.Shipment_Status.READY\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          editFieldType=\"text\"\r\n                          customEditRenderer={(celldata) =>\r\n                            handleCustomEditDropDown(\r\n                              celldata,\r\n                              listOptions.compSeqOptions,\r\n                              Constants.shipmentType.COMPARTMENT\r\n                            )\r\n                          }\r\n                        ></DataTable.Column>\r\n                        {(() => {\r\n                          switch (modShipment.CreatedFromEntity) {\r\n                            case 2:\r\n                              return (\r\n                                <DataTable.Column\r\n                                  className=\"compColHeight colminWidth\"\r\n                                  key=\"ContractCode\"\r\n                                  field=\"ContractCode\"\r\n                                  header={handleIsRequiredCompartmentCell(\r\n                                    t(\"ShipmentProdDetail_ContractCode\")\r\n                                  )}\r\n                                  editable={\r\n                                    modShipment.Status ===\r\n                                    Constants.Shipment_Status.READY\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  editFieldType=\"text\"\r\n                                  customEditRenderer={(cellData) =>\r\n                                    handleCustomEditDropDown(\r\n                                      cellData,\r\n                                      listOptions.contractCodeOptions,\r\n                                      Constants.shipmentType.COMPARTMENT\r\n                                    )\r\n                                  }\r\n                                ></DataTable.Column>\r\n                              );\r\n                            case 1:\r\n                              return (\r\n                                <DataTable.Column\r\n                                  className=\"compColHeight colminWidth\"\r\n                                  key=\"OrderCode\"\r\n                                  field=\"OrderCode\"\r\n                                  header={handleIsRequiredCompartmentCell(\r\n                                    t(\"ShipmentCompDetail_OrderCode\")\r\n                                  )}\r\n                                  editable={\r\n                                    modShipment.Status ===\r\n                                    Constants.Shipment_Status.READY\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  editFieldType=\"text\"\r\n                                  customEditRenderer={(cellData) =>\r\n                                    handleCustomEditDropDown(\r\n                                      cellData,\r\n                                      listOptions.orderCodeOptions,\r\n                                      Constants.shipmentType.COMPARTMENT\r\n                                    )\r\n                                  }\r\n                                ></DataTable.Column>\r\n                              );\r\n                            default:\r\n                              return \"\";\r\n                          }\r\n                        })()}\r\n\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"FinishedProductCode\"\r\n                          field=\"FinishedProductCode\"\r\n                          header={handleIsRequiredCompartmentCell(\r\n                            t(\"ContractInfo_Product\")\r\n                          )}\r\n                          editable={\r\n                            modShipment.Status ===\r\n                            Constants.Shipment_Status.READY\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          editFieldType=\"text\"\r\n                          customEditRenderer={(celldata) =>\r\n                            handleCustomEditDropDown(\r\n                              celldata,\r\n                              listOptions.finishedProductOptions,\r\n                              Constants.shipmentType.COMPARTMENT\r\n                            )\r\n                          }\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"CustomerCode\"\r\n                          field=\"CustomerCode\"\r\n                          header={handleIsRequiredCompartmentCell(\r\n                            t(\"ShipmentCompDetail_Customer\")\r\n                          )}\r\n                          editable={\r\n                            modShipment.Status ===\r\n                            Constants.Shipment_Status.READY\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          editFieldType=\"text\"\r\n                          customEditRenderer={(celldata) =>\r\n                            handleCustomerEditDropDown(\r\n                              celldata,\r\n                              Constants.shipmentType.COMPARTMENT\r\n                            )\r\n                          }\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"DestinationCode\"\r\n                          field=\"DestinationCode\"\r\n                          header={handleIsRequiredCompartmentCell(\r\n                            t(\"ContractInfo_Destination\")\r\n                          )}\r\n                          editable={\r\n                            modShipment.Status ===\r\n                            Constants.Shipment_Status.READY\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          editFieldType=\"text\"\r\n                          customEditRenderer={(celldata) =>\r\n                            handleDestinationEditDropDown(\r\n                              celldata,\r\n                              Constants.shipmentType.COMPARTMENT\r\n                            )\r\n                          }\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"Quantity\"\r\n                          field=\"Quantity\"\r\n                          header={handleIsRequiredCompartmentCell(\r\n                            t(\"ShipmentCompDetail_Quantity\")\r\n                          )}\r\n                          editable={\r\n                            modShipment.Status ===\r\n                            Constants.Shipment_Status.READY\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          editFieldType=\"text\"\r\n                          renderer={(cellData) =>\r\n                            decimalDisplayValues(cellData)\r\n                          }\r\n                          customEditRenderer={(cellData) =>\r\n                            handleCustomEditTextBox(\r\n                              cellData,\r\n                              Constants.shipmentType.COMPARTMENT\r\n                            )\r\n                          }\r\n                        ></DataTable.Column>\r\n                        {modShipment.TransloadSourceType === \"MARINE\" ? (\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"TransReceiptCode\"\r\n                            field=\"TransReceiptCode\"\r\n                            header={t(\"Receipt_Code\")}\r\n                            editable={true}\r\n                            editFieldType=\"text\"\r\n                            customEditRenderer={(celldata) =>\r\n                              handleCustomEditDropDown(\r\n                                celldata,\r\n                                listOptions.marineReceiptCodes,\r\n                                Constants.shipmentType.COMPARTMENT\r\n                              )\r\n                            }\r\n                          ></DataTable.Column>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                        {modShipment.TransloadSourceType === \"MARINE\" ? (\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"TransCompSequenceNumber\"\r\n                            field=\"TransCompSequenceNumber\"\r\n                            header={t(\"Transload_receipt_Comp_No\")}\r\n                            editable={true}\r\n                            editFieldType=\"text\"\r\n                            customEditRenderer={(celldata) =>\r\n                              handleCustomEditDropDown(\r\n                                celldata,\r\n                                listOptions.marineReceiptCompCodes,\r\n                                Constants.shipmentType.COMPARTMENT\r\n                              )\r\n                            }\r\n                          ></DataTable.Column>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                        <DataTable.Column\r\n                          initialWidth=\"200px\"\r\n                          renderer={attributeExpanderTemplate}\r\n                        />\r\n                      </DataTable>\r\n                    </div>\r\n                    {!isEnterpriseNode &&\r\n                    isMarineTransloading &&\r\n                    modShipment.TransloadSourceType != null &&\r\n                    modShipment.TransloadSourceType === \"MARINE\" &&\r\n                    shipmentType === fnSBC ? (\r\n                      <div\r\n                        className=\"col col-md-8 col-lg-9 col col-xl-12\"\r\n                        style={{ textAlign: \"right\" }}\r\n                      >\r\n                        <Button\r\n                          content={t(\"shp_trans_receipt_update\")}\r\n                          disabled={\r\n                            modCustomValues[\"f_ShipCompEditAccess\"] ===\r\n                              \"TRUE\" &&\r\n                            Constants.ShipmentStatus[modShipment.Status] !==\r\n                              Constants.ShipmentStatus.READY &&\r\n                            Constants.ShipmentStatus[modShipment.Status] !==\r\n                              Constants.ShipmentStatus.LOADING &&\r\n                            Constants.ShipmentStatus[modShipment.Status] !==\r\n                              Constants.ShipmentStatus.AUTO_LOADED &&\r\n                            Constants.ShipmentStatus[modShipment.Status] !==\r\n                              Constants.ShipmentStatus.MANUALLY_LOADED &&\r\n                            Constants.ShipmentStatus[modShipment.Status] !==\r\n                              Constants.ShipmentStatus.CLOSED\r\n                              ? false\r\n                              : true\r\n                          }\r\n                          onClick={updateTransloadingInfo}\r\n                        ></Button>\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </Tab.Pane>\r\n              );\r\n            })}\r\n            {LoadTypeTab.map((index) => {\r\n              return (\r\n                <Tab.Pane\r\n                  key={index}\r\n                  title={t(\"Shipment_Compartment_Details_Tab_Header\")}\r\n                  // disabled={modShipment.ShipmentCode === \"\" || modShipment.ShipmentCode === undefined || modShipment.ShipmentCode === null\r\n                  //     || modShipment.ShipmentDestinationCompartmentsInfo === null || modShipment.ShipmentDestinationCompartmentsInfo === undefined || modShipment.ShipmentDestinationCompartmentsInfo.length === 0}\r\n                >\r\n                  <div className=\"row marginRightZero tableScroll\">\r\n                    <div className=\"col-12 detailsTable\">\r\n                      <DataTable\r\n                        data={modLoadingDetails}\r\n                        rowExpansionTemplate={rowExpansionTemplate}\r\n                        expandedRows={expandedRows}\r\n                        scrollable={true}\r\n                        scrollHeight=\"320px\"\r\n                      >\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"Trailer_Code\"\r\n                          field=\"Trailer_Code\"\r\n                          header={t(\"ShipmentCompDetail_wcTrailerCode\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"Compartment_Code\"\r\n                          field=\"Compartment_Code\"\r\n                          header={t(\"ShipmentCompDetail_wcCompartmentCode\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"Compartment_Status\"\r\n                          field=\"Compartment_Status\"\r\n                          header={t(\"ViewShipmentStatus_Status\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"Finished_Product\"\r\n                          field=\"Finished_Product\"\r\n                          header={t(\"ViewShipment_FinishedProductCode\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"Planned_Quantity\"\r\n                          field=\"Planned_Quantity\"\r\n                          header={t(\"ViewShipmentCompartment_PlannedQuantity\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"Revised_Planned_Quantity\"\r\n                          field=\"Revised_Planned_Quantity\"\r\n                          header={t(\"ViewShipmentCompartment_AdjustedQuantity\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"Loaded_Quantity\"\r\n                          field=\"Loaded_Quantity\"\r\n                          header={t(\"ReceiptByCompartmentList_LoadedQuantity\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          initialWidth=\"135px\"\r\n                          header={t(\"ViewShipment_ForceComplete\")}\r\n                          renderer={handleForceComplete}\r\n                        />\r\n                        <DataTable.Column\r\n                          initialWidth=\"50px\"\r\n                          renderer={expanderTemplate}\r\n                        />\r\n                      </DataTable>\r\n                    </div>\r\n                    {!isEnterpriseNode ? (\r\n                      <div\r\n                        className=\"col col-md-8 col-lg-9 col col-xl-12\"\r\n                        style={{ textAlign: \"right\" }}\r\n                      >\r\n                        <Button\r\n                          content={t(submitBtnName)}\r\n                          disabled={modTopUpEnable ? false : true}\r\n                          onClick={() =>\r\n                            handleTopUpDecantApproval(\"Approve\", submitBtnName)\r\n                          }\r\n                        ></Button>\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {/* {!isEnterpriseNode ? <div style={{ marginRight: \"0.6rem\", marginBottom: \"1rem\" }}>\r\n                                        <Button\r\n                                            content={t(\"save\")}\r\n                                            disabled={modTopUpEnable &&\r\n                                                Constants.ShipmentStatus[modShipment.Status] !== Constants.ShipmentStatus.READY &&\r\n                                                Constants.ShipmentStatus[modShipment.Status] !== Constants.ShipmentStatus.CHECKED_IN &&\r\n                                                Constants.ShipmentStatus[modShipment.Status] !== Constants.ShipmentStatus.QUEUED ? true : false}\r\n                                            onClick={() => handleTopUpDecantApproval(\"SaveCompartment\")}\r\n                                        ></Button>\r\n                                    </div> : (\"\")} */}\r\n                  </div>\r\n                </Tab.Pane>\r\n              );\r\n            })}\r\n            {customerInventoryTab.map((index) => {\r\n              return (\r\n                <Tab.Pane\r\n                  key={index}\r\n                  title={t(\"CustomerInventory_Details\")}\r\n                  // disabled={modShipment.ShipmentCode === \"\" || modShipment.ShipmentCode === undefined || modShipment.ShipmentCode === null\r\n                  //     || modCustomValues.CustomerInventory === \"FALSE\" || isEnterpriseNode}\r\n                >\r\n                  <div className=\"row marginRightZero tableScroll\">\r\n                    <div className=\"col-12 detailsTable\">\r\n                      <DataTable\r\n                        data={customerInventory}\r\n                        scrollable={true}\r\n                        scrollHeight=\"320px\"\r\n                      >\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"CustomerCode\"\r\n                          field=\"CustomerCode\"\r\n                          header={t(\"Customer_Code\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"BaseProductCode\"\r\n                          field=\"BaseProductCode\"\r\n                          header={t(\"BaseProductInfo_BaseProdCode\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"PlannedQuantity\"\r\n                          field=\"PlannedQuantity\"\r\n                          header={t(\"ViewShipmentCompartment_PlannedQuantity\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"GrossActualQuantity\"\r\n                          field=\"GrossActualQuantity\"\r\n                          header={t(\"LocalTransactionsMapping_LoadedQuantity\")}\r\n                        ></DataTable.Column>\r\n                      </DataTable>\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n              );\r\n            })}\r\n            {productAllocationTab.map((index) => {\r\n              return (\r\n                <Tab.Pane\r\n                  key={index}\r\n                  title={\r\n                    ProdAllocEntity.toUpperCase().includes(\"CUSTOMER\")\r\n                      ? t(\"Product_Allocation_Customer_Header\")\r\n                      : t(\"Product_Allocation_Carrier_Header\")\r\n                  }\r\n                >\r\n                  <div className=\"row marginRightZero tableScroll\">\r\n                    <div className=\"col-12 detailsTable\">\r\n                      <DataTable\r\n                        data={productAllocationList}\r\n                        scrollable={true}\r\n                        scrollHeight=\"320px\"\r\n                      >\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"customercode\"\r\n                          field=\"customercode\"\r\n                          header={\r\n                            ProdAllocEntity.toUpperCase().includes(\"CUSTOMER\")\r\n                              ? t(\"Customer_Code\")\r\n                              : t(\"Entity_Carrier_Code\")\r\n                          }\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"productcode\"\r\n                          field=\"productcode\"\r\n                          header={t(\"ProductAllocation_Product_Code\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"allocationtype\"\r\n                          field=\"allocationtype\"\r\n                          header={t(\"ProductAllocation_Allocation_Type\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"allocationperiod\"\r\n                          field=\"allocationperiod\"\r\n                          header={t(\r\n                            \"ProductAllocationItemInfo_AllocationFrequency\"\r\n                          )}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"startdate\"\r\n                          field=\"startdate\"\r\n                          header={t(\"ContractInfo_StartDate\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"enddate\"\r\n                          field=\"enddate\"\r\n                          header={t(\"ContractInfo_EndDate\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"allocatedqty\"\r\n                          field=\"allocatedqty\"\r\n                          header={t(\"ProductAllocationItemInfo_AllocatedQty\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"blockedqty\"\r\n                          field=\"blockedqty\"\r\n                          header={t(\"ProductAllocationItemInfo_BlockedQty\")}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"loadedqty\"\r\n                          field=\"loadedqty\"\r\n                          header={t(\"ProductAllocationItemInfo_LoadedQty\")}\r\n                        ></DataTable.Column>\r\n                      </DataTable>\r\n                    </div>\r\n                  </div>\r\n                  {productShareholderAllocationList.length > 0 ? (\r\n                    <div className=\"row marginRightZero tableScroll\">\r\n                      <div className=\"col-12 detailsTable\">\r\n                        <DataTable\r\n                          data={productShareholderAllocationList}\r\n                          scrollable={true}\r\n                          scrollHeight=\"320px\"\r\n                        >\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"customercode\"\r\n                            field=\"customercode\"\r\n                            header={t(\"Customer_Code\")}\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"productcode\"\r\n                            field=\"productcode\"\r\n                            header={t(\"ProductAllocation_Product_Code\")}\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"allocationtype\"\r\n                            field=\"allocationtype\"\r\n                            header={t(\"ProductAllocation_Allocation_Type\")}\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"allocationperiod\"\r\n                            field=\"allocationperiod\"\r\n                            header={t(\r\n                              \"ProductAllocationItemInfo_AllocationFrequency\"\r\n                            )}\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"startdate\"\r\n                            field=\"startdate\"\r\n                            header={t(\"ContractInfo_StartDate\")}\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"enddate\"\r\n                            field=\"enddate\"\r\n                            header={t(\"ContractInfo_EndDate\")}\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"allocatedqty\"\r\n                            field=\"allocatedqty\"\r\n                            header={t(\"ProductAllocationItemInfo_AllocatedQty\")}\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"blockedqty\"\r\n                            field=\"blockedqty\"\r\n                            header={t(\"ProductAllocationItemInfo_BlockedQty\")}\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"loadedqty\"\r\n                            field=\"loadedqty\"\r\n                            header={t(\"ProductAllocationItemInfo_LoadedQty\")}\r\n                          ></DataTable.Column>\r\n                        </DataTable>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Tab.Pane>\r\n              );\r\n            })}\r\n          </Tab>\r\n        </div>\r\n        {/* //)} */}\r\n      </div>\r\n      {displayTMModalForceCompleteConfirm()}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Input, Button, Accordion, Checkbox } from \"@scuf/common\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\n\r\nTruckShipmentTrailerDetails.propTypes = {\r\n  trailerDetails: PropTypes.array.isRequired,\r\n  selectedAttributeList: PropTypes.array.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  ShipmentCode: PropTypes.string,\r\n  compAttributes: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function TruckShipmentTrailerDetails({\r\n  trailerDetails,\r\n  selectedAttributeList,\r\n  handleBack,\r\n  ShipmentCode,\r\n  compAttributes,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  const handleclick = () => {};\r\n\r\n  const handleAttributeType = (data) => {\r\n    const attribute = data.rowData.AttributesforUI.filter(\r\n      (att) => att.AttributeName === data.name\r\n    )[0];\r\n\r\n    return attribute.DataType.toLowerCase() ===\r\n      Constants.DataType.STRING.toLowerCase() ||\r\n      attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.INT.toLowerCase() ||\r\n      attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.LONG.toLowerCase() ||\r\n      attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.FLOAT.toLowerCase() ? (\r\n      <label>{attribute.AttributeValue}</label>\r\n    ) : attribute.DataType.toLowerCase() ===\r\n      Constants.DataType.BOOL.toLowerCase() ? (\r\n      <Checkbox\r\n        checked={\r\n          attribute.AttributeValue.toString().toLowerCase() === \"true\"\r\n            ? true\r\n            : false\r\n        }\r\n        disabled={true}\r\n      ></Checkbox>\r\n    ) : (\r\n      <label>{new Date(attribute.AttributeValue).toLocaleDateString()}</label>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"detailsContainer\">\r\n      <div className=\"row\">\r\n        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n          <h3>{t(\"Vehicle_TRDetails\") + \" : \" + ShipmentCode}</h3>\r\n        </div>\r\n      </div>\r\n      {trailerDetails && trailerDetails.length > 0\r\n        ? trailerDetails.map((item) => (\r\n            <ErrorBoundary>\r\n              <Accordion className=\"shipmentTrailerAccordion\">\r\n                <Accordion.Content\r\n                  className=\"attributeAccordian\"\r\n                  title={item.shipmentTrailerInfo.TrailerName}\r\n                >\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                      <Input\r\n                        fluid\r\n                        value={item.shipmentTrailerInfo.TrailerCode}\r\n                        label={t(\"ShipmentCompDetail_wcTrailerCode\")}\r\n                        disabled={true}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                      <Input\r\n                        fluid\r\n                        value={item.shipmentTrailerInfo.TrailerName}\r\n                        label={t(\"ShipmentCompDetail_wcTrailerName\")}\r\n                        disabled={true}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                      <Input\r\n                        fluid\r\n                        value={item.shipmentTrailerInfo.TareWeight}\r\n                        label={t(\"ViewShipmentTrailer_RegisteredTAREWt\")}\r\n                        disabled={true}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                      <Input\r\n                        fluid\r\n                        value={item.shipmentTrailerInfo.MaxLoadableWeight}\r\n                        label={t(\"PrimeMover_MaxLoadWeight\")}\r\n                        disabled={true}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                      <Input\r\n                        fluid\r\n                        value={item.shipmentTrailerInfo.MaxLoadableVolume}\r\n                        label={t(\"ViewShipmentTrailer_MaxLoadableVolume\")}\r\n                        disabled={true}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {selectedAttributeList.length > 0\r\n                    ? selectedAttributeList.map((attire) => (\r\n                        <ErrorBoundary>\r\n                          <Accordion className=\"shipmentTrailerAttributeAccordion\">\r\n                            <Accordion.Content\r\n                              className=\"attributeAccordian\"\r\n                              title={t(\"SHIPMENTTRAILER_Attributes\")} //{isEnterpriseNode ? (attire.TerminalCode + ' - ' + t(\"Attributes_Header\")) : (t(\"Attributes_Header\"))}\r\n                            >\r\n                              <AttributeDetails\r\n                                selectedAttributeList={\r\n                                  attire.attributeMetaDataList\r\n                                }\r\n                                handleCellDataEdit={handleclick}\r\n                                attributeValidationErrors={handleclick}\r\n                              ></AttributeDetails>\r\n                            </Accordion.Content>\r\n                          </Accordion>\r\n                        </ErrorBoundary>\r\n                      ))\r\n                    : null}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12 detailsTable\">\r\n                      <DataTable\r\n                        className=\"shipmentTrailerTareWeightTable\"\r\n                        data={item.shipmentTrailerTWInfoList}\r\n                        scrollable={true}\r\n                        scrollHeight=\"320px\"\r\n                      >\r\n                        <DataTable.Column\r\n                          className=\"compColHeight\"\r\n                          key=\"TareWeightTime\"\r\n                          field=\"TareWeightTime\"\r\n                          header={t(\"ViewShipmentTrailerStatus_Time\")}\r\n                          editable={false}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight\"\r\n                          key=\"WeighBridgeCode\"\r\n                          field=\"WeighBridgeCode\"\r\n                          header={t(\"ViewShipmentTrailerStatus_Weighbridge\")}\r\n                          editable={false}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight\"\r\n                          key=\"TareWeight\"\r\n                          field=\"TareWeight\"\r\n                          header={t(\"ViewShipmentTrailerStatus_TareWeight\")}\r\n                          editable={false}\r\n                        ></DataTable.Column>\r\n                        {compAttributes\r\n                          ? compAttributes.map((att) => {\r\n                              return (\r\n                                <DataTable.Column\r\n                                  className=\"compColHeight\"\r\n                                  header={t(att.AttributeName)}\r\n                                  editable={false}\r\n                                  renderer={handleAttributeType}\r\n                                ></DataTable.Column>\r\n                              );\r\n                            })\r\n                          : null}\r\n                      </DataTable>\r\n                    </div>\r\n                    <div className=\"col-12 detailsTable\">\r\n                      <DataTable\r\n                        className=\"shipmentTrailerTareWeightTable\"\r\n                        data={item.shipmentTrailerWBInfoList}\r\n                        scrollable={true}\r\n                        scrollHeight=\"320px\"\r\n                      >\r\n                        <DataTable.Column\r\n                          className=\"compColHeight\"\r\n                          key=\"EndTime\"\r\n                          field=\"EndTime\"\r\n                          header={t(\"ViewShipmentTrailerStatus_Time\")}\r\n                          editable={false}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight\"\r\n                          key=\"WeighBridgeCode\"\r\n                          field=\"WeighBridgeCode\"\r\n                          header={t(\"ViewShipmentTrailerStatus_Weighbridge\")}\r\n                          editable={false}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight\"\r\n                          key=\"MeasuredWeight\"\r\n                          field=\"MeasuredWeight\"\r\n                          header={t(\"ViewShipmentTrailerStatus_MeasuredWeight\")}\r\n                          editable={false}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                          className=\"compColHeight\"\r\n                          key=\"MaxLoadVol\"\r\n                          field=\"MaxLoadVol\"\r\n                          header={t(\r\n                            \"ViewShipmentTrailerStatus_ActualLoadedVol\"\r\n                          )}\r\n                          editable={false}\r\n                        ></DataTable.Column>\r\n                        {compAttributes\r\n                          ? compAttributes.map((att) => {\r\n                              return (\r\n                                <DataTable.Column\r\n                                  className=\"compColHeight\"\r\n                                  header={t(att.AttributeName)}\r\n                                  editable={false}\r\n                                  renderer={handleAttributeType}\r\n                                ></DataTable.Column>\r\n                              );\r\n                            })\r\n                          : null}\r\n                      </DataTable>\r\n                    </div>\r\n                  </div>\r\n                </Accordion.Content>\r\n              </Accordion>\r\n            </ErrorBoundary>\r\n          ))\r\n        : null}\r\n      <div className=\"row\">\r\n        <div className=\"col col-lg-8\">\r\n          <Button\r\n            className=\"backButton\"\r\n            onClick={handleBack}\r\n            content={t(\"Back\")}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TruckShipmentManualEntryDetailsComposite from \"../Details/TruckShipmentManualEntryDetailsComposite\";\r\nimport TruckShipmentDetails from \"../../UIBase/Details/TruckShipmentDetails\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { shipmentValidationDef } from \"../../../JS/ValidationDef\";\r\nimport {\r\n  shipmentProductValidationDef,\r\n  shipmentCompartmentValidationDef,\r\n} from \"../../../JS/DetailsTableValidationDef\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport lodash from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport {\r\n  functionGroups,\r\n  fnSBP,\r\n  fnSBC,\r\n  fnOverrideShipmentSeq,\r\n  fnKPIInformation,\r\n  fnCloseShipment,\r\n  fnShipmentStatus,\r\n  fnPrintBOL,\r\n  fnPrintFAN,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport { emptyShipment } from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport TransactionSummaryOperations from \"../Common/TransactionSummaryOperations\";\r\nimport { TruckShipmentViewAuditTrailDetails } from \"../../UIBase/Details/TruckShipmentViewAuditTrailDetails\";\r\nimport TruckShipmentTrailerDetails from \"../../UIBase/Details/TruckShipmentTrailerDetails\";\r\nimport {\r\n  shipmentAttributeEntity,\r\n  shipmentCompartmentAttributeEntity,\r\n  shipmentDestinationCompartmentAttributeEntity,\r\n  shipmentDetailsAttributeEntity,\r\n  shipmentTrailerWeighBridgeAttributeEntity,\r\n  shipmentTrailerAttributeEntity,\r\n  shipmentStatusTimeAttributeEntity,\r\n} from \"../../../JS/AttributeEntity\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { TruckShipmentViewLoadingDetails } from \"../../UIBase/Details/TruckShipmentViewLoadingDetails\";\r\nimport { Modal, Button, Select, Input, Checkbox } from \"@scuf/common\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { kpiTruckShipmentDetail } from \"../../../JS/KPIPageName\";\r\nimport TruckShipmentSealDetailsComposite from \"../Details/TruckShipmentSealDetailsComposite\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\n\r\nclass TruckShipmentDetailsComposite extends Component {\r\n  state = {\r\n    shipment: {},\r\n    modShipment: {},\r\n    modCustomValues: {},\r\n    modCompartmentPlans: [],\r\n    modProductPlans: [],\r\n    modLoadingDetails: [],\r\n    staticLoadingDetails: [],\r\n    trailerDetails: [],\r\n    vehicleDetails: { carrierCode: \"\", vehicleCompartments: [] },\r\n    modVehicleDetails: { carrierCode: \"\", vehicleCompartments: [] },\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      shipmentValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    selectedCompartmentPlans: [],\r\n    selectedProductPlans: [],\r\n    vehicleOptions: [],\r\n    driverOptions: [],\r\n    quantityUOMOptions: [],\r\n    finishedProductOptions: [],\r\n    compSeqOptions: [],\r\n    customerDestinationOptions: [],\r\n    vehicleSearchOptions: [],\r\n    driverSearchOptions: [],\r\n    expandedRows: [],\r\n    selectedAttributeList: [],\r\n    attributeValidationErrors: [],\r\n    attributeMetaDataList: [],\r\n    compAttributeMetaDataList: [],\r\n    prodCompAttributeMetaDataList: [],\r\n    trailerCompAttributeMetaDataList: [],\r\n    compAttributeValidationErrors: [],\r\n    prodCompAttributeValidationErrors: [],\r\n    customerInventory: [],\r\n    isPlanned: false,\r\n    shipmentNextOperations: [],\r\n    currentShipmentStatuses: [],\r\n    isValidationPassed: true,\r\n    isManualEntry: false,\r\n    isVolumeBased: false,\r\n    activeTab: this.props.ShipmentType.toLowerCase() === fnSBC ? 1 : 0,\r\n    isDisableSubmitForApproval: true,\r\n    isViewAuditTrail: false,\r\n    isViewTrailerDetails: false,\r\n    auditTrailList: [],\r\n    modAuditTrailList: [],\r\n    productAllocationList: [],\r\n    ProdAllocEntity: \"\",\r\n    productShareholderAllocationList: [],\r\n    trailers: [],\r\n    selectedShipTrailerAttributeList: [],\r\n    selectedCompAttributes: [],\r\n    isViewLoadingDetails: false,\r\n    modViewLoadingDetails: [],\r\n    loadingExpandedRows: [],\r\n    nonConfigColumns: [],\r\n    isSealCompartments: false,\r\n    sealCompartments: [],\r\n    isRecordWeight: false,\r\n    recordWeightList: [],\r\n    weighBridgeCode: \"\",\r\n    scadaValue: \"\",\r\n    allowOutofRangeTW: false,\r\n    isCloseShipment: false,\r\n    isVehicleCrippled: false,\r\n    isNotRevised: false,\r\n    topUpDecantOptions: [\r\n      Constants.TopUpDecantApprovalStatus.NONE,\r\n      Constants.TopUpDecantApprovalStatus.REQUEST_APPROVE,\r\n      Constants.TopUpDecantApprovalStatus.REQUEST_REJECT,\r\n    ],\r\n    ddlTopUpDecantStatus: null,\r\n    contractCodeOptions: [],\r\n    ordertCodeOptions: [],\r\n    isMarineTransLoading: false,\r\n    isRailTransloading: false,\r\n    marineReceiptCodes: [],\r\n    marineReceiptCompCodes: [],\r\n    drawerStatus:\r\n      this.props.userDetails.EntityResult.IsWebPortalUser === true\r\n        ? true\r\n        : false,\r\n    otherSourceData: [],\r\n    isAutoGeneratedShipmentCode: false,\r\n    isEnforcingEnabled: false,\r\n    isBonded: false,\r\n    bondExpiryDate: null,\r\n    isVehicleChanged: false,\r\n    autoGeneratedCode: \"\",\r\n    isVehicleBonded: false,\r\n    vehicleBondPopUp: false,\r\n    vehicleBondExpiryPopUp: false,\r\n    stockProducts: false,\r\n    isLoadingDetailsChanged: false,\r\n    truckShipmentKPIList: [],\r\n    vehicleForRecordWeight: {},\r\n    isLadenWeightValid: false,\r\n    ladenWeightError: \"\",\r\n\r\n    tempShipment: {},\r\n\r\n    showShipmentAuthenticationLayout: false,\r\n    showAuthorizeToLoadAuthenticationLayout: false,\r\n    showAllowToLoadAuthenticationLayout: false,\r\n    showCloseShipmentAuthenticationLayout: false,\r\n    showViewBOLAuthenticationLayout: false,\r\n    showPrintBOLAuthenticationLayout: false,\r\n    showFANAuthenticationLayout: false,\r\n    isAllocateBay: false,\r\n    bayData: [],\r\n    selectBay: [],\r\n    isDeAllocateBay: false,\r\n    ShipmentBay: \"\",\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modShipment = lodash.cloneDeep(this.state.modShipment);\r\n      modShipment[propertyName] = data;\r\n      var validationErrors = { ...this.state.validationErrors };\r\n      //this.setState({ modShipment });\r\n      if (shipmentValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          shipmentValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n      if (propertyName === \"IsBonded\") {\r\n        modShipment[\"ShipmentBondNo\"] = \"\";\r\n      }\r\n\r\n      this.setState({ validationErrors, modShipment }, () => {\r\n        if (propertyName === \"TerminalCodes\") {\r\n          this.terminalSelectionChange(data);\r\n        }\r\n      });\r\n\r\n      if (propertyName === \"TransloadSourceType\" && data === \"MARINE\") {\r\n        this.getMarineTransloadableReceipts();\r\n      }\r\n\r\n      if (propertyName === \"ddlTopUpDecant\") {\r\n        this.setState({ ddlTopUpDecantStatus: data });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        this.props.ShipmentType + \":Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getMarineReceipt = (commonCode) => {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineReceiptCode,\r\n        value: commonCode,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: Constants.TransportationType.MARINE,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetMarineReceipt,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult !== undefined\r\n          ) {\r\n            let compCodes = [];\r\n            if (\r\n              result.EntityResult.RailMarineReceiptCompartmentDetailPlanList !==\r\n              undefined &&\r\n              result.EntityResult.RailMarineReceiptCompartmentDetailPlanList !==\r\n              null\r\n            ) {\r\n              result.EntityResult.RailMarineReceiptCompartmentDetailPlanList.forEach(\r\n                (item) => {\r\n                  if (item.IsTransloading === true)\r\n                    compCodes.push(item.CompartmentSeqNoInVehicle);\r\n                }\r\n              );\r\n            }\r\n            this.setState({\r\n              marineReceiptCompCodes:\r\n                Utilities.transferListtoOptions(compCodes),\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting marineReceipt:\", error);\r\n      });\r\n  };\r\n\r\n  handleCompartmentPlanCellDataEdit = (newVal, cellData) => {\r\n    try {\r\n      let modCompartmentPlans = lodash.cloneDeep(\r\n        this.state.modCompartmentPlans\r\n      );\r\n      modCompartmentPlans[cellData.rowIndex][cellData.field] = newVal;\r\n      if (cellData.field === \"CustomerCode\") {\r\n        let customerDestinationOptions = this.state.customerDestinationOptions;\r\n        if (\r\n          customerDestinationOptions !== undefined &&\r\n          customerDestinationOptions !== null\r\n        ) {\r\n          if (\r\n            customerDestinationOptions[newVal] !== undefined &&\r\n            Array.isArray(customerDestinationOptions[newVal]) &&\r\n            customerDestinationOptions[newVal].length === 1\r\n          ) {\r\n            modCompartmentPlans[cellData.rowIndex][\"DestinationCode\"] =\r\n              customerDestinationOptions[newVal][0];\r\n          } else {\r\n            modCompartmentPlans[cellData.rowIndex][\"DestinationCode\"] = \"\";\r\n          }\r\n        }\r\n      } else if (cellData.field === \"CompartmentSeqNoInVehicle\") {\r\n        let vehicleDetails = this.state.modVehicleDetails;\r\n        let vehicleCompartments = vehicleDetails.vehicleCompartments.filter(\r\n          (vc) => vc.vehCompSeq.toString() === newVal.toString()\r\n        );\r\n        if (vehicleCompartments.length > 0) {\r\n          modCompartmentPlans[cellData.rowIndex][\"Quantity\"] =\r\n            vehicleCompartments[0].SFL !== null &&\r\n              vehicleCompartments[0].SFL !== \"\"\r\n              ? vehicleCompartments[0].SFL.toLocaleString()\r\n              : null;\r\n          modCompartmentPlans[cellData.rowIndex][\"TrailerCode\"] =\r\n            vehicleCompartments[0].trailerCode;\r\n          modCompartmentPlans[cellData.rowIndex][\"CompartmentCode\"] =\r\n            vehicleCompartments[0].compCode;\r\n        }\r\n      }\r\n      this.attributeToggleExpand(\r\n        modCompartmentPlans[cellData.rowIndex],\r\n        true,\r\n        true\r\n      );\r\n      this.setState({ modCompartmentPlans });\r\n    } catch (error) {\r\n      console.log(\r\n        this.props.ShipmentType +\r\n        \":Error occured on handleCompartmentPlanCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getShipmentStatusOperations(modShipment) {\r\n    try {\r\n      let obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: 0,\r\n        KeyCodes: null,\r\n        Entity: modShipment,\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.GetShipmentOperations,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          let nextOperations = [];\r\n          Object.keys(result.EntityResult).forEach((operation) => {\r\n            if (result.EntityResult[operation]) nextOperations.push(operation);\r\n          });\r\n          nextOperations.push(\"ViewAllShipment_Trailer_Details\");\r\n          this.setState({ shipmentNextOperations: nextOperations });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Error while getting getShipmentStatusOperations:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  getShipmentStatuses(shipmentRow) {\r\n    try {\r\n      let shipType =\r\n        this.props.ShipmentType.toLowerCase() === fnSBP\r\n          ? Constants.shipmentType.PRODUCT\r\n          : Constants.shipmentType.COMPARTMENT;\r\n      axios(\r\n        RestAPIs.GetShipmentStatuses +\r\n        \"?shCode=\" +\r\n        this.props.selectedShareholder +\r\n        \"&shipmentCode=\" +\r\n        shipmentRow.ShipmentCode +\r\n        \"&shipmentType=\" +\r\n        shipType,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          //let lastStatus = result.EntityResult[Object.keys(result.EntityResult)[Object.keys(result.EntityResult).length - 1]];\r\n          this.setState({\r\n            currentShipmentStatuses: result.EntityResult,\r\n            //lastStatus: lastStatus,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting getShipmentStatuses:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  handleProductPlanCellDataEdit = (newVal, cellData) => {\r\n    try {\r\n      let modProductPlans = lodash.cloneDeep(this.state.modProductPlans);\r\n      modProductPlans[cellData.rowIndex][cellData.field] = newVal;\r\n\r\n      if (cellData.field === \"CustomerCode\") {\r\n        //let detsinations = [];\r\n        let customerDestinationOptions = this.state.customerDestinationOptions;\r\n        if (\r\n          customerDestinationOptions !== undefined &&\r\n          customerDestinationOptions !== null\r\n        ) {\r\n          if (\r\n            customerDestinationOptions[newVal] !== undefined &&\r\n            Array.isArray(customerDestinationOptions[newVal]) &&\r\n            customerDestinationOptions[newVal].length === 1\r\n          ) {\r\n            modProductPlans[cellData.rowIndex][\"DestinationCode\"] =\r\n              customerDestinationOptions[newVal][0];\r\n          } else {\r\n            modProductPlans[cellData.rowIndex][\"DestinationCode\"] = \"\";\r\n          }\r\n        }\r\n      }\r\n      this.attributeToggleExpand(\r\n        modProductPlans[cellData.rowIndex],\r\n        true,\r\n        true\r\n      );\r\n      this.setState({ modProductPlans });\r\n    } catch (error) {\r\n      console.log(\r\n        this.props.ShipmentType +\r\n        \":Error occured on handleProductPlanCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var selectedAttributeList = [];\r\n\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList.SHIPMENT\r\n      );\r\n      selectedAttributeList = lodash.cloneDeep(\r\n        this.state.selectedAttributeList\r\n      );\r\n\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      var modShipment = lodash.cloneDeep(this.state.modShipment);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = selectedAttributeList.find((selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        });\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.forEach(function (attributeMetaData) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue = modShipment.Attributes.find(\r\n                (trailerAttribute) => {\r\n                  return trailerAttribute.TerminalCode === terminal;\r\n                }\r\n              );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n\r\n      selectedAttributeList = [];\r\n      selectedAttributeList = attributesTerminalsList;\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n\r\n      this.formCompartmentPlanAttributes(selectedTerminals);\r\n\r\n      if (this.props.ShipmentType.toLowerCase() === fnSBP)\r\n        this.formProductPlanAttributes(selectedTerminals);\r\n\r\n      this.setState({ selectedAttributeList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList.SHIPMENT\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList) &&\r\n        attributeMetaDataList.length > 0\r\n      )\r\n        this.terminalSelectionChange([attributeMetaDataList[0].TerminalCode]);\r\n      else {\r\n        var compAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList.SHIPMENTDESTINATIONCOMPARTMENT\r\n        );\r\n        var prodPlanAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList.SHIPMENTDETAILS\r\n        );\r\n\r\n        if (\r\n          Array.isArray(compAttributeMetaDataList) &&\r\n          compAttributeMetaDataList.length > 0\r\n        )\r\n          this.formCompartmentPlanAttributes([\r\n            compAttributeMetaDataList[0].TerminalCode,\r\n          ]);\r\n        if (\r\n          Array.isArray(prodPlanAttributeMetaDataList) &&\r\n          prodPlanAttributeMetaDataList.length > 0\r\n        )\r\n          this.formCompartmentPlanAttributes([\r\n            prodPlanAttributeMetaDataList[0].TerminalCode,\r\n          ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  formProductPlanAttributes(selectedTerminals) {\r\n    try {\r\n      let attributes = lodash.cloneDeep(this.state.attributeMetaDataList);\r\n      attributes = attributes.SHIPMENTDETAILS.filter(function (attTerminal) {\r\n        return selectedTerminals.some(function (selTerminal) {\r\n          return attTerminal.TerminalCode === selTerminal;\r\n        });\r\n      });\r\n      let modProductPlans = lodash.cloneDeep(this.state.modProductPlans);\r\n\r\n      modProductPlans.forEach((comp) => {\r\n        let compAttributes = [];\r\n        attributes.forEach((att) => {\r\n          att.attributeMetaDataList.forEach((attribute) => {\r\n            compAttributes.push({\r\n              AttributeCode: attribute.Code,\r\n              AttributeName: attribute.DisplayName,\r\n              AttributeValue: attribute.DefaultValue,\r\n              TerminalCode: attribute.TerminalCode,\r\n              IsMandatory: attribute.IsMandatory,\r\n              DataType: attribute.DataType,\r\n              IsReadonly: attribute.IsReadonly,\r\n              MinValue: attribute.MinValue,\r\n              MaxValue: attribute.MaxValue,\r\n              ValidationFormat: attribute.ValidationFormat,\r\n              compSequenceNo: \"\",\r\n              AttributeType: Constants.shipmentType.PRODUCT,\r\n            });\r\n          });\r\n        });\r\n        let attributesforNewComp = lodash.cloneDeep(compAttributes);\r\n\r\n        if (\r\n          (comp.FinishedProductCode === null ||\r\n            comp.FinishedProductCode === undefined ||\r\n            comp.FinishedProductCode === \"\") &&\r\n          (comp.AttributesforUI === null || comp.AttributesforUI === undefined)\r\n        ) {\r\n          comp.AttributesforUI = [];\r\n          attributesforNewComp.forEach((assignedAttributes) => {\r\n            assignedAttributes.compSequenceNo = comp.SeqNumber;\r\n            comp.AttributesforUI.push(assignedAttributes);\r\n          });\r\n        } else {\r\n          if (\r\n            comp.AttributesforUI !== null &&\r\n            comp.AttributesforUI !== undefined\r\n          ) {\r\n            comp.AttributesforUI = comp.AttributesforUI.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n\r\n            compAttributes = compAttributes.filter(function (attTerminal) {\r\n              return !comp.AttributesforUI.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal.TerminalCode;\r\n              });\r\n            });\r\n          } else comp.AttributesforUI = [];\r\n\r\n          let tempCompAttributes = lodash.cloneDeep(compAttributes);\r\n          if (\r\n            Array.isArray(comp.Attributes) &&\r\n            comp.Attributes !== null &&\r\n            comp.Attributes !== undefined &&\r\n            comp.Attributes.length > 0\r\n          ) {\r\n            let selectedTerminalAttributes = comp.Attributes.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n            selectedTerminalAttributes.forEach((att) => {\r\n              att.ListOfAttributeData.forEach((attData) => {\r\n                let tempAttIndex = tempCompAttributes.findIndex(\r\n                  (item) =>\r\n                    item.TerminalCode === att.TerminalCode &&\r\n                    item.AttributeCode === attData.AttributeCode\r\n                );\r\n                if (tempAttIndex >= 0)\r\n                  tempCompAttributes[tempAttIndex].AttributeValue =\r\n                    attData.AttributeValue;\r\n              });\r\n            });\r\n            tempCompAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo = comp.SeqNumber;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          } else {\r\n            let tempCompAttributes = lodash.cloneDeep(compAttributes);\r\n            tempCompAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo = comp.SeqNumber;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          }\r\n        }\r\n        this.attributeToggleExpand(comp, true, true);\r\n        if (comp.AttributesforUI !== undefined && comp.AttributesforUI != null)\r\n          comp.AttributesforUI = Utilities.compartmentAttributesConvertoDecimal(\r\n            comp.AttributesforUI\r\n          );\r\n        comp.AttributesforUI = Utilities.addSeqNumberToListObject(\r\n          comp.AttributesforUI\r\n        );\r\n      });\r\n      this.setState({ modProductPlans });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentDetailsComposite:Error in forming Product Plan Attributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  formCompartmentPlanAttributes(selectedTerminals) {\r\n    try {\r\n      let attributes = lodash.cloneDeep(this.state.attributeMetaDataList);\r\n\r\n      attributes = attributes.SHIPMENTDESTINATIONCOMPARTMENT.filter(function (\r\n        attTerminal\r\n      ) {\r\n        return selectedTerminals.some(function (selTerminal) {\r\n          return attTerminal.TerminalCode === selTerminal;\r\n        });\r\n      });\r\n      let modCompartmentPlans = lodash.cloneDeep(\r\n        this.state.modCompartmentPlans\r\n      );\r\n\r\n      modCompartmentPlans.forEach((comp) => {\r\n        let compAttributes = [];\r\n        attributes.forEach((att) => {\r\n          att.attributeMetaDataList.forEach((attribute) => {\r\n            compAttributes.push({\r\n              AttributeCode: attribute.Code,\r\n              AttributeName: attribute.DisplayName,\r\n              AttributeValue: attribute.DefaultValue,\r\n              TerminalCode: attribute.TerminalCode,\r\n              IsMandatory: attribute.IsMandatory,\r\n              DataType: attribute.DataType,\r\n              IsReadonly: attribute.IsReadonly,\r\n              MinValue: attribute.MinValue,\r\n              MaxValue: attribute.MaxValue,\r\n              ValidationFormat: attribute.ValidationFormat,\r\n              compSequenceNo: \"\",\r\n              AttributeType: Constants.shipmentType.COMPARTMENT,\r\n            });\r\n          });\r\n        });\r\n\r\n        let attributesforNewComp = lodash.cloneDeep(compAttributes);\r\n        if (\r\n          (comp.FinishedProductCode === null ||\r\n            comp.FinishedProductCode === undefined ||\r\n            comp.FinishedProductCode === \"\") &&\r\n          (comp.AttributesforUI === null || comp.AttributesforUI === undefined)\r\n        ) {\r\n          comp.AttributesforUI = [];\r\n          attributesforNewComp.forEach((assignedAttributes) => {\r\n            assignedAttributes.compSequenceNo = comp.SeqNumber;\r\n            comp.AttributesforUI.push(assignedAttributes);\r\n          });\r\n        } else {\r\n          if (\r\n            comp.AttributesforUI !== null &&\r\n            comp.AttributesforUI !== undefined\r\n          ) {\r\n            comp.AttributesforUI = comp.AttributesforUI.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n\r\n            compAttributes = compAttributes.filter(function (attTerminal) {\r\n              return !comp.AttributesforUI.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal.TerminalCode;\r\n              });\r\n            });\r\n          } else comp.AttributesforUI = [];\r\n          let tempCompAttributes = lodash.cloneDeep(compAttributes);\r\n          if (\r\n            Array.isArray(comp.Attributes) &&\r\n            comp.Attributes !== null &&\r\n            comp.Attributes !== undefined &&\r\n            comp.Attributes.length > 0\r\n          ) {\r\n            let selectedTerminalAttributes = comp.Attributes.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n            selectedTerminalAttributes.forEach((att) => {\r\n              att.ListOfAttributeData.forEach((attData) => {\r\n                let tempAttIndex = tempCompAttributes.findIndex(\r\n                  (item) =>\r\n                    item.TerminalCode === att.TerminalCode &&\r\n                    item.AttributeCode === attData.AttributeCode\r\n                );\r\n                if (tempAttIndex >= 0)\r\n                  tempCompAttributes[tempAttIndex].AttributeValue =\r\n                    attData.AttributeValue;\r\n              });\r\n            });\r\n            tempCompAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo = comp.SeqNumber;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          } else {\r\n            let tempCompAttributes = lodash.cloneDeep(compAttributes);\r\n            tempCompAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo = comp.SeqNumber;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          }\r\n        }\r\n        this.attributeToggleExpand(comp, true, true);\r\n        if (comp.AttributesforUI !== undefined && comp.AttributesforUI != null)\r\n          comp.AttributesforUI = Utilities.compartmentAttributesConvertoDecimal(\r\n            comp.AttributesforUI\r\n          );\r\n        comp.AttributesforUI = Utilities.addSeqNumberToListObject(\r\n          comp.AttributesforUI\r\n        );\r\n      });\r\n      this.setState({ modCompartmentPlans });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentDetailsComposite:Error in forming Compartment Plan Attributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  fillAttributeDetails(modShipment, attributeList) {\r\n    try {\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modShipment.Attributes = [];\r\n      attributeList.forEach((comp) => {\r\n        let attribute = {\r\n          ListOfAttributeData: [],\r\n        };\r\n        attribute.TerminalCode = comp.TerminalCode;\r\n        comp.attributeMetaDataList.forEach((det) => {\r\n          attribute.ListOfAttributeData.push({\r\n            AttributeCode: det.Code,\r\n            AttributeValue: det.DefaultValue,\r\n          });\r\n        });\r\n        modShipment.Attributes.push(attribute);\r\n      });\r\n\r\n      // For Compartment Attributes\r\n      modShipment.ShipmentDestinationCompartmentsInfo.forEach(\r\n        (shipmentCompartment) => {\r\n          if (\r\n            shipmentCompartment.AttributesforUI !== undefined &&\r\n            shipmentCompartment.AttributesforUI != null\r\n          )\r\n            shipmentCompartment.AttributesforUI =\r\n              Utilities.compartmentAttributesDatatypeConversion(\r\n                shipmentCompartment.AttributesforUI\r\n              );\r\n\r\n          let selectedTerminals = [];\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n            selectedTerminals = lodash.cloneDeep(modShipment.TerminalCodes);\r\n          else {\r\n            var compAttributeMetaDataList = lodash.cloneDeep(\r\n              this.state.attributeMetaDataList.SHIPMENTDESTINATIONCOMPARTMENT\r\n            );\r\n            if (compAttributeMetaDataList.length > 0)\r\n              selectedTerminals = [compAttributeMetaDataList[0].TerminalCode];\r\n          }\r\n          let terminalAttributes = [];\r\n          shipmentCompartment.Attributes = [];\r\n          if (selectedTerminals !== null && selectedTerminals !== undefined)\r\n            selectedTerminals.forEach((terminal) => {\r\n              if (\r\n                shipmentCompartment.AttributesforUI !== null &&\r\n                shipmentCompartment.AttributesforUI !== undefined\r\n              )\r\n                terminalAttributes = shipmentCompartment.AttributesforUI.filter(\r\n                  function (attTerminal) {\r\n                    return attTerminal.TerminalCode === terminal;\r\n                  }\r\n                );\r\n\r\n              let attribute = {\r\n                ListOfAttributeData: [],\r\n              };\r\n\r\n              attribute.TerminalCode = terminal;\r\n              terminalAttributes.forEach((termAtt) => {\r\n                if (\r\n                  termAtt.AttributeValue !== \"\" ||\r\n                  termAtt.IsMandatory === true\r\n                )\r\n                  attribute.ListOfAttributeData.push({\r\n                    AttributeCode: termAtt.AttributeCode,\r\n                    AttributeValue: termAtt.AttributeValue,\r\n                  });\r\n              });\r\n              if (\r\n                attribute.ListOfAttributeData !== null &&\r\n                attribute.ListOfAttributeData !== undefined &&\r\n                attribute.ListOfAttributeData.length > 0\r\n              )\r\n                shipmentCompartment.Attributes.push(attribute);\r\n            });\r\n        }\r\n      );\r\n\r\n      if (this.props.ShipmentType.toLowerCase() === fnSBP) {\r\n        // For Compartment Attributes\r\n        modShipment.ShipmentDetailsInfo.forEach((shipmentDetail) => {\r\n          if (\r\n            shipmentDetail.AttributesforUI !== undefined &&\r\n            shipmentDetail.AttributesforUI != null\r\n          )\r\n            shipmentDetail.AttributesforUI =\r\n              Utilities.compartmentAttributesDatatypeConversion(\r\n                shipmentDetail.AttributesforUI\r\n              );\r\n\r\n          let selectedTerminals = [];\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n            selectedTerminals = lodash.cloneDeep(modShipment.TerminalCodes);\r\n          else {\r\n            var compAttributeMetaDataList = lodash.cloneDeep(\r\n              this.state.attributeMetaDataList.SHIPMENTDETAILS\r\n            );\r\n            if (compAttributeMetaDataList.length > 0)\r\n              selectedTerminals = [compAttributeMetaDataList[0].TerminalCode];\r\n          }\r\n          let terminalAttributes = [];\r\n          shipmentDetail.Attributes = [];\r\n          if (selectedTerminals !== null && selectedTerminals !== undefined)\r\n            selectedTerminals.forEach((terminal) => {\r\n              if (\r\n                shipmentDetail.AttributesforUI !== null &&\r\n                shipmentDetail.AttributesforUI !== undefined\r\n              )\r\n                terminalAttributes = shipmentDetail.AttributesforUI.filter(\r\n                  function (attTerminal) {\r\n                    return attTerminal.TerminalCode === terminal;\r\n                  }\r\n                );\r\n\r\n              let attribute = {\r\n                ListOfAttributeData: [],\r\n              };\r\n\r\n              attribute.TerminalCode = terminal;\r\n              terminalAttributes.forEach((termAtt) => {\r\n                if (\r\n                  termAtt.AttributeValue !== \"\" ||\r\n                  termAtt.IsMandatory === true\r\n                )\r\n                  attribute.ListOfAttributeData.push({\r\n                    AttributeCode: termAtt.AttributeCode,\r\n                    AttributeValue: termAtt.AttributeValue,\r\n                  });\r\n              });\r\n              if (\r\n                attribute.ListOfAttributeData !== null &&\r\n                attribute.ListOfAttributeData !== undefined &&\r\n                attribute.ListOfAttributeData.length > 0\r\n              )\r\n                shipmentDetail.Attributes.push(attribute);\r\n            });\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n    this.setState({ modShipment });\r\n    return modShipment;\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      this.GetViewAllShipmentCustomData();\r\n      let shipmentCode =\r\n        this.props.ShipmentType.toLowerCase() === fnSBC\r\n          ? this.state.shipment.Code\r\n          : this.state.shipment.ShipmentCode;\r\n      if (\r\n        shipmentCode !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.setState({ isPlanned: false, isManualEntry: false, activeTab: 0 });\r\n        this.getShipment(nextProps.selectedRow, nextProps.ShipmentType, 0);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        this.props.ShipmentType + \":Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getShipmentDestinationCompartmentsFromModCompartmentPlans(\r\n    modCompartmentPlans\r\n  ) {\r\n    //let modShipment = lodash.cloneDeep(this.state.modShipment)\r\n    let shipmentCompartments = [];\r\n\r\n    if (Array.isArray(modCompartmentPlans)) {\r\n      modCompartmentPlans.forEach((shipmentCompartment) => {\r\n        if (\r\n          !(\r\n            shipmentCompartment.OrderCode === null ||\r\n            shipmentCompartment.OrderCode === \"\"\r\n          ) ||\r\n          !(\r\n            shipmentCompartment.ContractCode === null ||\r\n            shipmentCompartment.ContractCode === \"\"\r\n          ) ||\r\n          !(\r\n            shipmentCompartment.FinishedProductCode === null ||\r\n            shipmentCompartment.FinishedProductCode === \"\"\r\n          ) ||\r\n          !(\r\n            shipmentCompartment.CustomerCode === null ||\r\n            shipmentCompartment.CustomerCode === \"\"\r\n          ) ||\r\n          !(\r\n            shipmentCompartment.DestinationCode === null ||\r\n            shipmentCompartment.DestinationCode === \"\"\r\n          )\r\n        ) {\r\n          if (\r\n            this.props.ShipmentType.toLowerCase() === fnSBC ||\r\n            (this.props.ShipmentType.toLowerCase() === fnSBP &&\r\n              this.state.shipment.ShipmentCode !== \"\")\r\n          ) {\r\n            if (\r\n              shipmentCompartment.AttributesforUI !== undefined &&\r\n              shipmentCompartment.AttributesforUI != null\r\n            )\r\n              shipmentCompartment.AttributesforUI =\r\n                Utilities.compartmentAttributesConverttoLocaleString(\r\n                  shipmentCompartment.AttributesforUI\r\n                );\r\n\r\n            shipmentCompartments.push({\r\n              AssociatedOrderItems:\r\n                shipmentCompartment.OrderCode === null\r\n                  ? null\r\n                  : [\r\n                    {\r\n                      FinishedProductCode:\r\n                        shipmentCompartment.FinishedProductCode,\r\n                      OrderCode: shipmentCompartment.OrderCode,\r\n                      OrderItemQuantity:\r\n                        shipmentCompartment.Quantity !== null &&\r\n                          shipmentCompartment.Quantity !== \"\"\r\n                          ? shipmentCompartment.Quantity.toLocaleString()\r\n                          : null,\r\n                      QuantityUOM: this.state.modShipment.ShipmentQuantityUOM,\r\n                    },\r\n                  ],\r\n              AssociatedContractItems:\r\n                shipmentCompartment.ContractCode === null\r\n                  ? null\r\n                  : [\r\n                    {\r\n                      FinishedProductCode:\r\n                        shipmentCompartment.FinishedProductCode,\r\n                      ContractCode: shipmentCompartment.ContractCode,\r\n                      ContractItemQuantity:\r\n                        shipmentCompartment.Quantity !== null &&\r\n                          shipmentCompartment.Quantity !== \"\"\r\n                          ? shipmentCompartment.Quantity.toLocaleString()\r\n                          : null,\r\n                      QuantityUOM: this.state.modShipment.ShipmentQuantityUOM,\r\n                    },\r\n                  ],\r\n              CompartmentCode: shipmentCompartment.CompartmentCode,\r\n              CompartmentSeqNoInVehicle:\r\n                shipmentCompartment.CompartmentSeqNoInVehicle,\r\n              TrailerCode: shipmentCompartment.TrailerCode,\r\n              CompartmentSeqNoInTrailer:\r\n                shipmentCompartment.CompartmentSeqNoInTrailer,\r\n              Quantity:\r\n                shipmentCompartment.Quantity !== null &&\r\n                  shipmentCompartment.Quantity !== \"\"\r\n                  ? shipmentCompartment.Quantity.toLocaleString()\r\n                  : null,\r\n              QuantityUOM: this.state.modShipment.ShipmentQuantityUOM,\r\n              CustomerCode: shipmentCompartment.CustomerCode,\r\n              DestinationCode: shipmentCompartment.DestinationCode,\r\n              FinishedProductCode: shipmentCompartment.FinishedProductCode,\r\n              ShareholderCode: this.props.selectedShareholder,\r\n              ShipmentCode: this.state.modShipment.ShipmentCode,\r\n              TerminalCodes: this.state.modShipment.TerminalCodes,\r\n              Attributes: [],\r\n              AttributesforUI: shipmentCompartment.AttributesforUI,\r\n              TransReceiptCode: shipmentCompartment.TransReceiptCode,\r\n              TransCompSequenceNumber:\r\n                shipmentCompartment.TransCompSequenceNumber,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return shipmentCompartments;\r\n  }\r\n\r\n  getShipmentDetailsFromModProductPlans(modProductPlans) {\r\n    let shipmentDetails = [];\r\n    //let modShipment = lodash.cloneDeep(this.state.modShipment)\r\n\r\n    if (Array.isArray(modProductPlans)) {\r\n      modProductPlans.forEach((shipmentDetail) => {\r\n        if (\r\n          !(\r\n            shipmentDetail.OrderCode === null || shipmentDetail.OrderCode === \"\"\r\n          ) ||\r\n          !(\r\n            shipmentDetail.ContractCode === null ||\r\n            shipmentDetail.ContractCode === \"\"\r\n          ) ||\r\n          !(\r\n            shipmentDetail.FinishedProductCode === null ||\r\n            shipmentDetail.FinishedProductCode === \"\"\r\n          ) ||\r\n          !(\r\n            shipmentDetail.Quantity === null || shipmentDetail.Quantity === \"\"\r\n          ) ||\r\n          !(\r\n            shipmentDetail.CustomerCode === null ||\r\n            shipmentDetail.CustomerCode === \"\"\r\n          ) ||\r\n          !(\r\n            shipmentDetail.DestinationCode === null ||\r\n            shipmentDetail.DestinationCode === \"\"\r\n          )\r\n        ) {\r\n          if (\r\n            shipmentDetail.AttributesforUI !== undefined &&\r\n            shipmentDetail.AttributesforUI != null\r\n          )\r\n            shipmentDetail.AttributesforUI =\r\n              Utilities.compartmentAttributesConverttoLocaleString(\r\n                shipmentDetail.AttributesforUI\r\n              );\r\n\r\n          let shipDetail = {\r\n            AssociatedOrderItems:\r\n              shipmentDetail.OrderCode === null\r\n                ? null\r\n                : [\r\n                  {\r\n                    FinishedProductCode: shipmentDetail.FinishedProductCode,\r\n                    OrderCode: shipmentDetail.OrderCode,\r\n                    OrderItemQuantity:\r\n                      shipmentDetail.Quantity !== null &&\r\n                        shipmentDetail.Quantity !== \"\"\r\n                        ? shipmentDetail.Quantity.toLocaleString()\r\n                        : null,\r\n                    QuantityUOM: this.state.modShipment.ShipmentQuantityUOM,\r\n                  },\r\n                ],\r\n            AssociatedContractItems:\r\n              shipmentDetail.ContractCode === null\r\n                ? null\r\n                : [\r\n                  {\r\n                    FinishedProductCode: shipmentDetail.FinishedProductCode,\r\n                    ContractCode: shipmentDetail.ContractCode,\r\n                    ContractItemQuantity:\r\n                      shipmentDetail.Quantity !== null &&\r\n                        shipmentDetail.Quantity !== \"\"\r\n                        ? shipmentDetail.Quantity.toLocaleString()\r\n                        : null,\r\n                    QuantityUOM: this.state.modShipment.ShipmentQuantityUOM,\r\n                  },\r\n                ],\r\n\r\n            Quantity:\r\n              shipmentDetail.Quantity !== null && shipmentDetail.Quantity !== \"\"\r\n                ? shipmentDetail.Quantity.toLocaleString()\r\n                : null,\r\n            QuantityUOM: this.state.modShipment.ShipmentQuantityUOM,\r\n            CustomerCode: shipmentDetail.CustomerCode,\r\n            DestinationCode: shipmentDetail.DestinationCode,\r\n            FinishedProductCode: shipmentDetail.FinishedProductCode,\r\n            ShareholderCode: this.props.selectedShareholder,\r\n            ShipmentCode: this.state.modShipment.ShipmentCode,\r\n            TerminalCodes: this.state.modShipment.TerminalCodes,\r\n            Attributes: [],\r\n            AttributesforUI: shipmentDetail.AttributesforUI,\r\n          };\r\n          let ItemExists = false;\r\n          shipmentDetails.forEach((item) => {\r\n            if (\r\n              item.FinishedProductCode === shipmentDetail.FinishedProductCode &&\r\n              item.DestinationCode === shipmentDetail.DestinationCode &&\r\n              item.CustomerCode === shipmentDetail.CustomerCode\r\n            ) {\r\n              if (\r\n                item.AssociatedOrderItems !== null &&\r\n                item.AssociatedOrderItems.length > 0 &&\r\n                shipmentDetail.OrderCode !== null\r\n              ) {\r\n                for (\r\n                  let iOrderTrack = 0;\r\n                  iOrderTrack < item.AssociatedOrderItems.length &&\r\n                  ItemExists === false;\r\n                  iOrderTrack++\r\n                ) {\r\n                  let asoinfo = item.AssociatedOrderItems[iOrderTrack];\r\n                  if (shipmentDetail.OrderCode !== asoinfo.OrderCode) {\r\n                    ItemExists = true;\r\n                    item.AssociatedOrderItems.push({\r\n                      FinishedProductCode: shipmentDetail.FinishedProductCode,\r\n                      OrderCode: shipmentDetail.OrderCode,\r\n                      OrderItemQuantity:\r\n                        shipmentDetail.Quantity !== null &&\r\n                          shipmentDetail.Quantity !== \"\"\r\n                          ? shipmentDetail.Quantity.toLocaleString()\r\n                          : null,\r\n                      QuantityUOM: this.state.modShipment.ShipmentQuantityUOM,\r\n                    });\r\n                    item.Quantity =\r\n                      shipmentDetail.Quantity !== null &&\r\n                        shipmentDetail.Quantity !== \"\" &&\r\n                        item.Quantity !== null &&\r\n                        item.Quantity !== \"\"\r\n                        ? (\r\n                          Utilities.convertStringtoDecimal(item.Quantity) +\r\n                          Utilities.convertStringtoDecimal(\r\n                            shipmentDetail.Quantity\r\n                          )\r\n                        ).toLocaleString()\r\n                        : shipmentDetail.Quantity !== null &&\r\n                          shipmentDetail.Quantity !== \"\" &&\r\n                          (item.Quantity !== null || item.Quantity !== \"\")\r\n                          ? shipmentDetail.Quantity.toLocaleString()\r\n                          : (shipmentDetail.Quantity !== null ||\r\n                            shipmentDetail.Quantity !== \"\") &&\r\n                            item.Quantity !== null &&\r\n                            item.Quantity !== \"\"\r\n                            ? item.Quantity.toLocaleString()\r\n                            : null;\r\n                  }\r\n                }\r\n              } else if (\r\n                item.AssociatedContractItems !== null &&\r\n                item.AssociatedContractItems.length > 0 &&\r\n                shipmentDetail.ContractCode !== null\r\n              ) {\r\n                for (\r\n                  let iContractTrack = 0;\r\n                  iContractTrack < item.AssociatedContractItems.length &&\r\n                  ItemExists === false;\r\n                  iContractTrack++\r\n                ) {\r\n                  let asoinfo = item.AssociatedContractItems[iContractTrack];\r\n                  if (shipmentDetail.ContractCode !== asoinfo.ContractCode) {\r\n                    ItemExists = true;\r\n                    item.AssociatedContractItems.push({\r\n                      FinishedProductCode: shipmentDetail.FinishedProductCode,\r\n                      ContractCode: shipmentDetail.ContractCode,\r\n                      ContractItemQuantity:\r\n                        shipmentDetail.Quantity !== null &&\r\n                          shipmentDetail.Quantity !== \"\"\r\n                          ? shipmentDetail.Quantity.toLocaleString()\r\n                          : null,\r\n                      QuantityUOM: this.state.modShipment.ShipmentQuantityUOM,\r\n                    });\r\n\r\n                    item.Quantity =\r\n                      shipmentDetail.Quantity !== null &&\r\n                        shipmentDetail.Quantity !== \"\" &&\r\n                        item.Quantity !== null &&\r\n                        item.Quantity !== \"\"\r\n                        ? (\r\n                          Utilities.convertStringtoDecimal(item.Quantity) +\r\n                          Utilities.convertStringtoDecimal(\r\n                            shipmentDetail.Quantity\r\n                          )\r\n                        ).toLocaleString()\r\n                        : shipmentDetail.Quantity !== null &&\r\n                          shipmentDetail.Quantity !== \"\" &&\r\n                          (item.Quantity !== null || item.Quantity !== \"\")\r\n                          ? shipmentDetail.Quantity.toLocaleString()\r\n                          : (shipmentDetail.Quantity !== null ||\r\n                            shipmentDetail.Quantity !== \"\") &&\r\n                            item.Quantity !== null &&\r\n                            item.Quantity !== \"\"\r\n                            ? item.Quantity.toLocaleString()\r\n                            : null;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          });\r\n\r\n          if (ItemExists === false) shipmentDetails.push(shipDetail);\r\n        }\r\n      });\r\n    }\r\n    return shipmentDetails;\r\n  }\r\n\r\n  getMarineTransloadableReceipts() {\r\n    axios(\r\n      RestAPIs.GetMarineTransloadableReceipts,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            marineReceiptCodes: Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            ),\r\n          });\r\n        } else {\r\n          console.log(\r\n            \"Error in GetMarineTransloadableReceipts:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error while geting GetMarineTransloadableReceipts:\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getTarnsloadingDetails() {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=Transloading\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult != null) {\r\n            this.setState({\r\n              isMarineTransLoading:\r\n                result.EntityResult.MarineEnable.toUpperCase() === \"TRUE\"\r\n                  ? true\r\n                  : false,\r\n              isRailTransloading:\r\n                result.EntityResult.RAILEnable.toUpperCase() === \"TRUE\"\r\n                  ? true\r\n                  : false,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              isMarineTransLoading: false,\r\n              isRailTransloading: false,\r\n            });\r\n          }\r\n        } else {\r\n          this.setState({\r\n            isMarineTransLoading: false,\r\n            isRailTransloading: false,\r\n          });\r\n          console.log(\"Error in getTarnsloadingDetails: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          productAllocationList: [],\r\n          productShareholderAllocationList: [],\r\n          ProdAllocEntity: \"\",\r\n        });\r\n        console.log(\r\n          \"TruckShipmentDetailsComposite: Error occurred on getTarnsloadingDetails\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getLookUpData(shipmentCode) {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=ProductAllocation\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let allocationEntity = result.EntityResult.AllocationEntity;\r\n          this.setState({ ProdAllocEntity: allocationEntity }, () =>\r\n            this.getProductAllocationDetails(allocationEntity, shipmentCode)\r\n          );\r\n        } else {\r\n          this.setState({\r\n            productAllocationList: [],\r\n            productShareholderAllocationList: [],\r\n            ProdAllocEntity: \"\",\r\n          });\r\n          console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          productAllocationList: [],\r\n          productShareholderAllocationList: [],\r\n          ProdAllocEntity: \"\",\r\n        });\r\n        console.log(\r\n          \"TruckShipmentDetailsComposite: Error occurred on getLookUpData\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getSiteConfigurationLookUP = () => {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=SiteConfiguration\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          const result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let siteConfiguration = result.EntityResult;\r\n            this.getWeighBridge(siteConfiguration);\r\n          } else {\r\n            console.log(\r\n              \"Error in getSiteConfigurationLookUP: \",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"TruckShipmentDetailsComposite: Error occurred on getSiteConfigurationLookUP\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentDetailsComposite: Error occurred on getSiteConfigurationLookUP\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  IsBonded() {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=Bonding\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let bonded = result.EntityResult[\"EnableBondingNon-Bonding\"];\r\n          this.setState({\r\n            isBonded: bonded.toUpperCase() === \"TRUE\" ? true : false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isBonded: false,\r\n          });\r\n          console.log(\"Error in get IsBonded: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          isBonded: false,\r\n        });\r\n        console.log(\r\n          \"TruckShipmentDetailsComposite: Error occurred on get IsBonded\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getProductAllocationDetails(allocationEntity, shipmentCode) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetProductAllocationDetails +\r\n        \"?shCode=\" +\r\n        this.props.selectedShareholder +\r\n        \"&shipmentCode=\" +\r\n        shipmentCode +\r\n        \"&transportationType=\" +\r\n        Constants.TransportationType.ROAD,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          const result = response.data;\r\n          if (result.IsSuccess) {\r\n            let dsProductAllocationItems = result.EntityResult;\r\n            let productAllocationList = [];\r\n            let productShareholderAllocationList = [];\r\n            if (allocationEntity.toUpperCase().includes(\"SHAREHOLDER\")) {\r\n              if (\r\n                dsProductAllocationItems !== null &&\r\n                dsProductAllocationItems.Table1 !== null &&\r\n                dsProductAllocationItems.Table1.length > 0\r\n              ) {\r\n                productShareholderAllocationList =\r\n                  dsProductAllocationItems.Table1;\r\n\r\n                productShareholderAllocationList.forEach((prodAlloc) => {\r\n                  prodAlloc.startdate = new Date(\r\n                    prodAlloc.startdate\r\n                  ).toLocaleDateString();\r\n                  prodAlloc.enddate = new Date(\r\n                    prodAlloc.enddate\r\n                  ).toLocaleDateString();\r\n                  prodAlloc.allocatedqty =\r\n                    prodAlloc.allocatedqty.toString() + \" \" + prodAlloc.uom;\r\n                  prodAlloc.blockedqty =\r\n                    prodAlloc.blockedqty.toString() + \" \" + prodAlloc.uom;\r\n                  prodAlloc.loadedqty =\r\n                    prodAlloc.loadedqty.toString() + \" \" + prodAlloc.uom;\r\n                });\r\n              } else if (\r\n                dsProductAllocationItems !== null &&\r\n                dsProductAllocationItems.Table !== null &&\r\n                dsProductAllocationItems.Table.length > 0 &&\r\n                Object.keys(dsProductAllocationItems).length === 1\r\n              ) {\r\n                productShareholderAllocationList =\r\n                  dsProductAllocationItems.Table;\r\n\r\n                productShareholderAllocationList.forEach((prodAlloc) => {\r\n                  prodAlloc.startdate = new Date(\r\n                    prodAlloc.startdate\r\n                  ).toLocaleDateString();\r\n                  prodAlloc.enddate = new Date(\r\n                    prodAlloc.enddate\r\n                  ).toLocaleDateString();\r\n                  prodAlloc.allocatedqty =\r\n                    prodAlloc.allocatedqty.toString() + \" \" + prodAlloc.uom;\r\n                  prodAlloc.blockedqty =\r\n                    prodAlloc.blockedqty.toString() + \" \" + prodAlloc.uom;\r\n                  prodAlloc.loadedqty =\r\n                    prodAlloc.loadedqty.toString() + \" \" + prodAlloc.uom;\r\n                });\r\n              }\r\n              this.setState({\r\n                productShareholderAllocationList:\r\n                  productShareholderAllocationList,\r\n              });\r\n            }\r\n            if (allocationEntity.toUpperCase().includes(\"CUSTOMER\")) {\r\n              if (\r\n                dsProductAllocationItems !== null &&\r\n                dsProductAllocationItems.Table !== null &&\r\n                dsProductAllocationItems.Table.length > 0\r\n              ) {\r\n                productAllocationList = dsProductAllocationItems.Table;\r\n                productAllocationList.forEach((prodAlloc) => {\r\n                  prodAlloc.startdate = new Date(\r\n                    prodAlloc.startdate\r\n                  ).toLocaleDateString();\r\n                  prodAlloc.enddate = new Date(\r\n                    prodAlloc.enddate\r\n                  ).toLocaleDateString();\r\n                  prodAlloc.allocatedqty =\r\n                    prodAlloc.allocatedqty.toString() + \" \" + prodAlloc.uom;\r\n                  prodAlloc.blockedqty =\r\n                    prodAlloc.blockedqty.toString() + \" \" + prodAlloc.uom;\r\n                  prodAlloc.loadedqty =\r\n                    prodAlloc.loadedqty.toString() + \" \" + prodAlloc.uom;\r\n                });\r\n              }\r\n\r\n              this.setState({ productAllocationList: productAllocationList });\r\n            }\r\n          } else {\r\n            this.setState({\r\n              productAllocationList: [],\r\n              productShareholderAllocationList: [],\r\n              ProdAllocEntity: \"\",\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            productAllocationList: [],\r\n            productShareholderAllocationList: [],\r\n            ProdAllocEntity: \"\",\r\n          });\r\n          console.log(\"Error while getting product Allocation Details:\", error);\r\n        });\r\n    } catch (error) {\r\n      this.setState({\r\n        productAllocationList: [],\r\n        productShareholderAllocationList: [],\r\n        ProdAllocEntity: \"\",\r\n      });\r\n      console.log(\"Error in getting product Allocation details\", error);\r\n    }\r\n  }\r\n\r\n  handleSaveShipment = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempShipment = lodash.cloneDeep(this.state.tempShipment);\r\n\r\n      this.state.shipment.ShipmentCode === \"\"\r\n        ? this.createShipment(tempShipment)\r\n        : this.updateShipment(tempShipment);\r\n    } catch (error) {\r\n      console.log(\"ShipDetailsComposite : Error in handleSaveShipment\");\r\n    }\r\n  };\r\n\r\n  saveShipment() {\r\n    let modShipment = lodash.cloneDeep(this.state.modShipment);\r\n\r\n    modShipment.ShipmentDestinationCompartmentsInfo =\r\n      this.getShipmentDestinationCompartmentsFromModCompartmentPlans(\r\n        this.state.modCompartmentPlans\r\n      );\r\n    if (this.props.ShipmentType.toLowerCase() === fnSBP) {\r\n      modShipment.ShipmentDetailsInfo =\r\n        this.getShipmentDetailsFromModProductPlans(this.state.modProductPlans);\r\n    } else modShipment.ShipmentDetailsInfo = undefined;\r\n\r\n    let attributeList = Utilities.attributesConverttoLocaleString(\r\n      this.state.selectedAttributeList\r\n    );\r\n\r\n    this.setState({ saveEnabled: false });\r\n    if (this.validateSave(modShipment, attributeList)) {\r\n      this.setState({ isValidationPassed: true });\r\n\r\n      modShipment = this.ConvertstringToDecimal(modShipment, attributeList);\r\n\r\n      let showShipmentAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempShipment = lodash.cloneDeep(modShipment);\r\n      this.setState({ showShipmentAuthenticationLayout, tempShipment }, () => {\r\n        if (showShipmentAuthenticationLayout === false) {\r\n          this.handleSaveShipment();\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ saveEnabled: true });\r\n    }\r\n  }\r\n\r\n  handleSave = () => {\r\n    try {\r\n      let enableSave =\r\n        this.state.shipment.ShipmentCode === \"\"\r\n          ? true\r\n          : this.state.modCustomValues.ShipmentUpdateAllow === \"TRUE\" &&\r\n          Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            this.props.ShipmentType.toLowerCase()\r\n          );\r\n\r\n      let modShipment = lodash.cloneDeep(this.state.modShipment);\r\n\r\n      if (enableSave) {\r\n        if (modShipment.IsBonded) {\r\n          if (!this.state.isVehicleBonded) {\r\n            this.setState({ vehicleBondPopUp: true });\r\n          } else if (\r\n            this.state.bondExpiryDate !== \"\" &&\r\n            this.state.bondExpiryDate !== null &&\r\n            this.state.bondExpiryDate !== undefined\r\n          ) {\r\n            this.setState({ vehicleBondExpiryPopUp: true });\r\n          }\r\n        } else this.saveShipment();\r\n      } else {\r\n        if (\r\n          this.props.ShipmentType.toLowerCase() === fnSBP &&\r\n          this.state.activeTab === 2 &&\r\n          this.state.isLoadingDetailsChanged &&\r\n          this.state.modCustomValues.DisableLoadingDetails === \"FALSE\"\r\n        )\r\n          this.handleTopUpDecantApproval(\"SaveCompartment\");\r\n        else if (\r\n          this.props.ShipmentType.toLowerCase() === fnSBC &&\r\n          this.state.activeTab === 1 &&\r\n          this.state.isLoadingDetailsChanged &&\r\n          this.state.modCustomValues.DisableLoadingDetails === \"FALSE\"\r\n        )\r\n          this.handleTopUpDecantApproval(\"SaveCompartment\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        this.props.ShipmentType + \":Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  ConvertstringToDecimal(modShipment, attributeList) {\r\n    try {\r\n      if (this.props.ShipmentType.toLowerCase() === fnSBC) {\r\n        modShipment.ShipmentDestinationCompartmentsInfo.forEach((sc) => {\r\n          sc.Quantity = Utilities.convertStringtoDecimal(sc.Quantity);\r\n          if (\r\n            Array.isArray(sc.AssociatedOrderItems) &&\r\n            sc.AssociatedOrderItems.length > 0\r\n          ) {\r\n            sc.AssociatedOrderItems[0].OrderItemQuantity =\r\n              Utilities.convertStringtoDecimal(\r\n                sc.AssociatedOrderItems[0].OrderItemQuantity\r\n              );\r\n          }\r\n\r\n          if (\r\n            Array.isArray(sc.AssociatedContractItems) &&\r\n            sc.AssociatedContractItems.length > 0\r\n          ) {\r\n            sc.AssociatedContractItems[0].ContractItemQuantity =\r\n              Utilities.convertStringtoDecimal(\r\n                sc.AssociatedContractItems[0].ContractItemQuantity\r\n              );\r\n          }\r\n        });\r\n      } else {\r\n        if (\r\n          modShipment.ShipmentDestinationCompartmentsInfo !== null &&\r\n          modShipment.ShipmentDestinationCompartmentsInfo !== undefined &&\r\n          modShipment.ShipmentDestinationCompartmentsInfo.length > 0\r\n        )\r\n          modShipment.ShipmentDestinationCompartmentsInfo.forEach((sc) => {\r\n            sc.Quantity = Utilities.convertStringtoDecimal(sc.Quantity);\r\n            if (\r\n              Array.isArray(sc.AssociatedOrderItems) &&\r\n              sc.AssociatedOrderItems.length > 0\r\n            ) {\r\n              sc.AssociatedOrderItems[0].OrderItemQuantity =\r\n                Utilities.convertStringtoDecimal(\r\n                  sc.AssociatedOrderItems[0].OrderItemQuantity\r\n                );\r\n            }\r\n\r\n            if (\r\n              Array.isArray(sc.AssociatedContractItems) &&\r\n              sc.AssociatedContractItems.length > 0\r\n            ) {\r\n              sc.AssociatedContractItems[0].ContractItemQuantity =\r\n                Utilities.convertStringtoDecimal(\r\n                  sc.AssociatedContractItems[0].ContractItemQuantity\r\n                );\r\n            }\r\n          });\r\n\r\n        modShipment.ShipmentDetailsInfo.forEach((sd) => {\r\n          sd.Quantity = Utilities.convertStringtoDecimal(sd.Quantity);\r\n          if (\r\n            Array.isArray(sd.AssociatedOrderItems) &&\r\n            sd.AssociatedOrderItems.length > 0\r\n          ) {\r\n            sd.AssociatedOrderItems[0].OrderItemQuantity =\r\n              Utilities.convertStringtoDecimal(\r\n                sd.AssociatedOrderItems[0].OrderItemQuantity\r\n              );\r\n          }\r\n\r\n          if (\r\n            Array.isArray(sd.AssociatedContractItems) &&\r\n            sd.AssociatedContractItems.length > 0\r\n          ) {\r\n            sd.AssociatedContractItems[0].ContractItemQuantity =\r\n              Utilities.convertStringtoDecimal(\r\n                sd.AssociatedContractItems[0].ContractItemQuantity\r\n              );\r\n          }\r\n        });\r\n      }\r\n      modShipment = this.fillAttributeDetails(modShipment, attributeList);\r\n    } catch (error) {\r\n      console.log(\"convertStringtoDecimal on truck shipment details\", error);\r\n    }\r\n    return modShipment;\r\n  }\r\n\r\n  validateSave(modShipment, attributeList) {\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(shipmentValidationDef).forEach(function (key) {\r\n      if (modShipment[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          shipmentValidationDef[key],\r\n          modShipment[key]\r\n        );\r\n    });\r\n    if (modShipment.Active !== this.state.shipment.Active) {\r\n      if (modShipment.Remarks === null || modShipment.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"OriginTerminal_RemarksRequired\";\r\n      }\r\n    }\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n    //let attributeList = lodash.cloneDeep(this.state.selectedAttributeList);\r\n\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n    let returnValue = true;\r\n    if (returnValue) {\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    }\r\n    // else {\r\n    //   return returnValue;\r\n    // }\r\n\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n    if (returnValue)\r\n      if (this.props.ShipmentType.toLowerCase() === fnSBC) {\r\n        let uniqueRecords = [\r\n          ...new Set(\r\n            modShipment.ShipmentDestinationCompartmentsInfo.map(\r\n              (a) => a.CompartmentSeqNoInVehicle\r\n            )\r\n          ),\r\n        ];\r\n        if (\r\n          uniqueRecords.length !==\r\n          modShipment.ShipmentDestinationCompartmentsInfo.length\r\n        ) {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [],\r\n            keyValues: [],\r\n            isSuccess: false,\r\n            errorMessage: \"Duplicate_Associated_Customers\",\r\n          });\r\n          this.props.onSaved(this.state.modShipment, \"update\", notification);\r\n          return false;\r\n        }\r\n\r\n        if (\r\n          Array.isArray(modShipment.ShipmentDestinationCompartmentsInfo) &&\r\n          modShipment.ShipmentDestinationCompartmentsInfo.length > 0\r\n        ) {\r\n          modShipment.ShipmentDestinationCompartmentsInfo.forEach(\r\n            (shipmentCompartment) => {\r\n              if (\r\n                modShipment.CreatedFromEntity === Constants.shipmentFrom.Order\r\n              ) {\r\n                let err = \"\";\r\n                if (\r\n                  Array.isArray(shipmentCompartment.AssociatedOrderItems) &&\r\n                  shipmentCompartment.AssociatedOrderItems.length > 0\r\n                ) {\r\n                  let shipOrder = shipmentCompartment.AssociatedOrderItems[0];\r\n                  if (\r\n                    shipOrder === null ||\r\n                    shipOrder.OrderCode === undefined ||\r\n                    shipOrder.OrderCode === null ||\r\n                    shipOrder.OrderCode === \"\"\r\n                  ) {\r\n                    err = \"ORDER_EMPTY\";\r\n                  }\r\n                } else {\r\n                  err = \"ORDER_EMPTY\";\r\n                }\r\n                if (err !== \"\") {\r\n                  notification.messageResultDetails.push({\r\n                    keyFields: [\"ShipmentCompDetail_CompSeqInVehicle\"],\r\n                    keyValues: [shipmentCompartment.CompartmentSeqNoInVehicle],\r\n                    isSuccess: false,\r\n                    errorMessage: err,\r\n                  });\r\n                }\r\n              } else if (\r\n                modShipment.CreatedFromEntity ===\r\n                Constants.shipmentFrom.Contract\r\n              ) {\r\n                let err = \"\";\r\n                if (\r\n                  Array.isArray(shipmentCompartment.AssociatedContractItems) &&\r\n                  shipmentCompartment.AssociatedContractItems.length > 0\r\n                ) {\r\n                  let shipOrder =\r\n                    shipmentCompartment.AssociatedContractItems[0];\r\n                  if (\r\n                    shipOrder === null ||\r\n                    shipOrder.ContractCode === undefined ||\r\n                    shipOrder.ContractCode === null ||\r\n                    shipOrder.ContractCode === \"\"\r\n                  ) {\r\n                    err = \"Contract_Code_Empty\";\r\n                  }\r\n                } else {\r\n                  err = \"Contract_Code_Empty\";\r\n                }\r\n                if (err !== \"\") {\r\n                  notification.messageResultDetails.push({\r\n                    keyFields: [\"ShipmentCompDetail_CompSeqInVehicle\"],\r\n                    keyValues: [shipmentCompartment.CompartmentSeqNoInVehicle],\r\n                    isSuccess: false,\r\n                    errorMessage: err,\r\n                  });\r\n                }\r\n              }\r\n\r\n              shipmentCompartmentValidationDef.forEach((col) => {\r\n                let err = \"\";\r\n\r\n                if (col.validator !== undefined) {\r\n                  err = Utilities.validateField(\r\n                    col.validator,\r\n                    shipmentCompartment[col.field]\r\n                  );\r\n                }\r\n\r\n                if (err !== \"\") {\r\n                  notification.messageResultDetails.push({\r\n                    keyFields: [\r\n                      \"ShipmentCompDetail_CompSeqInVehicle\",\r\n                      col.displayName,\r\n                    ],\r\n                    keyValues: [\r\n                      shipmentCompartment.CompartmentSeqNoInVehicle,\r\n                      shipmentCompartment[col.field],\r\n                    ],\r\n                    isSuccess: false,\r\n                    errorMessage: err,\r\n                  });\r\n                }\r\n              });\r\n              // let updatedAttributes = []\r\n              // if (shipmentCompartment.AttributesforUI !== null && shipmentCompartment.AttributesforUI !== undefined)\r\n              //     updatedAttributes = shipmentCompartment.AttributesforUI.filter(function (uIAttributes) {\r\n              //         return shipmentCompartment.Attributes.some(function (selAttribute) {\r\n              //             let isPresent = (selAttribute.ListOfAttributeData.findIndex((item) => item.AttributeCode === uIAttributes.AttributeCode) >= 0) ? true : false\r\n              //             return uIAttributes.TerminalCode === selAttribute.TerminalCode && isPresent\r\n              //         })\r\n              //     })\r\n\r\n              if (\r\n                shipmentCompartment.AttributesforUI !== null &&\r\n                shipmentCompartment.AttributesforUI !== undefined\r\n              )\r\n                shipmentCompartment.AttributesforUI.forEach((item) => {\r\n                  let errMsg = Utilities.valiateAttributeField(\r\n                    item,\r\n                    item.AttributeValue\r\n                  );\r\n                  if (errMsg !== \"\") {\r\n                    if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                      notification.messageResultDetails.push({\r\n                        keyFields: [\r\n                          \"CompAttributeComp\",\r\n                          \"CompAttributeTerminal\",\r\n                          item.AttributeName,\r\n                        ],\r\n                        keyValues: [\r\n                          shipmentCompartment.CompartmentSeqNoInVehicle,\r\n                          item.TerminalCode,\r\n                          item.AttributeValue,\r\n                        ],\r\n                        isSuccess: false,\r\n                        errorMessage: errMsg,\r\n                      });\r\n                    } else {\r\n                      notification.messageResultDetails.push({\r\n                        keyFields: [\"CompAttributeComp\", item.AttributeName],\r\n                        keyValues: [\r\n                          shipmentCompartment.CompartmentSeqNoInVehicle,\r\n                          item.AttributeValue,\r\n                        ],\r\n                        isSuccess: false,\r\n                        errorMessage: errMsg,\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              this.attributeToggleExpand(shipmentCompartment, true, true);\r\n            }\r\n          );\r\n        } else {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [],\r\n            keyValues: [],\r\n            isSuccess: false,\r\n            errorMessage: \"Shipment_Compartment_Association_Require\",\r\n          });\r\n        }\r\n      } else {\r\n        if (\r\n          Array.isArray(modShipment.ShipmentDetailsInfo) &&\r\n          modShipment.ShipmentDetailsInfo.length > 0\r\n        ) {\r\n          let shipDetailNumber = 1;\r\n          modShipment.ShipmentDetailsInfo.forEach((shipmentDetail) => {\r\n            if (\r\n              modShipment.CreatedFromEntity === Constants.shipmentFrom.Order\r\n            ) {\r\n              let err = \"\";\r\n              if (\r\n                Array.isArray(shipmentDetail.AssociatedOrderItems) &&\r\n                shipmentDetail.AssociatedOrderItems.length > 0\r\n              ) {\r\n                let shipOrder = shipmentDetail.AssociatedOrderItems[0];\r\n                if (\r\n                  shipOrder === null ||\r\n                  shipOrder.OrderCode === undefined ||\r\n                  shipOrder.OrderCode === null ||\r\n                  shipOrder.OrderCode === \"\"\r\n                ) {\r\n                  err = \"ORDER_EMPTY\";\r\n                }\r\n              } else {\r\n                err = \"ORDER_EMPTY\";\r\n              }\r\n              if (err !== \"\") {\r\n                this.setState({ isValidationPassed: false });\r\n                notification.messageResultDetails.push({\r\n                  keyFields: [\"CompAttributeComp\"],\r\n                  keyValues: [shipDetailNumber],\r\n                  isSuccess: false,\r\n                  errorMessage: err,\r\n                });\r\n              }\r\n            } else if (\r\n              modShipment.CreatedFromEntity === Constants.shipmentFrom.Contract\r\n            ) {\r\n              let err = \"\";\r\n              if (\r\n                Array.isArray(shipmentDetail.AssociatedContractItems) &&\r\n                shipmentDetail.AssociatedContractItems.length > 0\r\n              ) {\r\n                let shipOrder = shipmentDetail.AssociatedContractItems[0];\r\n                if (\r\n                  shipOrder === null ||\r\n                  shipOrder.ContractCode === undefined ||\r\n                  shipOrder.ContractCode === null ||\r\n                  shipOrder.ContractCode === \"\"\r\n                ) {\r\n                  err = \"Contract_Code_Empty\";\r\n                }\r\n              } else {\r\n                err = \"Contract_Code_Empty\";\r\n              }\r\n              if (err !== \"\") {\r\n                this.setState({ isValidationPassed: false });\r\n                notification.messageResultDetails.push({\r\n                  keyFields: [\"CompAttributeComp\"],\r\n                  keyValues: [shipDetailNumber],\r\n                  isSuccess: false,\r\n                  errorMessage: err,\r\n                });\r\n              }\r\n            }\r\n\r\n            shipmentProductValidationDef.forEach((col) => {\r\n              let err = \"\";\r\n\r\n              if (col.validator !== undefined) {\r\n                err = Utilities.validateField(\r\n                  col.validator,\r\n                  shipmentDetail[col.field]\r\n                );\r\n              }\r\n\r\n              if (err !== \"\") {\r\n                this.setState({ isValidationPassed: false });\r\n                notification.messageResultDetails.push({\r\n                  keyFields: [\"CompAttributeComp\", col.displayName],\r\n                  keyValues: [shipDetailNumber, shipmentDetail[col.field]],\r\n                  isSuccess: false,\r\n                  errorMessage: err,\r\n                });\r\n              }\r\n            });\r\n\r\n            let updatedAttributes = [];\r\n            if (\r\n              shipmentDetail.AttributesforUI !== null &&\r\n              shipmentDetail.AttributesforUI !== undefined\r\n            )\r\n              updatedAttributes = shipmentDetail.AttributesforUI.filter(\r\n                function (uIAttributes) {\r\n                  return shipmentDetail.Attributes.some(function (\r\n                    selAttribute\r\n                  ) {\r\n                    let isPresent =\r\n                      selAttribute.ListOfAttributeData.findIndex(\r\n                        (item) =>\r\n                          item.AttributeCode === uIAttributes.AttributeCode\r\n                      ) >= 0\r\n                        ? true\r\n                        : false;\r\n                    return (\r\n                      uIAttributes.TerminalCode === selAttribute.TerminalCode &&\r\n                      isPresent\r\n                    );\r\n                  });\r\n                }\r\n              );\r\n\r\n            updatedAttributes.forEach((item) => {\r\n              let errMsg = Utilities.valiateAttributeField(\r\n                item,\r\n                item.AttributeValue\r\n              );\r\n              if (errMsg !== \"\") {\r\n                this.setState({ isValidationPassed: false });\r\n                if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                  notification.messageResultDetails.push({\r\n                    keyFields: [\r\n                      \"CompAttributeComp\",\r\n                      \"CompAttributeTerminal\",\r\n                      item.AttributeName,\r\n                    ],\r\n                    keyValues: [\r\n                      item.compSequenceNo,\r\n                      item.TerminalCode,\r\n                      item.AttributeValue,\r\n                    ],\r\n                    isSuccess: false,\r\n                    errorMessage: errMsg,\r\n                  });\r\n                } else {\r\n                  notification.messageResultDetails.push({\r\n                    keyFields: [\"CompAttributeComp\", item.AttributeName],\r\n                    keyValues: [item.compSequenceNo, item.AttributeValue],\r\n                    isSuccess: false,\r\n                    errorMessage: errMsg,\r\n                  });\r\n                }\r\n              }\r\n            });\r\n            this.attributeToggleExpand(shipmentDetail, true, true);\r\n            shipDetailNumber = shipDetailNumber + 1;\r\n          });\r\n        } else {\r\n          this.setState({ isValidationPassed: false });\r\n          notification.messageResultDetails.push({\r\n            keyFields: [],\r\n            keyValues: [],\r\n            isSuccess: false,\r\n            errorMessage: \"Shipment_Compartment_Association_Require\",\r\n          });\r\n        }\r\n      }\r\n    else return returnValue;\r\n\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modShipment, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  updateShipment(modShipment) {\r\n    modShipment.ShipmentCompartments = null;\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: 0,\r\n      KeyCodes: null,\r\n      Entity: modShipment,\r\n    };\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [modShipment.ShipmentCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateShipment,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: true,\r\n            showShipmentAuthenticationLayout: false,\r\n          });\r\n          if (\r\n            this.props.ShipmentType.toLowerCase() === fnSBP &&\r\n            this.state.activeTab === 2 &&\r\n            this.state.isLoadingDetailsChanged &&\r\n            this.state.modCustomValues.DisableLoadingDetails === \"FALSE\"\r\n          )\r\n            this.handleTopUpDecantApproval(\"SaveCompartment\");\r\n          else if (\r\n            this.props.ShipmentType.toLowerCase() === fnSBC &&\r\n            this.state.activeTab === 1 &&\r\n            this.state.isLoadingDetailsChanged &&\r\n            this.state.modCustomValues.DisableLoadingDetails === \"FALSE\"\r\n          )\r\n            this.handleTopUpDecantApproval(\"SaveCompartment\");\r\n          else\r\n            this.getShipment({\r\n              Common_Code: modShipment.ShipmentCode,\r\n              isValidationPassed: true,\r\n            });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: true,\r\n            showShipmentAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in UpdateShipment:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modShipment, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: true,\r\n          showShipmentAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modShipment, \"modify\", notification);\r\n      });\r\n  }\r\n\r\n  createShipment(modShipment) {\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: 0,\r\n      KeyCodes: null,\r\n      Entity: modShipment,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [modShipment.ShipmentCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateShipment,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            showShipmentAuthenticationLayout: false,\r\n          });\r\n          this.getShipment({\r\n            Common_Code: modShipment.ShipmentCode,\r\n            isValidationPassed: true,\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: true,\r\n            showShipmentAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in CreateShipment:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modShipment, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: true,\r\n          showShipmentAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modShipment, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      if (this.props.userDetails.EntityResult.IsArchived)\r\n        this.setState({ isDisableSubmitForApproval: true });\r\n      //this.getShipment(this.props.selectedRow);\r\n      this.GetViewAllShipmentCustomData();\r\n      this.IsBonded();\r\n      this.getAttributes(this.props.selectedRow);\r\n      //this.getLoadingDetails(this.props.selectedRow);\r\n      this.GetUOMList();\r\n      this.getVehicleCodes(this.props.selectedShareholder);\r\n      this.getDriverCodes(this.props.selectedShareholder);\r\n      this.getFinishedProductCodes(this.props.selectedShareholder);\r\n      this.getcustomerDestinationList(this.props.selectedShareholder);\r\n      this.getContractCodes(this.props.selectedShareholder);\r\n      this.getOrderCodes(this.props.selectedShareholder);\r\n      this.getTarnsloadingDetails();\r\n    } catch (error) {\r\n      console.log(\r\n        this.props.ShipmentType + \":Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(selectedRow) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [\r\n            shipmentAttributeEntity,\r\n            shipmentCompartmentAttributeEntity,\r\n            shipmentDestinationCompartmentAttributeEntity,\r\n            shipmentDetailsAttributeEntity,\r\n            shipmentTrailerWeighBridgeAttributeEntity,\r\n            shipmentTrailerAttributeEntity,\r\n            shipmentStatusTimeAttributeEntity,\r\n          ],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.SHIPMENT\r\n                ),\r\n              compAttributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.SHIPMENTDESTINATIONCOMPARTMENT\r\n                ),\r\n              prodCompAttributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.SHIPMENTDETAILS\r\n                ),\r\n            },\r\n            () => this.getShipment(selectedRow)\r\n          );\r\n        } else {\r\n          console.log(\"Failed to get Attributes\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Attributes:\", error);\r\n    }\r\n  }\r\n\r\n  GetVehicleTrCmptDetailsForShipment(vehicleCode) {\r\n    let modShipment = lodash.cloneDeep(this.state.modShipment);\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: vehicleCode,\r\n      },\r\n    ];\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetVehicleTrCmptDetailsForShipment,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess) {\r\n          if (result.EntityResult && Array.isArray(result.EntityResult.Table)) {\r\n            let enableEnforcing = result.EntityResult.Table[0].EnforceSequencing\r\n              ? true\r\n              : false;\r\n            modShipment.IsBonded = result.EntityResult.Table[0].IsBonded\r\n              ? true\r\n              : this.state.shipment.IsBonded;\r\n            let bondExpiryDate = result.EntityResult.Table[0].BondExpiryDate;\r\n            this.setState({\r\n              isEnforcingEnabled: enableEnforcing,\r\n              modShipment,\r\n              bondExpiryDate: bondExpiryDate,\r\n              isVehicleBonded: result.EntityResult.Table[0].IsBonded\r\n                ? true\r\n                : false,\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          isEnforcingEnabled: false,\r\n          modShipment,\r\n          bondExpiryDate: null,\r\n          isVehicleBonded: false,\r\n        });\r\n        console.log(\"Error while getting VehicleTrailer Comp Details:\", error);\r\n      });\r\n  }\r\n\r\n  getVehicle(vehicleCode, vehicleChanged) {\r\n    let modShipment = lodash.cloneDeep(this.state.modShipment);\r\n    let modVehicleDetails = lodash.cloneDeep(this.state.modVehicleDetails);\r\n    modShipment.VehicleCode = vehicleCode;\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: vehicleCode,\r\n      },\r\n    ];\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetVehicle,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            modShipment.CarrierCode = result.EntityResult.CarrierCompanyCode;\r\n            modVehicleDetails.carrierCode =\r\n              result.EntityResult.CarrierCompanyCode;\r\n            modVehicleDetails.vehicleCompartments =\r\n              this.getCompartmentDetailsFromVehicle(result.EntityResult);\r\n            //if (this.props.ShipmentType.toLowerCase() === fnSBC) {\r\n            let compSeqOptions = [];\r\n            modVehicleDetails.vehicleCompartments.forEach(\r\n              (vehicleCompartment) =>\r\n                compSeqOptions.push({\r\n                  text: vehicleCompartment.vehCompSeq.toString(),\r\n                  value: vehicleCompartment.vehCompSeq.toString(),\r\n                })\r\n            );\r\n\r\n            if (vehicleChanged) {\r\n              let modCompartmentPlans =\r\n                this.getShipmentCompartmentFromVehicleCompartment(\r\n                  modVehicleDetails.vehicleCompartments\r\n                );\r\n              modCompartmentPlans =\r\n                Utilities.addSeqNumberToListObject(modCompartmentPlans);\r\n              this.setState({ modCompartmentPlans }, () => {\r\n                if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                  this.terminalSelectionChange(modShipment.TerminalCodes);\r\n                } else {\r\n                  this.localNodeAttribute();\r\n                }\r\n              });\r\n            }\r\n            // this.setState({\r\n            //   compSeqOptions,\r\n            // });\r\n            //}\r\n\r\n            this.setState(\r\n              {\r\n                isVehicleChanged: vehicleChanged,\r\n                modShipment,\r\n                modVehicleDetails,\r\n                compSeqOptions,\r\n                vehicleForRecordWeight: result.EntityResult,\r\n              },\r\n              () => {\r\n                if (this.state.isBonded)\r\n                  this.GetVehicleTrCmptDetailsForShipment(vehicleCode);\r\n              }\r\n            );\r\n\r\n            if (this.state.shipment.VehicleCode === modShipment.VehicleCode) {\r\n              let vehicleDetails = lodash.cloneDeep(modVehicleDetails);\r\n              this.setState({ vehicleDetails });\r\n            }\r\n          }\r\n        } else {\r\n          this.setState({ modShipment });\r\n\r\n          console.log(\"Error in GetVehicle:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ modShipment });\r\n        console.log(\"Error while getting Vehicle:\", error);\r\n      });\r\n  }\r\n\r\n  handleVehicleChange = (vehicleCode) => {\r\n    try {\r\n      //this.props.ShipmentType.toLowerCase() === fnSBC ?\r\n      this.getVehicle(vehicleCode, true);\r\n      //: this.getVehicle(vehicleCode, false)\r\n\r\n      let validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      validationErrors[\"VehicleCode\"] = \"\";\r\n      this.setState({ validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        this.props.ShipmentType + \":Error occured on handleVehicleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDriverSearchChange = (driverCode) => {\r\n    try {\r\n      let driverSearchOptions = this.state.driverOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(driverCode.toLowerCase())\r\n      );\r\n      if (driverSearchOptions.length > Constants.filteredOptionsCount) {\r\n        driverSearchOptions = driverSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        driverSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        this.props.ShipmentType + \":Error occured on handleDriverSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleVehicleSearchChange = (vehicleCode) => {\r\n    try {\r\n      let vehicleSearchOptions = this.state.vehicleOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(vehicleCode.toLowerCase())\r\n      );\r\n      if (vehicleSearchOptions.length > Constants.filteredOptionsCount) {\r\n        vehicleSearchOptions = vehicleSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        vehicleSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        this.props.ShipmentType + \":Error occured on handleVehicleSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getShipmentCompartmentFromShipment(shipment) {\r\n    let shipmentCompartments = [];\r\n\r\n    if (Array.isArray(shipment.ShipmentDestinationCompartmentsInfo)) {\r\n      shipment.ShipmentDestinationCompartmentsInfo.forEach(\r\n        (shipmentCompartment) =>\r\n          shipmentCompartments.push({\r\n            ShipmentCode: shipment.ShipmentCode,\r\n            CompartmentCode: shipmentCompartment.CompartmentCode,\r\n            CompartmentSeqNoInVehicle:\r\n              shipmentCompartment.CompartmentSeqNoInVehicle,\r\n            TrailerCode: shipmentCompartment.TrailerCode,\r\n            CompartmentSeqNoInTrailer: shipmentCompartment.trailerCompSeq,\r\n            Quantity:\r\n              shipmentCompartment.Quantity !== null &&\r\n                shipmentCompartment.Quantity !== \"\"\r\n                ? shipmentCompartment.Quantity.toLocaleString()\r\n                : null,\r\n            UOM: shipmentCompartment.QuantityUOM,\r\n            OrderCode:\r\n              shipmentCompartment.AssociatedOrderItems != null\r\n                ? shipmentCompartment.AssociatedOrderItems[0].OrderCode\r\n                : null,\r\n            ContractCode:\r\n              shipmentCompartment.AssociatedContractItems != null\r\n                ? shipmentCompartment.AssociatedContractItems[0].ContractCode\r\n                : null,\r\n            CustomerCode: shipmentCompartment.CustomerCode,\r\n            DestinationCode: shipmentCompartment.DestinationCode,\r\n            FinishedProductCode: shipmentCompartment.FinishedProductCode,\r\n            ShareholderCode: this.props.selectedShareholder,\r\n            Attributes: shipmentCompartment.Attributes,\r\n            TransReceiptCode: shipmentCompartment.TransReceiptCode,\r\n            TransCompSequenceNumber:\r\n              shipmentCompartment.TransCompSequenceNumber,\r\n          })\r\n      );\r\n    }\r\n    shipmentCompartments =\r\n      Utilities.addSeqNumberToListObject(shipmentCompartments);\r\n    return shipmentCompartments.sort((a, b) => {\r\n      if (a.CompartmentSeqNoInVehicle > b.CompartmentSeqNoInVehicle) return 1;\r\n      else if (a.CompartmentSeqNoInVehicle < b.CompartmentSeqNoInVehicle)\r\n        return -1;\r\n      else return 0;\r\n    });\r\n  }\r\n\r\n  getShipmentDetailsFromShipment(shipment) {\r\n    let shipmentDetails = [];\r\n    if (Array.isArray(shipment.ShipmentDetailsInfo)) {\r\n      shipment.ShipmentDetailsInfo.forEach((shipmentDetail) => {\r\n        if (\r\n          shipmentDetail.AssociatedOrderItems !== null &&\r\n          shipmentDetail.AssociatedOrderItems.length > 0\r\n        ) {\r\n          shipmentDetail.AssociatedOrderItems.forEach((item) => {\r\n            shipmentDetails.push({\r\n              Quantity:\r\n                item.OrderItemQuantity !== null && item.OrderItemQuantity !== \"\"\r\n                  ? item.OrderItemQuantity.toLocaleString()\r\n                  : null,\r\n              UOM: shipmentDetail.QuantityUOM,\r\n              OrderCode: item.OrderCode,\r\n              ContractCode: null,\r\n              CustomerCode: shipmentDetail.CustomerCode,\r\n              DestinationCode: shipmentDetail.DestinationCode,\r\n              FinishedProductCode: shipmentDetail.FinishedProductCode,\r\n              ShareholderCode: this.props.selectedShareholder,\r\n              Attributes: shipmentDetail.Attributes,\r\n            });\r\n          });\r\n        } else if (\r\n          shipmentDetail.AssociatedContractItems !== null &&\r\n          shipmentDetail.AssociatedContractItems.length > 0\r\n        ) {\r\n          shipmentDetail.AssociatedContractItems.forEach((item) => {\r\n            shipmentDetails.push({\r\n              Quantity:\r\n                item.ContractItemQuantity !== null &&\r\n                  item.ContractItemQuantity !== \"\"\r\n                  ? item.ContractItemQuantity.toLocaleString()\r\n                  : null,\r\n              UOM: shipmentDetail.QuantityUOM,\r\n              OrderCode: null,\r\n              ContractCode: item.ContractCode,\r\n              CustomerCode: shipmentDetail.CustomerCode,\r\n              DestinationCode: shipmentDetail.DestinationCode,\r\n              FinishedProductCode: shipmentDetail.FinishedProductCode,\r\n              ShareholderCode: this.props.selectedShareholder,\r\n              Attributes: shipmentDetail.Attributes,\r\n            });\r\n          });\r\n        } else\r\n          shipmentDetails.push({\r\n            Quantity:\r\n              shipmentDetail.Quantity !== null && shipmentDetail.Quantity !== \"\"\r\n                ? shipmentDetail.Quantity.toLocaleString()\r\n                : null,\r\n            UOM: shipmentDetail.QuantityUOM,\r\n            OrderCode: null,\r\n            ContractCode: null,\r\n            CustomerCode: shipmentDetail.CustomerCode,\r\n            DestinationCode: shipmentDetail.DestinationCode,\r\n            FinishedProductCode: shipmentDetail.FinishedProductCode,\r\n            ShareholderCode: this.props.selectedShareholder,\r\n            Attributes: shipmentDetail.Attributes,\r\n          });\r\n      });\r\n    }\r\n    shipmentDetails = Utilities.addSeqNumberToListObject(shipmentDetails);\r\n    return shipmentDetails.sort((a, b) => {\r\n      if (a.CompartmentSeqNoInVehicle > b.CompartmentSeqNoInVehicle) return 1;\r\n      else if (a.CompartmentSeqNoInVehicle < b.CompartmentSeqNoInVehicle)\r\n        return -1;\r\n      else return 0;\r\n    });\r\n  }\r\n\r\n  getShipmentCompartmentFromVehicleCompartment(vehicleCompartments) {\r\n    let shipmentCompartments = [];\r\n    if (\r\n      this.props.shipmentSource !== undefined &&\r\n      !this.props.shipmentSourceFromSummary\r\n    ) {\r\n      let cusCode = this.props.shipmentSourceDetails.CustomerCode;\r\n      if (Array.isArray(this.props.shipmentSourceCompartmentItems)) {\r\n        // let length = 0;\r\n        // if (Array.isArray(vehicleCompartments))\r\n        //   length = vehicleCompartments.length;\r\n        for (\r\n          let i = 0;\r\n          i < this.props.shipmentSourceCompartmentItems.length;\r\n          i++\r\n        ) {\r\n          let shipmentCompartment = {};\r\n          let vehicleCompartment = {};\r\n          let item = this.props.shipmentSourceCompartmentItems[i];\r\n          if (item.RemainingQuantity !== null && item.RemainingQuantity > 0) {\r\n            if (this.props.ShipmentType.toLowerCase() === fnSBC) {\r\n              vehicleCompartment = vehicleCompartments[i];\r\n              if (vehicleCompartment === undefined) break;\r\n            }\r\n\r\n            this.props.ShipmentType.toLowerCase() === fnSBC\r\n              ? (shipmentCompartment = {\r\n                ShipmentCode: \"\",\r\n                CompartmentCode: vehicleCompartment.compCode,\r\n                CompartmentSeqNoInVehicle: vehicleCompartment.vehCompSeq,\r\n                TrailerCode: vehicleCompartment.trailerCode,\r\n                CompartmentSeqNoInTrailer: vehicleCompartment.trailerCompSeq,\r\n                Quantity:\r\n                  item.RemainingQuantity !== null &&\r\n                    item.RemainingQuantity !== \"\"\r\n                    ? item.RemainingQuantity.toLocaleString()\r\n                    : null,\r\n                QuantityUOM: item.QuantityUOM,\r\n                OrderCode:\r\n                  this.props.shipmentSource === Constants.shipmentFrom.Order\r\n                    ? this.props.shipmentSourceDetails.OrderCode\r\n                    : null,\r\n                ContractCode:\r\n                  this.props.shipmentSource ===\r\n                    Constants.shipmentFrom.Contract\r\n                    ? this.props.shipmentSourceDetails.ContractCode\r\n                    : null,\r\n                CustomerCode: cusCode,\r\n                DestinationCode:\r\n                  this.props.shipmentSource ===\r\n                    Constants.shipmentFrom.Contract\r\n                    ? item.DestinationCode\r\n                    : \"\",\r\n                FinishedProductCode: item.FinishedProductCode,\r\n                ShareholderCode: this.props.selectedShareholder,\r\n                TransCompSequenceNumber: null,\r\n                TransReceiptCode: null,\r\n              })\r\n              : (shipmentCompartment = {\r\n                // CompartmentCode: vehicleCompartment.compCode,\r\n                // CompartmentSeqNoInVehicle: vehicleCompartment.vehCompSeq,\r\n                // TrailerCode: vehicleCompartment.trailerCode,\r\n                Quantity:\r\n                  item.RemainingQuantity !== null &&\r\n                    item.RemainingQuantity !== \"\"\r\n                    ? item.RemainingQuantity.toLocaleString()\r\n                    : null,\r\n                UOM: item.QuantityUOM,\r\n                OrderCode:\r\n                  this.props.shipmentSource === Constants.shipmentFrom.Order\r\n                    ? this.props.shipmentSourceDetails.OrderCode\r\n                    : null,\r\n                ContractCode:\r\n                  this.props.shipmentSource ===\r\n                    Constants.shipmentFrom.Contract\r\n                    ? this.props.shipmentSourceDetails.ContractCode\r\n                    : null,\r\n                CustomerCode: cusCode,\r\n                DestinationCode:\r\n                  this.props.shipmentSource ===\r\n                    Constants.shipmentFrom.Contract\r\n                    ? item.DestinationCode\r\n                    : \"\",\r\n                FinishedProductCode: item.FinishedProductCode,\r\n                ShareholderCode: this.props.selectedShareholder,\r\n              });\r\n\r\n            shipmentCompartments.push(shipmentCompartment);\r\n          }\r\n        }\r\n      }\r\n    } else if (\r\n      this.props.shipmentSource !== undefined &&\r\n      this.props.shipmentSourceFromSummary\r\n    ) {\r\n      //this.props.shipmentSource === Constants.shipmentFrom.Contract\r\n      let otherSourceData = lodash.cloneDeep(this.state.otherSourceData);\r\n\r\n      if (Array.isArray(otherSourceData)) {\r\n        // let length = 0;\r\n        // if (Array.isArray(vehicleCompartments))\r\n        //   length = vehicleCompartments.length;\r\n        let j = 0;\r\n        otherSourceData.forEach((data) => {\r\n          let compItems =\r\n            this.props.shipmentSource === Constants.shipmentFrom.Contract\r\n              ? data.ContractItems\r\n              : data.OrderItems;\r\n\r\n          let cusCode = data.CustomerCode;\r\n          for (let i = 0; i < compItems.length; i++) {\r\n            let shipmentCompartment = {};\r\n            let vehicleCompartment = {};\r\n            let item = compItems[i];\r\n            if (item.RemainingQuantity !== null && item.RemainingQuantity > 0) {\r\n              if (this.props.ShipmentType.toLowerCase() === fnSBC) {\r\n                vehicleCompartment = vehicleCompartments[j];\r\n                if (vehicleCompartment === undefined) break;\r\n              }\r\n              this.props.ShipmentType.toLowerCase() === fnSBC\r\n                ? (shipmentCompartment = {\r\n                  ShipmentCode: \"\",\r\n                  CompartmentCode: vehicleCompartment.compCode,\r\n                  CompartmentSeqNoInVehicle: vehicleCompartment.vehCompSeq,\r\n                  TrailerCode: vehicleCompartment.trailerCode,\r\n                  CompartmentSeqNoInTrailer:\r\n                    vehicleCompartment.trailerCompSeq,\r\n                  Quantity:\r\n                    item.RemainingQuantity !== null &&\r\n                      item.RemainingQuantity !== \"\"\r\n                      ? item.RemainingQuantity.toLocaleString()\r\n                      : null,\r\n                  QuantityUOM: item.QuantityUOM,\r\n                  OrderCode:\r\n                    this.props.shipmentSource === Constants.shipmentFrom.Order\r\n                      ? data.OrderCode\r\n                      : null,\r\n                  ContractCode:\r\n                    this.props.shipmentSource ===\r\n                      Constants.shipmentFrom.Contract\r\n                      ? data.ContractCode\r\n                      : null,\r\n                  CustomerCode: cusCode,\r\n                  DestinationCode:\r\n                    this.props.shipmentSource ===\r\n                      Constants.shipmentFrom.Contract\r\n                      ? item.DestinationCode\r\n                      : null,\r\n                  FinishedProductCode: item.FinishedProductCode,\r\n                  ShareholderCode: this.props.selectedShareholder,\r\n                  TransCompSequenceNumber: null,\r\n                  TransReceiptCode: null,\r\n                })\r\n                : (shipmentCompartment = {\r\n                  // CompartmentCode: vehicleCompartment.compCode,\r\n                  // CompartmentSeqNoInVehicle: vehicleCompartment.vehCompSeq,\r\n                  // TrailerCode: vehicleCompartment.trailerCode,\r\n                  Quantity:\r\n                    item.RemainingQuantity !== null &&\r\n                      item.RemainingQuantity !== \"\"\r\n                      ? item.RemainingQuantity.toLocaleString()\r\n                      : null,\r\n                  UOM: item.QuantityUOM,\r\n                  OrderCode:\r\n                    this.props.shipmentSource === Constants.shipmentFrom.Order\r\n                      ? data.OrderCode\r\n                      : null,\r\n                  ContractCode:\r\n                    this.props.shipmentSource ===\r\n                      Constants.shipmentFrom.Contract\r\n                      ? data.ContractCode\r\n                      : null,\r\n                  CustomerCode: cusCode,\r\n                  DestinationCode:\r\n                    this.props.shipmentSource ===\r\n                      Constants.shipmentFrom.Contract\r\n                      ? item.DestinationCode\r\n                      : null,\r\n                  FinishedProductCode: item.FinishedProductCode,\r\n                  ShareholderCode: this.props.selectedShareholder,\r\n                });\r\n              shipmentCompartments.push(shipmentCompartment);\r\n              j++;\r\n            }\r\n          }\r\n        });\r\n      }\r\n      if (this.props.ShipmentType.toLowerCase() === fnSBP)\r\n        this.setState({ modProductPlans: shipmentCompartments });\r\n    } else if (Array.isArray(vehicleCompartments)) {\r\n      for (let i = 0; i < vehicleCompartments.length; i++) {\r\n        let vehicleCompartment = vehicleCompartments[i];\r\n\r\n        let shipmentCompartment = {};\r\n\r\n        this.props.ShipmentType.toLowerCase() === fnSBC\r\n          ? (shipmentCompartment = {\r\n            ShipmentCode: \"\",\r\n            CompartmentCode: vehicleCompartment.compCode,\r\n            CompartmentSeqNoInVehicle: vehicleCompartment.vehCompSeq,\r\n            TrailerCode: vehicleCompartment.trailerCode,\r\n            CompartmentSeqNoInTrailer: vehicleCompartment.trailerCompSeq,\r\n            Quantity:\r\n              vehicleCompartment.SFL !== null && vehicleCompartment.SFL !== \"\"\r\n                ? vehicleCompartment.SFL.toLocaleString()\r\n                : null,\r\n            QuantityUOM: vehicleCompartment.UOM,\r\n            OrderCode: null,\r\n            ContractCode: null,\r\n            CustomerCode: null,\r\n            DestinationCode: null,\r\n            FinishedProductCode: null,\r\n            ShareholderCode: this.props.selectedShareholder,\r\n            TransCompSequenceNumber: null,\r\n            TransReceiptCode: null,\r\n          })\r\n          : (shipmentCompartment = {\r\n            CompartmentCode: vehicleCompartment.compCode,\r\n            CompartmentSeqNoInVehicle: vehicleCompartment.vehCompSeq,\r\n            TrailerCode: vehicleCompartment.trailerCode,\r\n            Quantity:\r\n              vehicleCompartment.SFL !== null && vehicleCompartment.SFL !== \"\"\r\n                ? vehicleCompartment.SFL.toLocaleString()\r\n                : null,\r\n            UOM: vehicleCompartment.UOM,\r\n            OrderCode: \"\",\r\n            ContractCode: \"\",\r\n            CustomerCode: \"\",\r\n            DestinationCode: \"\",\r\n            FinishedProductCode: \"\",\r\n            ShareholderCode: this.props.selectedShareholder,\r\n          });\r\n\r\n        shipmentCompartments.push(shipmentCompartment);\r\n      }\r\n    }\r\n    return shipmentCompartments;\r\n  }\r\n\r\n  getCompartmentDetailsFromVehicle(vehicleInfo) {\r\n    let vehicleCompartments = [];\r\n    let seqNum = 1;\r\n    vehicleInfo.VehicleTrailers.sort((a, b) => a.TrailerSeq - b.TrailerSeq);\r\n\r\n    vehicleInfo.VehicleTrailers.forEach((vehicleTrailer) => {\r\n      if (Array.isArray(vehicleTrailer.Trailer.Compartments)) {\r\n        vehicleTrailer.Trailer.Compartments.sort(\r\n          (a, b) => a.CompartmentSeqNoInTrailer - b.CompartmentSeqNoInTrailer\r\n        );\r\n        for (let i = 0; i < vehicleTrailer.Trailer.Compartments.length; i++) {\r\n          let trailerCompartment = vehicleTrailer.Trailer.Compartments[i];\r\n          let vehicleCompartment = {\r\n            compCode: trailerCompartment.Code,\r\n            vehCompSeq: seqNum,\r\n            trailerCode: trailerCompartment.TrailerCode,\r\n            trailerCompSeq: trailerCompartment.CompartmentSeqNoInTrailer,\r\n            SFL: trailerCompartment.Capacity,\r\n            UOM: trailerCompartment.UOM,\r\n          };\r\n          vehicleCompartments.push(vehicleCompartment);\r\n          seqNum = seqNum + 1;\r\n        }\r\n      }\r\n    });\r\n\r\n    return vehicleCompartments;\r\n  }\r\n\r\n  getLoadingDetails(shipmentRow) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentRow.ShipmentCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetTruckShipmentLoadingDetails,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        response.data.IsSuccess\r\n          ? this.setState({\r\n            modLoadingDetails: this.formLoadingCompartments(\r\n              response.data.EntityResult\r\n            ),\r\n            staticLoadingDetails: response.data.EntityResult,\r\n          })\r\n          : this.setState({ modLoadingDetails: [], staticLoadingDetails: [] });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error while getting Shipment Loading Details:\",\r\n          error,\r\n          shipmentRow\r\n        );\r\n      });\r\n  }\r\n\r\n  getLadenWeightData(\r\n    RegisteredTareWeight,\r\n    VehicleWeightUOM,\r\n    WeightUOM,\r\n    MaxLoadableWeight,\r\n    Weight,\r\n    siteConfiguration\r\n  ) {\r\n    let trailerWeighData = {};\r\n    try {\r\n      axios(\r\n        RestAPIs.GetLadenWeightData +\r\n        \"?shipmentCode=\" +\r\n        this.state.modShipment.ShipmentCode +\r\n        \"&shCode=\" +\r\n        this.props.selectedShareholder +\r\n        \"&vehicleTareWeight=\" +\r\n        RegisteredTareWeight +\r\n        \"&vehicleWeightUOM=\" +\r\n        VehicleWeightUOM +\r\n        \"&weightUOM=\" +\r\n        WeightUOM +\r\n        \"&maxLoadableWeight=\" +\r\n        MaxLoadableWeight +\r\n        \"&weight=\" +\r\n        Weight,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            trailerWeighData = response.data.EntityResult;\r\n            this.ValidateLadenWeight(trailerWeighData, siteConfiguration);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Error while getting Shipment trailer weigh data Details:\",\r\n            error,\r\n            this.state.modShipment\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in getLadenWeightData:\", error);\r\n    }\r\n  }\r\n\r\n  GetViewAllShipmentCustomData(shipmentRow) {\r\n    try {\r\n      var keyCode = [];\r\n      if (shipmentRow !== undefined)\r\n        keyCode = [\r\n          {\r\n            key: KeyCodes.shipmentCode,\r\n            value: shipmentRow.ShipmentCode,\r\n          },\r\n          {\r\n            key: KeyCodes.shipmentStatus,\r\n            value: shipmentRow.Status,\r\n          },\r\n          {\r\n            key: KeyCodes.vehicleCode,\r\n            value: shipmentRow.VehicleCode,\r\n          },\r\n          {\r\n            key: KeyCodes.actualTerminalCode,\r\n            value: shipmentRow.ActualTerminalCode,\r\n          },\r\n        ];\r\n      var obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.shipmentCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetViewAllShipmentCustomData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            var result = response.data.EntityResult;\r\n            if (shipmentRow !== undefined) {\r\n              this.setState(\r\n                {\r\n                  saveEnabled:\r\n                    result.IsLocalConnected === \"TRUE\"\r\n                      ? false\r\n                      : result.ShipmentUpdateAllow === \"TRUE\" &&\r\n                        Utilities.isInFunction(\r\n                          this.props.userDetails.EntityResult.FunctionsList,\r\n                          functionGroups.modify,\r\n                          this.props.ShipmentType.toLowerCase()\r\n                        )\r\n                        ? true\r\n                        : this.state.isPlanned\r\n                          ? result.DisableLoadingDetails === \"TRUE\"\r\n                            ? false\r\n                            : true\r\n                          : result.ShipmentUpdateAllow === \"TRUE\" &&\r\n                          Utilities.isInFunction(\r\n                            this.props.userDetails.EntityResult.FunctionsList,\r\n                            functionGroups.modify,\r\n                            this.props.ShipmentType.toLowerCase()\r\n                          ),\r\n                  modCustomValues: response.data.EntityResult,\r\n                },\r\n                () => {\r\n                  if (\r\n                    response.data.EntityResult.CustomerInventory === \"TRUE\" &&\r\n                    shipmentRow !== undefined\r\n                  )\r\n                    this.getCustomerInventory(shipmentRow);\r\n                }\r\n              );\r\n            } else\r\n              this.setState(\r\n                {\r\n                  modCustomValues: response.data.EntityResult,\r\n                  saveEnabled: Utilities.isInFunction(\r\n                    this.props.userDetails.EntityResult.FunctionsList,\r\n                    this.state.shipment.ShipmentCode === \"\"\r\n                      ? functionGroups.add\r\n                      : functionGroups.modify,\r\n                    this.props.ShipmentType.toLowerCase()\r\n                  ),\r\n                },\r\n                () => {\r\n                  if (\r\n                    response.data.EntityResult.CustomerInventory === \"TRUE\" &&\r\n                    shipmentRow !== undefined\r\n                  )\r\n                    this.getCustomerInventory(shipmentRow);\r\n                }\r\n              );\r\n          } else this.setState({ modCustomValues: {}, customerInventory: [] });\r\n          //this.setState({ modLoadingDetails: this.formLoadingCompartments(response.data.EntityResult) })\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Error while getting shipment custom details:\",\r\n            error,\r\n            shipmentRow\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in Custom Data retrieve\", error);\r\n    }\r\n  }\r\n\r\n  getCustomerInventory(shipmentRow) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.dispatchCode,\r\n        value: shipmentRow.ShipmentCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.dispatchCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetCustomerInventory,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        if (response.data.IsSuccess) {\r\n          let customerInventory = response.data.EntityResult;\r\n          if (\r\n            customerInventory &&\r\n            Array.isArray(customerInventory) &&\r\n            customerInventory.length > 0\r\n          ) {\r\n            customerInventory.forEach((cus) => {\r\n              cus.GrossActualQuantity =\r\n                cus.GrossActualQuantity.toString() + \" \" + cus.QuantityUOM;\r\n              cus.PlannedQuantity =\r\n                cus.PlannedQuantity.toString() + \" \" + cus.QuantityUOM;\r\n            });\r\n          }\r\n          this.setState({ customerInventory: response.data.EntityResult });\r\n        } else this.setState({ customerInventory: [] });\r\n        //this.setState({ modLoadingDetails: this.formLoadingCompartments(response.data.EntityResult) })\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error while getting shipment custom details:\",\r\n          error,\r\n          shipmentRow\r\n        );\r\n      });\r\n  }\r\n\r\n  getTrailerDetails(shipment) {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.shipmentCode,\r\n          value: shipment.ShipmentCode,\r\n        },\r\n        // {\r\n        //     key: KeyCodes.trailerCode,\r\n        //     value: shipment.VehicleCode\r\n        // }\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.shipmentCode,\r\n        KeyCodes: keyCode,\r\n        Entity: this.state.trailers,\r\n      };\r\n      axios(\r\n        RestAPIs.GetTrailerLoadingDetails,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let trailerDetails = [];\r\n          if (response.data.IsSuccess) {\r\n            trailerDetails = response.data.EntityResult;\r\n            let shipmentTrailerAttribute = lodash.cloneDeep(\r\n              this.state.attributeMetaDataList.SHIPMENTTRAILER\r\n            );\r\n            let shipmentWBAttribute = lodash.cloneDeep(\r\n              this.state.attributeMetaDataList.SHIPMENTTRAILERWEIGHBRIDGE\r\n            );\r\n\r\n            trailerDetails.forEach((item) => {\r\n              this.formReadOnlyAttributes(\r\n                item.shipmentTrailerInfo.Attributes,\r\n                shipmentTrailerAttribute\r\n              );\r\n              if (\r\n                item.shipmentTrailerTWInfoList !== null &&\r\n                item.shipmentTrailerTWInfoList !== undefined &&\r\n                item.shipmentTrailerTWInfoList.length > 0\r\n              )\r\n                item.shipmentTrailerTWInfoList.AttributesforUI =\r\n                  this.formReadonlyCompAttributes(\r\n                    item.shipmentTrailerTWInfoList.Attributes,\r\n                    shipmentWBAttribute\r\n                  );\r\n              else {\r\n                let attribute = this.formReadonlyCompAttributes(\r\n                  [],\r\n                  shipmentWBAttribute\r\n                );\r\n                item.shipmentTrailerTWInfoList = [];\r\n                this.setState({\r\n                  selectedCompAttributes: attribute,\r\n                });\r\n              }\r\n\r\n              if (\r\n                item.shipmentTrailerWBInfoList !== null &&\r\n                item.shipmentTrailerWBInfoList !== undefined &&\r\n                item.shipmentTrailerWBInfoList.length > 0\r\n              )\r\n                item.shipmentTrailerWBInfoList.AttributesforUI =\r\n                  this.formReadonlyCompAttributes(\r\n                    item.shipmentTrailerWBInfoList.Attributes,\r\n                    shipmentWBAttribute\r\n                  );\r\n              else item.shipmentTrailerWBInfoList = [];\r\n            });\r\n          }\r\n          this.setState({\r\n            trailerDetails: trailerDetails,\r\n            isViewTrailerDetails: true,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Trailer details:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in get Trailer Details\", error);\r\n    }\r\n  }\r\n\r\n  formReadOnlyAttributes(attributes, attributeMetaDataList) {\r\n    var selectedShipTrailerAttributeList = [];\r\n\r\n    attributeMetaDataList.forEach(function (attributeMetaData) {\r\n      var filledAttribute = attributes.find((trailerAttribute) => {\r\n        return trailerAttribute.TerminalCode === attributeMetaData.TerminalCode;\r\n      });\r\n      if (filledAttribute !== undefined) {\r\n        attributeMetaData.attributeMetaDataList.forEach(function (\r\n          attributeMetaData\r\n        ) {\r\n          var valueAttribute = filledAttribute.ListOfAttributeData.find((x) => {\r\n            return x.AttributeCode === attributeMetaData.Code;\r\n          });\r\n          if (valueAttribute !== undefined)\r\n            attributeMetaData.DefaultValue = valueAttribute.AttributeValue;\r\n        });\r\n      }\r\n      selectedShipTrailerAttributeList.push(attributeMetaData);\r\n    });\r\n    this.setState({\r\n      selectedShipTrailerAttributeList: selectedShipTrailerAttributeList,\r\n    });\r\n  }\r\n\r\n  formReadonlyCompAttributes(attributes, attributeMetaDataList) {\r\n    let compAttributes = [];\r\n    if (\r\n      attributeMetaDataList !== null &&\r\n      attributeMetaDataList !== undefined &&\r\n      attributeMetaDataList.length > 0\r\n    ) {\r\n      attributeMetaDataList.forEach((att) => {\r\n        att.attributeMetaDataList.forEach((attribute) => {\r\n          //if (attribute.TerminalCode)\r\n          compAttributes.push({\r\n            AttributeCode: attribute.Code,\r\n            AttributeName: attribute.DisplayName\r\n              ? attribute.DisplayName\r\n              : attribute.Code,\r\n            AttributeValue: attribute.DefaultValue,\r\n            TerminalCode: attribute.TerminalCode,\r\n            IsMandatory: attribute.IsMandatory,\r\n            DataType: attribute.DataType,\r\n            IsReadonly: attribute.IsReadonly,\r\n            MinValue: attribute.MinValue,\r\n            MaxValue: attribute.MaxValue,\r\n            ValidationFormat: attribute.ValidationFormat,\r\n            compSequenceNo: \"\",\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    if (\r\n      attributes !== null &&\r\n      attributes !== undefined &&\r\n      attributes.length > 0\r\n    ) {\r\n      attributes.forEach((att) => {\r\n        compAttributes.forEach((compAtt) => {\r\n          if (compAtt.TerminalCode === att.TerminalCode) {\r\n            att.ListOfAttributeData.forEach((selAtt) => {\r\n              if (compAtt.AttributeCode === selAtt.AttributeCode)\r\n                compAtt.AttributeValue = selAtt.AttributeValue;\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    return compAttributes;\r\n  }\r\n\r\n  toggleExpand = (data, open) => {\r\n    let expandedRows = this.state.expandedRows;\r\n    let expandedRowIndex = expandedRows.findIndex(\r\n      (item) => item.SeqNo === data.SeqNo\r\n    );\r\n    if (open) {\r\n      expandedRows.splice(expandedRowIndex, 1);\r\n    } else {\r\n      expandedRows.push(data);\r\n    }\r\n    this.setState({ expandedRows });\r\n  };\r\n\r\n  loadingToggleExpand = (data, open) => {\r\n    let loadingExpandedRows = this.state.loadingExpandedRows;\r\n    let expandedRowIndex = loadingExpandedRows.findIndex(\r\n      (item) => item.SeqNumber === data.SeqNumber\r\n    );\r\n    if (open) {\r\n      loadingExpandedRows.splice(expandedRowIndex, 1);\r\n    } else {\r\n      loadingExpandedRows.push(data);\r\n    }\r\n    this.setState({ loadingExpandedRows });\r\n  };\r\n\r\n  attributeToggleExpand = (data, open, isTerminalAdded = false) => {\r\n    let expandedRows = this.state.expandedRows;\r\n    let expandedRowIndex = expandedRows.findIndex(\r\n      (item) => item.SeqNumber === data.SeqNumber\r\n    );\r\n    if (open) {\r\n      if (isTerminalAdded && expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n        expandedRows.push(data);\r\n      } else if (expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n      }\r\n    } else {\r\n      if (expandedRowIndex >= 0) {\r\n        expandedRows = expandedRows.filter(\r\n          (x) => x.Code !== data.Code && x.SeqNumber !== data.SeqNumber\r\n        );\r\n      } else expandedRows.push(data);\r\n    }\r\n    this.setState({ expandedRows });\r\n  };\r\n\r\n  formLoadingCompartments(loadingTables) {\r\n    let noOfSignificantDigits = 0;\r\n    let CustomValues = lodash.cloneDeep(this.state.modCustomValues);\r\n    if (\r\n      CustomValues !== null &&\r\n      CustomValues[\"NumberOfSignificantDigits\"] !== null &&\r\n      CustomValues[\"NumberOfSignificantDigits\"] !== undefined &&\r\n      CustomValues[\"NumberOfSignificantDigits\"] !== \"\"\r\n    )\r\n      noOfSignificantDigits = Utilities.convertStringtoDecimal(\r\n        CustomValues[\"NumberOfSignificantDigits\"]\r\n      );\r\n    let compartmentDetails = [];\r\n    if (Array.isArray(loadingTables.Table1)) {\r\n      loadingTables.Table1.forEach((comp) => {\r\n        comp.TotalQuantity = this.state.isVolumeBased\r\n          ? (comp.loadedquantity + comp.adjustedquantity).toString() +\r\n          \" \" +\r\n          comp.compartmentuom\r\n          : (comp.loadedquantity + comp.adjustedquantity).toString() +\r\n          \" \" +\r\n          comp.compartmentuom +\r\n          \"\\n( \" +\r\n          (\r\n            comp.loadedquantity_volume + comp.adjustedquantity_volume\r\n          ).toString() +\r\n          comp.volumeuom +\r\n          \" )\";\r\n        comp.LeftQuantity =\r\n          comp.revisedplannedquantity -\r\n            (comp.loadedquantity + comp.adjustedquantity) <\r\n            0\r\n            ? \"0 \" + comp.compartmentuom\r\n            : (\r\n              comp.revisedplannedquantity -\r\n              (comp.loadedquantity + comp.adjustedquantity)\r\n            ).toString() +\r\n            \" \" +\r\n            comp.compartmentuom;\r\n        comp.plannedquantity =\r\n          (comp.plannedquantity === null\r\n            ? \"0\"\r\n            : comp.plannedquantity.toString()) +\r\n          \" \" +\r\n          comp.compartmentuom;\r\n        comp.revisedplannedquantity =\r\n          (comp.revisedplannedquantity === null\r\n            ? \"0\"\r\n            : comp.revisedplannedquantity.toString()) +\r\n          \" \" +\r\n          comp.compartmentuom;\r\n        comp.loadedquantity = this.state.isVolumeBased\r\n          ? comp.loadedquantity === null\r\n            ? \"0\"\r\n            : comp.loadedquantity.toString() + \" \" + comp.compartmentuom\r\n          : comp.loadedquantity === null\r\n            ? \"0\"\r\n            : comp.loadedquantity.toString() +\r\n            \" \" +\r\n            comp.compartmentuom +\r\n            \"\\n( \" +\r\n            comp.loadedquantity_volume +\r\n            comp.volumeuom +\r\n            \" )\";\r\n        comp.adjustedquantity = this.state.isVolumeBased\r\n          ? comp.adjustedquantity === null\r\n            ? \"0\"\r\n            : comp.adjustedquantity.toString() + \" \" + comp.compartmentuom\r\n          : comp.adjustedquantity === null\r\n            ? \"0\"\r\n            : comp.adjustedquantity.toString() +\r\n            \" \" +\r\n            comp.compartmentuom +\r\n            \"\\n( \" +\r\n            comp.adjustedquantity_volume +\r\n            comp.volumeuom +\r\n            \" )\";\r\n      });\r\n    }\r\n    if (Array.isArray(loadingTables.Table2)) {\r\n      loadingTables.Table2.forEach((comp) => {\r\n        comp.TotalQuantity = this.state.isVolumeBased\r\n          ? (comp.loadedquantity + comp.adjustedquantity).toString() +\r\n          \" \" +\r\n          comp.compartmentuom\r\n          : (comp.loadedquantity + comp.adjustedquantity).toString() +\r\n          \" \" +\r\n          comp.compartmentuom +\r\n          \"\\n( \" +\r\n          (\r\n            comp.loadedquantity_volume + comp.adjustedquantity_volume\r\n          ).toString() +\r\n          comp.volumeuom +\r\n          \" )\";\r\n        comp.LeftQuantity =\r\n          comp.revisedplannedquantity -\r\n            (comp.loadedquantity + comp.adjustedquantity) <\r\n            0\r\n            ? \"0 \" + comp.compartmentuom\r\n            : (\r\n              comp.revisedplannedquantity -\r\n              (comp.loadedquantity + comp.adjustedquantity)\r\n            ).toString() +\r\n            \" \" +\r\n            comp.compartmentuom;\r\n        comp.plannedquantity =\r\n          comp.plannedquantity === null\r\n            ? \"0\"\r\n            : comp.plannedquantity.toString() + \" \" + comp.compartmentuom;\r\n        comp.revisedplannedquantity =\r\n          comp.revisedplannedquantity === null\r\n            ? \"0\"\r\n            : comp.revisedplannedquantity.toString() +\r\n            \" \" +\r\n            comp.compartmentuom;\r\n        comp.loadedquantity = this.state.isVolumeBased\r\n          ? comp.loadedquantity === null\r\n            ? \"0\"\r\n            : comp.loadedquantity.toString() + \" \" + comp.compartmentuom\r\n          : comp.loadedquantity === null\r\n            ? \"0\"\r\n            : comp.loadedquantity.toString() +\r\n            \" \" +\r\n            comp.compartmentuom +\r\n            \"\\n( \" +\r\n            comp.loadedquantity_volume +\r\n            comp.volumeuom +\r\n            \" )\";\r\n        comp.adjustedquantity = this.state.isVolumeBased\r\n          ? comp.adjustedquantity === null\r\n            ? \"0\"\r\n            : comp.adjustedquantity.toString() + \" \" + comp.compartmentuom\r\n          : comp.adjustedquantity === null\r\n            ? \"0\"\r\n            : comp.adjustedquantity.toString() +\r\n            \" \" +\r\n            comp.compartmentuom +\r\n            \"\\n( \" +\r\n            comp.adjustedquantity_volume +\r\n            comp.volumeuom +\r\n            \" )\";\r\n      });\r\n    }\r\n    let trailers = [];\r\n    if (Array.isArray(loadingTables.Table)) {\r\n      loadingTables.Table.forEach((comp) => {\r\n        let baseProductDetails = [];\r\n        if (\r\n          trailers.findIndex((item) => {\r\n            return item === comp.trailercode;\r\n          }) < 0\r\n        )\r\n          trailers.push(comp.trailercode);\r\n        if (Array.isArray(loadingTables.Table1)) {\r\n          let baseList = loadingTables.Table1.filter((baseProduct) => {\r\n            return (\r\n              baseProduct.finishedproductid === comp.FinishedProductID &&\r\n              baseProduct.shipmentcompartmentid === comp.shipmentcompartmentid\r\n            );\r\n          });\r\n          baseList.forEach((item) => {\r\n            item.AdditiveProductDetails = loadingTables.Table2.filter(\r\n              (advProduct) => {\r\n                return (\r\n                  item.baseproductid === advProduct.baseproductid &&\r\n                  item.shipmentcompartmentid ===\r\n                  advProduct.shipmentcompartmentid\r\n                );\r\n              }\r\n            );\r\n          });\r\n          baseProductDetails = baseList;\r\n        }\r\n        compartmentDetails.push({\r\n          Trailer_Code: comp.trailercode,\r\n          Compartment_Code: comp.compartmentcode,\r\n          Compartment_Status: comp.compartmentstatus,\r\n          Finished_Product: comp.finishedproductcode,\r\n          Planned_Quantity:\r\n            (comp.PlannedQuantity === null\r\n              ? \"0\"\r\n              : comp.PlannedQuantity.toString()) +\r\n            \" \" +\r\n            comp.compartmentuom,\r\n          Revised_Planned_Quantity:\r\n            (comp.revisedplannedquantity === null\r\n              ? \"0\"\r\n              : comp.revisedplannedquantity.toString()) +\r\n            \" \" +\r\n            comp.compartmentuom,\r\n          Loaded_Quantity: this.state.isVolumeBased\r\n            ? Math.round(\r\n              comp.loadedquantity + comp.adjustedquantity,\r\n              noOfSignificantDigits\r\n            ).toString() +\r\n            \" \" +\r\n            comp.compartmentuom\r\n            : Math.round(\r\n              comp.loadedquantity + comp.adjustedquantity,\r\n              noOfSignificantDigits\r\n            ).toString() +\r\n            \" \" +\r\n            comp.compartmentuom +\r\n            \"\\n( \" +\r\n            Math.round(\r\n              comp.loadedquantity_volume + comp.adjustedquantity_volume,\r\n              noOfSignificantDigits\r\n            ).toString() +\r\n            comp.volumeuom +\r\n            \" )\",\r\n          Left_Quantity:\r\n            comp.revisedplannedquantity -\r\n              (comp.loadedquantity + comp.adjustedquantity) <\r\n              0\r\n              ? \"0 \" + comp.compartmentuom\r\n              : Math.round(\r\n                comp.revisedplannedquantity -\r\n                (comp.loadedquantity + comp.adjustedquantity),\r\n                noOfSignificantDigits\r\n              ).toString() +\r\n              \" \" +\r\n              comp.compartmentuom,\r\n          Adjust_Plan:\r\n            comp.AdjustmentToPlannedQuantity === null\r\n              ? \"\"\r\n              : comp.AdjustmentToPlannedQuantity,\r\n          Top_Up_Decant_Quantity:\r\n            comp.TopUpDecantQuantity === null ? \"\" : comp.TopUpDecantQuantity,\r\n          Top_Up_Decant_Quantity_Status: comp.TopUpDecantStatus,\r\n          Compartment_UOM: comp.compartmentuom,\r\n          Notes: comp.Notes ? \"\" : comp.Notes,\r\n          BaseProductDetails: baseProductDetails,\r\n          ShipmentID: comp.ShipmentID,\r\n          CompartmentID: comp.CompartmentID,\r\n          FinishedProductID: comp.FinishedProductID,\r\n          ShipmentCompID: comp.shipmentcompartmentid,\r\n          SeqNo: comp.seqno,\r\n          Force_Complete:\r\n            Constants.ShipmentCompartmentStatus[comp.compartmentstatus] ===\r\n              Constants.ShipmentCompartmentStatus.FORCE_COMPLETED\r\n              ? true\r\n              : false,\r\n          BlendState: comp.blendstate,\r\n        });\r\n      });\r\n    }\r\n    this.setState({ trailers: trailers });\r\n    compartmentDetails = Utilities.addSeqNumberToListObject(compartmentDetails);\r\n\r\n    return compartmentDetails;\r\n  }\r\n\r\n  getRecordWeightList() {\r\n    axios(\r\n      RestAPIs.GetWeighBridgeList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        this.setState({\r\n          isRecordWeight: true,\r\n          recordWeightList: result.EntityResult,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting RecordWeightList:\", error);\r\n      });\r\n  }\r\n\r\n  getWeighBridge(siteConfiguration) {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.weighBridgeCode,\r\n          value: this.state.weighBridgeCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        keyDataCode: KeyCodes.weighBridgeCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetWeighBridge,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let weighBridge = result.EntityResult;\r\n\r\n            this.getLadenWeightData(\r\n              this.state.vehicleForRecordWeight.TareWeight, //RegisteredTareWeight\r\n              this.state.vehicleForRecordWeight.WeightUOM, //VehicleWeightUOM\r\n              weighBridge.WeightUOM,\r\n              this.state.vehicleForRecordWeight.MaxLoadableWeight, // MaxLoadableWeight\r\n              this.state.scadaValue, //Weight\r\n              siteConfiguration\r\n            );\r\n          } else {\r\n            console.log(\"Error in GetWeighBridge:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while GetWeighBridge:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in get GetWeighBridge\", error);\r\n    }\r\n  }\r\n\r\n  ValidateLadenWeight(ladenWeighData, siteConfiguration) {\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewAllShipment_Record_Weight\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    var returnValue = true;\r\n\r\n    try {\r\n      let minLadenWeightTolerance =\r\n        siteConfiguration.MinLadenweightQuantityTolerance;\r\n      let maxLadenWeightTolerance =\r\n        siteConfiguration.MaxLadenweightQuantityTolerance;\r\n\r\n      var error = \"\";\r\n      var minLadenWeightTol = 0;\r\n      var maxLadenWeightTol = 0;\r\n\r\n      if (isNaN(parseFloat(this.state.scadaValue))) {\r\n        error = \"MesuredWeight_Improper\";\r\n        returnValue = false;\r\n      } else if (\r\n        isNaN(parseFloat(ladenWeighData[\"ConvertedRegisteredTareWeight\"]))\r\n      ) {\r\n        error = \"Improper_Tare_Weight\";\r\n        returnValue = false;\r\n      } else if (\r\n        isNaN(parseFloat(ladenWeighData[\"ConvertedMaxLoadableWeight\"]))\r\n      ) {\r\n        error = \"Improper_Max_Weight\";\r\n        returnValue = false;\r\n      } else if (\r\n        isNaN(parseFloat(ladenWeighData[\"ConvertedMeasuredTareWeight\"]))\r\n      ) {\r\n        error = \"TareWeight_Not_Captured\";\r\n        returnValue = false;\r\n      }\r\n      if (returnValue === true) {\r\n        minLadenWeightTol =\r\n          ((parseFloat(ladenWeighData[\"ConvertedMeasuredTareWeight\"]) +\r\n            parseFloat(ladenWeighData[\"ConvertedLoadedQty\"])) *\r\n            parseFloat(minLadenWeightTolerance)) /\r\n          100;\r\n\r\n        maxLadenWeightTol =\r\n          ((parseFloat(ladenWeighData[\"ConvertedMeasuredTareWeight\"]) +\r\n            parseFloat(ladenWeighData[\"ConvertedLoadedQty\"])) *\r\n            parseFloat(maxLadenWeightTolerance)) /\r\n          100;\r\n\r\n        if (\r\n          (parseFloat(ladenWeighData[\"ConvertedLoadedQty\"]) >\r\n            parseFloat(ladenWeighData[\"ConvertedMaxLoadableWeight\"])) |\r\n          (parseFloat(this.state.scadaValue) >\r\n            parseFloat(ladenWeighData[\"ConvertedMaxLoadableWeight\"]) +\r\n            parseFloat(ladenWeighData[\"ConvertedRegisteredTareWeight\"]))\r\n        ) {\r\n          error = \"ShipmentWeight_GreaterThan_MaxLoadableWeight\";\r\n        } else if (\r\n          parseFloat(this.state.scadaValue) <\r\n          parseFloat(ladenWeighData[\"ConvertedMeasuredTareWeight\"]) +\r\n          parseFloat(ladenWeighData[\"ConvertedLoadedQty\"]) -\r\n          minLadenWeightTol\r\n        ) {\r\n          error = \"MeasuredWeight_LessThan_ExpectedLoadedWeight\";\r\n        } else if (\r\n          parseFloat(this.state.scadaValue) >\r\n          parseFloat(ladenWeighData[\"ConvertedMeasuredTareWeight\"]) +\r\n          parseFloat(ladenWeighData[\"ConvertedLoadedQty\"]) +\r\n          maxLadenWeightTol\r\n        ) {\r\n          error = \"MeasuredWeight_MoreThan_ExpectedLoadedWeight\";\r\n        }\r\n      } else {\r\n        if (error !== \"\") {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n            keyValues: [this.state.shipment.ShipmentCode],\r\n            isSuccess: false,\r\n            errorMessage: error,\r\n          });\r\n          this.setState({\r\n            isLadenWeightValid: false,\r\n          });\r\n        }\r\n        if (notification.messageResultDetails.length > 0) {\r\n          this.props.onSaved(this.state.modShipment, \"update\", notification);\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if (error !== \"\") {\r\n        this.setState({\r\n          isLadenWeightValid: true,\r\n          ladenWeightError: error,\r\n        });\r\n      } else this.RecordLadenWeight();\r\n    } catch (error) {\r\n      console.log(\"Error while validating laden weight : \", error);\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  RecordLadenWeight() {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.weighBridgeCode,\r\n          value: this.state.weighBridgeCode,\r\n        },\r\n        {\r\n          key: KeyCodes.weight,\r\n          value: this.state.scadaValue,\r\n        },\r\n        {\r\n          key: KeyCodes.vehicleCode,\r\n          value: this.state.shipment.VehicleCode,\r\n        },\r\n        {\r\n          key: KeyCodes.shipmentCode,\r\n          value: this.state.shipment.ShipmentCode,\r\n        },\r\n        {\r\n          key: KeyCodes.outOfToleranceAllowed,\r\n          value: this.state.allowOutofRangeTW,\r\n        },\r\n      ];\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"ViewAllShipment_Record_Weight\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n            keyValues: [this.state.shipment.ShipmentCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      var obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.weighBridgeCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.RecordShipmentLadenWeight,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          notification.messageType = response.data.IsSuccess\r\n            ? \"success\"\r\n            : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess =\r\n            response.data.IsSuccess;\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ isRecordWeight: false }, () => {\r\n              this.getShipment(\r\n                {\r\n                  Common_Code: this.state.modShipment.ShipmentCode,\r\n                },\r\n                null,\r\n                null,\r\n                notification\r\n              );\r\n            });\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              response.data.ErrorList[0];\r\n            this.props.onSaved(this.state.modShipment, \"update\", notification);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while recording laden weight:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in GetScadaValue\");\r\n    }\r\n  }\r\n\r\n  RecordTareWeight = () => {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.weighBridgeCode,\r\n          value: this.state.weighBridgeCode,\r\n        },\r\n        {\r\n          key: KeyCodes.weight,\r\n          value: this.state.scadaValue,\r\n        },\r\n        {\r\n          key: KeyCodes.vehicleCode,\r\n          value: this.state.shipment.VehicleCode,\r\n        },\r\n        {\r\n          key: KeyCodes.shipmentCode,\r\n          value: this.state.shipment.ShipmentCode,\r\n        },\r\n        {\r\n          key: KeyCodes.outOfToleranceAllowed,\r\n          value: this.state.allowOutofRangeTW,\r\n        },\r\n      ];\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"ViewAllShipment_Record_Weight\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n            keyValues: [this.state.shipment.ShipmentCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      var obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.weighBridgeCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.RecordShipmentTareWeight,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          notification.messageType = response.data.IsSuccess\r\n            ? \"success\"\r\n            : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess =\r\n            response.data.IsSuccess;\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ isRecordWeight: false }, () => {\r\n              this.getShipment(\r\n                {\r\n                  Common_Code: this.state.modShipment.ShipmentCode,\r\n                },\r\n                null,\r\n                null,\r\n                notification\r\n              );\r\n            });\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              response.data.ErrorList[0];\r\n            this.props.onSaved(this.state.modShipment, \"update\", notification);\r\n          }\r\n          // toast(\r\n          //   <ErrorBoundary>\r\n          //     <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          //   </ErrorBoundary>,\r\n          //   {\r\n          //     autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          //   }\r\n          // );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while recording tare weight:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in GetScadaValue\");\r\n    }\r\n  };\r\n\r\n  getScadaValue = () => {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.weighBridgeCode,\r\n          value: this.state.weighBridgeCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.weighBridgeCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.ReadWBScadaValue,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let notification = {\r\n            messageType: \"critical\",\r\n            message: \"ViewAllShipment_Record_Weight\",\r\n            messageResultDetails: [\r\n              {\r\n                keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n                keyValues: [this.state.shipment.ShipmentCode],\r\n                isSuccess: false,\r\n                errorMessage: \"\",\r\n              },\r\n            ],\r\n          };\r\n\r\n          notification.messageType = response.data.IsSuccess\r\n            ? \"success\"\r\n            : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess =\r\n            response.data.IsSuccess;\r\n\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ scadaValue: response.data.EntityResult });\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              response.data.ErrorList[0];\r\n\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting weigh brdige Scada value:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in GetScadaValue\");\r\n    }\r\n  };\r\n\r\n  printBOL = () => {\r\n    let showPrintBOLAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showPrintBOLAuthenticationLayout }, () => {\r\n      if (showPrintBOLAuthenticationLayout === false) {\r\n        this.handlePrintBOL();\r\n      }\r\n    });\r\n  };\r\n\r\n  handlePrintBOL = () => {\r\n    this.handleAuthenticationClose();\r\n    let modShipment = lodash.cloneDeep(this.state.modShipment);\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewShipmentStatus_PrintBOL_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [modShipment.ShipmentCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.props.handlePrintBOL(\r\n      modShipment.ShipmentCode,\r\n      this.props.selectedShareholder,\r\n      this.props.tokenDetails.tokenInfo,\r\n      (result) => {\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        notification.messageResultDetails[0].errorMessage = result.ErrorList[0];\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  printFAN = () => {\r\n    let showFANAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showFANAuthenticationLayout }, () => {\r\n      if (showFANAuthenticationLayout === false) {\r\n        this.handlePrintFAN();\r\n      }\r\n    });\r\n  };\r\n\r\n  handlePrintFAN = () => {\r\n    this.handleAuthenticationClose();\r\n    let modShipment = lodash.cloneDeep(this.state.modShipment);\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewShipmentStatus_PrintFAN_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [modShipment.ShipmentCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.props.handlePrintFAN(\r\n      modShipment.ShipmentCode,\r\n      this.props.selectedShareholder,\r\n      this.props.tokenDetails.tokenInfo,\r\n      (result) => {\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        notification.messageResultDetails[0].errorMessage = result.ErrorList[0];\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  allowToLoad = () => {\r\n    let showAllowToLoadAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showAllowToLoadAuthenticationLayout }, () => {\r\n      if (showAllowToLoadAuthenticationLayout === false) {\r\n        this.handleAllowToLoad();\r\n      }\r\n    });\r\n  };\r\n\r\n  handleAllowToLoad = () => {\r\n    this.handleAuthenticationClose();\r\n\r\n    let modShipment = lodash.cloneDeep(this.state.modShipment);\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewShipment_AllowToLoad_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [modShipment.ShipmentCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    this.props.handleAllowToLoad(\r\n      modShipment,\r\n      this.props.selectedShareholder,\r\n      this.props.tokenDetails.tokenInfo,\r\n      (result) => {\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getShipment(\r\n            { Common_Code: modShipment.ShipmentCode },\r\n            null,\r\n            null,\r\n            notification\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.props.onSaved(modShipment, \"update\", notification);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  confirmAllowToLoad = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isNotRevised} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h5>{t(\"ViewShipment_ConfirmAllowToLoad\")}</h5>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"AccessCardInfo_Ok\")}\r\n                onClick={() => {\r\n                  this.setState({ isNotRevised: false }, () => {\r\n                    this.allowToLoad();\r\n                  });\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  this.setState({ isNotRevised: false });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  confirmDeAllocateBay = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isDeAllocateBay} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h5>\r\n                  {t(\"ViewAllocateBay_ConfirmDeallocateBay\", [\r\n                    this.state.ShipmentBay,\r\n                    \"Shipment\",\r\n                  ])}\r\n                </h5>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"cancelButton\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  this.setState({ isDeAllocateBay: false });\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"ViewAllocateBay_Deallocate\")}\r\n                onClick={() => {\r\n                  this.setState({ isDeAllocateBay: false }, () => {\r\n                    this.DeAllocateBay(\r\n                      this.state.shipment.ShipmentCode,\r\n                      \"SHIPMENT\",\r\n                      this.state.ShipmentBay\r\n                    );\r\n                  });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  confirmRecordLadenWeight = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isLadenWeightValid} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h5>\r\n                  {t(this.state.ladenWeightError) +\r\n                    t(\"ConfirmCaptureLadenWeight\")}\r\n                </h5>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"AccessCardInfo_Ok\")}\r\n                onClick={() => {\r\n                  this.setState({ isLadenWeightValid: false }, () => {\r\n                    this.RecordLadenWeight();\r\n                  });\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  this.setState({ isLadenWeightValid: false });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  confirmVehicleBond = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.vehicleBondPopUp} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h5>{t(\"ShipmentBonded_VehicleNonBonded\")}</h5>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"AccessCardInfo_Ok\")}\r\n                onClick={() => {\r\n                  this.setState({\r\n                    vehicleBondPopUp: false,\r\n                    stockProducts: true,\r\n                  });\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  this.setState({ vehicleBondPopUp: false });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  confirmBondedStockProducts = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.stockProducts} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h5>{t(\"ShipmentBonded_StockProducts\")}</h5>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"AccessCardInfo_Ok\")}\r\n                onClick={() => {\r\n                  this.setState({ stockProducts: false }, () => {\r\n                    this.saveShipment();\r\n                  });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  confirmVehicleBondExpiryDate = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.vehicleBondExpiryPopUp} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h5>{t(\"ShipmentBonded_VehicleBondExpiryDate\")}</h5>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"AccessCardInfo_Ok\")}\r\n                onClick={() => {\r\n                  this.setState({\r\n                    vehicleBondExpiryPopUp: false,\r\n                    stockProducts: true,\r\n                  });\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  this.setState({ vehicleBondExpiryPopUp: false });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  handleRecordWeight = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isRecordWeight} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h3>\r\n                  {t(\"ViewAllShipment_RecordWeightShipment\") +\r\n                    \" : \" +\r\n                    this.state.shipment.ShipmentCode}\r\n                </h3>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <div className=\"col col-lg-9\">\r\n                  <Select\r\n                    fluid\r\n                    placeholder={t(\"Select_WB\")}\r\n                    label={t(\"ViewShipment_WeighBridgeCode\")}\r\n                    value={this.state.weighBridgeCode}\r\n                    options={Utilities.transferListtoOptions(\r\n                      this.state.recordWeightList\r\n                    )}\r\n                    onChange={(cellData) => {\r\n                      this.setState({ weighBridgeCode: cellData }, () =>\r\n                        this.getScadaValue()\r\n                      );\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"shipmentRecordWeightButtonDiv\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    size=\"small\"\r\n                    className=\"shipmentRecordWeightButton\"\r\n                    content={t(\"ViewShipment_ReadWeight\")}\r\n                    onClick={() => this.getScadaValue()}\r\n                    disabled={\r\n                      this.state.weighBridgeCode === null ||\r\n                        this.state.weighBridgeCode === \"\" ||\r\n                        this.state.weighBridgeCode === undefined\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <div className=\"col col-lg-12\">\r\n                  <Input\r\n                    fluid\r\n                    value={this.state.scadaValue}\r\n                    label={t(\"ViewShipment_Weight\")}\r\n                    reserveSpace={false}\r\n                    disabled={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <div className=\"col col-lg-12\">\r\n                  <Checkbox\r\n                    className=\"LabelEnabled\"\r\n                    label={t(\"Allow_Out_of_Tolerance_for_TW\")}\r\n                    checked={this.state.allowOutofRangeTW}\r\n                    onChange={(cellData) => {\r\n                      this.setState({ allowOutofRangeTW: cellData });\r\n                    }}\r\n                    disabled={false}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"shipmentRecordWeightOtherbuttons\"\r\n                content={t(\"ViewShipment_RecordTareWeight\")}\r\n                onClick={() => this.RecordTareWeight()}\r\n                disabled={\r\n                  this.state.scadaValue === null ||\r\n                    this.state.scadaValue === \"\" ||\r\n                    this.state.scadaValue === undefined\r\n                    ? true\r\n                    : false\r\n                }\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"ViewShipment_RecordLadenWeight\")}\r\n                className=\"shipmentRecordWeightOtherbuttons\"\r\n                onClick={() => this.getSiteConfigurationLookUP()}\r\n                disabled={\r\n                  this.state.scadaValue === null ||\r\n                    this.state.scadaValue === \"\" ||\r\n                    this.state.scadaValue === undefined\r\n                    ? true\r\n                    : false\r\n                }\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Cancel\")}\r\n                className=\"shipmentRecordWeightOtherbuttons\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    isRecordWeight: false,\r\n                    weighBridgeCode: \"\",\r\n                    scadaValue: \"\",\r\n                  });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  handleStatus = (e) => {\r\n    if (e === Constants.ShipmentCompartmentStatus.EMPTY) {\r\n      return \"EMPTY\";\r\n    } else if (e === Constants.ShipmentCompartmentStatus.LOADING) {\r\n      return \"LOADING\";\r\n    } else if (e === Constants.ShipmentCompartmentStatus.PART_FILLED) {\r\n      return \"PART_FILLED\";\r\n    } else if (e === Constants.ShipmentCompartmentStatus.OVER_FILLED) {\r\n      return \"OVER_FILLED\";\r\n    } else if (e === Constants.ShipmentCompartmentStatus.FORCE_COMPLETED) {\r\n      return \"FORCE_COMPLETED\";\r\n    } else if (e === Constants.ShipmentCompartmentStatus.COMPLETED) {\r\n      return \"COMPLETED\";\r\n    } else if (e === Constants.ShipmentCompartmentStatus.INTERRUPTED) {\r\n      return \"INTERRUPTED\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  closeShipment = () => {\r\n    let showCloseShipmentAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showCloseShipmentAuthenticationLayout }, () => {\r\n      if (showCloseShipmentAuthenticationLayout === false) {\r\n        this.handleShipmentClose();\r\n      }\r\n    });\r\n  };\r\n\r\n  handleShipmentClose = () => {\r\n    this.handleAuthenticationClose();\r\n    try {\r\n      let entity = this.formTopUpDecantRequest(\r\n        Constants.TopUpDecantApprovalStatus.FORCE_COMPLETED,\r\n        \"FORCECLOSE\"\r\n      );\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"ViewAllShipment_ShipmentClose\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n            keyValues: [this.state.shipment.ShipmentCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.shareholderCode,\r\n          value: this.props.selectedShareholder,\r\n        },\r\n        {\r\n          key: KeyCodes.shipmentCode,\r\n          value: this.state.modShipment.ShipmentCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.shipmentCode,\r\n        KeyCodes: keyCode,\r\n        Entity: entity,\r\n      };\r\n      axios(\r\n        RestAPIs.CloseShipment,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          if (result.IsSuccess === true) {\r\n            this.getShipment(\r\n              { Common_Code: this.state.shipment.ShipmentCode },\r\n              null,\r\n              null,\r\n              notification\r\n            );\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            this.props.onSaved(this.state.modShipment, \"update\", notification);\r\n          }\r\n          // toast(\r\n          //   <ErrorBoundary>\r\n          //     <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          //   </ErrorBoundary>,\r\n          //   {\r\n          //     autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          //   }\r\n          // );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while CloseShipment:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while closing the shipment:\", error);\r\n    }\r\n  };\r\n\r\n  confirmAllocateBay = () => {\r\n    let bayData = lodash.cloneDeep(this.state.bayData);\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isAllocateBay} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h3>\r\n                  {t(\"ViewAllocateBay_AllocateBay\")} -{\" \"}\r\n                  {this.state.shipment.ShipmentCode}\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-12 detailsTable\">\r\n                <DataTable\r\n                  className=\"iconblock\"\r\n                  data={bayData}\r\n                  selection={this.state.selectBay}\r\n                  selectionMode=\"single\"\r\n                  showHeader={true}\r\n                  onSelectionChange={(e) => this.setState({ selectBay: e })}\r\n                  rows={\r\n                    this.props.userDetails.EntityResult.PageAttibutes\r\n                      .WebPortalListPageSize\r\n                  }\r\n                  resizableColumns={true}\r\n                >\r\n                  {/* <DataTable.ActionBar /> */}\r\n                  <DataTable.Column\r\n                    className=\"compColHeight compColmiddle\"\r\n                    field={\"BayCode\"}\r\n                    header={t(\"ViewAllocateBay_BayCode\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight compColmiddle\"\r\n                    field={\"AssociatedProduct\"}\r\n                    header={t(\"ViewAllocateBay_FinishProduct\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight compColmiddle\"\r\n                    field=\"CurrentQueue\"\r\n                    header={t(\"ViewAllocateBay_CurrentQueue\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight compColmiddle\"\r\n                    field=\"MaximumQueue\"\r\n                    header={t(\"ViewAllocateBay_MaximumQueue\")}\r\n                    editable={false}\r\n                  />\r\n                  {Array.isArray(bayData) &&\r\n                    bayData.length >\r\n                    this.props.userDetails.EntityResult.PageAttibutes\r\n                      .WebPortalListPageSize ? (\r\n                    <DataTable.Pagination />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </DataTable>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"MarineEOD_Close\")}\r\n                className=\"cancelButton\"\r\n                onClick={() => this.setState({ isAllocateBay: false })}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"ViewAllocateBay_Allocate\")}\r\n                onClick={() => {\r\n                  if (\r\n                    this.state.selectBay === null ||\r\n                    this.state.selectBay === undefined ||\r\n                    this.state.selectBay.length === 0\r\n                  ) {\r\n                    let notification = {\r\n                      messageType: \"critical\",\r\n                      message: \"ViewAllocateBay_Allocate\",\r\n                      messageResultDetails: [\r\n                        {\r\n                          keyFields: [\"BayCode\"],\r\n                          keyValues: [],\r\n                          isSuccess: false,\r\n                          errorMessage: \"ViewAllocateBay_bayrequired\",\r\n                        },\r\n                      ],\r\n                    };\r\n\r\n                    toast(\r\n                      <ErrorBoundary>\r\n                        <NotifyEvent\r\n                          notificationMessage={notification}\r\n                        ></NotifyEvent>\r\n                      </ErrorBoundary>,\r\n                      {\r\n                        autoClose:\r\n                          notification.messageType === \"success\"\r\n                            ? 10000\r\n                            : false,\r\n                      }\r\n                    );\r\n                  } else {\r\n                    this.AllocateBay(\r\n                      this.state.shipment.ShipmentCode,\r\n                      this.state.selectBay[0].BayCode,\r\n                      \"SHIPMENT\"\r\n                    );\r\n                  }\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {*} shipmentCode\r\n   * @param {*} bayCode\r\n   * @param {*} entityType:shipment or receipt\r\n   */\r\n  AllocateBay(shipmentCode, bayCode, entityType) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentCode,\r\n      },\r\n      {\r\n        key: KeyCodes.bayCode,\r\n        value: bayCode,\r\n      },\r\n      {\r\n        key: KeyCodes.entityType,\r\n        value: entityType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"BayAllocation_SaveStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"BayCode\"],\r\n          keyValues: [bayCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.AllocateBay,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getShipment(\r\n            { Common_Code: this.state.shipment.ShipmentCode },\r\n            null,\r\n            null,\r\n            notification\r\n          );\r\n          this.setState({ isAllocateBay: false });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ResultDataList[0].ErrorList[0];\r\n          this.props.onSaved(this.state.modShipment, \"update\", notification);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while AllocateBay:\", error);\r\n      });\r\n  }\r\n\r\n  GetBayByTrnsaction(TrnsactionCode, TrnsactionType, shareholder) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: TrnsactionCode,\r\n      },\r\n      {\r\n        key: KeyCodes.TransactionType,\r\n        value: TrnsactionType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shareholder,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetBayAllocatedInfoByTransaction,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      ),\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess) {\r\n          this.setState({\r\n            ShipmentBay: result.EntityResult.BayCode,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while GetBayByTrnsaction:\", error);\r\n      });\r\n  }\r\n\r\n  DeAllocateBay(shipmentCode, entityType, bayCode) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentCode,\r\n      },\r\n      {\r\n        key: KeyCodes.entityType,\r\n        value: entityType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      KeyCodes: keyCode,\r\n    };\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"BayDeAllocation_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"BayCode\"],\r\n          keyValues: [bayCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.DeallocateShipment,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getShipment(\r\n            { Common_Code: this.state.shipment.ShipmentCode },\r\n            null,\r\n            null,\r\n            notification\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.props.onSaved(this.state.modShipment, \"update\", notification);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while DeAllocateBay:\", error);\r\n      });\r\n  }\r\n\r\n  UpdateShipmentCompartmentInfo() {\r\n    let entity = this.formCompartmentDetailsRequest();\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewAllShipment_ShipmentCompartmentUpdate\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [this.state.shipment.ShipmentCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: this.props.selectedShareholder,\r\n      },\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: this.state.modShipment.ShipmentCode,\r\n      },\r\n      {\r\n        key: \"ScheduledDate\",\r\n        value: this.state.modShipment.ScheduledDate,\r\n      },\r\n      {\r\n        key: \"ShipmentUOM\",\r\n        value: this.state.modShipment.ShipmentQuantityUOM,\r\n      },\r\n      {\r\n        key: KeyCodes.carrierCode,\r\n        value: this.state.modShipment.CarrierCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n      Entity: entity,\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateShipmentCompartmentDetails,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getShipment({ Common_Code: this.state.shipment.ShipmentCode });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while updating shipment compartments : \", error);\r\n      });\r\n  }\r\n\r\n  handleTopUpDecantApproval = (actionName, buttonName) => {\r\n    if (actionName === \"SaveCompartment\") this.UpdateShipmentCompartmentInfo();\r\n    else if (actionName === \"Approve\") this.ApproveTopUpDecant(buttonName);\r\n  };\r\n\r\n  ApproveTopUpDecant(buttonName) {\r\n    let entity = {\r\n      topUpDecantApprovalStatus: \"\",\r\n      topUpDecantEnabled: \"\",\r\n      Remarks: \"\",\r\n      listShipmentCompartmentInfo: [],\r\n      listShipmentLoadingCompData: [],\r\n    };\r\n\r\n    entity.Remarks = buttonName;\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewAllShipment_ApproveTopUpDecant\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [this.state.shipment.ShipmentCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    let validateResult = this.ValidateTopUpDecant();\r\n    if (validateResult.isValid) {\r\n      if (buttonName === \"ViewShipmentTopUpDecant_SubmitForApproved\") {\r\n        let TopUpRequest = this.formTopUpDecantRequest(\r\n          Constants.TopUpDecantApprovalStatus.SUBMITTED,\r\n          null\r\n        );\r\n        entity.listShipmentCompartmentInfo =\r\n          TopUpRequest.listShipmentCompartmentInfo;\r\n      }\r\n      //else if (btnSubmitForApproval.Text.ToUpper().Contains(\"APPROVE\"))\r\n      else if (buttonName === \"ViewShipmentTopUpDecant_AutoApproved\") {\r\n        let TopUpRequest = this.formTopUpDecantRequest(\r\n          Constants.TopUpDecantApprovalStatus.AUTO_APPROVED,\r\n          null\r\n        );\r\n        entity.listShipmentCompartmentInfo =\r\n          TopUpRequest.listShipmentCompartmentInfo;\r\n      }\r\n\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.shareholderCode,\r\n          value: this.props.selectedShareholder,\r\n        },\r\n        {\r\n          key: KeyCodes.shipmentCode,\r\n          value: this.state.modShipment.ShipmentCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.shipmentCode,\r\n        KeyCodes: keyCode,\r\n        Entity: entity,\r\n      };\r\n      axios(\r\n        RestAPIs.ApproveTopUpDecant,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.getShipment({\r\n              Common_Code: this.state.modShipment.ShipmentCode,\r\n            });\r\n          }\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while aproving top up decant : \", error);\r\n        });\r\n    } else {\r\n      notification.messageResultDetails[0].isSuccess = false;\r\n      notification.messageResultDetails[0].errorMessage =\r\n        validateResult.errorMessage;\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  ValidateTopUpDecant() {\r\n    let result = {\r\n      isValid: true,\r\n      errorMessage: \"\",\r\n    };\r\n    let modLoadingDetails = lodash.cloneDeep(this.state.modLoadingDetails);\r\n\r\n    let dTopUpQty = 0;\r\n    let dLeftQty = 0;\r\n    let dTotalQty = 0;\r\n    let dMTQ =\r\n      this.state.modCustomValues[\"TopUpDecantMTQ\"] === \"\"\r\n        ? 0\r\n        : Utilities.convertStringtoDecimal(\r\n          this.state.modCustomValues[\"TopUpDecantMTQ\"]\r\n        );\r\n\r\n    modLoadingDetails.forEach((item) => {\r\n      if (\r\n        item.Left_Quantity !== null &&\r\n        item.Left_Quantity !== \"\" &&\r\n        item.Left_Quantity !== undefined &&\r\n        item.Top_Up_Decant_Quantity !== null &&\r\n        item.Top_Up_Decant_Quantity !== \"\" &&\r\n        item.Top_Up_Decant_Quantity !== undefined &&\r\n        item.Loaded_Quantity !== null &&\r\n        item.Loaded_Quantity !== \"\" &&\r\n        item.Loaded_Quantity !== undefined\r\n      ) {\r\n        let sLeftQty = \"\";\r\n        let sTotalQty = \"\";\r\n        if (\r\n          item.Left_Quantity !== null &&\r\n          item.Left_Quantity !== \"\" &&\r\n          item.Left_Quantity !== undefined\r\n        ) {\r\n          sLeftQty = item.Left_Quantity;\r\n          //Seperate Left Quantity value from UOM\r\n          let matchLeft = sLeftQty.split(\" \");\r\n          sLeftQty = matchLeft[0].trim();\r\n\r\n          dLeftQty = Utilities.convertStringtoDecimal(sLeftQty);\r\n        }\r\n        if (\r\n          item.Loaded_Quantity !== null &&\r\n          item.Loaded_Quantity !== \"\" &&\r\n          item.Loaded_Quantity !== undefined\r\n        ) {\r\n          sTotalQty = item.Loaded_Quantity;\r\n          //Seperate Total Quantity value from UOM\r\n          let matchTotal = sTotalQty.split(\" \");\r\n          sTotalQty = matchTotal[0].trim();\r\n\r\n          dTopUpQty = Utilities.convertStringtoDecimal(\r\n            item.Top_Up_Decant_Quantity\r\n          );\r\n          dTotalQty = Utilities.convertStringtoDecimal(sTotalQty);\r\n        }\r\n\r\n        if (dTopUpQty > 0) {\r\n          if (Math.round(dTopUpQty, 2) > Math.round(dMTQ, 2)) {\r\n            result.isValid = false;\r\n            result.errorMessage = \"ViewShipment_TopUpDecant_GreaterThanMTQ\";\r\n            // notification.messageResultDetails[0].errorMessage = \"ViewShipment_TopUpDecant_GreaterThanMTQ\"\r\n            // toast(\r\n            //   <ErrorBoundary>\r\n            //     <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            //   </ErrorBoundary>,\r\n            //   {\r\n            //     autoClose:\r\n            //       notification.messageType === \"success\" ? 10000 : false,\r\n            //   }\r\n            // );\r\n            // return false;\r\n          } else if (Math.round(dLeftQty, 2) > Math.round(dMTQ, 2)) {\r\n            result.isValid = false;\r\n            result.errorMessage =\r\n              \"ViewShipment_TopUpDecant_LessQtyGreaterThanMTQ\";\r\n            // notification.messageResultDetails[0].errorMessage = \"ViewShipment_TopUpDecant_LessQtyGreaterThanMTQ\"\r\n            // toast(\r\n            //   <ErrorBoundary>\r\n            //     <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            //   </ErrorBoundary>,\r\n            //   {\r\n            //     autoClose:\r\n            //       notification.messageType === \"success\" ? 10000 : false,\r\n            //   }\r\n            // );\r\n            // return false;\r\n          }\r\n        } else {\r\n          if (Math.abs(dTopUpQty) > Math.round(dTotalQty, 2)) {\r\n            result.isValid = false;\r\n            result.errorMessage =\r\n              \"ViewShipment_TopUpDecant_DecantGreaterThanLoadedQty\";\r\n\r\n            // notification.messageResultDetails[0].errorMessage = \"ViewShipment_TopUpDecant_DecantGreaterThanLoadedQty\"\r\n            // toast(\r\n            //   <ErrorBoundary>\r\n            //     <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            //   </ErrorBoundary>,\r\n            //   {\r\n            //     autoClose:\r\n            //       notification.messageType === \"success\" ? 10000 : false,\r\n            //   }\r\n            // );\r\n            // return false;\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  formCompartmentDetailsRequest() {\r\n    let ViewAllTruckShipmentLoadingDetails = {\r\n      topUpDecantApprovalStatus: \"\",\r\n      topUpDecantEnabled: \"\",\r\n      Remarks: \"\",\r\n      listShipmentCompartmentInfo: [],\r\n      listShipmentLoadingCompData: [],\r\n      ddlTopUpDecantApprovalStatus: null,\r\n      isAdjustedFP: 0,\r\n    };\r\n    try {\r\n      //let loadingDetails = lodash.cloneDeep(this.state.staticLoadingDetails)\r\n      let modLoadingDetails = lodash.cloneDeep(this.state.modLoadingDetails);\r\n      let ddlTopUpDecantStatus = lodash.cloneDeep(\r\n        this.state.ddlTopUpDecantStatus\r\n      );\r\n\r\n      ViewAllTruckShipmentLoadingDetails.topUpDecantApprovalStatus =\r\n        this.state.modCustomValues.TopUpDecantStatusText;\r\n      ViewAllTruckShipmentLoadingDetails.topUpDecantEnabled =\r\n        this.state.modCustomValues.EnableTopUpDecant;\r\n      ViewAllTruckShipmentLoadingDetails.Remarks = this.state.reasonForClosure;\r\n\r\n      let count = 0;\r\n\r\n      if (ddlTopUpDecantStatus === null) {\r\n        let bForceCompChecked = false;\r\n        ViewAllTruckShipmentLoadingDetails.ddlTopUpDecantApprovalStatus = null;\r\n        modLoadingDetails.forEach((comp) => {\r\n          let ShipmentLoadingCmptData = {\r\n            AdjustQuantity: 0,\r\n            ForceCompleted: false,\r\n            TrailerCode: \"\",\r\n            CompartmentCode: \"\",\r\n            AdjustmentToPlannedQuantity: 0,\r\n            Density: 0,\r\n            DensityUOM: \"\",\r\n          };\r\n          let isUpdated = false;\r\n          if (comp.Adjust_Plan !== \"\") {\r\n            ShipmentLoadingCmptData.AdjustmentToPlannedQuantity =\r\n              Utilities.convertStringtoDecimal(comp.Adjust_Plan);\r\n            count = count + 1;\r\n            isUpdated = true;\r\n          }\r\n          if (comp.Force_Complete) {\r\n            ShipmentLoadingCmptData.ForceCompleted = true;\r\n            isUpdated = true;\r\n            bForceCompChecked = true;\r\n          }\r\n          ShipmentLoadingCmptData.ShipmentCompartmentID = comp.ShipmentCompID;\r\n          ShipmentLoadingCmptData.FinishedProductID = comp.FinishedProductID;\r\n          ShipmentLoadingCmptData.TrailerCode = comp.Trailer_Code;\r\n          ShipmentLoadingCmptData.CompartmentCode = comp.Compartment_Code;\r\n\r\n          if (isUpdated)\r\n            ViewAllTruckShipmentLoadingDetails.listShipmentLoadingCompData.push(\r\n              ShipmentLoadingCmptData\r\n            );\r\n        });\r\n        if (count > 0) ViewAllTruckShipmentLoadingDetails.isAdjustedFP = count;\r\n\r\n        if (ViewAllTruckShipmentLoadingDetails.topUpDecantEnabled === \"TRUE\") {\r\n          //Add condition to Force complete for Topup decant\r\n          if (\r\n            bForceCompChecked === true &&\r\n            (ViewAllTruckShipmentLoadingDetails.topUpDecantApprovalStatus !==\r\n              Constants.TopUpDecantApprovalStatus.NONE ||\r\n              ViewAllTruckShipmentLoadingDetails.topUpDecantApprovalStatus !==\r\n              Constants.TopUpDecantApprovalStatus.COMPLETED ||\r\n              ViewAllTruckShipmentLoadingDetails.topUpDecantApprovalStatus !==\r\n              Constants.TopUpDecantApprovalStatus.FORCE_COMPLETED)\r\n          ) {\r\n            let topUpRequest = this.formTopUpDecantRequest(\r\n              Constants.TopUpDecantApprovalStatus.FORCE_COMPLETED,\r\n              Constants.TopUpDecantApprovalStatus.FORCE_COMPLETED\r\n            );\r\n            ViewAllTruckShipmentLoadingDetails.listShipmentCompartmentInfo =\r\n              topUpRequest.listShipmentCompartmentInfo;\r\n          }\r\n        }\r\n      } else {\r\n        if (ViewAllTruckShipmentLoadingDetails.topUpDecantEnabled === \"TRUE\") {\r\n          let modCustomValues = lodash.cloneDeep(this.state.modCustomValues);\r\n          modCustomValues[\"TopUpDecantStatusDropDownVisible\"] = \"FALSE\";\r\n          this.setState({ modCustomValues });\r\n\r\n          if (\r\n            ddlTopUpDecantStatus ===\r\n            Constants.TopUpDecantApprovalStatus.REQUEST_APPROVE\r\n          ) {\r\n            let topUpRequest = this.formTopUpDecantRequest(\r\n              Constants.TopUpDecantApprovalStatus.APPROVED,\r\n              null\r\n            );\r\n            ViewAllTruckShipmentLoadingDetails.listShipmentCompartmentInfo =\r\n              topUpRequest.listShipmentCompartmentInfo;\r\n            this.setState({ ddlTopUpDecantStatus: null });\r\n          } else if (\r\n            ddlTopUpDecantStatus ===\r\n            Constants.TopUpDecantApprovalStatus.REQUEST_REJECT\r\n          ) {\r\n            let topUpRequest = this.formTopUpDecantRequest(\r\n              Constants.TopUpDecantApprovalStatus.REJECTED,\r\n              null\r\n            );\r\n            ViewAllTruckShipmentLoadingDetails.listShipmentCompartmentInfo =\r\n              topUpRequest.listShipmentCompartmentInfo;\r\n            this.setState({ ddlTopUpDecantStatus: null });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error while forming top up decant details:\", error);\r\n    }\r\n    return ViewAllTruckShipmentLoadingDetails;\r\n  }\r\n\r\n  formTopUpDecantRequest(strStatus, strSource) {\r\n    let ViewAllTruckShipmentLoadingDetails = {\r\n      topUpDecantApprovalStatus: \"\",\r\n      topUpDecantEnabled: \"\",\r\n      Remarks: \"\",\r\n      listShipmentCompartmentInfo: [],\r\n      listShipmentLoadingCompData: [],\r\n    };\r\n    try {\r\n      let loadingDetails = lodash.cloneDeep(this.state.staticLoadingDetails);\r\n      let modLoadingDetails = lodash.cloneDeep(this.state.modLoadingDetails);\r\n\r\n      ViewAllTruckShipmentLoadingDetails.topUpDecantApprovalStatus =\r\n        this.state.modCustomValues.TopUpDecantStatusText;\r\n      ViewAllTruckShipmentLoadingDetails.topUpDecantEnabled =\r\n        this.state.modCustomValues.EnableTopUpDecant;\r\n      ViewAllTruckShipmentLoadingDetails.Remarks = this.state.reasonForClosure;\r\n\r\n      //let strStatus = Constants.TopUpDecantApprovalStatus.FORCE_COMPLETED;\r\n      //let strSource = \"FORCECLOSE\";\r\n      let strLastUpdatedBy =\r\n        this.props.userDetails.EntityResult.Firstname +\r\n        \" \" +\r\n        this.props.userDetails.EntityResult.LastName;\r\n\r\n      modLoadingDetails.forEach((comp) => {\r\n        let submitBtnName =\r\n          this.state.modCustomValues[\"f_ViewShipTopUpDecantApprovalAccess\"] ===\r\n            \"TRUE\"\r\n            ? \"ViewShipmentTopUpDecant_AutoApproved\"\r\n            : \"ViewShipmentTopUpDecant_SubmitForApproved\";\r\n\r\n        if (this.state.modCustomValues[\"TopUpDecantApprovalEnabled\"] === \"TRUE\")\r\n          submitBtnName = \"ViewShipmentTopUpDecant_AutoApproved\";\r\n\r\n        let strTopUpDecCompartmentStatus = \"\";\r\n\r\n        let shcompTopUpDecant = {\r\n          TopUpDecantQuantity: null,\r\n          QuantityUOM: \"\",\r\n          Comments: \"\",\r\n          Status: \"\",\r\n          CreatedBy: \"\",\r\n          CreatedTime: \"\",\r\n          LastUpdatedBy: \"\",\r\n          LastUpdatedTime: \"\",\r\n        };\r\n\r\n        let shipmentCompartmentinfo = {\r\n          TrailerCode: \"\",\r\n          ShipmentCompartmentStatus: \"\",\r\n          CompartmentCode: \"\",\r\n          ShipmentCompartmentTopUpDecantingInfo: \"\",\r\n        };\r\n\r\n        if (\r\n          comp.Top_Up_Decant_Quantity !== null &&\r\n          comp.Top_Up_Decant_Quantity !== undefined &&\r\n          comp.Top_Up_Decant_Quantity !== \"\"\r\n        ) {\r\n          if (\r\n            comp.Top_Up_Decant_Quantity_Status !== null &&\r\n            comp.Top_Up_Decant_Quantity_Status !== undefined &&\r\n            comp.Top_Up_Decant_Quantity_Status !== \"\"\r\n          ) {\r\n            strTopUpDecCompartmentStatus = comp.Top_Up_Decant_Quantity_Status;\r\n          } else {\r\n            strTopUpDecCompartmentStatus =\r\n              Constants.TopUpDecantApprovalStatus.NONE;\r\n          }\r\n\r\n          if (\r\n            strTopUpDecCompartmentStatus ===\r\n            Constants.TopUpDecantApprovalStatus.NONE &&\r\n            strStatus !== Constants.TopUpDecantApprovalStatus.FORCE_COMPLETED\r\n          ) {\r\n            shcompTopUpDecant.TopUpDecantQuantity =\r\n              Utilities.convertStringtoDecimal(comp.Top_Up_Decant_Quantity);\r\n\r\n            //  shcompTopUpDecant.TopUpDecantQuantity = Convert.ToDouble(urTpDRow.Items.FindItemByKey(\"TopUpDecantQuantity\").Value.ToString().Trim());\r\n            shipmentCompartmentinfo.TrailerCode = comp.Trailer_Code;\r\n            shipmentCompartmentinfo.ShipmentCompartmentStatus =\r\n              Constants.ShipmentCompartmentStatus[comp.Compartment_Status];\r\n            shipmentCompartmentinfo.CompartmentCode = comp.Compartment_Code;\r\n            //strCompartmentCode = shipmentCompartmentinfo.CompartmentCode + \"&\";\r\n            shcompTopUpDecant.Status = strStatus;\r\n\r\n            shcompTopUpDecant.QuantityUOM = comp.Compartment_UOM;\r\n            if (\r\n              comp.Notes !== null &&\r\n              comp.Notes !== undefined &&\r\n              comp.Notes !== \"\"\r\n            ) {\r\n              shcompTopUpDecant.Comments = comp.Notes;\r\n            } else {\r\n              shcompTopUpDecant.Comments = \"\";\r\n            }\r\n            shcompTopUpDecant.LastUpdatedBy = strLastUpdatedBy;\r\n            shipmentCompartmentinfo.ShipmentCompartmentTopUpDecantingInfo =\r\n              shcompTopUpDecant;\r\n            ViewAllTruckShipmentLoadingDetails.listShipmentCompartmentInfo.push(\r\n              shipmentCompartmentinfo\r\n            );\r\n            //lstShCompartInfo.push(shipmentCompartmentinfo);\r\n          }\r\n          //If status marked was FORCE_COMPLETED\r\n          else if (\r\n            strTopUpDecCompartmentStatus !==\r\n            Constants.TopUpDecantApprovalStatus.NONE &&\r\n            strStatus === Constants.TopUpDecantApprovalStatus.FORCE_COMPLETED\r\n          ) {\r\n            loadingDetails.Table.forEach((item) => {\r\n              if (item.compartmentcode === comp.Compartment_Code) {\r\n                //This if from the button CLOSE SHIPMENT\r\n                if (strSource === \"FORCECLOSE\") {\r\n                  shcompTopUpDecant.TopUpDecantQuantity =\r\n                    Utilities.convertStringtoDecimal(item.TopUpDecantQuantity);\r\n                  shcompTopUpDecant.Comments = item.Notes;\r\n                  shcompTopUpDecant.Status = strStatus;\r\n                  shcompTopUpDecant.LastUpdatedBy = strLastUpdatedBy;\r\n                  shipmentCompartmentinfo.TrailerCode = item.trailercode;\r\n                  shipmentCompartmentinfo.ShipmentCompartmentStatus =\r\n                    Constants.ShipmentCompartmentStatus[item.compartmentstatus];\r\n                  shipmentCompartmentinfo.CompartmentCode =\r\n                    item.compartmentcode;\r\n                  //strCompartmentCode = shipmentCompartmentinfo.CompartmentCode + \"&\";\r\n                  shcompTopUpDecant.QuantityUOM = item.compartmentuom;\r\n                  shipmentCompartmentinfo.ShipmentCompartmentTopUpDecantingInfo =\r\n                    shcompTopUpDecant;\r\n                  ViewAllTruckShipmentLoadingDetails.listShipmentCompartmentInfo.push(\r\n                    shipmentCompartmentinfo\r\n                  );\r\n                  //lstShCompartInfo.Add(shipmentCompartmentinfo);\r\n                }\r\n                //This is called from the FORCE_COMPLETE checkbox in a compartment\r\n                else if (\r\n                  strSource ===\r\n                  Constants.TopUpDecantApprovalStatus.FORCE_COMPLETED\r\n                ) {\r\n                  if (comp.Force_Complete) {\r\n                    shcompTopUpDecant.TopUpDecantQuantity =\r\n                      Utilities.convertStringtoDecimal(\r\n                        item.TopUpDecantQuantity\r\n                      );\r\n\r\n                    // shcompTopUpDecant.TopUpDecantQuantity = Convert.ToDouble(dr[\"TopUpDecantQuantity\"].ToString());\r\n                    shcompTopUpDecant.Comments = item.Notes;\r\n                    shcompTopUpDecant.Status = strStatus;\r\n                    shcompTopUpDecant.LastUpdatedBy = strLastUpdatedBy;\r\n                    shipmentCompartmentinfo.TrailerCode = item.trailercode;\r\n                    shipmentCompartmentinfo.ShipmentCompartmentStatus =\r\n                      Constants.ShipmentCompartmentStatus[\r\n                      item.compartmentstatus\r\n                      ];\r\n                    shipmentCompartmentinfo.CompartmentCode =\r\n                      item.compartmentcode;\r\n                    //strCompartmentCode = shipmentCompartmentinfo.CompartmentCode + \"&\";\r\n                    shcompTopUpDecant.QuantityUOM = item.compartmentuom;\r\n                    shipmentCompartmentinfo.ShipmentCompartmentTopUpDecantingInfo =\r\n                      shcompTopUpDecant;\r\n                    ViewAllTruckShipmentLoadingDetails.listShipmentCompartmentInfo.push(\r\n                      shipmentCompartmentinfo\r\n                    );\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          } else {\r\n            let dTopUpDec = 0;\r\n            dTopUpDec = Utilities.convertStringtoDecimal(\r\n              comp.Top_Up_Decant_Quantity\r\n            );\r\n\r\n            if (dTopUpDec > 0 || dTopUpDec < 0) {\r\n              let strComments = \"\";\r\n              if (\r\n                comp.Notes !== null &&\r\n                comp.Notes !== undefined &&\r\n                comp.Notes !== \"\"\r\n              ) {\r\n                strComments = comp.Notes;\r\n              }\r\n              //Compare each value in grid against the existing dataset\r\n              //This is to verify and update the quantity, notes or status for topup decant request\r\n              loadingDetails.Table.forEach((item) => {\r\n                if (item.compartmentcode === comp.Compartment_Code) {\r\n                  let DecanQty =\r\n                    item.TopUpDecantQuantity !== null &&\r\n                      item.TopUpDecantQuantity !== undefined &&\r\n                      item.TopUpDecantQuantity !== \"\"\r\n                      ? Utilities.convertStringtoDecimal(\r\n                        item.TopUpDecantQuantity\r\n                      )\r\n                      : 0;\r\n                  //Verify if user had made any changes to quantity or notes\r\n                  if (\r\n                    dTopUpDec !== DecanQty ||\r\n                    ////Verify if user had made any changes to quantity or notes\r\n                    //if ((dTopUpDec != Convert.ToDouble(dr[\"TopUpDecantQuantity\"].ToString().Trim()) ||\r\n                    strComments !== item.Notes ||\r\n                    //btnSubmitForApproval.Text.ToUpper().Contains(\"APPROVE\" )== true)\r\n                    submitBtnName === \"ViewShipmentTopUpDecant_AutoApproved\"\r\n                  ) {\r\n                    shcompTopUpDecant.TopUpDecantQuantity = dTopUpDec;\r\n                    shipmentCompartmentinfo.TrailerCode = comp.Trailer_Code;\r\n                    shipmentCompartmentinfo.ShipmentCompartmentStatus =\r\n                      Constants.ShipmentCompartmentStatus[\r\n                      comp.Compartment_Status\r\n                      ];\r\n                    shipmentCompartmentinfo.CompartmentCode =\r\n                      comp.Compartment_Code;\r\n                    //strCompartmentCode = shipmentCompartmentinfo.CompartmentCode + \"&\";\r\n                    shcompTopUpDecant.Status = strStatus;\r\n                    shcompTopUpDecant.QuantityUOM = comp.Compartment_UOM;\r\n                    shcompTopUpDecant.Comments = strComments;\r\n                    shcompTopUpDecant.LastUpdatedBy = strLastUpdatedBy;\r\n                    shipmentCompartmentinfo.ShipmentCompartmentTopUpDecantingInfo =\r\n                      shcompTopUpDecant;\r\n                    ViewAllTruckShipmentLoadingDetails.listShipmentCompartmentInfo.push(\r\n                      shipmentCompartmentinfo\r\n                    );\r\n                    //lstShCompartInfo.Add(shipmentCompartmentinfo);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while forming top up decant details:\", error);\r\n    }\r\n    return ViewAllTruckShipmentLoadingDetails;\r\n  }\r\n\r\n  handleCloseShipmentModal = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isCloseShipment} size=\"mini\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h3>\r\n                  {t(\"ViewShipment_CloseHeader\") +\r\n                    \" : \" +\r\n                    this.state.shipment.ShipmentCode}\r\n                </h3>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <div className=\"col col-lg-9\">\r\n                  <label>{t(\"CloseShipment_VehicleCrippled\")}</label>\r\n                </div>\r\n                <div>\r\n                  <Checkbox\r\n                    checked={this.state.isVehicleCrippled}\r\n                    onChange={(cellData) => {\r\n                      this.setState({ isVehicleCrippled: cellData }, () => {\r\n                        if (cellData)\r\n                          this.setState({ reasonForClosure: \"Crippled\" });\r\n                        else this.setState({ reasonForClosure: \"\" });\r\n                      });\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <div className=\"col col-lg-12\">\r\n                  <Input\r\n                    fluid\r\n                    value={this.state.reasonForClosure}\r\n                    label={t(\"ViewShipment_Reason\")}\r\n                    disbaled={this.state.isVehicleCrippled ? true : false}\r\n                    reserveSpace={false}\r\n                    onChange={(value) => {\r\n                      this.setState({ reasonForClosure: value });\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"AccessCardInfo_Ok\")}\r\n                onClick={() => {\r\n                  if (this.state.reasonForClosure === \"\") {\r\n                    let notification = {\r\n                      messageType: \"critical\",\r\n                      message: \"ViewAllShipment_ShipmentClose\",\r\n                      messageResultDetails: [\r\n                        {\r\n                          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n                          keyValues: [this.state.shipment.ShipmentCode],\r\n                          isSuccess: false,\r\n                          errorMessage: \"Enter_ReasonForCloseure\",\r\n                        },\r\n                      ],\r\n                    };\r\n\r\n                    toast(\r\n                      <ErrorBoundary>\r\n                        <NotifyEvent\r\n                          notificationMessage={notification}\r\n                        ></NotifyEvent>\r\n                      </ErrorBoundary>,\r\n                      {\r\n                        autoClose:\r\n                          notification.messageType === \"success\"\r\n                            ? 10000\r\n                            : false,\r\n                      }\r\n                    );\r\n                  } else\r\n                    this.setState({ isCloseShipment: false }, () => {\r\n                      this.closeShipment();\r\n                    });\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  this.setState({\r\n                    isCloseShipment: false,\r\n                    isVehicleCrippled: false,\r\n                    reasonForClosure: \"\",\r\n                  });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  authorizeToLoad = () => {\r\n    this.handleAuthenticationClose();\r\n\r\n    let modShipment = lodash.cloneDeep(this.state.modShipment);\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewShipment_AuthorizeLoad_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [modShipment.ShipmentCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.props.handleAuthorizeToLoad(\r\n      modShipment,\r\n      this.props.selectedShareholder,\r\n      this.props.tokenDetails.tokenInfo,\r\n      (result) => {\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getShipment(\r\n            { Common_Code: modShipment.ShipmentCode },\r\n            null,\r\n            null,\r\n            notification\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.props.onSaved(modShipment, \"update\", notification);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  handleOperationClick = (operation) => {\r\n    let modShipment = lodash.cloneDeep(this.state.modShipment);\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: operation + \"_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [modShipment.ShipmentCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    switch (operation) {\r\n      case \"ViewAllShipment_Trailer_Details\":\r\n        this.getTrailerDetails(this.state.shipment);\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipment_AuthorizeLoad:\r\n        let showAuthorizeToLoadAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n\r\n        this.setState({ showAuthorizeToLoadAuthenticationLayout }, () => {\r\n          if (showAuthorizeToLoadAuthenticationLayout === false) {\r\n            this.authorizeToLoad();\r\n          }\r\n        });\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipment_AllowToLoad:\r\n        let modLoadingDetails = lodash.cloneDeep(this.state.modLoadingDetails);\r\n        let rows = modLoadingDetails.filter((item) => {\r\n          return item.Planned_Quantity !== item.Revised_Planned_Quantity;\r\n        });\r\n        if (rows.length <= 0) this.setState({ isNotRevised: true });\r\n        else {\r\n          this.handleAllowToLoad();\r\n        }\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ManualEntry:\r\n        this.setState({ isManualEntry: true });\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipment_RecordWeight:\r\n        this.getRecordWeightList();\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipment_CloseShipment:\r\n        this.setState({ isCloseShipment: true });\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipmentStatus_PrintFAN:\r\n        this.printFAN();\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipmentStatus_PrintBOL:\r\n        this.printBOL();\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipmentStatus_ViewBOL:\r\n        let showViewBOLAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n\r\n        this.setState({ showViewBOLAuthenticationLayout }, () => {\r\n          if (showViewBOLAuthenticationLayout === false) {\r\n            this.viewBOL();\r\n          }\r\n        });\r\n        //   this.handleAuthenticationClose();\r\n\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewAllShipment_SendBOL:\r\n        this.props.handleSendBOL(\r\n          modShipment.ShipmentCode,\r\n          this.props.selectedShareholder,\r\n          this.props.tokenDetails.tokenInfo,\r\n          (result) => {\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\";\r\n            notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        );\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewAllShipment_BSIOutbound:\r\n        this.props.handleBSIOutbound(\r\n          modShipment.ShipmentCode,\r\n          this.props.selectedShareholder,\r\n          this.props.tokenDetails.tokenInfo,\r\n          (result) => {\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\";\r\n            notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        );\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipment_ViewAuditTrail:\r\n        let shipType =\r\n          this.props.ShipmentType.toLowerCase() === fnSBP\r\n            ? Constants.shipmentType.PRODUCT\r\n            : Constants.shipmentType.COMPARTMENT;\r\n        this.props.handleViewAuditTrail(\r\n          this.props.selectedShareholder,\r\n          modShipment.ShipmentCode,\r\n          shipType,\r\n          this.props.tokenDetails.tokenInfo,\r\n          (result) => {\r\n            if (result.IsSuccess === true) {\r\n              let modAuditTrailList = result.EntityResult;\r\n              let attributeMetaDataList = lodash.cloneDeep(\r\n                this.state.attributeMetaDataList.SHIPMENTSTATUSTIME\r\n              );\r\n\r\n              for (let i = 0; i < modAuditTrailList.length; i++) {\r\n                modAuditTrailList[i].UpdatedTime =\r\n                  new Date(\r\n                    modAuditTrailList[i].UpdatedTime\r\n                  ).toLocaleDateString() +\r\n                  \" \" +\r\n                  new Date(\r\n                    modAuditTrailList[i].UpdatedTime\r\n                  ).toLocaleTimeString();\r\n              }\r\n              let auditTrailList = result.EntityResult;\r\n              for (let i = 0; i < auditTrailList.length; i++) {\r\n                auditTrailList[i].AttributesforUI =\r\n                  this.formReadonlyCompAttributes(\r\n                    auditTrailList[i].Attributes,\r\n                    attributeMetaDataList\r\n                  );\r\n              }\r\n              this.setState({\r\n                isViewAuditTrail: true,\r\n                auditTrailList: auditTrailList,\r\n                modAuditTrailList: modAuditTrailList,\r\n              });\r\n            } else {\r\n              notification.messageType = result.IsSuccess\r\n                ? \"success\"\r\n                : \"critical\";\r\n              notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n              toast(\r\n                <ErrorBoundary>\r\n                  <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n                </ErrorBoundary>,\r\n                {\r\n                  autoClose:\r\n                    notification.messageType === \"success\" ? 10000 : false,\r\n                }\r\n              );\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipment_ViewLoadingDetails:\r\n        this.props.handleViewLoadingDetails(\r\n          modShipment.ShipmentCode,\r\n          this.props.selectedShareholder,\r\n          this.props.tokenDetails.tokenInfo,\r\n          (result) => {\r\n            if (result.IsSuccess === true) {\r\n              let modViewLoadingDetails = result.EntityResult;\r\n              let nonConfigColumns = [];\r\n              if (\r\n                modViewLoadingDetails !== null &&\r\n                modViewLoadingDetails.Table !== null &&\r\n                modViewLoadingDetails.Table.length > 0\r\n              ) {\r\n                let count = 0;\r\n                modViewLoadingDetails.Table.forEach((item) => {\r\n                  item.seqNo = count;\r\n                  item.endtime =\r\n                    new Date(item.endtime).toLocaleDateString() +\r\n                    \" \" +\r\n                    new Date(item.endtime).toLocaleTimeString();\r\n                  item.starttime =\r\n                    new Date(item.starttime).toLocaleDateString() +\r\n                    \" \" +\r\n                    new Date(item.starttime).toLocaleTimeString();\r\n                  count++;\r\n\r\n                  item.productcode = item.productcode.split(\"&nbsp;\").join(\" \");\r\n                  //item.productcode = item.productcode.replace(\"nbsp;\", \" \")\r\n                });\r\n              }\r\n\r\n              if (\r\n                modViewLoadingDetails !== null &&\r\n                modViewLoadingDetails.Table1 !== null &&\r\n                modViewLoadingDetails.Table1.length > 0\r\n              ) {\r\n                nonConfigColumns =\r\n                  modViewLoadingDetails.Table1[0].NonConfiguredColumns.split(\r\n                    \",\"\r\n                  );\r\n              }\r\n\r\n              this.setState({\r\n                modViewLoadingDetails: modViewLoadingDetails,\r\n                isViewLoadingDetails: true,\r\n                nonConfigColumns: nonConfigColumns,\r\n              });\r\n            } else {\r\n              notification.messageType = result.IsSuccess\r\n                ? \"success\"\r\n                : \"critical\";\r\n              notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n              toast(\r\n                <ErrorBoundary>\r\n                  <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n                </ErrorBoundary>,\r\n                {\r\n                  autoClose:\r\n                    notification.messageType === \"success\" ? 10000 : false,\r\n                }\r\n              );\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewAllShipment_SealCompartments:\r\n        this.props.handleSealCompartments(\r\n          modShipment.ShipmentCode,\r\n          this.props.selectedShareholder,\r\n          this.props.tokenDetails.tokenInfo,\r\n          (result) => {\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\";\r\n            notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n            if (result.IsSuccess === true) {\r\n              //let sealCompartments = []\r\n              this.setState({\r\n                isSealCompartments: true,\r\n                sealCompartments: result.EntityResult,\r\n              });\r\n            } else {\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n              toast(\r\n                <ErrorBoundary>\r\n                  <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n                </ErrorBoundary>,\r\n                {\r\n                  autoClose:\r\n                    notification.messageType === \"success\" ? 10000 : false,\r\n                }\r\n              );\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case \"ViewAllocateBay_AllocateBay\":\r\n        this.getBays();\r\n        break;\r\n      case \"ViewAllocateBay_DeallocateBay\":\r\n        this.setState({\r\n          isDeAllocateBay: true,\r\n        });\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  getBays = () => {\r\n    let shipment = lodash.cloneDeep(this.state.shipment);\r\n    let products = [];\r\n    shipment.ShipmentCompartments.forEach((element) => {\r\n      products.push(element.FinishedProductCode);\r\n    });\r\n\r\n    const obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      KeyCodes: [\r\n        {\r\n          key: \"TransactionType\",\r\n          value: \"SHIPMENT\",\r\n        },\r\n        {\r\n          key: \"TransportationType\",\r\n          value: \"ROAD\",\r\n        },\r\n        {\r\n          key: \"TerminalCode\",\r\n          value: this.state.shipment.ActualTerminalCode,\r\n        },\r\n        {\r\n          key: \"FinishedProductCode\",\r\n          value: products.toString(),\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetAllValidBays,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let bayAllocation = result.EntityResult;\r\n          bayAllocation.forEach((element) => {\r\n            element.SupportedProducts.forEach((ele) => {\r\n              if (\r\n                element.AssociatedProduct === \"\" ||\r\n                element.AssociatedProduct === undefined\r\n              ) {\r\n                element.AssociatedProduct = ele.Code;\r\n              } else {\r\n                element.AssociatedProduct += \",\" + ele.Code;\r\n              }\r\n            });\r\n          });\r\n\r\n          this.setState({\r\n            bayData: bayAllocation,\r\n            isAllocateBay: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            bayData: [],\r\n            isAllocateBay: true,\r\n          });\r\n          console.log(\"Error in getBays:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ bayData: [], isReadyToRender: true });\r\n        console.log(\"Error while getBays:\", error);\r\n      });\r\n  };\r\n\r\n  GetAutoGeneratedShipmentCode(shipment) {\r\n    let modShipment = shipment;\r\n    axios(\r\n      RestAPIs.GetAutoGeneratedShipmentCode,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult !== undefined &&\r\n            result.EntityResult !== \"\"\r\n          ) {\r\n            modShipment.ShipmentCode = result.EntityResult;\r\n            this.setState({\r\n              isAutoGeneratedShipmentCode: true,\r\n              autoGeneratedCode: result.EntityResult,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              isAutoGeneratedShipmentCode: false,\r\n              autoGeneratedCode: \"\",\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting AutoGeneratedShipmentCode:\", error);\r\n      });\r\n    return modShipment;\r\n  }\r\n\r\n  getShipment(shipmentRow, shipmentType, activeTab, notification) {\r\n    let notificationShipment = null;\r\n    shipmentType =\r\n      shipmentType === undefined || shipmentType === null\r\n        ? this.props.ShipmentType.toLowerCase()\r\n        : shipmentType;\r\n    emptyShipment.ShareholderCode = this.props.selectedShareholder;\r\n    shipmentType && shipmentType.toLowerCase() === fnSBC\r\n      ? (emptyShipment.ShipmentType = 0)\r\n      : (emptyShipment.ShipmentType = 2);\r\n    emptyShipment.ShipmentQuantityUOM =\r\n      this.props.userDetails.EntityResult.PageAttibutes.DefaultQtyUOMForTransactionUI.ROAD;\r\n    emptyShipment.ScheduledDate = new Date();\r\n    emptyShipment.TerminalCodes =\r\n      this.props.terminalCodes.length === 1\r\n        ? [...this.props.terminalCodes]\r\n        : [];\r\n    let functionGroup =\r\n      shipmentType && shipmentType.toLowerCase() === fnSBC ? fnSBC : fnSBP;\r\n    this.handleResetAttributeValidationError();\r\n    if (shipmentRow.Common_Code === undefined) {\r\n      if (this.props.shipmentSource !== undefined) {\r\n        emptyShipment.CreatedFromEntity = this.props.shipmentSource;\r\n      } else emptyShipment.CreatedFromEntity = 0;\r\n      let modProductPlans = [];\r\n      if (\r\n        this.props.shipmentSource !== undefined &&\r\n        this.props.ShipmentType.toLowerCase() === fnSBP &&\r\n        !this.props.shipmentSourceFromSummary\r\n      ) {\r\n        modProductPlans = this.getShipmentCompartmentFromVehicleCompartment();\r\n      }\r\n      if (\r\n        this.props.shipmentSource !== undefined &&\r\n        this.props.shipmentSourceFromSummary\r\n      )\r\n        this.getCompartmentFromOtherSource(this.props.selectedSourceCode);\r\n\r\n      this.setState(\r\n        {\r\n          shipment: lodash.cloneDeep(emptyShipment),\r\n          modShipment:\r\n            shipmentType && shipmentType.toLowerCase() === fnSBC\r\n              ? this.GetAutoGeneratedShipmentCode(\r\n                lodash.cloneDeep(emptyShipment)\r\n              )\r\n              : lodash.cloneDeep(emptyShipment),\r\n          isReadyToRender: true,\r\n          modLoadingDetails: [],\r\n          staticLoadingDetails: [],\r\n          modCompartmentPlans: [],\r\n          modProductPlans: modProductPlans,\r\n          selectedAttributeList: [],\r\n          isPlanned: false,\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            functionGroup\r\n          ),\r\n          activeTab: activeTab,\r\n          isValidationPassed: false,\r\n          isDisableSubmitForApproval: true,\r\n          productAllocationList: [],\r\n          productShareholderAllocationList: [],\r\n          ProdAllocEntity: \"\",\r\n          expandedRows: [],\r\n          isEnforcingEnabled: false,\r\n          truckShipmentKPIList: [],\r\n        },\r\n        () => {\r\n          //this.GetViewAllShipmentCustomData();\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode === false)\r\n            this.localNodeAttribute();\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentRow.Common_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetShipment,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let data = result.EntityResult;\r\n          notificationShipment = result.EntityResult;\r\n          let isPlanned = lodash.cloneDeep(this.state.isPlanned);\r\n          isPlanned = true;\r\n          //   data.ShipmentDestinationCompartmentsInfo === null ||\r\n          //     data.ShipmentDestinationCompartmentsInfo === undefined ||\r\n          //     data.ShipmentDestinationCompartmentsInfo.length === 0\r\n          //     ? false\r\n          //     : true;\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              shipment: result.EntityResult,\r\n              modShipment: lodash.cloneDeep(result.EntityResult),\r\n              modCompartmentPlans: this.getShipmentCompartmentFromShipment(\r\n                result.EntityResult\r\n              ),\r\n              modProductPlans:\r\n                this.props.ShipmentType.toLowerCase() === fnSBP\r\n                  ? this.getShipmentDetailsFromShipment(result.EntityResult)\r\n                  : [],\r\n              isPlanned: isPlanned,\r\n              isValidationPassed: true,\r\n              isVolumeBased: result.EntityResult.IsVolumeBased,\r\n              activeTab:\r\n                isPlanned && shipmentType.toLowerCase() === fnSBC // && this.props.shipmentSource === undefined\r\n                  ? 1\r\n                  : isPlanned && shipmentType.toLowerCase() === fnSBP // && this.props.shipmentSource === undefined\r\n                    ? data.ShipmentDestinationCompartmentsInfo === null ||\r\n                      data.ShipmentDestinationCompartmentsInfo === undefined ||\r\n                      data.ShipmentDestinationCompartmentsInfo.length === 0\r\n                      ? 1\r\n                      : 2\r\n                    : 0,\r\n              isDisableSubmitForApproval:\r\n                result.EntityResult.Status !==\r\n                  Constants.Shipment_Status.READY && //&& this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                  result.EntityResult.ActualTerminalCode === null\r\n                  ? true\r\n                  : false,\r\n              expandedRows: [],\r\n            },\r\n            () => {\r\n              this.GetViewAllShipmentCustomData(result.EntityResult);\r\n              this.getVehicle(result.EntityResult.VehicleCode, false);\r\n              this.getLoadingDetails(result.EntityResult);\r\n              this.getKPIList(\r\n                this.props.selectedShareholder,\r\n                result.EntityResult.ShipmentCode\r\n              );\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n              this.getShipmentStatusOperations(result.EntityResult);\r\n              this.getShipmentStatuses(result.EntityResult);\r\n              this.getLookUpData(result.EntityResult.ShipmentCode);\r\n              if (\r\n                result.EntityResult.TransloadSourceType !== null &&\r\n                result.EntityResult.TransloadSourceType !== undefined &&\r\n                result.EntityResult.TransloadSourceType === \"MARINE\"\r\n              )\r\n                this.getMarineTransloadableReceipts();\r\n              //this.getTrailerDetails(result.EntityResult);\r\n              this.GetBayByTrnsaction(\r\n                result.EntityResult.ShipmentCode,\r\n                \"SHIPMENT\",\r\n                result.EntityResult.ShareholderCode\r\n              );\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            shipment: lodash.cloneDeep(emptyShipment),\r\n            modShipment: lodash.cloneDeep(emptyShipment),\r\n            modLoadingDetails: [],\r\n            staticLoadingDetails: [],\r\n            modCustomValues: {},\r\n            modCompartmentPlans: [],\r\n            selectedAttributeList: [],\r\n            modProductPlans: [],\r\n            isReadyToRender: true,\r\n            isPlanned: false,\r\n            activeTab: this.props.ShipmentType.toLowerCase() === fnSBC ? 1 : 0,\r\n            isValidationPassed: false,\r\n            isDisableSubmitForApproval: true,\r\n            productAllocationList: [],\r\n            ProdAllocEntity: \"\",\r\n            productShareholderAllocationList: [],\r\n          });\r\n          console.log(\"Error in GetShiment:\", result.ErrorList);\r\n        }\r\n        if (\r\n          notification !== undefined &&\r\n          notification !== null &&\r\n          notificationShipment !== null\r\n        )\r\n          this.props.onSaved(notificationShipment, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Shipment:\", error, shipmentRow);\r\n      });\r\n  }\r\n\r\n  handleAttributeDataEdit = (attribute, value) => {\r\n    try {\r\n      attribute.DefaultValue = value;\r\n      this.setState({\r\n        attribute: attribute,\r\n      });\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentDetailsComposite:Error occured on handleAttributeDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getCompartmentFromOtherSource(items) {\r\n    var obj = [];\r\n    var shCode = this.props.selectedShareholder;\r\n\r\n    if (this.props.shipmentSource === Constants.shipmentFrom.Contract) {\r\n      items.forEach((code) => {\r\n        var keyData = {\r\n          keyDataCode: 0,\r\n          ShareHolderCode: shCode,\r\n          KeyCodes: [{ Key: KeyCodes.contractCode, Value: code }],\r\n        };\r\n        obj.push(keyData);\r\n      });\r\n\r\n      axios(\r\n        RestAPIs.GetContractList,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ otherSourceData: result.EntityResult }, () => {\r\n            if (this.props.ShipmentType.toLowerCase() === fnSBP)\r\n              this.getShipmentCompartmentFromVehicleCompartment();\r\n          });\r\n        } else {\r\n          this.setState({ otherSourceData: [] });\r\n        }\r\n      });\r\n    } else if (this.props.shipmentSource === Constants.shipmentFrom.Order) {\r\n      items.forEach((code) => {\r\n        var keyData = {\r\n          keyDataCode: 0,\r\n          ShareHolderCode: shCode,\r\n          KeyCodes: [{ Key: KeyCodes.orderCode, Value: code }],\r\n        };\r\n        obj.push(keyData);\r\n      });\r\n\r\n      axios(\r\n        RestAPIs.GetOrderList,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ otherSourceData: result.EntityResult }, () => {\r\n            if (this.props.ShipmentType.toLowerCase() === fnSBP)\r\n              this.getShipmentCompartmentFromVehicleCompartment();\r\n          });\r\n        } else {\r\n          this.setState({ otherSourceData: [] });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCompAttributeCellDataEdit = (compAttribute, value) => {\r\n    let modCompartmentPlans = lodash.cloneDeep(this.state.modCompartmentPlans);\r\n    let compIndex = modCompartmentPlans.findIndex(\r\n      (item) => item.SeqNumber === compAttribute.rowData.compSequenceNo\r\n    );\r\n    if (compIndex >= 0)\r\n      modCompartmentPlans[compIndex].AttributesforUI[\r\n        // compAttribute.rowIndex\r\n        compAttribute.rowData.SeqNumber - 1\r\n      ].AttributeValue = value;\r\n    this.setState({ modCompartmentPlans });\r\n    if (compIndex >= 0)\r\n      this.attributeToggleExpand(modCompartmentPlans[compIndex], true, true);\r\n  };\r\n\r\n  handleProdPlanAttributeCellDataEdit = (compAttribute, value) => {\r\n    let modProductPlans = lodash.cloneDeep(this.state.modProductPlans);\r\n    let compIndex = modProductPlans.findIndex(\r\n      (item) => item.SeqNumber === compAttribute.rowData.compSequenceNo\r\n    );\r\n    if (compIndex >= 0)\r\n      modProductPlans[compIndex].AttributesforUI[\r\n        // compAttribute.rowIndex\r\n        compAttribute.rowData.SeqNumber - 1\r\n      ].AttributeValue = value;\r\n    this.setState({ modProductPlans });\r\n    if (compIndex >= 0)\r\n      this.attributeToggleExpand(modProductPlans[compIndex], true, true);\r\n  };\r\n\r\n  handleTabChange = (activeIndex) => {\r\n    try {\r\n      this.setState({ activeTab: activeIndex, expandedRows: [] });\r\n\r\n      if (this.state.isPlanned) {\r\n        if (\r\n          this.props.ShipmentType.toLowerCase() === fnSBP &&\r\n          activeIndex === 2 &&\r\n          this.state.modCustomValues.DisableLoadingDetails === \"FALSE\"\r\n        )\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              this.props.ShipmentType.toLowerCase()\r\n            ),\r\n          });\r\n        else if (\r\n          this.props.ShipmentType.toLowerCase() === fnSBC &&\r\n          activeIndex === 1 &&\r\n          this.state.modCustomValues.DisableLoadingDetails === \"FALSE\"\r\n        )\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              this.props.ShipmentType.toLowerCase()\r\n            ),\r\n          });\r\n        else\r\n          this.setState({\r\n            saveEnabled:\r\n              this.state.modCustomValues.ShipmentUpdateAllow === \"TRUE\" &&\r\n              Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                this.props.ShipmentType.toLowerCase()\r\n              ),\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentDetailsComposite: Error occurred on handleTabChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCellCheck = (data, cellData) => {\r\n    let modLoadingDetails = lodash.cloneDeep(this.state.modLoadingDetails);\r\n    let isLoadingDetailsChanged = lodash.cloneDeep(\r\n      this.state.isLoadingDetailsChanged\r\n    );\r\n    const index = modLoadingDetails.findIndex((item) => {\r\n      return item.SeqNo === data.rowData.SeqNo;\r\n    });\r\n    if (index > -1) {\r\n      modLoadingDetails[index].Force_Complete = cellData;\r\n      isLoadingDetailsChanged = true;\r\n    }\r\n\r\n    this.setState({ modLoadingDetails, isLoadingDetailsChanged });\r\n  };\r\n\r\n  handleLoadingDetailsChange = (cellData, data) => {\r\n    let modLoadingDetails = lodash.cloneDeep(this.state.modLoadingDetails);\r\n\r\n    const index = modLoadingDetails.findIndex((item) => {\r\n      return item.SeqNo === data.rowData.SeqNo;\r\n    });\r\n    if (index > -1) {\r\n      modLoadingDetails[index][data.field] = cellData;\r\n      this.setState({ modLoadingDetails, isLoadingDetailsChanged: true });\r\n      let expandedRows = lodash.cloneDeep(this.state.expandedRows);\r\n      let exIndex = expandedRows.findIndex((item) => item.SeqNo === data.SeqNo);\r\n      if (exIndex >= 0) {\r\n        expandedRows.splice(exIndex, 1);\r\n        this.setState({ expandedRows });\r\n      }\r\n\r\n      this.toggleExpand(modLoadingDetails[index], false);\r\n    }\r\n  };\r\n\r\n  UpdateShipmentBondNo = () => {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.shipmentCode,\r\n          value: this.state.modShipment.ShipmentCode,\r\n        },\r\n        {\r\n          key: KeyCodes.shipmentBondNo,\r\n          value: this.state.modShipment.ShipmentBondNo,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.shipmentCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"ShipmentBondUpdate_Status\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n            keyValues: [this.state.modShipment.ShipmentCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.UpdateShipmentBond,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          if (result.IsSuccess === true) {\r\n            this.getShipment({\r\n              Common_Code: this.state.modShipment.ShipmentCode,\r\n            });\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            console.log(\"Error in UpdateShipment:\", result.ErrorList);\r\n          }\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while OverrideShipmentSequence:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while Updating ShipmentSequence:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  UpdateShipmentDriver = () => {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.shipmentCode,\r\n          value: this.state.modShipment.ShipmentCode,\r\n        },\r\n        {\r\n          key: KeyCodes.driverCode,\r\n          value: this.state.modShipment.DriverCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.shipmentCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"DriverCode_UpdateStatus\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n            keyValues: [this.state.modShipment.ShipmentCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.UpdateShipmentDriver,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          if (result.IsSuccess === true) {\r\n            this.getShipment({\r\n              Common_Code: this.state.modShipment.ShipmentCode,\r\n            });\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            console.log(\"Error Shipment Driver Update:\", result.ErrorList);\r\n          }\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while Shipment Driver Update:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while Shipment Driver Update:\", error);\r\n    }\r\n  };\r\n\r\n  handleOverrideShipmentSequence = () => {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.shipmentCode,\r\n          value: this.state.modShipment.ShipmentCode,\r\n        },\r\n        {\r\n          key: KeyCodes.isPriority,\r\n          value: this.state.modShipment.IsPriority ? false : true,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.shipmentCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"PrioritySet_Status\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n            keyValues: [this.state.modShipment.ShipmentCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.OverrideShipmentSequence,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          if (result.IsSuccess === true) {\r\n            this.getShipment({\r\n              Common_Code: this.state.modShipment.ShipmentCode,\r\n            });\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            console.log(\"Error in UpdateShipment:\", result.ErrorList);\r\n          }\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while OverrideShipmentSequence:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while Updating ShipmentSequence:\", error);\r\n    }\r\n  };\r\n\r\n  handleUpdateShipmentTransloading = () => {\r\n    try {\r\n      let compartments =\r\n        this.getShipmentDestinationCompartmentsFromModCompartmentPlans(\r\n          this.state.modCompartmentPlans\r\n        );\r\n\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.shareholderCode,\r\n          value: this.props.selectedShareholder,\r\n        },\r\n        {\r\n          key: KeyCodes.shipmentCode,\r\n          value: this.state.modShipment.ShipmentCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.shipmentCode,\r\n        KeyCodes: keyCode,\r\n        Entity: compartments,\r\n      };\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"UpdateTruckTransloading_Status\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n            keyValues: [this.state.modShipment.ShipmentCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.UpdateTransloadingShipmentData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          if (result.IsSuccess === true) {\r\n            this.getShipment({\r\n              Common_Code: this.state.modShipment.ShipmentCode,\r\n            });\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            console.log(\"Error in UpdateShipment:\", result.ErrorList);\r\n          }\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while handleUpdateShipmentTransloading:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while Updating ShipmentTransloading:\", error);\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    try {\r\n      let vehicleDetails = lodash.cloneDeep(this.state.vehicleDetails);\r\n      var modShipment = lodash.cloneDeep(this.state.shipment);\r\n      if (\r\n        this.props.ShipmentType &&\r\n        this.props.ShipmentType.toLowerCase() === fnSBC &&\r\n        modShipment.ShipmentCode === \"\"\r\n      )\r\n        modShipment.ShipmentCode = lodash.cloneDeep(\r\n          this.state.autoGeneratedCode\r\n        );\r\n      //let modAssociations = [];\r\n      let modCompartmentPlans = [];\r\n      let modProductPlans = [];\r\n      let compSeqOptions = [];\r\n      if (this.state.shipment.ShipmentCode === \"\") {\r\n        //modAssociations = [];\r\n        modCompartmentPlans = [];\r\n        modProductPlans = [];\r\n        compSeqOptions = [];\r\n      } else {\r\n        modCompartmentPlans = this.getShipmentCompartmentFromShipment(\r\n          this.state.shipment\r\n        );\r\n        if (this.props.ShipmentType.toLowerCase() === fnSBP)\r\n          modProductPlans = this.getShipmentDetailsFromShipment(\r\n            this.state.shipment\r\n          );\r\n        vehicleDetails.vehicleCompartments.forEach((vehicleCompartment) =>\r\n          compSeqOptions.push({\r\n            text: vehicleCompartment.vehCompSeq.toString(),\r\n            value: vehicleCompartment.vehCompSeq.toString(),\r\n          })\r\n        );\r\n      }\r\n      this.setState(\r\n        {\r\n          modShipment,\r\n          validationErrors: [],\r\n          modVehicleDetails: lodash.cloneDeep(this.state.vehicleDetails),\r\n          selectedAttributeList: [],\r\n          modCompartmentPlans,\r\n          modProductPlans,\r\n          compSeqOptions,\r\n          isValidationPassed: true,\r\n          isEnforcingEnabled: false,\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(modShipment.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        this.props.ShipmentType + \":Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList.SHIPMENT\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(attributeMetaDataList),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on handleResetAttributeValidationError\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      var terminalCodes = [...this.props.terminalCodes];\r\n      var modShipment = lodash.cloneDeep(this.state.modShipment);\r\n\r\n      if (checked) modShipment.TerminalCodes = [...terminalCodes];\r\n      else modShipment.TerminalCodes = [];\r\n      //this.setState({ modShipment });\r\n      this.setState({ modShipment }, () =>\r\n        this.terminalSelectionChange(modShipment.TerminalCodes)\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        this.props.ShipmentType + \":Error occured on handleAllTerminasChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAddCompartmentPlan = () => {\r\n    let modShipment = lodash.cloneDeep(this.state.modShipment);\r\n    let updateShipmentAllowed =\r\n      this.state.modCustomValues.ShipmentUpdateAllow === \"TRUE\" &&\r\n      Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.modify,\r\n        this.props.ShipmentType.toLowerCase()\r\n      );\r\n    if (\r\n      !this.props.userDetails.EntityResult.IsArchived &&\r\n      (this.state.shipment.ShipmentCode === \"\" ||\r\n        updateShipmentAllowed === true)\r\n    ) {\r\n      try {\r\n        if (\r\n          this.state.modCompartmentPlans.length <\r\n          this.state.modVehicleDetails.vehicleCompartments.length\r\n        ) {\r\n          let modCompartmentPlans = lodash.cloneDeep(\r\n            this.state.modCompartmentPlans\r\n          );\r\n          let newCompartmentPlan = {\r\n            Attributes: [],\r\n            ShipmentCode: \"\",\r\n            CompartmentCode: null,\r\n            CompartmentSeqNoInVehicle: null,\r\n            TrailerCode: null,\r\n            CompartmentSeqNoInTrailer: null,\r\n            Quantity: null,\r\n            UOM: null,\r\n            OrderCode: null,\r\n            ContractCode: null,\r\n            CustomerCode: null,\r\n            DestinationCode: null,\r\n            FinishedProductCode: null,\r\n            ShareholderCode: this.props.selectedShareholder,\r\n          };\r\n\r\n          newCompartmentPlan.SeqNumber =\r\n            Utilities.getMaxSeqNumberfromListObject(modCompartmentPlans);\r\n\r\n          modCompartmentPlans.push(newCompartmentPlan);\r\n\r\n          this.setState(\r\n            {\r\n              //modAssociations,\r\n              modCompartmentPlans,\r\n              //selectedAssociations: [],\r\n              selectedCompartmentPlans: [],\r\n            },\r\n            () => {\r\n              if (\r\n                this.props.userDetails.EntityResult.IsEnterpriseNode === false\r\n              ) {\r\n                var attributeMetaDataList = lodash.cloneDeep(\r\n                  this.state.attributeMetaDataList\r\n                    .SHIPMENTDESTINATIONCOMPARTMENT\r\n                );\r\n                if (attributeMetaDataList.length > 0)\r\n                  this.formCompartmentPlanAttributes([\r\n                    attributeMetaDataList[0].TerminalCode,\r\n                  ]);\r\n              } else\r\n                this.formCompartmentPlanAttributes(modShipment.TerminalCodes);\r\n            }\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          this.props.ShipmentType +\r\n          \":Error occured on handleAddCompartmentPlan\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleAddProductPlan = () => {\r\n    let modShipment = lodash.clone(this.state.modShipment);\r\n    let updateShipmentAllowed =\r\n      this.state.modCustomValues.ShipmentUpdateAllow === \"TRUE\" &&\r\n      Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.modify,\r\n        this.props.ShipmentType.toLowerCase()\r\n      );\r\n    if (\r\n      !this.props.userDetails.EntityResult.IsArchived &&\r\n      (this.state.shipment.ShipmentCode === \"\" ||\r\n        updateShipmentAllowed === true)\r\n    ) {\r\n      try {\r\n        let modProductPlans = lodash.cloneDeep(this.state.modProductPlans);\r\n        let newProductPlan = {\r\n          Attributes: [],\r\n          Quantity: null,\r\n          UOM: null,\r\n          OrderCode: null,\r\n          ContractCode: null,\r\n          CustomerCode: null,\r\n          DestinationCode: \"\",\r\n          FinishedProductCode: \"\",\r\n          ShareholderCode: this.props.selectedShareholder,\r\n        };\r\n\r\n        newProductPlan.SeqNumber =\r\n          Utilities.getMaxSeqNumberfromListObject(modProductPlans);\r\n\r\n        modProductPlans.push(newProductPlan);\r\n\r\n        this.setState(\r\n          {\r\n            //modAssociations,\r\n            //selectedAssociations: [],\r\n            modProductPlans,\r\n            selectedProductPlans: [],\r\n          },\r\n          () => {\r\n            if (\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode === false\r\n            ) {\r\n              var attributeMetaDataList = lodash.cloneDeep(\r\n                this.state.attributeMetaDataList.SHIPMENTDESTINATIONCOMPARTMENT\r\n              );\r\n              if (attributeMetaDataList.length > 0)\r\n                this.formProductPlanAttributes([\r\n                  attributeMetaDataList[0].TerminalCode,\r\n                ]);\r\n            } else this.formProductPlanAttributes(modShipment.TerminalCodes);\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.log(\r\n          this.props.ShipmentType + \":Error occured on handleAddProductPlan\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDeleteCompartmentPlan = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedCompartmentPlans != null &&\r\n          this.state.selectedCompartmentPlans.length > 0\r\n        ) {\r\n          if (this.state.modCompartmentPlans.length > 0) {\r\n            let modCompartmentPlans = lodash.cloneDeep(\r\n              this.state.modCompartmentPlans\r\n            );\r\n\r\n            this.state.selectedCompartmentPlans.forEach((obj, index) => {\r\n              modCompartmentPlans = modCompartmentPlans.filter(\r\n                (association, cindex) => {\r\n                  return association.SeqNumber !== obj.SeqNumber;\r\n                }\r\n              );\r\n            });\r\n\r\n            this.setState({\r\n              modCompartmentPlans,\r\n              selectedCompartmentPlans: [],\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          this.props.ShipmentType +\r\n          \":Error occured on handleDeleteCompartmentPlan\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDeleteProductPlan = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedProductPlans != null &&\r\n          this.state.selectedProductPlans.length > 0\r\n        ) {\r\n          if (this.state.modProductPlans.length > 0) {\r\n            let modProductPlans = lodash.cloneDeep(this.state.modProductPlans);\r\n\r\n            this.state.selectedProductPlans.forEach((obj) => {\r\n              modProductPlans = modProductPlans.filter((association) => {\r\n                return association.SeqNumber !== obj.SeqNumber;\r\n              });\r\n            });\r\n\r\n            this.setState({ modProductPlans, selectedProductPlans: [] });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          this.props.ShipmentType + \":Error occured on handleDeleteProductPlan\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleCompartmentPlansSelectionChange = (associations) => {\r\n    this.setState({ selectedCompartmentPlans: associations });\r\n  };\r\n\r\n  handleProductPlansSelectionChange = (associations) => {\r\n    this.setState({ selectedProductPlans: associations });\r\n  };\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      var validationErrors = { ...this.state.validationErrors };\r\n      var modShipment = lodash.cloneDeep(this.state.modShipment);\r\n      validationErrors[propertyName] = error;\r\n      modShipment[propertyName] = value;\r\n      this.setState({ validationErrors, modShipment });\r\n    } catch (error) {\r\n      console.log(\r\n        this.props.ShipmentType + \":Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  GetUOMList() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let quantityUOMOptions = [];\r\n            if (Array.isArray(result.EntityResult.VOLUME)) {\r\n              quantityUOMOptions = Utilities.transferListtoOptions(\r\n                result.EntityResult.VOLUME\r\n              );\r\n            }\r\n            if (Array.isArray(result.EntityResult.MASS)) {\r\n              let massUOMOptions = Utilities.transferListtoOptions(\r\n                result.EntityResult.MASS\r\n              );\r\n              massUOMOptions.forEach((massUOM) =>\r\n                quantityUOMOptions.push(massUOM)\r\n              );\r\n            }\r\n\r\n            this.setState({ quantityUOMOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting GetUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getVehicleCodes(shareholder) {\r\n    axios(\r\n      RestAPIs.GetVehicleCodes +\r\n      \"?Transportationtype=\" +\r\n      Constants.TransportationType.ROAD +\r\n      \"&ShareholderCode=\" +\r\n      shareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let vehicleOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n\r\n            let vehicleSearchOptions = lodash.cloneDeep(vehicleOptions);\r\n            if (vehicleSearchOptions.length > Constants.filteredOptionsCount) {\r\n              vehicleSearchOptions = vehicleSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({ vehicleOptions, vehicleSearchOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getVehicleCodes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getVehicleCodes:\", error);\r\n      });\r\n  }\r\n\r\n  getFinishedProductCodes(shareholder) {\r\n    axios(\r\n      RestAPIs.GetFinishedProductCodes + \"?ShareholderCode=\" + shareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let finishedProductOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ finishedProductOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getFinishedProductCodes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getFinishedProductCodes:\", error);\r\n      });\r\n  }\r\n\r\n  getcustomerDestinationList(shareholder) {\r\n    axios(\r\n      RestAPIs.GetCustomerDestinations +\r\n      \"?ShareholderCode=\" +\r\n      shareholder +\r\n      \"&TransportationType=\" +\r\n      Constants.TransportationType.ROAD,\r\n\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n\r\n        if (result.IsSuccess === true) {\r\n          if (Array.isArray(result.EntityResult)) {\r\n            let shareholderCustomers = result.EntityResult.filter(\r\n              (shareholderCust) =>\r\n                shareholderCust.ShareholderCode === shareholder\r\n            );\r\n            if (shareholderCustomers.length > 0) {\r\n              let customerDestinationOptions =\r\n                shareholderCustomers[0].CustomerDestinationsList;\r\n              this.setState({ customerDestinationOptions });\r\n            } else {\r\n              console.log(\"no customers identified for shareholder\");\r\n            }\r\n          } else {\r\n            console.log(\"customerdestinations not identified for shareholder\");\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Customer List:\", error);\r\n      });\r\n  }\r\n\r\n  getDriverCodes(shareholder) {\r\n    axios(\r\n      RestAPIs.GetDriverCodes + \"?ShareholderCode=\" + shareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let driverOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            let driverSearchOptions = lodash.cloneDeep(driverOptions);\r\n            if (driverSearchOptions.length > Constants.filteredOptionsCount) {\r\n              driverSearchOptions = driverSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({ driverOptions, driverSearchOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getDriverCodes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getDriverCodes:\", error);\r\n      });\r\n  }\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modShipment = lodash.cloneDeep(this.state.modShipment);\r\n      modShipment.Active = value;\r\n      if (modShipment.Active !== this.state.shipment.Active)\r\n        modShipment.Remarks = \"\";\r\n      this.setState({ modShipment });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  getDriverSearchOptions() {\r\n    let driverSearchOptions = lodash.cloneDeep(this.state.driverSearchOptions);\r\n    let modDriverCode = this.state.modShipment.DriverCode;\r\n    if (\r\n      modDriverCode !== null &&\r\n      modDriverCode !== \"\" &&\r\n      modDriverCode !== undefined\r\n    ) {\r\n      let selectedDriverCode = driverSearchOptions.find(\r\n        (element) => element.value.toLowerCase() === modDriverCode.toLowerCase()\r\n      );\r\n      if (selectedDriverCode === undefined) {\r\n        driverSearchOptions.push({\r\n          text: modDriverCode,\r\n          value: modDriverCode,\r\n        });\r\n      }\r\n    }\r\n    return driverSearchOptions;\r\n  }\r\n\r\n  getContractCodes(shareholder) {\r\n    axios(\r\n      RestAPIs.GetContractCodes +\r\n      \"?ShareholderCode=\" +\r\n      shareholder +\r\n      \"&TransportationType=\" +\r\n      Constants.TransportationType.ROAD,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true || Array.isArray(result.EntityResult)) {\r\n          this.setState({\r\n            contractCodeOptions: Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            ),\r\n          });\r\n        } else {\r\n          console.log(\"Error in getContractCodes: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getContractCodes: \", error);\r\n      });\r\n  }\r\n\r\n  getOrderCodes(shareholder) {\r\n    axios(\r\n      RestAPIs.GetOrderCodes +\r\n      \"?ShareholderCode=\" +\r\n      shareholder +\r\n      \"&TransportationType=\" +\r\n      Constants.TransportationType.ROAD,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true || Array.isArray(result.EntityResult)) {\r\n          this.setState({\r\n            orderCodeOptions: Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            ),\r\n          });\r\n        } else {\r\n          console.log(\"Error in getOrderCodes: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getOrderCodes: \", error);\r\n      });\r\n  }\r\n\r\n  getVehicleSearchOptions() {\r\n    let vehicleSearchOptions = lodash.cloneDeep(\r\n      this.state.vehicleSearchOptions\r\n    );\r\n    let modVehicleCode = this.state.modShipment.VehicleCode;\r\n    if (\r\n      modVehicleCode !== null &&\r\n      modVehicleCode !== \"\" &&\r\n      modVehicleCode !== undefined\r\n    ) {\r\n      let selectedVehicleCode = vehicleSearchOptions.find(\r\n        (element) =>\r\n          element.value.toLowerCase() === modVehicleCode.toLowerCase()\r\n      );\r\n      if (selectedVehicleCode === undefined) {\r\n        vehicleSearchOptions.push({\r\n          text: modVehicleCode,\r\n          value: modVehicleCode,\r\n        });\r\n      }\r\n    }\r\n    return vehicleSearchOptions;\r\n  }\r\n\r\n  onBack = () => {\r\n    this.setState({\r\n      isManualEntry: false,\r\n      isViewAuditTrail: false,\r\n      isViewTrailerDetails: false,\r\n      isViewLoadingDetails: false,\r\n      isPlanned: true,\r\n      saveEnabled: false,\r\n      expandedRows: [],\r\n      loadingExpandedRows: [],\r\n      drawerStatus: false,\r\n    });\r\n    this.getShipment({ Common_Code: this.state.modShipment.ShipmentCode });\r\n  };\r\n\r\n  handleDrawer = () => {\r\n    var drawerStatus = lodash.cloneDeep(this.state.drawerStatus);\r\n    this.setState({\r\n      drawerStatus: !drawerStatus,\r\n    });\r\n  };\r\n\r\n  handleSealClose = () => {\r\n    this.setState({\r\n      isSealCompartments: false,\r\n      sealCompartments: [],\r\n    });\r\n  };\r\n\r\n  //Get KPI for Truck Shipment\r\n  getKPIList(shareholder, shipmentCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      let objKPIRequestData = {\r\n        PageName: kpiTruckShipmentDetail,\r\n        TransportationType: Constants.TransportationType.ROAD,\r\n        InputParameters: [\r\n          { key: \"ShareholderCode\", value: shareholder },\r\n          { key: \"ShipmentCode\", value: shipmentCode },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              truckShipmentKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ truckShipmentKPIList: [] });\r\n            console.log(\"Error in truck shipment KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting truck shipment KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showShipmentAuthenticationLayout: false,\r\n      showAuthorizeToLoadAuthenticationLayout: false,\r\n      showAllowToLoadAuthenticationLayout: false,\r\n      showCloseShipmentAuthenticationLayout: false,\r\n      showViewBOLAuthenticationLayout: false,\r\n      showPrintBOLAuthenticationLayout: false,\r\n      showFANAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  getFunctionGroupName() {\r\n    if (\r\n      this.state.showShipmentAuthenticationLayout &&\r\n      this.props.ShipmentType.toLowerCase() === fnSBP\r\n    )\r\n      return fnSBP;\r\n    if (\r\n      this.state.showShipmentAuthenticationLayout &&\r\n      this.props.ShipmentType.toLowerCase() === fnSBC\r\n    )\r\n      return fnSBC;\r\n    else if (this.state.showCloseShipmentAuthenticationLayout)\r\n      return fnCloseShipment;\r\n    else if (\r\n      this.state.showAllowToLoadAuthenticationLayout ||\r\n      this.state.showAuthorizeToLoadAuthenticationLayout\r\n    )\r\n      return fnShipmentStatus;\r\n    else if (\r\n      this.state.showViewBOLAuthenticationLayout ||\r\n      this.state.showPrintBOLAuthenticationLayout\r\n    )\r\n      return fnPrintBOL;\r\n    else if (this.state.showFANAuthenticationLayout) return fnPrintFAN;\r\n  }\r\n\r\n  getAddorEditMode() {\r\n    if (this.state.showShipmentAuthenticationLayout)\r\n      return this.state.shipment.ShipmentCode === \"\" ? functionGroups.add : functionGroups.modify;\r\n    else\r\n      return functionGroups.modify;\r\n  };\r\n  viewBOL = () => {\r\n    this.props.handleViewBOL();\r\n    this.handleAuthenticationClose();\r\n  };\r\n  handleOperation() {\r\n    if (this.state.showShipmentAuthenticationLayout)\r\n      return this.handleSaveShipment;\r\n    else if (this.state.showAuthorizeToLoadAuthenticationLayout)\r\n      return this.authorizeToLoad;\r\n    else if (this.state.showAllowToLoadAuthenticationLayout)\r\n      return this.handleAllowToLoad;\r\n    else if (this.state.showCloseShipmentAuthenticationLayout)\r\n      return this.handleShipmentClose;\r\n    else if (this.state.showFANAuthenticationLayout) return this.handlePrintFAN;\r\n    else if (this.state.showViewBOLAuthenticationLayout) return this.viewBOL;\r\n    else if (this.state.showPrintBOLAuthenticationLayout)\r\n      return this.handlePrintBOL;\r\n  }\r\n\r\n  render() {\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"DriverInfo_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modShipment.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modShipment.LastUpdatedTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_LastActive\",\r\n        fieldValue:\r\n          this.state.modShipment.LastActiveTime !== undefined &&\r\n            this.state.modShipment.LastActiveTime !== null\r\n            ? new Date(\r\n              this.state.modShipment.LastActiveTime\r\n            ).toLocaleDateString() +\r\n            \" \" +\r\n            new Date(\r\n              this.state.modShipment.LastActiveTime\r\n            ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_CreatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.modShipment.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modShipment.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    let shipmentFrom = [];\r\n    let customValue = lodash.cloneDeep(this.state.modCustomValues);\r\n\r\n    let IsShipmentCreateFromNoneAllowed =\r\n      this.props.ShipmentType.toLowerCase() === fnSBP\r\n        ? customValue[\"ShipProdCreateShipmentFromNone\"]\r\n        : customValue[\"ShipCompCreateShipmentFromNone\"];\r\n    let nOrderExists = customValue[\"orderEnabled\"];\r\n    let nContractExists = customValue[\"contractEnabled\"];\r\n\r\n    Object.keys(Constants.shipmentFrom).forEach((element) => {\r\n      if (element !== \"All\")\r\n        shipmentFrom.push({\r\n          text: element,\r\n          value: Constants.shipmentFrom[element],\r\n        });\r\n    });\r\n\r\n    if (nOrderExists === \"0\") {\r\n      let index = shipmentFrom.findIndex(\r\n        (item) =>\r\n          Constants.shipmentFrom[item.text] === Constants.shipmentFrom.Order\r\n      );\r\n      if (index >= 0) shipmentFrom.splice(index, 1);\r\n    }\r\n\r\n    if (nContractExists === \"0\") {\r\n      let index = shipmentFrom.findIndex(\r\n        (item) =>\r\n          Constants.shipmentFrom[item.text] === Constants.shipmentFrom.Contract\r\n      );\r\n      if (index >= 0) shipmentFrom.splice(index, 1);\r\n      // ddlCreatedFrom.Items.Remove(ddlCreatedFrom.Items.FindByText(CreatedFrom.CONTRACT.ToString()));\r\n    }\r\n\r\n    if (\r\n      IsShipmentCreateFromNoneAllowed === \"0\" &&\r\n      (nOrderExists === \"1\" || nContractExists === \"1\")\r\n    ) {\r\n      let index = shipmentFrom.findIndex(\r\n        (item) =>\r\n          Constants.shipmentFrom[item.text] === Constants.shipmentFrom.None\r\n      );\r\n      if (index >= 0) shipmentFrom.splice(index, 1);\r\n      // ddlCreatedFrom.Items.Remove(ddlCreatedFrom.Items.FindByText(CreatedFrom.NONE.ToString()));\r\n    }\r\n\r\n    let transloadingOptions = [];\r\n    if (this.state.isMarineTransLoading) transloadingOptions.push(\"MARINE\");\r\n    if (this.state.isRailTransloading) transloadingOptions.push(\"RAIL\");\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <ErrorBoundary>\r\n              <TMDetailsHeader\r\n                entityCode={\r\n                  this.state.isManualEntry\r\n                    ? this.state.shipment.ShipmentCode +\r\n                    \" - \" +\r\n                    t(\"LoadingDetailsEntry_Title\")\r\n                    : this.state.shipment.ShipmentCode\r\n                }\r\n                newEntityName={\r\n                  this.props.ShipmentType.toLowerCase() === fnSBC\r\n                    ? \"ShipmentCompDetail_NewShipmentByCompartment\"\r\n                    : \"ShipmentProdDetail_NewShipmentByCompartment\"\r\n                }\r\n                popUpContents={popUpContents}\r\n              ></TMDetailsHeader>\r\n            </ErrorBoundary>\r\n          )}\r\n        </TranslationConsumer>\r\n        {this.state.isViewAuditTrail ? (\r\n          <ErrorBoundary>\r\n            <TruckShipmentViewAuditTrailDetails\r\n              ShipmentCode={this.state.shipment.ShipmentCode}\r\n              auditTrailList={this.state.auditTrailList}\r\n              modAuditTrailList={this.state.modAuditTrailList}\r\n              Attributes={\r\n                this.state.auditTrailList !== undefined &&\r\n                  this.state.auditTrailList.length > 0\r\n                  ? this.state.auditTrailList[0].AttributesforUI\r\n                  : []\r\n              }\r\n              handleBack={this.onBack}\r\n            ></TruckShipmentViewAuditTrailDetails>\r\n          </ErrorBoundary>\r\n        ) : this.state.isViewLoadingDetails ? (\r\n          <ErrorBoundary>\r\n            <TruckShipmentViewLoadingDetails\r\n              ShipmentCode={this.state.shipment.ShipmentCode}\r\n              modLoadingDetails={this.state.modViewLoadingDetails}\r\n              handleBack={this.onBack}\r\n              expandedRows={this.state.loadingExpandedRows}\r\n              toggleExpand={this.loadingToggleExpand}\r\n              nonConfigColumns={this.state.nonConfigColumns}\r\n            ></TruckShipmentViewLoadingDetails>\r\n          </ErrorBoundary>\r\n        ) : this.state.isViewTrailerDetails ? (\r\n          <ErrorBoundary>\r\n            <TruckShipmentTrailerDetails\r\n              ShipmentCode={this.state.shipment.ShipmentCode}\r\n              trailerDetails={this.state.trailerDetails}\r\n              selectedAttributeList={\r\n                this.state.selectedShipTrailerAttributeList\r\n              }\r\n              handleBack={this.onBack}\r\n              compAttributes={\r\n                this.state.trailerDetails !== undefined &&\r\n                  this.state.trailerDetails.length > 0 &&\r\n                  this.state.trailerDetails[0].shipmentTrailerTWInfoList &&\r\n                  this.state.trailerDetails[0].shipmentTrailerTWInfoList.length >\r\n                  0\r\n                  ? this.state.trailerDetails[0].shipmentTrailerTWInfoList[0]\r\n                    .AttributesforUI\r\n                  : this.state.selectedCompAttributes\r\n              }\r\n            ></TruckShipmentTrailerDetails>\r\n          </ErrorBoundary>\r\n        ) : this.state.isManualEntry ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <TruckShipmentManualEntryDetailsComposite\r\n                shipment={this.state.modShipment}\r\n                handleBack={this.onBack}\r\n                selectedShareholder={this.props.selectedShareholder}\r\n              ></TruckShipmentManualEntryDetailsComposite>\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <TMDetailsKPILayout\r\n              KPIList={this.state.truckShipmentKPIList}\r\n            ></TMDetailsKPILayout>\r\n            <div\r\n              // className={\r\n              //   this.state.isPlanned ? \"showShipmentStatusRightPane\" : \"\"\r\n              // }\r\n              className={\r\n                (this.state.isPlanned &&\r\n                  Array.isArray(this.state.shipment.ShipmentCompartments) &&\r\n                  this.state.shipment.ShipmentCompartments.length > 0) //&& this.props.shipmentSource === undefined\r\n                  ? !this.state.drawerStatus\r\n                    ? \"showShipmentStatusRightPane\"\r\n                    : \"drawerClose\"\r\n                  : \"\"\r\n              }\r\n            >\r\n              <ErrorBoundary>\r\n                <TruckShipmentDetails\r\n                  shipment={this.state.shipment}\r\n                  modShipment={this.state.modShipment}\r\n                  modCustomValues={this.state.modCustomValues}\r\n                  modCompartmentPlans={this.state.modCompartmentPlans}\r\n                  modProductPlans={this.state.modProductPlans}\r\n                  modLoadingDetails={this.state.modLoadingDetails}\r\n                  loadingDetails={this.state.staticLoadingDetails}\r\n                  validationErrors={this.state.validationErrors}\r\n                  listOptions={{\r\n                    terminalCodes: this.props.terminalCodes,\r\n                    quantityUOMOptions: this.state.quantityUOMOptions,\r\n                    vehicleOptions: this.getVehicleSearchOptions(),\r\n                    driverOptions: this.getDriverSearchOptions(),\r\n                    finishedProductOptions: this.state.finishedProductOptions,\r\n                    contractCodeOptions: this.state.contractCodeOptions,\r\n                    orderCodeOptions: this.state.orderCodeOptions,\r\n                    customerDestinationOptions:\r\n                      this.state.customerDestinationOptions,\r\n                    shipmentFromOptions: shipmentFrom,\r\n                    compSeqOptions: this.state.compSeqOptions,\r\n                    topUpDecantOptions: this.state.topUpDecantOptions,\r\n                    transloadingOptions: transloadingOptions,\r\n                    marineReceiptCodes: this.state.marineReceiptCodes,\r\n                    marineReceiptCompCodes: this.state.marineReceiptCompCodes,\r\n                  }}\r\n                  searchResults={{\r\n                    vehicleOptions: this.state.vehicleSearchOptions,\r\n                    driverOptions: this.state.driverSearchOptions,\r\n                  }}\r\n                  selectedProductPlans={this.state.selectedProductPlans}\r\n                  selectedCompartmentPlans={this.state.selectedCompartmentPlans}\r\n                  handleCompartmentPlansSelectionChange={\r\n                    this.handleCompartmentPlansSelectionChange\r\n                  }\r\n                  handleProductPlansSelectionChange={\r\n                    this.handleProductPlansSelectionChange\r\n                  }\r\n                  onFieldChange={this.handleChange}\r\n                  onAllTerminalsChange={this.handleAllTerminalsChange}\r\n                  handleAddCompartmentPlan={this.handleAddCompartmentPlan}\r\n                  handleDeleteCompartmentPlan={this.handleDeleteCompartmentPlan}\r\n                  handleAddProductPlan={this.handleAddProductPlan}\r\n                  handleDeleteProductPlan={this.handleDeleteProductPlan}\r\n                  handleCompartmentPlanCellDataEdit={\r\n                    this.handleCompartmentPlanCellDataEdit\r\n                  }\r\n                  handleProductPlanCellDataEdit={\r\n                    this.handleProductPlanCellDataEdit\r\n                  }\r\n                  onDateTextChange={this.handleDateTextChange}\r\n                  onActiveStatusChange={this.handleActiveStatusChange}\r\n                  onVehicleChange={this.handleVehicleChange}\r\n                  onVehicleSearchChange={this.handleVehicleSearchChange}\r\n                  onDriverSearchChange={this.handleDriverSearchChange}\r\n                  isEnterpriseNode={\r\n                    this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                  }\r\n                  shipmentType={this.props.ShipmentType.toLowerCase()}\r\n                  prodTypeTab={\r\n                    this.props.ShipmentType.toLowerCase() === fnSBP\r\n                      ? [this.props.ShipmentType.toLowerCase()]\r\n                      : []\r\n                  }\r\n                  compTypeTab={\r\n                    this.props.ShipmentType.toLowerCase() === fnSBP &&\r\n                      (this.state.isValidationPassed === false ||\r\n                        this.state.shipment.ShipmentDetailsInfo === null ||\r\n                        this.state.shipment.ShipmentDetailsInfo === undefined ||\r\n                        this.state.shipment.ShipmentDetailsInfo.length === 0)\r\n                      ? []\r\n                      : [this.props.ShipmentType.toLowerCase()]\r\n                  }\r\n                  LoadTypeTab={\r\n                    this.state.isPlanned === false ||\r\n                      //this.props.shipmentSource !== undefined ||\r\n                      this.state.shipment.ShipmentCode === \"\" ||\r\n                      this.state.shipment.ShipmentCode === undefined ||\r\n                      this.state.shipment.ShipmentCode === null ||\r\n                      this.state.shipment.ShipmentDestinationCompartmentsInfo ===\r\n                      null ||\r\n                      this.state.shipment.ShipmentDestinationCompartmentsInfo ===\r\n                      undefined ||\r\n                      this.state.shipment.ShipmentDestinationCompartmentsInfo\r\n                        .length === 0\r\n                      ? []\r\n                      : [\"\"]\r\n                  }\r\n                  customerInventoryTab={\r\n                    this.state.isPlanned === false ||\r\n                      //this.props.shipmentSource !== undefined ||\r\n                      this.state.shipment.ShipmentCode === \"\" ||\r\n                      this.state.shipment.ShipmentCode === undefined ||\r\n                      this.state.shipment.ShipmentCode === null ||\r\n                      this.state.modCustomValues.CustomerInventory === \"FALSE\" ||\r\n                      this.state.modCustomValues.CustomerInventory ===\r\n                      undefined ||\r\n                      this.props.userDetails.EntityResult.isEnterpriseNode\r\n                      ? []\r\n                      : [\"\"]\r\n                  }\r\n                  productAllocationTab={\r\n                    this.props.userDetails.EntityResult.IsEnterpriseNode ||\r\n                      //this.props.shipmentSource !== undefined ||\r\n                      this.state.shipment.ShipmentCode === \"\"\r\n                      ? []\r\n                      : [\"\"]\r\n                  }\r\n                  //productAllocationShareholderTab={this.state.shipment.ShipmentCode === \"\" || this.state.productShareholderAllocationList.length === 0 ? [] : [\"\"]}\r\n                  toggleExpand={this.toggleExpand}\r\n                  attributeToggleExpand={this.attributeToggleExpand}\r\n                  expandedRows={this.state.expandedRows}\r\n                  attributeValidationErrors={\r\n                    this.state.attributeValidationErrors\r\n                  }\r\n                  handleAttributeCellDataEdit={this.handleAttributeDataEdit}\r\n                  handleCompAttributeCellDataEdit={\r\n                    this.handleCompAttributeCellDataEdit\r\n                  }\r\n                  handleProdPlanAttributeCellDataEdit={\r\n                    this.handleProdPlanAttributeCellDataEdit\r\n                  }\r\n                  selectedAttributeList={this.state.selectedAttributeList}\r\n                  compartmentDetailsPageSize={\r\n                    this.props.userDetails.EntityResult.PageAttibutes\r\n                      .WebPortalListPageSize\r\n                  }\r\n                  customerInventory={this.state.customerInventory}\r\n                  activeTab={this.state.activeTab}\r\n                  onTabChange={this.handleTabChange}\r\n                  IsWebPortalUser={\r\n                    this.props.userDetails.EntityResult.IsWebPortalUser\r\n                  }\r\n                  isDisableSubmitForApproval={\r\n                    this.state.isDisableSubmitForApproval\r\n                  }\r\n                  isSlotbookinginUI={\r\n                    this.props.userDetails.EntityResult.ShowSlotBookedInUI\r\n                  }\r\n                  productAllocationList={this.state.productAllocationList}\r\n                  productShareholderAllocationList={\r\n                    this.state.productShareholderAllocationList\r\n                  }\r\n                  ProdAllocEntity={this.state.ProdAllocEntity}\r\n                  handleCellCheck={this.handleCellCheck}\r\n                  handleLoadingDetailsChange={this.handleLoadingDetailsChange}\r\n                  handleTopUpDecantApproval={this.handleTopUpDecantApproval}\r\n                  ddlTopUpDecantStatus={this.state.ddlTopUpDecantStatus}\r\n                  isMarineTransloading={this.state.isMarineTransLoading}\r\n                  isRailTransloading={this.state.isRailTransloading}\r\n                  isPlanned={this.state.isPlanned}\r\n                  updateTransloadingInfo={this.handleUpdateShipmentTransloading}\r\n                  handleTransLoadCompSeq={this.getMarineReceipt}\r\n                  shipmentSource={this.props.shipmentSource}\r\n                  isAutoGeneratedShipmentCode={\r\n                    this.state.isAutoGeneratedShipmentCode\r\n                  }\r\n                  isEnforcingEnabled={this.state.isEnforcingEnabled}\r\n                  isBonded={this.state.isBonded}\r\n                  overrideSequence={this.handleOverrideShipmentSequence}\r\n                  isOverrideSequenceButtonEnabled={\r\n                    this.props.userDetails.EntityResult.IsArchived\r\n                      ? false\r\n                      : this.state.isVehicleChanged\r\n                        ? false\r\n                        : Utilities.isInFunction(\r\n                          this.props.userDetails.EntityResult.FunctionsList,\r\n                          functionGroups.modify,\r\n                          fnOverrideShipmentSeq\r\n                        )\r\n                  }\r\n                  updateShipmentBondNo={this.UpdateShipmentBondNo}\r\n                  isBondButtonenabled={\r\n                    this.props.userDetails.EntityResult.IsArchived\r\n                      ? false\r\n                      : true\r\n                  }\r\n                  updateShipmentAllowed={\r\n                    this.state.modCustomValues.ShipmentUpdateAllow === \"TRUE\" &&\r\n                    Utilities.isInFunction(\r\n                      this.props.userDetails.EntityResult.FunctionsList,\r\n                      functionGroups.modify,\r\n                      this.props.ShipmentType.toLowerCase()\r\n                    )\r\n                  }\r\n                  ShipmentBay={this.state.ShipmentBay}\r\n                  UpdateShipmentDriver={this.UpdateShipmentDriver}\r\n                  isWebportalCarrierRoleUser= {this.props.userDetails.EntityResult.RoleName.toLowerCase() === \"carriercompany\" && this.props.userDetails.EntityResult.IsWebPortalUser}\r\n                ></TruckShipmentDetails>\r\n              </ErrorBoundary>\r\n              <ErrorBoundary>\r\n                <TMDetailsUserActions\r\n                  handleBack={this.props.onBack}\r\n                  handleSave={this.handleSave}\r\n                  handleReset={this.handleReset}\r\n                  saveEnabled={this.state.saveEnabled}\r\n                ></TMDetailsUserActions>\r\n              </ErrorBoundary>\r\n            </div>\r\n            {(this.state.isPlanned &&\r\n              Array.isArray(this.state.shipment.ShipmentCompartments) &&\r\n              this.state.shipment.ShipmentCompartments.length > 0) ? ( //&& this.props.shipmentSource === undefined\r\n              <div\r\n                // className=\"showShipmentStatusLeftPane\"\r\n                className={\r\n                  this.state.drawerStatus ? \"marineStatusLeftPane\" : \"\"\r\n                }\r\n              >\r\n                <TransactionSummaryOperations\r\n                  title={\"ViewAllShipment_Details\"}\r\n                  selectedItem={[\r\n                    { Common_Code: this.state.modShipment.ShipmentCode },\r\n                  ]}\r\n                  shipmentNextOperations={this.state.shipmentNextOperations}\r\n                  handleOperationButtonClick={this.handleOperationClick}\r\n                  currentStatuses={this.state.currentShipmentStatuses}\r\n                  unAllowedOperations={[\r\n                    \"ManualEntry\",\r\n                    \"ViewShipment_AuthorizeLoad\",\r\n                    \"ViewShipment_AllowToLoad\",\r\n                    \"ViewShipment_RecordWeight\",\r\n                    \"ViewAllocateBay_AllocateBay\",\r\n                    \"ViewAllocateBay_DeallocateBay\",\r\n                    \"ViewShipment_CloseShipment\",\r\n                    \"ViewShipmentStatus_PrintFAN\",\r\n                    \"ViewAllShipment_SendBOL\",\r\n                  ]}\r\n                  webPortalAllowedOperations={[\r\n                    \"ViewShipment_ViewLoadingDetails\",\r\n                    \"ViewShipmentStatus_ViewBOL\",\r\n                    \"ViewShipment_ViewAuditTrail\",\r\n                  ]}\r\n                  isDetails={true}\r\n                  isEnterpriseNode={\r\n                    this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                  }\r\n                  isWebPortalUser={\r\n                    this.props.userDetails.EntityResult.IsWebPortalUser\r\n                  }\r\n                  handleDrawer={this.handleDrawer}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        )}\r\n        {this.state.isRecordWeight ? this.handleRecordWeight() : null}\r\n        {this.state.isCloseShipment ? this.handleCloseShipmentModal() : null}\r\n        {this.state.isSealCompartments ? (\r\n          <ErrorBoundary>\r\n            <TruckShipmentSealDetailsComposite\r\n              transactionCode={this.state.shipment.ShipmentCode}\r\n              selectedShareholder={this.props.selectedShareholder}\r\n              sealCompartments={this.state.sealCompartments}\r\n              handleSealClose={this.handleSealClose}\r\n            ></TruckShipmentSealDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : null}\r\n        {this.state.isNotRevised ? this.confirmAllowToLoad() : null}\r\n\r\n        {this.state.vehicleBondPopUp ? this.confirmVehicleBond() : null}\r\n        {this.state.vehicleBondExpiryPopUp\r\n          ? this.confirmVehicleBondExpiryDate()\r\n          : null}\r\n        {this.state.stockProducts ? this.confirmBondedStockProducts() : null}\r\n        {this.state.isLadenWeightValid ? this.confirmRecordLadenWeight() : null}\r\n\r\n        {this.state.showShipmentAuthenticationLayout ||\r\n          this.state.showAllowToLoadAuthenticationLayout ||\r\n          this.state.showAuthorizeToLoadAuthenticationLayout ||\r\n          this.state.showCloseShipmentAuthenticationLayout ||\r\n          this.state.showViewBOLAuthenticationLayout ||\r\n          this.state.showPrintBOLAuthenticationLayout ||\r\n          this.state.showFANAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={this.getAddorEditMode()}\r\n            functionGroup={this.getFunctionGroupName()}\r\n            handleOperation={this.handleOperation()}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n\r\n        {this.state.isAllocateBay ? this.confirmAllocateBay() : null}\r\n        {this.state.isDeAllocateBay ? this.confirmDeAllocateBay() : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TruckShipmentDetailsComposite);\r\n\r\nTruckShipmentDetailsComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n  selectedRow: PropTypes.object.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  ShipmentType: PropTypes.string.isRequired,\r\n  shipmentSource: PropTypes.number,\r\n  shipmentSourceCode: PropTypes.string,\r\n  shipmentSourceCompartmentItems: PropTypes.array,\r\n  shipmentSourceDetails: PropTypes.object,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { sealCompValidationDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport lodash from \"lodash\";\r\nimport axios from \"axios\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { toast } from \"react-toastify\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button,  Input,  } from \"@scuf/common\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\n\r\nclass TruckShipmentSealDetailsComposite extends Component {\r\n  state = {\r\n    sealCompartments: this.props.sealCompartments,\r\n  };\r\n   \r\n\r\n  \r\n  updateSealCompartments=()=>{\r\n    let sealCompartments = lodash.cloneDeep(this.state.sealCompartments);\r\n    let sealCompList = [];\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewAllShipment_SealCompUpdate\",\r\n      messageResultDetails: [],\r\n    };\r\n  \r\n    sealCompartments.forEach((item) => {\r\n      sealCompList.push({\r\n        SealNo: item.SealNo,\r\n        CompNo: item.CompNo,\r\n        ShareholderCode: this.props.selectedShareholder,\r\n        ShipmentCode: this.props.transactionCode,\r\n      });\r\n\r\n      sealCompValidationDef.forEach((col) => {\r\n        let err = \"\";\r\n  \r\n        if (col.validator !== undefined) {\r\n          err = Utilities.validateField(\r\n            col.validator,\r\n            item[col.field]\r\n          );\r\n        }\r\n  \r\n        if (err !== \"\") {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [\r\n              \"ShipmentCompDetail_CompSeqInVehicle\",\r\n              col.displayName,\r\n            ],\r\n            keyValues: [\r\n              item.CompNo,\r\n              item[col.field],\r\n            ],\r\n            isSuccess: false,\r\n            errorMessage: err,\r\n          });\r\n        }\r\n      });\r\n  \r\n    });\r\n  \r\n   \r\n  if (notification.messageResultDetails.length > 0 ) {\r\n    toast(\r\n      <ErrorBoundary>\r\n        <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n      </ErrorBoundary>,\r\n      {\r\n        autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n      }\r\n    );\r\n     return;\r\n  }\r\n  \r\n  \r\n  notification.messageResultDetails.push(\r\n    {\r\n          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [this.props.transactionCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        });\r\n      \r\n  \r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: this.props.selectedShareholder,\r\n      },\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: this.props.transactionCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n      Entity: sealCompList,\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateSealCompartments,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        notification.messageResultDetails[0].errorMessage = result.ErrorList[0];\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while update Shipment Seal Info:\", error);\r\n      });\r\n  }\r\n  \r\n  isNodeEnterpriseOrWebortal()\r\n  {\r\n    if (this.props.userDetails.EntityResult.IsEnterpriseNode || this.props.userDetails.EntityResult.IsWebPortalUser) {\r\n     return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n   handleSealNoInput = (data) => {\r\n    let cellInfo = data.rowData;\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={cellInfo.SealNo}\r\n        disabled={false}\r\n        onChange={(celldata) => {\r\n          let sealCompartments = lodash.cloneDeep(this.state.sealCompartments);\r\n\r\n          let index = sealCompartments.findIndex((comp) => {\r\n            return comp.CompNo === cellInfo.CompNo;\r\n          });\r\n\r\n          if (index >= 0) sealCompartments[index].SealNo = celldata;\r\n\r\n          this.setState({ sealCompartments });\r\n        }}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal\r\n            open={true}\r\n            size=\"large\"\r\n            className=\"sealCompartmentsPopUp\"\r\n          >\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h3>\r\n                  {t(\"ViewAllShipment_SealCompartment\") +\r\n                    \" : \" +\r\n                    this.props.transactionCode}\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-12 detailsTable\">\r\n                <DataTable data={this.state.sealCompartments}>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    field={\"CompNo\"}\r\n                    header={t(\"ViewShipment_CompartmentSeq\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    field=\"FinishedProductCode\"\r\n                    header={t(\"ViewShipment_FinishedProductCode\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    field=\"ShipmentCompartmentStatus\"\r\n                    header={t(\"ViewShipment_Status\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    field=\"LoadedQuantityUOM\"\r\n                    header={t(\"ViewShipmentStatus_LoadedQuantity\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    header={t(\"SealMaster_SealNo\")}\r\n                    renderer={(cellData) => this.handleSealNoInput(cellData)}\r\n                  />\r\n                </DataTable>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n            <Button\r\n              content={t(\"MarineEOD_Close\")}\r\n              className=\"cancelButton\"\r\n              onClick={this.props.handleSealClose}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              content={t(\"SealMaster_Save\")}\r\n              disabled={this.isNodeEnterpriseOrWebortal()}\r\n              onClick={this.updateSealCompartments}\r\n            />\r\n          </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TruckShipmentSealDetailsComposite);\r\n\r\nTruckShipmentSealDetailsComposite.propTypes = {\r\n  transactionCode: PropTypes.string.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  sealCompartments: PropTypes.object.isRequired,\r\n  handleSealClose: PropTypes.func.isRequired,\r\n};\r\n \r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Select, Checkbox } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nAssociatedTerminals.propTypes = {\r\n  terminalList: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedTerminal: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  validationError: PropTypes.string,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCheckChange: PropTypes.func.isRequired,\r\n};\r\nAssociatedTerminals.defaultProps = {\r\n  terminalList: [],\r\n  selectedTerminal: [],\r\n  validationError: \"\",\r\n};\r\nexport function AssociatedTerminals({\r\n  terminalList,\r\n  selectedTerminal,\r\n  validationError,\r\n  onFieldChange,\r\n  onCheckChange,\r\n}) {\r\n  //console.log(\"component terminalList\", terminalList);\r\n  if (selectedTerminal === null) selectedTerminal = [];\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div style={{ width: \"80%\" }}>\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"TerminalCodes\")}\r\n              value={selectedTerminal}\r\n              multiple={true}\r\n              options={Utilities.transferListtoOptions(terminalList)}\r\n              onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n              error={t(validationError)}\r\n              disabled={terminalList.length === 0}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"ddlSelectAll\">\r\n            <Checkbox\r\n              label={t(\"Common_All\")}\r\n              checked={\r\n                Array.isArray(selectedTerminal) &&\r\n                selectedTerminal.length === terminalList.length\r\n              }\r\n              onChange={(checked) => onCheckChange(checked)}\r\n            ></Checkbox>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button, Modal, Checkbox, Icon } from \"@scuf/common\";\r\nimport {\r\n  ShipmentCompartmentStatus,\r\n  ShipmentStatus,\r\n  Shipment_Status,\r\n} from \"../../../JS/Constants\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport * as wjChart from \"@grapecity/wijmo.react.chart\";\r\nimport * as wjcCore from \"@grapecity/wijmo\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nwjcCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nTruckShipmentViewAuditTrailDetails.propTypes = {\r\n  auditTrailList: PropTypes.array.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  ShipmentCode: PropTypes.string,\r\n  modAuditTrailList: PropTypes.array.isRequired,\r\n  Attributes: PropTypes.array.isRequired,\r\n};\r\n\r\nTruckShipmentViewAuditTrailDetails.defaultProps = {};\r\n\r\nexport function TruckShipmentViewAuditTrailDetails({\r\n  ShipmentCode,\r\n  auditTrailList,\r\n  handleBack,\r\n  modAuditTrailList,\r\n  Attributes,\r\n}) {\r\n  const driverName =\r\n    auditTrailList !== null &&\r\n      auditTrailList !== undefined &&\r\n      auditTrailList.length > 0 &&\r\n      auditTrailList[0].DRIVERNAME !== null &&\r\n      auditTrailList[0].DRIVERNAME !== undefined &&\r\n      auditTrailList[0].DRIVERNAME !== \"\"\r\n      ? auditTrailList[0].DRIVERNAME\r\n      : \"\";\r\n  const driverCode =\r\n    auditTrailList !== null &&\r\n      auditTrailList !== undefined &&\r\n      auditTrailList.length > 0 &&\r\n      auditTrailList[0].DRIVERCODE !== null &&\r\n      auditTrailList[0].DRIVERCODE !== undefined &&\r\n      auditTrailList[0].DRIVERCODE !== \"\"\r\n      ? auditTrailList[0].DRIVERCODE\r\n      : \"\";\r\n\r\n  const handleStatus = (e) => {\r\n    if (e === ShipmentCompartmentStatus.EMPTY) {\r\n      return \"EMPTY\";\r\n    } else if (e === ShipmentCompartmentStatus.LOADING) {\r\n      return \"LOADING\";\r\n    } else if (e === ShipmentCompartmentStatus.PART_FILLED) {\r\n      return \"PART_FILLED\";\r\n    } else if (e === ShipmentCompartmentStatus.OVER_FILLED) {\r\n      return \"OVER_FILLED\";\r\n    } else if (e === ShipmentCompartmentStatus.FORCE_COMPLETED) {\r\n      return \"FORCE_COMPLETED\";\r\n    } else if (e === ShipmentCompartmentStatus.COMPLETED) {\r\n      return \"COMPLETED\";\r\n    } else if (e === ShipmentCompartmentStatus.INTERRUPTED) {\r\n      return \"INTERRUPTED\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n\r\n  const handleAttributeType = (data) => {\r\n    const attribute = data.rowData.AttributesforUI.filter(\r\n      (att) => att.AttributeName === data.name\r\n    )[0];\r\n\r\n    return attribute.DataType.toLowerCase() ===\r\n      Constants.DataType.STRING.toLowerCase() ||\r\n      attribute.DataType.toLowerCase() ===\r\n      Constants.DataType.INT.toLowerCase() ||\r\n      attribute.DataType.toLowerCase() ===\r\n      Constants.DataType.LONG.toLowerCase() ||\r\n      attribute.DataType.toLowerCase() ===\r\n      Constants.DataType.FLOAT.toLowerCase() ? (\r\n      <label>{attribute.AttributeValue}</label>\r\n    ) : attribute.DataType.toLowerCase() ===\r\n      Constants.DataType.BOOL.toLowerCase() ? (\r\n      <Checkbox\r\n        checked={\r\n          attribute.AttributeValue.toString().toLowerCase() === \"true\"\r\n            ? true\r\n            : false\r\n        }\r\n        disabled={true}\r\n      ></Checkbox>\r\n    ) : (\r\n      <label>{new Date(attribute.AttributeValue).toLocaleDateString()}</label>\r\n    );\r\n  };\r\n\r\n  const formatter = (engine, label) => {\r\n    try {\r\n      label.cls = null;\r\n      engine.fontSize = \"7px\";\r\n      if (label.val === ShipmentStatus.AUTO_LOADED) {\r\n        label.text = Shipment_Status.AUTO_LOADED;\r\n      } else if (label.val === ShipmentStatus.CHECKED_IN) {\r\n        label.text = Shipment_Status.CHECKED_IN;\r\n      } else if (label.val === ShipmentStatus.CLOSED) {\r\n        label.text = Shipment_Status.CLOSED;\r\n      } else if (label.val === ShipmentStatus.INTERRUPTED) {\r\n        label.text = Shipment_Status.INTERRUPTED;\r\n      } else if (label.val === ShipmentStatus.LOADING) {\r\n        label.text = Shipment_Status.LOADING;\r\n      } else if (label.val === ShipmentStatus.MANUALLY_LOADED) {\r\n        label.text = Shipment_Status.MANUALLY_LOADED;\r\n      } else if (label.val === ShipmentStatus.PARTIALLY_LOADED) {\r\n        label.text = Shipment_Status.PARTIALLY_LOADED;\r\n      } else if (label.val === ShipmentStatus.QUEUED) {\r\n        label.text = Shipment_Status.QUEUED;\r\n      } else if (label.val === ShipmentStatus.READY) {\r\n        label.text = Shipment_Status.READY;\r\n      } else if (label.val === ShipmentStatus.DE_QUEUED) {\r\n        label.text = Shipment_Status.DE_QUEUED;\r\n      } else if (label.val === ShipmentStatus.WEIGHED_IN) {\r\n        label.text = Shipment_Status.WEIGHED_IN;\r\n      } else if (label.val === ShipmentStatus.WEIGHED_OUT) {\r\n        label.text = Shipment_Status.WEIGHED_OUT;\r\n      } else if (label.val === ShipmentStatus.USER_DEFINED) {\r\n        let x = modAuditTrailList.findIndex(\r\n          (x) => x.ShipmentStatus === label.val\r\n        );\r\n        label.text =\r\n          x !== -1 ? modAuditTrailList[x].Status : Shipment_Status.USER_DEFINED;\r\n      } else if (label.val === ShipmentStatus.ASSIGNED) {\r\n        label.text = Shipment_Status.ASSIGNED;\r\n      } else if (label.val === ShipmentStatus.CANCELLED) {\r\n        label.text = Shipment_Status.CANCELLED;\r\n      } else if (label.val === ShipmentStatus.EXPIRED) {\r\n        label.text = Shipment_Status.EXPIRED;\r\n      } else if (label.val === ShipmentStatus.REJECTED) {\r\n        label.text = Shipment_Status.REJECTED;\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(\"Error in formatter\", error)\r\n    }\r\n    return label;\r\n  };\r\n\r\n  function displayTMModalforPrintConfirm() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} className=\"marineModalPrint\">\r\n            <Modal.Content>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <div className=\"col col-lg-8\">\r\n                  <h3>\r\n                    {t(\"Transaction_AuditTrail_Heading\") +\r\n                      \" : \" +\r\n                      ShipmentCode}\r\n                  </h3>\r\n                </div>\r\n                <div className=\"col col-lg-4\" style={{ textAlign: \"right\" }}>\r\n                  <div\r\n                    onClick={() => {\r\n                      setModelOpen(false);\r\n                    }}\r\n                  >\r\n                    <Icon root=\"common\" name=\"close\" />\r\n                  </div>\r\n\r\n                  {/* <Button\r\n                                        type=\"primary\"\r\n                                        size=\"small\"\r\n                                        content={t(\"MarineEOD_Close\")}\r\n                                        onClick={() => {\r\n                                            setModelOpen(false);\r\n                                        }}\r\n                                    /> */}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-10 container-fluid\">\r\n                <wjChart.FlexChart\r\n                  itemsSource={modAuditTrailList}\r\n                  chartType=\"Line\"\r\n                  bindingX=\"UpdatedTime\"\r\n                  palette={[\"red\"]}\r\n                  style={{ width: \"100%\", height: \"450px\" }}\r\n                >\r\n                  <wjChart.FlexChartLegend position=\"Bottom\"></wjChart.FlexChartLegend>\r\n                  <wjChart.FlexChartAxis\r\n                    wjProperty=\"axisY\"\r\n                    majorUnit={1}\r\n                    max={16}\r\n                    min={0}\r\n                    itemFormatter={formatter}\r\n                    axisLine={true}\r\n                  ></wjChart.FlexChartAxis>\r\n                  <wjChart.FlexChartSeries\r\n                    binding=\"ShipmentStatus\"\r\n                    name=\"ShipmentStatus\"\r\n                  ></wjChart.FlexChartSeries>\r\n                </wjChart.FlexChart>\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <label>\r\n                  {t(\"ViewAuditTrail_DriverCode\") + \" : \" + driverCode}\r\n                </label>\r\n                {/* <Input\r\n                                    fluid\r\n                                    value={driverCode}\r\n                                    label={t(\"ViewAuditTrail_DriverCode\")}\r\n                                    disabled={true}\r\n                                    reserveSpace={false}\r\n                                /> */}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <label>{t(\"DriverInfo_DriverName\") + \" : \" + driverName}</label>\r\n                {/* <Input\r\n                                    fluid\r\n                                    value={driverName}\r\n                                    label={t(\"DriverInfo_DriverName\")}\r\n                                    disabled={true}\r\n                                    reserveSpace={false}\r\n                                /> */}\r\n              </div>\r\n              <div className=\"col-12 detailsTable\">\r\n                <DataTable data={auditTrailList}>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"Status\"\r\n                    field=\"Status\"\r\n                    header={t(\"ViewAuditTrail_ShipmentStatus\")}\r\n                    editable={false}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"UpdatedTime\"\r\n                    field=\"UpdatedTime\"\r\n                    header={t(\"ViewAuditTrail_UpdatedTime\")}\r\n                    editable={false}\r\n                    editFieldType=\"text\"\r\n                  //renderer={(cellData) => disPlayValue(cellData)}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    header={t(\"ViewAuditTrail_ShipmentCompartmentSeq\")}\r\n                    field={\"CompartmentSeqNoInVehicle\"}\r\n                    editable={false}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"ShipmentCompartmentStatus\"\r\n                    field=\"ShipmentCompartmentStatus\"\r\n                    header={t(\"ViewAuditTrail_ShipmentCompartmentStatus\")}\r\n                    editable={false}\r\n                    renderer={(cellData) =>\r\n                      handleStatus(cellData.rowData.ShipmentCompartmentStatus)\r\n                    }\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  {/* <DataTable.Column\r\n                                        className=\"compColHeight\"\r\n                                        header={t(\"ViewAuditTrail_DriverCode\")}\r\n                                        editable={false}\r\n                                        field={\"DRIVERCODE\"}\r\n                                        editFieldType=\"text\"\r\n                                    ></DataTable.Column>\r\n                                    <DataTable.Column\r\n                                        className=\"compColHeight\"\r\n                                        header={t(\"DriverInfo_DriverName\")}\r\n                                        editable={false}\r\n                                        field={\"DRIVERNAME\"}\r\n                                        editFieldType=\"text\"\r\n                                    ></DataTable.Column> */}\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    header={t(\"ViewAuditTrail_DriverPIN\")}\r\n                    editable={false}\r\n                    field={\"DriverPin\"}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  {Attributes.map((att) => {\r\n                    return (\r\n                      <DataTable.Column\r\n                        className=\"compColHeight\"\r\n                        header={t(att.AttributeName)}\r\n                        editable={false}\r\n                        renderer={handleAttributeType}\r\n                      ></DataTable.Column>\r\n                    );\r\n                  })}\r\n                </DataTable>\r\n              </div>\r\n              <Modal.Footer>\r\n                <Button\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  content={t(\"ViewAuditTrail_Print\")}\r\n                  onClick={() => {\r\n                    let el =\r\n                      window.document.getElementById(\"printTable\").innerHTML;\r\n                    const iframe = window.document.createElement(\"IFRAME\");\r\n                    let doc = null;\r\n                    window.document.body.appendChild(iframe);\r\n                    doc = iframe.contentWindow.document;\r\n                    const str1 = el.substring(0, el.indexOf(\"<table\") + 6);\r\n                    const str2 = el.substring(\r\n                      el.indexOf(\"<table\") + 6,\r\n                      el.length\r\n                    );\r\n                    // const str3 =\r\n                    //     t(\"ViewAuditTrail_ViewAuditTrailForShipment\") +\r\n                    //     \" : \" +\r\n                    //     ShipmentCode;\r\n                    //el = str3 + str1 + ' border=\"1\" cellspacing=\"0\"' + str2;\r\n                    el = str1 + ' border=\"1\" cellspacing=\"1\"' + str2;\r\n                    //el = el.replace('<tfoot class=\"p-datatable-tfoot\">', \"\");\r\n                    //el = el.replace(\r\n                    //    '<tr><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td></tr>',\r\n                    //    \"\"\r\n                    //);\r\n                    doc.write(el);\r\n                    // console.info(el);\r\n                    doc.close();\r\n                    iframe.contentWindow.focus();\r\n                    iframe.contentWindow.print();\r\n                    setTimeout(() => {\r\n                      window.document.body.removeChild(iframe);\r\n                    }, 2000);\r\n                  }}\r\n                />\r\n                <Button\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  content={t(\"MarineEOD_Close\")}\r\n                  onClick={() => {\r\n                    setModelOpen(false);\r\n                  }}\r\n                />\r\n              </Modal.Footer>\r\n            </Modal.Content>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div>\r\n            <div className=\"detailsContainer\">\r\n              <div id=\"printTable\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <h3>\r\n                      {t(\"ViewAuditTrail_ViewAuditTrailForShipment\") +\r\n                        \" : \" +\r\n                        ShipmentCode}\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\" row marginRightZero tableScroll\">\r\n                  <div\r\n                    className=\"col-12 container-fluid\"\r\n                  // style={{ overflowX: \"auto\" }}\r\n                  >\r\n                    <wjChart.FlexChart\r\n                      itemsSource={modAuditTrailList}\r\n                      chartType=\"Line\"\r\n                      bindingX=\"UpdatedTime\"\r\n                      palette={[\"red\"]}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        minWidth: \"800px\",\r\n                        height: \"450px\",\r\n                      }}\r\n                    >\r\n                      <wjChart.FlexChartLegend position=\"Bottom\"></wjChart.FlexChartLegend>\r\n                      <wjChart.FlexChartAxis\r\n                        wjProperty=\"axisY\"\r\n                        majorUnit={1}\r\n                        max={16}\r\n                        min={0}\r\n                        itemFormatter={formatter}\r\n                        axisLine={true}\r\n                      ></wjChart.FlexChartAxis>\r\n                      <wjChart.FlexChartSeries\r\n                        binding=\"ShipmentStatus\"\r\n                        name=\"ShipmentStatus\"\r\n                      ></wjChart.FlexChartSeries>\r\n                    </wjChart.FlexChart>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row marginRightZero\">\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <label>\r\n                      {t(\"ViewAuditTrail_DriverCode\") + \" : \" + driverCode}\r\n                    </label>\r\n                    {/* <Input\r\n                                        fluid\r\n                                        value={driverCode}\r\n                                        label={t(\"ViewAuditTrail_DriverCode\")}\r\n                                        disabled={true}\r\n                                        reserveSpace={false}\r\n                                    /> */}\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <label>\r\n                      {t(\"DriverInfo_DriverName\") + \" : \" + driverName}\r\n                    </label>\r\n                    {/* <Input\r\n                                        fluid\r\n                                        value={driverName}\r\n                                        label={t(\"DriverInfo_DriverName\")}\r\n                                        disabled={true}\r\n                                        reserveSpace={false}\r\n                                    /> */}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row marginRightZero tableScroll\">\r\n                  <div className=\"col-12 detailsTable \">\r\n                    <DataTable data={auditTrailList} scrollable={true}>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"Status\"\r\n                        field=\"Status\"\r\n                        header={t(\"ViewAuditTrail_ShipmentStatus\")}\r\n                        editable={false}\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"UpdatedTime\"\r\n                        field=\"UpdatedTime\"\r\n                        header={t(\"ViewAuditTrail_UpdatedTime\")}\r\n                        editable={false}\r\n                        editFieldType=\"text\"\r\n                      //renderer={(cellData) => disPlayValue(cellData)}\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        header={t(\"ViewAuditTrail_ShipmentCompartmentSeq\")}\r\n                        field={\"CompartmentSeqNoInVehicle\"}\r\n                        editable={false}\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"ShipmentCompartmentStatus\"\r\n                        field=\"ShipmentCompartmentStatus\"\r\n                        header={t(\"ViewAuditTrail_ShipmentCompartmentStatus\")}\r\n                        editable={false}\r\n                        renderer={(cellData) =>\r\n                          handleStatus(\r\n                            cellData.rowData.ShipmentCompartmentStatus\r\n                          )\r\n                        }\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n                      {/* <DataTable.Column\r\n                                            className=\"compColHeight\"\r\n                                            header={t(\"ViewAuditTrail_DriverCode\")}\r\n                                            editable={false}\r\n                                            field={\"DRIVERCODE\"}\r\n                                            editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                        <DataTable.Column\r\n                                            className=\"compColHeight\"\r\n                                            header={t(\"DriverInfo_DriverName\")}\r\n                                            editable={false}\r\n                                            field={\"DRIVERNAME\"}\r\n                                            editFieldType=\"text\"\r\n                                        ></DataTable.Column> */}\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        header={t(\"ViewAuditTrail_DriverPIN\")}\r\n                        editable={false}\r\n                        field={\"DriverPin\"}\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n\r\n                      {Attributes.map((att) => {\r\n                        return (\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            header={t(att.AttributeName)}\r\n                            editable={false}\r\n                            renderer={handleAttributeType}\r\n                          ></DataTable.Column>\r\n                        );\r\n                      })}\r\n                    </DataTable>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-sm-6 col-lg-8\">\r\n                  <Button\r\n                    className=\"backButton\"\r\n                    onClick={handleBack}\r\n                    content={t(\"Back\")}\r\n                  ></Button>\r\n                </div>\r\n                <div\r\n                  className=\"col-12 col-sm-6 col-lg-4\"\r\n                  style={{ textAlign: \"right\" }}\r\n                >\r\n                  <Button\r\n                    className=\"printButton\"\r\n                    onClick={() => {\r\n                      setModelOpen(true);\r\n                    }}\r\n                    content={t(\"ViewAuditTrail_PrintAuditTrail\")}\r\n                  ></Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n      {displayTMModalforPrintConfirm()}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Icon } from \"@scuf/common\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\n\r\nTruckShipmentViewLoadingDetails.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  ShipmentCode: PropTypes.string,\r\n  modLoadingDetails: PropTypes.array.isRequired,\r\n  expandedRows: PropTypes.array.isRequired,\r\n  toggleExpand: PropTypes.func.isRequired,\r\n  nonConfigColumns: PropTypes.array.isRequired,\r\n};\r\n\r\nTruckShipmentViewLoadingDetails.defaultProps = {};\r\n\r\nexport function TruckShipmentViewLoadingDetails({\r\n  ShipmentCode,\r\n  modLoadingDetails,\r\n  handleBack,\r\n  expandedRows,\r\n  toggleExpand,\r\n  nonConfigColumns,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  const expanderTemplate = (data) => {\r\n    const open =\r\n      expandedRows.findIndex((x) => x.seqNo === data.rowData.seqNo) >= 0\r\n        ? true\r\n        : false;\r\n    return (\r\n      <div\r\n        onClick={() => toggleExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"slidercontrols-minus\" : \"ellipsis-horizontal\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  function rowExpansionTemplate(data) {\r\n    let secondRow = [data];\r\n    let thirdRow = [];\r\n    if (\r\n      !nonConfigColumns.includes(\r\n        \"CalculatedGross\",\r\n        \"CalculatedNet\",\r\n        \"CalculatedValueUOM\",\r\n        \"FlowRate\",\r\n        \"NetStartTotalizer\",\r\n        \"NetEndTotalizer\",\r\n        \"LeakageTotalizer\",\r\n        \"DriverCode\",\r\n        \"VapourGrossQuantity\",\r\n        \"VapourNetQuantity\",\r\n        \"LoadingArmCode\",\r\n        \"PresetQuantity\",\r\n        \"ResetQuantity\",\r\n        \"Remarks\"\r\n      )\r\n    )\r\n      thirdRow = [data];\r\n\r\n    return Array.isArray(secondRow) && secondRow.length > 0 ? (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable data={secondRow}>\r\n          {!nonConfigColumns.includes(\"productdensity\") ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"productdensity\"\r\n              field=\"productdensity\"\r\n              header={t(\"LoadingDetails_ProductDensity\")}\r\n              editable={false}\r\n            ></DataTable.Column>\r\n          ) : null}\r\n          {!nonConfigColumns.includes(\"weightinair\") ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"weightinair\"\r\n              field=\"weightinair\"\r\n              header={t(\"LoadingDetails_WeightInAir\")}\r\n              editable={false}\r\n            />\r\n          ) : null}\r\n          {!nonConfigColumns.includes(\"weightinvacuum\") ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"weightinvacuum\"\r\n              field=\"weightinvacuum\"\r\n              header={t(\"LoadingDetails_WeightInVacuum\")}\r\n              editable={false}\r\n            ></DataTable.Column>\r\n          ) : null}\r\n          {!nonConfigColumns.includes(\"metercode\") ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"metercode\"\r\n              field=\"metercode\"\r\n              header={t(\"LoadingDetails_MeterCode\")}\r\n              editable={false}\r\n            />\r\n          ) : null}\r\n          {!nonConfigColumns.includes(\"starttotalizer\") ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"starttotalizer\"\r\n              field=\"starttotalizer\"\r\n              header={t(\"LoadingDetails_StartTotalizer\")}\r\n              editable={false}\r\n            ></DataTable.Column>\r\n          ) : null}\r\n          {!nonConfigColumns.includes(\"endtotalizer\") ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"endtotalizer\"\r\n              field=\"endtotalizer\"\r\n              header={t(\"LoadingDetails_EndTotalizer\")}\r\n              editable={false}\r\n            />\r\n          ) : null}\r\n          {!nonConfigColumns.includes(\"starttime\") ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"starttime\"\r\n              field=\"starttime\"\r\n              header={t(\"LoadingDetails_StartTime\")}\r\n              editable={false}\r\n            ></DataTable.Column>\r\n          ) : null}\r\n          {!nonConfigColumns.includes(\"endtime\") ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"endtime\"\r\n              field=\"endtime\"\r\n              header={t(\"LoadingDetails_EndTime\")}\r\n              editable={false}\r\n            />\r\n          ) : null}\r\n          {!nonConfigColumns.includes(\"temperature\") ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"temperature\"\r\n              field=\"temperature\"\r\n              header={t(\"LoadingDetails_Temperature\")}\r\n              editable={false}\r\n            ></DataTable.Column>\r\n          ) : null}\r\n          {!nonConfigColumns.includes(\"pressure\") ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"pressure\"\r\n              field=\"pressure\"\r\n              header={t(\"LoadingDetails_Pressure\")}\r\n              editable={false}\r\n            />\r\n          ) : null}\r\n        </DataTable>\r\n        {thirdRow.map((item) => {\r\n          return (\r\n            <>\r\n              <DataTable data={item}>\r\n                {!nonConfigColumns.includes(\"CalculatedGross\") ? (\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"CalculatedGross\"\r\n                    field=\"CalculatedGross\"\r\n                    header={t(\"LoadingDetails_CalculatedGross\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                ) : null}\r\n                {!nonConfigColumns.includes(\"CalculatedNet\") ? (\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"CalculatedNet\"\r\n                    field=\"CalculatedNet\"\r\n                    header={t(\"LoadingDetails_CalculatedNet\")}\r\n                    editable={false}\r\n                  />\r\n                ) : null}\r\n                {!nonConfigColumns.includes(\"CalculatedValueUOM\") ? (\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"CalculatedValueUOM\"\r\n                    field=\"CalculatedValueUOM\"\r\n                    header={t(\"LoadingDetails_CalculatedValueUOM\")}\r\n                    editable={false}\r\n                  />\r\n                ) : null}\r\n                {!nonConfigColumns.includes(\"FlowRate\") ? (\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"FlowRate\"\r\n                    field=\"FlowRate\"\r\n                    header={t(\"LoadingDetails_FlowRate\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                ) : null}\r\n                {!nonConfigColumns.includes(\"NetStartTotalizer\") ? (\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"NetStartTotalizer\"\r\n                    field=\"NetStartTotalizer\"\r\n                    header={t(\"LoadingDetails_NetStartTotalizer\")}\r\n                    editable={false}\r\n                  />\r\n                ) : null}\r\n                {!nonConfigColumns.includes(\"NetEndTotalizer\") ? (\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"NetEndTotalizer\"\r\n                    field=\"NetEndTotalizer\"\r\n                    header={t(\"LoadingDetails_NetEndTotalizer\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                ) : null}\r\n                {!nonConfigColumns.includes(\"LeakageTotalizer\") ? (\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"LeakageTotalizer\"\r\n                    field=\"LeakageTotalizer\"\r\n                    header={t(\"LoadingDetails_LeakageTotalizer\")}\r\n                    editable={false}\r\n                  />\r\n                ) : null}\r\n                {!nonConfigColumns.includes(\"DriverCode\") ? (\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"DriverCode\"\r\n                    field=\"DriverCode\"\r\n                    header={t(\"LoadingDetails_DriverCode\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                ) : null}\r\n                {!nonConfigColumns.includes(\"VapourGrossQuantity\") ? (\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"VapourGrossQuantity\"\r\n                    field=\"VapourGrossQuantity\"\r\n                    header={t(\"LoadingDetails_VapourGrossQuantity\")}\r\n                    editable={false}\r\n                  />\r\n                ) : null}\r\n              </DataTable>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    ) : (\r\n      <div className=\"compartmentIcon\">\r\n        <div className=\"gridButtonAlignLeft\">\r\n          {t(\"CustomerInventory_NoRecordsFound\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"detailsContainer\">\r\n        <div className=\"row\">\r\n          <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n            <h3>\r\n              {t(\"ViewShipment_ViewLoadingDetails\") + \" : \" + ShipmentCode}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"row marginRightZero tableScroll\">\r\n          <div className=\"col-12 detailsTable\">\r\n            <DataTable\r\n              data={modLoadingDetails.Table}\r\n              scrollable={true}\r\n              rowExpansionTemplate={rowExpansionTemplate}\r\n              scrollHeight=\"320px\"\r\n              expandedRows={expandedRows}\r\n            >\r\n              {!nonConfigColumns.includes(\"trailercode\") ? (\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"trailercode\"\r\n                  field=\"trailercode\"\r\n                  header={t(\"TrailerList_Code\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              ) : null}\r\n              {!nonConfigColumns.includes(\"compartmentcode\") ? (\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"compartmentcode\"\r\n                  field=\"compartmentcode\"\r\n                  header={t(\"ShipmentCompDetail_wcCompartmentCode\")}\r\n                  editable={false}\r\n                ></DataTable.Column>\r\n              ) : null}\r\n              {!nonConfigColumns.includes(\"CompartmentSeqNoInVehicle\") ? (\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  header={t(\"LoadingDetailsEntry_CompSeqNo\")}\r\n                  field={\"CompartmentSeqNoInVehicle\"}\r\n                  key={\"CompartmentSeqNoInVehicle\"}\r\n                  editable={false}\r\n                ></DataTable.Column>\r\n              ) : null}\r\n              {!nonConfigColumns.includes(\"productcode\") ? (\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"productcode\"\r\n                  field=\"productcode\"\r\n                  header={t(\"ProductAllocation_Product_Code\")}\r\n                  editable={false}\r\n                ></DataTable.Column>\r\n              ) : null}\r\n              {!nonConfigColumns.includes(\"loadingdetailstype\") ? (\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  header={t(\"LoadingDetails_LoadingDetailsType\")}\r\n                  editable={false}\r\n                  field={\"loadingdetailstype\"}\r\n                  key={\"loadingdetailstype\"}\r\n                ></DataTable.Column>\r\n              ) : null}\r\n              {!nonConfigColumns.includes(\"tankcode\") ? (\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  header={t(\"LoadingDetails_TankCode\")}\r\n                  editable={false}\r\n                  field={\"tankcode\"}\r\n                ></DataTable.Column>\r\n              ) : null}\r\n              {!nonConfigColumns.includes(\"baycode\") ? (\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  header={t(\"LoadingDetails_BayCode\")}\r\n                  editable={false}\r\n                  field={\"baycode\"}\r\n                ></DataTable.Column>\r\n              ) : null}\r\n              {!nonConfigColumns.includes(\"bcucode\") ? (\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  header={t(\"LoadingDetails_BCUCode\")}\r\n                  editable={false}\r\n                  field={\"bcucode\"}\r\n                ></DataTable.Column>\r\n              ) : null}\r\n              {!nonConfigColumns.includes(\"grossquantity\") ? (\r\n                <DataTable.Column\r\n                  key={\"grossquantity\"}\r\n                  className=\"compColHeight colminWidth\"\r\n                  header={t(\"LoadingDetails_GrossQuantity\")}\r\n                  editable={false}\r\n                  field={\"grossquantity\"}\r\n                ></DataTable.Column>\r\n              ) : null}\r\n              {!nonConfigColumns.includes(\"netquantity\") ? (\r\n                <DataTable.Column\r\n                  key={\"netquantity\"}\r\n                  className=\"compColHeight colminWidth\"\r\n                  header={t(\"LoadingDetails_NetQuantity\")}\r\n                  editable={false}\r\n                  field={\"netquantity\"}\r\n                ></DataTable.Column>\r\n              ) : null}\r\n              <DataTable.Column\r\n                className=\"expandedColumn\"\r\n                initialWidth=\"50px\"\r\n                renderer={expanderTemplate}\r\n              />\r\n            </DataTable>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col col-lg-8\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["TruckShipmentDetails","_ref","shipment","modShipment","modCustomValues","modCompartmentPlans","modProductPlans","modLoadingDetails","loadingDetails","validationErrors","listOptions","onFieldChange","onDateTextChange","onAllTerminalsChange","selectedProductPlans","selectedCompartmentPlans","handleCompartmentPlansSelectionChange","handleProductPlansSelectionChange","handleCompartmentPlanCellDataEdit","handleProductPlanCellDataEdit","handleAddCompartmentPlan","handleDeleteCompartmentPlan","handleAddProductPlan","handleDeleteProductPlan","onActiveStatusChange","onVehicleChange","onVehicleSearchChange","onDriverSearchChange","isEnterpriseNode","shipmentType","prodTypeTab","compTypeTab","LoadTypeTab","customerInventoryTab","expandedRows","toggleExpand","attributeValidationErrors","handleAttributeCellDataEdit","handleCompAttributeCellDataEdit","handleProdPlanAttributeCellDataEdit","selectedAttributeList","compartmentDetailsPageSize","attributeToggleExpand","customerInventory","activeTab","onTabChange","handleTopUpDecantApproval","isSlotbookinginUI","productAllocationTab","handleCellCheck","handleLoadingDetailsChange","productAllocationList","productShareholderAllocationList","ProdAllocEntity","ddlTopUpDecantStatus","isMarineTransloading","isRailTransloading","isPlanned","updateTransloadingInfo","handleTransLoadCompSeq","shipmentSource","isAutoGeneratedShipmentCode","isEnforcingEnabled","isBonded","overrideSequence","isOverrideSequenceButtonEnabled","updateShipmentBondNo","updateShipmentAllowed","ShipmentBay","UpdateShipmentDriver","isWebportalCarrierRoleUser","t","useTranslation","modelOpen","setModelOpen","useState","modCellData","setModCellData","modTopUpEnable","setModTopUpEnable","Constants","SUBMITTED","submitBtnName","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","handleAttributeType","data","attribute","rowData","handleAttributeDateValue","dateval","chars","split","Date","DataType","toLowerCase","STRING","INT","FLOAT","LONG","DOUBLE","_jsx","Input","fluid","value","AttributeValue","disabled","IsReadonly","onChange","AttributeType","COMPARTMENT","reserveSpace","BOOL","Checkbox","checked","toString","DATETIME","DatePicker","undefined","showYearSelector","minuteStep","convertAttributeDatetoString","Dateval","getFullYear","getMonth","slice","getDate","error","console","log","handleIsRequiredCompAttributes","IsMandatory","_jsxs","children","AttributeName","class","attributeExpanderTemplate","open","findIndex","x","SeqNumber","onClick","className","Icon","root","name","attributeRowExpansionTemplate","Array","isArray","AttributesforUI","length","DataTable","rows","Column","field","header","editable","renderer","Pagination","handleCustomEditDropDown","cellData","dropDownoptions","type","Select","rowIndex","options","onFocus","indicator","search","noResultsMessage","handleCustomerEditDropDown","customerOptions","customerDestinationOptions","Object","keys","forEach","customer","push","text","handleDestinationEditDropDown","destinationOptions","CustomerCode","destination","handleCustomEditTextBox","decimalDisplayValues","toLocaleString","expanderTemplate","handleForceComplete","chkForceCompleted","Compartment_Status","Status","CLOSED","COMPLETED","LOADING","FORCE_COMPLETED","EnableChkForceCompleted","Force_Complete","handleInputTextBox","topUpdecantedComps","Table","filter","item","TopUpDecantQuantity","PARTIALLY_LOADED","MANUALLY_LOADED","AUTO_LOADED","PART_FILLED","OVER_FILLED","rowExpansionTemplate","compData","BaseProductDetails","map","itemList","_Fragment","AdditiveProductDetails","ShipmentCode","label","ScheduledDate","displayFormat","getCurrentDateFormat","disablePast","onTextChange","placeholder","VehicleCode","vehicleOptions","onSearch","CarrierCode","style","display","justifyContent","DriverCode","getOptionsWithSelect","driverOptions","READY","Tooltip","content","element","Button","size","position","event","hoverable","fnSBC","TransloadSourceType","Utilities","transloadingOptions","ShipmentQuantityUOM","quantityUOMOptions","Description","CreatedFromEntity","shipmentFromOptions","PlannedTripNo","width","float","IsPriority","IsBonded","ShipmentBondNo","VehicleAccessCard","ShipmentType","PRODUCT","TopUpDecantStatusText","topUpDecantOptions","ForceClosureReason","ForceClosed","fontWeight","SlotBooked","getBlendSpecData","blendSpec","idx","_modLoadingDetails$id","_modLoadingDetails$id2","compStatus","_modLoadingDetails$id3","_modLoadingDetails$id4","_modLoadingDetails$id5","_modLoadingDetails$id6","_modLoadingDetails$id7","_modLoadingDetails$id8","_modLoadingDetails$id9","_modLoadingDetails$id10","EMPTY","Badge","SeqNo","BlendState","color","VehicleHSEEnabled","getVehicleHSEValue","hseStatus","hSEInpectionStatus","NOT_DONE","HSEInspectionStatus","toUpperCase","key","VehicleHSEStatus","ActualTerminalCode","multiple","Active","Remarks","AssociatedTerminals","terminalList","terminalCodes","selectedTerminal","TerminalCodes","onCheckChange","attire","ErrorBoundary","Accordion","Content","title","AttributeDetails","attributeMetaDataList","handleCellDataEdit","Tab","activeIndex","index","Pane","selectionMode","selection","onSelectionChange","scrollable","scrollHeight","handleIsRequiredCompartmentCell","editFieldType","customEditRenderer","celldata","contractCodeOptions","orderCodeOptions","finishedProductOptions","initialWidth","compSeqOptions","marineReceiptCodes","marineReceiptCompCodes","textAlign","includes","Modal","Footer","defaultProps","isDisableSubmitForApproval","TruckShipmentTrailerDetails","trailerDetails","handleBack","compAttributes","handleclick","att","toLocaleDateString","shipmentTrailerInfo","TrailerName","TrailerCode","TareWeight","MaxLoadableWeight","MaxLoadableVolume","shipmentTrailerTWInfoList","shipmentTrailerWBInfoList","TruckShipmentDetailsComposite","Component","constructor","_this","arguments","this","state","staticLoadingDetails","vehicleDetails","carrierCode","vehicleCompartments","modVehicleDetails","shipmentValidationDef","isReadyToRender","saveEnabled","vehicleSearchOptions","driverSearchOptions","compAttributeMetaDataList","prodCompAttributeMetaDataList","trailerCompAttributeMetaDataList","compAttributeValidationErrors","prodCompAttributeValidationErrors","shipmentNextOperations","currentShipmentStatuses","isValidationPassed","isManualEntry","isVolumeBased","props","isViewAuditTrail","isViewTrailerDetails","auditTrailList","modAuditTrailList","trailers","selectedShipTrailerAttributeList","selectedCompAttributes","isViewLoadingDetails","modViewLoadingDetails","loadingExpandedRows","nonConfigColumns","isSealCompartments","sealCompartments","isRecordWeight","recordWeightList","weighBridgeCode","scadaValue","allowOutofRangeTW","isCloseShipment","isVehicleCrippled","isNotRevised","NONE","REQUEST_APPROVE","REQUEST_REJECT","ordertCodeOptions","isMarineTransLoading","drawerStatus","userDetails","EntityResult","IsWebPortalUser","otherSourceData","bondExpiryDate","isVehicleChanged","autoGeneratedCode","isVehicleBonded","vehicleBondPopUp","vehicleBondExpiryPopUp","stockProducts","isLoadingDetailsChanged","truckShipmentKPIList","vehicleForRecordWeight","isLadenWeightValid","ladenWeightError","tempShipment","showShipmentAuthenticationLayout","showAuthorizeToLoadAuthenticationLayout","showAllowToLoadAuthenticationLayout","showCloseShipmentAuthenticationLayout","showViewBOLAuthenticationLayout","showPrintBOLAuthenticationLayout","showFANAuthenticationLayout","isAllocateBay","bayData","selectBay","isDeAllocateBay","handleChange","propertyName","lodash","setState","terminalSelectionChange","getMarineTransloadableReceipts","getMarineReceipt","commonCode","keyCode","KeyCodes","MARINE","obj","ShareHolderCode","selectedShareholder","keyDataCode","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","compCodes","RailMarineReceiptCompartmentDetailPlanList","IsTransloading","CompartmentSeqNoInVehicle","catch","newVal","vc","vehCompSeq","SFL","trailerCode","compCode","getSiteConfigurationLookUP","siteConfiguration","getWeighBridge","ErrorList","handleSaveShipment","createShipment","updateShipment","handleSave","enableSave","ShipmentUpdateAllow","FunctionsList","functionGroups","modify","saveShipment","fnSBP","DisableLoadingDetails","handleVehicleChange","vehicleCode","getVehicle","handleDriverSearchChange","driverCode","handleVehicleSearchChange","expandedRowIndex","splice","loadingToggleExpand","isTerminalAdded","Code","RecordTareWeight","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","getShipment","Common_Code","onSaved","getScadaValue","toast","NotifyEvent","notificationMessage","autoClose","printBOL","handlePrintBOL","handleAuthenticationClose","printFAN","handlePrintFAN","allowToLoad","handleAllowToLoad","confirmAllowToLoad","TranslationConsumer","confirmDeAllocateBay","DeAllocateBay","confirmRecordLadenWeight","RecordLadenWeight","confirmVehicleBond","confirmBondedStockProducts","confirmVehicleBondExpiryDate","handleRecordWeight","flexWrap","handleStatus","e","INTERRUPTED","closeShipment","handleShipmentClose","entity","formTopUpDecantRequest","Entity","confirmAllocateBay","showHeader","PageAttibutes","WebPortalListPageSize","resizableColumns","AllocateBay","BayCode","actionName","buttonName","UpdateShipmentCompartmentInfo","ApproveTopUpDecant","handleCloseShipmentModal","reasonForClosure","disbaled","authorizeToLoad","handleAuthorizeToLoad","handleOperationClick","operation","getTrailerDetails","ViewShipment_AuthorizeLoad","ViewShipment_AllowToLoad","Planned_Quantity","Revised_Planned_Quantity","ManualEntry","ViewShipment_RecordWeight","getRecordWeightList","ViewShipment_CloseShipment","ViewShipmentStatus_PrintFAN","ViewShipmentStatus_PrintBOL","ViewShipmentStatus_ViewBOL","viewBOL","ViewAllShipment_SendBOL","handleSendBOL","ViewAllShipment_BSIOutbound","handleBSIOutbound","ViewShipment_ViewAuditTrail","shipType","handleViewAuditTrail","SHIPMENTSTATUSTIME","i","UpdatedTime","toLocaleTimeString","formReadonlyCompAttributes","Attributes","ViewShipment_ViewLoadingDetails","handleViewLoadingDetails","count","seqNo","endtime","starttime","productcode","join","Table1","NonConfiguredColumns","ViewAllShipment_SealCompartments","handleSealCompartments","getBays","products","ShipmentCompartments","FinishedProductCode","bayAllocation","SupportedProducts","ele","AssociatedProduct","handleAttributeDataEdit","DefaultValue","compAttribute","compIndex","compSequenceNo","handleTabChange","exIndex","UpdateShipmentBondNo","handleOverrideShipmentSequence","handleUpdateShipmentTransloading","compartments","getShipmentDestinationCompartmentsFromModCompartmentPlans","handleReset","getShipmentCompartmentFromShipment","getShipmentDetailsFromShipment","vehicleCompartment","IsEnterpriseNode","handleResetAttributeValidationError","localNodeAttribute","handleAllTerminalsChange","IsArchived","newCompartmentPlan","CompartmentCode","CompartmentSeqNoInTrailer","Quantity","UOM","OrderCode","ContractCode","DestinationCode","ShareholderCode","SHIPMENTDESTINATIONCOMPARTMENT","formCompartmentPlanAttributes","newProductPlan","formProductPlanAttributes","association","cindex","associations","handleDateTextChange","handleActiveStatusChange","onBack","handleDrawer","handleSealClose","handleViewBOL","getShipmentStatusOperations","nextOperations","getShipmentStatuses","shipmentRow","selectedTerminals","attributesTerminalsList","SHIPMENT","existitem","attributeMetaData","Attributevalue","trailerAttribute","valueAttribute","ListOfAttributeData","AttributeCode","prodPlanAttributeMetaDataList","SHIPMENTDETAILS","attributes","attTerminal","some","selTerminal","comp","DisplayName","MinValue","MaxValue","ValidationFormat","attributesforNewComp","tempCompAttributes","attData","tempAttIndex","assignedAttributes","fillAttributeDetails","attributeList","det","ShipmentDestinationCompartmentsInfo","shipmentCompartment","terminalAttributes","termAtt","ShipmentDetailsInfo","shipmentDetail","componentWillReceiveProps","nextProps","GetViewAllShipmentCustomData","selectedRow","shipmentCompartments","AssociatedOrderItems","OrderItemQuantity","QuantityUOM","AssociatedContractItems","ContractItemQuantity","TransReceiptCode","TransCompSequenceNumber","getShipmentDetailsFromModProductPlans","shipmentDetails","shipDetail","ItemExists","iOrderTrack","asoinfo","iContractTrack","getTarnsloadingDetails","MarineEnable","RAILEnable","getLookUpData","shipmentCode","allocationEntity","AllocationEntity","getProductAllocationDetails","bonded","ROAD","dsProductAllocationItems","prodAlloc","startdate","enddate","allocatedqty","uom","blockedqty","loadedqty","validateSave","ConvertstringToDecimal","sc","sd","returnValue","values","every","Set","a","Order","err","shipOrder","Contract","shipmentCompartmentValidationDef","col","validator","displayName","errMsg","shipDetailNumber","shipmentProductValidationDef","updatedAttributes","uIAttributes","selAttribute","isPresent","componentDidMount","getAttributes","GetUOMList","getVehicleCodes","getDriverCodes","getFinishedProductCodes","getcustomerDestinationList","getContractCodes","getOrderCodes","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","GetVehicleTrCmptDetailsForShipment","enableEnforcing","EnforceSequencing","BondExpiryDate","vehicleChanged","CarrierCompanyCode","getCompartmentDetailsFromVehicle","getShipmentCompartmentFromVehicleCompartment","trailerCompSeq","sort","b","shipmentSourceFromSummary","j","compItems","ContractItems","OrderItems","cusCode","RemainingQuantity","shipmentSourceDetails","shipmentSourceCompartmentItems","vehicleInfo","seqNum","VehicleTrailers","TrailerSeq","vehicleTrailer","Trailer","Compartments","trailerCompartment","Capacity","getLoadingDetails","formLoadingCompartments","getLadenWeightData","RegisteredTareWeight","VehicleWeightUOM","WeightUOM","Weight","trailerWeighData","ValidateLadenWeight","IsLocalConnected","CustomerInventory","getCustomerInventory","add","cus","GrossActualQuantity","PlannedQuantity","shipmentTrailerAttribute","SHIPMENTTRAILER","shipmentWBAttribute","SHIPMENTTRAILERWEIGHBRIDGE","formReadOnlyAttributes","filledAttribute","compAtt","selAtt","loadingTables","noOfSignificantDigits","CustomValues","compartmentDetails","TotalQuantity","loadedquantity","adjustedquantity","compartmentuom","loadedquantity_volume","adjustedquantity_volume","volumeuom","LeftQuantity","revisedplannedquantity","plannedquantity","Table2","baseProductDetails","trailercode","baseList","baseProduct","finishedproductid","FinishedProductID","shipmentcompartmentid","advProduct","baseproductid","Trailer_Code","Compartment_Code","compartmentcode","compartmentstatus","Finished_Product","finishedproductcode","Loaded_Quantity","Math","round","Left_Quantity","Adjust_Plan","AdjustmentToPlannedQuantity","Top_Up_Decant_Quantity","Top_Up_Decant_Quantity_Status","TopUpDecantStatus","Compartment_UOM","Notes","ShipmentID","CompartmentID","ShipmentCompID","seqno","blendstate","weighBridge","ladenWeighData","minLadenWeightTolerance","MinLadenweightQuantityTolerance","maxLadenWeightTolerance","MaxLadenweightQuantityTolerance","minLadenWeightTol","maxLadenWeightTol","isNaN","parseFloat","bayCode","entityType","ResultDataList","GetBayByTrnsaction","TrnsactionCode","TrnsactionType","shareholder","formCompartmentDetailsRequest","topUpDecantApprovalStatus","topUpDecantEnabled","listShipmentCompartmentInfo","listShipmentLoadingCompData","validateResult","ValidateTopUpDecant","isValid","TopUpRequest","AUTO_APPROVED","dTopUpQty","dLeftQty","dTotalQty","dMTQ","sLeftQty","sTotalQty","matchLeft","trim","matchTotal","abs","ViewAllTruckShipmentLoadingDetails","ddlTopUpDecantApprovalStatus","isAdjustedFP","EnableTopUpDecant","bForceCompChecked","ShipmentLoadingCmptData","AdjustQuantity","ForceCompleted","Density","DensityUOM","isUpdated","ShipmentCompartmentID","topUpRequest","APPROVED","REJECTED","strStatus","strSource","strLastUpdatedBy","Firstname","LastName","strTopUpDecCompartmentStatus","shcompTopUpDecant","Comments","CreatedBy","CreatedTime","LastUpdatedBy","LastUpdatedTime","shipmentCompartmentinfo","ShipmentCompartmentStatus","ShipmentCompartmentTopUpDecantingInfo","dTopUpDec","strComments","DecanQty","GetAutoGeneratedShipmentCode","notificationShipment","emptyShipment","DefaultQtyUOMForTransactionUI","functionGroup","getCompartmentFromOtherSource","selectedSourceCode","IsVolumeBased","getKPIList","items","shCode","code","keyData","Key","Value","VOLUME","MASS","massUOM","shareholderCustomers","shareholderCust","CustomerDestinationsList","getDriverSearchOptions","modDriverCode","getVehicleSearchOptions","modVehicleCode","view","fnKPIInformation","objKPIRequestData","PageName","kpiTruckShipmentDetail","TransportationType","InputParameters","ListKPIDetails","getFunctionGroupName","fnCloseShipment","fnShipmentStatus","fnPrintBOL","fnPrintFAN","getAddorEditMode","handleOperation","render","popUpContents","fieldName","fieldValue","LastActiveTime","shipmentFrom","customValue","IsShipmentCreateFromNoneAllowed","nOrderExists","nContractExists","None","TMDetailsHeader","entityCode","newEntityName","TruckShipmentViewAuditTrailDetails","TruckShipmentViewLoadingDetails","TruckShipmentManualEntryDetailsComposite","TMDetailsKPILayout","KPIList","searchResults","ShowSlotBookedInUI","fnOverrideShipmentSeq","isBondButtonenabled","RoleName","TMDetailsUserActions","TransactionSummaryOperations","selectedItem","handleOperationButtonClick","currentStatuses","unAllowedOperations","webPortalAllowedOperations","isDetails","isWebPortalUser","TruckShipmentSealDetailsComposite","transactionCode","UserAuthenticationLayout","Username","UserName","functionName","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","updateSealCompartments","sealCompList","SealNo","CompNo","sealCompValidationDef","handleSealNoInput","cellInfo","isNodeEnterpriseOrWebortal","validationError","driverName","DRIVERNAME","DRIVERCODE","formatter","engine","cls","fontSize","val","ShipmentStatus","Shipment_Status","CHECKED_IN","QUEUED","DE_QUEUED","WEIGHED_IN","WEIGHED_OUT","USER_DEFINED","ASSIGNED","CANCELLED","EXPIRED","id","wjChart","itemsSource","chartType","bindingX","palette","minWidth","height","wjProperty","majorUnit","max","min","itemFormatter","axisLine","binding","el","window","document","getElementById","innerHTML","iframe","createElement","doc","body","appendChild","contentWindow","str1","substring","indexOf","str2","write","close","focus","print","setTimeout","removeChild","wjcCore","secondRow","thirdRow"],"sourceRoot":""}