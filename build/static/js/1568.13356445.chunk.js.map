{"version":3,"file":"static/js/1568.13356445.chunk.js","mappings":"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","sources":["Components/UIBase/Common/HSEInspectionDrawer.jsx","Components/UIBase/Details/HSEInspectionDetails.jsx","Components/Composite/Details/HSEInspectionDetailsComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Icon, Checkbox, Input } from \"@scuf/common\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\n\r\nclass HSEInspectionDrawer extends Component {\r\n  state = {\r\n    isFolded: false\r\n  }\r\n\r\n  switchFold = () => {\r\n    this.setState({\r\n      isFolded: !this.state.isFolded\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let headerClass = \"hse-inspection-drawer-header\";\r\n    if (this.props.status === Constants.HSEInspectionStatus.PASS) {\r\n      headerClass += \" hse-inspection-drawer-header-pass\";\r\n    } else if (this.props.status === Constants.HSEInspectionStatus.FAIL) {\r\n      headerClass += \" hse-inspection-drawer-header-failure\";\r\n    }\r\n\r\n    const itemList = [];\r\n    for (let item of this.props.inspectedItems) {\r\n      itemList.push(\r\n        <TranslationConsumer key={item.ID}>\r\n          {(t) => (\r\n            <div className=\"hse-inspection-drawer-question\">\r\n              <div className={`hse-inspection-drawer-question-severity \r\n              ${item.Severity === \"0\" ? \"severity-0\" : \"severity-1\"}`}></div>\r\n              <div className=\"hse-inspection-drawer-question-block-1\">\r\n                <Checkbox\r\n                  checked={item.Status}\r\n                  onChange={(checked) => this.props.onChange(item.ID, \"Status\", checked)}\r\n                  disabled={!this.props.isEditable}\r\n                />\r\n              </div>\r\n              <div className={\"hse-inspection-drawer-question-block-2\" + \r\n                (item.LastUpdatedTime === \"\" ? \" hse-inspection-drawer-question-block-2-no-time\" : \"\")}>\r\n                <div>{item.LocalizedText}</div>\r\n                <Input\r\n                  placeholder={t(\"Vehicle_Remarks\")}\r\n                  value={item.Remarks}\r\n                  onChange={(data) => this.props.onChange(item.ID, \"Remarks\", data)}\r\n                  disabled={!this.props.isEditable}\r\n                />\r\n              </div>\r\n              {item.LastUpdatedTime === \"\" ? null : (\r\n                <div className=\"hse-inspection-drawer-question-block-3\">\r\n                  <div className=\"hse-inspection-drawer-question-last-updated\">\r\n                    <Icon root=\"Common\" name=\"calendar\" size=\"large\"/>\r\n                  </div>\r\n                  <div className=\"hse-inspection-drawer-question-last-updated\">\r\n                    <div>{t(\"Common_LastUpdated\")}</div>\r\n                    <div>{new Date(item.LastUpdatedTime).toLocaleString()}</div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </TranslationConsumer>\r\n      );\r\n    }\r\n\r\n    let iconClass;\r\n    switch (this.props.transportationType) {\r\n      case Constants.TransportationType.ROAD:\r\n        iconClass = \" icon-Road\";\r\n        break;\r\n      case Constants.TransportationType.MARINE:\r\n        iconClass = \" icon-Marine\";\r\n        break;\r\n      case Constants.TransportationType.RAIL:\r\n        iconClass = \" icon-Rail\";\r\n        break;\r\n      case Constants.TransportationType.PIPELINE:\r\n        iconClass = \" icon-Pipeline\";\r\n        break;\r\n      default:\r\n        iconClass = \"\";\r\n    }\r\n\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div>\r\n            <div className={headerClass}>\r\n              <span className={`hse-inspection-drawer-header-icon${iconClass}`} root=\"common\"></span>\r\n              <span className=\"hse-inspection-drawer-header-text\">{this.props.title + \" HSE Inspection\"}</span>\r\n              <div className=\"hse-inspection-drawer-header-button\" onClick={this.switchFold}>\r\n                <Icon\r\n                  root=\"Building\"\r\n                  name={this.state.isFolded ? \"caret-down\" : \"caret-up\"}\r\n                  size=\"large\"\r\n                />\r\n              </div>\r\n            </div>\r\n            {this.state.isFolded ? null : (\r\n              <div className=\"hse-inspection-drawer-content\">\r\n                {itemList}\r\n                {/* <div style={{marginTop: \"1rem\"}}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    content={t(\"VehHSE_Pass\")}\r\n                    disabled={!this.props.isEditable}\r\n                    onClick={() => this.props.handleUpdate(1, false)}\r\n                  />\r\n                  <Button\r\n                    type=\"primary\"\r\n                    content={t(\"VehHSE_Fail\")}\r\n                    disabled={!this.props.isEditable}\r\n                    onClick={() => this.props.handleUpdate(2, false)}\r\n                  />\r\n                </div> */}\r\n              </div>\r\n            )}\r\n            <div className=\"hse-inspection-drawer-footer\"></div>\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HSEInspectionDrawer;","import React from \"react\";\r\nimport { Select, Input, Button, Accordion } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport HSEInspectionDrawer from \"../Common/HSEInspectionDrawer\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport {\r\n  getOptionsWithSelect,\r\n} from \"../../../JS/functionalUtilities\";\r\n\r\nexport function HSEInspectionDetails(\r\n  {\r\n  HSEInspection,\r\n  modHSEInspection,\r\n  modAssociations,\r\n  validationErrors,\r\n  modAttributeList,\r\n  attributeValidationErrors,\r\n  handleCellDataEdit,\r\n  listOptions,\r\n  cardReader,\r\n  railWagon,\r\n  roadTransportationUnit,\r\n  onFieldChange,\r\n  onInspectionItemChange,\r\n  onDetectVehicle,\r\n  onCancelDetect,\r\n  transportationType,\r\n  dispatchReceiptLabel,\r\n  isManualEntry,\r\n  handleUpdate,\r\n  displayTransportationUnit,\r\n  onDispatchReceiptSearchChange,\r\n  handleOpenAttachmentsModal,\r\n  numberOfAttachments,\r\n  onVehicleSearchChange,\r\n  \r\n}) \r\n{\r\n  let hseInspectionItemTitle;\r\n  if (transportationType === Constants.TransportationType.ROAD || \r\n    transportationType === Constants.TransportationType.MARINE) {\r\n    hseInspectionItemTitle = modHSEInspection.VehicleCode;\r\n  } else {\r\n    hseInspectionItemTitle = modHSEInspection.DispatchReceiptCode;\r\n  }\r\n\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find((selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n    })\r\n    return attributeValidation.attributeValidationErrors;\r\n}\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                indicator=\"required\"\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"HSE_TransactionType\")}\r\n                value={modHSEInspection.TransactionType}\r\n                onChange={(data) => onFieldChange(\"TransactionType\", data)}\r\n                error={t(validationErrors.TransactionType)}\r\n                options={listOptions.transactionType}\r\n                reserveSpace={false}\r\n                disabled={HSEInspection.OverAllHSEInspectionStatus !== null || isManualEntry === false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            {transportationType === Constants.TransportationType.PIPELINE ? null : (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  indicator=\"required\"\r\n                  placeholder={t(\"Common_Select\")}\r\n                  label={t(\"PrinterConfig_LocationCode\")}\r\n                  value={modHSEInspection.LocationCode}\r\n                  onChange={(data) => onFieldChange(\"LocationCode\", data)}\r\n                  error={t(validationErrors.LocationCode)}\r\n                  options={listOptions.locationCode}\r\n                  reserveSpace={false}\r\n                  disabled={HSEInspection.OverAllHSEInspectionStatus !== null}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                />\r\n              </div>\r\n            )}\r\n            {transportationType === Constants.TransportationType.ROAD ? (\r\n              <>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                  <Select\r\n                    fluid\r\n                    placeholder={t(\"Common_Select\")}\r\n                    label={t(\"CardReader_Title\")}\r\n                    value={cardReader}\r\n                    onChange={(data) => onFieldChange(\"CardReader\", data)}\r\n                    error={t(validationErrors.CardReader)}\r\n                    options={listOptions.cardReaderCode}\r\n                    reserveSpace={false}\r\n                    disabled={\r\n                      HSEInspection.OverAllHSEInspectionStatus !== null || \r\n                      isManualEntry === false ||\r\n                      listOptions.cardReaderCode.length === 0\r\n                    }\r\n                    noResultsMessage={t(\"noResultsMessage\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                  <Button\r\n                    className=\"hse-inspection-card-reader-button\"\r\n                    content={t(\"VehHSE_DetectVehicle\")}\r\n                    disabled={\r\n                      HSEInspection.OverAllHSEInspectionStatus !== null || \r\n                      isManualEntry === false ||\r\n                      listOptions.cardReaderCode.length === 0\r\n                    }\r\n                    onClick={onDetectVehicle}\r\n                  />\r\n                  <Button\r\n                    className={\r\n                      (\r\n                        HSEInspection.OverAllHSEInspectionStatus !== null || \r\n                        isManualEntry === false ||\r\n                        listOptions.cardReaderCode.length === 0\r\n                      ) ? \r\n                      \"hse-inspection-card-reader-button\" : \"hse-inspection-card-reader-button cancelButton\"\r\n                    }\r\n                    content={t(\"LookUpInfo_Cancel\")}\r\n                    disabled={\r\n                      HSEInspection.OverAllHSEInspectionStatus !== null || \r\n                      isManualEntry === false ||\r\n                      listOptions.cardReaderCode.length === 0\r\n                    }\r\n                    onClick={onCancelDetect}\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : null}\r\n            {transportationType === Constants.TransportationType.ROAD || \r\n              transportationType === Constants.TransportationType.MARINE ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  indicator=\"required\"\r\n                  placeholder={t(\"Common_Select\")}\r\n                  label={t(transportationType === Constants.TransportationType.MARINE ? \r\n                    \"Vessel_Code\" : \"Vehicle_Code\")}\r\n                  value={modHSEInspection.VehicleCode}\r\n                  onChange={(data) => onFieldChange(\"VehicleCode\", data)}\r\n                  error={t(validationErrors.VehicleCode)}\r\n                  options={listOptions.vehicleCode}\r\n                  reserveSpace={false}\r\n                  disabled={HSEInspection.OverAllHSEInspectionStatus !== null || isManualEntry === false}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                  search={true}\r\n                  onSearch={onVehicleSearchChange}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                indicator={transportationType === Constants.TransportationType.RAIL || \r\n                  transportationType === Constants.TransportationType.PIPELINE ? \"required\" : \"\"}\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(dispatchReceiptLabel)}\r\n                value={modHSEInspection.DispatchReceiptCode}\r\n                onChange={(data) => onFieldChange(\"DispatchReceiptCode\", data)}\r\n                error={t(validationErrors.DispatchReceiptCode)}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.dispatchReceiptCode,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                reserveSpace={false}\r\n                disabled={HSEInspection.OverAllHSEInspectionStatus !== null || isManualEntry === false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                search={true}\r\n                onSearch={onDispatchReceiptSearchChange}\r\n              />\r\n            </div>\r\n            {transportationType === Constants.TransportationType.ROAD && \r\n            displayTransportationUnit === true ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  indicator=\"required\"\r\n                  placeholder={t(\"Common_Select\")}\r\n                  label={t(\"HSE_TransportationUnit\")}\r\n                  value={roadTransportationUnit}\r\n                  onChange={(data) => onFieldChange(\"transportationUnit\", data)}\r\n                  error={t(validationErrors.TransportationUnit)}\r\n                  options={listOptions.roadTransportationUnit}\r\n                  reserveSpace={false}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            {transportationType === Constants.TransportationType.RAIL ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  indicator=\"required\"\r\n                  placeholder={t(\"Common_Select\")}\r\n                  label={t(\"Report_WagonCode\")}\r\n                  value={railWagon}\r\n                  onChange={(data) => onFieldChange(\"railWagon\", data)}\r\n                  error={t(validationErrors.VehicleCode)}\r\n                  options={listOptions.railWagonCode}\r\n                  reserveSpace={false}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modHSEInspection.Remarks}\r\n                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                label={t(\"AccessCardInfo_Remarks\")}\r\n                error={t(validationErrors.Remarks)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Button\r\n                  className=\"hse-inspection-attachment\"\r\n                  type=\"primary\"\r\n                  content={t(\"Attachments\") + (numberOfAttachments > 0 ? ` (${numberOfAttachments})` : \"\")}\r\n                  onClick={handleOpenAttachmentsModal}\r\n                />\r\n            </div>\r\n          </div>\r\n          {\r\n                        modAttributeList.length > 0 ?\r\n                        modAttributeList.map((attribute) =>\r\n                                <ErrorBoundary>\r\n                                    <Accordion >\r\n                                        <Accordion.Content\r\n                                            className=\"attributeAccordian\"\r\n                                            title={(t(\"Attributes_Header\"))}\r\n                                        >\r\n                                            <AttributeDetails\r\n                                                selectedAttributeList={attribute.attributeMetaDataList}\r\n                                                handleCellDataEdit={handleCellDataEdit}\r\n                                                attributeValidationErrors={handleValidationErrorFilter(attributeValidationErrors, attribute.TerminalCode)}\r\n                                            ></AttributeDetails>\r\n                                        </Accordion.Content>\r\n                                    </Accordion>\r\n                                </ErrorBoundary>\r\n                            ) : null\r\n                    }\r\n          {modAssociations.length === 0 ? null : (\r\n            <HSEInspectionDrawer\r\n              title={hseInspectionItemTitle}\r\n              inspectedItems={modAssociations}\r\n              onChange={onInspectionItemChange}\r\n              isEditable={modHSEInspection.HSEInspectionStatus === 3 || \r\n                modHSEInspection.HSEInspectionStatus === null}\r\n              handleUpdate={handleUpdate}\r\n              transportationType={transportationType}\r\n              status={modHSEInspection.HSEInspectionStatus}\r\n            />\r\n          )}\r\n\r\n\r\n\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  )\r\n}","import React, { Component } from \"react\";\r\nimport { HSEInspectionDetails } from \"../../UIBase/Details/HSEInspectionDetails\";\r\n\r\nimport { HSEInspectionValidationDef } from \"../../../JS/ValidationDef\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { emptyHSEInspection } from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"./../../../Components/ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"./../../../JS/KeyCodes\";\r\nimport { functionGroups, fnHSEInspection,  fnRailHSEInspection, fnMarineHSEInspection, fnPipelineHSEInspection, fnRoadHSEInspection } from \"../../../JS/FunctionGroups\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { Button, Modal, FileDrop } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { hseInspectionShipmentRigidTruckAttributeEntity ,\r\n  hseInspectionShipmentTrailerAttributeEntity  ,              \r\n  hseInspectionShipmentPrimeMoverAttributeEntity ,            \r\n  hseInspectionShipmentNonFillingVehicleAttributeEntity  ,    \r\n  hseInspectionMarineShipmentBargeAttributeEntity ,           \r\n  hseInspectionMarineShipmentShipAttributeEntity  ,           \r\n  hseInspectionShipmentRailWagonAttributeEntity ,             \r\n  hseInspectionShipmentPipelineAttributeEntity ,              \r\n  hseInspectionReceiptRigidTruckAttributeEntity ,             \r\n  hseInspectionReceiptTrailerAttributeEntity ,                \r\n  hseInspectionReceiptPrimeMoverAttributeEntity ,             \r\n  hseInspectionReceiptNonFillingVehicleAttributeEntity,       \r\n  hseInspectionMarineReceiptBargeAttributeEntity,             \r\n  hseInspectionMarineReceiptShipAttributeEntity ,             \r\n  hseInspectionReceiptRailWagonAttributeEntity ,              \r\n  hseInspectionReceiptPipelineAttributeEntity   } from \"../../../JS/AttributeEntity\";\r\n\r\n  import UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass HSEInspectionDetailsComposite extends Component {\r\n  cardReaderTimer = null;\r\n\r\n  state = {\r\n    HSEInspection: lodash.cloneDeep(emptyHSEInspection),\r\n    modHSEInspection: {},\r\n    associations: [],\r\n    modAssociations: [],\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      HSEInspectionValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    cardReaderMap: {},\r\n    cardReaderCodeOptions: [],\r\n    cardReader: \"\",\r\n\r\n    vehicleCodeOptions: [],\r\n    vehicleTypeOptions: [],\r\n    transactionTypeOptions: [],\r\n    locationCodeOptions: [],\r\n    locationTypeMap: {},\r\n    dispatchReceiptCodeMap: {},\r\n    dispatchReceiptCodeOptions: [],\r\n    dispatchReceiptCodeSearchOptions: [],\r\n    roadTransportationUnitOptions: [],\r\n    roadTransportationUnit: \"\",\r\n    railWagonCodeOptions: [],\r\n    railWagonCarrierCompanyMap: {},\r\n    railWagon: \"\",\r\n    dispatchReceiptLabel: \"\",\r\n    isManualEntry: false,\r\n    saveEnabled: false,\r\n    passFailAllEnabled: false,\r\n    displayTransportationUnit: false,\r\n    displayOverAllInspection: false,\r\n    modalOpen: {\r\n      pass: false,\r\n      fail: false,\r\n      passAll: false,\r\n      failAll: false,\r\n      attachments: false,\r\n    },\r\n    attachments: [],\r\n    addFileEnabled: true,\r\n    attachmentFileSetting: {\r\n      FileTypesAllowedToUpload: [\r\n        \".jpeg\",\r\n        \".jpg\",\r\n        \".pdf\",\r\n        \".png\",\r\n        \".gif\",\r\n        \".xlsx\",\r\n        \".xls\",\r\n        \".docx\",\r\n        \".doc\",\r\n        \".ppt\",\r\n        \".pptx\",\r\n      ],\r\n      MaximumFileSize: 2048,\r\n      NoOfFilesAllowedToUpload: 5,\r\n    },\r\n    isOverAllInspection: false,\r\n    ReadStartTime: null,\r\n    vehicleCodeSearchOptions: [],\r\n\r\n    modAttributeList: [],\r\n   // selectedAttributeList: [],\r\n    attributeValidationErrors: [],\r\n    hseUnitInspectionType: \"\",\r\n\r\n    showAuthenticationLayout: false,\r\n    showUpdateAuthenticationLayout: false,\r\n    tempHSEInspection: {},\r\n    tempHSEInspectionStatus: 0,\r\n    tempIsOverAllInspection: false\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      this.getHSEInspectionResult(nextProps.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionDetailsComposite: Error occurred on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n    \r\n      this.setLookUpData(this.props.lookUpData);\r\n      this.getTransactionTypes();\r\n      if (\r\n        this.props.transportationType !== Constants.TransportationType.PIPELINE\r\n      ) {\r\n        this.getLocations();\r\n      }\r\n      //this.getAttributes(this.props.selectedRow);\r\n      this.getHSEInspectionResult(this.props.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionDetailsComposite: Error occurred on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\ngetAttributeEntityKey()\r\n{\r\n  let attributeKey=\"\";\r\nlet modHSEInspection= lodash.cloneDeep(this.state.modHSEInspection);\r\nif(modHSEInspection===undefined)\r\nreturn attributeKey;\r\nif(modHSEInspection.TransportationType.toUpperCase()===\"ROAD\")\r\n{\r\n  const transportationUnit = this.state.roadTransportationUnit.split(\" - \");\r\n  if(modHSEInspection.TransactionType.toUpperCase()===\"SHIPMENT\") \r\n  {\r\n    if(transportationUnit.length===0)\r\n    return attributeKey;\r\n    let tranUnit= transportationUnit[0];\r\n\r\n    if(tranUnit==='')\r\n    tranUnit=modHSEInspection.TransportationUnit;\r\n   \r\n    if(this.state.hseUnitInspectionType === \"RIGID_TRUCK\" || tranUnit=== \"RIGID_TRUCK\") \r\n    attributeKey=hseInspectionShipmentRigidTruckAttributeEntity;\r\n    else if(tranUnit=== \"TRAILER\")\r\n    attributeKey=hseInspectionShipmentTrailerAttributeEntity;\r\n    else if(tranUnit=== \"PRIMEMOVER\")\r\n    attributeKey=hseInspectionShipmentPrimeMoverAttributeEntity;\r\n    else if(tranUnit=== \"NON_FILLING_VEHICLE\")\r\n    attributeKey=hseInspectionShipmentNonFillingVehicleAttributeEntity;\r\n     \r\n  }\r\n  else if(modHSEInspection.TransactionType.toUpperCase()===\"RECEIPT\")\r\n  {\r\n    if(transportationUnit.length===0)\r\n    return attributeKey;\r\n    let tranUnit= transportationUnit[0];\r\n    \r\n    if(tranUnit==='')\r\n    tranUnit=modHSEInspection.TransportationUnit;\r\n\r\n    if(this.state.hseUnitInspectionType === \"RIGID_TRUCK\" || tranUnit=== \"RIGID_TRUCK\") \r\n    attributeKey=hseInspectionReceiptRigidTruckAttributeEntity; \r\n    else if(tranUnit=== \"TRAILER\")\r\n    attributeKey=hseInspectionReceiptTrailerAttributeEntity;\r\n    else if(tranUnit=== \"PRIMEMOVER\")\r\n    attributeKey=hseInspectionReceiptPrimeMoverAttributeEntity\r\n    else if(tranUnit=== \"NON_FILLING_VEHICLE\")\r\n    attributeKey=hseInspectionReceiptNonFillingVehicleAttributeEntity\r\n     \r\n  }\r\n}\r\nelse if(modHSEInspection.TransportationType.toUpperCase()===\"MARINE\")\r\n{\r\n  if(modHSEInspection.TransactionType.toUpperCase()===\"SHIPMENT\" || modHSEInspection.TransactionType.toUpperCase()===\"DISPATCH\")\r\n  {\r\n    if(this.state.hseUnitInspectionType===\"BARGE\" || modHSEInspection.TransportationUnitType===\"BARGE\" )\r\n    attributeKey=hseInspectionMarineShipmentBargeAttributeEntity;\r\n    else  if(this.state.hseUnitInspectionType===\"SHIP\" || modHSEInspection.TransportationUnitType===\"SHIP\")\r\n    attributeKey=hseInspectionMarineShipmentShipAttributeEntity;\r\n  }\r\n  else if(modHSEInspection.TransactionType.toUpperCase()===\"RECEIPT\")\r\n  {\r\n    if(this.state.hseUnitInspectionType===\"BARGE\" || modHSEInspection.TransportationUnitType===\"BARGE\" )\r\n    attributeKey=hseInspectionMarineReceiptBargeAttributeEntity;\r\n    else  if(this.state.hseUnitInspectionType===\"SHIP\" || modHSEInspection.TransportationUnitType===\"SHIP\")\r\n    attributeKey=hseInspectionMarineReceiptShipAttributeEntity;\r\n  }\r\n}\r\nelse if(modHSEInspection.TransportationType.toUpperCase()===\"RAIL\")\r\n{\r\n  if(modHSEInspection.TransactionType.toUpperCase()===\"SHIPMENT\" || modHSEInspection.TransactionType.toUpperCase()===\"DISPATCH\")\r\n  {\r\n    attributeKey=hseInspectionShipmentRailWagonAttributeEntity;\r\n  }\r\n  else if(modHSEInspection.TransactionType.toUpperCase()===\"RECEIPT\")\r\n  {\r\n    attributeKey=hseInspectionReceiptRailWagonAttributeEntity;\r\n  }\r\n}\r\nelse if(modHSEInspection.TransportationType.toUpperCase()===\"PIPELINE\")\r\n{\r\n  if(modHSEInspection.TransactionType.toUpperCase()===\"SHIPMENT\" || modHSEInspection.TransactionType.toUpperCase()===\"DISPATCH\")\r\n  {\r\n    attributeKey=hseInspectionShipmentPipelineAttributeEntity;\r\n  }\r\n  else if(modHSEInspection.TransactionType.toUpperCase()===\"RECEIPT\")\r\n  {\r\n    attributeKey=hseInspectionReceiptPipelineAttributeEntity;\r\n  }\r\n}\r\nreturn attributeKey;\r\n}\r\n\r\n  getAttributesMetaData() {\r\n    try {\r\n     \r\n      this.setState({\r\n        modAttributeList: [],\r\n      })\r\n\r\n      let attributeEntityKey=\"\";\r\n\r\n  attributeEntityKey=this.getAttributeEntityKey()\r\n  if( attributeEntityKey===\"\")\r\n  {\r\n   \r\n  return;\r\n  }\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [attributeEntityKey],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n           \r\n          let modHSEInspection= lodash.cloneDeep(this.state.modHSEInspection);\r\n          let modAttributeList=[];\r\n\r\n          if(attributeEntityKey===hseInspectionShipmentRigidTruckAttributeEntity )\r\n            modAttributeList= lodash.cloneDeep(result.EntityResult.HSEINSPECTIONSHIPMENTRIGIDTRUCK);\r\n          else if(attributeEntityKey===hseInspectionShipmentTrailerAttributeEntity)\r\n            modAttributeList= lodash.cloneDeep(result.EntityResult.HSEINSPECTIONSHIPMENTTRAILER);\r\n          else if(attributeEntityKey===hseInspectionShipmentPrimeMoverAttributeEntity )\r\n            modAttributeList= lodash.cloneDeep(result.EntityResult.HSEINSPECTIONSHIPMENTPRIMEMOVER);\r\n            else if(attributeEntityKey===hseInspectionShipmentNonFillingVehicleAttributeEntity)\r\n            modAttributeList= lodash.cloneDeep(result.EntityResult.HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE);\r\n            else if(attributeEntityKey===hseInspectionMarineShipmentBargeAttributeEntity)\r\n            modAttributeList= lodash.cloneDeep(result.EntityResult.HSEINSPECTIONMARINESHIPMENTBARGE);\r\n            else if(attributeEntityKey===hseInspectionMarineShipmentShipAttributeEntity)\r\n            modAttributeList= lodash.cloneDeep(result.EntityResult.HSEINSPECTIONMARINESHIPMENTSHIP);\r\n            else if(attributeEntityKey===hseInspectionShipmentRailWagonAttributeEntity)\r\n            modAttributeList= lodash.cloneDeep(result.EntityResult.HSEINSPECTIONSHIPMENTRAILWAGON);\r\n            else if(attributeEntityKey===hseInspectionShipmentPipelineAttributeEntity)\r\n            modAttributeList= lodash.cloneDeep(result.EntityResult.HSEINSPECTIONSHIPMENTPIPELINE);\r\n            else if(attributeEntityKey===hseInspectionReceiptRigidTruckAttributeEntity)\r\n            modAttributeList= lodash.cloneDeep(result.EntityResult.HSEINSPECTIONRECEIPTRIGIDTRUCK);\r\n            else if(attributeEntityKey===hseInspectionReceiptTrailerAttributeEntity)\r\n            modAttributeList= lodash.cloneDeep(result.EntityResult.HSEINSPECTIONRECEIPTTRAILER);\r\n            else if(attributeEntityKey===hseInspectionReceiptPrimeMoverAttributeEntity)\r\n            modAttributeList= lodash.cloneDeep(result.EntityResult.HSEINSPECTIONRECEIPTPRIMEMOVER);\r\n            else if(attributeEntityKey===hseInspectionReceiptNonFillingVehicleAttributeEntity)\r\n            modAttributeList= lodash.cloneDeep(result.EntityResult.HSEINSPECTIONRECEIPTNONFILLINGVEHICLE);\r\n            else if(attributeEntityKey===hseInspectionMarineReceiptBargeAttributeEntity)\r\n            modAttributeList= lodash.cloneDeep(result.EntityResult.HSEINSPECTIONMARINERECEIPTBARGE);\r\n            else if(attributeEntityKey===hseInspectionMarineReceiptShipAttributeEntity)\r\n            modAttributeList= lodash.cloneDeep(result.EntityResult.HSEINSPECTIONMARINERECEIPTSHIP);\r\n            else if(attributeEntityKey===hseInspectionReceiptRailWagonAttributeEntity)\r\n            modAttributeList= lodash.cloneDeep(result.EntityResult.HSEINSPECTIONRECEIPTRAILWAGON);\r\n            else if(attributeEntityKey===hseInspectionReceiptPipelineAttributeEntity)\r\n            modAttributeList= lodash.cloneDeep(result.EntityResult.HSEINSPECTIONRECEIPTPIPELINE);\r\n\r\n          if(modHSEInspection.Attributes.length>0)\r\n          {\r\n            modHSEInspection.Attributes[0].ListOfAttributeData.forEach((att) => {\r\n             \r\n              if (att !== undefined) {\r\n                if(modAttributeList.length>0)\r\n                modAttributeList[0].attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  if( att.AttributeCode === attributeMetaData.Code)\r\n                  attributeMetaData.DefaultValue=att.AttributeValue;\r\n               \r\n                });\r\n              }\r\n            })\r\n\r\n          }\r\n          \r\n          \r\n\r\n          if(attributeEntityKey===hseInspectionShipmentRigidTruckAttributeEntity )\r\n          this.setState({\r\n            modAttributeList: modAttributeList,\r\n            attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.HSEINSPECTIONSHIPMENTRIGIDTRUCK\r\n                ),\r\n            \r\n          });\r\n        else if(attributeEntityKey===hseInspectionShipmentTrailerAttributeEntity)\r\n        this.setState({\r\n          modAttributeList: modAttributeList,\r\n          attributeValidationErrors:\r\n              Utilities.getAttributeInitialValidationErrors(\r\n                result.EntityResult.HSEINSPECTIONSHIPMENTTRAILER\r\n              ),\r\n          \r\n        });\r\n          \r\n        else if(attributeEntityKey===hseInspectionShipmentPrimeMoverAttributeEntity )\r\n        this.setState({\r\n          modAttributeList: modAttributeList,\r\n          attributeValidationErrors:\r\n              Utilities.getAttributeInitialValidationErrors(\r\n                result.EntityResult.HSEINSPECTIONSHIPMENTPRIMEMOVER\r\n              ),\r\n          \r\n        });\r\n          \r\n          else if(attributeEntityKey===hseInspectionShipmentNonFillingVehicleAttributeEntity)\r\n          \r\n          this.setState({\r\n            modAttributeList: modAttributeList,\r\n            attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\r\n                ),\r\n            \r\n          });\r\n          else if(attributeEntityKey===hseInspectionMarineShipmentBargeAttributeEntity)\r\n          this.setState({\r\n            modAttributeList: modAttributeList,\r\n            attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.HSEINSPECTIONMARINESHIPMENTBARGE\r\n                ),\r\n            \r\n          });\r\n         \r\n          else if(attributeEntityKey===hseInspectionMarineShipmentShipAttributeEntity)\r\n          this.setState({\r\n            modAttributeList: modAttributeList,\r\n            attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.HSEINSPECTIONMARINESHIPMENTSHIP\r\n                ),\r\n            \r\n          });\r\n          else if(attributeEntityKey===hseInspectionShipmentRailWagonAttributeEntity)\r\n          this.setState({\r\n            modAttributeList: modAttributeList,\r\n            attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.HSEINSPECTIONSHIPMENTRAILWAGON\r\n                ),\r\n            \r\n          });\r\n           \r\n          else if(attributeEntityKey===hseInspectionShipmentPipelineAttributeEntity)\r\n          this.setState({\r\n            modAttributeList: modAttributeList,\r\n            attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.HSEINSPECTIONSHIPMENTPIPELINE\r\n                ),\r\n            \r\n          });\r\n           \r\n          else if(attributeEntityKey===hseInspectionReceiptRigidTruckAttributeEntity)\r\n          this.setState({\r\n            modAttributeList: modAttributeList,\r\n            attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.HSEINSPECTIONRECEIPTRIGIDTRUCK\r\n                ),\r\n            \r\n          });\r\n         \r\n          else if(attributeEntityKey===hseInspectionReceiptTrailerAttributeEntity)\r\n          this.setState({\r\n            modAttributeList: modAttributeList,\r\n            attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.HSEINSPECTIONRECEIPTTRAILER\r\n                ),\r\n            \r\n          });\r\n           \r\n          else if(attributeEntityKey===hseInspectionReceiptPrimeMoverAttributeEntity)\r\n          this.setState({\r\n            modAttributeList: modAttributeList,\r\n            attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.HSEINSPECTIONRECEIPTPRIMEMOVER\r\n                ),\r\n            \r\n          });\r\n         \r\n          else if(attributeEntityKey===hseInspectionReceiptNonFillingVehicleAttributeEntity)\r\n          this.setState({\r\n            modAttributeList: modAttributeList,\r\n            attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\r\n                ),\r\n            \r\n          });\r\n          \r\n          else if(attributeEntityKey===hseInspectionMarineReceiptBargeAttributeEntity)\r\n          this.setState({\r\n            modAttributeList: modAttributeList,\r\n            attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.HSEINSPECTIONMARINERECEIPTBARGE\r\n                ),\r\n            \r\n          });\r\n         \r\n          else if(attributeEntityKey===hseInspectionMarineReceiptShipAttributeEntity)\r\n          this.setState({\r\n            modAttributeList: modAttributeList,\r\n            attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.HSEINSPECTIONMARINERECEIPTSHIP\r\n                ),\r\n            \r\n          });\r\n          \r\n          else if(attributeEntityKey===hseInspectionReceiptRailWagonAttributeEntity)\r\n          this.setState({\r\n            modAttributeList: modAttributeList,\r\n            attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.HSEINSPECTIONRECEIPTRAILWAGON\r\n                ),\r\n            \r\n          });\r\n          \r\n          else if(attributeEntityKey===hseInspectionReceiptPipelineAttributeEntity)\r\n          this.setState({\r\n            modAttributeList: modAttributeList,\r\n            attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.HSEINSPECTIONRECEIPTPIPELINE\r\n                ),\r\n            \r\n          });\r\n           \r\n           \r\n\r\n        } else {\r\n          this.setState({\r\n            modAttributeList: []\r\n        \r\n          })\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  updateAttributeInfo(entityAttributeData)\r\n  {\r\n    let modAttributeList=[];\r\n    entityAttributeData.forEach((item) => {\r\n      modAttributeList.push(item);\r\n    });    \r\n    \r\n    return modAttributeList;\r\n  }\r\n\r\n  setLookUpData(lookUpData) {\r\n    try {\r\n      const attachmentFileSetting = {};\r\n      const fileTypes =\r\n        lookUpData.FileTypesAllowedToUpload.toLowerCase().split(\",\");\r\n      for (let i = 0; i < fileTypes.length; i++) {\r\n        fileTypes[i] = \".\" + fileTypes[i];\r\n      }\r\n      attachmentFileSetting.FileTypesAllowedToUpload = fileTypes;\r\n      attachmentFileSetting.MaximumFileSize = parseInt(\r\n        lookUpData.MaximumFileSize\r\n      );\r\n      if (lookUpData.MaximumFileSize > 1024 * 5) {\r\n        lookUpData.MaximumFileSize = 5120;\r\n      }\r\n      attachmentFileSetting.NoOfFilesAllowedToUpload = parseInt(\r\n        lookUpData.NoOfFilesAllowedToUpload\r\n      );\r\n      this.setState({ attachmentFileSetting });\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionDetailsComposite: Error occurred on setLookUpData\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  isNodeEnterpriseOrWebortal()\r\n  {\r\n    if (this.props.userDetails.EntityResult.IsEnterpriseNode || this.props.userDetails.EntityResult.IsWebPortalUser) {\r\n     return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getTransactionTypes() {\r\n    const data =\r\n      this.props.transportationType === Constants.TransportationType.ROAD\r\n        ? {\r\n            shipment: \"SHIPMENT\",\r\n            receipt: \"RECEIPT\",\r\n          }\r\n        : {\r\n            shipment: \"DISPATCH\",\r\n            receipt: \"RECEIPT\",\r\n          };\r\n    const transactionTypeOptions = [];\r\n    for (let key in data) {\r\n      transactionTypeOptions.push({ text: key, value: data[key] });\r\n    }\r\n    this.setState({ transactionTypeOptions });\r\n  }\r\n\r\n  getLocations() {\r\n    axios(\r\n      RestAPIs.GetLocations +\r\n        \"?TransportationType=\" +\r\n        this.props.transportationType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          const locationCodeList = [];\r\n          const locationTypeMap = {};\r\n          if (Array.isArray(result.EntityResult.Table)) {\r\n            result.EntityResult.Table.forEach((item) => {\r\n              locationCodeList.push(item.LocationCode);\r\n              locationTypeMap[item.LocationCode] = item.LocationType;\r\n            });\r\n          }\r\n          this.setState({\r\n            locationCodeOptions:\r\n              Utilities.transferListtoOptions(locationCodeList),\r\n            locationTypeMap,\r\n          });\r\n        } else {\r\n          console.log(\"Error in getLocations: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"HSEInspectionDetailsComposite: Error occurred on getLocations\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getCardReaderLocations(shareholder) {\r\n    axios(\r\n      RestAPIs.GetCardReaderLocations + \"?ShareholderCode=\" + shareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (Array.isArray(result.EntityResult.Table)) {\r\n            const cardReaderMap = {};\r\n            for (let item of result.EntityResult.Table) {\r\n              if (cardReaderMap[item.WB_LocationCode] === undefined) {\r\n                cardReaderMap[item.WB_LocationCode] = [];\r\n              }\r\n              cardReaderMap[item.WB_LocationCode].push(item.PointName);\r\n            }\r\n            this.setState({ cardReaderMap });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getCardReaderLocations:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting card reader locations:\", error);\r\n      });\r\n  }\r\n\r\n  mapCardReader(locationCode, validationErrors) {\r\n    validationErrors.TransactionType = \"\";\r\n    validationErrors.LocationCode = \"\";\r\n    validationErrors.CardReader = \"\";\r\n    if (this.state.cardReaderMap[locationCode]) {\r\n      const cardReaderCodeOptions = Utilities.transferListtoOptions(\r\n        this.state.cardReaderMap[locationCode]\r\n      );\r\n      this.setState({\r\n        cardReader: \"\",\r\n        cardReaderCodeOptions,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        cardReader: \"\",\r\n        cardReaderCodeOptions: [],\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.handleCancelDetect();\r\n  }\r\n\r\n  handleDetectVehicle = () => {\r\n    try {\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (\r\n        this.state.modHSEInspection.TransactionType === null ||\r\n        this.state.modHSEInspection.TransactionType === \"\"\r\n      ) {\r\n        validationErrors.TransactionType = Utilities.validateField(\r\n          HSEInspectionValidationDef.TransactionType,\r\n          this.state.modHSEInspection.TransactionType\r\n        );\r\n      } else {\r\n        validationErrors.TransactionType = \"\";\r\n      }\r\n      if (\r\n        this.state.modHSEInspection.LocationCode === null ||\r\n        this.state.modHSEInspection.LocationCode === \"\"\r\n      ) {\r\n        validationErrors.LocationCode = Utilities.validateField(\r\n          HSEInspectionValidationDef.LocationCode,\r\n          this.state.modHSEInspection.LocationCode\r\n        );\r\n      } else {\r\n        validationErrors.LocationCode = \"\";\r\n      }\r\n      if (this.state.cardReader === null || this.state.cardReader === \"\") {\r\n        validationErrors.CardReader = Utilities.validateField(\r\n          HSEInspectionValidationDef.CardReader,\r\n          this.state.cardReader\r\n        );\r\n      } else {\r\n        validationErrors.CardReader = \"\";\r\n      }\r\n      this.setState({ validationErrors });\r\n      if (\r\n        validationErrors.TransactionType !== \"\" ||\r\n        validationErrors.LocationCode !== \"\" ||\r\n        validationErrors.CardReader !== \"\"\r\n      ) {\r\n        return;\r\n      }\r\n      var ReadStartTime = this.state.ReadStartTime;\r\n      ReadStartTime = new Date();\r\n      this.setState({ ReadStartTime: ReadStartTime });\r\n      if (this.cardReaderTimer === null) {\r\n        this.cardReaderTimer = setInterval(() => {\r\n          this.readCardData();\r\n        }, 3000);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionDetailsComposite: Error occurred on handleDetectVehicle\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  readCardData() {\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      KeyCodes: [\r\n        {\r\n          key: KeyCodes.cardReaderCode,\r\n          value: this.state.cardReader,\r\n        },\r\n        {\r\n          key: \"ReadStartTime\",\r\n          value: this.state.ReadStartTime,\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.ReadCardData,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (\r\n          result.IsSuccess === true &&\r\n          result.EntityResult.CardNumber !== undefined &&\r\n          result.EntityResult.CardNumber !== null\r\n        ) {\r\n          this.handleCancelDetect();\r\n          this.getAccessCard(result.EntityResult.CardNumber);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while read card data: \", error);\r\n      });\r\n  }\r\n\r\n  getAccessCard(accessCardCode) {\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.accessCardCode,\r\n      KeyCodes: [\r\n        {\r\n          key: KeyCodes.accessCardCode,\r\n          value: accessCardCode,\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.GetAccessCard,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult.EntityName === \"Vehicle\" &&\r\n            result.EntityResult.EntityValue !== null &&\r\n            result.EntityResult.EntityValue !== \"\"\r\n          ) {\r\n            this.handleChange(\"VehicleCode\", result.EntityResult.EntityValue + '['+result.EntityResult.ShareholderCode +']');\r\n            \r\n            // refresh Shipment/Receipt the drop down after vehicle is selected\r\n            this.getRoadShipmentReceiptCodes(this.state.modHSEInspection.TransactionType,result.EntityResult.ShareholderCode,result.EntityResult.EntityValue + '['+result.EntityResult.ShareholderCode +']');\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetAccessCard:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting AccessCard:\", error);\r\n      });\r\n  }\r\n\r\n  handleCancelDetect = () => {\r\n    try {\r\n      if (this.cardReaderTimer !== null) {\r\n        clearInterval(this.cardReaderTimer);\r\n        this.cardReaderTimer = null;\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionDetailsComposite: Error occurred on handleCancelDetect\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getVehicleCode(shareholder) {\r\n    if(this.props.transportationType===Constants.TransportationType.MARINE)\r\n    {\r\n      axios(\r\n        RestAPIs.GetVehicleCodes +\r\n          \"?ShareholderCode=\" +\r\n          shareholder +\r\n          \"&TransportationType=\" +\r\n          this.props.transportationType,\r\n        Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n      )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            const vehicleCodeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            let vehicleCodeSearchOptions = lodash.cloneDeep(vehicleCodeOptions);\r\n            if (\r\n              vehicleCodeSearchOptions.length > Constants.filteredOptionsCount\r\n            ) {\r\n              vehicleCodeSearchOptions = vehicleCodeSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({ vehicleCodeOptions, vehicleCodeSearchOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getVehicleCodes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Vessel List:\", error);\r\n      });\r\n    }\r\n    else if(this.props.transportationType===Constants.TransportationType.ROAD)\r\n    {\r\n\r\n      axios(\r\n        RestAPIs.GetVehiclesForLoggedInUser,\r\n        Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n  \r\n          if (result.IsSuccess === true) {\r\n            var vehArray=[];\r\n            var dict= result.EntityResult;\r\n            for (var sh in dict) {\r\n             \r\n             let vehicleCodes=dict[sh];\r\n             vehicleCodes.forEach((vehCode) =>\r\n              {\r\n              vehArray.push(vehCode+ '[' + sh +']')\r\n             }\r\n             )\r\n             \r\n            }\r\n            const vehicleCodeOptions = Utilities.transferListtoOptions(\r\n              vehArray\r\n            );\r\n            let vehicleCodeSearchOptions = lodash.cloneDeep(vehicleCodeOptions);\r\n            if (\r\n              vehicleCodeSearchOptions.length > Constants.filteredOptionsCount\r\n            ) {\r\n              vehicleCodeSearchOptions = vehicleCodeSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({ vehicleCodeOptions, vehicleCodeSearchOptions });\r\n\r\n          } else {\r\n            console.log(\r\n              \"HSE inspection:Error in GetVehiclesForLoggedInUser:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"HSE inspection:Error in GetVehiclesForLoggedInUser:\",\r\n            error\r\n          );\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  getEntityAndShareholder(entitySh)\r\n  {\r\n    let obj = {\r\n      ShareHolderCode: '',\r\n      entityCode: '',\r\n    };\r\n\r\n    const arr= entitySh.split(/\\[/);\r\n\r\n    obj.entityCode= arr[0];\r\n\r\n    if(arr.length>1 && arr[1]!== null && arr[1]!=='')\r\n    obj.ShareHolderCode= arr[1].substring(0, arr[1].length - 1); \r\n    \r\n    if(obj.ShareHolderCode==='')\r\n    obj.ShareHolderCode=this.props.userDetails.EntityResult.PrimaryShareholder;\r\n\r\n    return obj;\r\n  }\r\n  \r\n  getVehicleDetail(modHSEInspection, callback) {\r\n\r\n    this.setState({\r\n      modAttributeList: [],\r\n      hseUnitInspectionType:\"\"\r\n    })\r\n\r\n    let vehicleShareholder = this.getEntityAndShareholder(modHSEInspection.VehicleCode) \r\n\r\n    \r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: vehicleShareholder.entityCode,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: this.props.transportationType,\r\n      },\r\n    ];\r\n    let obj = {\r\n      ShareHolderCode: (modHSEInspection.ShareholderCode===null ||modHSEInspection.ShareholderCode===''  || modHSEInspection.ShareholderCode===undefined )? vehicleShareholder.ShareHolderCode:modHSEInspection.ShareholderCode,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetVessel,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n       \r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            hseUnitInspectionType:response.data.EntityResult.VehicleType\r\n          })\r\n          callback(result);\r\n        } else {\r\n          console.log(\"Error in getVehicleDetail:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getVehicleDetail:\", error);\r\n      });\r\n  }\r\n\r\n  setRoadTransportationUnit(result) {\r\n    const transportationUnitList = [];\r\n    if (\r\n      result.EntityResult.VehicleType ===\r\n      Constants.VehicleType.RigidTruckWithTrailer\r\n    ) {\r\n     \r\n      if (Array.isArray(result.EntityResult.VehicleTrailers)) {\r\n        for (let trailerData of result.EntityResult.VehicleTrailers) {\r\n          if (\r\n            trailerData.Trailer.TrailerType ===\r\n            Constants.TrailerType.RIGID_TRAILER\r\n          ) {\r\n            transportationUnitList.push(\"RIGID_TRUCK - \" + trailerData.TrailerCode);\r\n          }\r\n\r\n        }\r\n\r\n        for (let trailerData of result.EntityResult.VehicleTrailers) {\r\n           if (\r\n            trailerData.Trailer.TrailerType ===\r\n            Constants.TrailerType.NON_RIGID_TRAILER\r\n          ) {\r\n            transportationUnitList.push(\"TRAILER - \" + trailerData.TrailerCode);\r\n          }\r\n        }\r\n      }\r\n    } else if (\r\n      result.EntityResult.VehicleType ===\r\n      Constants.VehicleType.TractorWithTrailer\r\n    ) {\r\n      if (\r\n        Array.isArray(result.EntityResult.VehiclePrimeMovers) &&\r\n        result.EntityResult.VehiclePrimeMovers.length > 0\r\n      ) {\r\n        transportationUnitList.push(\r\n          \"PRIMEMOVER - \" +\r\n            result.EntityResult.VehiclePrimeMovers[0].PrimeMoverCode\r\n        );\r\n      }\r\n      if (Array.isArray(result.EntityResult.VehicleTrailers)) {\r\n        for (let trailerData of result.EntityResult.VehicleTrailers) {\r\n          transportationUnitList.push(\"TRAILER - \" + trailerData.TrailerCode);\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      roadTransportationUnitOptions: Utilities.transferListtoOptions(\r\n        transportationUnitList\r\n      ),\r\n      roadTransportationUnit: \"\",\r\n    });\r\n  }\r\n\r\n  getRailWagonDetail(railWagonCode, callback) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.trailerCode,\r\n        value: railWagonCode,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: Constants.TransportationType.RAIL,\r\n      },\r\n      {\r\n        key: KeyCodes.carrierCode,\r\n        value: this.state.railWagonCarrierCompanyMap[railWagonCode],\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.trailerCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailWagon,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          callback(result.EntityResult);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting railWagon:\", error);\r\n      });\r\n  }\r\n\r\n  getRoadShipmentReceiptCodes(transactionType,shareholderCode, vehicleCode )\r\n  {\r\n    \r\n    const obj = {\r\n      TransportationType: this.props.transportationType,\r\n      TransactionType: transactionType,\r\n      ShareholderCode: shareholderCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetDispatchOrReceiptCodes,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult.Table !== undefined &&\r\n            result.EntityResult.Table !== null &&\r\n            result.EntityResult.Table.length > 0\r\n          ) {\r\n            const dispatchReceiptCodeMap = {};\r\n            let dispatchReceiptCodeOptions = [];\r\n            // if (Array.isArray(result.EntityResult.Table)){\r\n            //   dispatchReceiptCodeOptions=result.EntityResult.Table.map((item) => ({ text: item.Code +'[' + obj.ShareholderCode +']',value: item.Code + '[' + obj.ShareholderCode +']' }));\r\n            \r\n            // }\r\n           for (let item of result.EntityResult.Table) {\r\n             // if (item.VehicleCode !== undefined && item.VehicleCode !== null && vehicleCode===item.VehicleCode + '[' + obj.ShareholderCode +']') {\r\n              if (item.VehicleCode !== undefined && item.VehicleCode !== null ) {\r\n               \r\n             if (dispatchReceiptCodeMap[item.VehicleCode+ '[' + obj.ShareholderCode +']'] === undefined) {\r\n                  dispatchReceiptCodeMap[item.VehicleCode+ '[' + obj.ShareholderCode +']'] = [];\r\n                }\r\n                dispatchReceiptCodeMap[item.VehicleCode+ '[' + obj.ShareholderCode +']'].push({\r\n                  text: item.Code+ '[' + obj.ShareholderCode +']',\r\n                  value: item.Code + '[' + obj.ShareholderCode +']',\r\n                });\r\n                if (\r\n                  vehicleCode===item.VehicleCode + '[' + obj.ShareholderCode +']'\r\n                ) {\r\n                  dispatchReceiptCodeOptions.push({\r\n                    text: item.Code + '[' + obj.ShareholderCode +']',\r\n                    value: item.Code + '[' + obj.ShareholderCode +']',\r\n                  });\r\n                }\r\n              }  \r\n            }\r\n            let dispatchReceiptCodeSearchOptions = lodash.cloneDeep(\r\n              dispatchReceiptCodeOptions\r\n            );\r\n            if (\r\n              dispatchReceiptCodeSearchOptions.length >\r\n              Constants.filteredOptionsCount\r\n            ) {\r\n              dispatchReceiptCodeSearchOptions =\r\n                dispatchReceiptCodeSearchOptions.slice(\r\n                  0,\r\n                  Constants.filteredOptionsCount\r\n                );\r\n            }\r\n            this.setState({\r\n              dispatchReceiptCodeMap,\r\n              dispatchReceiptCodeOptions,\r\n              dispatchReceiptCodeSearchOptions,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              dispatchReceiptCodeMap: {},\r\n              dispatchReceiptCodeOptions: [],\r\n              dispatchReceiptCodeSearchOptions: [],\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\r\n            \"Error while getting getRoadShipmentReceiptCodes:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getRoadShipmentReceiptCodes:\", error);\r\n      });\r\n\r\n  }\r\n  getDispatchReceiptCode(transactionType) {\r\n\r\n    if(this.props.transportationType === Constants.TransportationType.ROAD)\r\n    {\r\n    \r\n      this.setState({\r\n        dispatchReceiptCodeMap: {},\r\n        dispatchReceiptCodeOptions: [],\r\n        dispatchReceiptCodeSearchOptions: [],\r\n      });\r\n\r\n      if(this.state.modHSEInspection.VehicleCode!==undefined && this.state.modHSEInspection.VehicleCode!==null )\r\n      this.getDispatchReceiptCodeByVehicle(this.state.modHSEInspection.VehicleCode,transactionType);\r\n\r\n      return;\r\n    }\r\n    \r\n    const obj = {\r\n      TransportationType: this.props.transportationType,\r\n      TransactionType: transactionType,\r\n      ShareholderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n    };\r\n    axios(\r\n      RestAPIs.GetDispatchOrReceiptCodes,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult.Table !== undefined &&\r\n            result.EntityResult.Table !== null &&\r\n            result.EntityResult.Table.length > 0\r\n          ) {\r\n            const dispatchReceiptCodeMap = {};\r\n            let dispatchReceiptCodeOptions = [];\r\n            // if (Array.isArray(result.EntityResult.Table)){\r\n            //   dispatchReceiptCodeOptions=result.EntityResult.Table.map((item) => ({ text: item.Code +'[' + obj.ShareholderCode +']',value: item.Code + '[' + obj.ShareholderCode +']' }));\r\n            \r\n            // }\r\n           for (let item of result.EntityResult.Table) {\r\n              if (item.VehicleCode !== undefined && item.VehicleCode !== null) {\r\n                if (dispatchReceiptCodeMap[item.VehicleCode] === undefined) {\r\n                  dispatchReceiptCodeMap[item.VehicleCode] = [];\r\n                }\r\n                dispatchReceiptCodeMap[item.VehicleCode].push({\r\n                  text: item.Code,\r\n                  value: item.Code ,\r\n                });\r\n                if (\r\n                  this.state.modHSEInspection.VehicleCode === item.VehicleCode\r\n                ) {\r\n                  dispatchReceiptCodeOptions.push({\r\n                    text: item.Code,\r\n                    value: item.Code,\r\n                  });\r\n                }\r\n              } else {\r\n                if(this.props.transportationType === Constants.TransportationType.PIPELINE)\r\n                {\r\n                  dispatchReceiptCodeOptions.push({\r\n                    text: item.Code + '[' + item.ShareholderCode +']',\r\n                    value: item.Code + '[' + item.ShareholderCode +']',\r\n                  });\r\n                }\r\n                else\r\n                {\r\n                  dispatchReceiptCodeOptions.push({\r\n                    text: item.Code,\r\n                    value: item.Code,\r\n                  });\r\n                }\r\n              }\r\n            }\r\n            let dispatchReceiptCodeSearchOptions = lodash.cloneDeep(\r\n              dispatchReceiptCodeOptions\r\n            );\r\n            if (\r\n              dispatchReceiptCodeSearchOptions.length >\r\n              Constants.filteredOptionsCount\r\n            ) {\r\n              dispatchReceiptCodeSearchOptions =\r\n                dispatchReceiptCodeSearchOptions.slice(\r\n                  0,\r\n                  Constants.filteredOptionsCount\r\n                );\r\n            }\r\n            this.setState({\r\n              dispatchReceiptCodeMap,\r\n              dispatchReceiptCodeOptions,\r\n              dispatchReceiptCodeSearchOptions,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              dispatchReceiptCodeMap: {},\r\n              dispatchReceiptCodeOptions: [],\r\n              dispatchReceiptCodeSearchOptions: [],\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\r\n            \"Error while getting getDispatchReceiptCode:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getDispatchReceiptCode:\", error);\r\n      });\r\n  }\r\n\r\n  getDispatchReceiptCodeByVehicle(vehicleCode, TransactionType) {\r\n\r\n    if(this.props.transportationType === Constants.TransportationType.ROAD)\r\n    {\r\n      let selectedVehicleShareholder = this.getEntityAndShareholder(vehicleCode);\r\n      \r\n      let existingShareholder= ''\r\n      if(this.state.modHSEInspection.VehicleCode!==undefined && this.state.modHSEInspection.VehicleCode!==null )\r\n      {\r\n       let existingVehicleShareholder =this.getEntityAndShareholder(this.state.modHSEInspection.VehicleCode)\r\n        existingShareholder=existingVehicleShareholder.ShareHolderCode;\r\n      }\r\n      if(selectedVehicleShareholder.ShareHolderCode!==existingShareholder || (this.state.modHSEInspection.TransactionType!==TransactionType))\r\n        this.getRoadShipmentReceiptCodes(TransactionType,selectedVehicleShareholder.ShareHolderCode,vehicleCode)\r\n        else\r\n        {\r\n          this.setDispatchReceiptFilterOptions(vehicleCode);\r\n        }\r\n    }\r\n    else\r\n    {\r\n      this.setDispatchReceiptFilterOptions(vehicleCode);\r\n    }\r\n   \r\n  }\r\n\r\n  setDispatchReceiptFilterOptions(vehicleCode)\r\n  {\r\n    if (\r\n      this.state.dispatchReceiptCodeMap[vehicleCode] !== undefined &&\r\n      Array.isArray(this.state.dispatchReceiptCodeMap[vehicleCode])\r\n    ) {\r\n      const dispatchReceiptCodeOptions =\r\n        this.state.dispatchReceiptCodeMap[vehicleCode];\r\n      let dispatchReceiptCodeSearchOptions = lodash.cloneDeep(\r\n        dispatchReceiptCodeOptions\r\n      );\r\n      if (\r\n        dispatchReceiptCodeSearchOptions.length > Constants.filteredOptionsCount\r\n      ) {\r\n        dispatchReceiptCodeSearchOptions =\r\n          dispatchReceiptCodeSearchOptions.slice(\r\n            0,\r\n            Constants.filteredOptionsCount\r\n          );\r\n      }\r\n      this.setState({\r\n        dispatchReceiptCodeOptions,\r\n        dispatchReceiptCodeSearchOptions,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        dispatchReceiptCodeOptions: [],\r\n        dispatchReceiptCodeSearchOptions: [],\r\n      });\r\n    }\r\n  }\r\n\r\n  getDispatchReceiptSearchOptions() {\r\n    const dispatchReceiptCodeSearchOptions = lodash.cloneDeep(\r\n      this.state.dispatchReceiptCodeSearchOptions\r\n    );\r\n    const modDispatchReceiptCode =\r\n      this.state.modHSEInspection.DispatchReceiptCode;\r\n    if (\r\n      modDispatchReceiptCode !== null &&\r\n      modDispatchReceiptCode !== \"\" &&\r\n      modDispatchReceiptCode !== undefined\r\n    ) {\r\n      const selectedCode = dispatchReceiptCodeSearchOptions.find(\r\n        (element) =>\r\n          element.value.toLowerCase() === modDispatchReceiptCode.toLowerCase()\r\n      );\r\n      if (selectedCode === undefined) {\r\n        dispatchReceiptCodeSearchOptions.push({\r\n          text: modDispatchReceiptCode,\r\n          value: modDispatchReceiptCode,\r\n        });\r\n      }\r\n    }\r\n    return dispatchReceiptCodeSearchOptions;\r\n  }\r\n\r\n  \r\n\r\n  getRailWagonCode(modHSEInspection) {\r\n    if (modHSEInspection.TransactionType === \"DISPATCH\") {\r\n      const keyCode = [\r\n        {\r\n          key: KeyCodes.railDispatchCode,\r\n          value: modHSEInspection.DispatchReceiptCode,\r\n        },\r\n        {\r\n          key: KeyCodes.transportationType,\r\n          value: Constants.TransportationType.RAIL,\r\n        },\r\n      ];\r\n      const obj = {\r\n        ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n        keyDataCode: KeyCodes.railDispatchCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetRailDispatch,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          const result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.processRailDispatchReceiptData(\r\n              result.EntityResult.DispatchCompartmentPlanList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting getRailWagonCode:\", error);\r\n        });\r\n    } else {\r\n      const keyCode = [\r\n        {\r\n          key: KeyCodes.railReceiptCode,\r\n          value: modHSEInspection.DispatchReceiptCode,\r\n        },\r\n        {\r\n          key: KeyCodes.transportationType,\r\n          value: Constants.TransportationType.RAIL,\r\n        },\r\n      ];\r\n      const obj = {\r\n        ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n        keyDataCode: KeyCodes.railReceiptCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetRailReceipt,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          const result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.processRailDispatchReceiptData(\r\n              result.EntityResult.RailMarineReceiptCompartmentPlanList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting RailWagonCode:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  processRailDispatchReceiptData(planList) {\r\n    if (planList !== null) {\r\n      const wagonCodeList = [];\r\n      const railWagonCarrierCompanyMap = {};\r\n      for (let item of planList) {\r\n        wagonCodeList.push(item.TrailerCode);\r\n        railWagonCarrierCompanyMap[item.TrailerCode] = item.CarrierCompanyCode;\r\n      }\r\n      this.setState({\r\n        railWagonCodeOptions: Utilities.transferListtoOptions(wagonCodeList),\r\n        railWagonCarrierCompanyMap,\r\n        isReadyToRender: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        railWagonCodeOptions: [],\r\n        railWagonCarrierCompanyMap: {},\r\n        isReadyToRender: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  getHSEInspectionResult(selectedRow) {\r\n\r\n    // setting default Shareholder\r\n    let shareholder=this.props.userDetails.EntityResult.PrimaryShareholder;\r\n\r\n    if((this.props.transportationType === Constants.TransportationType.ROAD || this.props.transportationType === Constants.TransportationType.PIPELINE) && (selectedRow.Shareholder!==undefined) )\r\n    {\r\n      shareholder=selectedRow.Shareholder;\r\n    }\r\n    emptyHSEInspection.TransportationType = this.props.transportationType;\r\n     \r\n    emptyHSEInspection.ShareholderCode = shareholder;\r\n    this.getCardReaderLocations(shareholder);\r\n    if (selectedRow.TransactionCode === undefined) {\r\n      this.setState({\r\n        HSEInspection: lodash.cloneDeep(emptyHSEInspection),\r\n        modHSEInspection: lodash.cloneDeep(emptyHSEInspection),\r\n        associations: [],\r\n        modAssociations: [],\r\n        attachments: [],\r\n        isReadyToRender: true,\r\n        //selectedAttributeList: [],\r\n        modAttributeList: [],\r\n        attributeValidationErrors: [],\r\n        hseUnitInspectionType: \"\",\r\n\r\n        isManualEntry: true,\r\n        cardReaderCodeOptions: [],\r\n        roadTransportationUnitOptions: [],\r\n        roadTransportationUnit: \"\",\r\n        railWagonCodeOptions: [],\r\n        dispatchReceiptCodeOptions: [],\r\n        dispatchReceiptCodeSearchOptions: [],\r\n        railWagonCarrierCompanyMap: {},\r\n        railWagon: \"\",\r\n        displayTransportationUnit: false,\r\n        displayOverAllInspection: false,\r\n        isOverAllInspection: false,\r\n      });\r\n      this.setDispatchReceiptLabel(emptyHSEInspection);\r\n      if (this.props.transportationType === Constants.TransportationType.ROAD) {\r\n        this.getVehicleCode(shareholder);\r\n      } else if (\r\n        this.props.transportationType === Constants.TransportationType.MARINE\r\n      ) {\r\n        this.getVehicleCode(shareholder);\r\n      }\r\n      return;\r\n    } else if (selectedRow.OverAllHSEInspectionStatus === null) {\r\n      const HSEInspection = lodash.cloneDeep(emptyHSEInspection);\r\n      HSEInspection.TransactionType = selectedRow.TransactionType;\r\n      HSEInspection.VehicleCode = selectedRow.VehicleCode;\r\n      HSEInspection.DispatchReceiptCode = selectedRow.TransactionCode;\r\n\r\n      if(this.props.transportationType === Constants.TransportationType.ROAD)\r\n      {\r\n        HSEInspection.VehicleCode = selectedRow.VehicleCode +'[' + shareholder +']' ;\r\n        HSEInspection.DispatchReceiptCode = selectedRow.TransactionCode +'[' + shareholder +']' ;\r\n      }\r\n\r\n      let displayTransportationUnit = false;\r\n      if (\r\n        this.props.transportationType === Constants.TransportationType.ROAD &&\r\n        (selectedRow.VehicleType ===\r\n          Constants.VehicleType.RigidTruckWithTrailer ||\r\n          selectedRow.VehicleType === Constants.VehicleType.TractorWithTrailer)\r\n      ) {\r\n        displayTransportationUnit = true;\r\n      }\r\n\r\n      const vehicleCodeOptions = [];\r\n      if (selectedRow.VehicleCode !== null && selectedRow.VehicleCode !== \"\") {\r\n        vehicleCodeOptions.push({\r\n          text: (this.props.transportationType === Constants.TransportationType.ROAD)? selectedRow.VehicleCode+'[' + shareholder +']': selectedRow.VehicleCode,\r\n          value: (this.props.transportationType === Constants.TransportationType.ROAD)? selectedRow.VehicleCode+'[' + shareholder +']': selectedRow.VehicleCode,\r\n        });\r\n      }\r\n\r\n      const vehicleCodeSearchOptions = lodash.cloneDeep(vehicleCodeOptions);\r\n\r\n      const dispatchReceiptCodeOptions = [];\r\n      if (\r\n        selectedRow.TransactionCode !== null &&\r\n        selectedRow.TransactionCode !== \"\"\r\n      ) {\r\n        dispatchReceiptCodeOptions.push({\r\n          text: (this.props.transportationType === Constants.TransportationType.ROAD)? selectedRow.TransactionCode +'[' + shareholder +']': selectedRow.TransactionCode,\r\n          value: (this.props.transportationType === Constants.TransportationType.ROAD)? selectedRow.TransactionCode +'[' + shareholder +']': selectedRow.TransactionCode,\r\n        });\r\n      }\r\n      const state = {\r\n        HSEInspection: lodash.cloneDeep(HSEInspection),\r\n        modHSEInspection: lodash.cloneDeep(HSEInspection),\r\n        associations: [],\r\n        modAssociations: [],\r\n        isManualEntry: false,\r\n        vehicleCodeOptions,\r\n        vehicleCodeSearchOptions,\r\n        dispatchReceiptCodeOptions,\r\n        dispatchReceiptCodeSearchOptions: lodash.cloneDeep(\r\n          dispatchReceiptCodeOptions\r\n        ),\r\n        displayTransportationUnit,\r\n      };\r\n      if (this.props.transportationType !== Constants.TransportationType.RAIL) {\r\n        state.isReadyToRender = true;\r\n      }\r\n      this.setState(state);\r\n      this.setDispatchReceiptLabel(HSEInspection);\r\n      if (displayTransportationUnit) {\r\n        this.getVehicleDetail(HSEInspection, (result) => {\r\n          this.setRoadTransportationUnit(result);\r\n          this.getAttributesMetaData();\r\n        });\r\n      } else if (\r\n        this.props.transportationType === Constants.TransportationType.RAIL\r\n      ) {\r\n        this.getRailWagonCode(HSEInspection);\r\n      } else if (\r\n        this.props.transportationType === Constants.TransportationType.PIPELINE\r\n      ) {\r\n        this.getHSEInspectionItems(\r\n          HSEInspection,\r\n          Constants.TransportationType.PIPELINE\r\n        );\r\n      }\r\n      return;\r\n    } else if (\r\n      selectedRow.TransportationType === Constants.TransportationType.ROAD\r\n    ) {\r\n      if (\r\n        selectedRow.VehicleType ===\r\n          Constants.VehicleType.RigidTruckWithTrailer ||\r\n        selectedRow.VehicleType === Constants.VehicleType.TractorWithTrailer\r\n      ) {\r\n        const HSEInspection = lodash.cloneDeep(emptyHSEInspection);\r\n        HSEInspection.TransactionType = selectedRow.TransactionType;\r\n        HSEInspection.DispatchReceiptCode = (selectedRow.TransactionCode===null || selectedRow.TransactionCode==='')?'' :  selectedRow.TransactionCode +  '[' + shareholder +']';\r\n        HSEInspection.LocationCode = selectedRow.LocationCode;\r\n        HSEInspection.VehicleCode = selectedRow.VehicleCode  + '[' + shareholder +']';\r\n        if (\r\n          selectedRow.OverAllHSEInspectionStatus !== undefined &&\r\n          selectedRow.OverAllHSEInspectionStatus !== null\r\n        ) {\r\n          HSEInspection.OverAllHSEInspectionStatus =\r\n            selectedRow.OverAllHSEInspectionStatus;\r\n        } else {\r\n          HSEInspection.OverAllHSEInspectionStatus = 0;\r\n        }\r\n\r\n        if (this.state.roadTransportationUnit === \"\") {\r\n          const vehicleCodeOptions = [];\r\n          if (\r\n            selectedRow.VehicleCode !== null &&\r\n            selectedRow.VehicleCode !== \"\"\r\n          ) {\r\n            vehicleCodeOptions.push({\r\n              text: selectedRow.VehicleCode + '[' + shareholder + ']' ,\r\n              value: selectedRow.VehicleCode + '[' + shareholder + ']',\r\n            });\r\n          }\r\n\r\n          const vehicleCodeSearchOptions = lodash.cloneDeep(vehicleCodeOptions);\r\n\r\n          const dispatchReceiptCodeOptions = [];\r\n          if (\r\n            selectedRow.TransactionCode !== null &&\r\n            selectedRow.TransactionCode !== \"\"\r\n          ) {\r\n            dispatchReceiptCodeOptions.push({\r\n              text: selectedRow.TransactionCode + '[' + shareholder + ']' ,\r\n              value: selectedRow.TransactionCode + '[' + shareholder + ']' ,\r\n            });\r\n          }\r\n\r\n          this.setState({\r\n            HSEInspection: lodash.cloneDeep(HSEInspection),\r\n            modHSEInspection: lodash.cloneDeep(HSEInspection),\r\n            associations: [],\r\n            modAssociations: [],\r\n            isManualEntry: false,\r\n            dispatchReceiptCodeOptions,\r\n            dispatchReceiptCodeSearchOptions: lodash.cloneDeep(\r\n              dispatchReceiptCodeOptions\r\n            ),\r\n            vehicleCodeOptions,\r\n            vehicleCodeSearchOptions,\r\n            displayTransportationUnit: true,\r\n            displayOverAllInspection: true,\r\n            isOverAllInspection:\r\n              selectedRow.OverAllHSEInspectionStatus ===\r\n                Constants.HSEInspectionStatus.PASS ||\r\n              selectedRow.OverAllHSEInspectionStatus ===\r\n                Constants.HSEInspectionStatus.FAIL,\r\n          });\r\n          this.getVehicleDetail(HSEInspection, (result) => {\r\n            this.setRoadTransportationUnit(result);\r\n            this.setState({ isReadyToRender: true });\r\n          });\r\n          this.setDispatchReceiptLabel(HSEInspection);\r\n          return;\r\n        }\r\n      }\r\n    } else if (\r\n      selectedRow.TransportationType === Constants.TransportationType.RAIL\r\n    ) {\r\n      const HSEInspection = lodash.cloneDeep(emptyHSEInspection);\r\n      HSEInspection.TransactionType = selectedRow.TransactionType;\r\n      HSEInspection.DispatchReceiptCode = selectedRow.TransactionCode;\r\n      HSEInspection.LocationCode = selectedRow.LocationCode;\r\n      if (\r\n        selectedRow.OverAllHSEInspectionStatus !== undefined &&\r\n        selectedRow.OverAllHSEInspectionStatus !== null\r\n      ) {\r\n        HSEInspection.OverAllHSEInspectionStatus =\r\n          selectedRow.OverAllHSEInspectionStatus;\r\n      } else {\r\n        HSEInspection.OverAllHSEInspectionStatus = 0;\r\n      }\r\n      const locationTypeMap = {};\r\n      locationTypeMap[selectedRow.LocationCode] = selectedRow.LocationType;\r\n\r\n      if (this.state.railWagon === \"\") {\r\n        const dispatchReceiptCodeOptions = [];\r\n        if (\r\n          selectedRow.TransactionCode !== null &&\r\n          selectedRow.TransactionCode !== \"\"\r\n        ) {\r\n          dispatchReceiptCodeOptions.push({\r\n            text: selectedRow.TransactionCode,\r\n            value: selectedRow.TransactionCode,\r\n          });\r\n        }\r\n\r\n        this.setState({\r\n          HSEInspection: lodash.cloneDeep(HSEInspection),\r\n          modHSEInspection: lodash.cloneDeep(HSEInspection),\r\n          associations: [],\r\n          modAssociations: [],\r\n          isManualEntry: false,\r\n          dispatchReceiptCodeOptions,\r\n          dispatchReceiptCodeSearchOptions: lodash.cloneDeep(\r\n            dispatchReceiptCodeOptions\r\n          ),\r\n          locationTypeMap,\r\n        });\r\n        this.getRailWagonCode(HSEInspection);\r\n        this.setDispatchReceiptLabel(HSEInspection);\r\n        return;\r\n      } else {\r\n        this.getRailWagonDetail(this.state.railWagon, (railWagonDetail) => {\r\n          this.getRailHSEInspectionResult(\r\n            HSEInspection,\r\n            railWagonDetail.RailWagonCategory,\r\n            this.state.railWagon\r\n          );\r\n        },\r\n        // ()=> {\r\n        //     this.localNodeAttribute();\r\n        // }\r\n        );\r\n        return;\r\n      }\r\n    }\r\n\r\n    const data = {\r\n      TransportationType: this.props.transportationType,\r\n      TransactionType: selectedRow.TransactionType,\r\n      Location: selectedRow.LocationCode,\r\n      VehicleCode: selectedRow.VehicleCode,\r\n      VehicleType: selectedRow.VehicleType,\r\n      EntityCode: selectedRow.TransactionCode,\r\n      TransportationUnitType:\r\n        selectedRow.VehicleType === null ? \"\" : selectedRow.VehicleType,\r\n      TransportationUnitTypeCode: selectedRow.VehicleCode,\r\n      OverAllHSEInspectionStatus: selectedRow.OverAllHSEInspectionStatus,\r\n      HSEInspectionResultsMasterId: selectedRow.HseinspectionResultsMasterId,\r\n      ShareholderCode: shareholder,\r\n    };\r\n    if (\r\n      this.props.transportationType === Constants.TransportationType.PIPELINE\r\n    ) {\r\n      data.TransportationUnitType = Constants.TransportationType.PIPELINE;\r\n      data.TransportationUnitTypeCode = Constants.TransportationType.PIPELINE;\r\n      data.VehicleType = \"Pipeline\";\r\n    }\r\n    axios(\r\n      RestAPIs.GetHSEInspectionResult,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        data,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true && result.EntityResult !== null) {\r\n          this.processResponse(result);\r\n        } else {\r\n          this.setState({\r\n            HSEInspection: lodash.cloneDeep(emptyHSEInspection),\r\n            modHSEInspection: lodash.cloneDeep(emptyHSEInspection),\r\n            associations: [],\r\n            modAssociations: [],\r\n            attachments: [],\r\n            isReadyToRender: true,\r\n            isManualEntry: false,\r\n          });\r\n          this.setDispatchReceiptLabel(emptyHSEInspection);\r\n          console.log(\"Error in getHSEInspectionResult: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"HSEInspectionDetailsComposite: Error occurred on getHSEInspectionResult\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  processResponse(result) {\r\n\r\n    if(result.EntityResult.ShareholderCode===null || result.EntityResult.ShareholderCode==='')\r\n    result.EntityResult.ShareholderCode = this.props.selectedShareholder;\r\n\r\n    const vehicleCodeOptions = [];\r\n    if (\r\n      result.EntityResult.VehicleCode !== null &&\r\n      result.EntityResult.VehicleCode !== \"\"\r\n    ) {\r\n      if(result.EntityResult.TransportationType===Constants.TransportationType.ROAD)\r\n      {\r\n        vehicleCodeOptions.push({\r\n          text: result.EntityResult.VehicleCode + '[' + result.EntityResult.ShareholderCode + ']',\r\n          value: result.EntityResult.VehicleCode + '[' + result.EntityResult.ShareholderCode + ']',\r\n        });\r\n        result.EntityResult.VehicleCode=result.EntityResult.VehicleCode + '[' + result.EntityResult.ShareholderCode + ']';\r\n      }\r\n      else \r\n      {\r\n      vehicleCodeOptions.push({\r\n        text: result.EntityResult.VehicleCode ,\r\n        value: result.EntityResult.VehicleCode,\r\n      });\r\n    }\r\n    }\r\n    const vehicleCodeSearchOptions = lodash.cloneDeep(vehicleCodeOptions);\r\n    const dispatchReceiptCodeOptions = [];\r\n    if (\r\n      result.EntityResult.DispatchReceiptCode !== null &&\r\n      result.EntityResult.DispatchReceiptCode !== \"\"\r\n    ) {\r\n      if(result.EntityResult.TransportationType===Constants.TransportationType.ROAD)\r\n      {\r\n        dispatchReceiptCodeOptions.push({\r\n          text: result.EntityResult.DispatchReceiptCode + '[' + result.EntityResult.ShareholderCode + ']',\r\n          value: result.EntityResult.DispatchReceiptCode + '[' + result.EntityResult.ShareholderCode + ']',\r\n        });\r\n      }\r\n      else if(result.EntityResult.TransportationType===Constants.TransportationType.PIPELINE)\r\n      {\r\n        dispatchReceiptCodeOptions.push({\r\n          text: result.EntityResult.DispatchReceiptCode + '[' + result.EntityResult.ShareholderCode + ']',\r\n          value: result.EntityResult.DispatchReceiptCode + '[' + result.EntityResult.ShareholderCode + ']',\r\n        });\r\n        result.EntityResult.DispatchReceiptCode =\r\n        result.EntityResult.DispatchReceiptCode + '[' + result.EntityResult.ShareholderCode + ']'\r\n      }\r\n      else\r\n      {\r\n      dispatchReceiptCodeOptions.push({\r\n        text: result.EntityResult.DispatchReceiptCode,\r\n        value: result.EntityResult.DispatchReceiptCode,\r\n      });\r\n    }\r\n    } else if (\r\n      result.EntityResult.ShipmentCode !== null &&\r\n      result.EntityResult.ShipmentCode !== \"\"\r\n    ) {\r\n      if(result.EntityResult.TransportationType===Constants.TransportationType.ROAD)\r\n      {\r\n      dispatchReceiptCodeOptions.push({\r\n        text: result.EntityResult.ShipmentCode + '[' + result.EntityResult.ShareholderCode + ']',\r\n        value: result.EntityResult.ShipmentCode + '[' + result.EntityResult.ShareholderCode + ']',\r\n      });\r\n      result.EntityResult.DispatchReceiptCode =\r\n        result.EntityResult.ShipmentCode + '[' + result.EntityResult.ShareholderCode + ']'\r\n    }\r\n    else\r\n    {\r\n      dispatchReceiptCodeOptions.push({\r\n        text: result.EntityResult.ShipmentCode,\r\n        value: result.EntityResult.ShipmentCode,\r\n      });\r\n      result.EntityResult.DispatchReceiptCode =\r\n        result.EntityResult.ShipmentCode;\r\n    }\r\n      \r\n    }\r\n   \r\n    this.setState({\r\n      HSEInspection: lodash.cloneDeep(result.EntityResult),\r\n      modHSEInspection: lodash.cloneDeep(result.EntityResult),\r\n      associations: this.getAssociationsFromXMLString(\r\n        result.EntityResult.InspectedItems\r\n      ),\r\n      modAssociations: this.getAssociationsFromXMLString(\r\n        result.EntityResult.InspectedItems\r\n      ),\r\n      attachments: this.documentsInfoToAttachments(\r\n        result.EntityResult.HSEDocumentsInfo\r\n      ),\r\n      isReadyToRender: true,\r\n      saveEnabled:\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          this.props.transportationType + fnHSEInspection\r\n        ) &&\r\n        (result.EntityResult.HSEInspectionStatus ===\r\n          Constants.HSEInspectionStatus.NOT_DONE ||\r\n          result.EntityResult.HSEInspectionStatus ===\r\n            Constants.HSEInspectionStatus.INPROGRESS),\r\n      passFailAllEnabled:\r\n        result.EntityResult.OverAllHSEInspectionStatus === 0 &&\r\n        result.EntityResult.HSEInspectionStatus !==\r\n          Constants.HSEInspectionStatus.INPROGRESS,\r\n      vehicleCodeOptions,\r\n      vehicleCodeSearchOptions,\r\n      dispatchReceiptCodeOptions,\r\n      dispatchReceiptCodeSearchOptions: lodash.cloneDeep(\r\n        dispatchReceiptCodeOptions\r\n      ),\r\n      isOverAllInspection:\r\n        result.EntityResult.OverAllHSEInspectionStatus ===\r\n          Constants.HSEInspectionStatus.PASS ||\r\n        result.EntityResult.OverAllHSEInspectionStatus ===\r\n          Constants.HSEInspectionStatus.FAIL,\r\n        modAttributeList: []// this.updateAttributeInfo(result.EntityResult.Attributes),\r\n          \r\n    }\r\n    ,\r\n             \r\n            )\r\n            ;\r\n    this.getAttributesMetaData();         \r\n    this.setDispatchReceiptLabel(result.EntityResult);\r\n  }\r\n\r\n  getRoadHSEInspectionResult(\r\n    modHSEInspection,\r\n    vehicleType,\r\n    transportationUnitType,\r\n    transportationUnitTypeCode\r\n  ) {\r\n    let vehicleShareholder = this.getEntityAndShareholder(modHSEInspection.VehicleCode);\r\n    modHSEInspection.VehicleCode= vehicleShareholder.entityCode;\r\n    modHSEInspection.ShareholderCode= vehicleShareholder.ShareHolderCode;\r\n\r\n    const data = {\r\n      TransportationType: this.props.transportationType,\r\n      TransactionType: modHSEInspection.TransactionType,\r\n      Location: modHSEInspection.LocationCode,\r\n      EntityCode: modHSEInspection.DispatchReceiptCode,\r\n      TransportationUnitType:\r\n        transportationUnitType === null ? \"\" : transportationUnitType,\r\n      TransportationUnitTypeCode: transportationUnitTypeCode,\r\n      OverAllHSEInspectionStatus: modHSEInspection.OverAllHSEInspectionStatus,\r\n      VehicleCode: modHSEInspection.VehicleCode,\r\n      VehicleType: vehicleType,\r\n      HSEInspectionResultsMasterId:\r\n        this.props.selectedRow.HseinspectionResultsMasterId === undefined\r\n          ? this.state.modHSEInspection.MasterInpsectionResultsRefId\r\n          : this.props.selectedRow.HseinspectionResultsMasterId,\r\n\r\n          ShareholderCode: (modHSEInspection.ShareholderCode===undefined||modHSEInspection.ShareholderCode===''||modHSEInspection.ShareholderCode===null)?this.props.userDetails.EntityResult.PrimaryShareholder:modHSEInspection.ShareholderCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetHSEInspectionResult,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        data,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true && result.EntityResult !== null) {\r\n          this.processResponse(result);\r\n        } else {\r\n          this.getHSEInspectionItems(modHSEInspection, transportationUnitType);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"HSEInspectionDetailsComposite: Error occurred on getRailHSEInspectionResult\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getRailHSEInspectionResult(modHSEInspection, railWagonCategory, railWagon) {\r\n    const data = {\r\n      TransportationType: this.props.transportationType,\r\n      TransactionType: modHSEInspection.TransactionType,\r\n      Location: modHSEInspection.LocationCode,\r\n      EntityCode: modHSEInspection.DispatchReceiptCode,\r\n      TransportationUnitType:\r\n        railWagonCategory === null ? \"\" : railWagonCategory,\r\n      TransportationUnitTypeCode: railWagon,\r\n      OverAllHSEInspectionStatus: modHSEInspection.OverAllHSEInspectionStatus,\r\n      WagonCode: railWagon,\r\n      HSEInspectionResultsMasterId:\r\n        this.props.selectedRow.HseinspectionResultsMasterId,\r\n        ShareholderCode: this.props.selectedShareholder===null?this.props.userDetails.EntityResult.PrimaryShareholder:this.props.selectedShareholder,\r\n    };\r\n    axios(\r\n      RestAPIs.GetHSEInspectionResult,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        data,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true && result.EntityResult !== null) {\r\n          this.processRailResponse(result);\r\n        } else {\r\n          this.getHSEInspectionItems(modHSEInspection, railWagonCategory);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"HSEInspectionDetailsComposite: Error occurred on getRailHSEInspectionResult\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  processRailResponse(result) {\r\n    const dispatchReceiptCodeOptions = [];\r\n    if (\r\n      result.EntityResult.DispatchReceiptCode !== null &&\r\n      result.EntityResult.DispatchReceiptCode !== \"\"\r\n    ) {\r\n      dispatchReceiptCodeOptions.push({\r\n        text: result.EntityResult.DispatchReceiptCode,\r\n        value: result.EntityResult.DispatchReceiptCode,\r\n      });\r\n    }\r\n    \r\n    result.EntityResult.ShareholderCode = this.props.userDetails.EntityResult.PrimaryShareholder;\r\n    let saveEnabled = true;\r\n    if (result.EntityResult.OverAllHSEInspectionStatus === 0) {\r\n      if (result.EntityResult.HSEInspectionStatus !== 3) {\r\n        saveEnabled = false;\r\n      }\r\n    } else {\r\n      saveEnabled = false;\r\n    }\r\n    this.setState({\r\n      HSEInspection: lodash.cloneDeep(result.EntityResult),\r\n      modHSEInspection: lodash.cloneDeep(result.EntityResult),\r\n      associations: this.getAssociationsFromXMLString(\r\n        result.EntityResult.InspectedItems\r\n      ),\r\n      modAssociations: this.getAssociationsFromXMLString(\r\n        result.EntityResult.InspectedItems\r\n      ),\r\n      attachments: this.documentsInfoToAttachments(\r\n        result.EntityResult.HSEDocumentsInfo\r\n      ),\r\n      isReadyToRender: true,\r\n      saveEnabled:\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          this.props.transportationType + fnHSEInspection\r\n        ) && saveEnabled,\r\n      dispatchReceiptCodeOptions,\r\n      dispatchReceiptCodeSearchOptions: lodash.cloneDeep(\r\n        dispatchReceiptCodeOptions\r\n      ),\r\n    });\r\n\r\n    this.getAttributesMetaData();\r\n  }\r\n\r\n  getHSEInspectionItems(modHSEInspection, vehicleType) {\r\n    let transportationUnit;\r\n    let locationType;\r\n    switch (this.props.transportationType) {\r\n      case Constants.TransportationType.ROAD:\r\n        transportationUnit = vehicleType;\r\n        locationType =\r\n          this.state.locationTypeMap[modHSEInspection.LocationCode];\r\n        break;\r\n      case Constants.TransportationType.MARINE:\r\n        transportationUnit = \"VESSEL\";\r\n        locationType =\r\n          this.state.locationTypeMap[modHSEInspection.LocationCode];\r\n        break;\r\n      case Constants.TransportationType.RAIL:\r\n        transportationUnit = \"RAILWAGON\";\r\n        locationType =\r\n          this.state.locationTypeMap[modHSEInspection.LocationCode];\r\n        break;\r\n      case Constants.TransportationType.PIPELINE:\r\n        transportationUnit = \"PIPELINE\";\r\n        locationType = \"Pipeline\";\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    this.setState({\r\n      modAttributeList: [],\r\n    })\r\n     \r\n    if(this.props.transportationType===Constants.TransportationType.ROAD || this.props.transportationType===Constants.TransportationType.MARINE )\r\n    {\r\n      this.setState({\r\n        hseUnitInspectionType:vehicleType,\r\n      });\r\n    }\r\n    const keyCode = [\r\n      {\r\n        key: \"TransportationType\",\r\n        value: this.props.transportationType,\r\n      },\r\n      {\r\n        key: \"TransactionType\",\r\n        value: modHSEInspection.TransactionType,\r\n      },\r\n      {\r\n        key: \"LocationType\",\r\n        value: locationType,\r\n      },\r\n      {\r\n        key: \"TransportationUnit\",\r\n        value: transportationUnit,\r\n      },\r\n      {\r\n        key: \"TransportationUnitType\",\r\n        value: vehicleType,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetHSEConfiguration,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (!result.EntityResult) {\r\n            let errorMessage;\r\n            if (\r\n              this.props.transportationType ===\r\n              Constants.TransportationType.PIPELINE\r\n            ) {\r\n              if (this.state.modHSEInspection.TransactionType === \"DISPATCH\") {\r\n                errorMessage =\r\n                  \"HSE_Inspection_NoInspectionConfiguredForPipelineDispatch\";\r\n              } else {\r\n                errorMessage =\r\n                  \"HSE_Inspection_NoInspectionConfiguredForPipelineReceipt\";\r\n              }\r\n            } else {\r\n              errorMessage = \"HSE_Inspection_NoInspectionConfiguredForLocation\";\r\n            }\r\n            const notification = {\r\n              messageType: \"critical\",\r\n              message: \"HSE_Inspection_GetInspectionConfiguredStatus\",\r\n              messageResultDetails: [\r\n                {\r\n                  keyFields: [],\r\n                  keyValues: [],\r\n                  isSuccess: false,\r\n                  errorMessage: errorMessage,\r\n                },\r\n              ],\r\n            };\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n            const modHSEInspection = lodash.cloneDeep(\r\n              this.state.modHSEInspection\r\n            );\r\n            modHSEInspection.HSEInspectionStatus = null;\r\n            this.setState({\r\n              modHSEInspection,\r\n              associations: [],\r\n              modAssociations: [],\r\n              saveEnabled: false,\r\n              passFailAllEnabled: false,\r\n            });\r\n          } else {\r\n            const questions = this.getAssociationsFromXMLString(\r\n              result.EntityResult.Questions\r\n            );\r\n            const associations = [];\r\n            for (let question of questions) {\r\n              associations.push({\r\n                Severity: question.Severity,\r\n                LocalizedText: question.LocalizedText,\r\n                Status: false,\r\n                LastUpdatedTime: \"\",\r\n                Remarks: \"\",\r\n                ID: question.ID,\r\n              });\r\n            }\r\n            const modHSEInspection = lodash.cloneDeep(\r\n              this.state.modHSEInspection\r\n            );\r\n            modHSEInspection.HSEInspectionStatus = null;\r\n            this.setState({\r\n              modHSEInspection,\r\n              associations,\r\n              modAssociations: lodash.cloneDeep(associations),\r\n              attachments: [],\r\n              saveEnabled:\r\n                Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.add,\r\n                  this.props.transportationType + fnHSEInspection\r\n                ) && !this.state.isOverAllInspection,\r\n              passFailAllEnabled: !this.state.isOverAllInspection,\r\n            },\r\n            );\r\n          }\r\n        } \r\n          this.getAttributesMetaData();\r\n    }\r\n      )\r\n      .catch((error) => {\r\n        console.log(\r\n          \"HSEInspectionDetailsComposite: Error occurred on getHSEConfiguration\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modHSEInspection = lodash.cloneDeep(this.state.modHSEInspection);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      let roadTransportationUnit = this.state.roadTransportationUnit;\r\n      let railWagon = this.state.railWagon;\r\n\r\n      if (propertyName === \"CardReader\") {\r\n        this.setState({ cardReader: data });\r\n        return;\r\n      } else if (propertyName === \"transportationUnit\") {\r\n        roadTransportationUnit = data;\r\n        this.setState({ roadTransportationUnit });\r\n        if (modHSEInspection.OverAllHSEInspectionStatus !== null) {\r\n          this.getVehicleDetail(modHSEInspection, (result) => {\r\n            const transportationUnit = roadTransportationUnit.split(\" - \");\r\n            this.getRoadHSEInspectionResult(\r\n              modHSEInspection,\r\n              result.EntityResult.VehicleType,\r\n              transportationUnit[0],\r\n              transportationUnit[1]\r\n            );\r\n          }\r\n        \r\n        );\r\n          this.getAttributesMetaData();\r\n          return;\r\n        }\r\n      } else if (propertyName === \"railWagon\") {\r\n        railWagon = data;\r\n        this.setState({ railWagon });\r\n        if (modHSEInspection.OverAllHSEInspectionStatus !== null) {\r\n          this.getRailWagonDetail(railWagon, (railWagonDetail) => {\r\n            this.getRailHSEInspectionResult(\r\n              modHSEInspection,\r\n              railWagonDetail.RailWagonCategory,\r\n              railWagon\r\n            );\r\n          });\r\n          return;\r\n        }\r\n      } else {\r\n        modHSEInspection[propertyName] = data;\r\n      }\r\n      if (propertyName === \"TransactionType\") {\r\n        modHSEInspection.DispatchReceiptCode = null;\r\n        railWagon = \"\";\r\n        this.setState({ railWagon, railWagonCodeOptions: [] });\r\n        this.setDispatchReceiptLabel(modHSEInspection);\r\n        if (data === \"DISPATCH\") {\r\n          this.getDispatchReceiptCode(\"SHIPMENT\");\r\n        } else {\r\n          this.getDispatchReceiptCode(data);\r\n        }\r\n      } else if (propertyName === \"LocationCode\") {\r\n        this.mapCardReader(data, validationErrors);\r\n      }\r\n\r\n      if (HSEInspectionValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          HSEInspectionValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n      this.setState({ modHSEInspection, validationErrors });\r\n\r\n      if (propertyName === \"Remarks\") {\r\n        return;\r\n      } else if (propertyName === \"VehicleCode\") {\r\n        this.getDispatchReceiptCodeByVehicle(data, modHSEInspection.TransactionType);\r\n        modHSEInspection.DispatchReceiptCode = null;\r\n      }\r\n\r\n      if (\r\n        modHSEInspection.TransportationType ===\r\n        Constants.TransportationType.ROAD\r\n      ) {\r\n        if (propertyName === \"VehicleCode\") {\r\n          this.getVehicleDetail(modHSEInspection, (result) => {\r\n            if (\r\n              result.EntityResult.VehicleType ===\r\n                Constants.VehicleType.RigidTruckWithTrailer ||\r\n              result.EntityResult.VehicleType ===\r\n                Constants.VehicleType.TractorWithTrailer\r\n            ) {\r\n              this.setRoadTransportationUnit(result);\r\n              this.setState({\r\n                displayTransportationUnit: true,\r\n                displayOverAllInspection: true,\r\n                passFailAllEnabled: false,\r\n                saveEnabled: false,\r\n                associations: [],\r\n                modAssociations: [],\r\n              });\r\n            } else {\r\n              this.setState({\r\n                displayTransportationUnit: false,\r\n                displayOverAllInspection: false,\r\n                passFailAllEnabled: false,\r\n              });\r\n              if (\r\n                modHSEInspection.TransactionType !== null &&\r\n                modHSEInspection.LocationCode !== null &&\r\n                modHSEInspection.VehicleCode !== null\r\n              ) {\r\n                this.getHSEInspectionItems(\r\n                  modHSEInspection,\r\n                  result.EntityResult.VehicleType\r\n                );\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          if (this.state.displayTransportationUnit === true) {\r\n            if (\r\n              modHSEInspection.TransactionType !== null &&\r\n              modHSEInspection.LocationCode !== null &&\r\n              modHSEInspection.VehicleCode !== null &&\r\n              roadTransportationUnit !== \"\"\r\n            ) {\r\n              const transportationUnit = roadTransportationUnit.split(\" - \");\r\n              this.getHSEInspectionItems(\r\n                modHSEInspection,\r\n                transportationUnit[0]\r\n              );\r\n              // this.setState({ passFailAllEnabled: true });\r\n            } else {\r\n              this.setState({ associations: [], modAssociations: [] });\r\n            }\r\n          } else {\r\n            if (\r\n              modHSEInspection.TransactionType !== null &&\r\n              modHSEInspection.LocationCode !== null &&\r\n              modHSEInspection.VehicleCode !== null\r\n            ) {\r\n              if (this.props.selectedRow.VehicleType !== undefined) {\r\n                this.getHSEInspectionItems(\r\n                  modHSEInspection,\r\n                  this.props.selectedRow.VehicleType\r\n                );\r\n              } else {\r\n                this.getVehicleDetail(modHSEInspection, (result) => {\r\n                  this.getHSEInspectionItems(\r\n                    modHSEInspection,\r\n                    result.EntityResult.VehicleType\r\n                  );\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else if (\r\n        modHSEInspection.TransportationType ===\r\n        Constants.TransportationType.MARINE\r\n      ) {\r\n        if (\r\n          modHSEInspection.TransactionType !== null &&\r\n          modHSEInspection.LocationCode !== null &&\r\n          modHSEInspection.VehicleCode !== null\r\n        ) {\r\n          if (this.props.selectedRow.VehicleType !== undefined) {\r\n            this.getHSEInspectionItems(\r\n              modHSEInspection,\r\n              this.props.selectedRow.VehicleType\r\n            );\r\n          } else {\r\n            this.getVehicleDetail(modHSEInspection, (result) => {\r\n              this.getHSEInspectionItems(\r\n                modHSEInspection,\r\n                result.EntityResult.VehicleType\r\n              );\r\n            });\r\n          }\r\n        }\r\n      } else if (\r\n        modHSEInspection.TransportationType ===\r\n        Constants.TransportationType.RAIL\r\n      ) {\r\n        if (\r\n          modHSEInspection.TransactionType !== null &&\r\n          modHSEInspection.LocationCode !== null &&\r\n          modHSEInspection.DispatchReceiptCode !== null &&\r\n          railWagon !== \"\"\r\n        ) {\r\n          this.getRailWagonDetail(railWagon, (railWagonDetail) => {\r\n            this.getHSEInspectionItems(\r\n              modHSEInspection,\r\n              railWagonDetail.RailWagonCategory\r\n            );\r\n          });\r\n        } else if (propertyName === \"DispatchReceiptCode\") {\r\n          if (data !== null && data !== \"\") {\r\n            this.getRailWagonCode(modHSEInspection);\r\n          } else {\r\n            railWagon = \"\";\r\n            this.setState({ railWagon, railWagonCodeOptions: [] });\r\n          }\r\n        }\r\n      } else if (\r\n        modHSEInspection.TransportationType ===\r\n        Constants.TransportationType.PIPELINE\r\n      ) {\r\n        if (\r\n          modHSEInspection.TransactionType !== null &&\r\n          modHSEInspection.DispatchReceiptCode !== null\r\n        ) {\r\n          this.getHSEInspectionItems(modHSEInspection, \"PIPELINE\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionDetailsComposite: Error occurred on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleInspectionItemChange = (id, field, newValue) => {\r\n    const modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n    modAssociations[id][field] = newValue;\r\n    this.setState({ modAssociations });\r\n  };\r\n\r\n  convertStringtoDecimal(modHSEInspection, attributeList) {\r\n    try {\r\n      \r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modHSEInspection.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n      return modHSEInspection;\r\n    } catch (err) {\r\n      console.log(\"convertStringtoDecimal error HseInspection Details\", err);\r\n    }\r\n  }\r\n\r\n  getAssociationsFromXMLString(xmlString) {\r\n    let questionsDoc = null;\r\n    let isTransferSuccess = true;\r\n    if (!!xmlString) {\r\n      try {\r\n        if (window.ActiveXObject) {\r\n          const xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\r\n          xmlDoc.async = false;\r\n          xmlDoc.loadXML(xmlString);\r\n          questionsDoc = xmlDoc;\r\n        } else {\r\n          const parser = new DOMParser();\r\n          const xmlDoc = parser.parseFromString(xmlString, \"text/xml\");\r\n          questionsDoc = xmlDoc.getElementsByTagName(\"Questions\")[0];\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"HSEInspectionDetailsComposite: Error occurred on getAssociationsFromXMLString\",\r\n          error\r\n        );\r\n        isTransferSuccess = false;\r\n      }\r\n    } else {\r\n      isTransferSuccess = false;\r\n    }\r\n    if (!isTransferSuccess) {\r\n      return [];\r\n    }\r\n    const associations = [];\r\n    let id = 0;\r\n    for (let questionNode of questionsDoc.childNodes) {\r\n      if (questionNode.nodeName !== \"Question\") {\r\n        continue;\r\n      }\r\n      let questionTemp = {\r\n        ID: id,\r\n      };\r\n      for (let item of questionNode.childNodes) {\r\n        if (\r\n          item.nodeName !== \"Severity\" &&\r\n          item.nodeName !== \"LocalizedText\" &&\r\n          item.nodeName !== \"Status\" &&\r\n          item.nodeName !== \"LastUpdatedTime\" &&\r\n          item.nodeName !== \"Remarks\"\r\n        ) {\r\n          continue;\r\n        }\r\n        if (item.textContent === \"True\" || item.textContent === \"true\") {\r\n          questionTemp[item.nodeName] = true;\r\n        } else if (\r\n          item.textContent === \"False\" ||\r\n          item.textContent === \"false\"\r\n        ) {\r\n          questionTemp[item.nodeName] = false;\r\n        } else {\r\n          questionTemp[item.nodeName] = item.textContent;\r\n        }\r\n      }\r\n      associations.push(questionTemp);\r\n      id += 1;\r\n    }\r\n    return associations;\r\n  }\r\n\r\n  getXMLStringFromAssociations(modAssociations, lastUpdatedTime) {\r\n    let xmlString = \"<Questions>\";\r\n    for (let i in modAssociations) {\r\n      xmlString += \"<Question>\";\r\n      let question = this.state.associations[i];\r\n      let modQuestion = modAssociations[i];\r\n      for (let key in modQuestion) {\r\n        if (key === \"LastUpdatedTime\") {\r\n          if (\r\n            modQuestion[key] === \"\" ||\r\n            (question[\"Status\"] === true ? \"True\" : \"False\") !==\r\n              modQuestion[\"Status\"] ||\r\n            question[\"Remarks\"] !== modQuestion[\"Remarks\"]\r\n          ) {\r\n            modQuestion[key] = lastUpdatedTime.toISOString();\r\n          }\r\n        } else if (key === \"Status\") {\r\n          modQuestion[key] = modQuestion[key] === true ? \"True\" : \"False\";\r\n        } else if (key === \"ID\") {\r\n          continue;\r\n        }\r\n        xmlString += `<${key}>${modQuestion[key]}</${key}>`;\r\n      }\r\n      xmlString += \"</Question>\";\r\n    }\r\n    xmlString += \"</Questions>\";\r\n    return xmlString;\r\n  }\r\n\r\n  setDispatchReceiptLabel(modHSEInspection) {\r\n    let dispatchReceiptLabel;\r\n    if (modHSEInspection.TransactionType === \"RECEIPT\") {\r\n      dispatchReceiptLabel = \"ReceiptCode\";\r\n    } else {\r\n      dispatchReceiptLabel = \"Report_ShipmentCode\";\r\n    }\r\n    this.setState({ dispatchReceiptLabel });\r\n  }\r\n\r\n\r\n  saveHSEInspection = () => {\r\n    try {\r\n\r\n      this.setState({ saveEnabled: false });\r\n\r\n      let tempHSEInspection = lodash.cloneDeep(this.state.tempHSEInspection);\r\n\r\n\r\n      if (this.props.transportationType === Constants.TransportationType.ROAD) {\r\n\r\n         \r\n        let vehicleShareholder = this.getEntityAndShareholder(tempHSEInspection.VehicleCode);\r\n        tempHSEInspection.VehicleCode= vehicleShareholder.entityCode;\r\n        tempHSEInspection.ShareholderCode= vehicleShareholder.ShareHolderCode;\r\n\r\n        if(tempHSEInspection.ShipmentCode!==null)\r\n          {\r\n                  let transactionShareholder = this.getEntityAndShareholder(tempHSEInspection.ShipmentCode);\r\n                  tempHSEInspection.ShipmentCode= transactionShareholder.entityCode;\r\n          }\r\n\r\n          if(tempHSEInspection.DispatchReceiptCode!==null)\r\n          {\r\n                  let transactionShareholder = this.getEntityAndShareholder(tempHSEInspection.DispatchReceiptCode);\r\n                  tempHSEInspection.DispatchReceiptCode= transactionShareholder.entityCode;\r\n          }\r\n\r\n          if(tempHSEInspection.TransportationUnitTypeCode!==null)\r\n          {\r\n          let tranUnitCodeShareholder = this.getEntityAndShareholder(tempHSEInspection.TransportationUnitTypeCode);\r\n          tempHSEInspection.TransportationUnitTypeCode= tranUnitCodeShareholder.entityCode;\r\n          }\r\n\r\n        if (this.state.displayTransportationUnit) {\r\n          const transportationUnit =\r\n            this.state.roadTransportationUnit.split(\" - \");\r\n          this.setTransportationUnit(\r\n            tempHSEInspection,\r\n            transportationUnit[0],\r\n            transportationUnit[1]\r\n          );\r\n          this.updateHSEInspection(tempHSEInspection, 3, false);\r\n        } else {\r\n          this.getVehicleDetail(tempHSEInspection, (result) => {\r\n            this.setTransportationUnit(\r\n              tempHSEInspection,\r\n              result.EntityResult.VehicleType,\r\n              tempHSEInspection.VehicleCode\r\n            );\r\n            this.updateHSEInspection(tempHSEInspection, 3, false);\r\n          });\r\n        }\r\n      } else if (\r\n        this.props.transportationType === Constants.TransportationType.RAIL\r\n      ) {\r\n        this.getRailWagonDetail(this.state.railWagon, (railWagonDetail) => {\r\n          this.setTransportationUnit(\r\n            tempHSEInspection,\r\n            railWagonDetail.RailWagonCategory\r\n          );\r\n          this.updateHSEInspection(tempHSEInspection, 3, false, [\r\n            { key: \"CarrierCode\", value: railWagonDetail.CarrierCompanyCode },\r\n          ]);\r\n        });\r\n      } else if (\r\n        this.props.transportationType === Constants.TransportationType.MARINE\r\n      ) {\r\n        this.getVehicleDetail(tempHSEInspection, (result) => {\r\n          this.setTransportationUnit(\r\n            tempHSEInspection,\r\n            result.EntityResult.VehicleType\r\n          );\r\n          this.updateHSEInspection(tempHSEInspection, 3, false);\r\n        });\r\n      } else {\r\n        this.setTransportationUnit(tempHSEInspection);\r\n        this.updateHSEInspection(tempHSEInspection, 3, false);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"PrimeMoversComposite : Error in savePrimeMover\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n     // this.setState({ saveEnabled: false });\r\n      const modHSEInspection = lodash.cloneDeep(this.state.modHSEInspection);\r\n      const modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n      modHSEInspection.LastUpdatedTime = new Date();\r\n      modHSEInspection.LastInspectedTime = new Date();\r\n      modHSEInspection.TerminalCode= this.props.selectedTerminal;\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeList\r\n      );\r\n      modHSEInspection.InspectedItems = this.getXMLStringFromAssociations(\r\n        modAssociations,\r\n        modHSEInspection.LastUpdatedTime\r\n      );\r\n\r\n      if (!this.validateSave(modHSEInspection,attributeList)) {\r\n        this.setState({ saveEnabled: true });\r\n        return;\r\n      }\r\n\r\n      let tmphseInspection = this.convertStringtoDecimal(\r\n        modHSEInspection,\r\n        attributeList\r\n    )\r\n    modHSEInspection.Attributes= tmphseInspection.Attributes;\r\n    \r\n    let showAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n  let tempHSEInspection= lodash.cloneDeep(modHSEInspection);\r\n  this.setState({ showAuthenticationLayout, tempHSEInspection }, () => {\r\n    if (showAuthenticationLayout === false) {\r\n      this.saveHSEInspection();\r\n    }\r\n});\r\n      \r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionDetailsComposite: Error occurred on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  setTransportationUnit(\r\n    modHSEInspection,\r\n    transportationUnitType = \"\",\r\n    transportationUnitTypeCode = \"\"\r\n  ) {\r\n    switch (modHSEInspection.TransportationType) {\r\n      case Constants.TransportationType.ROAD:\r\n        modHSEInspection.TransportationUnit = transportationUnitType;\r\n        modHSEInspection.TransportationUnitType = transportationUnitType;\r\n        modHSEInspection.TransportationUnitTypeCode =\r\n          transportationUnitTypeCode;\r\n        if (modHSEInspection.TransactionType === \"SHIPMENT\") {\r\n          modHSEInspection.ShipmentCode = modHSEInspection.DispatchReceiptCode;\r\n          modHSEInspection.DispatchReceiptCode = \"\";\r\n        } else {\r\n          modHSEInspection.ShipmentCode = \"\";\r\n        }\r\n        break;\r\n      case Constants.TransportationType.MARINE:\r\n        modHSEInspection.TransportationUnit = \"VESSEL\";\r\n        modHSEInspection.TransportationUnitType = transportationUnitType;\r\n        modHSEInspection.TransportationUnitTypeCode =\r\n          modHSEInspection.VehicleCode;\r\n        modHSEInspection.ShipmentCode = \"\";\r\n        break;\r\n      case Constants.TransportationType.RAIL:\r\n        modHSEInspection.TransportationUnit = \"RAILWAGON\";\r\n        modHSEInspection.TransportationUnitType = transportationUnitType;\r\n        modHSEInspection.TransportationUnitTypeCode = this.state.railWagon;\r\n        modHSEInspection.ShipmentCode = \"\";\r\n        break;\r\n      case Constants.TransportationType.PIPELINE:\r\n        modHSEInspection.TransportationUnit =\r\n          Constants.TransportationType.PIPELINE;\r\n        modHSEInspection.TransportationUnitType =\r\n          Constants.TransportationType.PIPELINE;\r\n        modHSEInspection.TransportationUnitTypeCode =\r\n          modHSEInspection.DispatchReceiptCode;\r\n        modHSEInspection.ShipmentCode = \"\";\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  validateSave(modHSEInspection, attributeList) {\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n\r\n    Object.keys(HSEInspectionValidationDef).forEach(function (key) {\r\n      if (modHSEInspection[key] !== undefined) {\r\n        validationErrors[key] = Utilities.validateField(\r\n          HSEInspectionValidationDef[key],\r\n          modHSEInspection[key]\r\n        );\r\n      }\r\n    });\r\n\r\n    if (\r\n      modHSEInspection.TransportationType ===\r\n      Constants.TransportationType.PIPELINE\r\n    ) {\r\n      validationErrors.LocationCode = \"\";\r\n    }\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"HSE_Inspection_UpdateStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    \r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n    \r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n\r\n    var returnValue = Object.values(validationErrors).every(function (value) {\r\n      return value === \"\";\r\n    });\r\n\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(modHSEInspection, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  updateHSE= (HSEInspectionStatus, isOverAllInspection) => {\r\n    let showUpdateAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n    let tempHSEInspection= HSEInspectionStatus;\r\n    let tempIsOverAllInspection= isOverAllInspection;\r\n\r\n    this.setState({ showUpdateAuthenticationLayout,tempHSEInspection,tempIsOverAllInspection }, () => {\r\n      if (showUpdateAuthenticationLayout === false) {\r\n        this.handleUpdate();\r\n      }})\r\n     \r\n    }\r\n\r\n\r\n  handleUpdate = () => {\r\n    try {\r\n\r\n      this.setState({ showUpdateAuthenticationLayout:false});\r\n\r\n      const HSEInspectionStatus= lodash.cloneDeep(this.state.tempHSEInspection); \r\n      const isOverAllInspection= lodash.cloneDeep(this.state.tempIsOverAllInspection);\r\n\r\n      const modHSEInspection = lodash.cloneDeep(this.state.modHSEInspection);\r\n      const modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n      modHSEInspection.LastUpdatedTime = new Date();\r\n      modHSEInspection.LastInspectedTime = new Date();\r\n\r\n      if(this.props.transportationType === Constants.TransportationType.ROAD)\r\n      {\r\n        if(modHSEInspection.DispatchReceiptCode!==null)\r\n        {\r\n                let transactionShareholder = this.getEntityAndShareholder(modHSEInspection.DispatchReceiptCode);\r\n                modHSEInspection.DispatchReceiptCode= transactionShareholder.entityCode;\r\n        }\r\n\r\n        if(modHSEInspection.ShipmentCode!==null)\r\n        {\r\n                let transactionShareholder = this.getEntityAndShareholder(modHSEInspection.ShipmentCode);\r\n                modHSEInspection.ShipmentCode= transactionShareholder.entityCode;\r\n        }\r\n  \r\n        if(modHSEInspection.VehicleCode!==null)\r\n        {\r\n                let vehShareholder = this.getEntityAndShareholder(modHSEInspection.VehicleCode);\r\n                modHSEInspection.VehicleCode= vehShareholder.entityCode;\r\n                modHSEInspection.ShareholderCode=vehShareholder.ShareHolderCode;\r\n        }\r\n  \r\n        \r\n      }\r\n      \r\n\r\n\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeList\r\n      );\r\n      \r\n      modHSEInspection.InspectedItems = this.getXMLStringFromAssociations(\r\n        modAssociations,\r\n        modHSEInspection.LastUpdatedTime\r\n      );\r\n\r\n      if (!this.validateSave(modHSEInspection, attributeList)) {\r\n        this.setState({ saveEnabled: true });\r\n        return;\r\n      }\r\n\r\n      let tmphseInspection = this.convertStringtoDecimal(\r\n        modHSEInspection,\r\n        attributeList\r\n    )\r\n    modHSEInspection.Attributes= tmphseInspection.Attributes;\r\n    \r\n      if (isOverAllInspection) {\r\n        modHSEInspection.OverAllHSEInspectionStatus = HSEInspectionStatus;\r\n        if (\r\n          modHSEInspection.HSEInspectionStatus !==\r\n            Constants.HSEInspectionStatus.PASS &&\r\n          modHSEInspection.HSEInspectionStatus !==\r\n            Constants.HSEInspectionStatus.FAIL\r\n        ) {\r\n          modHSEInspection.HSEInspectionStatus = HSEInspectionStatus;\r\n        }\r\n      } else {\r\n        modHSEInspection.HSEInspectionStatus = HSEInspectionStatus;\r\n      }\r\n      if (this.props.transportationType === Constants.TransportationType.ROAD) {\r\n        if (this.state.displayTransportationUnit) {\r\n          const transportationUnit =\r\n            this.state.roadTransportationUnit.split(\" - \");\r\n          this.setTransportationUnit(\r\n            modHSEInspection,\r\n            transportationUnit[0],\r\n            transportationUnit[1]\r\n          );\r\n          this.updateHSEInspection(\r\n            modHSEInspection,\r\n            HSEInspectionStatus,\r\n            isOverAllInspection\r\n          );\r\n        } else {\r\n          this.getVehicleDetail(modHSEInspection, (result) => {\r\n            this.setTransportationUnit(\r\n              modHSEInspection,\r\n              result.EntityResult.VehicleType,\r\n              modHSEInspection.VehicleCode\r\n            );\r\n            this.updateHSEInspection(\r\n              modHSEInspection,\r\n              HSEInspectionStatus,\r\n              isOverAllInspection\r\n            );\r\n          });\r\n        }\r\n      } else if (\r\n        this.props.transportationType === Constants.TransportationType.RAIL\r\n      ) {\r\n        this.getRailWagonDetail(this.state.railWagon, (railWagonDetail) => {\r\n          this.setTransportationUnit(\r\n            modHSEInspection,\r\n            railWagonDetail.RailWagonCategory\r\n          );\r\n          this.updateHSEInspection(\r\n            modHSEInspection,\r\n            HSEInspectionStatus,\r\n            isOverAllInspection,\r\n            [{ key: \"CarrierCode\", value: railWagonDetail.CarrierCompanyCode }]\r\n          );\r\n        });\r\n      } else if (\r\n        this.props.transportationType === Constants.TransportationType.MARINE\r\n      ) {\r\n        this.getVehicleDetail(modHSEInspection, (result) => {\r\n          this.setTransportationUnit(\r\n            modHSEInspection,\r\n            result.EntityResult.VehicleType\r\n          );\r\n          this.updateHSEInspection(\r\n            modHSEInspection,\r\n            HSEInspectionStatus,\r\n            isOverAllInspection\r\n          );\r\n        });\r\n      } else {\r\n        this.setTransportationUnit(modHSEInspection);\r\n        this.updateHSEInspection(\r\n          modHSEInspection,\r\n          HSEInspectionStatus,\r\n          isOverAllInspection\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionDetailsComposite: Error occurred on handleUpdate\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  updateHSEInspection(\r\n    modHSEInspection,\r\n    HSEInspectionStatus,\r\n    isOverAllInspection,\r\n    keyCode = []\r\n  ) {\r\n    modHSEInspection.HSEDocumentsInfo = this.attachmentsToDocumentsInfo(\r\n      lodash.cloneDeep(this.state.attachments)\r\n    );\r\n    if (\r\n      this.props.selectedRow.HseinspectionResultsMasterId !== null ||\r\n      this.props.selectedRow.HseinspectionResultsMasterId !== undefined\r\n    ) {\r\n      modHSEInspection.MasterInpsectionResultsRefId =\r\n        this.props.selectedRow.HseinspectionResultsMasterId;\r\n    }\r\n\r\n    if(this.props.transportationType === Constants.TransportationType.ROAD)\r\n    {\r\n      if(modHSEInspection.DispatchReceiptCode!==null)\r\n      {\r\n              let transactionShareholder = this.getEntityAndShareholder(modHSEInspection.DispatchReceiptCode);\r\n              modHSEInspection.DispatchReceiptCode= transactionShareholder.entityCode;\r\n      }\r\n\r\n      if(modHSEInspection.ShipmentCode!==null)\r\n      {\r\n              let transactionShareholder = this.getEntityAndShareholder(modHSEInspection.ShipmentCode);\r\n              modHSEInspection.ShipmentCode= transactionShareholder.entityCode;\r\n      }\r\n\r\n      if(modHSEInspection.VehicleCode!==null)\r\n      {\r\n              let vehShareholder = this.getEntityAndShareholder(modHSEInspection.VehicleCode);\r\n              modHSEInspection.VehicleCode= vehShareholder.entityCode;\r\n      }\r\n\r\n      if(modHSEInspection.TransportationUnitTypeCode!==null)\r\n      {\r\n              let vehUnitShareholder = this.getEntityAndShareholder(modHSEInspection.TransportationUnitTypeCode);\r\n              modHSEInspection.TransportationUnitTypeCode= vehUnitShareholder.entityCode;\r\n      }\r\n    }\r\n    else   if(this.props.transportationType === Constants.TransportationType.PIPELINE)\r\n    {\r\n      if(modHSEInspection.DispatchReceiptCode!==null)\r\n      {\r\n              let transactionShareholder = this.getEntityAndShareholder(modHSEInspection.DispatchReceiptCode);\r\n              modHSEInspection.DispatchReceiptCode= transactionShareholder.entityCode;\r\n              modHSEInspection.ShareholderCode=transactionShareholder.ShareHolderCode;\r\n\r\n              modHSEInspection.TransportationUnitTypeCode=null;\r\n      }\r\n      \r\n    }\r\n\r\n    modHSEInspection.ShareholderCode= (modHSEInspection.ShareholderCode===undefined||modHSEInspection.ShareholderCode===''||modHSEInspection.ShareholderCode===null)?this.props.userDetails.EntityResult.PrimaryShareholder:modHSEInspection.ShareholderCode;\r\n    modHSEInspection.TerminalCode= this.props.selectedTerminal;\r\n\r\n    // prior release fix\r\n    // if(this.props.transportationType === Constants.TransportationType.PIPELINE && modHSEInspection.TransactionType.toUpperCase()===\"DISPATCH\") \r\n    //     modHSEInspection.TransactionType=\"SHIPMENT\";\r\n    \r\n    keyCode = keyCode.concat([\r\n      {\r\n        key: \"HseInspectionStatus\",\r\n        value: HSEInspectionStatus,\r\n      },\r\n      {\r\n        key: \"isOverAllInspection\",\r\n        value: isOverAllInspection,\r\n      },\r\n    ]);\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      KeyCodes: keyCode,\r\n      Entity: modHSEInspection,\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"HSE_Inspection_UpdateStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"HSE_Inspection\"],\r\n          keyValues: [this.props.transportationType],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateHSEInspectionStatus,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        this.setState({  showAuthenticationLayout: false, });\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult.HSEInspectionStatus === -1) {\r\n            result.EntityResult.HSEInspectionStatus =\r\n              modHSEInspection.HSEInspectionStatus;\r\n          }\r\n          if (\r\n            this.props.transportationType === Constants.TransportationType.RAIL\r\n          ) {\r\n            this.processRailResponse(result);\r\n          } else {\r\n            this.processResponse(result);\r\n          }\r\n        } else {\r\n          if (\r\n            result.ErrorList[0] !== null &&\r\n            result.ErrorList[0] !== \"\" &&\r\n            (result.ErrorList[0].split(Constants.delimiter)[0] ===\r\n              \"INVALID_FILENAME_X\" ||\r\n              result.ErrorList[0].split(Constants.delimiter)[0] ===\r\n                \"UPLOADED_FILE_NOT_IMAGE\")\r\n          ) {\r\n            this.setState({ saveEnabled: true });\r\n          }\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n        }\r\n        this.props.onSaved(notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ saveEnabled: true, showAuthenticationLayout: false, });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(notification);\r\n      });\r\n  }\r\n  \r\n \r\n  handleDispatchReceiptSearchChange = (dispatchReceiptCode) => {\r\n    try {\r\n      let dispatchReceiptCodeSearchOptions =\r\n        this.state.dispatchReceiptCodeOptions.filter((item) =>\r\n          item.value.toLowerCase().includes(dispatchReceiptCode.toLowerCase())\r\n        );\r\n      if (\r\n        dispatchReceiptCodeSearchOptions.length > Constants.filteredOptionsCount\r\n      ) {\r\n        dispatchReceiptCodeSearchOptions =\r\n          dispatchReceiptCodeSearchOptions.slice(\r\n            0,\r\n            Constants.filteredOptionsCount\r\n          );\r\n      }\r\n\r\n      this.setState({\r\n        dispatchReceiptCodeSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionDetailsComposite:Error occurred on handleDispatchReceiptSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleVehicleSearchChange = (VehicleCode) => {\r\n    try {\r\n      let vehicleCodeSearchOptions = this.state.vehicleCodeOptions.filter(\r\n        (item) => item.value.toLowerCase().includes(VehicleCode.toLowerCase())\r\n      );\r\n      if (vehicleCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n        vehicleCodeSearchOptions = vehicleCodeSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        vehicleCodeSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionDetailsComposite:Error occurred on handleVehicleSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleOpenAttachmentsModal = () => {\r\n    try {\r\n      const modalOpen = this.state.modalOpen;\r\n      modalOpen.attachments = true;\r\n      this.setState({ modalOpen });\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionDetailsComposite:Error occurred on handleOpenAttachmentsModal\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAddAttachment = (file) => {\r\n    try {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        let fileType, fileBase64;\r\n        [fileType, fileBase64] = reader.result.split(\";\", 2);\r\n        fileType = fileType.split(\":\")[1];\r\n        fileBase64 = fileBase64.split(\",\")[1];\r\n        const fileNameArray = file.name.split(\".\");\r\n        const fileExtension =\r\n          \".\" + fileNameArray[fileNameArray.length - 1].toLowerCase();\r\n        if (\r\n          this.state.attachmentFileSetting.FileTypesAllowedToUpload.indexOf(\r\n            fileExtension\r\n          ) !== -1\r\n        ) {\r\n          let fileName = file.name;\r\n          let recordFileName = fileName + Constants.delimiter + fileType;\r\n          while (this.checkFileName(recordFileName)) {\r\n            let fileNameArray = fileName.split(\".\");\r\n            if (fileNameArray.length > 1) {\r\n              fileNameArray[fileNameArray.length - 2] += \"_new\";\r\n            } else {\r\n              fileNameArray[0] += \"_new\";\r\n            }\r\n            fileName = fileNameArray.join(\".\");\r\n            recordFileName = fileName + Constants.delimiter + fileType;\r\n          }\r\n          if (fileName.length > 40) {\r\n            const notification = {\r\n              messageType: \"critical\",\r\n              message: \"HSE_Inspection_UpdateStatus\",\r\n              messageResultDetails: [\r\n                {\r\n                  keyFields: [],\r\n                  keyValues: [],\r\n                  isSuccess: false,\r\n                  errorMessage: \"FileNameTooLong\",\r\n                },\r\n              ],\r\n            };\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n            return;\r\n          }\r\n          const attachment = {\r\n            blob: this.base64ToBlob(fileBase64, fileType),\r\n            doc: {\r\n              FileMode: Constants.FileMode.ADD,\r\n              FileName: recordFileName,\r\n              FileContent: fileBase64,\r\n            },\r\n          };\r\n          const attachments = lodash.cloneDeep(this.state.attachments);\r\n          attachments.push(attachment);\r\n          let addFileEnabled = this.state.addFileEnabled;\r\n          if (\r\n            this.checkAttachmentsNumber(attachments) >=\r\n            this.state.attachmentFileSetting.NoOfFilesAllowedToUpload\r\n          ) {\r\n            addFileEnabled = false;\r\n          }\r\n          this.setState({ attachments, addFileEnabled });\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionDetailsComposite:Error occurred on handleAddAttachment\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  checkFileName(recordFileName) {\r\n    for (let item of this.state.attachments) {\r\n      if (item.doc.FileName === recordFileName) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  handleDeleteAttachments = (attachment) => {\r\n    try {\r\n      if (!this.state.saveEnabled) {\r\n        return;\r\n      }\r\n      let attachments;\r\n      if (attachment.doc.FileMode === null) {\r\n        attachments = lodash.cloneDeep(this.state.attachments);\r\n        for (let i = 0; i < attachments.length; i++) {\r\n          if (attachments[i].doc.FileName === attachment.doc.FileName) {\r\n            attachments[i].doc.FileMode = Constants.FileMode.DELETE;\r\n          }\r\n        }\r\n      } else {\r\n        attachments = this.state.attachments.filter((item) => {\r\n          return item.doc.FileName !== attachment.doc.FileName;\r\n        });\r\n      }\r\n      let addFileEnabled = this.state.addFileEnabled;\r\n      if (\r\n        this.checkAttachmentsNumber(attachments) <\r\n        this.state.attachmentFileSetting.NoOfFilesAllowedToUpload\r\n      ) {\r\n        addFileEnabled = true;\r\n      }\r\n      this.setState({ attachments, addFileEnabled });\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionDetailsComposite:Error occurred on handleDeleteAttachments\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttachments = () => {\r\n    try {\r\n      const attachments = lodash.cloneDeep(this.state.attachments);\r\n      const newAttachments = [];\r\n      for (let attachment of attachments) {\r\n        if (attachment.doc.FileMode === null) {\r\n          attachment.doc.FileMode = Constants.FileMode.DELETE;\r\n          newAttachments.push(attachment);\r\n        }\r\n      }\r\n      this.setState({ attachments: newAttachments, addFileEnabled: true });\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionDetailsComposite:Error occurred on handleResetAttachments\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  checkAttachmentsNumber(attachments) {\r\n    let number = 0;\r\n    for (let attachment of attachments) {\r\n      if (attachment.doc.FileMode !== Constants.FileMode.DELETE) {\r\n        number += 1;\r\n      }\r\n    }\r\n    return number;\r\n  }\r\n\r\n  documentsInfoToAttachments(documentsInfo) {\r\n    if (documentsInfo === null) {\r\n      return [];\r\n    }\r\n    const attachments = [];\r\n    for (let document of documentsInfo) {\r\n      if (document.FileMode !== Constants.FileMode.DELETE) {\r\n        document.FileMode = null;\r\n      }\r\n      attachments.push({\r\n        blob: null,\r\n        doc: document,\r\n      });\r\n    }\r\n    return attachments;\r\n  }\r\n\r\n  attachmentsToDocumentsInfo(attachments) {\r\n    const documentsInfo = [];\r\n    for (let attachment of attachments) {\r\n      documentsInfo.push(attachment.doc);\r\n    }\r\n    return documentsInfo;\r\n  }\r\n\r\n  handleOpenAttachment = (attachment) => {\r\n    const fileDescription = attachment.doc.FileName.split(\r\n      Constants.delimiter,\r\n      2\r\n    );\r\n    if (attachment.blob === null) {\r\n      this.getHSEInspectionResultsDoc(\r\n        this.state.modHSEInspection.ID,\r\n        attachment.doc.FileName,\r\n        (result) => {\r\n          const fileBlob = this.base64ToBlob(\r\n            result.EntityResult.FileContent,\r\n            fileDescription[1]\r\n          );\r\n          const attachments = lodash.cloneDeep(this.state.attachments);\r\n          for (let i = 0; i < attachments.length; i++) {\r\n            if (attachments[i].doc.FileName === attachment.doc.FileName) {\r\n              attachments[i].blob = fileBlob;\r\n            }\r\n          }\r\n          this.setState({ attachments });\r\n          this.downloadBlob(fileBlob, fileDescription[0]);\r\n        }\r\n      );\r\n    } else {\r\n      this.downloadBlob(attachment.blob, fileDescription[0]);\r\n    }\r\n  };\r\n\r\n \r\n\r\n  getHSEInspectionResultsDoc(HSEInspectionResultId, fileName, callback) {\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      KeyCodes: [],\r\n      Entity: {\r\n        HSEInspectionResultsId: HSEInspectionResultId,\r\n        FileName: fileName,\r\n      },\r\n    };\r\n    axios(\r\n      RestAPIs.GetHSEDocumentInfo,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          callback(result);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting HSEInspectionResultsDoc:\", error);\r\n      });\r\n  }\r\n\r\n  base64ToBlob(base64String, fileType) {\r\n    const fileBin = atob(base64String);\r\n    let n = fileBin.length;\r\n    const uint8Array = new Uint8Array(n);\r\n    while (n--) {\r\n      uint8Array[n] = fileBin.charCodeAt(n);\r\n    }\r\n    return new Blob([uint8Array], { type: fileType });\r\n  }\r\n\r\n  downloadBlob(blob, fileName) {\r\n    if (navigator.msSaveBlob) {\r\n      navigator.msSaveBlob(blob, fileName);\r\n    } else {\r\n      const saveLink = document.createElementNS(\r\n        \"http://www.w3.org/1999/xhtml\",\r\n        \"a\"\r\n      );\r\n      const urlObject = window.URL || window.webkitURL || window;\r\n      saveLink.href = urlObject.createObjectURL(blob);\r\n      saveLink.download = fileName;\r\n      const event = document.createEvent(\"MouseEvents\");\r\n      event.initMouseEvent(\r\n        \"click\",\r\n        true,\r\n        false,\r\n        window,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        false,\r\n        false,\r\n        false,\r\n        false,\r\n        0,\r\n        null\r\n      );\r\n      saveLink.dispatchEvent(event);\r\n    }\r\n  }\r\n\r\n\r\n  handleCellDataEdit = (attribute, value) => {\r\n    try {\r\n      attribute.DefaultValue = value;\r\n      this.setState({\r\n        attribute: attribute,\r\n      });\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[\r\n            attribute.Code\r\n          ] = Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"HseInspectionDetailsComposite:Error occured on handleCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n      showUpdateAuthenticationLayout : false,\r\n    });\r\n  };\r\n\r\n  getFunctionGroupName() {\r\n    if(this.props.transportationType === Constants.TransportationType.RAIL)\r\n      return fnRailHSEInspection;                   \r\n    else  if(this.props.transportationType === Constants.TransportationType.MARINE)\r\n      return fnMarineHSEInspection;\r\n      else  if(this.props.transportationType === Constants.TransportationType.PIPELINE)\r\n      return fnPipelineHSEInspection;\r\n    else  \r\n      return fnRoadHSEInspection;\r\n   };\r\n   \r\n   handleOperation()  {\r\n  \r\n    if(this.state.showAuthenticationLayout)\r\n      return this.saveHSEInspection\r\n    else if(this.state.showUpdateAuthenticationLayout)\r\n      return this.handleUpdate\r\n    \r\n };\r\n\r\n  render() {\r\n    const modalOpen = this.state.modalOpen;\r\n    const attachmentsList = [];\r\n    for (let attachment of this.state.attachments) {\r\n      if (attachment.doc.FileMode !== Constants.FileMode.DELETE) {\r\n        attachmentsList.push(\r\n          <div\r\n            className=\"hse-inspection-attachments-item\"\r\n            key={attachment.doc.FileName}\r\n          >\r\n            <div\r\n              className=\"hse-inspection-attachments-name\"\r\n              onClick={() => this.handleOpenAttachment(attachment)}\r\n            >\r\n              {attachment.doc.FileName.split(Constants.delimiter)[0]}\r\n            </div>\r\n            <div\r\n              className=\"hse-inspection-attachments-delete\"\r\n              onClick={() => this.handleDeleteAttachments(attachment)}\r\n            >\r\n              ×\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            newEntityName={\"HSE Inspection - \" + this.props.transportationType}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <HSEInspectionDetails\r\n            HSEInspection={this.state.HSEInspection}\r\n            modHSEInspection={this.state.modHSEInspection}\r\n            modAssociations={this.state.modAssociations}\r\n            validationErrors={this.state.validationErrors}\r\n\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            modAttributeList={this.state.modAttributeList}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n\r\n            listOptions={{\r\n              transactionType: this.state.transactionTypeOptions,\r\n              vehicleCode: this.state.vehicleCodeSearchOptions,\r\n              locationCode: this.state.locationCodeOptions,\r\n              dispatchReceiptCode: this.getDispatchReceiptSearchOptions(),\r\n              roadTransportationUnit: this.state.roadTransportationUnitOptions,\r\n              railWagonCode: this.state.railWagonCodeOptions,\r\n              cardReaderCode: this.state.cardReaderCodeOptions,\r\n            }}\r\n            cardReader={this.state.cardReader}\r\n            railWagon={this.state.railWagon}\r\n            roadTransportationUnit={this.state.roadTransportationUnit}\r\n            onFieldChange={this.handleChange}\r\n            onInspectionItemChange={this.handleInspectionItemChange}\r\n            onDetectVehicle={this.handleDetectVehicle}\r\n            onCancelDetect={this.handleCancelDetect}\r\n            transportationType={this.props.transportationType}\r\n            dispatchReceiptLabel={this.state.dispatchReceiptLabel}\r\n            isManualEntry={this.state.isManualEntry}\r\n            handleUpdate={this.handleUpdate}\r\n            displayTransportationUnit={this.state.displayTransportationUnit}\r\n            onDispatchReceiptSearchChange={\r\n              this.handleDispatchReceiptSearchChange\r\n            }\r\n            onVehicleSearchChange={this.handleVehicleSearchChange}\r\n            handleOpenAttachmentsModal={this.handleOpenAttachmentsModal}\r\n            numberOfAttachments={this.checkAttachmentsNumber(\r\n              this.state.attachments\r\n            )}\r\n          />\r\n        </ErrorBoundary>\r\n\r\n        <ErrorBoundary>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <div className=\"row\">\r\n                <div className=\"col col-2\">\r\n                  <Button\r\n                    className=\"backButton\"\r\n                    onClick={this.props.onBack}\r\n                    content={t(\"Back\")}\r\n                  ></Button>\r\n                </div>\r\n                <div className=\"col col-10\" style={{ textAlign: \"right\" }}>\r\n                  <Button\r\n                    content={t(\"Save\")}\r\n                    disabled={!this.state.saveEnabled || this.isNodeEnterpriseOrWebortal()}\r\n                    onClick={() => this.handleSave()}\r\n                  ></Button>\r\n                  <Button\r\n                    content={t(\"VehHSE_Pass\")}\r\n                    disabled={!this.state.saveEnabled || this.isNodeEnterpriseOrWebortal()}\r\n                    onClick={() => {\r\n                      modalOpen.pass = true;\r\n                      this.setState({ modalOpen });\r\n                    }}\r\n                  ></Button>\r\n                  <Button\r\n                    content={t(\"VehHSE_Fail\")}\r\n                    className={\r\n                      (this.state.saveEnabled === true && !this.isNodeEnterpriseOrWebortal() )? \"cancelButton\" : \"\"\r\n                    }\r\n                    disabled={!this.state.saveEnabled || this.isNodeEnterpriseOrWebortal()}\r\n                    onClick={() => {\r\n                      modalOpen.fail = true;\r\n                      this.setState({ modalOpen });\r\n                    }}\r\n                  ></Button>\r\n                  {this.state.displayOverAllInspection ? (\r\n                    <Button\r\n                      content={t(\"HSE_PassAll\")}\r\n                      disabled={!this.state.passFailAllEnabled || this.isNodeEnterpriseOrWebortal()}\r\n                      onClick={() => {\r\n                        modalOpen.passAll = true;\r\n                        this.setState({ modalOpen });\r\n                      }}\r\n                    ></Button>\r\n                  ) : null}\r\n                  {this.state.displayOverAllInspection ? (\r\n                    <Button\r\n                      content={t(\"HSE_FailAll\")}\r\n                      className={\r\n                        (this.state.passFailAllEnabled === true &&  !this.isNodeEnterpriseOrWebortal() )\r\n                          ? \"cancelButton\"\r\n                          : \"\"\r\n                      }\r\n                      disabled={!this.state.passFailAllEnabled || this.isNodeEnterpriseOrWebortal()}\r\n                      onClick={() => {\r\n                        modalOpen.failAll = true;\r\n                        this.setState({ modalOpen });\r\n                      }}\r\n                    ></Button>\r\n                  ) : null}\r\n                </div>\r\n                <div>\r\n                  <Modal\r\n                    size=\"mini\"\r\n                    open={this.state.modalOpen.pass}\r\n                    closeOnDimmerClick={false}\r\n                  >\r\n                    <Modal.Content>\r\n                      {t(\"HSE_PassInspection\")}\r\n                    </Modal.Content>\r\n                    <Modal.Footer>\r\n                      <Button\r\n                        content={t(\"AccessCardInfo_Ok\")}\r\n                        onClick={() => {\r\n                          modalOpen.pass = false;\r\n                          this.setState({ modalOpen });\r\n                          this.updateHSE(1, false);\r\n                        }}\r\n                      ></Button>\r\n                      <Button\r\n                        content={t(\"AccessCardInfo_Cancel\")}\r\n                        onClick={() => {\r\n                          modalOpen.pass = false;\r\n                          this.setState({ modalOpen });\r\n                        }}\r\n                      ></Button>\r\n                    </Modal.Footer>\r\n                  </Modal>\r\n\r\n                  <Modal\r\n                    size=\"mini\"\r\n                    open={this.state.modalOpen.fail}\r\n                    closeOnDimmerClick={false}\r\n                  >\r\n                    <Modal.Content>\r\n                    {t(\"HSE_FailInspection\")}\r\n                    </Modal.Content>\r\n                    <Modal.Footer>\r\n                      <Button\r\n                        content={t(\"AccessCardInfo_Ok\")}\r\n                        onClick={() => {\r\n                          modalOpen.fail = false;\r\n                          this.setState({ modalOpen });\r\n                          this.updateHSE(2, false);\r\n                        }}\r\n                      ></Button>\r\n                      <Button\r\n                        content={t(\"AccessCardInfo_Cancel\")}\r\n                        onClick={() => {\r\n                          modalOpen.fail = false;\r\n                          this.setState({ modalOpen });\r\n                        }}\r\n                      ></Button>\r\n                    </Modal.Footer>\r\n                  </Modal>\r\n\r\n                  <Modal\r\n                    size=\"mini\"\r\n                    open={this.state.modalOpen.passAll}\r\n                    closeOnDimmerClick={false}\r\n                  >\r\n                    <Modal.Content>\r\n                    {t(\"HSE_PassInspection\")}\r\n                    </Modal.Content>\r\n                    <Modal.Footer>\r\n                      <Button\r\n                        content={t(\"AccessCardInfo_Ok\")}\r\n                        onClick={() => {\r\n                          modalOpen.passAll = false;\r\n                          this.setState({ modalOpen });\r\n                          this.updateHSE(1, true);\r\n                        }}\r\n                      ></Button>\r\n                      <Button\r\n                        content={t(\"AccessCardInfo_Cancel\")}\r\n                        onClick={() => {\r\n                          modalOpen.passAll = false;\r\n                          this.setState({ modalOpen });\r\n                        }}\r\n                      ></Button>\r\n                    </Modal.Footer>\r\n                  </Modal>\r\n\r\n                  <Modal\r\n                    size=\"mini\"\r\n                    open={this.state.modalOpen.failAll}\r\n                    closeOnDimmerClick={false}\r\n                  >\r\n                    <Modal.Content>\r\n                    {t(\"HSE_FailInspection\")}\r\n                    </Modal.Content>\r\n                    <Modal.Footer>\r\n                      <Button\r\n                        content={t(\"AccessCardInfo_Ok\")}\r\n                        onClick={() => {\r\n                          modalOpen.failAll = false;\r\n                          this.setState({ modalOpen });\r\n                          this.updateHSE(2, true);\r\n                        }}\r\n                      ></Button>\r\n                      <Button\r\n                        content={t(\"AccessCardInfo_Cancel\")}\r\n                        onClick={() => {\r\n                          modalOpen.failAll = false;\r\n                          this.setState({ modalOpen });\r\n                        }}\r\n                      ></Button>\r\n                    </Modal.Footer>\r\n                  </Modal>\r\n\r\n                  <Modal\r\n                    size=\"small\"\r\n                    open={this.state.modalOpen.attachments}\r\n                    closeOnDimmerClick={false}\r\n                    placeholder=\"Drop or Upload Any Image File\"\r\n                  >\r\n                    <Modal.Content>\r\n                      <FileDrop\r\n                        label=\"File Upload\"\r\n                        maxSize={\r\n                          this.state.attachmentFileSetting.MaximumFileSize *\r\n                          1024\r\n                        }\r\n                        multiple={false}\r\n                        acceptedTypes={\r\n                          this.state.attachmentFileSetting\r\n                            .FileTypesAllowedToUpload\r\n                        }\r\n                        disabled={\r\n                          !this.state.addFileEnabled || !this.state.saveEnabled\r\n                        }\r\n                        onAccepted={(files) =>\r\n                          this.handleAddAttachment(files[0])\r\n                        }\r\n                        onReset={() => this.handleResetAttachments()}\r\n                      />\r\n                      <div>{attachmentsList}</div>\r\n                    </Modal.Content>\r\n                    <Modal.Footer>\r\n                      <Button\r\n                        content={t(\"Done\")}\r\n                        onClick={() => {\r\n                          modalOpen.attachments = false;\r\n                          this.setState({ modalOpen });\r\n                        }}\r\n                      ></Button>\r\n                    </Modal.Footer>\r\n                  </Modal>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </TranslationConsumer>\r\n        </ErrorBoundary>\r\n\r\n        {this.state.showAuthenticationLayout || this.state.showUpdateAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.modify}\r\n            functionGroup={this.getFunctionGroupName()}\r\n            handleOperation={this.handleOperation()}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    userActions: bindActionCreators(getUserDetails, dispatch),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HSEInspectionDetailsComposite);\r\n\r\nHSEInspectionDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["HSEInspectionDrawer","Component","constructor","arguments","state","isFolded","switchFold","this","setState","render","headerClass","props","status","Constants","PASS","FAIL","itemList","item","inspectedItems","push","_jsx","TranslationConsumer","children","t","_jsxs","className","concat","Severity","Checkbox","checked","Status","onChange","ID","disabled","isEditable","LastUpdatedTime","LocalizedText","Input","placeholder","value","Remarks","data","Icon","root","name","size","Date","toLocaleString","iconClass","transportationType","ROAD","MARINE","RAIL","PIPELINE","title","onClick","HSEInspectionDetails","_ref","hseInspectionItemTitle","HSEInspection","modHSEInspection","modAssociations","validationErrors","modAttributeList","attributeValidationErrors","handleCellDataEdit","listOptions","cardReader","railWagon","roadTransportationUnit","onFieldChange","onInspectionItemChange","onDetectVehicle","onCancelDetect","dispatchReceiptLabel","isManualEntry","handleUpdate","displayTransportationUnit","onDispatchReceiptSearchChange","handleOpenAttachmentsModal","numberOfAttachments","onVehicleSearchChange","VehicleCode","DispatchReceiptCode","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","Select","fluid","indicator","label","TransactionType","error","options","transactionType","reserveSpace","OverAllHSEInspectionStatus","noResultsMessage","LocationCode","locationCode","_Fragment","CardReader","cardReaderCode","length","Button","content","vehicleCode","search","onSearch","getOptionsWithSelect","dispatchReceiptCode","TransportationUnit","railWagonCode","type","map","attribute","ErrorBoundary","Accordion","Content","AttributeDetails","selectedAttributeList","attributeMetaDataList","HSEInspectionStatus","HSEInspectionDetailsComposite","cardReaderTimer","lodash","emptyHSEInspection","associations","Utilities","HSEInspectionValidationDef","isReadyToRender","cardReaderMap","cardReaderCodeOptions","vehicleCodeOptions","vehicleTypeOptions","transactionTypeOptions","locationCodeOptions","locationTypeMap","dispatchReceiptCodeMap","dispatchReceiptCodeOptions","dispatchReceiptCodeSearchOptions","roadTransportationUnitOptions","railWagonCodeOptions","railWagonCarrierCompanyMap","saveEnabled","passFailAllEnabled","displayOverAllInspection","modalOpen","pass","fail","passAll","failAll","attachments","addFileEnabled","attachmentFileSetting","FileTypesAllowedToUpload","MaximumFileSize","NoOfFilesAllowedToUpload","isOverAllInspection","ReadStartTime","vehicleCodeSearchOptions","hseUnitInspectionType","showAuthenticationLayout","showUpdateAuthenticationLayout","tempHSEInspection","tempHSEInspectionStatus","tempIsOverAllInspection","handleDetectVehicle","setInterval","readCardData","console","log","handleCancelDetect","clearInterval","handleChange","propertyName","getVehicleDetail","result","transportationUnit","split","getRoadHSEInspectionResult","EntityResult","VehicleType","getAttributesMetaData","getRailWagonDetail","railWagonDetail","getRailHSEInspectionResult","RailWagonCategory","setDispatchReceiptLabel","getDispatchReceiptCode","mapCardReader","undefined","getDispatchReceiptCodeByVehicle","TransportationType","RigidTruckWithTrailer","TractorWithTrailer","setRoadTransportationUnit","getHSEInspectionItems","selectedRow","getRailWagonCode","handleInspectionItemChange","id","field","newValue","saveHSEInspection","vehicleShareholder","getEntityAndShareholder","entityCode","ShareholderCode","ShareHolderCode","ShipmentCode","transactionShareholder","TransportationUnitTypeCode","tranUnitCodeShareholder","setTransportationUnit","updateHSEInspection","key","CarrierCompanyCode","handleSave","LastInspectedTime","selectedTerminal","attributeList","InspectedItems","getXMLStringFromAssociations","validateSave","tmphseInspection","convertStringtoDecimal","Attributes","userDetails","IsWebPortalUser","updateHSE","vehShareholder","handleDispatchReceiptSearchChange","filter","toLowerCase","includes","slice","handleVehicleSearchChange","handleAddAttachment","file","reader","FileReader","readAsDataURL","onload","fileType","fileBase64","fileNameArray","fileExtension","indexOf","fileName","recordFileName","checkFileName","join","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","toast","NotifyEvent","notificationMessage","autoClose","attachment","blob","base64ToBlob","doc","FileMode","ADD","FileName","FileContent","checkAttachmentsNumber","handleDeleteAttachments","i","DELETE","handleResetAttachments","newAttachments","handleOpenAttachment","fileDescription","getHSEInspectionResultsDoc","fileBlob","downloadBlob","DefaultValue","forEach","Code","handleAuthenticationClose","componentWillReceiveProps","nextProps","getHSEInspectionResult","componentDidMount","setLookUpData","lookUpData","getTransactionTypes","getLocations","getAttributeEntityKey","attributeKey","toUpperCase","tranUnit","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","TransportationUnitType","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","attributeEntityKey","axios","RestAPIs","tokenDetails","tokenInfo","then","response","IsSuccess","HSEINSPECTIONSHIPMENTRIGIDTRUCK","HSEINSPECTIONSHIPMENTTRAILER","HSEINSPECTIONSHIPMENTPRIMEMOVER","HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE","HSEINSPECTIONMARINESHIPMENTBARGE","HSEINSPECTIONMARINESHIPMENTSHIP","HSEINSPECTIONSHIPMENTRAILWAGON","HSEINSPECTIONSHIPMENTPIPELINE","HSEINSPECTIONRECEIPTRIGIDTRUCK","HSEINSPECTIONRECEIPTTRAILER","HSEINSPECTIONRECEIPTPRIMEMOVER","HSEINSPECTIONRECEIPTNONFILLINGVEHICLE","HSEINSPECTIONMARINERECEIPTBARGE","HSEINSPECTIONMARINERECEIPTSHIP","HSEINSPECTIONRECEIPTRAILWAGON","HSEINSPECTIONRECEIPTPIPELINE","ListOfAttributeData","att","attributeMetaData","AttributeCode","AttributeValue","updateAttributeInfo","entityAttributeData","fileTypes","parseInt","isNodeEnterpriseOrWebortal","IsEnterpriseNode","shipment","receipt","text","locationCodeList","Array","isArray","Table","LocationType","ErrorList","catch","getCardReaderLocations","shareholder","WB_LocationCode","PointName","componentWillUnmount","obj","PrimaryShareholder","KeyCodes","CardNumber","getAccessCard","accessCardCode","keyDataCode","EntityName","EntityValue","getRoadShipmentReceiptCodes","getVehicleCode","vehArray","dict","sh","vehCode","entitySh","arr","substring","callback","keyCode","transportationUnitList","VehicleTrailers","trailerData","Trailer","TrailerType","RIGID_TRAILER","TrailerCode","NON_RIGID_TRAILER","VehiclePrimeMovers","PrimeMoverCode","shareholderCode","selectedVehicleShareholder","existingShareholder","setDispatchReceiptFilterOptions","getDispatchReceiptSearchOptions","modDispatchReceiptCode","element","processRailDispatchReceiptData","DispatchCompartmentPlanList","RailMarineReceiptCompartmentPlanList","planList","wagonCodeList","Shareholder","TransactionCode","Location","EntityCode","HSEInspectionResultsMasterId","HseinspectionResultsMasterId","processResponse","selectedShareholder","getAssociationsFromXMLString","documentsInfoToAttachments","HSEDocumentsInfo","FunctionsList","functionGroups","add","fnHSEInspection","NOT_DONE","INPROGRESS","vehicleType","transportationUnitType","transportationUnitTypeCode","MasterInpsectionResultsRefId","railWagonCategory","WagonCode","processRailResponse","locationType","questions","Questions","question","err","xmlString","questionsDoc","isTransferSuccess","window","ActiveXObject","xmlDoc","async","loadXML","parser","DOMParser","parseFromString","getElementsByTagName","questionNode","childNodes","nodeName","questionTemp","textContent","lastUpdatedTime","modQuestion","toISOString","Object","keys","returnValue","values","every","x","onSaved","attachmentsToDocumentsInfo","vehUnitShareholder","Entity","number","documentsInfo","document","HSEInspectionResultId","HSEInspectionResultsId","base64String","fileBin","atob","n","uint8Array","Uint8Array","charCodeAt","Blob","navigator","msSaveBlob","saveLink","createElementNS","urlObject","URL","webkitURL","href","createObjectURL","download","event","createEvent","initMouseEvent","dispatchEvent","getFunctionGroupName","fnRailHSEInspection","fnMarineHSEInspection","fnPipelineHSEInspection","fnRoadHSEInspection","handleOperation","attachmentsList","TMDetailsHeader","newEntityName","onBack","style","textAlign","Modal","open","closeOnDimmerClick","Footer","FileDrop","maxSize","multiple","acceptedTypes","onAccepted","files","onReset","UserAuthenticationLayout","Username","UserName","functionName","modify","functionGroup","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","dispatch","userActions","bindActionCreators","popUpContents","margin","Popup","fieldName","fieldValue","marginLeft","position","List","defaultProps","handleAttributeDateValue","convertAttributeDatetoString","chars","Dateval","getFullYear","getMonth","getDate","DataType","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","toString","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","ddlOptions","selectOptionText","option","unshift","language","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}