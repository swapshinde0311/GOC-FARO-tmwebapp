{"version":3,"file":"static/js/1994.6f2405ec.chunk.js","mappings":"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","sources":["Components/UIBase/Details/PrimeMoverDetails.jsx","Components/Composite/Details/PrimeMoverDetailsComposite.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { Accordion, Select, Input, DatePicker } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport {\r\n  getCurrentDateFormat,\r\n  getOptionsWithSelect,\r\n} from \"../../../JS/functionalUtilities\";\r\n\r\nPrimeMoverDetails.propTypes = {\r\n  primeMover: PropTypes.object.isRequired,\r\n  modPrimeMover: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    carriers: PropTypes.array,\r\n    unitOfWeight: PropTypes.array,\r\n    unitOfDimension: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n  }).isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired\r\n};\r\n\r\nPrimeMoverDetails.defaultProps = {\r\n  listOptions: {\r\n    carriers: [],\r\n    unitOfWeight: [],\r\n    unitOfDimension: [],\r\n    terminalCodes: [],\r\n  },\r\n  isEnterpriseNode: false\r\n};\r\nexport default function PrimeMoverDetails({\r\n  primeMover,\r\n  modPrimeMover,\r\n  attributeValidationErrors,\r\n  onFieldChange,\r\n  validationErrors,\r\n  onDateTextChange,\r\n  onAllTerminalsChange,\r\n  listOptions,\r\n  isEnterpriseNode,\r\n  modAttributeMetaDataList,\r\n  onAttributeDataChange\r\n}) {\r\n\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find((selectedAttribute) => {\r\n      return selectedAttribute.TerminalCode === terminal;\r\n    })\r\n    return attributeValidation.attributeValidationErrors;\r\n  }\r\n  const [t] = useTranslation();\r\n  // useEffect(() => {\r\n  //   const unitOfDimension = listOptions.unitOfDimension;\r\n  //   unitOfDimension.unshift({ text: t(\"Common_Select\"), value: null });\r\n  // }, [listOptions.unitOfDimension]);\r\n\r\n  return (\r\n    // <TranslationConsumer>\r\n    //   {(t) => (\r\n    <div className=\"detailsContainer\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modPrimeMover.Code}\r\n            label={t(`PrimeMover_Code`)}\r\n            indicator=\"required\"\r\n            disabled={primeMover.Code !== \"\"}\r\n            onChange={(data) => onFieldChange(\"Code\", data)}\r\n            error={t(validationErrors.Code)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modPrimeMover.Name}\r\n            label={t(`PrimeMoverList_Name`)}\r\n            indicator=\"required\"\r\n            onChange={(data) => onFieldChange(\"Name\", data)}\r\n            error={t(validationErrors.Name)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modPrimeMover.Description === null\r\n                ? \"\"\r\n                : modPrimeMover.Description\r\n            }\r\n            label={t(`PrimeMover_Desc`)}\r\n            onChange={(data) => onFieldChange(\"Description\", data)}\r\n            error={t(validationErrors.Description)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`PrimeMoverList_Carrier`)}\r\n            value={modPrimeMover.CarrierCompanyCode}\r\n            options={listOptions.carriers}\r\n            onChange={(data) => {\r\n              onFieldChange(\"CarrierCompanyCode\", data);\r\n            }}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.CarrierCompanyCode)}\r\n            reserveSpace={false}\r\n            disabled={primeMover.Code !== \"\"}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modPrimeMover.LicensceNo === null ? \"\" : modPrimeMover.LicensceNo\r\n            }\r\n            label={t(`PrimeMover_LicenseNo`)}\r\n            onChange={(data) => onFieldChange(\"LicensceNo\", data)}\r\n            error={t(validationErrors.LicensceNo)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <DatePicker\r\n            fluid\r\n            value={\r\n              modPrimeMover.licenseExpiryDate === null\r\n                ? \"\"\r\n                : new Date(modPrimeMover.licenseExpiryDate)\r\n            }\r\n            displayFormat={getCurrentDateFormat()}\r\n            label={t(`PrimeMover_LicenseExpiry`)}\r\n            showYearSelector=\"true\"\r\n            disablePast={true}\r\n            onChange={(data) => onFieldChange(\"licenseExpiryDate\", data)}\r\n            onTextChange={(value, error) => {\r\n              onDateTextChange(\"licenseExpiryDate\", value, error);\r\n            }}\r\n            error={t(validationErrors.licenseExpiryDate)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modPrimeMover.RoadTaxNo === null ? \"\" : modPrimeMover.RoadTaxNo\r\n            }\r\n            label={t(`PrimeMover_RoadTaxNo`)}\r\n            onChange={(data) => onFieldChange(\"RoadTaxNo\", data)}\r\n            error={t(validationErrors.RoadTaxNo)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <DatePicker\r\n            fluid\r\n            value={\r\n              modPrimeMover.RoadTaxNoIssueDate === null\r\n                ? \"\"\r\n                : new Date(modPrimeMover.RoadTaxNoIssueDate)\r\n            }\r\n            displayFormat={getCurrentDateFormat()}\r\n            label={t(`PrimeMover_RoadTaxIssue`)}\r\n            showYearSelector=\"true\"\r\n            onChange={(data) => onFieldChange(\"RoadTaxNoIssueDate\", data)}\r\n            onTextChange={(value, error) => {\r\n              onDateTextChange(\"RoadTaxNoIssueDate\", value, error);\r\n            }}\r\n            error={t(validationErrors.RoadTaxNoIssueDate)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <DatePicker\r\n            fluid\r\n            value={\r\n              modPrimeMover.RoadTaxNoExpiryDate === null\r\n                ? \"\"\r\n                : new Date(modPrimeMover.RoadTaxNoExpiryDate)\r\n            }\r\n            displayFormat={getCurrentDateFormat()}\r\n            label={t(`PrimeMover_RoadTaxExpiry`)}\r\n            disablePast={true}\r\n            showYearSelector=\"true\"\r\n            onChange={(data) => onFieldChange(\"RoadTaxNoExpiryDate\", data)}\r\n            onTextChange={(value, error) => {\r\n              onDateTextChange(\"RoadTaxNoExpiryDate\", value, error);\r\n            }}\r\n            error={t(validationErrors.RoadTaxNoExpiryDate)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modPrimeMover.TareWeight === null\r\n                ? \"\"\r\n                : modPrimeMover.TareWeight.toLocaleString()\r\n            }\r\n            label={t(`PrimeMover_Tareweight`)}\r\n            indicator=\"required\"\r\n            onChange={(data) => onFieldChange(\"TareWeight\", data)}\r\n            error={t(validationErrors.TareWeight)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`PrimeMover_UOMWeight`)}\r\n            value={modPrimeMover.TareWeightUOM}\r\n            options={listOptions.unitOfWeight}\r\n            onChange={(data) => {\r\n              onFieldChange(\"TareWeightUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.TareWeightUOM)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modPrimeMover.Height === null\r\n                ? \"\"\r\n                : modPrimeMover.Height.toLocaleString()\r\n            }\r\n            label={t(`PrimeMover_Height`)}\r\n            onChange={(data) => onFieldChange(\"Height\", data)}\r\n            error={t(validationErrors.Height)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modPrimeMover.Width === null\r\n                ? \"\"\r\n                : modPrimeMover.Width.toLocaleString()\r\n            }\r\n            label={t(`PrimeMover_Width`)}\r\n            onChange={(data) => onFieldChange(\"Width\", data)}\r\n            error={t(validationErrors.Width)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modPrimeMover.Length === null\r\n                ? \"\"\r\n                : modPrimeMover.Length.toLocaleString()\r\n            }\r\n            label={t(`PrimeMover_Length`)}\r\n            onChange={(data) => onFieldChange(\"Length\", data)}\r\n            error={t(validationErrors.Length)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`PrimeMover_UOMDimemsion`)}\r\n            value={modPrimeMover.LWHUOM}\r\n            options={getOptionsWithSelect(\r\n              listOptions.unitOfDimension,\r\n              t(\"Common_Select\")\r\n            )}\r\n            onChange={(data) => {\r\n              onFieldChange(\"LWHUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            error={t(validationErrors.LWHUOM)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n        {isEnterpriseNode ? (\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <AssociatedTerminals\r\n              terminalList={listOptions.terminalCodes}\r\n              selectedTerminal={modPrimeMover.TerminalCodes}\r\n              error={t(validationErrors.TerminalCodes)}\r\n              onFieldChange={onFieldChange}\r\n              onCheckChange={onAllTerminalsChange}\r\n            ></AssociatedTerminals>\r\n          </div>\r\n        ) : (\"\")\r\n        }\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(\"PrimeMover_Status\")}\r\n            value={modPrimeMover.Active}\r\n            options={[\r\n              { text: t(\"ViewShipment_Ok\"), value: true },\r\n              { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n            ]}\r\n            onChange={(data) => onFieldChange(\"Active\", data)}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modPrimeMover.Remarks === null ? \"\" : modPrimeMover.Remarks}\r\n            label={t(\"Trailer_Remarks\")}\r\n            indicator={\r\n              modPrimeMover.Active !== primeMover.Active ? \"required\" : \"\"\r\n            }\r\n            onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n            error={t(validationErrors.Remarks)}\r\n          />\r\n        </div>\r\n        {\r\n          modAttributeMetaDataList.length > 0 ?\r\n          modAttributeMetaDataList.map((attire) =>\r\n              <ErrorBoundary>\r\n                <Accordion>\r\n                  <Accordion.Content\r\n                    className=\"attributeAccordian\"\r\n                    title={isEnterpriseNode ? (attire.TerminalCode + ' - ' + t(\"Attributes_Header\")) : (t(\"Attributes_Header\"))}\r\n                  >\r\n                    <AttributeDetails\r\n                      selectedAttributeList={attire.attributeMetaDataList}\r\n                      handleCellDataEdit={onAttributeDataChange}\r\n                      attributeValidationErrors={handleValidationErrorFilter(attributeValidationErrors, attire.TerminalCode)}\r\n                    ></AttributeDetails>\r\n                  </Accordion.Content>\r\n                </Accordion>\r\n              </ErrorBoundary>\r\n            ) : null\r\n\r\n        }\r\n      </div>\r\n    </div>\r\n    //   )}\r\n    // </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { functionGroups, fnPrimeMover,fnKPIInformation } from \"../../../JS/FunctionGroups\";\r\nimport { emptyPrimeMover } from \"../../../JS/DefaultEntities\";\r\nimport PrimeMoverDetails from \"../../UIBase/Details/PrimeMoverDetails\";\r\nimport {\r\n  primeMoverValidationDef,\r\n} from \"../../../JS/ValidationDef\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { primeMoverAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport * as DateFieldsInEntities from \"../../../JS/DateFieldsInEntities\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { kpiPrimeMoverDetail } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass PrimeMoverDetailsComposite extends Component {\r\n  state = {\r\n    primeMover: {},\r\n    modPrimeMover: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      primeMoverValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    carrierOptions: [],\r\n    terminalOptions: [],\r\n    weightUOMOptions: [],\r\n    lengthUOMOptions: [],\r\n    saveEnabled: false,\r\n    attributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    primeMoverKPIList: [],\r\n    showAuthenticationLayout: false,\r\n    tempPrimeMover: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      let isNewPrimeMover = false;\r\n      if (this.props.selectedRow.Common_Code === undefined)\r\n        isNewPrimeMover = true;\r\n      // this.getPrimeMover(isNewPrimeMover);\r\n      this.getAttributes(isNewPrimeMover);\r\n      this.getCarrierList(this.props.selectedShareholder);\r\n      this.getUOMList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"PrimeMoverDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.primeMover.Code !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getAttributes(true);\r\n        //this.getPrimeMover(true);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"PrimeMoverDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(isNewPrimeMover) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [primeMoverAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.primemover\r\n                ),\r\n            },\r\n            () => this.getPrimeMover(isNewPrimeMover)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  getUOMList() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        // console.log(response);\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let weightUOMs = result.EntityResult.MASS;\r\n            let weightUOMOptions = [];\r\n            weightUOMs.forEach((weightOption) => {\r\n              weightUOMOptions.push({\r\n                text: weightOption,\r\n                value: weightOption,\r\n              });\r\n            });\r\n\r\n            // let volumeUOMs = result.EntityResult.VOLUME;\r\n            // let volumeUOMOptions = [];\r\n            // volumeUOMs.forEach((volumeOption) => {\r\n            //   volumeUOMOptions.push({\r\n            //     text: volumeOption,\r\n            //     value: volumeOption,\r\n            //   });\r\n            // });\r\n\r\n            let lengthUOMs = result.EntityResult.LENGTH;\r\n            let lengthUOMOptions = [];\r\n            lengthUOMs.forEach((lengthOption) => {\r\n              lengthUOMOptions.push({\r\n                text: lengthOption,\r\n                value: lengthOption,\r\n              });\r\n            });\r\n\r\n            this.setState({\r\n              weightUOMOptions,\r\n              lengthUOMOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getUOM:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getUOM:\", error);\r\n      });\r\n  }\r\n\r\n  getCarrierList(shareholder) {\r\n    axios(\r\n      RestAPIs.GetCarrierCodes +\r\n        \"?ShareholderCode=\" +\r\n        shareholder +\r\n        \"&Transportationtype=\" +\r\n        Constants.TransportationType.ROAD,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            // const carrierOptions = [];\r\n            // result.EntityResult.Table.forEach((carrier) => {\r\n            //   carrierOptions.push({\r\n            //     text: carrier.Common_Code,\r\n            //     value: carrier.Common_Name,\r\n            //   });\r\n            // });\r\n            let carrierOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n\r\n            this.setState({ carrierOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetCarrierList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Carrier List:\", error);\r\n      });\r\n  }\r\n\r\n  getPrimeMover(isNewPrimeMover) {\r\n    // let primeMover = props.selectedRow;\r\n\r\n    if (isNewPrimeMover) {\r\n      let terminalOptions = [];\r\n      emptyPrimeMover.TareWeightUOM =\r\n        this.props.userDetails.EntityResult.PageAttibutes.DefaultUOMS.MassUOM;\r\n      this.setState(\r\n        {\r\n          primeMover: lodash.cloneDeep(emptyPrimeMover),\r\n          modPrimeMover: lodash.cloneDeep(emptyPrimeMover),\r\n\r\n          isReadyToRender: true,\r\n          terminalOptions,\r\n          primeMoverKPIList:[],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnPrimeMover\r\n          ),\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode === false)\r\n            this.localNodeAttribute();\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.primeMoverCode,\r\n        value:\r\n          this.props.selectedRow.Common_Code === undefined\r\n            ? this.state.modPrimeMover.Code\r\n            : this.props.selectedRow.Common_Code,\r\n      },\r\n    ];\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.primeMoverCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetPrimeMover,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        //console.log(result);\r\n        if (result.IsSuccess === true) {\r\n          // this.getTerminalsForCarrier(result.EntityResult.CarrierCode);\r\n\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              primeMover: lodash.cloneDeep(result.EntityResult),\r\n              modPrimeMover: lodash.cloneDeep(result.EntityResult),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnPrimeMover\r\n              ),\r\n            },\r\n            () => {\r\n              this.getTerminalsForCarrier(\r\n                result.EntityResult.CarrierCompanyCode\r\n              );\r\n              this.getKPIList(this.props.selectedShareholder,result.EntityResult.PrimeMoverCode)\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            modPrimeMover: lodash.cloneDeep(emptyPrimeMover),\r\n            primeMover: lodash.cloneDeep(emptyPrimeMover),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetPrimeMover:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting PrimeMover:\", error);\r\n      });\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    let modPrimeMover = lodash.cloneDeep(this.state.modPrimeMover);\r\n    try {\r\n      if (propertyName === \"CarrierCompanyCode\") {\r\n        this.handleCarrierChange(data);\r\n      } else {\r\n        modPrimeMover[propertyName] = data;\r\n        // this.setState({ modPrimeMover });\r\n      }\r\n\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      if (modPrimeMover.Active === this.state.primeMover.Active) {\r\n        if (\r\n          this.state.primeMover.Remarks === modPrimeMover.Remarks ||\r\n          modPrimeMover.Remarks === \"\"\r\n        ) {\r\n          validationErrors.Remarks = \"\";\r\n        }\r\n        if (modPrimeMover.Remarks === \"\")\r\n          modPrimeMover.Remarks = this.state.primeMover.Remarks;\r\n      }\r\n      if (propertyName === \"Active\") {\r\n        if (modPrimeMover.Active !== this.state.primeMover.Active) {\r\n          modPrimeMover.Remarks = \"\";\r\n        }\r\n      }\r\n      if (\r\n        propertyName === \"RoadTaxNo\" ||\r\n        propertyName === \"RoadTaxNoIssueDate\" ||\r\n        propertyName === \"RoadTaxNoExpiryDate\"\r\n      ) {\r\n        //validationErrors[propertyName] = \"\";\r\n        validationErrors.RoadTaxNo = \"\";\r\n        validationErrors.RoadTaxNoExpiryDate = \"\";\r\n        validationErrors.RoadTaxNoIssueDate = \"\";\r\n      }\r\n\r\n      if (\r\n        propertyName === \"LicensceNo\" ||\r\n        propertyName === \"licenseExpiryDate\"\r\n      ) {\r\n        //validationErrors[propertyName] = \"\";\r\n        validationErrors.licenseExpiryDate = \"\";\r\n        validationErrors.LicensceNo = \"\";\r\n      }\r\n\r\n      if (\r\n        propertyName === \"Height\" ||\r\n        propertyName === \"Length\" ||\r\n        propertyName === \"Width\" ||\r\n        propertyName === \"LWHUOM\"\r\n      ) {\r\n        validationErrors.LWHUOM = \"\";\r\n      }\r\n\r\n      if (primeMoverValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          primeMoverValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n\r\n      this.setState({ validationErrors, modPrimeMover });\r\n      if (propertyName === \"TerminalCodes\") {\r\n        this.terminalSelectionChange(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"PrimeMoverDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modAttributeMetaDataList = [];\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n      var modPrimeMover = lodash.cloneDeep(this.state.modPrimeMover);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        });\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.primemover.forEach(function (\r\n            attributeMetaData\r\n          ) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue = modPrimeMover.Attributes.find(\r\n                (customerAttribute) => {\r\n                  return customerAttribute.TerminalCode === terminal;\r\n                }\r\n              );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modAttributeMetaDataList = [];\r\n      modAttributeMetaDataList = attributesTerminalsList;\r\n      modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modAttributeMetaDataList\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n\r\n      this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList.primemover) &&\r\n        attributeMetaDataList.primemover.length > 0\r\n      ) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.primemover[0].TerminalCode,\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      let validationErrors = { ...this.state.validationErrors };\r\n      let modPrimeMover = { ...this.state.modPrimeMover };\r\n      validationErrors[propertyName] = error;\r\n      modPrimeMover[propertyName] = value;\r\n      this.setState({ validationErrors, modPrimeMover });\r\n    } catch (error) {\r\n      console.log(\r\n        \"PrimeMoverDetailsComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      const modPrimeMover = lodash.cloneDeep(this.state.modPrimeMover);\r\n      let terminalOptions = [...this.state.terminalOptions];\r\n      if (checked) modPrimeMover.TerminalCodes = terminalOptions;\r\n      else modPrimeMover.TerminalCodes = [];\r\n      this.setState({ modPrimeMover });\r\n      this.terminalSelectionChange(modPrimeMover.TerminalCodes);\r\n    } catch (error) {\r\n      console.log(\r\n        \"CarrierDetailsComposite:Error occured on handleAllTerminasChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCarrierChange = (carrier) => {\r\n    // if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n    this.getTerminalsForCarrier(carrier);\r\n    // else {\r\n    //   var modPrimeMover = lodash.cloneDeep(this.state.modPrimeMover);\r\n    //   modPrimeMover.CarrierCompanyCode = carrier;\r\n    //   var terminalCodes = [];\r\n    //   modPrimeMover.TerminalCodes = [];\r\n    //   this.setState({ terminalCodes, modPrimeMover });\r\n    // }\r\n    // if (primeMoverValidationDef[\"CarrierCompanyCode\"] !== undefined) {\r\n    //   const validationErrors = { ...this.state.validationErrors };\r\n    //   validationErrors[\"CarrierCompanyCode\"] = Utilities.validateField(\r\n    //     primeMoverValidationDef[\"CarrierCompanyCode\"],\r\n    //     carrier\r\n    //   );\r\n\r\n    //   this.setState({ validationErrors, modPrimeMover });\r\n    // }\r\n  };\r\n  getTerminalsForCarrier(carrier) {\r\n    //if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n    const modPrimeMover = lodash.cloneDeep(this.state.modPrimeMover);\r\n    let terminalOptions = [...this.state.terminalOptions];\r\n    modPrimeMover.CarrierCompanyCode = carrier;\r\n\r\n    try {\r\n      if (carrier === undefined) {\r\n        terminalOptions = [];\r\n        modPrimeMover.TerminalCodes = [];\r\n        this.setState({ terminalOptions, modPrimeMover });\r\n        return;\r\n      }\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.carrierCode,\r\n          value: carrier,\r\n        },\r\n        {\r\n          key: KeyCodes.transportationType,\r\n          value: Constants.TransportationType.ROAD,\r\n        },\r\n      ];\r\n      let obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.carrierCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetCarrier,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let result = response.data;\r\n          //console.log(result);\r\n          //console.log(\"IsSuccess-\", result.IsSuccess);\r\n\r\n          if (\r\n            result.IsSuccess === true &&\r\n            result.EntityResult !== null &&\r\n            result.EntityResult.TerminalCodes !== null\r\n          ) {\r\n            terminalOptions = [...result.EntityResult.TerminalCodes];\r\n            this.setState({ terminalOptions });\r\n          } else {\r\n            terminalOptions = [];\r\n\r\n            this.setState({ terminalOptions });\r\n            console.log(\"Error in GetCarrier:\", result.ErrorList);\r\n          }\r\n          let primeMover = { ...this.state.primeMover };\r\n          if (\r\n            primeMover.Code === undefined ||\r\n            primeMover.Code === \"\" ||\r\n            primeMover.Code === null\r\n          ) {\r\n            if (terminalOptions.length === 1) {\r\n              modPrimeMover.TerminalCodes = [...terminalOptions];\r\n              this.terminalSelectionChange(modPrimeMover.TerminalCodes);\r\n            } else {\r\n              modPrimeMover.TerminalCodes = [];\r\n              this.localNodeAttribute();\r\n            }\r\n          }\r\n          if (Array.isArray(modPrimeMover.TerminalCodes)) {\r\n            modPrimeMover.TerminalCodes = terminalOptions.filter((x) =>\r\n              modPrimeMover.TerminalCodes.includes(x)\r\n            );\r\n          }\r\n\r\n          this.setState({ modPrimeMover });\r\n        })\r\n        .catch((error) => {\r\n          terminalOptions = [];\r\n          modPrimeMover.TerminalCodes = [];\r\n          this.setState({ terminalOptions, modPrimeMover });\r\n          console.log(\"Error while getting Carrier:\", error, carrier);\r\n          //throw error;\r\n        });\r\n    } catch (error) {\r\n      terminalOptions = [];\r\n      modPrimeMover.TerminalCodes = [];\r\n      this.setState({ terminalOptions, modPrimeMover });\r\n      console.log(\r\n        \"PrimeMoverDetailsComposite:Error occured on handleCarrierChange\",\r\n        error\r\n      );\r\n    }\r\n    // }\r\n  }\r\n\r\n  fillDetails() {\r\n    try {\r\n      const modPrimeMover = { ...this.state.modPrimeMover };\r\n      modPrimeMover.ShareholderCode = this.props.selectedShareholder;\r\n      if (modPrimeMover.Height === \"\") modPrimeMover.Height = null;\r\n      if (modPrimeMover.Length === \"\") modPrimeMover.Length = null;\r\n      if (modPrimeMover.Width === \"\") modPrimeMover.Width = null;\r\n\r\n      if (modPrimeMover.TareWeight !== null && modPrimeMover.TareWeight !== \"\")\r\n        modPrimeMover.TareWeight = modPrimeMover.TareWeight.toLocaleString();\r\n      if (modPrimeMover.Height !== null && modPrimeMover.Height !== \"\")\r\n        modPrimeMover.Height = modPrimeMover.Height.toLocaleString();\r\n      if (modPrimeMover.Length !== null && modPrimeMover.Length !== \"\")\r\n        modPrimeMover.Length = modPrimeMover.Length.toLocaleString();\r\n      if (modPrimeMover.Width !== null && modPrimeMover.Width !== \"\")\r\n        modPrimeMover.Width = modPrimeMover.Width.toLocaleString();\r\n      modPrimeMover.PrimeMoverType =\r\n        Constants.PrimeMoverType.NON_RIGID_PRIMEMOVER;\r\n\r\n      return modPrimeMover;\r\n    } catch (err) {\r\n      console.log(\"PrimeMoverDetails error on fill details\", err);\r\n    }\r\n  }\r\n\r\n  convertStringtoDecimal(modPrimeMover, attributeList) {\r\n    try {\r\n      if (modPrimeMover.Height !== null && modPrimeMover.Height !== \"\") {\r\n        modPrimeMover.Height = Utilities.convertStringtoDecimal(\r\n          modPrimeMover.Height\r\n        );\r\n      }\r\n      if (modPrimeMover.Length !== null && modPrimeMover.Length !== \"\") {\r\n        modPrimeMover.Length = Utilities.convertStringtoDecimal(\r\n          modPrimeMover.Length\r\n        );\r\n      }\r\n      if (modPrimeMover.Width !== null && modPrimeMover.Width !== \"\") {\r\n        modPrimeMover.Width = Utilities.convertStringtoDecimal(\r\n          modPrimeMover.Width\r\n        );\r\n      }\r\n\r\n      if (\r\n        modPrimeMover.TareWeight !== null &&\r\n        modPrimeMover.TareWeight !== \"\"\r\n      ) {\r\n        modPrimeMover.TareWeight = Utilities.convertStringtoDecimal(\r\n          modPrimeMover.TareWeight\r\n        );\r\n      }\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modPrimeMover.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n      return modPrimeMover;\r\n    } catch (err) {\r\n      console.log(\"convertStringtoDecimal error primemover details\", err);\r\n    }\r\n  }\r\n  savePrimeMover = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempPrimeMover = lodash.cloneDeep(this.state.tempPrimeMover);\r\n\r\n      this.state.primeMover.Code === \"\"\r\n        ? this.createPrimeMover(tempPrimeMover)\r\n        : this.updatePrimeMover(tempPrimeMover);\r\n    } catch (error) {\r\n      console.log(\"PrimeMoversComposite : Error in savePrimeMover\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n      let returnValue = Object.values(this.state.validationErrors).every(\r\n        function (value) {\r\n          return value === \"\";\r\n        }\r\n      );\r\n      if (returnValue) {\r\n        //this.setState({ saveEnabled: false });\r\n        let modPrimeMover = this.fillDetails();\r\n        let attributeList = Utilities.attributesConverttoLocaleString(\r\n          this.state.modAttributeMetaDataList\r\n        );\r\n\r\n        if (this.validateSave(modPrimeMover, attributeList)) {\r\n          modPrimeMover = this.convertStringtoDecimal(\r\n            modPrimeMover,\r\n            attributeList\r\n          );\r\n\r\n          modPrimeMover = Utilities.convertDatesToString(\r\n            DateFieldsInEntities.DatesInEntity.PrimeMover,\r\n            modPrimeMover\r\n          );\r\n          \r\n          let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempPrimeMover = lodash.cloneDeep(modPrimeMover);\r\n        this.setState({ showAuthenticationLayout, tempPrimeMover }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.savePrimeMover();\r\n          }\r\n      });\r\n        \r\n        } else {\r\n          this.setState({ saveEnabled: true });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"PrimeMoverDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  validateSave(modPrimeMover, attributeList) {\r\n    //const modPrimeMover = this.state.modPrimeMover;\r\n    let validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(primeMoverValidationDef).forEach(function (key) {\r\n      validationErrors[key] = Utilities.validateField(\r\n        primeMoverValidationDef[key],\r\n        modPrimeMover[key]\r\n      );\r\n    });\r\n\r\n    if (modPrimeMover.Active !== this.state.primeMover.Active) {\r\n      if (modPrimeMover.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"PrimeMover_RemarksRequired\";\r\n      }\r\n    }\r\n\r\n    if (\r\n      (modPrimeMover.LicensceNo !== null && modPrimeMover.LicensceNo !== \"\") ||\r\n      !isNaN(Date.parse(modPrimeMover.licenseExpiryDate))\r\n    ) {\r\n      if (isNaN(Date.parse(modPrimeMover.licenseExpiryDate)))\r\n        validationErrors.licenseExpiryDate = \"LICENSEEXPIRYDATE_REQUIRED\";\r\n\r\n      if (modPrimeMover.LicensceNo === null || modPrimeMover.LicensceNo === \"\")\r\n        validationErrors.LicensceNo = \"Vessel_LicNoRequired\";\r\n    }\r\n\r\n    if (\r\n      (modPrimeMover.RoadTaxNo !== null && modPrimeMover.RoadTaxNo !== \"\") ||\r\n      !isNaN(Date.parse(modPrimeMover.RoadTaxNoIssueDate)) ||\r\n      !isNaN(Date.parse(modPrimeMover.RoadTaxNoExpiryDate))\r\n    ) {\r\n      if (modPrimeMover.RoadTaxNo === null || modPrimeMover.RoadTaxNo === \"\") {\r\n        validationErrors[\"RoadTaxNo\"] = \"Vehicle_RoadTaxNoRequired\";\r\n      }\r\n\r\n      if (isNaN(Date.parse(modPrimeMover.RoadTaxNoIssueDate))) {\r\n        validationErrors[\"RoadTaxNoIssueDate\"] = \"Vehicle_RoadTaxIssRequired\";\r\n      }\r\n      if (isNaN(Date.parse(modPrimeMover.RoadTaxNoExpiryDate))) {\r\n        validationErrors[\"RoadTaxNoExpiryDate\"] = \"Vehicle_RoadTaxExpRequired\";\r\n      }\r\n    }\r\n\r\n    // let notification = {\r\n    //   messageType: \"critical\",\r\n    //   message: \"PrimeMoverDetails_SavedStatus\",\r\n    //   messageResultDetails: [],\r\n    // };\r\n\r\n    if (\r\n      (modPrimeMover.Height !== null ||\r\n        modPrimeMover.Width != null ||\r\n        modPrimeMover.Length !== null) &&\r\n      modPrimeMover.LWHUOM === null\r\n    ) {\r\n      // if (modPrimeMover.Height === null)\r\n      //   validationErrors.Height = \"Common_HeightRequired\";\r\n      // if (modPrimeMover.Length === null)\r\n      //   validationErrors.Length = \"Common_LengthRequired\";\r\n      // if (modPrimeMover.Width === null)\r\n      //   validationErrors.Width = \"Common_WidthRequired\";\r\n      // if (validationErrors.LWHUOM === null)\r\n      validationErrors.LWHUOM = \"PrimeMover_UOMRequired\";\r\n\r\n      // notification.messageResultDetails.push({\r\n      //   keyFields: [\"PrimeMover_Code\"],\r\n      //   keyValues: [modPrimeMover.Code],\r\n      //   isSuccess: false,\r\n      //   errorMessage: \"PrimeMover_UOMRequired\",\r\n      // });\r\n    }\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n    var returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    return returnValue;\r\n    // if (notification.messageResultDetails.length > 0) {\r\n    //   this.props.onSaved(this.state.modPrimeMover, \"update\", notification);\r\n    //   return false;\r\n    // }\r\n    //return returnValue;\r\n  }\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors,modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"DriverDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.driver\r\n          ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  createPrimeMover(modPrimeMover) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.primeMoverCode,\r\n        value: modPrimeMover.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.primeMoverCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modPrimeMover,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"PrimeMoverDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"PrimeMover_Code\"],\r\n          keyValues: [modPrimeMover.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreatePrimeMover,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            // modPrimeMover: lodash.cloneDeep(modPrimeMover),\r\n            // primeMover: lodash.cloneDeep(modPrimeMover),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnPrimeMover\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          this.getPrimeMover(false);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnPrimeMover\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in CreatePrimeMover:\", result.ErrorList);\r\n        }\r\n\r\n        this.props.onSaved(modPrimeMover, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnPrimeMover\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modPrimeMover, \"add\", notification);\r\n      });\r\n  }\r\n  updatePrimeMover(modPrimeMover) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.primeMoverCode,\r\n        value: modPrimeMover.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.primeMoverCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modPrimeMover,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"PrimeMoverDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"PrimeMover_Code\"],\r\n          keyValues: [modPrimeMover.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdatePrimeMover,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            // modPrimeMover: lodash.cloneDeep(modPrimeMover),\r\n            // primeMover: lodash.cloneDeep(modPrimeMover),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnPrimeMover\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          this.getPrimeMover(false);\r\n        } else {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnPrimeMover\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in UpdatePrimeMover:\", result.ErrorList);\r\n        }\r\n        //console.log(notification);\r\n        this.props.onSaved(modPrimeMover, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modPrimeMover, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnPrimeMover\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      let modPrimeMover = lodash.cloneDeep(this.state.primeMover);\r\n      this.setState({ modPrimeMover });\r\n      if (this.state.primeMover.Code === \"\") {\r\n        // let terminalOptions = [ ...this.state.terminalOptions ];\r\n        let terminalOptions = [];\r\n        this.setState({ terminalOptions });\r\n      }\r\n      let validationErrors = { ...this.state.validationErrors };\r\n      Object.keys(validationErrors).forEach((key) => {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState(\r\n        {\r\n          validationErrors,\r\n          modAttributeMetaDataList: [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(modPrimeMover.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"PrimeMoverDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  //Get KPI for Prime Mover\r\n  getKPIList(shareholder, primeMoverCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      let objKPIRequestData = {\r\n        PageName: kpiPrimeMoverDetail,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder }, { key: \"PrimemoverCode\", value: primeMoverCode }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              primeMoverKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ primeMoverKPIList: [] });\r\n            console.log(\"Error in Prime Mover KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Prime Mover KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n  render() {\r\n    const listOptions = {\r\n      carriers: this.state.carrierOptions,\r\n      unitOfWeight: this.state.weightUOMOptions,\r\n      unitOfDimension: this.state.lengthUOMOptions,\r\n      terminalCodes: this.state.terminalOptions,\r\n    };\r\n\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"PrimeMover_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modPrimeMover.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modPrimeMover.LastUpdatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"PrimeMover_LastActiveTime\",\r\n        fieldValue:\r\n          this.state.modPrimeMover.LastActiveTime !== undefined &&\r\n          this.state.modPrimeMover.LastActiveTime !== null\r\n            ? new Date(\r\n                this.state.modPrimeMover.LastActiveTime\r\n              ).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(\r\n                this.state.modPrimeMover.LastActiveTime\r\n              ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"PrimeMover_CreatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.modPrimeMover.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modPrimeMover.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.primeMover.Code}\r\n            newEntityName=\"PrimeMover_NewPrimeMover\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <TMDetailsKPILayout KPIList={this.state.primeMoverKPIList}> </TMDetailsKPILayout>\r\n        <ErrorBoundary>\r\n          <PrimeMoverDetails\r\n            primeMover={this.state.primeMover}\r\n            modPrimeMover={this.state.modPrimeMover}\r\n            validationErrors={this.state.validationErrors}\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            attributeMetaDataList={this.state.attributeMetaDataList}\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            listOptions={listOptions}\r\n            onFieldChange={this.handleChange}\r\n            onDateTextChange={this.handleDateTextChange}\r\n            onAllTerminalsChange={this.handleAllTerminalsChange}\r\n            onAttributeDataChange={this.handleAttributeDataChange} \r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n          ></PrimeMoverDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.primeMover.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnPrimeMover}\r\n            handleOperation={this.savePrimeMover}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PrimeMoverDetailsComposite);\r\n"],"names":["PrimeMoverDetails","_ref","primeMover","modPrimeMover","attributeValidationErrors","onFieldChange","validationErrors","onDateTextChange","onAllTerminalsChange","listOptions","isEnterpriseNode","modAttributeMetaDataList","onAttributeDataChange","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","t","useTranslation","_jsx","className","children","_jsxs","Input","fluid","value","Code","label","indicator","disabled","onChange","data","error","reserveSpace","Name","Description","Select","placeholder","CarrierCompanyCode","options","carriers","search","noResultsMessage","LicensceNo","DatePicker","licenseExpiryDate","Date","displayFormat","getCurrentDateFormat","showYearSelector","disablePast","onTextChange","RoadTaxNo","RoadTaxNoIssueDate","RoadTaxNoExpiryDate","TareWeight","toLocaleString","TareWeightUOM","unitOfWeight","Height","Width","Length","LWHUOM","getOptionsWithSelect","unitOfDimension","AssociatedTerminals","terminalList","terminalCodes","selectedTerminal","TerminalCodes","onCheckChange","Active","text","Remarks","length","map","attire","ErrorBoundary","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","handleCellDataEdit","defaultProps","PrimeMoverDetailsComposite","Component","constructor","arguments","state","Utilities","primeMoverValidationDef","isReadyToRender","carrierOptions","terminalOptions","weightUOMOptions","lengthUOMOptions","saveEnabled","primeMoverKPIList","showAuthenticationLayout","tempPrimeMover","handleChange","propertyName","lodash","this","handleCarrierChange","undefined","setState","terminalSelectionChange","console","log","handleDateTextChange","handleAllTerminalsChange","checked","carrier","getTerminalsForCarrier","savePrimeMover","createPrimeMover","updatePrimeMover","handleSave","Object","values","every","fillDetails","attributeList","validateSave","convertStringtoDecimal","DateFieldsInEntities","PrimeMover","props","userDetails","EntityResult","IsWebPortalUser","handleAttributeDataChange","attribute","matchedAttributes","matchedAttributesList","filter","modattribute","Array","isArray","DefaultValue","forEach","handleReset","keys","key","IsEnterpriseNode","handleResetAttributeValidationError","localNodeAttribute","handleAuthenticationClose","componentDidMount","IsArchived","isNewPrimeMover","selectedRow","Common_Code","getAttributes","getCarrierList","selectedShareholder","getUOMList","componentWillReceiveProps","nextProps","tokenDetails","tokenInfo","axios","RestAPIs","primeMoverAttributeEntity","then","response","result","IsSuccess","primemover","getPrimeMover","weightUOMs","MASS","weightOption","push","lengthUOMs","LENGTH","lengthOption","ErrorList","catch","shareholder","Constants","ROAD","emptyPrimeMover","PageAttibutes","DefaultUOMS","MassUOM","FunctionsList","functionGroups","add","fnPrimeMover","keyCode","KeyCodes","obj","ShareHolderCode","keyDataCode","modify","getKPIList","PrimeMoverCode","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","Attributes","customerAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","includes","ShareholderCode","PrimeMoverType","NON_RIGID_PRIMEMOVER","err","isNaN","parse","returnValue","driver","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","primeMoverCode","view","fnKPIInformation","objKPIRequestData","PageName","kpiPrimeMoverDetail","InputParameters","ListKPIDetails","render","popUpContents","fieldName","fieldValue","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","LastActiveTime","CreatedTime","TMDetailsHeader","entityCode","newEntityName","TMDetailsKPILayout","KPIList","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth"],"sourceRoot":""}