{"version":3,"file":"static/js/177.f4410567.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Common/WijmoGrid.jsx","Components/Composite/Common/WijmoGridComposite.jsx","Components/UIBase/Details/CustomerRecipeDetails.jsx","Components/Composite/Details/CustomerRecipeDetailsComposite.jsx","Components/Composite/Summary/CustomerRecipeSummaryComposite.jsx","Components/Composite/Entity/CustomerRecipeComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","JS/FunctionGroups.js","JS/KeyCodes.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as wjCore from \"@grapecity/wijmo\";\r\nimport * as wjGrid from \"@grapecity/wijmo.grid\";\r\nimport {\r\n  FlexGrid,\r\n  FlexGridColumn,\r\n  FlexGridCellTemplate,\r\n} from \"@grapecity/wijmo.react.grid\";\r\nimport { FlexGridFilter } from \"@grapecity/wijmo.react.grid.filter\";\r\nimport { Operator } from \"@grapecity/wijmo.grid.filter\";\r\nimport { FlexGridSearch } from \"@grapecity/wijmo.react.grid.search\";\r\nimport { CollectionView } from \"@grapecity/wijmo\";\r\nimport { CollectionViewNavigator, ListBox } from \"@grapecity/wijmo.react.input\";\r\nimport { Selector } from \"@grapecity/wijmo.grid.selector\";\r\nimport { HeadersVisibility } from \"@grapecity/wijmo.grid\";\r\nimport { showPopup, hidePopup, PopupPosition } from \"@grapecity/wijmo\";\r\nimport * as wjcGridXlsx from \"@grapecity/wijmo.grid.xlsx\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport { GroupPanel } from \"@grapecity/wijmo.react.grid.grouppanel\";\r\nimport { Button, Card, Popup } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as loadash from \"lodash\";\r\nimport \"@grapecity/wijmo.touch\";\r\n\r\nconst WijmoGrid = (props) => {\r\n  const [flex, setFlex] = useState(null);\r\n  const [translator] = useTranslation();\r\n  const _getData = (pageLength) => {\r\n    return new CollectionView(props.sourceData, {\r\n      pageSize: pageLength,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState(_getData(props.rowsPerPage));\r\n  const theGrid = React.createRef();\r\n  const theSearch = React.createRef();\r\n  const gridFilter = React.createRef();\r\n  const pagingComponent = React.createRef();\r\n  const colPicker = React.useRef();\r\n\r\n  // to keep track of selected rows\r\n  const selectedRows = React.useRef(props.selectionRequired ? [] : null);\r\n\r\n  // to initialize grid checkbox selection\r\n  let selector = null;\r\n\r\n  //Initialize grid\r\n  const gridInitialized = (grid) => {\r\n    try {\r\n      // localize grid filter\r\n      customizeFilterConditions();\r\n\r\n      if (props.onRowClick) {\r\n        // add row click event handler\r\n        grid.addEventListener(grid.hostElement, \"click\", (e) => {\r\n          let ht = grid.hitTest(e);\r\n          // condition to check if cell is not a grouped cell and a data cell\r\n          if (\r\n            ht.target.closest(\".wj-cell\") &&\r\n            ![...ht.target.closest(\".wj-cell\").classList].includes(\r\n              \"wj-group\"\r\n            ) &&\r\n            ht.cellType === wjGrid.CellType.Cell\r\n          ) {\r\n            // fetch row data\r\n            const rowData = grid.rows[ht.row].dataItem;\r\n            props.onRowClick(rowData);\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      grid.select(-1, -1);\r\n\r\n      setFlex(grid);\r\n      if (props.selectionRequired) {\r\n        // enable checkbox selection\r\n        selector = new Selector(grid, {\r\n          itemChecked: (s, e) => {\r\n            // if only single checkbox selection is required\r\n            if (props.singleSelection) {\r\n              grid.rows\r\n                .filter((row) => {\r\n                  return (\r\n                    row.isSelected &&\r\n                    selectedRows.current.filter((item) =>\r\n                      loadash.isEqual(item, row.dataItem)\r\n                    ).length === 1\r\n                  );\r\n                })\r\n                .forEach((row) => {\r\n                  row.isSelected = false;\r\n                });\r\n            }\r\n\r\n            // pass row data as parameter to checkbox selection handler\r\n            props.onSelectionHandle(\r\n              grid.rows\r\n                .filter((r) => r.isSelected)\r\n                .map((selectedRow) => selectedRow.dataItem)\r\n            );\r\n          },\r\n          // if only single checkbox selection is required\r\n          showCheckAll: !props.singleSelection,\r\n        });\r\n\r\n        let theGrid = selector.column.grid;\r\n        selector.column = theGrid.rowHeaders.columns[0];\r\n        theGrid.headersVisibility = HeadersVisibility.All;\r\n        theGrid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in gridInitialized: \" + error);\r\n    }\r\n  };\r\n\r\n  //Update grid when data changes\r\n  useEffect(() => {\r\n    try {\r\n      if (theGrid != null) {\r\n        //Connect search to the grid\r\n        let grid = theGrid.current.control;\r\n        let search = theSearch.current.control;\r\n        search.grid = grid;\r\n      }\r\n\r\n      setData(_getData(props.rowsPerPage));\r\n    } catch (error) {\r\n      console.log(\"Error in grid update:\", error);\r\n    }\r\n  }, [props.sourceData]);\r\n\r\n  // Pre-select grid rows based on selectedItems props\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && props.selectionRequired) {\r\n        // clear the selectedRows array\r\n        selectedRows.current.length = 0;\r\n        // add selectedItems array items to selectedRows\r\n        selectedRows.current.push(...props.selectedItems);\r\n\r\n        flex.rows.forEach((row) => {\r\n          if (\r\n            props.selectedItems.filter((item) =>\r\n              loadash.isEqual(item, row.dataItem)\r\n            ).length === 1\r\n          ) {\r\n            // checks the row checkbox\r\n            row.isSelected = true;\r\n          } else {\r\n            // unchecks the row checkbox\r\n            row.isSelected = false;\r\n          }\r\n        });\r\n\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in pre-selecting rows:\", error);\r\n    }\r\n  }, [props.selectedItems]);\r\n\r\n  //Load the state of grid\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(props.parentComponent + \"GridState\") &&\r\n        localStorage.getItem(props.parentComponent + \"GridState\") !== \"null\" &&\r\n        flex\r\n      ) {\r\n        // restore grid settings\r\n        let gridState = JSON.parse(\r\n          localStorage.getItem(props.parentComponent + \"GridState\")\r\n        );\r\n        let newFlex = flex;\r\n\r\n        // restore column picker settings\r\n        newFlex.columns.forEach((col) => {\r\n          let matchedCol = gridState.columns.filter(\r\n            (colSetting) => colSetting.binding === col.binding\r\n          );\r\n          col.visible =\r\n            matchedCol.length > 0 ? matchedCol[0].visible : col.visible;\r\n        });\r\n\r\n        // restore filter settings\r\n        gridFilter.current.control.filterDefinition =\r\n          gridState.filterDefinition;\r\n\r\n        // restore sort settings\r\n        newFlex.collectionView.deferUpdate(() => {\r\n          newFlex.collectionView.sortDescriptions.clear();\r\n          for (let i = 0; i < gridState.sortDescriptions.length; i++) {\r\n            let sortDesc = gridState.sortDescriptions[i];\r\n            newFlex.collectionView.sortDescriptions.push(\r\n              new wjCore.SortDescription(sortDesc.property, sortDesc.ascending)\r\n            );\r\n          }\r\n        });\r\n\r\n        // restore grouping settings\r\n        for (let i = 0; i < gridState.groupDescriptions.length; i++) {\r\n          newFlex.collectionView.groupDescriptions.push(\r\n            new wjCore.PropertyGroupDescription(gridState.groupDescriptions[i])\r\n          );\r\n          newFlex.columns.filter(\r\n            (col) => col.binding === gridState.groupDescriptions[i]\r\n          )[0].visible = false;\r\n        }\r\n\r\n        if (\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") &&\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") !== \"null\"\r\n        ) {\r\n          let gridSessionState = JSON.parse(\r\n            sessionStorage.getItem(props.parentComponent + \"GridState\")\r\n          );\r\n          // restore paging settings\r\n          newFlex.collectionView.moveToPage(\r\n            newFlex.collectionView.pageCount - 1 >= gridSessionState.pageIndex\r\n              ? gridSessionState.pageIndex\r\n              : newFlex.collectionView.pageCount - 1\r\n          );\r\n\r\n          // restore search settings\r\n          if (theSearch) {\r\n            theSearch.current.control.text = gridSessionState.searchText;\r\n          }\r\n        }\r\n\r\n        setFlex(newFlex);\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in restoring local storage settings: \", error);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set Column Picker Properties\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && colPicker.current && props.columnPickerRequired) {\r\n        colPicker.current.itemsSource = flex.columns;\r\n        colPicker.current.checkedMemberPath = \"visible\";\r\n        colPicker.current.displayMemberPath = \"header\";\r\n        colPicker.current.lostFocus.addHandler(() => {\r\n          hidePopup(colPicker.current.hostElement);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in initializing column picker properties:\", error);\r\n    }\r\n  }, [colPicker.current]);\r\n\r\n  useEffect(() => {\r\n    // remove column picker pop-up on component unmount\r\n    return () => {\r\n      if (props.columnPickerRequired && colPicker.current) {\r\n        hidePopup(colPicker.current.hostElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // export grid data to excel\r\n  const exportExcel = () => {\r\n    try {\r\n      let gridFlex = flex;\r\n      //to download all rows from all pages\r\n      gridFlex.itemsSource.pageSize = props.sourceData.length;\r\n      setFlex(gridFlex);\r\n      wjcGridXlsx.FlexGridXlsxConverter.saveAsync(\r\n        flex,\r\n        {\r\n          includeColumnHeaders: true,\r\n          includeCellStyles: false,\r\n          formatItem: null,\r\n        },\r\n        props.exportFileName\r\n      );\r\n\r\n      //to restore paging\r\n      gridFlex.itemsSource.pageSize = props.rowsPerPage;\r\n      setFlex(gridFlex);\r\n    } catch (error) {\r\n      console.log(\"Error in export grid to excel:\", error);\r\n    }\r\n  };\r\n\r\n  const terminalPopOver = (terminalCodes) => {\r\n    if (terminalCodes.split(\",\").length > props.terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={terminalCodes.split(\",\").length}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return terminalCodes;\r\n    }\r\n  };\r\n\r\n  const displayValues = (value, columnDetail) => {\r\n    if (columnDetail !== undefined && columnDetail !== null) {\r\n      if (typeof value === \"boolean\" || columnDetail.Name === \"Active\") {\r\n        if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n        else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n      } else if (value === \"\" || value === null || value === undefined) {\r\n        return value;\r\n      } else if (\r\n        (columnDetail.Name === \"TerminalCodes\" ||\r\n          columnDetail.PopOver === \"1\") &&\r\n        value !== null\r\n      ) {\r\n        return terminalPopOver(value);\r\n      }\r\n      // var columnType = columnDetails.find(function (detail) {\r\n      //   if (detail.Name === field) {\r\n      //     return detail;\r\n      //   }\r\n      // });\r\n      else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"DateTime\"\r\n      ) {\r\n        return (\r\n          new Date(value).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(value).toLocaleTimeString()\r\n        );\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Date\"\r\n      ) {\r\n        return new Date(value).toLocaleDateString();\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Time\"\r\n      ) {\r\n        return new Date(value).toLocaleTimeString();\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  //Initialize Column Picker\r\n  const initializedPicker = (picker) => {\r\n    if (props.columnPickerRequired) {\r\n      colPicker.current = picker;\r\n    }\r\n  };\r\n\r\n  // Column Picker Handler\r\n  const colPickerClickHandler = (event) => {\r\n    try {\r\n      let host = colPicker.current.hostElement;\r\n      if (!host.offsetHeight) {\r\n        showPopup(host, event.target, PopupPosition.Below, true, false);\r\n        colPicker.current.focus();\r\n      } else {\r\n        hidePopup(host, true, true);\r\n        flex.focus();\r\n      }\r\n\r\n      colPicker.current.focus();\r\n      event.preventDefault();\r\n    } catch (error) {\r\n      console.log(\"Error in Column Picker click event:\", error);\r\n    }\r\n  };\r\n\r\n  const saveGridState = () => {\r\n    try {\r\n      if (flex && gridFilter.current) {\r\n        // grid column, filter, sort and grouping settings\r\n        let gridState = {\r\n          columns: flex.columns.map((col) => {\r\n            return {\r\n              binding: col.binding,\r\n              visible: col.visible,\r\n            };\r\n          }),\r\n          filterDefinition: gridFilter.current.control.filterDefinition,\r\n          sortDescriptions: flex.collectionView.sortDescriptions.map(\r\n            (sortDesc) => {\r\n              return {\r\n                property: sortDesc.property,\r\n                ascending: sortDesc.ascending,\r\n              };\r\n            }\r\n          ),\r\n          groupDescriptions: flex.collectionView.groupDescriptions.map(\r\n            (group) => {\r\n              if (group.propertyName) {\r\n                return group.propertyName;\r\n              }\r\n\r\n              return null;\r\n            }\r\n          ),\r\n        };\r\n\r\n        // add class to grouped checkbox div element\r\n        if (\r\n          flex.collectionView.groupDescriptions &&\r\n          flex.collectionView.groupDescriptions.length > 0\r\n        ) {\r\n          let groupedCheckboxes = [\r\n            ...document.getElementsByClassName(\"wj-column-selector-group\"),\r\n          ];\r\n          groupedCheckboxes.forEach((chkbx) => {\r\n            chkbx.parentNode.parentNode.classList.add(\"wj-grouped-checkbox\");\r\n          });\r\n        }\r\n\r\n        // grid paging and search settings\r\n        let sessionState = {\r\n          pageIndex: flex.collectionView.pageIndex,\r\n          searchText: theSearch.current.control.text,\r\n        };\r\n\r\n        localStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(gridState)\r\n        );\r\n        sessionStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(sessionState)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in saving grid state\");\r\n    }\r\n  };\r\n\r\n  // customize grid filter text and dropdowns\r\n  const customizeFilterConditions = () => {\r\n    // localize the FlexGrid filter\r\n    let filter = wjCore.culture.FlexGridFilter,\r\n      operator = Operator;\r\n    wjCore.culture.FlexGridFilter.header = translator(\"WijmoGridFilterHeader\");\r\n    wjCore.culture.FlexGridFilter.ascending =\r\n      \"\\u2191 \" + translator(\"WijmoGridFilterAscending\");\r\n    wjCore.culture.FlexGridFilter.descending =\r\n      \"\\u2193 \" + translator(\"WijmoGridFilterDescending\");\r\n    wjCore.culture.FlexGridFilter.apply = translator(\"RoleAdminEdit_Apply\");\r\n    wjCore.culture.FlexGridFilter.clear = translator(\"OrderCreate_btnClear\");\r\n    wjCore.culture.FlexGridFilter.conditions = translator(\r\n      \"WijmoGridFilterCondition\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.values = translator(\"WijmoGridFilterValue\");\r\n    wjCore.culture.FlexGridFilter.search = translator(\r\n      \"LoadingDetailsView_SearchGrid\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.selectAll = translator(\r\n      \"WijmoGridFilterSelectAll\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.and = translator(\"WijmoGridFilterAnd\");\r\n    wjCore.culture.FlexGridFilter.or = translator(\"WijmoGridFilterOr\");\r\n    wjCore.culture.FlexGridFilter.cancel = translator(\"AccessCardInfo_Cancel\");\r\n    // wjCore.culture.FlexGridFilter.null = 'test';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.and = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.asc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dialog = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dsc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.edit = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op2 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.or = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.search = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val2 = '';\r\n\r\n    // localize FlexGrid filter operators\r\n    filter.stringOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterBeginsWith\"), op: operator.BW },\r\n      { name: translator(\"WijmoGridFilterEndsWith\"), op: operator.EW },\r\n      { name: translator(\"WijmoGridFilterContains\"), op: operator.CT },\r\n      { name: translator(\"WijmoGridFilterDoesNotContain\"), op: operator.NC },\r\n    ];\r\n    filter.numberOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterGreaterThan\"), op: operator.GT },\r\n      { name: translator(\"WijmoGridFilterLessThan\"), op: operator.LT },\r\n      {\r\n        name: translator(\"WijmoGridFilterGreaterThanOrEqual\"),\r\n        op: operator.GE,\r\n      },\r\n      { name: translator(\"WijmoGridFilterLessThanOrEqual\"), op: operator.LE },\r\n    ];\r\n    filter.dateOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterDateEarlierThan\"), op: operator.LT },\r\n      { name: translator(\"WijmoGridFilterDateLaterThan\"), op: operator.GT },\r\n    ];\r\n    filter.booleanOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n    ];\r\n  };\r\n\r\n  // set column width based on screen size\r\n  const getWidth = (columnDetails) => {\r\n    try {\r\n      const screenWidth = window.screen.width;\r\n      if (screenWidth < 1024) {\r\n        if (columnDetails.WidthPx && columnDetails.WidthPx !== \"\")\r\n          return parseInt(columnDetails.WidthPx);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in width:\", error);\r\n    }\r\n\r\n    return columnDetails.WidthPercentage.includes(\"*\")\r\n      ? columnDetails.WidthPercentage\r\n      : parseInt(columnDetails.WidthPercentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pl-1\">\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <React.Fragment>\r\n              <div className=\"row pl-0\">\r\n                <div className=\"col-10 col-sm-12 col-md-5 col-lg-6\">\r\n                  <FlexGridSearch\r\n                    class=\"ui single-input\"\r\n                    ref={theSearch}\r\n                    placeholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-10 col-sm-12 col-md-7 col-lg-6\">\r\n                  <div style={{ float: \"right\" }}>\r\n                    {props.columnPickerRequired ? (\r\n                      <Button\r\n                        id=\"colPicker\"\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        onClick={(event) => colPickerClickHandler(event)}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridColumnPicker\")}\r\n                        </div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          <Icon\r\n                            name=\"caret-down\"\r\n                            className=\"btnIcon\"\r\n                            size=\"small\"\r\n                          />\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.exportRequired ? (\r\n                      <Button\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        className=\"mt-3 mt-md-0\"\r\n                        onClick={exportExcel}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridExport\")}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            className=\"icon-Xls\"\r\n                            style={{\r\n                              fontSize: \"17px\",\r\n                              position: \"absolute\",\r\n                              top: \"3px\",\r\n                            }}\r\n                          ></span>\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tableScroll\">\r\n                {props.columnGroupingRequired ? (\r\n                  <GroupPanel\r\n                    className=\"group-panel\"\r\n                    grid={flex}\r\n                    placeholder={t(\"WijmoGridGroupPanelPlaceholder\")}\r\n                  />\r\n                ) : null}\r\n                <ErrorBoundary>\r\n                  <FlexGrid\r\n                    ref={theGrid}\r\n                    autoGenerateColumns={false}\r\n                    alternatingRowStep={0}\r\n                    autoRowHeights={true}\r\n                    headersVisibility=\"Column\"\r\n                    itemsSource={data}\r\n                    selectionMode={wjCore.asEnum(\"None\", wjGrid.SelectionMode)}\r\n                    initialized={gridInitialized}\r\n                    virtualizationThreshold={[0, 10000]}\r\n                    onUpdatedView={saveGridState}\r\n                  >\r\n                    <FlexGridFilter ref={gridFilter} />\r\n                    {props.columns.map((column) => {\r\n                      return (\r\n                        <FlexGridColumn\r\n                          header={t(column.Name)}\r\n                          key={column.Name}\r\n                          binding={column.Name}\r\n                          width={getWidth(column)}\r\n                          minWidth={100}\r\n                          isReadOnly={true}\r\n                          wordWrap={true}\r\n                          align=\"left\"\r\n                        >\r\n                          <FlexGridCellTemplate\r\n                            cellType=\"Cell\"\r\n                            template={(context) => {\r\n                              return (\r\n                                <span\r\n                                  style={\r\n                                    props.conditionalRowStyleCheck == null ||\r\n                                    !props.conditionalRowStyleCheck(\r\n                                      context.item\r\n                                    )\r\n                                      ? null\r\n                                      : { ...props.conditionalRowStyles }\r\n                                  }\r\n                                >\r\n                                  {displayValues(\r\n                                    context.item[column.Name],\r\n                                    column\r\n                                  )}\r\n                                </span>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FlexGridColumn>\r\n                      );\r\n                    })}\r\n                  </FlexGrid>\r\n                </ErrorBoundary>\r\n                {props.columnPickerRequired ? (\r\n                  <div className=\"column-picker-div\">\r\n                    <ListBox\r\n                      className=\"column-picker\"\r\n                      initialized={(picker) => initializedPicker(picker)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"row\">\r\n                <CollectionViewNavigator\r\n                  ref={pagingComponent}\r\n                  className=\"ml-auto mr-auto mt-3\"\r\n                  headerFormat={t(\"WijmoGridPagingTemplate\")}\r\n                  byPage={true}\r\n                  cv={data}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nWijmoGrid.propTypes = {\r\n  sourceData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  exportRequired: PropTypes.bool.isRequired,\r\n  exportFileName: PropTypes.string,\r\n  selectionRequired: PropTypes.bool,\r\n  columnPickerRequired: PropTypes.bool,\r\n  columnGroupingRequired: PropTypes.bool,\r\n  conditionalRowStyleCheck: PropTypes.func,\r\n  conditionalRowStyles: PropTypes.object,\r\n  rowsPerPage: PropTypes.number,\r\n  onSelectionHandle: PropTypes.func,\r\n  parentComponent: PropTypes.string.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  terminalsToShow: PropTypes.number,\r\n  singleSelection: PropTypes.bool,\r\n  selectedItems: PropTypes.array,\r\n};\r\n\r\nWijmoGrid.defaultProps = {\r\n  sourceData: [],\r\n  columns: [],\r\n  exportRequired: true,\r\n  exportFileName: \"Grid.xlsx\",\r\n  selectionRequired: false,\r\n  columnPickerRequired: false,\r\n  columnGroupingRequired: false,\r\n  rowsPerPage: 10,\r\n  terminalsToShow: 2,\r\n  singleSelection: false,\r\n  selectedItems: [],\r\n};\r\n\r\nexport default WijmoGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WijmoGrid from '../../UIBase/Common/WijmoGrid';\r\n\r\nconst WijmoGridComposite = (props) => {\r\n    return (\r\n        <WijmoGrid\r\n            sourceData={props.data}\r\n            columns={props.columns}\r\n            exportRequired={props.exportRequired}\r\n            exportFileName={props.exportFileName}\r\n            columnPickerRequired={props.columnPickerRequired}\r\n            selectionRequired={props.selectionRequired}\r\n            columnGroupingRequired={props.columnGroupingRequired}\r\n            conditionalRowStyleCheck={props.conditionalRowStyleCheck}\r\n            conditionalRowStyles={props.conditionalRowStyles}\r\n            rowsPerPage={props.rowsPerPage}\r\n            onSelectionHandle={props.onSelectionHandle}\r\n            onRowClick={props.onRowClick}\r\n            parentComponent={props.parentComponent}\r\n            terminalsToShow={props.terminalsToShow}\r\n            singleSelection={props.singleSelection}\r\n            selectedItems={props.selectedItems}\r\n        />\r\n    )\r\n}\r\n\r\nWijmoGridComposite.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n    exportRequired: PropTypes.bool.isRequired,\r\n    exportFileName: PropTypes.string,\r\n    selectionRequired: PropTypes.bool,\r\n    columnPickerRequired: PropTypes.bool,\r\n    columnGroupingRequired: PropTypes.bool,\r\n    conditionalRowStyleCheck: PropTypes.func,\r\n    conditionalRowStyles: PropTypes.object,\r\n    rowsPerPage: PropTypes.number,\r\n    onSelectionHandle: PropTypes.func,\r\n    parentComponent: PropTypes.string.isRequired,\r\n    onRowClick: PropTypes.func,\r\n    terminalsToShow: PropTypes.number,\r\n    singleSelection: PropTypes.bool,\r\n    selectedItems: PropTypes.array\r\n}\r\n\r\nexport default WijmoGridComposite;","import React from \"react\";\r\nimport { Select, Input } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\n\r\nCustomerRecipeDetails.propTypes = {\r\n  CustomerRecipe: PropTypes.object.isRequired,\r\n  modCustomerRecipe: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  Customers: PropTypes.array,\r\n  terminalCodes: PropTypes.array,\r\n  finishedProducts: PropTypes.array,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n  handleFinishedProductChange: PropTypes.func.isRequired,\r\n  handleActiveStatusChange: PropTypes.func.isRequired,\r\n};\r\n\r\nCustomerRecipeDetails.defaultProps = {\r\n  isEnterpriseNode: false,\r\n};\r\n\r\nexport function CustomerRecipeDetails({\r\n  CustomerRecipe,\r\n  modCustomerRecipe,\r\n  validationErrors,\r\n  onFieldChange,\r\n  isEnterpriseNode,\r\n  Customers,\r\n  terminalCodes,\r\n  finishedProducts,\r\n  handleCellDataEdit,\r\n  handleFinishedProductChange,\r\n  handleActiveStatusChange,\r\n  handleTerminalChange\r\n}) {\r\n  const handleCustomEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={\r\n          modCustomerRecipe.FinishedProduct.FinishedProductItems[\r\n            cellData.rowIndex\r\n          ][cellData.field]\r\n        }\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCustomerRecipe.Code}\r\n                label={t(\"CustomerRecipe_Code\")}\r\n                indicator=\"required\"\r\n                disabled={CustomerRecipe.Code !== \"\"}\r\n                onChange={(data) => onFieldChange(\"Code\", data)}\r\n                error={t(validationErrors.Code)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            {isEnterpriseNode ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder=\"Select\"\r\n                  value={modCustomerRecipe.TerminalCode}\r\n                  disabled={CustomerRecipe.TerminalCode !== \"\"}\r\n                  label={t(\"CustomerRecipe_AssociatedTerminal\")}\r\n                  indicator=\"required\"\r\n                  options={Utilities.transferListtoOptions(terminalCodes)}\r\n                  onChange={(data) => {\r\n                    onFieldChange(\"TerminalCode\", data);\r\n                    handleTerminalChange(data);\r\n                  }}\r\n                  error={t(validationErrors.TerminalCode)}\r\n                  multiple={false}\r\n                  reserveSpace={false}\r\n                  search={true}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={\r\n                  modCustomerRecipe.FinishedProduct !== undefined &&\r\n                  modCustomerRecipe.FinishedProduct !== null\r\n                    ? modCustomerRecipe.FinishedProduct.Code\r\n                    : \"\"\r\n                }\r\n                label={t(\"CustomerRecipe_FinishedProduct\")}\r\n                indicator=\"required\"\r\n                options={finishedProducts}\r\n                onChange={(data) => {\r\n                  onFieldChange(\"CustomerRecipefinishedProducts\", data);\r\n                  handleFinishedProductChange(data);\r\n                }}\r\n                disabled={CustomerRecipe.Code !== \"\"}\r\n                multiple={false}\r\n                reserveSpace={false}\r\n                search={true}\r\n                error={t(validationErrors.CustomerRecipefinishedProducts)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={modCustomerRecipe.CustomerCodes}\r\n                label={t(\"CustomerRecipe_AssociatedCustomers\")}\r\n                indicator=\"required\"\r\n                options={Customers}\r\n                onChange={(data) => onFieldChange(\"CustomerCodes\", data)}\r\n                multiple={true}\r\n                reserveSpace={false}\r\n                search={true}\r\n                error={t(validationErrors.CustomerCodes)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"CustomerRecipe_Status\")}\r\n                value={modCustomerRecipe.Status}\r\n                options={[\r\n                  { text: t(\"ViewShipment_Ok\"), value: true },\r\n                  { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                ]}\r\n                onChange={(data) => handleActiveStatusChange(data)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCustomerRecipe.Remarks}\r\n                label={t(\"CustomerRecipe_Remarks\")}\r\n                indicator={\r\n                  modCustomerRecipe.Status !== CustomerRecipe.Status\r\n                    ? \"required\"\r\n                    : \"\"\r\n                }\r\n                error={t(validationErrors.Remarks)}\r\n                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>            \r\n          </div>\r\n          <div className=\"row compartmentRow\">\r\n            <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n              <h4>{t(\"CustomerRecipe_AssociatedBaseProducts\")}</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"row marginRightZero tableScroll\">\r\n            <div className=\"col-12 detailsTable\">\r\n              <DataTable\r\n                data={\r\n                  modCustomerRecipe.FinishedProduct !== undefined &&\r\n                  modCustomerRecipe.FinishedProduct !== null &&\r\n                  modCustomerRecipe.FinishedProduct.FinishedProductItems !==\r\n                    undefined &&\r\n                  modCustomerRecipe.FinishedProduct.FinishedProductItems !==\r\n                    null\r\n                    ? modCustomerRecipe.FinishedProduct.FinishedProductItems\r\n                    : []\r\n                }\r\n                scrollable={true}\r\n                scrollHeight=\"320px\"\r\n              >\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"BaseProductCode\"\r\n                  renderer={(cellData) => {\r\n                    if (\r\n                      cellData.rowData.BaseProductCode !== null &&\r\n                      cellData.rowData.BaseProductCode !== undefined &&\r\n                      cellData.rowData.BaseProductCode !== \"\" &&\r\n                      cellData.rowData.Version !== 0\r\n                    ) {\r\n                      return cellData.rowData.BaseProductCode;\r\n                    } else {\r\n                      return cellData.rowData.AdditiveCode;\r\n                    }\r\n                  }}\r\n                  header={t(\"CustomerRecipe_BaseProductCode\")}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"IsAdditive\"\r\n                  header={t(\"CustomerRecipe_IsAdditive\")}\r\n                  renderer={(cellData) => {\r\n                    if (\r\n                      cellData.rowData.BaseProductCode !== null &&\r\n                      cellData.rowData.BaseProductCode !== undefined &&\r\n                      cellData.rowData.BaseProductCode !== \"\" &&\r\n                      cellData.rowData.Version !== 0\r\n                    ) {\r\n                      return \"N\";\r\n                    } else {\r\n                      return \"Y\";\r\n                    }\r\n                  }}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"Quantity\"\r\n                  field=\"Quantity\"\r\n                  header={t(\"CustomerRecipe_AbsoluteNumber\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  // renderer={(cellData) => intDisplayValues(cellData)}\r\n                  customEditRenderer={handleCustomEditTextBox}\r\n                ></DataTable.Column>\r\n              </DataTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { CustomerRecipeDetails } from \"../../UIBase/Details/CustomerRecipeDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { CustomerRecipeValidationDef } from \"../../../JS/ValidationDef\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { emptyCustomerRecipe } from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { functionGroups, fnCustomerRecipe } from \"../../../JS/FunctionGroups\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nimport { CustomerRecipeAssociatedBPValidationDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport { toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\n\r\nclass CustomerRecipeDetailsComposite extends Component {\r\n  state = {\r\n    CustomerRecipe: lodash.cloneDeep(emptyCustomerRecipe), //{ ...emptyCustomerRecipe },\r\n    modCustomerRecipe: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      CustomerRecipeValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    customerKPIList: [],\r\n    Customers: [],\r\n    terminalCodes: this.props.userDetails.EntityResult.IsEnterpriseNode\r\n      ? this.getTerminalList()\r\n      : [],\r\n    finishedProducts: [],\r\n    showAuthenticationLayout: false,\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modCustomerRecipe = lodash.cloneDeep(this.state.modCustomerRecipe);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n\r\n      modCustomerRecipe[propertyName] = data;\r\n      this.setState({ modCustomerRecipe });\r\n      if (CustomerRecipeValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          CustomerRecipeValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n\r\n      if (CustomerRecipeValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          CustomerRecipeValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n\r\n      this.setState({ modCustomerRecipe, validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleTerminalChange = (value) => {\r\n    this.getFinishedProductList(value);\r\n    this.getcustomerList(value);\r\n  };\r\n\r\n  handleFinishedProductChange = (value) => {\r\n    try {\r\n      let modCustomerRecipe = lodash.cloneDeep(this.state.modCustomerRecipe);\r\n      modCustomerRecipe.FinishedProduct.Code = value;\r\n      this.getFinishedProduct(value, this.props.selectedShareholder);\r\n      this.setState({ modCustomerRecipe });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modCustomerRecipe = lodash.cloneDeep(this.state.modCustomerRecipe);\r\n      modCustomerRecipe.Status = value;\r\n      if (modCustomerRecipe.Status !== this.state.CustomerRecipe.Status)\r\n        modCustomerRecipe.Remarks = \"\";\r\n      this.setState({ modCustomerRecipe });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  getFinishedProduct(finishedProductCode, shareHolderCode) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.finishedProductCode,\r\n        value: finishedProductCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shareHolderCode,\r\n      keyDataCode: KeyCodes.finishedProductCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetFinishedProduct,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        const modCustomerRecipe = lodash.cloneDeep(\r\n          this.state.modCustomerRecipe\r\n        );\r\n        if (result.IsSuccess) {\r\n          if (\r\n            Array.isArray(result.EntityResult.FinishedProductItems) &&\r\n            result.EntityResult.FinishedProductItems.length > 0\r\n          ) {\r\n            modCustomerRecipe.FinishedProduct.FinishedProductItems =\r\n              result.EntityResult.FinishedProductItems;\r\n            this.setState({\r\n              modCustomerRecipe: modCustomerRecipe,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getFinishedProduct:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Finished Product:\", error);\r\n      });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.CustomerRecipe.Code !== \"\" &&\r\n        nextProps.selectedRow.CustomerRecipe_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getCustomerRecipe(nextProps.selectedRow);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getCustomerRecipe(this.props.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getTerminalList() {\r\n    return this.props.terminalList;\r\n  }\r\n\r\n  getFinishedProductList(terminalCode) {\r\n    this.setState({ finishedProducts: [] });\r\n    axios(\r\n      RestAPIs.GetFinishedProductCodes +\r\n        \"?ShareholderCode=\" +\r\n        this.props.selectedShareholder +\r\n        \"&TerminalCode=\" +\r\n        terminalCode,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    ).then((response) => {\r\n      var result = response.data;\r\n      if (result.IsSuccess === true) {\r\n        if (\r\n          Array.isArray(result.EntityResult) &&\r\n          result.EntityResult.length > 0\r\n        ) {\r\n          let finishedProductOptions = Utilities.transferListtoOptions(\r\n            result.EntityResult\r\n          );\r\n          this.setState({ finishedProducts: finishedProductOptions });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getcustomerList(terminalCode) {\r\n    this.setState({ Customers: [] });\r\n    axios(\r\n      RestAPIs.GetCustomerListForRole +\r\n        \"?ShareholderCode=\" +\r\n        this.props.selectedShareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        let isEnterprise = this.props.userDetails.EntityResult.IsEnterpriseNode;\r\n        if (result.IsSuccess === true) {\r\n          let Customercodes = [];\r\n          result.EntityResult.Table.forEach((ele) => {\r\n            if (isEnterprise && ele.TerminalCodes.indexOf(terminalCode) > -1) {\r\n              Customercodes.push(ele.Common_Code);\r\n            } else if (!isEnterprise) {\r\n              Customercodes.push(ele.Common_Code);\r\n            }\r\n          });\r\n\r\n          let Customers = Utilities.transferListtoOptions(Customercodes);\r\n\r\n          this.setState({ Customers, isReadyToRender: true });\r\n        } else {\r\n          this.setState({ Customers: [], isReadyToRender: true });\r\n          console.log(\"Error in GetCustomerListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ Customers: [], isReadyToRender: true });\r\n        console.log(\"Error while getting Customer List:\", error);\r\n      });\r\n  }\r\n\r\n  initialFPAndCustomer(terminalCode) {\r\n    this.getFinishedProductList(terminalCode);\r\n    this.getcustomerList(terminalCode);\r\n  }\r\n\r\n  getCustomerRecipe(selectedRow) {\r\n    let TerminalCode = this.props.userDetails.EntityResult.IsEnterpriseNode\r\n      ? selectedRow.TerminalCode\r\n      : this.props.userDetails.EntityResult.TerminalCode;\r\n    emptyCustomerRecipe.ShareholderCode = this.props.selectedShareholder;\r\n\r\n    if (selectedRow.CustomerRecipe_Code === undefined) {\r\n      if (!this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n        this.initialFPAndCustomer(TerminalCode);\r\n      }\r\n      this.setState({\r\n        CustomerRecipe: lodash.cloneDeep(emptyCustomerRecipe),\r\n        modCustomerRecipe: lodash.cloneDeep(emptyCustomerRecipe),\r\n        isReadyToRender: true,\r\n        customerKPIList: [],\r\n        saveEnabled: Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnCustomerRecipe\r\n        ),\r\n      });\r\n      return;\r\n    }\r\n\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.CustomerRecipeCode,\r\n        value: selectedRow.CustomerRecipe_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.terminalCode,\r\n        value: TerminalCode,\r\n      },\r\n      {\r\n        key: KeyCodes.finishedProductCode,\r\n        value: selectedRow.FinishedProduct_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.CustomerRecipeCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetCustomerRecipe,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let results = lodash.cloneDeep(result.EntityResult);\r\n          this.initialFPAndCustomer(results.TerminalCode);\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            CustomerRecipe: results,\r\n            modCustomerRecipe: results,\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnCustomerRecipe\r\n            ),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            CustomerRecipe: lodash.cloneDeep(emptyCustomerRecipe),\r\n            modCustomerRecipe: lodash.cloneDeep(emptyCustomerRecipe),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetCustomer:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Customer:\", error, selectedRow);\r\n      });\r\n  }\r\n\r\n  validateSave(modCustomerRecipe) {\r\n    var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    Object.keys(CustomerRecipeValidationDef).forEach(function (key) {\r\n      validationErrors[key] = Utilities.validateField(\r\n        CustomerRecipeValidationDef[key],\r\n        modCustomerRecipe[key]\r\n      );\r\n    });\r\n\r\n    if (modCustomerRecipe.Status !== this.state.CustomerRecipe.Status) {\r\n      if (\r\n        modCustomerRecipe.Remarks === null ||\r\n        modCustomerRecipe.Remarks === \"\"\r\n      ) {\r\n        validationErrors[\"Remarks\"] = \"OriginTerminal_RemarksRequired\";\r\n      }\r\n    }\r\n\r\n    if (\r\n      modCustomerRecipe.FinishedProduct.Code === \"\" ||\r\n      modCustomerRecipe.FinishedProduct.Code === undefined ||\r\n      modCustomerRecipe.FinishedProduct.Code === null\r\n    ) {\r\n      validationErrors.CustomerRecipefinishedProducts =\r\n        \"CustomerRecipeDetails_reqFinishedProduct\";\r\n    } else {\r\n      validationErrors.CustomerRecipefinishedProducts = \"\";\r\n    }\r\n\r\n    if (!this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n      validationErrors.TerminalCode = \"\";\r\n    }\r\n\r\n    var returnValue = true;\r\n    returnValue = Object.values(validationErrors).every(function (value) {\r\n      return value === \"\";\r\n    });\r\n    this.setState({ validationErrors });\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"CUSTOMERRECIPE_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    if (modCustomerRecipe.FinishedProduct.FinishedProductItems.length > 0) {\r\n      modCustomerRecipe.FinishedProduct.FinishedProductItems.forEach((com) => {\r\n        let err = \"\";\r\n\r\n        if (\r\n          CustomerRecipeAssociatedBPValidationDef[0].validator !== undefined\r\n        ) {\r\n          err = Utilities.validateField(\r\n            CustomerRecipeAssociatedBPValidationDef[0].validator,\r\n            com[\"Quantity\"]\r\n          );\r\n        }\r\n\r\n        if (err !== \"\") {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [CustomerRecipeAssociatedBPValidationDef[0].displayName],\r\n            keyValues: [com[CustomerRecipeAssociatedBPValidationDef[0].field]],\r\n            isSuccess: false,\r\n            errorMessage: err,\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    if (notification.messageResultDetails.length > 0) {\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  saveCustomerRecipe = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let CustomerRecipe = lodash.cloneDeep(this.state.CustomerRecipe);\r\n      let modCustomerRecipe = lodash.cloneDeep(this.state.modCustomerRecipe);\r\n      CustomerRecipe.Code === \"\"\r\n        ? this.createCustomerRecipe(modCustomerRecipe)\r\n        : this.updateCustomerRecipe(modCustomerRecipe);\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeDetailsComposite : Error in saveCustomerRecipe\"\r\n      );\r\n    }\r\n  };\r\n  handleSave = () => {\r\n    try {\r\n      let modCustomerRecipe = lodash.cloneDeep(this.state.modCustomerRecipe);\r\n      if (this.validateSave(modCustomerRecipe)) {\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        this.setState({ showAuthenticationLayout }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveCustomerRecipe();\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  convertStringtoDecimal(modFinishedProduct) {\r\n    try {\r\n      if (\r\n        modFinishedProduct.Density !== null &&\r\n        modFinishedProduct.Density !== \"\"\r\n      ) {\r\n        modFinishedProduct.Density = Utilities.convertStringtoDecimal(\r\n          modFinishedProduct.Density\r\n        );\r\n      }\r\n      if (\r\n        modFinishedProduct.ToleranceQuantity !== null &&\r\n        modFinishedProduct.ToleranceQuantity !== \"\"\r\n      ) {\r\n        modFinishedProduct.ToleranceQuantity = Utilities.convertStringtoDecimal(\r\n          modFinishedProduct.ToleranceQuantity\r\n        );\r\n      }\r\n      if (\r\n        modFinishedProduct.ToleranceQuantityForMarine !== null &&\r\n        modFinishedProduct.ToleranceQuantityForMarine !== \"\"\r\n      ) {\r\n        modFinishedProduct.ToleranceQuantityForMarine =\r\n          Utilities.convertStringtoDecimal(\r\n            modFinishedProduct.ToleranceQuantityForMarine\r\n          );\r\n      }\r\n      if (\r\n        modFinishedProduct.ToleranceQuantityForPipeline !== null &&\r\n        modFinishedProduct.ToleranceQuantityForPipeline !== \"\"\r\n      ) {\r\n        modFinishedProduct.ToleranceQuantityForPipeline =\r\n          Utilities.convertStringtoDecimal(\r\n            modFinishedProduct.ToleranceQuantityForPipeline\r\n          );\r\n      }\r\n      if (\r\n        modFinishedProduct.ToleranceQuantityForRail !== null &&\r\n        modFinishedProduct.ToleranceQuantityForRail !== \"\"\r\n      ) {\r\n        modFinishedProduct.ToleranceQuantityForRail =\r\n          Utilities.convertStringtoDecimal(\r\n            modFinishedProduct.ToleranceQuantityForRail\r\n          );\r\n      }\r\n\r\n      if (this.state.hazardousEnabled) {\r\n        if (\r\n          modFinishedProduct.SFLPercent !== null &&\r\n          modFinishedProduct.SFLPercent !== \"\"\r\n        ) {\r\n          modFinishedProduct.SFLPercent = Utilities.convertStringtoDecimal(\r\n            modFinishedProduct.SFLPercent\r\n          );\r\n        }\r\n      }\r\n      return modFinishedProduct;\r\n    } catch (err) {\r\n      console.log(\"convertStringtoDecimal error finishedProduct details\", err);\r\n    }\r\n  }\r\n\r\n  createCustomerRecipe(modCustomerRecipe) {\r\n    modCustomerRecipe.FinishedProduct = this.convertStringtoDecimal(\r\n      modCustomerRecipe.FinishedProduct\r\n    );\r\n\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.CustomerRecipeCode,\r\n        value: modCustomerRecipe.Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.CustomerRecipeCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modCustomerRecipe,\r\n    };\r\n\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"CustomerRecipeDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"CustomerRecipe_Code\"],\r\n          keyValues: [modCustomerRecipe.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateCustomerRecipe,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnCustomerRecipe\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () =>\r\n              this.getCustomerRecipe({\r\n                CustomerRecipe_Code: modCustomerRecipe.Code,\r\n                FinishedProduct_Code: modCustomerRecipe.FinishedProduct.Code,\r\n                TerminalCode: modCustomerRecipe.TerminalCode,\r\n              })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnCustomerRecipe\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in CreateCustomer:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modCustomerRecipe, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnCustomerRecipe\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modCustomerRecipe, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateCustomerRecipe(modCustomerRecipe) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.CustomerRecipeCode,\r\n        value: modCustomerRecipe.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.CustomerRecipeCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modCustomerRecipe,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"CustomerRecipeDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"CustomerRecipe_Code\"],\r\n          keyValues: [modCustomerRecipe.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateCustomerRecipe,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnCustomerRecipe\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () =>\r\n              this.getCustomerRecipe({\r\n                CustomerRecipe_Code: modCustomerRecipe.Code,\r\n                FinishedProduct_Code: modCustomerRecipe.FinishedProduct.Code,\r\n                TerminalCode: modCustomerRecipe.TerminalCode,\r\n              })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnCustomerRecipe\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in UpdateCustomerRecipe:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modCustomerRecipe, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modCustomerRecipe, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnCustomerRecipe\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      const CustomerRecipe = lodash.cloneDeep(this.state.CustomerRecipe);\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState({\r\n        modCustomerRecipe: { ...CustomerRecipe },\r\n        validationErrors,\r\n      });\r\n      if (this.state.CustomerRecipe.Code === \"\") {\r\n        var terminalCodes = [...this.state.terminalCodes];\r\n        terminalCodes = [];\r\n        this.setState({ terminalCodes });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    let modCustomerRecipe = lodash.cloneDeep(this.state.modCustomerRecipe);\r\n    modCustomerRecipe.FinishedProduct.FinishedProductItems[cellData.rowIndex][\r\n      cellData.field\r\n    ] = newVal;\r\n    this.setState({ modCustomerRecipe });\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"Cust_LastUpDt\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modCustomerRecipe.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modCustomerRecipe.LastUpdatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"Cust_CreateDt\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modCustomerRecipe.CreatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modCustomerRecipe.CreatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.CustomerRecipe.Code}\r\n            newEntityName=\"CustomerRecipe_Title\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n\r\n        <ErrorBoundary>\r\n          <CustomerRecipeDetails\r\n            CustomerRecipe={this.state.CustomerRecipe}\r\n            modCustomerRecipe={this.state.modCustomerRecipe}\r\n            validationErrors={this.state.validationErrors}\r\n            Customers={this.state.Customers}\r\n            terminalCodes={this.state.terminalCodes}\r\n            finishedProducts={this.state.finishedProducts}\r\n            onFieldChange={this.handleChange}\r\n            handleFinishedProductChange={this.handleFinishedProductChange}\r\n            handleActiveStatusChange={this.handleActiveStatusChange}\r\n            handleTerminalChange={this.handleTerminalChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n          ></CustomerRecipeDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.CustomerRecipe.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnCustomerRecipe}\r\n            handleOperation={this.saveCustomerRecipe}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CustomerRecipeDetailsComposite);\r\n\r\nCustomerRecipeDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  genericProps: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nexport function CustomerRecipeSummaryComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  terminalsToShow,\r\n  selectedItems,\r\n  selectionRequired,\r\n  onSelectionChange,\r\n  onRowClick,\r\n  parentComponent,\r\n}) {\r\n  return (\r\n    <WijmoGridComposite\r\n      data={tableData}\r\n      columns={columnDetails}\r\n      rowsPerPage={pageSize}\r\n      exportRequired={exportRequired}\r\n      exportFileName={exportFileName}\r\n      columnPickerRequired={columnPickerRequired}\r\n      columnGroupingRequired={columnGroupingRequired}\r\n      terminalsToShow={terminalsToShow}\r\n      selectionRequired={selectionRequired}\r\n      onSelectionHandle={onSelectionChange}\r\n      onRowClick={onRowClick}\r\n      parentComponent={parentComponent}\r\n      selectedItems={selectedItems}\r\n    ></WijmoGridComposite>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { CustomerRecipeSummaryComposite } from \"../Summary/CustomerRecipeSummaryComposite\";\r\nimport CustomerRecipeDetailsComposite from \"../Details/CustomerRecipeDetailsComposite\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../../CSS/styles.css\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport lodash from \"lodash\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nimport { functionGroups, fnCustomerRecipe } from \"../../../JS/FunctionGroups\";\r\n\r\nclass CustomerRecipeComposite extends Component {\r\n  state = {\r\n    isDetails: \"false\",\r\n    isReadyToRender: false,\r\n    isDetailsModified: \"false\",\r\n    operationsVisibilty: { add: false, delete: false, shareholder: true },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    selectedShareholder: \"\",\r\n    data: {},\r\n    showAuthenticationLayout: false,\r\n  };\r\n\r\n  componentName = \"CustomerRecipeList\";\r\n\r\n  terminalList = [];\r\n\r\n  getTerminalsList(shareholder) {\r\n    try {\r\n      if (shareholder !== undefined && shareholder !== \"\") {\r\n        axios(\r\n          RestAPIs.GetTerminals,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            [shareholder],\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            var data = response.data.EntityResult;\r\n            if (Array.isArray(data)) {\r\n              this.terminalList = data;\r\n            } else {\r\n              this.terminalList = [];\r\n            }\r\n          } else {\r\n            this.terminalList = [];\r\n          }\r\n        });\r\n      } else {\r\n        this.terminalList = [];\r\n      }\r\n    } catch (error) {\r\n      console.log(\"CustomerComposite:Error occured on getTerminalsList\", error);\r\n    }\r\n  }\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: \"true\",\r\n        selectedRow: {},\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"CustomerRecipeComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showAuthenticationLayout });\r\n      if (showAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"CustomerComposite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleDelete = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n      let selectedItems = lodash.cloneDeep(this.state.selectedItems);\r\n\r\n      var deleteCustomerKeys = [];\r\n      for (var i = 0; i < selectedItems.length; i++) {\r\n        var shCode = this.state.selectedShareholder;\r\n        var CustomerRecipeCode = selectedItems[i][\"CustomerRecipe_Code\"];\r\n        var keyData = {\r\n          keyDataCode: 0,\r\n          ShareHolderCode: shCode,\r\n          KeyCodes: [\r\n            { Key: KeyCodes.CustomerRecipeCode, Value: CustomerRecipeCode },\r\n            {\r\n              Key: KeyCodes.shareholderCode,\r\n              Value: shCode,\r\n            },\r\n            {\r\n              Key: KeyCodes.finishedProductCode,\r\n              Value: selectedItems[i].FinishedProduct_Code,\r\n            },\r\n            {\r\n              key: KeyCodes.terminalCode,\r\n              value: \r\n              !this.props.userDetails.EntityResult.IsEnterpriseNode?  \r\n              (selectedItems[i].TerminalCode !==undefined &&selectedItems[i].TerminalCode !==\"\")?selectedItems[i].TerminalCode\r\n              :this.props.userDetails.EntityResult.TerminalCode\r\n              :selectedItems[i].TerminalCode,\r\n            },\r\n          ],\r\n        };\r\n        deleteCustomerKeys.push(keyData);\r\n      }\r\n\r\n      axios(\r\n        RestAPIs.DeleteCustomerRecipe,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteCustomerKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          var isRefreshDataRequire = result.isSuccess;\r\n\r\n          if (\r\n            result.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            var failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n\r\n          var notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"CustomerRecipeDetails_DeletionStatus\",\r\n            [\"CustomerRecipeCode\"]\r\n          );\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({\r\n              isReadyToRender: false,\r\n              showAuthenticationLayout: false,\r\n            });\r\n            this.getCustomerRecipeList(this.state.selectedShareholder);\r\n            operationsVisibilty.delete = false;\r\n\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n              showAuthenticationLayout: false,\r\n            });\r\n          } else {\r\n            operationsVisibilty.delete = true;\r\n            this.setState({\r\n              operationsVisibilty,\r\n              showAuthenticationLayout: false,\r\n            });\r\n          }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0)\r\n              messageResult.keyFields[0] = \"CustomerRecipe_Code\";\r\n          });\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeComposite:Error occured on handleDelete\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnCustomerRecipe\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.shareholder = true;\r\n      this.setState({\r\n        isDetails: \"false\",\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getCustomerRecipeList(this.state.selectedShareholder);\r\n    } catch (error) {\r\n      console.log(\"CustomerRecipeComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnCustomerRecipe\r\n      );\r\n      operationsVisibilty.delete = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.remove,\r\n        fnCustomerRecipe\r\n      );\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: \"true\",\r\n        selectedRow: item,\r\n        selectedItems: [item],\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeComposite:Error occured on handleRowClick\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleSelection = (items) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n\r\n      operationsVisibilty.delete =\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnCustomerRecipe\r\n        );\r\n\r\n      this.setState({ selectedItems: items, operationsVisibilty });\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeComposite:Error occured on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnCustomerRecipe\r\n        );\r\n        operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnCustomerRecipe\r\n        );\r\n        this.setState({ isDetailsModified: \"true\", operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            CustomerRecipe_Code: data.Code,\r\n            Common_Status: data.Status,\r\n            FinishedProduct_Code: data.FinishedProduct.Code,\r\n            TerminalCode:data.TerminalCode\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"CustomerRecipeComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  getCustomerRecipeList(shareholder) {\r\n    if (shareholder !== undefined && shareholder !== \"\") {\r\n      axios(\r\n        RestAPIs.GetCustomerRecipeListForRole +\r\n          \"?ShareholderCode=\" +\r\n          shareholder,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ data: result.EntityResult, isReadyToRender: true });\r\n          } else {\r\n            this.setState({ data: [], isReadyToRender: true });\r\n            console.log(\r\n              \"Error in GetCustomerRecipeListForRole:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error while getting Customer Receipe List:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnCustomerRecipe\r\n      );\r\n\r\n      this.setState({\r\n        operationsVisibilty,\r\n        selectedShareholder:\r\n          this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      });\r\n      this.getCustomerRecipeList(\r\n        this.props.userDetails.EntityResult.PrimaryShareholder\r\n      );\r\n      this.getTerminalsList(\r\n        this.props.userDetails.EntityResult.PrimaryShareholder\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeComposite:Error occured on ComponentDidMount\",\r\n        error\r\n      );\r\n    }\r\n\r\n    // clear session storage on window refresh event\r\n    window.addEventListener(\"beforeunload\", this.clearStorage);\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    // clear session storage\r\n    this.clearStorage();\r\n\r\n    // remove event listener\r\n    window.removeEventListener(\"beforeunload\", this.clearStorage);\r\n  };\r\n\r\n  clearStorage = () => {\r\n    sessionStorage.removeItem(this.componentName + \"GridState\");\r\n  };\r\n\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      let { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({\r\n        selectedShareholder: shareholder,\r\n        isReadyToRender: false,\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n      });\r\n      this.getCustomerRecipeList(shareholder);\r\n      this.getTerminalsList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            breadcrumbItem={this.props.activeItem}\r\n            shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n            selectedShareholder={this.state.selectedShareholder}\r\n            onShareholderChange={this.handleShareholderSelectionChange}\r\n            onDelete={this.authenticateDelete}\r\n            onAdd={this.handleAdd}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isDetails === \"true\" ? (\r\n          <ErrorBoundary>\r\n            <CustomerRecipeDetailsComposite\r\n              key=\"CustomerRecipeDetails\"\r\n              selectedRow={this.state.selectedRow}\r\n              selectedShareholder={this.state.selectedShareholder}\r\n              terminalList={this.terminalList}\r\n              onBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n              genericProps={this.props.activeItem.itemProps}\r\n            ></CustomerRecipeDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isReadyToRender ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <CustomerRecipeSummaryComposite\r\n                tableData={this.state.data.Table}\r\n                columnDetails={this.state.data.Column}\r\n                pageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                exportRequired={true}\r\n                exportFileName=\"CustomerRecipeList\"\r\n                columnPickerRequired={true}\r\n                selectionRequired={true}\r\n                columnGroupingRequired={true}\r\n                selectedItems={this.state.selectedItems}\r\n                onRowClick={this.handleRowClick}\r\n                onSelectionChange={this.handleSelection}\r\n                parentComponent={this.componentName}\r\n              ></CustomerRecipeSummaryComposite>\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : (\r\n          <LoadingPage message=\"Loading\"></LoadingPage>\r\n        )}\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.remove}\r\n            functionGroup={fnCustomerRecipe}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleDelete}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CustomerRecipeComposite);\r\n\r\nCustomerRecipeComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","WijmoGrid","flex","setFlex","translator","useTranslation","_getData","pageLength","CollectionView","sourceData","pageSize","setData","rowsPerPage","theGrid","React","theSearch","gridFilter","pagingComponent","colPicker","selectedRows","selectionRequired","selector","gridInitialized","grid","customizeFilterConditions","onRowClick","addEventListener","hostElement","e","ht","hitTest","target","closest","classList","includes","cellType","wjGrid","Cell","rowData","rows","row","dataItem","selectionMode","wjCore","select","Selector","itemChecked","s","singleSelection","filter","isSelected","current","loadash","forEach","onSelectionHandle","r","selectedRow","showCheckAll","column","rowHeaders","columns","headersVisibility","HeadersVisibility","All","useEffect","control","push","selectedItems","refresh","localStorage","getItem","parentComponent","gridState","JSON","parse","newFlex","col","matchedCol","colSetting","binding","visible","filterDefinition","collectionView","deferUpdate","sortDescriptions","clear","i","sortDesc","property","ascending","groupDescriptions","sessionStorage","gridSessionState","moveToPage","pageCount","pageIndex","text","searchText","columnPickerRequired","itemsSource","checkedMemberPath","displayMemberPath","lostFocus","addHandler","hidePopup","exportExcel","gridFlex","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","exportFileName","displayValues","columnDetail","Name","PopOver","terminalCodes","split","terminalsToShow","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","saveGridState","group","document","getElementsByClassName","chkbx","parentNode","sessionState","setItem","stringify","FlexGridFilter","operator","Operator","header","descending","apply","conditions","search","selectAll","and","or","cancel","stringOperators","op","EQ","NE","BW","EW","CT","NC","numberOperators","GT","LT","GE","LE","dateOperators","booleanOperators","getWidth","columnDetails","window","screen","width","WidthPx","parseInt","WidthPercentage","FlexGridSearch","class","ref","id","actionType","event","host","offsetHeight","focus","showPopup","PopupPosition","Below","preventDefault","colPickerClickHandler","exportRequired","fontSize","top","columnGroupingRequired","GroupPanel","FlexGrid","autoGenerateColumns","alternatingRowStep","autoRowHeights","initialized","virtualizationThreshold","onUpdatedView","FlexGridColumn","minWidth","isReadOnly","wordWrap","align","FlexGridCellTemplate","template","context","conditionalRowStyleCheck","conditionalRowStyles","ListBox","picker","initializedPicker","CollectionViewNavigator","headerFormat","byPage","cv","CustomerRecipeDetails","CustomerRecipe","modCustomerRecipe","isEnterpriseNode","Customers","finishedProducts","handleCellDataEdit","handleFinishedProductChange","handleActiveStatusChange","handleTerminalChange","handleCustomEditTextBox","cellData","FinishedProduct","FinishedProductItems","rowIndex","field","Code","TerminalCode","multiple","noResultsMessage","CustomerRecipefinishedProducts","CustomerCodes","Status","Remarks","DataTable","scrollable","scrollHeight","Column","renderer","BaseProductCode","Version","AdditiveCode","editFieldType","editable","customEditRenderer","CustomerRecipeDetailsComposite","emptyCustomerRecipe","CustomerRecipeValidationDef","isReadyToRender","saveEnabled","customerKPIList","IsEnterpriseNode","getTerminalList","showAuthenticationLayout","handleChange","getFinishedProductList","getcustomerList","getFinishedProduct","saveCustomerRecipe","createCustomerRecipe","updateCustomerRecipe","handleSave","validateSave","IsWebPortalUser","handleReset","keys","newVal","handleAuthenticationClose","finishedProductCode","shareHolderCode","keyCode","KeyCodes","obj","ShareHolderCode","keyDataCode","Array","isArray","componentWillReceiveProps","nextProps","CustomerRecipe_Code","getCustomerRecipe","IsArchived","terminalList","terminalCode","finishedProductOptions","isEnterprise","Customercodes","Table","ele","TerminalCodes","indexOf","Common_Code","initialFPAndCustomer","ShareholderCode","FunctionsList","functionGroups","fnCustomerRecipe","FinishedProduct_Code","results","modify","notification","messageType","message","messageResultDetails","com","err","CustomerRecipeAssociatedBPValidationDef","validator","keyFields","displayName","keyValues","isSuccess","errorMessage","toast","NotifyEvent","notificationMessage","autoClose","convertStringtoDecimal","modFinishedProduct","Density","ToleranceQuantity","ToleranceQuantityForMarine","ToleranceQuantityForPipeline","ToleranceQuantityForRail","hazardousEnabled","SFLPercent","Entity","onSaved","popUpContents","LastUpdatedTime","CreatedTime","TMDetailsHeader","entityCode","newEntityName","TMDetailsUserActions","handleBack","onBack","UserName","LoadingPage","CustomerRecipeSummaryComposite","tableData","onSelectionChange","WijmoGridComposite","CustomerRecipeComposite","isDetails","isDetailsModified","componentName","handleAdd","authenticateDelete","handleDelete","deleteCustomerKeys","shCode","CustomerRecipeCode","keyData","Key","Value","isRefreshDataRequire","ResultDataList","res","getCustomerRecipeList","messageResult","handleRowClick","remove","handleSelection","items","savedEvent","saveType","Common_Status","componentWillUnmount","clearStorage","removeEventListener","removeItem","handleShareholderSelectionChange","getTerminalsList","PrimaryShareholder","activeItem","ShareholderList","genericProps","PageAttibutes","WebPortalListPageSize","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","margin","List","view","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","transportationType","shareholderCode","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","shipmentCode","orderCode","receiptCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","bayCode","TransactionNumber","BatchNumber","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","TransactionType","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks"],"sourceRoot":""}