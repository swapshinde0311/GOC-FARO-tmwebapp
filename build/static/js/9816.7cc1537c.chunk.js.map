{"version":3,"file":"static/js/9816.7cc1537c.chunk.js","mappings":"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","sources":["Components/UIBase/Details/UnmatchedLocalTransactionsDetails.jsx","Components/Composite/Details/UnmatchedLocalTransactionsDetailsComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\n\r\nUnmatchedLocalTransactionsDetails.propTypes = {\r\n  batchDetailsList: PropTypes.array.isRequired\r\n}\r\nUnmatchedLocalTransactionsDetails.defaultProps = { batchDetailsList: [] }\r\n\r\nexport function UnmatchedLocalTransactionsDetails({ batchDetailsList }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 detailsTable\">\r\n              <DataTable\r\n                data={batchDetailsList}\r\n              >\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"ProductCode\"\r\n                  field=\"ProductCode\"\r\n                  header={t(\"ContractInfo_Product\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"ProductType\"\r\n                  field=\"ProductType\"\r\n                  header={t(\"ProductType_Title\")}\r\n                  renderer={(cellData) => {\r\n                    return t(\r\n                      batchDetailsList[cellData.rowIndex][\r\n                        cellData.field\r\n                      ]\r\n                    );\r\n                  }}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"MeterCode\"\r\n                  field=\"MeterCode\"\r\n                  header={t(\"Meter_Code\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"GrossQuantity\"\r\n                  field=\"GrossQuantity\"\r\n                  header={t(\"GrossQuantity\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"NetQuantity\"\r\n                  field=\"NetQuantity\"\r\n                  header={t(\"NetQuantity\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"StartTotalizer\"\r\n                  field=\"StartTotalizer\"\r\n                  header={t(\"StartTotalizer\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"EndTotalizer\"\r\n                  field=\"EndTotalizer\"\r\n                  header={t(\"EndTotalizer\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"Density\"\r\n                  field=\"Density\"\r\n                  header={t(\"Density\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"Pressure\"\r\n                  field=\"Pressure\"\r\n                  header={t(\"Pressure\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"Temperature\"\r\n                  field=\"Temperature\"\r\n                  header={t(\"Temperature\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"StartTime\"\r\n                  field=\"StartTime\"\r\n                  header={t(\"StartTime\")}\r\n                  renderer={(cellData) => {\r\n                    if (\r\n                      batchDetailsList[cellData.rowIndex][\r\n                        cellData.field\r\n                      ]\r\n                    ) {\r\n                      return new Date(\r\n                        batchDetailsList[cellData.rowIndex][\r\n                          cellData.field\r\n                        ]\r\n                      ).toLocaleString();\r\n                    }\r\n                  }}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"EndTime\"\r\n                  field=\"EndTime\"\r\n                  header={t(\"EndTime\")}\r\n                  renderer={(cellData) => {\r\n                    if (\r\n                      batchDetailsList[cellData.rowIndex][\r\n                        cellData.field\r\n                      ]\r\n                    ) {\r\n                      return new Date(\r\n                        batchDetailsList[cellData.rowIndex][\r\n                          cellData.field\r\n                        ]\r\n                      ).toLocaleString();\r\n                    }\r\n                  }}\r\n                ></DataTable.Column>\r\n              </DataTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { UnmatchedLocalTransactionsDetails } from \"../../UIBase/Details/UnmatchedLocalTransactionsDetails\";\r\n\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"./../../../Components/ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport * as KeyCodes from \"./../../../JS/KeyCodes\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button } from \"@scuf/common\";\r\n\r\nclass UnmatchedLocalTransactionsDetailsComposite extends Component {\r\n  state = {\r\n    batchDetailsList: [],\r\n    isReadyToRender: false,\r\n    transportationTypeOptions: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getBatchDetails(this.props.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite:Error occurred on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getBatchDetails(transaction) {\r\n    const keyCode = [\r\n      {\r\n        key: KeyCodes.bcuCode,\r\n        value: transaction.BCU_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.TransactionNumber,\r\n        value: transaction.RailDispatchManualEntry_TransactionNo,\r\n      },\r\n      {\r\n        key: KeyCodes.BatchNumber,\r\n        value: transaction.UnmatchedLocalTrans_BatchNo,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetBatchDetails,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          const batchDetailsList = this.getBatchDetailsForUI(\r\n            result.EntityResult\r\n          );\r\n          this.setState({ batchDetailsList, isReadyToRender: true });\r\n        } else {\r\n          this.setState({ batchDetailsList: [], isReadyToRender: true });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting GetLocalTransactions:\", error);\r\n      });\r\n  }\r\n\r\n  getBatchDetailsForUI(loadingInfoList) {\r\n    let detailList = [];\r\n    try {\r\n      let recordID = 1;\r\n      loadingInfoList.forEach((loadingInfo) => {\r\n        detailList.push(\r\n          this.getBatchInfoFromLoadingDetails(\r\n            loadingInfo.LoadingDetailFPinfo,\r\n            0 /*ProductTypeForUI.FinishedProduct*/,\r\n            recordID++\r\n          )\r\n        );\r\n        if (\r\n          loadingInfo.ArrLoadingDetailBP !== null &&\r\n          loadingInfo.ArrLoadingDetailBP !== undefined &&\r\n          Array.isArray(loadingInfo.ArrLoadingDetailBP)\r\n        ) {\r\n          loadingInfo.ArrLoadingDetailBP.forEach((baseProductInfo) => {\r\n            detailList.push(\r\n              this.getBatchInfoFromLoadingDetails(\r\n                baseProductInfo,\r\n                1 /*ProductTypeForUI.BaseProduct*/,\r\n                recordID++\r\n              )\r\n            );\r\n          });\r\n        }\r\n        if (\r\n          loadingInfo.ArrLoadingDetailAdditive !== null &&\r\n          loadingInfo.ArrLoadingDetailAdditive !== undefined &&\r\n          Array.isArray(loadingInfo.ArrLoadingDetailAdditive)\r\n        ) {\r\n          loadingInfo.ArrLoadingDetailAdditive.forEach((additiveInfo) => {\r\n            detailList.push(\r\n              this.getBatchInfoFromLoadingDetails(\r\n                additiveInfo,\r\n                2 /*ProductTypeForUI.Additive*/,\r\n                recordID++\r\n              )\r\n            );\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting GetBatchDetailsForUI:\", error);\r\n    }\r\n    return detailList;\r\n  }\r\n\r\n  getBatchInfoFromLoadingDetails(loading, productType, recordID) {\r\n    const batchInfo = {\r\n      ID: recordID,\r\n      ProductCode: \"\",\r\n      ProductType: \"\",\r\n      TankCode: \"\",\r\n      MeterCode: loading.MeterCode,\r\n      GrossQuantity:\r\n        loading.GrossQuantity === null\r\n          ? \"0 \" + loading.QuantityUOM\r\n          : loading.GrossQuantity.toLocaleString() + \" \" + loading.QuantityUOM,\r\n      NetQuantity:\r\n        loading.NetQuantity === null\r\n          ? \"0 \" + loading.QuantityUOM\r\n          : loading.NetQuantity.toLocaleString() + \" \" + loading.QuantityUOM,\r\n      StartTotalizer:\r\n        loading.StartTotalizer === null\r\n          ? \"\"\r\n          : loading.StartTotalizer.toLocaleString(),\r\n      EndTotalizer:\r\n        loading.EndTotalizer === null\r\n          ? \"\"\r\n          : loading.EndTotalizer.toLocaleString(),\r\n      Density:\r\n        loading.ProductDensity === null\r\n          ? \"\"\r\n          : loading.ProductDensity.toLocaleString() +\r\n            \" \" +\r\n            loading.ProductDensityUOM,\r\n      Pressure:\r\n        loading.Pressure === null\r\n          ? \"\"\r\n          : loading.Pressure.toLocaleString() + \" \" + loading.PressureUOM,\r\n      Temperature:\r\n        loading.Temperature === null\r\n          ? \"\"\r\n          : loading.Temperature.toLocaleString() + \" \" + loading.TemperatureUOM,\r\n      StartTime: loading.StartTime,\r\n      EndTime: loading.EndTime,\r\n    };\r\n    switch (productType) {\r\n      case 0: //ProductTypeForUI.FinishedProduct:\r\n        batchInfo.ProductCode = loading.FinishedProductCode;\r\n        batchInfo.ProductType = \"RailDispatchManualEntry_FinishedProduct\";\r\n        break;\r\n\r\n      case 1: //ProductTypeForUI.BaseProduct:\r\n        batchInfo.ProductCode = loading.BaseProductCode;\r\n        batchInfo.ProductType = \"Report_BaseProduct\";\r\n        break;\r\n\r\n      case 2: //ProductTypeForUI.Additive:\r\n        batchInfo.ProductCode = loading.AdditiveProductCode;\r\n        batchInfo.ProductType = \"ViewShipment_Additive\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    return batchInfo;\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const localData = lodash.cloneDeep(this.state.localData);\r\n      localData[propertyName] = data;\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnmatchedLocalTransactionsDetailsComposite: Error occurred on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader newEntityName=\"LocalTransactions_BatchDetails\"></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n\r\n        <ErrorBoundary>\r\n          <UnmatchedLocalTransactionsDetails\r\n            batchDetailsList={this.state.batchDetailsList}\r\n          />\r\n        </ErrorBoundary>\r\n\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <div className=\"row\">\r\n              <div className=\"col col-lg-8\">\r\n                <Button\r\n                  className=\"backButton\"\r\n                  onClick={this.props.onBack}\r\n                  content={t(\"Back\")}\r\n                ></Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </TranslationConsumer>\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(\r\n  UnmatchedLocalTransactionsDetailsComposite\r\n);\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;"],"names":["UnmatchedLocalTransactionsDetails","_ref","batchDetailsList","_jsx","TranslationConsumer","children","t","className","_jsxs","DataTable","data","Column","field","header","renderer","cellData","rowIndex","Date","toLocaleString","defaultProps","UnmatchedLocalTransactionsDetailsComposite","Component","constructor","arguments","state","isReadyToRender","transportationTypeOptions","handleChange","propertyName","lodash","this","localData","error","console","log","componentDidMount","Utilities","props","userDetails","EntityResult","IsArchived","getBatchDetails","selectedRow","transaction","keyCode","key","KeyCodes","value","BCU_Code","RailDispatchManualEntry_TransactionNo","UnmatchedLocalTrans_BatchNo","obj","ShareHolderCode","selectedShareholder","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","getBatchDetailsForUI","setState","catch","loadingInfoList","detailList","recordID","forEach","loadingInfo","push","getBatchInfoFromLoadingDetails","LoadingDetailFPinfo","ArrLoadingDetailBP","undefined","Array","isArray","baseProductInfo","ArrLoadingDetailAdditive","additiveInfo","loading","productType","batchInfo","ID","ProductCode","ProductType","TankCode","MeterCode","GrossQuantity","QuantityUOM","NetQuantity","StartTotalizer","EndTotalizer","Density","ProductDensity","ProductDensityUOM","Pressure","PressureUOM","Temperature","TemperatureUOM","StartTime","EndTime","FinishedProductCode","BaseProductCode","AdditiveProductCode","render","ErrorBoundary","TMDetailsHeader","newEntityName","Button","onClick","onBack","content","LoadingPage","message","connect","getUserDetails","TokenAuth","entityCode","popUpContents","style","margin","length","Popup","element","fieldName","fieldValue","Icon","marginLeft","root","name","size","position","List","map","Content"],"sourceRoot":""}