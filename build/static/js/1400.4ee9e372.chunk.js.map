{"version":3,"file":"static/js/1400.4ee9e372.chunk.js","mappings":"kOAKe,SAASA,EAAkBC,GAQtC,IARuC,QACvCC,EAAO,SACPC,EAAQ,UACRC,EAAS,aACTC,EAAY,YACZC,EAAW,YACXC,EAAW,wBACXC,GACHP,EACG,MAAOQ,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,GAEzCC,EAASC,EAAAA,OAAa,MAEtBC,EAAWA,KACb,IAAIC,EAAmBC,OAAOC,YAC1BC,EAAaT,EAGjB,GAAIG,EAAOO,SAAWP,EAAOO,QAAQC,wBAAwBC,IAAMb,EAC/DU,EAAa,MAGZ,IAAyB,IAArBH,EAIL,OAHAG,EAAa,CAIjB,CAEAR,EAAeQ,EAAW,EAkB9B,OAfAI,EAAAA,EAAAA,YAAU,KACgB,qBAAXN,QACPA,OAAOO,iBAAiB,SAAUT,EACtC,KAIJQ,EAAAA,EAAAA,YAAU,IAEC,KACHN,OAAOQ,oBAAoB,SAAUV,EAAS,GAGnD,KAGCW,EAAAA,EAAAA,KAAA,OAAKC,IAAKd,EAAOe,SACI,IAAhBlB,GAAoBgB,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SACnCE,IACEJ,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEC,UAAW,OAAQJ,UAC7BF,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACVF,EAAAA,EAAAA,KAACQ,EAAAA,EAAkB,CACfC,QAAShC,EACTI,YAAaA,EACbC,YAAaA,EACbH,UAAWA,EACXC,aAAcA,EACdF,SAAUA,UAML,IAGrC,CAMAH,EAAmBmC,aAAe,CAC9B3B,wBAAyB,I,iKC5CtB,SAAS4B,EAAanC,GAazB,IAb0B,OAC5BoC,EAAM,UACNC,EAAS,iBACTC,EAAgB,YAChBC,EAAW,aACXC,EAAY,cACZC,EAAa,qBACbC,EAAoB,qBACpBC,EAAoB,iBACpBC,EAAgB,yBAChBC,EAAwB,sBACxBC,EAAqB,0BACrBC,GACD/C,EACC,MAAMgD,EAA8BA,CAACD,EAA2BE,KAC9D,IAAIC,EAAsB,GAI1B,OAHAA,EAAsBH,EAA0BI,MAAMC,GAC7CA,EAAkBC,eAAiBJ,IAErCC,EAAoBH,yBAAyB,EAGtD,OACEvB,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SAChBE,IACA0B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkB7B,SAAA,EAC/B4B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAK7B,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,2BAA0B7B,UACvCF,EAAAA,EAAAA,KAACgC,EAAAA,MAAK,CACJC,OAAK,EACLC,MAAOrB,EAAUsB,KACjBC,UAAU,WACVC,SAA0B,KAAhBzB,EAAOuB,KACjBG,SAAWC,GAAStB,EAAc,OAAQsB,GAC1CC,MAAOpC,EAAE,uBACTqC,MAAOrC,EAAEU,EAAiBqB,MAC1BO,cAAc,OAGlB1C,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,2BAA0B7B,UACvCF,EAAAA,EAAAA,KAACgC,EAAAA,MAAK,CACJC,OAAK,EACLC,MAAOrB,EAAU8B,KACjBP,UAAU,WACVE,SAAWC,GAAStB,EAAc,OAAQsB,GAC1CC,MAAOpC,EAAE,uBACTqC,MAAOrC,EAAEU,EAAiB6B,MAC1BD,cAAc,OAIlB1C,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,2BAA0B7B,UACvCF,EAAAA,EAAAA,KAAC4C,EAAAA,OAAM,CACLX,OAAK,EACLY,YAAazC,EAAE,iBACf8B,MAAOrB,EAAUiC,oBACjBN,MAAOpC,EAAE,uBACTgC,UAAU,WACVW,QAASC,EAAAA,GACPjC,EAAYkC,gBAEdX,SAAWC,GAAStB,EAAc,sBAAuBsB,GACzDE,MAAOrC,EAAEU,EAAiBgC,qBAC1BT,SAAgD,IAAtCtB,EAAYkC,eAAeC,OACrCC,UAAU,EACVT,cAAc,EACdU,QAAQ,EACRC,iBAAkBjD,EAAE,yBAIxBJ,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,2BAA0B7B,UACvCF,EAAAA,EAAAA,KAACgC,EAAAA,MAAK,CACJC,OAAK,EACLC,MAA6B,OAAtBrB,EAAUyC,QAAmB,GAAKzC,EAAUyC,QACnDhB,SAAWC,GAAStB,EAAc,UAAWsB,GAC7CC,MAAOpC,EAAE,0BACTqC,MAAOrC,EAAEU,EAAiBwC,SAC1BZ,cAAc,OAIlB1C,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,2BAA0B7B,UACvCF,EAAAA,EAAAA,KAAC4C,EAAAA,OAAM,CACLX,OAAK,EACLC,MAAOnB,EAAYwC,mBACnBf,MAAOpC,EAAE,oCACT2C,QAASC,EAAAA,GACPjC,EAAYwC,oBAEdlB,UAAQ,EACRc,UAAU,EACVT,cAAc,OAIlB1C,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,2BAA0B7B,UACvCF,EAAAA,EAAAA,KAAC4C,EAAAA,OAAM,CACLX,OAAK,EACLY,YAAazC,EAAE,iBACfoC,MAAOpC,EAAE,yBACT8B,MAAOrB,EAAU2C,OACjBT,QAAS,CACP,CAAEU,KAAMrD,EAAE,mBAAoB8B,OAAO,GACrC,CAAEuB,KAAMrD,EAAE,+BAAgC8B,OAAO,IAEnDI,SAAWC,GAASpB,EAAqBoB,QAI7CvC,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,2BAA0B7B,UACvCF,EAAAA,EAAAA,KAACgC,EAAAA,MAAK,CACJC,OAAK,EACLC,MAA6B,OAAtBrB,EAAU6C,QAAmB,GAAK7C,EAAU6C,QACnDpB,SAAWC,GAAStB,EAAc,UAAWsB,GAC7CC,MAAOpC,EAAE,yBACTgC,UAAWvB,EAAU2C,SAAW5C,EAAO4C,OAAS,WAAa,GAC7Df,MAAOrC,EAAEU,EAAiB4C,SAC1BhB,cAAc,MAIjBtB,GACEpB,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,2BAA0B7B,UACxCF,EAAAA,EAAAA,KAAC2D,EAAAA,EAAmB,CAClBC,aAAc7C,EAAY8C,cAC1BC,iBAAkBjD,EAAUkD,cAC5BtB,MAAO3B,EAAiBiD,cACxB9C,cAAeA,EACf+C,cAAe9C,MAER,MAGbG,EAAyB6B,OAAS,EAClC7B,EAAyB4C,KAAKC,IAC1BlE,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACZF,EAAAA,EAAAA,KAACmE,EAAAA,UAAS,CAAAjE,UACRF,EAAAA,EAAAA,KAACmE,EAAAA,UAAUC,QAAO,CAChBrC,UAAU,qBACVsC,MAAOjD,EAAoB8C,EAAUrC,aAAe,MAAQzB,EAAE,qBAAyBA,EAAE,qBAAsBF,UAE/GF,EAAAA,EAAAA,KAACsE,EAAAA,EAAgB,CACfC,sBAAuBL,EAAUM,sBACjCC,mBAAoBnD,EACpBC,0BAA2BC,EAA4BD,EAA2B2C,EAAUrC,wBAKlG,SAOlB,CA/JAlB,EAAcD,aAAe,CAAEM,aAAc,CAAE0D,mBAAoB,QAAUtD,kBAAkB,G,0LCZ/F,MAAMuD,UAA+BC,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KAC7CC,MAAQ,CACNnE,OAAQoE,IAAAA,UAAiBC,EAAAA,IACzBpE,UAAW,CAAC,EACZC,iBAAkBkC,EAAAA,GAAqCkC,EAAAA,IACvDC,iBAAiB,EACjBC,aAAa,EACbC,oBAAqB,GACrBb,sBAAuB,GACvBnD,yBAA0B,GAC1BE,0BAA2B,GAC3B+D,sBAAuB,GACvBC,WAAY,CAAC,EACbC,0BAA0B,GAC1B,KA4JFC,aAAe,CAACC,EAAcnD,KAC5B,IACE,MAAM1B,EAAYmE,IAAAA,UAAiBW,KAAKZ,MAAMlE,WACxCC,EAAmBkE,IAAAA,UAAiBW,KAAKZ,MAAMjE,kBACrDD,EAAU6E,GAAgBnD,EAC1BoD,KAAKC,SAAS,CAAE/E,mBAC0BgF,IAAtCX,EAAAA,GAAoBQ,KACtB5E,EAAiB4E,GAAgB1C,EAAAA,GAC/BkC,EAAAA,GAAoBQ,GACpBnD,GAEFoD,KAAKC,SAAS,CAAE9E,sBAEG,kBAAjB4E,GACFC,KAAKG,wBAAwBvD,EAEjC,CAAE,MAAOE,GACPsD,QAAQC,IACN,qEACAvD,EAEJ,GACA,KAqIFwD,YAAc,KACZ,IACE,MAAM,iBAAEnF,GAAqB,IAAK6E,KAAKZ,OACjCnE,EAASoE,IAAAA,UAAiBW,KAAKZ,MAAMnE,QAC3C,IAAIC,EAAYmE,IAAAA,UAAiBW,KAAKZ,MAAMnE,QAoB5C,GAnBAsF,OAAOC,KAAKrF,GAAkBsF,SAAQ,SAAUC,GAC9CvF,EAAiBuF,GAAO,EAC1B,IACAV,KAAKC,SACH,CACE/E,UAAW,IAAKD,GAChBE,mBACAO,yBAA0B,KAE5B,KACMsE,KAAKW,MAAMC,YAAYC,aAAaC,kBACtCd,KAAKG,wBAAwBjF,EAAUkD,eACvC4B,KAAKe,wCAELf,KAAKgB,qBACLhB,KAAKe,sCACP,IAG2B,KAA3Bf,KAAKZ,MAAMnE,OAAOuB,KAAa,CACjC,IAAI0B,EAAoB8B,KAAKZ,MAAMlB,cACnCA,EAAgB,GAChB8B,KAAKC,SAAS,CAAE/B,iBAClB,CACF,CAAE,MAAOpB,GACPsD,QAAQC,IAAI,sDAAuDvD,EACrE,GACA,KACFmE,0BAA4B,KAC1BjB,KAAKC,SAAS,CACZJ,0BAA0B,GAC1B,EACF,KAEFqB,mBAAqB,KACnB,IACElB,KAAKC,SAAS,CAAER,aAAa,IAC7B,IAAI0B,EAAqB9B,IAAAA,UAAiBW,KAAKZ,MAAM+B,oBACjDC,EAAgB/D,EAAAA,GAClB2C,KAAKZ,MAAM1D,0BAGb0F,EAAgB/D,EAAAA,GAAuC+D,GACvDD,EAAmBE,WAAahE,EAAAA,GAA+B+D,GACpC,KAA3BpB,KAAKZ,MAAMnE,OAAOuB,KACdwD,KAAKsB,qBAAqBH,GAC1BnB,KAAKuB,qBAAqBJ,EAChC,CAAE,MAAOrE,GACPsD,QAAQC,IAAI,+DACd,GACA,KACFmB,WAAa,KACX,IAEE,IAAItG,EAAYmE,IAAAA,UAAiBW,KAAKZ,MAAMlE,WACxCkG,EAAgB/D,EAAAA,GAClB2C,KAAKZ,MAAM1D,0BAEb,GAAIsE,KAAKyB,aAAaL,GAAgB,CACpCA,EAAgB/D,EAAAA,GAAuC+D,GACvDlG,EAAUmG,WAAahE,EAAAA,GAA+B+D,GACtD,IAAIvB,GACsD,IAAxDG,KAAKW,MAAMC,YAAYC,aAAaa,gBAGlCP,EAAqB9B,IAAAA,UAAiBnE,GAC1C8E,KAAKC,SAAS,CAAEJ,2BAA0BsB,uBAAsB,MAC7B,IAA7BtB,GACFG,KAAKkB,oBACP,GAEJ,MACElB,KAAKC,SAAS,CAAER,aAAa,GAEjC,CAAE,MAAO3C,GACPsD,QAAQC,IAAI,qDAAsDvD,EACpE,GACA,KA0NF6E,yBAA4BC,IAC1B,IACE,IAAI1G,EAAYmE,IAAAA,UAAiBW,KAAKZ,MAAMlE,WAC5C,IAAI2G,EAAkB7B,KAAKW,MAAM1C,aACpB/C,EAAUkD,cAAnBwD,EAAmCC,EACR,GAC/B7B,KAAKC,SAAS,CAAE/E,cAChB8E,KAAKG,wBAAwBjF,EAAUkD,cACzC,CAAE,MAAOtB,GACPsD,QAAQC,IACN,mEACAvD,EAEJ,GACA,KAEFgF,0BAA4B,CAACvD,EAAWhC,KACtC,IACE,IAAIwF,EAAoB,GACpBrG,EAA2B2D,IAAAA,UAC7BW,KAAKZ,MAAM1D,0BAETsG,EAAwBtG,EAAyBuG,QAClDC,GAAiBA,EAAahG,eAAiBqC,EAAUrC,eAG1D8F,EAAsBzE,OAAS,GAC/B4E,MAAMC,QAAQJ,EAAsB,GAAGnD,yBAEvCkD,EACEC,EAAsB,GAAGnD,sBAAsBoD,QAC5CC,GAAiBA,EAAa1F,OAAS+B,EAAU/B,QAGpDuF,EAAkBxE,OAAS,IAC7BwE,EAAkB,GAAGM,aAAe9F,GAEtC,MAAMX,EAA4ByD,IAAAA,UAChCW,KAAKZ,MAAMxD,2BAGbA,EAA0B6E,SAAS1E,IAC7BA,EAAoBG,eAAiBqC,EAAUrC,eACjDH,EAAoBH,0BAClB2C,EAAU/B,MACRa,EAAAA,GAAgCkB,EAAWhC,GACjD,IAEFyD,KAAKC,SAAS,CAAErE,4BAA0BF,4BAC5C,CAAE,MAAOoB,GACPsD,QAAQC,IACN,oEACAvD,EAEJ,GACA,KAoBFwF,yBAA4B/F,IAC1B,IACE,IAAIrB,EAAYmE,IAAAA,UAAiBW,KAAKZ,MAAMlE,WAC5CA,EAAU2C,OAAStB,EACfrB,EAAU2C,SAAWmC,KAAKZ,MAAMnE,OAAO4C,SAAQ3C,EAAU6C,QAAU,IACvEiC,KAAKC,SAAS,CAAE/E,aAClB,CAAE,MAAO4B,GACPsD,QAAQC,IACN,oEACAvD,EAEJ,EACA,CAxrBFyF,eAAAA,GACE,OAAOvC,KAAKW,MAAM1C,YACpB,CAEAuE,eAAAA,GACE,OAAOnF,EAAAA,GACL2C,KAAKW,MAAMC,YAAYC,aAAa4B,gBAExC,CAEAC,iBAAAA,CAAkB/B,GAChB,IAAIgC,EAAchC,EAAMgC,YACxBrD,EAAAA,GAAYlB,cAAgB,GAC5BkB,EAAAA,GAAYnC,oBAAsB6C,KAAKW,MAAMC,YAAYC,aAAa1D,oBACtEmC,EAAAA,GAAYsD,gBAAkB5C,KAAKW,MAAMkC,oBACF,IAAnC7C,KAAKW,MAAM1C,aAAaV,SAC1B+B,EAAAA,GAAYlB,cAAgB,IAAI4B,KAAKW,MAAM1C,eAG7C,IAAI7C,EAAciE,IAAAA,UAAiBW,KAAKZ,MAAMhE,aAC9C,QAAgC8E,IAA5ByC,EAAYG,YAAhB,CAuBA,IAAIC,EAAU,CACZ,CACErC,IAAKsC,EAAAA,GACLzG,MAAOoG,EAAYG,cAGnBG,EAAM,CACRC,gBAAiBlD,KAAKW,MAAMkC,oBAC5BM,YAAaH,EAAAA,GACbA,SAAUD,GAEZK,IACEC,EAAAA,IACAhG,EAAAA,GACE4F,EACAjD,KAAKW,MAAM2C,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAS7G,MACG,IAArB8G,EAAOC,WACT3D,KAAKC,SACH,CACET,iBAAiB,EACjBvE,OAAQoE,IAAAA,UAAiBqE,EAAO7C,cAChC3F,UAAWmE,IAAAA,UAAiBqE,EAAO7C,cACnCpB,YAAapC,EAAAA,GACX2C,KAAKW,MAAMC,YAAYC,aAAa+C,cACpCC,EAAAA,EAAeC,OACfC,EAAAA,MAGJ,KACE/D,KAAKgE,WAAWhE,KAAKW,MAAMkC,oBAAqBa,EAAO7C,aAAarE,MAEhEwD,KAAKW,MAAMC,YAAYC,aAAaC,iBACtCd,KAAKG,wBAAwBuD,EAAO7C,aAAazC,eAEjD4B,KAAKgB,oBACP,IAGJhB,KAAKiE,2BAELjE,KAAKC,SAAS,CACZhF,OAAQoE,IAAAA,UAAiBC,EAAAA,IACzBpE,UAAWmE,IAAAA,UAAiBC,EAAAA,IAC5BE,iBAAiB,IAEnBY,QAAQC,IAAI,8BAA+BqD,EAAOQ,WACpD,IAEDC,OAAOrH,IACNsD,QAAQC,IAAI,sCAAuCvD,EAAO6D,EAAM,GAtDpE,MArBEX,KAAKC,SACH,CACEhF,OAAQoE,IAAAA,UAAiBC,EAAAA,IACzBpE,UAAWmE,IAAAA,UAAiBC,EAAAA,IAC5B5D,yBAA0B,GAC1BN,cACAoE,iBAAiB,EACjBE,oBAAqB,GACrBC,sBAAuB,GACvBF,YAAapC,EAAAA,GACX2C,KAAKW,MAAMC,YAAYC,aAAa+C,cACpCC,EAAAA,EAAeO,IACfL,EAAAA,MAGJ,MAC+D,IAAzD/D,KAAKW,MAAMC,YAAYC,aAAaC,kBACtCd,KAAKgB,oBAAoB,GA4DnC,CAEAiD,sBAAAA,GACEb,IACEC,EAAAA,IACE,oBACArD,KAAKW,MAAMkC,oBACX,wBACA7C,KAAKZ,MAAMlE,UAAUsB,KACvBa,EAAAA,GAAwC2C,KAAKW,MAAM2C,aAAaC,YAE/DC,MAAMC,IACL,GAAIA,EAAS7G,KAAK+G,UAAW,CAC3B,IAAIjE,EAAsB,GACf+D,EAAS7G,KAAKiE,aAAawD,MACjC5D,SAAS6D,IACZ5E,EAAoB6E,KAAKD,EAAK9H,KAAK,IAErCwD,KAAKC,SAAS,CAAEP,uBAClB,KAEDyE,OAAOrH,IACNsD,QAAQC,IAAI,oCAAqCvD,EAAM,GAE7D,CAEA0H,yBAAAA,CAA0BC,GACxB,IAE+B,KAA3BzE,KAAKZ,MAAMnE,OAAOuB,WAC4B0D,IAA9CuE,EAAU9B,YAAY+B,qBACtB1E,KAAKW,MAAM2C,aAAaC,YAAckB,EAAUnB,aAAaC,WAE7DvD,KAAK2E,cAAcF,EAGvB,CAAE,MAAO3H,GACPsD,QAAQC,IACN,oEACAvD,EAEJ,CACF,CACA8H,iBAAAA,GACE,IACEvH,EAAAA,GAAqB2C,KAAKW,MAAMC,YAAYC,aAAagE,YAEzD7E,KAAK2E,cAAc3E,KAAKW,MAC1B,CAAE,MAAO7D,GACPsD,QAAQC,IACN,4DACAvD,EAEJ,CACF,CA0BAqD,uBAAAA,CAAwB2E,GACtB,IACE,IAAIC,EAA0B,GAC9B,IAAIlG,EAAwB,GACxBnD,EAA2B,GAC/BmD,EAAwBQ,IAAAA,UACtBW,KAAKZ,MAAMP,uBAEbnD,EAA2B2D,IAAAA,UACzBW,KAAKZ,MAAM1D,0BAEb,MAAME,EAA4ByD,IAAAA,UAChCW,KAAKZ,MAAMxD,2BAEb,IAAIV,EAAYmE,IAAAA,UAAiBW,KAAKZ,MAAMlE,WAE5C4J,EAAkBrE,SAAS3E,IACzB,IAAIkJ,EAAYtJ,EAAyBM,MAAMC,GACtCA,EAAkBC,eAAiBJ,SAG1BoE,IAAd8E,EACFnG,EAAsBoG,eAAexE,SAAQ,SAC3CyE,GAEA,GAAIA,EAAkBhJ,eAAiBJ,EAAU,CAC/C,IAAIqJ,EAAiBjK,EAAUmG,WAAWrF,MACvCoJ,GACQA,EAAwBlJ,eAAiBJ,SAG7BoE,IAAnBiF,GACFD,EAAkBrG,sBAAsB4B,SAAQ,SAC9CyE,GAEA,IAAIG,EAAiBF,EAAeG,oBAAoBtJ,MACrDuJ,GACQA,EAAEC,gBAAkBN,EAAkB1I,YAG1B0D,IAAnBmF,IACFH,EAAkB7C,aAChBgD,EAAeI,eACrB,IAEFV,EAAwBR,KAAKW,EAC/B,CACF,IAEAH,EAAwBR,KAAKS,EAC/B,IAEFtJ,EAA2B,GAC3BA,EAA2BqJ,EAC3BrJ,EAA2B2B,EAAAA,GACzB3B,GAEFE,EAA0B6E,SAAS1E,SAIXmE,IAHF4E,EAAkB9I,MAAM8I,GACnC/I,EAAoBG,eAAiB4I,KAG5CvE,OAAOC,KAAKzE,EAAoBH,2BAA2B6E,SACxDC,GAAS3E,EAAoBH,0BAA0B8E,GAAO,IAEnE,IAGFV,KAAKC,SAAS,CAAEvE,2BAA0BE,6BAC5C,CAAE,MAAOkB,GACPsD,QAAQC,IACN,0EACAvD,EAEJ,CACF,CAEAkE,kBAAAA,GACE,IACE,IAAInC,EAAwBQ,IAAAA,UAC1BW,KAAKZ,MAAMP,uBAETsD,MAAMC,QAAQvD,EAAsBoG,iBAAmBpG,EAAsBoG,eAAe1H,OAAS,GACvGyC,KAAKG,wBAAwB,CAC3BtB,EAAsBoG,eAAe,GAAG/I,cAI9C,CAAE,MAAOY,GACPsD,QAAQC,IACN,qEACAvD,EAEJ,CACF,CAEA6H,aAAAA,CAAchE,GACZ,IACEyC,IACEC,EAAAA,IACAhG,EAAAA,GACE,CAACqI,EAAAA,IACD1F,KAAKW,MAAM2C,aAAaC,YAE1BC,MAAMC,IACN,IAAIC,EAASD,EAAS7G,KACtB,IAAyB,IAArB8G,EAAOC,UAAoB,CAC7B3D,KAAKC,SAAS,CACZpB,sBAAuBQ,IAAAA,UAAiBqE,EAAO7C,cAC/CjF,0BAA2ByB,EAAAA,GACzBqG,EAAO7C,aAAaoE,kBAGxB,IAAIpG,EAAwBQ,IAAAA,UAC1BW,KAAKZ,MAAMP,uBAEbmB,KAAKC,SACH,CACEpB,sBAAuBA,IAEzB,IAAMmB,KAAK0C,kBAAkB/B,IAEjC,MACEP,QAAQC,IAAI,0BACd,GAEJ,CAAE,MAAOvD,GACPsD,QAAQC,IAAI,6BAA8BvD,EAC5C,CACF,CAsFA2E,YAAAA,CAAaL,GACX,MAAM,UAAElG,GAAc8E,KAAKZ,MAC3B,IAAIjE,EAAmBkE,IAAAA,UAAiBW,KAAKZ,MAAMjE,kBACnDoF,OAAOC,KAAKjB,EAAAA,IAAqBkB,SAAQ,SAAUC,GACjDvF,EAAiBuF,GAAOrD,EAAAA,GACtBkC,EAAAA,GAAoBmB,GACpBxF,EAAUwF,GAEd,IAEIxF,EAAU2C,SAAWmC,KAAKZ,MAAMnE,OAAO4C,SACf,OAAtB3C,EAAU6C,SAA0C,KAAtB7C,EAAU6C,UAC1C5C,EAA0B,QAAI,mCAIlC,IAAIS,EAA4ByD,IAAAA,UAC9BW,KAAKZ,MAAMxD,2BAGbwF,EAAcX,SAASlC,IACrB3C,EAA0B6E,SAAS1E,IAC7BA,EAAoBG,eAAiBqC,EAAUrC,cACjDqC,EAAUM,sBAAsB4B,SAASyE,IACvCnJ,EAAoBH,0BAClBsJ,EAAkB1I,MAChBa,EAAAA,GACF6H,EACAA,EAAkB7C,aACnB,GAEL,GACA,IAEJrC,KAAKC,SAAS,CAAE9E,mBAAkBS,8BAClC,IAAI+J,GAAc,EAgBlB,OAfA/J,EAA0B6E,SAAS8E,IACjC,IAAII,EAOF,OAAOA,EANPA,EAAcpF,OAAOqF,OAAOL,EAAE3J,2BAA2BiK,OACvD,SAAUtJ,GACR,MAAiB,KAAVA,CACT,GAIJ,IAEEoJ,IACFA,EAAcpF,OAAOqF,OAAOzK,GAAkB0K,OAAM,SAAUtJ,GAC5D,MAAiB,KAAVA,CACT,KACKoJ,CACT,CAEArE,oBAAAA,CAAqBpG,GACnB,IAAI6H,EAAU,CACZ,CACErC,IAAKsC,EAAAA,GACLzG,MAAOrB,EAAUsB,OAIjByG,EAAM,CACRC,gBAAiBlD,KAAKW,MAAMkC,oBAC5BM,YAAaH,EAAAA,GACbA,SAAUD,EACV+C,OAAQ5K,GAEN6K,EAAe,CACjBC,YAAa,WACbC,QAAS,6BACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,uBACZC,UAAW,CAACpG,KAAKZ,MAAMlE,UAAUsB,MACjC6J,WAAW,EACXC,aAAc,MAIpBlD,IACEC,EAAAA,IACAhG,EAAAA,GACE4F,EACAjD,KAAKW,MAAM2C,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAS7G,KACtBmJ,EAAaC,YAActC,EAAOC,UAAY,UAAY,WAC1DoC,EAAaG,qBAAqB,GAAGG,UAAY3C,EAAOC,WAC/B,IAArBD,EAAOC,WACT3D,KAAKC,SAAS,CACZR,YAAapC,EAAAA,GACX2C,KAAKW,MAAMC,YAAYC,aAAa+C,cACpCC,EAAAA,EAAeC,OACfC,EAAAA,IAEFlE,0BAA0B,IAG5BG,KAAK0C,kBAAkB,CACrBC,YAAa,CAAEG,YAAa9C,KAAKZ,MAAMlE,UAAUsB,UAGnDuJ,EAAaG,qBAAqB,GAAGI,aACnC5C,EAAOQ,UAAU,GACnBlE,KAAKC,SAAS,CACZR,YAAapC,EAAAA,GACX2C,KAAKW,MAAMC,YAAYC,aAAa+C,cACpCC,EAAAA,EAAeO,IACfL,EAAAA,IAEFlE,0BAA0B,IAG5BO,QAAQC,IAAI,yBAA0BqD,EAAOQ,YAE/ClE,KAAKW,MAAM4F,QAAQvG,KAAKZ,MAAMlE,UAAW,MAAO6K,EAAa,IAE9D5B,OAAOrH,IACNkD,KAAKC,SAAS,CACZR,YAAapC,EAAAA,GACX2C,KAAKW,MAAMC,YAAYC,aAAa+C,cACpCC,EAAAA,EAAeO,IACfL,EAAAA,IAEFlE,0BAA0B,IAG5BkG,EAAaG,qBAAqB,GAAGI,aAAexJ,EACpDkD,KAAKW,MAAM4F,QAAQvG,KAAKZ,MAAMlE,UAAW,MAAO6K,EAAa,GAEnE,CAEAxE,oBAAAA,CAAqBrG,GACnB,IAAI6H,EAAU,CACZ,CACErC,IAAKsC,EAAAA,GACLzG,MAAOrB,EAAUsB,OAIjByG,EAAM,CACRC,gBAAiBlD,KAAKW,MAAMkC,oBAC5BM,YAAaH,EAAAA,GACbA,SAAUD,EACV+C,OAAQ5K,GAEN6K,EAAe,CACjBC,YAAa,WACbC,QAAS,6BACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,uBACZC,UAAW,CAACpG,KAAKZ,MAAMlE,UAAUsB,MACjC6J,WAAW,EACXC,aAAc,MAIpBlD,IACEC,EAAAA,IACAhG,EAAAA,GACE4F,EACAjD,KAAKW,MAAM2C,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAS7G,KACtBmJ,EAAaC,YAActC,EAAOC,UAAY,UAAY,WAC1DoC,EAAaG,qBAAqB,GAAGG,UAAY3C,EAAOC,WAC/B,IAArBD,EAAOC,WACT3D,KAAKC,SAAS,CACZR,YAAapC,EAAAA,GACX2C,KAAKW,MAAMC,YAAYC,aAAa+C,cACpCC,EAAAA,EAAeC,OACfC,EAAAA,IAEFlE,0BAA0B,IAG5BG,KAAK0C,kBAAkB,CACrBC,YAAa,CAAEG,YAAa9C,KAAKZ,MAAMlE,UAAUsB,UAGnDwD,KAAKC,SAAS,CACZR,YAAapC,EAAAA,GACX2C,KAAKW,MAAMC,YAAYC,aAAa+C,cACpCC,EAAAA,EAAeC,OACfC,EAAAA,IAEFlE,0BAA0B,IAG5BkG,EAAaG,qBAAqB,GAAGI,aACnC5C,EAAOQ,UAAU,GACnB9D,QAAQC,IAAI,yBAA0BqD,EAAOQ,YAE/ClE,KAAKW,MAAM4F,QAAQvG,KAAKZ,MAAMlE,UAAW,SAAU6K,EAAa,IAEjE5B,OAAOrH,IACNiJ,EAAaG,qBAAqB,GAAGI,aAAexJ,EACpDkD,KAAKW,MAAM4F,QAAQvG,KAAKZ,MAAMlE,UAAW,SAAU6K,GACnD/F,KAAKC,SAAS,CACZR,YAAapC,EAAAA,GACX2C,KAAKW,MAAMC,YAAYC,aAAa+C,cACpCC,EAAAA,EAAeC,OACfC,EAAAA,IAEFlE,0BAA0B,GAE1B,GAER,CA2DAkB,mCAAAA,GACE,IACE,IAAIlC,EAAwBQ,IAAAA,UAC1BW,KAAKZ,MAAMP,uBAEbmB,KAAKC,SAAS,CACZrE,0BAA2ByB,EAAAA,GACzBwB,EAAsB2H,WAG5B,CAAE,MAAO1J,GACPsD,QAAQC,IACN,8DACAvD,EAEJ,CACF,CAgBAkH,UAAAA,CAAWyC,EAAYC,GAMrB,IAAgB,IALFrJ,EAAAA,GACZ2C,KAAKW,MAAMC,YAAYC,aAAa+C,cACpCC,EAAAA,EAAe8C,KACfC,EAAAA,IAEoB,CAEpB,IAAI7H,EAAqB,QACOmB,IAA5BF,KAAKW,MAAMtF,mBACsC6E,IAA/CF,KAAKW,MAAMtF,aAAa0D,qBAC1BA,EAAqBiB,KAAKW,MAAMtF,aAAa0D,oBAGjD,IAAI8H,EAAoB,CACtBC,SAAUC,EAAAA,GACVC,mBAAoBjI,EACpBkI,gBAAiB,CAAC,CAAEvG,IAAK,kBAAmBnE,MAAOkK,GAAe,CAAE/F,IAAK,qBAAsBnE,MAAOmK,KAExGtD,IACEC,EAAAA,IACAhG,EAAAA,GACEwJ,EACA7G,KAAKW,MAAM2C,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAS7G,MACG,IAArB8G,EAAOC,UACT3D,KAAKC,SAAS,CACZN,sBAAuB+D,EAAO7C,aAAaqG,kBAG7ClH,KAAKC,SAAS,CAAEN,sBAAuB,KACvCS,QAAQC,IAAI,oCAAqCqD,EAAOQ,WAC1D,IAEDC,OAAOrH,IACNsD,QAAQC,IAAI,+CAAgDvD,EAAM,GAExE,CACF,CACAqK,MAAAA,GACE,MAAM/L,EAAc,CAClBgM,aAAcpH,KAAKwC,kBACnBtE,cAAe8B,KAAKuC,kBACpBjF,eAAgB0C,KAAKW,MAAMC,YAAYC,aAAa1D,oBACpDS,mBAAoBoC,KAAKZ,MAAMM,qBAG3B2H,EAAgB,CACpB,CACEC,UAAW,iCACXC,WACE,IAAIC,KAAKxH,KAAKZ,MAAMlE,UAAUuM,iBAAiBC,qBAC/C,IACA,IAAIF,KAAKxH,KAAKZ,MAAMlE,UAAUuM,iBAAiBE,sBAEnD,CACEL,UAAW,6BACXC,WACE,IAAIC,KAAKxH,KAAKZ,MAAMlE,UAAU0M,aAAaF,qBAC3C,IACA,IAAIF,KAAKxH,KAAKZ,MAAMlE,UAAU0M,aAAaD,uBAIjD,OAAO3H,KAAKZ,MAAMI,iBAChBrD,EAAAA,EAAAA,MAAA,OAAA5B,SAAA,EACEF,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACZF,EAAAA,EAAAA,KAACwN,EAAAA,EAAe,CACdC,WAAY9H,KAAKZ,MAAMnE,OAAOuB,KAC9BuL,cAAc,qCACdV,cAAeA,OAGnBhN,EAAAA,EAAAA,KAACzB,EAAAA,EAAkB,CAACE,QAASkH,KAAKZ,MAAMO,sBAAsBpF,SAAC,OAC/DF,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACZF,EAAAA,EAAAA,KAACW,EAAa,CACZC,OAAQ+E,KAAKZ,MAAMnE,OACnBC,UAAW8E,KAAKZ,MAAMlE,UACtBC,iBAAkB6E,KAAKZ,MAAMjE,iBAC7BC,YAAaA,EACbE,cAAe0E,KAAKF,aACpBvE,qBAAsByE,KAAK2B,yBAC3BnG,qBAAsBwE,KAAKsC,yBAC3B7G,iBACEuE,KAAKW,MAAMC,YAAYC,aAAaC,iBAEtCpF,yBAA0BsE,KAAKZ,MAAM1D,yBACrCmD,sBAAuBmB,KAAKZ,MAAMP,sBAClCjD,0BAA2BoE,KAAKZ,MAAMxD,0BACtCD,sBAAuBqE,KAAK8B,+BAGhCzH,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACZF,EAAAA,EAAAA,KAAC2N,EAAAA,EAAoB,CACnBC,WAAYjI,KAAKW,MAAMuH,OACvB1G,WAAYxB,KAAKwB,WACjBlB,YAAaN,KAAKM,YAClBb,YAAaO,KAAKZ,MAAMK,gBAG3BO,KAAKZ,MAAMS,0BACVxF,EAAAA,EAAAA,KAAC8N,EAAAA,EAAwB,CACvBC,SAAUpI,KAAKW,MAAMC,YAAYC,aAAawH,SAC9CC,aAC6B,KAA3BtI,KAAKZ,MAAMnE,OAAOuB,KACdqH,EAAAA,EAAeO,IACfP,EAAAA,EAAeC,OAErByE,cAAexE,EAAAA,GACfyE,gBAAiBxI,KAAKkB,mBACtBuH,YAAazI,KAAKiB,4BAElB,SAGN5G,EAAAA,EAAAA,KAACqO,EAAAA,EAAW,CAACzC,QAAQ,WAEzB,EAGF,MAOA,GAAe0C,EAAAA,EAAAA,KAPUvJ,IAChB,CACLwB,YAAaxB,EAAMwJ,eAAehI,YAClC0C,aAAclE,EAAMwJ,eAAeC,aAIvC,CAAwC7J,E,4FCj1BjC,SAAShB,EAAmBnF,GAM/B,IANgC,aAClCoF,EAAY,iBACZE,EAAgB,gBAChB2K,EAAe,cACfxN,EAAa,cACb+C,GACDxF,EAGC,OADyB,OAArBsF,IAA2BA,EAAmB,KAEhD9D,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SAChBE,IACA0B,EAAAA,EAAAA,MAAA,OAAKzB,MAAO,CAAEqO,QAAS,OAAQC,eAAgB,iBAAkBzO,SAAA,EAC/DF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEuO,MAAO,OAAQ1O,UAC3BF,EAAAA,EAAAA,KAAC4C,EAAAA,OAAM,CACLX,OAAK,EACLY,YAAazC,EAAE,iBACfoC,MAAOpC,EAAE,iBACT8B,MAAO4B,EACPX,UAAU,EACVJ,QAASC,EAAAA,GAAgCY,GACzCtB,SAAWC,GAAStB,EAAc,gBAAiBsB,GACnDE,MAAOrC,EAAEqO,GACTpM,SAAkC,IAAxBuB,EAAaV,OACvBR,cAAc,OAGlB1C,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,eAAc7B,UAC3BF,EAAAA,EAAAA,KAAC6O,EAAAA,SAAQ,CACPrM,MAAOpC,EAAE,cACTmH,QACEO,MAAMC,QAAQjE,IACdA,EAAiBZ,SAAWU,EAAaV,OAE3CZ,SAAWiF,GAAYvD,EAAcuD,WAOnD,CA9CA5D,EAAoBjD,aAAe,CACjCkD,aAAc,GACdE,iBAAkB,GAClB2K,gBAAiB,G,iFCMZ,SAASjB,EAAehP,GAAgD,IAA/C,WAAEiP,EAAU,cAAEC,EAAa,cAAEV,GAAexO,EAC1E,OACEwB,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SAChBE,IACAJ,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,kBAAiB7B,UAC9B4B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmB7B,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,4BAA2B7B,UACxCF,EAAAA,EAAAA,KAAA,QAAMK,MAAO,CAAEyO,OAAQ,QAAU/M,UAAU,cAAa7B,SACtC,KAAfuN,QAAoC5H,IAAf4H,EAClBrN,EAAEsN,GACFD,MAGQ,KAAfA,QACc5H,IAAf4H,GACAT,EAAc9J,OAAS,GACrBlD,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,kBAAiB7B,UAC9BF,EAAAA,EAAAA,KAAC+O,EAAAA,MAAK,CACJC,SACElN,EAAAA,EAAAA,MAAA,OAAA5B,SAAA,CACGE,EAAE4M,EAAc,GAAGC,WAAa,IAAI,IACpC,IAAMD,EAAc,GAAGE,YACxBlN,EAAAA,EAAAA,KAACiP,EAAAA,KAAI,CACH5O,MAAO,CAAE6O,WAAY,QACrBC,KAAK,SACLC,KAAK,aACLC,KAAK,aAIXC,SAAS,cACTpP,UAEAF,EAAAA,EAAAA,KAACuP,EAAAA,KAAI,CAACxN,UAAU,qBAAoB7B,SACjC8M,EAAc/I,KAAKuL,IAClB1N,EAAAA,EAAAA,MAACyN,EAAAA,KAAKnL,QAAO,CAEXrC,UAAU,gCAA+B7B,SAAA,CAExCE,EAAEoP,EAAQvC,WAAa,IAAI,IAAE,IAAMuC,EAAQtC,aAHxC,6BAUd,SAOd,CA3DAM,EAAgB9M,aAAe,CAC7B+M,WAAY,GACZC,cAAe,GACfV,cAAe,IA0DjB,S,gFCjEO,SAASW,EAAoBnP,GAKhC,IALiC,WACnCoP,EAAU,WACVzG,EAAU,YACVlB,EAAW,YACXb,GACD5G,EACC,OACEwB,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SAChBE,IACA0B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwB7B,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,2BAA0B7B,UACvCF,EAAAA,EAAAA,KAACyP,EAAAA,OAAM,CACL1N,UAAU,aACV2N,QAAS9B,EACT4B,QAASpP,EAAE,aAGfJ,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,2BAA0B7B,UACvC4B,EAAAA,EAAAA,MAAA,OAAKzB,MAAO,CAAEsP,MAAO,SAAUzP,SAAA,EAC7BF,EAAAA,EAAAA,KAACyP,EAAAA,OAAM,CACLD,QAASpP,EAAE,uBACX2B,UAAU,eACV2N,QAASzJ,KAEXjG,EAAAA,EAAAA,KAACyP,EAAAA,OAAM,CACLD,QAASpP,EAAE,QACXiC,UAAW+C,EACXsK,QAASvI,aAWzB,CAvCAwG,EAAqBjN,aAAe,CAAE0E,aAAa,E,sGCH5C,SAASd,EAAgB9F,GAI5B,IAJ6B,sBAC7B+F,EAAqB,mBACrBE,EAAkB,0BAClBlD,GACH/C,EACG,MAAMoR,EAA4B1L,IAC9B,GAA+B,eAA3BA,EAAU8D,aAEV,OADA6H,EAA6B3L,EAAU,IAAIiJ,MACpC,IAAIA,KAEX,IAAI2C,EAAQ5L,EAAU8D,aAAa+H,MAAM,KACzC,OAAO,IAAI5C,KAAK2C,EAAM,GAAGA,EAAM,GAAG,EAAEA,EAAM,GAC9C,EAEED,EAA+BA,CAAC3L,EAAWhC,KAC7C,IAAI8N,EAAU,IAAI7C,KAAKjL,GACvBA,EAAQ8N,EAAQC,cAAgB,KAAO,KAAOD,EAAQE,WAAa,IAAIC,OAAO,GAAK,KAAO,IAAMH,EAAQI,WAAWD,OAAO,GAC1H1L,EAAmBP,EAAUhC,EAAM,EAEvC,OACIlC,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SACdE,IACEJ,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,MAAK7B,UAChBF,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,kCAAiC7B,UAC5CF,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,MAAK7B,SAEZqE,EAAsBN,KAAKC,GACvBA,EAAUmM,SAASC,gBAAkBC,EAAAA,GAAmBC,OAAOF,gBAAyC,IAAxBpM,EAAUuM,WACtFzQ,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,2BAA0B7B,UACrCF,EAAAA,EAAAA,KAACgC,EAAAA,MAAK,CACFC,OAAK,EACLO,MAAOpC,EAAE8D,EAAUwM,aACnBxO,MAAkC,OAA3BgC,EAAU8D,aAAwB,GAAK9D,EAAU8D,aACxD5F,WAAqC,IAA1B8B,EAAUyM,YAAuB,WAAa,KACzDtO,UAAmC,IAAzB6B,EAAU0M,WACpBtO,SAAWJ,GAAUuC,EAAmBP,EAAWhC,GACnDO,MAAOrC,EAAEmB,EAA0B2C,EAAU/B,OAC7CO,cAAc,MAEZwB,EAAUmM,SAASC,gBAAkBC,EAAAA,GAAmBM,IAAIP,eAAiBpM,EAAUmM,SAASC,gBAAkBC,EAAAA,GAAmBO,KAAKR,gBAA0C,IAAxBpM,EAAUuM,UAezKvM,EAAUmM,SAASC,gBAAkBC,EAAAA,GAAmBQ,MAAMT,eAAiBpM,EAAUmM,SAASC,gBAAkBC,EAAAA,GAAmBS,OAAOV,gBAA0C,IAAxBpM,EAAUuM,UAgBzKvM,EAAUmM,SAASC,gBAAkBC,EAAAA,GAAmBU,KAAKX,gBAAyC,IAAxBpM,EAAUuM,WACpFzQ,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,2BAA0B7B,UACrCF,EAAAA,EAAAA,KAAC6O,EAAAA,SAAQ,CAAC9M,UAAU,sCAChBS,MAAOpC,EAAE8D,EAAUwM,aACnBnJ,QAAoC,OAA3BrD,EAAU8D,aAAwB,GAAyD,SAApD9D,EAAU8D,aAAakJ,WAAWZ,cAClFjO,UAAmC,IAAzB6B,EAAU0M,WACpBtO,SAAWJ,GAAUuC,EAAmBP,EAAWhC,OAIzDgC,EAAUmM,SAASC,gBAAkBC,EAAAA,GAAmBY,SAASb,gBAAyC,IAAxBpM,EAAUuM,WAE1FzQ,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,2BAA0B7B,UACrCF,EAAAA,EAAAA,KAACoR,EAAAA,WAAU,CACPnP,OAAK,EACLC,MAAmC,OAA3BgC,EAAU8D,cAAoD,KAA3B9D,EAAU8D,aAAuB,GACtE4H,EAAyB1L,GAE/B1B,MAAOpC,EAAE8D,EAAUwM,aACnBW,eAAeC,EAAAA,EAAAA,MACfC,iBAAiB,OACjBnP,WAAqC,IAA1B8B,EAAUyM,YAAuB,WAAa,KACzDtO,UAAmC,IAAzB6B,EAAU0M,WACpBtO,SAAWJ,GACP2N,EAA6B3L,EAAWhC,GAE5CsP,aAAetP,IACX2N,EAA6B3L,EAAWhC,EAAM,EAElDO,MAAOrC,EAAEmB,EAA0B2C,EAAU/B,OAC7CO,cAAc,MAEb,MA/CjB1C,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,2BAA0B7B,UACrCF,EAAAA,EAAAA,KAACgC,EAAAA,MAAK,CACFC,OAAK,EACLO,MAAOpC,EAAE8D,EAAUwM,aACnBxO,MAEgC,OAA3BgC,EAAU8D,cAAoD,KAA3B9D,EAAU8D,aAAuB,GAAM9D,EAAU8D,aAAcyJ,iBAEvGrP,WAAqC,IAA1B8B,EAAUyM,YAAuB,WAAa,KACzDtO,UAAmC,IAAzB6B,EAAU0M,WACpBtO,SAAWJ,GAAUuC,EAAmBP,EAAWhC,GACnDO,MAAOrC,EAAEmB,EAA0B2C,EAAU/B,OAC7CO,cAAc,OA3B1B1C,EAAAA,EAAAA,KAAA,OAAK+B,UAAU,2BAA0B7B,UACrCF,EAAAA,EAAAA,KAACgC,EAAAA,MAAK,CACFC,OAAK,EACLO,MAAOpC,EAAE8D,EAAUwM,aACnBxO,MAAkC,OAA3BgC,EAAU8D,aAAwB,GAAK9D,EAAU8D,aAExD5F,WAAqC,IAA1B8B,EAAUyM,YAAuB,WAAa,KACzDtO,UAAmC,IAAzB6B,EAAU0M,WACpBtO,SAAWJ,GAAUuC,EAAmBP,EAAWhC,GACnDO,MAAOrC,EAAEmB,EAA0B2C,EAAU/B,OAC7CO,cAAc,eA6DlE,C,mjCCtHO,MAAMgP,EAAwB,SACxBC,EAAyB,iBACzBC,EAA6B,cAC7BC,EAA6B,cAC7BC,EAAyB,UACzBC,EAA6B,qBAC7BC,EAA0B,WAC1BC,EAA0B,WAC1BC,EAA6B,cAC7BC,EAAiC,kBACjCC,EAAsB,OACtBC,EAAwB,gBACxBC,EAAmC,4BACnCC,EAA0B,WAC1BC,EAAyB,UACzBC,EAAgC,iBAChCpH,EAAgC,iBAChCqH,EAAqB,MACrBC,EAA4B,aAC5BC,EAA4B,aAC5BC,EAAmC,oBACnCC,EAAuB,QACvBC,EAA0B,WAC1BC,EAAqC,sBACrCC,EAAgD,iCAChDC,EAAiC,kBACjCC,EAA4C,6BAC5CC,EAAiC,kBACjCC,EAAoC,qBACpCC,EAAgC,iBAChCC,EAAoC,kCACpCC,EAA2B,YAC3BC,EAA4B,aAC5BC,EAAqB,MACrBC,EAA6B,kBAE7BC,EAAgC,6BAEhCC,EAA0C,yBAC1CC,EAA0C,yBAC1CC,EAA2C,+BAI3CC,EAAkC,mBAClCC,EAAkC,mBAClCC,EAA0C,2BAC1CC,EAAmC,oBACnCC,EAA6C,8BAC7CC,EAA+C,+BAC/CC,EAAuC,+BACvCC,EAAsC,uBACtCC,EAAsC,uBACtCC,EAA4C,6BAC5CC,EAA+B,gBAC/BC,EAA8B,8BAC9BC,GAA6B,6BAC7BC,GAAqC,yBACrCC,GAA8C,+BAC9CC,GAAwC,yBAExCC,GAAmC,iCACnCC,GAAoC,2BACpCC,GAAoC,2BACpCC,GAA4B,aAG5BC,GAA0C,mBAC1CC,GAA0C,mBAC1CC,GAA2C,yBAC3CC,GAA0B,0BAC1BC,GAA2B,2BAC3BC,GAAyB,UACzBC,GAAsC,wBAEtCC,GAAuB,QACvBC,GAA2B,YAC3BC,GAA0B,WAC1BC,GAA8B,gBAC9BC,GAAmC,mCACnCC,GAAyB,wBACzBC,GAA6B,cAC7BC,GAAqB,MAErBC,GAAuB,sBACvBC,GAAyB,wBACzBC,GAAgC,iBAChCC,GAA4B,aAC5BC,GAAwB,kBACxBC,GAAuB,uBACvBC,GAAsB,sBAEtBC,GAAyB,yBACzBC,GAAwB,wBAExBC,GAAkC,mBAClCC,GAAsC,uBACtCC,GAA4C,6BAC5CC,GAA2C,4BAC3CC,GAA+B,gBAE/BC,GAAuC,wBAGvCC,GAAiD,kCACjDC,GAA8C,+BAC9CC,GAAiD,kCACjDC,GAAwD,yCACxDC,GAAkD,mCAClDC,GAAiD,kCACjDC,GAAgD,iCAChDC,GAA+C,gCAC/CC,GAAgD,iCAChDC,GAA6C,8BAC7CC,GAAgD,iCAChDC,GAAuD,wCACvDC,GAAiD,kCACjDC,GAAgD,iCAChDC,GAA+C,gCAC/CC,GAA8C,+BAE9CC,GAA2B,uBAE3BC,GAA6B,cAC7BC,GAA+B,gBAC/BC,GAA6B,cAI7BC,GAA+B,e,6GC9HrC,SAASC,EAAqBC,EAAYC,GAC/C,GAAI3Q,MAAMC,QAAQyQ,GAAa,CAIA,IAHTA,EAAW5Q,QAC5B8Q,GAAWA,EAAOjV,OAASgV,IAEZvV,QAChBsV,EAAWG,QAAQ,CACjBzW,MAAO,KACPuB,KAAMgV,GAEZ,CACA,OAAOD,CACT,CAEO,SAASlH,IACd,IAAIsH,EAAWrZ,OAAOsZ,UAAUC,cAAgBvZ,OAAOsZ,UAAUD,SAMjE,OALAG,IAAAA,OAAcH,GACGG,IAAAA,aAEOC,eAAe,IAGzC,CAGO,SAASC,EAAgC1W,GAC9C,OACET,EAAAA,EAAAA,MAAA,OAAA5B,SAAA,EAAKF,EAAAA,EAAAA,KAAA,QAAAE,SAAOqC,KAAYvC,EAAAA,EAAAA,KAAA,OAAKkZ,MAAM,wDAEvC,C","sources":["Components/Composite/Common/TMDetailsKPILayout.jsx","Components/UIBase/Details/OriginDetails.jsx","Components/Composite/Details/OriginDetailsComposite.jsx","Components/UIBase/Common/AssociatedTerminals.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nexport default function TMDetailsKPILayout({\r\n    KPIList,\r\n    pageName,\r\n    rowHeight,\r\n    widgetHeight,\r\n    isDraggable,\r\n    isResizable,\r\n    kpiDisplayTopBreakpoint\r\n}) {\r\n    const [KPIDisplays, setKPIDisplays] = useState(1);\r\n\r\n    const kpiDiv = React.useRef(null);\r\n\r\n    const hideKpis = () => {\r\n        let currentScrollPos = window.pageYOffset;\r\n        let KPIDisplay = KPIDisplays;\r\n\r\n        // hide kpis based on div position to top of the window \r\n        if (kpiDiv.current && kpiDiv.current.getBoundingClientRect().top < kpiDisplayTopBreakpoint) {\r\n            KPIDisplay = 0;\r\n        }\r\n        // show the kpis once at top of the screen\r\n        else if (currentScrollPos === 0) {\r\n            KPIDisplay = 1\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n        setKPIDisplays(KPIDisplay);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\") {\r\n            window.addEventListener(\"scroll\", hideKpis);\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // remove listener on unmount\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", hideKpis)\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={kpiDiv}>\r\n            {KPIDisplays === 1 ? <TranslationConsumer>\r\n                {(t) => (\r\n                    <div style={{ marginTop: \"6px\" }}>\r\n                        <ErrorBoundary>\r\n                            <KPIDashboardLayout\r\n                                kpiList={KPIList}\r\n                                isDraggable={isDraggable}\r\n                                isResizable={isResizable}\r\n                                rowHeight={rowHeight}\r\n                                widgetHeight={widgetHeight}\r\n                                pageName={pageName}\r\n                            ></KPIDashboardLayout>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n                )}\r\n            </TranslationConsumer> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nTMDetailsKPILayout.propTypes = {\r\n    kpiDisplayTopBreakpoint: PropTypes.number\r\n}\r\n\r\nTMDetailsKPILayout.defaultProps = {\r\n    kpiDisplayTopBreakpoint: 100\r\n}","import React from \"react\";\r\nimport { Accordion, Select } from \"@scuf/common\";\r\nimport { Input } from \"@scuf/common\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { AttributeDetails } from \"../../UIBase/Details/AttributeDetails\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\n\r\nOriginDetails.propTypes = {\r\n  origin: PropTypes.object.isRequired,\r\n  modOrigin: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    shareholders: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    transportTypes: PropTypes.array,\r\n    associatedSupplier: PropTypes.array,\r\n  }).isRequired,\r\n  genericProps: PropTypes.shape({\r\n    transportationType: PropTypes.oneOf(\r\n      Object.values(Constants.TransportationType)\r\n    ),\r\n  }),\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  onCarrierIdentifierChange: PropTypes.func.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired\r\n};\r\n\r\nOriginDetails.defaultProps = { genericProps: { transportationType: \"ROAD\" }, isEnterpriseNode: false };\r\n\r\nexport function OriginDetails({\r\n  origin,\r\n  modOrigin,\r\n  validationErrors,\r\n  listOptions,\r\n  genericProps,\r\n  onFieldChange,\r\n  onAllTerminalsChange,\r\n  onActiveStatusChange,\r\n  isEnterpriseNode,\r\n  modAttributeMetaDataList,\r\n  onAttributeDataChange,\r\n  attributeValidationErrors\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find((selectedAttribute) => {\r\n      return selectedAttribute.TerminalCode === terminal;\r\n    })\r\n    return attributeValidation.attributeValidationErrors;\r\n  }\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modOrigin.Code}\r\n                indicator=\"required\"\r\n                disabled={origin.Code !== \"\"}\r\n                onChange={(data) => onFieldChange(\"Code\", data)}\r\n                label={t(\"OriginTerminal_Code\")}\r\n                error={t(validationErrors.Code)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modOrigin.Name}\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"Name\", data)}\r\n                label={t(\"OriginTerminal_Name\")}\r\n                error={t(validationErrors.Name)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                value={modOrigin.TransportationTypes}\r\n                label={t(\"TransportationTypes\")}\r\n                indicator=\"required\"\r\n                options={Utilities.transferListtoOptions(\r\n                  listOptions.transportTypes\r\n                )}\r\n                onChange={(data) => onFieldChange(\"TransportationTypes\", data)}\r\n                error={t(validationErrors.TransportationTypes)}\r\n                disabled={listOptions.transportTypes.length === 0}\r\n                multiple={true}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modOrigin.Address === null ? \"\" : modOrigin.Address}\r\n                onChange={(data) => onFieldChange(\"Address\", data)}\r\n                label={t(\"OriginTerminal_Address\")}\r\n                error={t(validationErrors.Address)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                value={listOptions.associatedSupplier}\r\n                label={t(\"OriginTerminal_AssociateSupplier\")}\r\n                options={Utilities.transferListtoOptions(\r\n                  listOptions.associatedSupplier\r\n                )}\r\n                disabled\r\n                multiple={true}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"OriginTerminal_Status\")}\r\n                value={modOrigin.Status}\r\n                options={[\r\n                  { text: t(\"ViewShipment_Ok\"), value: true },\r\n                  { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                ]}\r\n                onChange={(data) => onActiveStatusChange(data)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modOrigin.Remarks === null ? \"\" : modOrigin.Remarks}\r\n                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                label={t(\"OriginTerminal_Remark\")}\r\n                indicator={modOrigin.Status !== origin.Status ? \"required\" : \"\"}\r\n                error={t(validationErrors.Remarks)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n\r\n            {isEnterpriseNode ?\r\n              (<div className=\"col-12 col-md-6 col-lg-4\">\r\n                <AssociatedTerminals\r\n                  terminalList={listOptions.terminalCodes}\r\n                  selectedTerminal={modOrigin.TerminalCodes}\r\n                  error={validationErrors.TerminalCodes}\r\n                  onFieldChange={onFieldChange}\r\n                  onCheckChange={onAllTerminalsChange}\r\n                ></AssociatedTerminals>\r\n              </div>) : (\"\")}\r\n          </div>\r\n          {\r\n            modAttributeMetaDataList.length > 0 ?\r\n            modAttributeMetaDataList.map((attribute) =>\r\n                <ErrorBoundary>\r\n                  <Accordion>\r\n                    <Accordion.Content\r\n                      className=\"attributeAccordian\"\r\n                      title={isEnterpriseNode ? (attribute.TerminalCode + ' - ' + t(\"Attributes_Header\")) : (t(\"Attributes_Header\"))}\r\n                    >\r\n                      <AttributeDetails\r\n                        selectedAttributeList={attribute.attributeMetaDataList}\r\n                        handleCellDataEdit={onAttributeDataChange}\r\n                        attributeValidationErrors={handleValidationErrorFilter(attributeValidationErrors, attribute.TerminalCode)}\r\n                      ></AttributeDetails>\r\n                    </Accordion.Content>\r\n                  </Accordion>\r\n                </ErrorBoundary>\r\n              ) : null\r\n\r\n          }\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { emptyOrigin } from \"../../../JS/DefaultEntities\";\r\nimport { OriginDetails } from \"../../UIBase/Details/OriginDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { originValidationDef } from \"../../../JS/ValidationDef\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { functionGroups, fnOriginTerminal,fnKPIInformation } from \"../../../JS/FunctionGroups\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { originTerminalAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { kpiOriginTerminalDetail } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass OriginDetailsComposite extends Component {\r\n  state = {\r\n    origin: lodash.cloneDeep(emptyOrigin),\r\n    modOrigin: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(originValidationDef),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    associatedSuppliers: [],\r\n    attributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    originTerminalKPIList: [],\r\n    tempOrigin: {},\r\n    showAuthenticationLayout: false,\r\n  };\r\n\r\n  getTerminalList() {\r\n    return this.props.terminalList;\r\n  }\r\n\r\n  getShareholders() {\r\n    return Utilities.transferListtoOptions(\r\n      this.props.userDetails.EntityResult.ShareholderList\r\n    );\r\n  }\r\n\r\n  getOriginTerminal(props) {\r\n    let selectedRow = props.selectedRow;\r\n    emptyOrigin.TerminalCodes = [];\r\n    emptyOrigin.TransportationTypes = this.props.userDetails.EntityResult.TransportationTypes;\r\n    emptyOrigin.ShareholderCode = this.props.selectedShareholder;\r\n    if (this.props.terminalList.length === 1) {\r\n      emptyOrigin.TerminalCodes = [...this.props.terminalList];\r\n    }\r\n\r\n    var listOptions = lodash.cloneDeep(this.state.listOptions);\r\n    if (selectedRow.Common_Code === undefined) {\r\n      this.setState(\r\n        {\r\n          origin: lodash.cloneDeep(emptyOrigin),\r\n          modOrigin: lodash.cloneDeep(emptyOrigin),\r\n          modAttributeMetaDataList: [],\r\n          listOptions,\r\n          isReadyToRender: true,\r\n          associatedSuppliers: [],\r\n          originTerminalKPIList: [],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnOriginTerminal\r\n          ),\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode === false)\r\n            this.localNodeAttribute();\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.originTerminalCode,\r\n        value: selectedRow.Common_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.originTerminalCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetOriginTerminal,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              origin: lodash.cloneDeep(result.EntityResult),\r\n              modOrigin: lodash.cloneDeep(result.EntityResult),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnOriginTerminal\r\n              ),\r\n            },\r\n            () => {\r\n              this.getKPIList(this.props.selectedShareholder, result.EntityResult.Code\r\n              )\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n          this.getAssociatedSuppliers();\r\n        } else {\r\n          this.setState({\r\n            origin: lodash.cloneDeep(emptyOrigin),\r\n            modOrigin: lodash.cloneDeep(emptyOrigin),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetOriginTerminal:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting OriginTerminal:\", error, props);\r\n      });\r\n  }\r\n\r\n  getAssociatedSuppliers() {\r\n    axios(\r\n      RestAPIs.GetAssociatedSupplierList +\r\n        \"?ShareholderCode=\" +\r\n        this.props.selectedShareholder +\r\n        \"&OringinTerminalCode=\" +\r\n        this.state.modOrigin.Code,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        if (response.data.IsSuccess) {\r\n          let associatedSuppliers = [];\r\n          var data = response.data.EntityResult.Table;\r\n          data.forEach((item) => {\r\n            associatedSuppliers.push(item.Code);\r\n          });\r\n          this.setState({ associatedSuppliers });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Carrier List:\", error);\r\n      });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.origin.Code !== \"\" &&\r\n        nextProps.selectedRow.OriginTerminal_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getAttributes(nextProps);\r\n        // this.getOriginTerminal(nextProps);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"OriginDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      // this.getOriginTerminal(this.props);\r\n      this.getAttributes(this.props);\r\n    } catch (error) {\r\n      console.log(\r\n        \"OriginDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modOrigin = lodash.cloneDeep(this.state.modOrigin);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modOrigin[propertyName] = data;\r\n      this.setState({ modOrigin });\r\n      if (originValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          originValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n      if (propertyName === \"TerminalCodes\") {\r\n        this.terminalSelectionChange(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"OriginTerminalComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modAttributeMetaDataList = [];\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n      var modOrigin = lodash.cloneDeep(this.state.modOrigin);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        });\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.originterminal.forEach(function (\r\n            attributeMetaData\r\n          ) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue = modOrigin.Attributes.find(\r\n                (originTerminalAttribute) => {\r\n                  return originTerminalAttribute.TerminalCode === terminal;\r\n                }\r\n              );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modAttributeMetaDataList = [];\r\n      modAttributeMetaDataList = attributesTerminalsList;\r\n      modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modAttributeMetaDataList\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n\r\n      this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"OriginTerminalDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (Array.isArray(attributeMetaDataList.originterminal) && attributeMetaDataList.originterminal.length > 0) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.originterminal[0].TerminalCode,\r\n        ]);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.log(\r\n        \"OriginTerminalDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(props) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [originTerminalAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n            attributeValidationErrors: Utilities.getAttributeInitialValidationErrors(\r\n              result.EntityResult.originterminal\r\n            ),\r\n          });\r\n          let attributeMetaDataList = lodash.cloneDeep(\r\n            this.state.attributeMetaDataList\r\n          );\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: attributeMetaDataList,\r\n            },\r\n            () => this.getOriginTerminal(props)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const { validationErrors } = { ...this.state };\r\n      const origin = lodash.cloneDeep(this.state.origin);\r\n      var modOrigin = lodash.cloneDeep(this.state.origin);\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState(\r\n        {\r\n          modOrigin: { ...origin },\r\n          validationErrors,\r\n          modAttributeMetaDataList: [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(modOrigin.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n      if (this.state.origin.Code === \"\") {\r\n        var terminalCodes = [...this.state.terminalCodes];\r\n        terminalCodes = [];\r\n        this.setState({ terminalCodes });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"OriginDetailsComposite:Error occured on handleReset\", error);\r\n    }\r\n  };\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  saveOriginTerminal = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempOriginTerminal = lodash.cloneDeep(this.state.tempOriginTerminal);\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      tempOriginTerminal.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n      this.state.origin.Code === \"\"\r\n        ? this.createOriginTerminal(tempOriginTerminal)\r\n        : this.updateOriginTerminal(tempOriginTerminal);\r\n    } catch (error) {\r\n      console.log(\"OriginTerminalDetailsComposite : Error in saveOriginTerminal\");\r\n    }\r\n  };\r\n  handleSave = () => {\r\n    try {\r\n      // this.setState({ saveEnabled: false });\r\n      let modOrigin = lodash.cloneDeep(this.state.modOrigin);\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      if (this.validateSave(attributeList)) {\r\n        attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n        modOrigin.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempOriginTerminal = lodash.cloneDeep(modOrigin);\r\n        this.setState({ showAuthenticationLayout, tempOriginTerminal }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveOriginTerminal();\r\n          }\r\n        })\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"OriginDetailsComposite:Error occured on handleSave\", error);\r\n    }\r\n  };\r\n\r\n  validateSave(attributeList) {\r\n    const { modOrigin } = this.state;\r\n    var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    Object.keys(originValidationDef).forEach(function (key) {\r\n      validationErrors[key] = Utilities.validateField(\r\n        originValidationDef[key],\r\n        modOrigin[key]\r\n      );\r\n    });\r\n\r\n    if (modOrigin.Status !== this.state.origin.Status) {\r\n      if (modOrigin.Remarks === null || modOrigin.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"OriginTerminal_RemarksRequired\";\r\n      }\r\n    }\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n    var returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    return returnValue;\r\n  }\r\n\r\n  createOriginTerminal(modOrigin) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.originTerminalCode,\r\n        value: modOrigin.Code,\r\n      },\r\n    ];\r\n\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.originTerminalCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modOrigin,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"OriginTerminal_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"OriginTerminal_Code\"],\r\n          keyValues: [this.state.modOrigin.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateOriginTerminal,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnOriginTerminal\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          this.getOriginTerminal({\r\n            selectedRow: { Common_Code: this.state.modOrigin.Code },\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnOriginTerminal\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          console.log(\"Error in CreateOrigin:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(this.state.modOrigin, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnOriginTerminal\r\n          ),\r\n          showAuthenticationLayout: false,\r\n\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modOrigin, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateOriginTerminal(modOrigin) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.originTerminalCode,\r\n        value: modOrigin.Code,\r\n      },\r\n    ];\r\n\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.originTerminalCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modOrigin,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"OriginTerminal_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"OriginTerminal_Code\"],\r\n          keyValues: [this.state.modOrigin.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateOriginTerminal,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnOriginTerminal\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          this.getOriginTerminal({\r\n            selectedRow: { Common_Code: this.state.modOrigin.Code },\r\n          });\r\n        } else {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnOriginTerminal\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in UpdateOrigin:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(this.state.modOrigin, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modOrigin, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnOriginTerminal\r\n          ),\r\n          showAuthenticationLayout: false,\r\n\r\n        });\r\n      });\r\n  }\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      var modOrigin = lodash.cloneDeep(this.state.modOrigin);\r\n      let terminalOptions = this.props.terminalList;\r\n      if (checked) modOrigin.TerminalCodes = terminalOptions;\r\n      else modOrigin.TerminalCodes = [];\r\n      this.setState({ modOrigin });\r\n      this.terminalSelectionChange(modOrigin.TerminalCodes);\r\n    } catch (error) {\r\n      console.log(\r\n        \"OriginDetailsComposite:Error occured on handleAllTerminalsChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[\r\n            attribute.Code\r\n          ] = Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors,modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"OriginDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors: Utilities.getAttributeInitialValidationErrors(\r\n          attributeMetaDataList.customer\r\n        ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modOrigin = lodash.cloneDeep(this.state.modOrigin);\r\n      modOrigin.Status = value;\r\n      if (modOrigin.Status !== this.state.origin.Status) modOrigin.Remarks = \"\";\r\n      this.setState({ modOrigin });\r\n    } catch (error) {\r\n      console.log(\r\n        \"OriginDetailsComposite:Error occured on handleActiveStatusChange:\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  //Get KPI for Origin Terminal\r\n  getKPIList(shareholder,originTerminalCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      \r\n      var transportationType = \"\";\r\n      if (this.props.genericProps !== undefined) {\r\n        if (this.props.genericProps.transportationType !== undefined) {\r\n          transportationType = this.props.genericProps.transportationType;\r\n        }\r\n      }\r\n      let objKPIRequestData = {\r\n        PageName: kpiOriginTerminalDetail,\r\n        TransportationType: transportationType,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder }, { key: \"OriginTerminalCode\", value: originTerminalCode }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              originTerminalKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ originTerminalKPIList: [] });\r\n            console.log(\"Error in origin terminal KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Origin Terminal KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n  render() {\r\n    const listOptions = {\r\n      shareholders: this.getShareholders(),\r\n      terminalCodes: this.getTerminalList(),\r\n      transportTypes: this.props.userDetails.EntityResult.TransportationTypes,\r\n      associatedSupplier: this.state.associatedSuppliers,\r\n    };\r\n\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"OriginTerminal_LastUpdatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.modOrigin.LastUpdatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modOrigin.LastUpdatedTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"OriginTerminal_CreatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.modOrigin.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modOrigin.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.origin.Code}\r\n            newEntityName=\"OriginTerminalDetails_OriginHeader\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <TMDetailsKPILayout KPIList={this.state.originTerminalKPIList}> </TMDetailsKPILayout>\r\n        <ErrorBoundary>\r\n          <OriginDetails\r\n            origin={this.state.origin}\r\n            modOrigin={this.state.modOrigin}\r\n            validationErrors={this.state.validationErrors}\r\n            listOptions={listOptions}\r\n            onFieldChange={this.handleChange}\r\n            onAllTerminalsChange={this.handleAllTerminalsChange}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            attributeMetaDataList={this.state.attributeMetaDataList}\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            onAttributeDataChange={this.handleAttributeDataChange} \r\n          ></OriginDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.origin.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnOriginTerminal}\r\n            handleOperation={this.saveOriginTerminal}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(OriginDetailsComposite);\r\n\r\nOriginDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Select, Checkbox } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nAssociatedTerminals.propTypes = {\r\n  terminalList: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedTerminal: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  validationError: PropTypes.string,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCheckChange: PropTypes.func.isRequired,\r\n};\r\nAssociatedTerminals.defaultProps = {\r\n  terminalList: [],\r\n  selectedTerminal: [],\r\n  validationError: \"\",\r\n};\r\nexport function AssociatedTerminals({\r\n  terminalList,\r\n  selectedTerminal,\r\n  validationError,\r\n  onFieldChange,\r\n  onCheckChange,\r\n}) {\r\n  //console.log(\"component terminalList\", terminalList);\r\n  if (selectedTerminal === null) selectedTerminal = [];\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div style={{ width: \"80%\" }}>\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"TerminalCodes\")}\r\n              value={selectedTerminal}\r\n              multiple={true}\r\n              options={Utilities.transferListtoOptions(terminalList)}\r\n              onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n              error={t(validationError)}\r\n              disabled={terminalList.length === 0}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"ddlSelectAll\">\r\n            <Checkbox\r\n              label={t(\"Common_All\")}\r\n              checked={\r\n                Array.isArray(selectedTerminal) &&\r\n                selectedTerminal.length === terminalList.length\r\n              }\r\n              onChange={(checked) => onCheckChange(checked)}\r\n            ></Checkbox>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMDetailsKPILayout","_ref","KPIList","pageName","rowHeight","widgetHeight","isDraggable","isResizable","kpiDisplayTopBreakpoint","KPIDisplays","setKPIDisplays","useState","kpiDiv","React","hideKpis","currentScrollPos","window","pageYOffset","KPIDisplay","current","getBoundingClientRect","top","useEffect","addEventListener","removeEventListener","_jsx","ref","children","TranslationConsumer","t","style","marginTop","ErrorBoundary","KPIDashboardLayout","kpiList","defaultProps","OriginDetails","origin","modOrigin","validationErrors","listOptions","genericProps","onFieldChange","onAllTerminalsChange","onActiveStatusChange","isEnterpriseNode","modAttributeMetaDataList","onAttributeDataChange","attributeValidationErrors","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","_jsxs","className","Input","fluid","value","Code","indicator","disabled","onChange","data","label","error","reserveSpace","Name","Select","placeholder","TransportationTypes","options","Utilities","transportTypes","length","multiple","search","noResultsMessage","Address","associatedSupplier","Status","text","Remarks","AssociatedTerminals","terminalList","terminalCodes","selectedTerminal","TerminalCodes","onCheckChange","map","attribute","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","handleCellDataEdit","transportationType","OriginDetailsComposite","Component","constructor","arguments","state","lodash","emptyOrigin","originValidationDef","isReadyToRender","saveEnabled","associatedSuppliers","originTerminalKPIList","tempOrigin","showAuthenticationLayout","handleChange","propertyName","this","setState","undefined","terminalSelectionChange","console","log","handleReset","Object","keys","forEach","key","props","userDetails","EntityResult","IsEnterpriseNode","handleResetAttributeValidationError","localNodeAttribute","handleAuthenticationClose","saveOriginTerminal","tempOriginTerminal","attributeList","Attributes","createOriginTerminal","updateOriginTerminal","handleSave","validateSave","IsWebPortalUser","handleAllTerminalsChange","checked","terminalOptions","handleAttributeDataChange","matchedAttributes","matchedAttributesList","filter","modattribute","Array","isArray","DefaultValue","handleActiveStatusChange","getTerminalList","getShareholders","ShareholderList","getOriginTerminal","selectedRow","ShareholderCode","selectedShareholder","Common_Code","keyCode","KeyCodes","obj","ShareHolderCode","keyDataCode","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","FunctionsList","functionGroups","modify","fnOriginTerminal","getKPIList","getAssociatedSuppliers","ErrorList","catch","add","Table","item","push","componentWillReceiveProps","nextProps","OriginTerminal_Code","getAttributes","componentDidMount","IsArchived","selectedTerminals","attributesTerminalsList","existitem","originterminal","attributeMetaData","Attributevalue","originTerminalAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","originTerminalAttributeEntity","returnValue","values","every","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","customer","shareholder","originTerminalCode","view","fnKPIInformation","objKPIRequestData","PageName","kpiOriginTerminalDetail","TransportationType","InputParameters","ListKPIDetails","render","shareholders","popUpContents","fieldName","fieldValue","Date","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","CreatedTime","TMDetailsHeader","entityCode","newEntityName","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","validationError","display","justifyContent","width","Checkbox","margin","Popup","element","Icon","marginLeft","root","name","size","position","List","content","Button","onClick","float","handleAttributeDateValue","convertAttributeDatetoString","chars","split","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","Constants","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","toString","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","toLocaleString","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","getOptionsWithSelect","ddlOptions","selectOptionText","option","unshift","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}