{"version":3,"file":"static/js/1295.e2bda2c7.chunk.js","mappings":"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","sources":["Components/Composite/Common/TransactionSourceSummaryOperations.jsx","Components/UIBase/Details/ContractDetails.jsx","Components/Composite/Details/ContractDetailsComposite.jsx","Components/UIBase/Details/OrderDetails.jsx","Components/Composite/Details/OrderDetailsComposite.jsx","Components/Composite/Summary/ContractSummaryComposite.jsx","Components/Composite/Entity/ContractComposite.jsx","Components/Composite/Summary/OrderSummaryComposite.jsx","Components/Composite/Entity/OrderComposite.jsx","Components/Composite/Summary/RailDispatchSummaryComposite.jsx","Components/Composite/Entity/RailDispatchComposite.jsx","Components/Composite/Summary/TruckShipmentSummaryComposite.jsx","Components/Composite/Entity/TruckShipmentComposite.jsx","Components/UIBase/Common/TMTransactionFilters.jsx","Components/UIBase/Common/TMReportViewer.jsx","Components/UIBase/Details/ReportDetails.jsx","JS/DateFieldsInEntities.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { Divider, Button } from '@scuf/common';\r\n\r\nTransactionSourceSummaryOperations.propTypes = {\r\n    transportationType: PropTypes.string.isRequired,\r\n    handleShipmentByCompartmentPageClick: PropTypes.func.isRequired,\r\n    handleShipmentByProductPageClick: PropTypes.func.isRequired,\r\n    handleDispatchPageClick: PropTypes.func.isRequired,\r\n    isSBCEnable: PropTypes.bool.isRequired,\r\n    isSBPEnable: PropTypes.bool.isRequired,\r\n    isRailDispatchEnable: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default function TransactionSourceSummaryOperations({\r\n    transportationType,\r\n    handleShipmentByCompartmentPageClick,\r\n    handleShipmentByProductPageClick,\r\n    handleDispatchPageClick,\r\n    isSBCEnable,\r\n    isSBPEnable,\r\n    isRailDispatchEnable\r\n}) {\r\n    const [t] = useTranslation();\r\n    return (\r\n        <div className={\"ViewShipmentStatusDetails \"}>\r\n            <div className=\"ViewShipmentStatusHeader\">\r\n                <h4>{transportationType === \"ROAD\" ? t(\"ShipmentContract_CreateShipment\") : t(\"ContractInfo_CreateDispatch\")}</h4>\r\n            </div>\r\n            <Divider />\r\n            {\r\n                transportationType === \"ROAD\" ? (\r\n                    <div>\r\n                        <div style={{ marginLeft: \"10%\" }}>\r\n                            <Button\r\n                                type=\"secondary\"\r\n                                className=\"ViewShipmentButton\"\r\n                                disabled={!isSBCEnable}\r\n                                //className=\"ViewShipmentDetailsButton\"\r\n                                onClick={() => handleShipmentByCompartmentPageClick()}\r\n                            >{t(\"ContractInfo_ShipByComp\")}</Button>\r\n                        </div>\r\n                        <div style={{ marginLeft: \"10%\" }}>\r\n                            <Button\r\n                                type=\"secondary\"\r\n                                className=\"ViewShipmentButton\"\r\n                                disabled={!isSBPEnable}\r\n                                // className=\"ViewShipmentDetailsButton\"\r\n                                onClick={() => handleShipmentByProductPageClick()}\r\n                            >{t(\"ContractInfo_ShipByProduct\")}</Button>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div style={{ marginLeft: \"10%\" }}>\r\n                        <Button\r\n                            type=\"secondary\"\r\n                            className=\"ViewShipmentButton\"\r\n                            disabled={!isRailDispatchEnable}\r\n                            // className=\"ViewShipmentDetailsButton\"\r\n                            onClick={() => handleDispatchPageClick()}\r\n                        >{t(\"ContractInfo_CreateDispatch\")}</Button>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport {\r\n  Select,\r\n  Icon,\r\n  Input,\r\n  Checkbox,\r\n  DatePicker,\r\n  Accordion,\r\n  Button,\r\n} from \"@scuf/common\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getKeyByValue } from \"../../../JS/Utilities\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getOptionsWithSelect,\r\n  handleIsRequiredCompartmentCell,\r\n} from \"../../../JS/functionalUtilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\n\r\nContractDetails.propTypes = {\r\n  contract: PropTypes.object.isRequired,\r\n  modContract: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    contractTypeOptions: PropTypes.array,\r\n    unitOfWeight: PropTypes.array,\r\n    unitOfVolume: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    carrierOptions: PropTypes.array,\r\n    finishedProductOptions: PropTypes.array,\r\n    customerDestinationOptions: PropTypes.object,\r\n  }).isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  selectedPlanRow: PropTypes.array.isRequired,\r\n  modContractItems: PropTypes.array.isRequired,\r\n  handleRowSelectionChange: PropTypes.func.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n  handleAddPlan: PropTypes.func.isRequired,\r\n  handleDeletePlan: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  attributeValidationErrors: PropTypes.object.isRequired,\r\n  expandedRows: PropTypes.array.isRequired,\r\n  modAttributeMetaDataList: PropTypes.array.isRequired,\r\n  onAttributeDataChange: PropTypes.func.isRequired,\r\n  handleCompAttributeCellDataEdit: PropTypes.func.isRequired,\r\n  compartmentDetailsPageSize: PropTypes.number.isRequired,\r\n  isEnableForceClose: PropTypes.bool.isRequired,\r\n  handleForceClose: PropTypes.object.isRequired,\r\n  handleViewShipments: PropTypes.func.isRequired,\r\n  handleViewDispatch: PropTypes.func.isRequired,\r\n  isAutoGeneratedContractCode: PropTypes.bool.isRequired,\r\n};\r\n\r\nContractDetails.defaultProps = {\r\n  listOptions: {\r\n    terminalCodes: [],\r\n    contractTypeOptions: [],\r\n    carrierOptions: [],\r\n    unitOfVolume: [],\r\n    unitOfWeight: [],\r\n    finishedProductOptions: [],\r\n    customerDestinationOptions: {},\r\n  },\r\n  modContractItems: [],\r\n  isEnterpriseNode: false,\r\n};\r\nexport default function ContractDetails({\r\n  contract,\r\n  modContract,\r\n  onFieldChange,\r\n  validationErrors,\r\n  attributeValidationErrors,\r\n  onDateTextChange,\r\n  listOptions,\r\n  onAllTerminalsChange,\r\n  handleAddPlan,\r\n  handleDeletePlan,\r\n  selectedPlanRow,\r\n  handleRowSelectionChange,\r\n  handleCellDataEdit,\r\n  modContractItems,\r\n  selectedShareholder,\r\n  isEnterpriseNode,\r\n  onAttributeDataChange,\r\n  handleCompAttributeCellDataEdit,\r\n  modAttributeMetaDataList,\r\n  expandedRows,\r\n  toggleExpand,\r\n  compartmentDetailsPageSize,\r\n  isEnableForceClose,\r\n  handleForceClose,\r\n  handleViewShipments,\r\n  handleViewDispatch,\r\n  isAutoGeneratedContractCode,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  let customerOptions = [];\r\n  if (listOptions.customerDestinationOptions !== null && Object.keys(listOptions.customerDestinationOptions).length > 0) {\r\n     customerOptions = Utilities.transferListtoOptions(Object.keys(listOptions.customerDestinationOptions)\r\n  );\r\n  }\r\n  \r\n\r\n  // const [showShipments, setShowShipments] = useState(false);\r\n\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  const handleAttributeType = (data) => {\r\n    //debugger;\r\n    const attribute = data.rowData;\r\n    const handleAttributeDateValue = (dateval) => {\r\n      var chars = dateval.split(\"-\");\r\n      return new Date(chars[0], chars[1] - 1, chars[2]);\r\n    };\r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n      var Dateval = new Date(value);\r\n      value =\r\n        Dateval.getFullYear() +\r\n        \"-\" +\r\n        (\"0\" + (Dateval.getMonth() + 1)).slice(-2) +\r\n        \"-\" +\r\n        (\"0\" + Dateval.getDate()).slice(-2);\r\n      handleCompAttributeCellDataEdit(attribute, value);\r\n    };\r\n    try {\r\n      return attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.STRING.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.INT.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.FLOAT.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.LONG.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.DOUBLE.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n            attribute.AttributeValue === undefined ||\r\n            attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : attribute.AttributeValue.toLocaleString()\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.BOOL.toLowerCase() ? (\r\n        <Checkbox\r\n          checked={\r\n            attribute.AttributeValue.toString().toLowerCase() === \"true\"\r\n              ? true\r\n              : false\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n        ></Checkbox>\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.DATETIME.toLowerCase() ? (\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n            attribute.AttributeValue === undefined ||\r\n            attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : handleAttributeDateValue(attribute.AttributeValue)\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          showYearSelector=\"true\"\r\n          onChange={(value) => convertAttributeDatetoString(data, value)}\r\n          onTextChange={(value) => {\r\n            convertAttributeDatetoString(data, value);\r\n          }}\r\n          reserveSpace={false}\r\n        />\r\n      ) : null;\r\n    } catch (error) {\r\n      console.log(\"OrderDetails:Error occured on handleAttributeType\", error);\r\n    }\r\n  };\r\n\r\n  const handleIsRequiredCompAttributes = (data) => {\r\n    return data.rowData.IsMandatory ? (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n        <div class=\"ui red circular empty label badge  circle-padding\" />\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const expanderTemplate = (data) => {\r\n    //const open = expandedRows.includes(data.rowData);\r\n    const open =\r\n      expandedRows.findIndex((x) => x.SeqNumber === data.rowData.SeqNumber) >= 0\r\n        ? true\r\n        : false;\r\n    return (\r\n      <div\r\n        onClick={() => toggleExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        <span>{open ? t(\"Hide_Attributes\") : t(\"View_Attributes\")}</span>\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"caret-up\" : \"caret-down\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  function rowExpansionTemplate(data) {\r\n    return Array.isArray(data.AttributesforUI) &&\r\n      data.AttributesforUI.length > 0 ? (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable\r\n          data={data.AttributesforUI}\r\n          rows={compartmentDetailsPageSize}\r\n        >\r\n          {isEnterpriseNode ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"TerminalCode\"\r\n              field=\"TerminalCode\"\r\n              header={t(\"CompartmentTerminal\")}\r\n              editable={false}\r\n            ></DataTable.Column>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"AttributeName\"\r\n            header={t(\"CompartmentAttributeName\")}\r\n            renderer={handleIsRequiredCompAttributes}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            header={t(\"CompartmentAttributeValue\")}\r\n            renderer={handleAttributeType}\r\n          />\r\n          {Array.isArray(data.AttributesforUI) &&\r\n          data.AttributesforUI.length > compartmentDetailsPageSize ? (\r\n            <DataTable.Pagination />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </DataTable>\r\n      </div>\r\n    ) : (\r\n      <div className=\"compartmentIcon\">\r\n        <div className=\"gridButtonAlignLeft\">\r\n          {t(\"CustomerInventory_NoRecordsFound\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleTextEdit = (cellData) => {\r\n    let val = modContractItems[cellData.rowIndex][cellData.field];\r\n    if (cellData.field === \"Quantity\" && val !== null && val !== \"\")\r\n      val = val.toLocaleString();\r\n    return (\r\n      // <TranslationConsumer>\r\n      //   {(t) => (\r\n      <Input\r\n        fluid\r\n        value={val}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n        // error={t(validationErrors.Description)}\r\n        // disabled={cellData.field === \"Code\" ? true : false}\r\n      />\r\n      //   )}\r\n      // </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  const handleDateEdit = (cellData) => {\r\n    let val = modContractItems[cellData.rowIndex][cellData.field];\r\n    return (\r\n      // <TranslationConsumer>\r\n      //   {(t) => (\r\n      <DatePicker\r\n        fluid\r\n        value={val === null ? \"\" : new Date(val)}\r\n        //label={t(`ContractInfo_StartDate`)}\r\n        showYearSelector=\"true\"\r\n        // indicator=\"required\"\r\n        // disablePast={true}\r\n        //type=\"datetime\"\r\n        displayFormat={getCurrentDateFormat()}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        onTextChange={(value, error) => {\r\n          handleCellDataEdit(value, cellData);\r\n        }}\r\n        // error={t(validationErrors.StartDate)}\r\n        reserveSpace={false}\r\n      />\r\n      //   )}\r\n      // </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  const handleDropdownEdit = (cellData) => {\r\n    let dropDownOptions = [];\r\n    if (cellData.field === \"QuantityUOM\") {\r\n      dropDownOptions = [\r\n        ...listOptions.unitOfVolume,\r\n        ...listOptions.unitOfWeight,\r\n      ];\r\n    }\r\n    if (cellData.field === \"FinishedProductCode\")\r\n      dropDownOptions = listOptions.finishedProductOptions;\r\n\r\n    if (cellData.field === \"DestinationCode\") {\r\n      let destOptions =\r\n        listOptions.customerDestinationOptions[modContract.CustomerCode];\r\n      if (destOptions !== undefined && Array.isArray(destOptions)) {\r\n        dropDownOptions = Utilities.transferListtoOptions(destOptions);\r\n        dropDownOptions = getOptionsWithSelect(\r\n          dropDownOptions,\r\n          t(\"Common_Select\")\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        placeholder={t(\"Common_Select\")}\r\n        value={modContractItems[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownOptions}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        // indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"detailsContainer\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modContract.ContractCode}\r\n            label={t(\"ContractInfo_ContractCode\")}\r\n            indicator=\"required\"\r\n            disabled={\r\n              isAutoGeneratedContractCode ? true : contract.ContractCode !== \"\"\r\n            }\r\n            onChange={(data) => onFieldChange(\"ContractCode\", data)}\r\n            error={t(validationErrors.ContractCode)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(\"Customer_Code\")}\r\n            indicator=\"required\"\r\n            value={modContract.CustomerCode}\r\n            options={customerOptions}\r\n            onChange={(data) => onFieldChange(\"CustomerCode\", data)}\r\n            error={t(validationErrors.CustomerCode)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modContract.Description === null ? \"\" : modContract.Description\r\n            }\r\n            label={t(\"ContractInfo_Description\")}\r\n            onChange={(data) => onFieldChange(\"Description\", data)}\r\n            error={t(validationErrors.Description)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <DatePicker\r\n            fluid\r\n            value={\r\n              modContract.StartDate === null\r\n                ? \"\"\r\n                : Utilities.convertStringToCommonDateFormat(\r\n                    modContract.StartDate\r\n                  )\r\n            }\r\n            displayFormat={getCurrentDateFormat()}\r\n            label={t(`ContractInfo_StartDate`)}\r\n            showYearSelector=\"true\"\r\n            indicator=\"required\"\r\n            //type=\"datetime\"\r\n            disablePast={true}\r\n            onChange={(data) => onFieldChange(\"StartDate\", data)}\r\n            onTextChange={(value, error) => {\r\n              onDateTextChange(\"StartDate\", value, error);\r\n            }}\r\n            error={t(validationErrors.StartDate)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <DatePicker\r\n            fluid\r\n            value={\r\n              modContract.EndDate === null\r\n                ? \"\"\r\n                : Utilities.convertStringToCommonDateFormat(modContract.EndDate)\r\n            }\r\n            displayFormat={getCurrentDateFormat()}\r\n            label={t(`ContractInfo_EndDate`)}\r\n            showYearSelector=\"true\"\r\n            indicator=\"required\"\r\n            //type=\"datetime\"\r\n            disablePast={true}\r\n            onChange={(data) => onFieldChange(\"EndDate\", data)}\r\n            onTextChange={(value, error) => {\r\n              onDateTextChange(\"EndDate\", value, error);\r\n            }}\r\n            error={t(validationErrors.EndDate)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        {/* <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(\"ContractInfo_ContractType\")}\r\n            value={getKeyByValue(\r\n              Constants.contractType,\r\n              modContract.ContractType\r\n            )}\r\n            options={listOptions.contractTypeOptions}\r\n            disabled={true}\r\n          // onChange={(data) => onFieldChange(\"Active\", data)}\r\n          />\r\n        </div> */}\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              getKeyByValue(Constants.contractStatus, modContract.Status) ===\r\n              undefined\r\n                ? \"\"\r\n                : getKeyByValue(Constants.contractStatus, modContract.Status)\r\n            }\r\n            label={t(\"ContractInfo_Status\")}\r\n            disabled={true}\r\n            //onChange={(data) => onFieldChange(\"Description\", data)}\r\n            //error={t(validationErrors.Description)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        {/* <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_All\")}\r\n            //className=\"maxHeight\"\r\n            // style={{ maxHeight: \"20px!important\" }}\r\n            label={t(\"ContractInfo_AssociatedCarrier\")}\r\n            value={modContract.CarrierCollection}\r\n            options={listOptions.carrierOptions}\r\n            multiple={true}\r\n            onChange={(data) => onFieldChange(\"CarrierCollection\", data)}\r\n            error={t(validationErrors.CarrierCollection)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n            // onChange={(data) => onFieldChange(\"Active\", data)}\r\n          />\r\n        </div> */}\r\n\r\n        {isEnterpriseNode ? (\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <AssociatedTerminals\r\n              terminalList={listOptions.terminalCodes}\r\n              selectedTerminal={modContract.TerminalCodes}\r\n              error={t(validationErrors.TerminalCodes)}\r\n              onFieldChange={onFieldChange}\r\n              onCheckChange={onAllTerminalsChange}\r\n            ></AssociatedTerminals>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(\"ShipmentContract_Status\")}\r\n            value={modContract.Active}\r\n            options={[\r\n              { text: t(\"ViewShipment_Ok\"), value: true },\r\n              { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n            ]}\r\n            onChange={(data) => onFieldChange(\"Active\", data)}\r\n            disabled={contract.ContractCode === \"\" ? true : false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modContract.Remarks === null ? \"\" : modContract.Remarks}\r\n            label={t(\"ShipmentOrder_Remarks\")}\r\n            onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n            indicator={modContract.Active !== contract.Active ? \"required\" : \"\"}\r\n            error={t(validationErrors.Remarks)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-12 col-lg-12\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_All\")}\r\n            //className=\"maxHeight\"\r\n            // style={{ maxHeight: \"20px!important\" }}\r\n            label={t(\"ContractInfo_AssociatedCarrier\")}\r\n            value={modContract.CarrierCollection}\r\n            options={listOptions.carrierOptions}\r\n            multiple={true}\r\n            onChange={(data) => onFieldChange(\"CarrierCollection\", data)}\r\n            error={t(validationErrors.CarrierCollection)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n            // onChange={(data) => onFieldChange(\"Active\", data)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {modAttributeMetaDataList.length > 0\r\n        ? modAttributeMetaDataList.map((attire) => (\r\n            <ErrorBoundary>\r\n              <Accordion>\r\n                <Accordion.Content\r\n                  className=\"attributeAccordian\"\r\n                  title={\r\n                    isEnterpriseNode\r\n                      ? attire.TerminalCode + \" - \" + t(\"Attributes_Header\")\r\n                      : t(\"Attributes_Header\")\r\n                  }\r\n                >\r\n                  <AttributeDetails\r\n                    selectedAttributeList={attire.attributeMetaDataList}\r\n                    handleCellDataEdit={onAttributeDataChange}\r\n                    attributeValidationErrors={handleValidationErrorFilter(\r\n                      attributeValidationErrors,\r\n                      attire.TerminalCode\r\n                    )}\r\n                  ></AttributeDetails>\r\n                </Accordion.Content>\r\n              </Accordion>\r\n            </ErrorBoundary>\r\n          ))\r\n        : null}\r\n      <div className=\"row compartmentRow\">\r\n        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n          <h4>{t(\"ContractInfo_Details\")}</h4>\r\n        </div>\r\n        <div className=\"col col-md-4 col-lg-3 col-xl-3\">\r\n          <div className=\"compartmentIconContainer\">\r\n            <div onClick={handleAddPlan} className=\"compartmentIcon\">\r\n              <div>\r\n                <Icon root=\"common\" name=\"badge-plus\" size=\"medium\" />\r\n              </div>\r\n              <div className=\"margin_l10\">\r\n                <h5 className=\"font14\">{t(\"TrailerInfo_Add\")}</h5>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              onClick={handleDeletePlan}\r\n              className=\"compartmentIcon margin_l30\"\r\n            >\r\n              <div>\r\n                <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n              </div>\r\n              <div className=\"margin_l10\">\r\n                <h5 className=\"font14\">{t(\"TrailerInfo_Delete\")}</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row marginRightZero tableScroll\">\r\n        <div className=\"col-12 detailsTable\">\r\n          <DataTable\r\n            data={modContractItems}\r\n            rowExpansionTemplate={rowExpansionTemplate}\r\n            expandedRows={expandedRows}\r\n            selectionMode=\"multiple\"\r\n            selection={selectedPlanRow}\r\n            onSelectionChange={handleRowSelectionChange}\r\n            scrollable={true}\r\n            scrollHeight=\"320px\"\r\n          >\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"FinishedProductCode\"\r\n              field=\"FinishedProductCode\"\r\n              header={handleIsRequiredCompartmentCell(\r\n                t(\"ContractInfo_Product\")\r\n              )}\r\n              // rowHeader={true}\r\n              editable={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleDropdownEdit}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"DestinationCode\"\r\n              field=\"DestinationCode\"\r\n              header={t(\"ContractInfo_Destination\")}\r\n              // rowHeader={true}\r\n              editable={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleDropdownEdit}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"StartDate\"\r\n              field=\"StartDate\"\r\n              header={t(\"ContractInfo_StartDate\")}\r\n              // rowHeader={true}\r\n              editable={true}\r\n              editFieldType=\"text\"\r\n              renderer={(cellData) =>\r\n                cellData.value === null\r\n                  ? \"\"\r\n                  : new Date(cellData.value).toLocaleDateString()\r\n              }\r\n              customEditRenderer={handleDateEdit}\r\n            ></DataTable.Column>\r\n\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"EndDate\"\r\n              field=\"EndDate\"\r\n              header={t(\"ContractInfo_EndDate\")}\r\n              // rowHeader={true}\r\n              editable={true}\r\n              editFieldType=\"text\"\r\n              renderer={(cellData) =>\r\n                cellData.value === null\r\n                  ? \"\"\r\n                  : new Date(cellData.value).toLocaleDateString()\r\n              }\r\n              // renderer={(cellData) =>\r\n              //   cellData.value === null\r\n              //     ? \"\"\r\n              //     : new Date(cellData.value).toLocaleDateString() +\r\n              //       \" \" +\r\n              //       new Date(cellData.value).toLocaleTimeString()\r\n              // }\r\n              customEditRenderer={handleDateEdit}\r\n            ></DataTable.Column>\r\n\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"Quantity\"\r\n              field=\"Quantity\"\r\n              header={handleIsRequiredCompartmentCell(\r\n                t(\"ContractInfo_Quantity\")\r\n              )}\r\n              // rowHeader={true}\r\n              editable={true}\r\n              editFieldType=\"text\"\r\n              renderer={(cellData) =>\r\n                cellData.value === null ? \"\" : cellData.value.toLocaleString()\r\n              }\r\n              customEditRenderer={handleTextEdit}\r\n            ></DataTable.Column>\r\n\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"QuantityUOM\"\r\n              field=\"QuantityUOM\"\r\n              header={handleIsRequiredCompartmentCell(t(\"ShipmentOrder_UOM\"))}\r\n              //rowHeader={true}\r\n              editable={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleDropdownEdit}\r\n            ></DataTable.Column>\r\n\r\n            <DataTable.Column\r\n              className=\"compColHeight disabledColumn colminWidth\"\r\n              key=\"BlockedQuantity\"\r\n              field=\"BlockedQuantity\"\r\n              header={t(\"ContractInfo_BlockedQuantity\")}\r\n              // rowHeader={true}\r\n              renderer={(cellData) =>\r\n                cellData.value === null ? \"0\" : cellData.value.toLocaleString()\r\n              }\r\n              editFieldType=\"text\"\r\n            ></DataTable.Column>\r\n\r\n            <DataTable.Column\r\n              className=\"compColHeight disabledColumn colminWidth\"\r\n              key=\"LoadedQuantity\"\r\n              field=\"LoadedQuantity\"\r\n              header={t(\"ContractInfo_LoadedQty\")}\r\n              // rowHeader={true}\r\n              renderer={(cellData) =>\r\n                cellData.value === null ? \"0\" : cellData.value.toLocaleString()\r\n              }\r\n              editFieldType=\"text\"\r\n            ></DataTable.Column>\r\n\r\n            <DataTable.Column\r\n              className=\"compColHeight disabledColumn colminWidth\"\r\n              key=\"ReaminingQuantity\"\r\n              field=\"RemainingQuantity\"\r\n              header={t(\"ContractInfo_RemQuantity\")}\r\n              // rowHeader={true}\r\n              renderer={(cellData) =>\r\n                cellData.value === null ? \"0\" : cellData.value.toLocaleString()\r\n              }\r\n              editFieldType=\"text\"\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"expandedColumn\"\r\n              initialWidth=\"175px\"\r\n              renderer={expanderTemplate}\r\n            />\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n\r\n      {/* {contract.ContractCode !== \"\" &&\r\n        contract.TransportationType === Constants.TransportationType.ROAD ? (\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <Accordion>\r\n              <Accordion.Content\r\n                title={t(\"ShipmentOrder_ViewShipments\")}\r\n                active={showShipments}\r\n                onClick={() => setShowShipments(!showShipments)}\r\n              >\r\n                <div className=\"borderTable\">\r\n                  <TruckShipmentProject\r\n                    shipmentSource={Constants.shipmentFrom.Contract}\r\n                    shipmentSourceCode={modContract.ContractCode}\r\n                      selectedShareholder={selectedShareholder}\r\n                      shipmentSourceCompartmentItems={modContractItems}\r\n                      shipmentSourceDetails={modContract}\r\n                  />\r\n                </div>\r\n              </Accordion.Content>\r\n            </Accordion>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {contract.ContractCode !== \"\" &&\r\n        contract.TransportationType === Constants.TransportationType.RAIL ? (\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <Accordion>\r\n              <Accordion.Content\r\n                title={t(\"ViewRailDispatchList_RailShipments\")}\r\n                active={showShipments}\r\n                onClick={() => setShowShipments(!showShipments)}\r\n              >\r\n                <div className=\"borderTable\">\r\n                  <RailDispatchProject\r\n                    shipmentSource={2}\r\n                    shipmentSourceCode={modContract.ContractCode}\r\n                      selectedShareholder={selectedShareholder}\r\n                      shipmentSourceCompartmentItems={modContractItems}\r\n                      shipmentSourceDetails={modContract}\r\n                  />\r\n                </div>\r\n              </Accordion.Content>\r\n            </Accordion>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )} */}\r\n\r\n      <div className=\"row\">\r\n        <div\r\n          className=\"col col-md-8 col-lg-9 col col-xl-12\"\r\n          style={{ textAlign: \"right\" }}\r\n        >\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={handleForceClose}\r\n            disabled={!isEnableForceClose}\r\n            content={t(\"ShipmentOrder_BtnForceClose\")}\r\n          ></Button>\r\n          {contract.ContractCode !== \"\" &&\r\n          contract.TransportationType === Constants.TransportationType.ROAD ? (\r\n            <Button\r\n              content={t(\"ShipmentOrder_ViewShipments\")}\r\n              onClick={handleViewShipments}\r\n            ></Button>\r\n          ) : null}\r\n          {contract.ContractCode !== \"\" &&\r\n          contract.TransportationType === Constants.TransportationType.RAIL ? (\r\n            <Button\r\n              content={t(\"DispatchContract_ViewDispatch\")}\r\n              onClick={handleViewDispatch}\r\n            ></Button>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport {\r\n  contractAttributeEntity,\r\n  contractItemAttributeEntity,\r\n} from \"../../../JS/AttributeEntity\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { emptyContract } from \"../../../JS/DefaultEntities\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport {\r\n  functionGroups,\r\n  fnContract,\r\n  fnContractForceClose,\r\n  fnKPIInformation,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { contractValidationDef } from \"../../../JS/ValidationDef\";\r\nimport ContractDetails from \"../../UIBase/Details/ContractDetails\";\r\nimport { contractPlanValidationDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { toast } from \"react-toastify\";\r\nimport TruckShipmentProject from \"../../Composite/Entity/TruckShipmentComposite\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button, Modal } from \"@scuf/common\";\r\nimport RailDispatchProject from \"../../Composite/Entity/RailDispatchComposite\";\r\nimport * as DateFieldsInEntities from \"../../../JS/DateFieldsInEntities\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { kpiContractDetail } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nclass ContractDetailsComposite extends Component {\r\n  state = {\r\n    contract: {},\r\n    modContract: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      contractValidationDef\r\n    ),\r\n    modContractItems: [],\r\n    terminalOptions: [],\r\n    volumeUOMOptions: [],\r\n    weightUOMOptions: [],\r\n    carrierOptions: [],\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    selectedPlanRow: [],\r\n    finishedProductOptions: [],\r\n    customerDestinationOptions: {},\r\n    attributeMetaDataList: [],\r\n    compartmentAttributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    expandedRows: [],\r\n    isEnableForceClose: false,\r\n    isShowTruckShipment: false,\r\n    isShowBackButton: false,\r\n    isShowRailDispatch: false,\r\n    isAutoGeneratedContractCode: false,\r\n    isAllowtoUpdate: false,\r\n    updatedContractStatus: \"\",\r\n    contractKPIList: [],\r\n\r\n    scheduledContractUpdate: false,\r\n    showAuthenticationLayout: false,\r\n    showForceCloseAuthenticationLayout: false,\r\n    tempContract: {},\r\n    tempContactStatusObj: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n    let isNewContract = false;\r\n    if (this.props.selectedRow.Common_Code === undefined) isNewContract = true;\r\n    //this.getContract(isNewContract);\r\n    this.getAttributes(isNewContract);\r\n    this.getTerminalList();\r\n    this.getUOMList();\r\n    this.getCarrierList();\r\n    this.getFinishedProductList();\r\n    this.getCustomerDestinationList();\r\n  }\r\n\r\n  getAttributes(isNewContract) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [contractAttributeEntity, contractItemAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.CONTRACT\r\n              ),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.CONTRACT\r\n                ),\r\n              compartmentAttributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.CONTRACT_ITEM\r\n              ),\r\n            },\r\n            () => this.getContract(isNewContract)\r\n          );\r\n        } else {\r\n          console.log(\"Failed to get Attributes\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Attributes:\", error);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.contract.ContractCode !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getContract(true);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"ContractDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getCustomerDestinationList() {\r\n    axios(\r\n      RestAPIs.GetCustomerDestinations +\r\n      \"?ShareholderCode=\" +\r\n      this.props.selectedShareholder +\r\n      \"&TransportationType=\" +\r\n      this.props.transportationType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        // console.log(response);\r\n\r\n        if (result.IsSuccess === true) {\r\n          if (Array.isArray(result.EntityResult)) {\r\n            let shareholderCustomers = result.EntityResult.filter(\r\n              (shareholderCust) =>\r\n                shareholderCust.ShareholderCode ===\r\n                this.props.selectedShareholder\r\n            );\r\n            if (shareholderCustomers.length > 0) {\r\n              let customerDestinationOptions =\r\n                shareholderCustomers[0].CustomerDestinationsList;\r\n              this.setState({ customerDestinationOptions });\r\n            } else {\r\n              console.log(\"no customers identified for shareholder\");\r\n            }\r\n          } else {\r\n            console.log(\"customerdestinations not identified for shareholder\");\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Customer List:\", error);\r\n      });\r\n  }\r\n\r\n  getFinishedProductList() {\r\n    axios(\r\n      RestAPIs.GetFinishedProductCodes +\r\n      \"?ShareholderCode=\" +\r\n      this.props.selectedShareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    ).then((response) => {\r\n      var result = response.data;\r\n      if (result.IsSuccess === true) {\r\n        if (\r\n          Array.isArray(result.EntityResult) &&\r\n          result.EntityResult.length > 0\r\n        ) {\r\n          let finishedProductOptions = Utilities.transferListtoOptions(\r\n            result.EntityResult\r\n          );\r\n          this.setState({ finishedProductOptions });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getUOMList() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        // console.log(response);\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let weightUOMs = result.EntityResult.MASS;\r\n            let weightUOMOptions = [];\r\n            weightUOMs.forEach((weightOption) => {\r\n              weightUOMOptions.push({\r\n                text: weightOption,\r\n                value: weightOption,\r\n              });\r\n            });\r\n\r\n            let volumeUOMs = result.EntityResult.VOLUME;\r\n            let volumeUOMOptions = [];\r\n            volumeUOMs.forEach((volumeOption) => {\r\n              volumeUOMOptions.push({\r\n                text: volumeOption,\r\n                value: volumeOption,\r\n              });\r\n            });\r\n\r\n            // let lengthUOMs = result.EntityResult.LENGTH;\r\n            // let lengthUOMOptions = [];\r\n            // lengthUOMs.forEach((lengthOption) => {\r\n            //   lengthUOMOptions.push({\r\n            //     text: lengthOption,\r\n            //     value: lengthOption,\r\n            //   });\r\n            // });\r\n\r\n            this.setState({\r\n              volumeUOMOptions,\r\n              weightUOMOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getUOM:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getUOM:\", error);\r\n      });\r\n  }\r\n\r\n  getTerminalList() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetTerminals,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [this.props.selectedShareholder],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            Array.isArray(result.EntityResult) &&\r\n            result.EntityResult.length > 0\r\n          )\r\n            this.setState({ terminalOptions: result.EntityResult });\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(\"Contract Composite:Error occured on getTerminalsList\", err);\r\n    }\r\n  }\r\n  getContract(isNewContract) {\r\n    if (isNewContract) {\r\n      //this.terminalOptions = [];\r\n      emptyContract.StartDate = new Date();\r\n      //emptyContract.EndDate = new Date();\r\n      emptyContract.TerminalCodes =\r\n        this.state.terminalOptions.length === 1\r\n          ? [...this.state.terminalOptions]\r\n          : [];\r\n      this.handleResetAttributeValidationError();\r\n      this.setState(\r\n        {\r\n          contract: lodash.cloneDeep(emptyContract),\r\n          modContract: this.GetAutoGeneratedContractCode(\r\n            lodash.cloneDeep(emptyContract)\r\n          ),\r\n          modContractItems: [],\r\n          isReadyToRender: true,\r\n          modAttributeMetaDataList: [],\r\n          contractKPIList: [],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnContract\r\n          ),\r\n          isEnableForceClose: false,\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode === false)\r\n            this.localNodeAttribute();\r\n        }\r\n      );\r\n\r\n      return;\r\n    }\r\n\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.contractCode,\r\n        value:\r\n          this.props.selectedRow.Common_Code === undefined\r\n            ? this.state.modContract.ContractCode\r\n            : this.props.selectedRow.Common_Code,\r\n      },\r\n    ];\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.contractCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetContract,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n\r\n        if (result.IsSuccess === true) {\r\n          let modContractItems = [];\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult.ContractItems !== null &&\r\n            result.EntityResult.ContractItems.length > 0\r\n          ) {\r\n            modContractItems = Utilities.addSeqNumberToListObject(\r\n              lodash.cloneDeep(result.EntityResult.ContractItems)\r\n            );\r\n          }\r\n          var foceCloseStatus =\r\n            Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnContractForceClose\r\n            ) && result.EntityResult.Status !== Constants.contractStatus.CLOSED;\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              contract: lodash.cloneDeep(result.EntityResult),\r\n              modContract: lodash.cloneDeep(result.EntityResult),\r\n              modContractItems: lodash.cloneDeep(modContractItems),\r\n              isEnableForceClose: foceCloseStatus,\r\n              updatedContractStatus: result.EntityResult.Status,\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnContract\r\n              ) && result.EntityResult.Status!== Constants.contractStatus.CLOSED,\r\n            },\r\n            () => {\r\n              this.getKPIList(this.props.selectedShareholder, result.EntityResult.ContractCode)\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            modContract: lodash.cloneDeep(emptyContract),\r\n            contract: lodash.cloneDeep(emptyContract),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetContract:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Contract:\", error);\r\n      });\r\n  }\r\n\r\n  GetAutoGeneratedContractCode(contract) {\r\n    let modContract = contract;\r\n    axios(\r\n      RestAPIs.GetAutoGeneratedContractCode,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult !== undefined &&\r\n            result.EntityResult !== \"\"\r\n          ) {\r\n            modContract.ContractCode = result.EntityResult;\r\n            this.setState({ isAutoGeneratedContractCode: true });\r\n          } else {\r\n            this.setState({ isAutoGeneratedContractCode: false });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting AutoGeneratedShipmentCode:\", error);\r\n      });\r\n    return modContract;\r\n  }\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(attributeMetaDataList),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ContractDetailsComposite:Error occured on handleResetAttributeValidationError\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modAttributeMetaDataList = [];\r\n\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      var modContract = lodash.cloneDeep(this.state.modContract);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        });\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.forEach(function (attributeMetaData) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              if (\r\n                modContract.Attributes !== undefined &&\r\n                modContract.Attributes !== null &&\r\n                Array.isArray(modContract.Attributes)\r\n              ) {\r\n                var Attributevalue = modContract.Attributes.find(\r\n                  (contractAttribute) => {\r\n                    return contractAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n              }\r\n\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n\r\n      modAttributeMetaDataList = [];\r\n      modAttributeMetaDataList = attributesTerminalsList;\r\n      modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modAttributeMetaDataList\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n\r\n      this.formCompartmentAttributes(selectedTerminals);\r\n\r\n      this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ContractDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  formCompartmentAttributes(selectedTerminals) {\r\n    try {\r\n      let attributes = lodash.cloneDeep(\r\n        this.state.compartmentAttributeMetaDataList\r\n      );\r\n\r\n      attributes = attributes.filter(function (attTerminal) {\r\n        return selectedTerminals.some(function (selTerminal) {\r\n          return attTerminal.TerminalCode === selTerminal;\r\n        });\r\n      });\r\n      let modContractItems = lodash.cloneDeep(this.state.modContractItems);\r\n\r\n      modContractItems.forEach((comp) => {\r\n        let compAttributes = [];\r\n        attributes.forEach((att) => {\r\n          att.attributeMetaDataList.forEach((attribute) => {\r\n            compAttributes.push({\r\n              AttributeCode: attribute.Code,\r\n              AttributeName: attribute.DisplayName,\r\n              AttributeValue: attribute.DefaultValue,\r\n              TerminalCode: attribute.TerminalCode,\r\n              IsMandatory: attribute.IsMandatory,\r\n              DataType: attribute.DataType,\r\n              IsReadonly: attribute.IsReadonly,\r\n              MinValue: attribute.MinValue,\r\n              MaxValue: attribute.MaxValue,\r\n              ValidationFormat: attribute.ValidationFormat,\r\n              compSequenceNo: \"\",\r\n            });\r\n          });\r\n        });\r\n        let attributesforNewComp = lodash.cloneDeep(compAttributes);\r\n\r\n        if (\r\n          comp.Code === null &&\r\n          (comp.AttributesforUI === null || comp.AttributesforUI === undefined)\r\n        ) {\r\n          comp.AttributesforUI = [];\r\n          attributesforNewComp.forEach((assignedAttributes) => {\r\n            assignedAttributes.compSequenceNo = comp.SeqNumber;\r\n            comp.AttributesforUI.push(assignedAttributes);\r\n          });\r\n        } else {\r\n          if (\r\n            comp.AttributesforUI !== null &&\r\n            comp.AttributesforUI !== undefined\r\n          ) {\r\n            comp.AttributesforUI = comp.AttributesforUI.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n\r\n            compAttributes = compAttributes.filter(function (attTerminal) {\r\n              return !comp.AttributesforUI.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal.TerminalCode;\r\n              });\r\n            });\r\n          } else comp.AttributesforUI = [];\r\n\r\n          let tempCompAttributes = lodash.cloneDeep(compAttributes);\r\n          if (\r\n            Array.isArray(comp.Attributes) &&\r\n            comp.Attributes !== null &&\r\n            comp.Attributes !== undefined &&\r\n            comp.Attributes.length > 0\r\n          ) {\r\n            let selectedTerminalAttributes = comp.Attributes.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n            selectedTerminalAttributes.forEach((att) => {\r\n              att.ListOfAttributeData.forEach((attData) => {\r\n                let tempAttIndex = tempCompAttributes.findIndex(\r\n                  (item) =>\r\n                    item.TerminalCode === att.TerminalCode &&\r\n                    item.AttributeCode === attData.AttributeCode\r\n                );\r\n                if (tempAttIndex >= 0)\r\n                  tempCompAttributes[tempAttIndex].AttributeValue =\r\n                    attData.AttributeValue;\r\n              });\r\n            });\r\n            tempCompAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo = comp.SeqNumber;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          } else {\r\n            compAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo = comp.SeqNumber;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          }\r\n        }\r\n        this.toggleExpand(comp, true, true);\r\n        if (comp.AttributesforUI !== undefined && comp.AttributesforUI != null)\r\n          comp.AttributesforUI = Utilities.compartmentAttributesConvertoDecimal(\r\n            comp.AttributesforUI\r\n          );\r\n        comp.AttributesforUI = Utilities.addSeqNumberToListObject(\r\n          comp.AttributesforUI\r\n        );\r\n      });\r\n      this.setState({ modContractItems });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ContractDetailsComposite:Error in forming Compartment Attributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  fillAttributeDetails(modContract, attributeList) {\r\n    try {\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modContract.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n\r\n      // For Compartment Attributes\r\n      modContract.ContractItems.forEach((comp) => {\r\n        if (comp.AttributesforUI !== undefined && comp.AttributesforUI != null)\r\n          comp.AttributesforUI =\r\n            Utilities.compartmentAttributesDatatypeConversion(\r\n              comp.AttributesforUI\r\n            );\r\n        let selectedTerminals = [];\r\n        if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n          selectedTerminals = lodash.cloneDeep(modContract.TerminalCodes);\r\n        else {\r\n          var compAttributeMetaDataList = lodash.cloneDeep(\r\n            this.state.compartmentAttributeMetaDataList\r\n          );\r\n          if (compAttributeMetaDataList.length > 0)\r\n            selectedTerminals = [compAttributeMetaDataList[0].TerminalCode];\r\n        }\r\n        let terminalAttributes = [];\r\n        comp.Attributes = [];\r\n        selectedTerminals.forEach((terminal) => {\r\n          if (\r\n            comp.AttributesforUI !== null &&\r\n            comp.AttributesforUI !== undefined\r\n          )\r\n            terminalAttributes = comp.AttributesforUI.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return attTerminal.TerminalCode === terminal;\r\n            });\r\n\r\n          let attribute = {\r\n            ListOfAttributeData: [],\r\n          };\r\n\r\n          attribute.TerminalCode = terminal;\r\n          terminalAttributes.forEach((termAtt) => {\r\n            if (termAtt.AttributeValue !== \"\" || termAtt.IsMandatory === true)\r\n              attribute.ListOfAttributeData.push({\r\n                AttributeCode: termAtt.AttributeCode,\r\n                AttributeValue: termAtt.AttributeValue,\r\n              });\r\n            //})\r\n            //comp.Attributes.push(attribute);\r\n          });\r\n          if (\r\n            attribute.ListOfAttributeData !== null &&\r\n            attribute.ListOfAttributeData !== undefined &&\r\n            attribute.ListOfAttributeData.length > 0\r\n          )\r\n            comp.Attributes.push(attribute);\r\n        });\r\n      });\r\n      return modContract;\r\n    } catch (error) {\r\n      console.log(\r\n        \"ContractDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList) &&\r\n        attributeMetaDataList.length > 0\r\n      )\r\n        this.terminalSelectionChange([attributeMetaDataList[0].TerminalCode]);\r\n      else {\r\n        var compAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.compartmentAttributeMetaDataList\r\n        );\r\n        if (\r\n          Array.isArray(compAttributeMetaDataList) &&\r\n          compAttributeMetaDataList.length > 0\r\n        )\r\n          this.formCompartmentAttributes([\r\n            compAttributeMetaDataList[0].TerminalCode,\r\n          ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"ContractDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors, modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ContractDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCompAttributeCellDataEdit = (compAttribute, value) => {\r\n    let modContractItems = lodash.cloneDeep(this.state.modContractItems);\r\n    let compIndex = modContractItems.findIndex(\r\n      (item) => item.SeqNumber === compAttribute.rowData.compSequenceNo\r\n    );\r\n    if (compIndex >= 0)\r\n      modContractItems[compIndex].AttributesforUI[\r\n        // compAttribute.rowIndex\r\n        compAttribute.rowData.SeqNumber - 1\r\n      ].AttributeValue = value;\r\n    this.setState({ modContractItems });\r\n    if (compIndex >= 0)\r\n      this.toggleExpand(modContractItems[compIndex], true, true);\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      let modContract = lodash.cloneDeep(this.state.modContract);\r\n      modContract[propertyName] = data;\r\n      //this.setState({ modContract });\r\n\r\n      if (propertyName === \"CustomerCode\") {\r\n        let destOptions = this.state.customerDestinationOptions[data];\r\n        const modContractItems = lodash.cloneDeep(this.state.modContractItems);\r\n        if (modContractItems.length > 0) {\r\n          if (destOptions !== undefined && Array.isArray(destOptions)) {\r\n            if (destOptions.length === 1) {\r\n              modContractItems.forEach((plan) => {\r\n                plan.DestinationCode = destOptions[0];\r\n              });\r\n            }\r\n            if (destOptions.length === 0 || destOptions.length > 1)\r\n              modContractItems.forEach((plan) => {\r\n                plan.DestinationCode = null;\r\n              });\r\n\r\n            this.setState({ modContractItems });\r\n          }\r\n        }\r\n      }\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      if (modContract.Active === this.state.contract.Active) {\r\n        if (\r\n          this.state.contract.Remarks === modContract.Remarks ||\r\n          modContract.Remarks === \"\"\r\n        ) {\r\n          validationErrors.Remarks = \"\";\r\n        }\r\n        // if (modContract.Remarks === \"\")\r\n        //   modContract.Remarks = this.state.contract.Remarks;\r\n      }\r\n      if (propertyName === \"Active\") {\r\n        if (modContract.Active !== this.state.contract.Active) {\r\n          modContract.Remarks = \"\";\r\n        }\r\n      }\r\n      if (contractValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          contractValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n      this.setState({ validationErrors, modContract }, () => {\r\n        if (propertyName === \"TerminalCodes\") {\r\n          this.terminalSelectionChange(data);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ContractDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleRowSelectionChange = (planRow) => {\r\n    this.setState({ selectedPlanRow: planRow });\r\n  };\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    let modContractItems = lodash.cloneDeep(this.state.modContractItems);\r\n\r\n    modContractItems[cellData.rowIndex][cellData.field] = newVal;\r\n\r\n    this.setState({ modContractItems });\r\n  };\r\n\r\n  handleAddPlan = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        let newPlan = {\r\n          // primaryKey: null,\r\n          Attributes: null,\r\n          BlockedQuantity: null,\r\n          ContractCode: null,\r\n          CustomerCode: null,\r\n          DestinationCode: null,\r\n          EndDate: null,\r\n          FinishedProductCode: null,\r\n          FinishdedProductType: null,\r\n          ItemCode: null,\r\n          LoadedQuantity: null,\r\n          Quantity: null,\r\n          QuantityUOM: null,\r\n          RemainingQuantity: null,\r\n          ShareholderCode: null,\r\n          StartDate: null,\r\n        };\r\n        // const { modTrailer } = { ...this.state };\r\n        let modContractItems = lodash.cloneDeep(this.state.modContractItems);\r\n        let destOptions =\r\n          this.state.customerDestinationOptions[\r\n          this.state.modContract.CustomerCode\r\n          ];\r\n        if (\r\n          destOptions !== undefined &&\r\n          Array.isArray(destOptions) &&\r\n          destOptions.length === 1\r\n        ) {\r\n          newPlan.DestinationCode = destOptions[0];\r\n        }\r\n        // newComp.Code = Utilities.generateCompartmentCode(\r\n        //   modTrailer.Compartments\r\n        // ).toString();\r\n        newPlan.SeqNumber =\r\n          Utilities.getMaxSeqNumberfromListObject(modContractItems);\r\n\r\n        modContractItems.push(newPlan);\r\n\r\n        this.setState(\r\n          {\r\n            modContractItems,\r\n            selectedPlanRow: [],\r\n          },\r\n          () => {\r\n            if (\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode === false\r\n            ) {\r\n              var attributeMetaDataList = lodash.cloneDeep(\r\n                this.state.compartmentAttributeMetaDataList\r\n              );\r\n              if (attributeMetaDataList.length > 0)\r\n                this.formCompartmentAttributes([\r\n                  attributeMetaDataList[0].TerminalCode,\r\n                ]);\r\n            } else\r\n              this.formCompartmentAttributes(\r\n                this.state.modContract.TerminalCodes\r\n              );\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.log(\r\n          \"ContractDetailsComposite:Error occured on handleAddCompartment\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDeletePlan = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedPlanRow != null &&\r\n          this.state.selectedPlanRow.length > 0\r\n        ) {\r\n          if (this.state.modContractItems.length > 0) {\r\n            let modContractItems = lodash.cloneDeep(\r\n              this.state.modContractItems\r\n            );\r\n\r\n            this.state.selectedPlanRow.forEach((obj, index) => {\r\n              modContractItems = modContractItems.filter((plan, cindex) => {\r\n                return plan.SeqNumber !== obj.SeqNumber;\r\n              });\r\n            });\r\n\r\n            this.setState({ modContractItems });\r\n          }\r\n        }\r\n\r\n        this.setState({ selectedPlanRow: [] });\r\n      } catch (error) {\r\n        console.log(\r\n          \"ContractDetailsComposite:Error occured on handleDeleteCompartment\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      let validationErrors = { ...this.state.validationErrors };\r\n      let modContract = { ...this.state.modContract };\r\n      validationErrors[propertyName] = error;\r\n      modContract[propertyName] = value;\r\n      this.setState({ validationErrors, modContract });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ContractDetailsComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      const modContract = lodash.cloneDeep(this.state.modContract);\r\n      if (checked) modContract.TerminalCodes = [...this.state.terminalOptions];\r\n      else modContract.TerminalCodes = [];\r\n      this.setState({ modContract });\r\n      this.terminalSelectionChange(modContract.TerminalCodes);\r\n    } catch (error) {\r\n      console.log(\r\n        \"ContractComposite:Error occured on handleAllTerminasChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modContract = lodash.cloneDeep(this.state.modContract);\r\n\r\n      modContract.ShareholderCode = this.props.selectedShareholder;\r\n\r\n      modContract.TransportationType = this.props.transportationType;\r\n      if (modContract.ContractType !== null && modContract.ContractType !== \"\")\r\n        modContract.ContractType = Constants.contractType.DEFAULT_CONTRACT_TYPE;\r\n\r\n      if (modContract.Status !== null && modContract.Status !== \"\")\r\n        modContract.Status = Constants.contractStatus.CREATED;\r\n\r\n      modContract.ContractItems = lodash.cloneDeep(this.state.modContractItems);\r\n      if (\r\n        modContract.ContractItems !== null &&\r\n        modContract.ContractItems.length > 0\r\n      ) {\r\n        modContract.ContractItems.forEach((plan) => {\r\n          plan.ContractCode = modContract.ContractCode;\r\n          plan.ShareholderCode = modContract.ShareholderCode;\r\n          plan.CustomerCode = modContract.CustomerCode;\r\n          if (plan.Quantity !== null && plan.Quantity !== \"\")\r\n            plan.Quantity = plan.Quantity.toLocaleString();\r\n\r\n          delete plan.SeqNumber;\r\n          if (\r\n            plan.AttributesforUI !== undefined &&\r\n            plan.AttributesforUI != null\r\n          )\r\n            plan.AttributesforUI =\r\n              Utilities.compartmentAttributesConverttoLocaleString(\r\n                plan.AttributesforUI\r\n              );\r\n        });\r\n      }\r\n\r\n      return modContract;\r\n    } catch (err) {\r\n      console.log(\"ContractDetailsComposite:Error occured on filldetails\", err);\r\n    }\r\n  }\r\n\r\n  convertStringtoDecimal(modContract, attributeList) {\r\n    try {\r\n      modContract.ContractItems.forEach((plan) => {\r\n        plan.Quantity = Utilities.convertStringtoDecimal(plan.Quantity);\r\n      });\r\n      modContract = this.fillAttributeDetails(modContract, attributeList);\r\n      return modContract;\r\n    } catch (err) {\r\n      console.log(\"convertStringtoDecimal error contract details\", err);\r\n    }\r\n  }\r\n\r\n\r\n  addUpdateContract = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempContract = lodash.cloneDeep(this.state.tempContract);\r\n\r\n      this.state.contract.ContractCode === \"\"\r\n      ? this.createContract(tempContract)\r\n      : this.updateContract(tempContract);\r\n\r\n    } catch (error) {\r\n      console.log(\"Contract Composite : Error in addUpdateContract\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n      if (this.state.updatedContractStatus === Constants.contractStatus.SCHEDULED && this.state.scheduledContractUpdate === false) {\r\n        this.setState({ isAllowtoUpdate: true });\r\n      }\r\n      else {\r\n        let returnValue = Object.values(this.state.validationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n        if (returnValue) {\r\n       //   this.setState({ saveEnabled: false });\r\n          let modContract = this.fillDetails();\r\n          let attributeList = Utilities.attributesConverttoLocaleString(\r\n            this.state.modAttributeMetaDataList\r\n          );\r\n\r\n          if (this.validateSave(modContract, attributeList)) {\r\n            modContract = this.convertStringtoDecimal(modContract, attributeList);\r\n            modContract = Utilities.convertDatesToString(\r\n              DateFieldsInEntities.DatesInEntity.Contract,\r\n              modContract\r\n            );\r\n            modContract.ContractItems.forEach(\r\n              (ci) =>\r\n              (ci = Utilities.convertDatesToString(\r\n                DateFieldsInEntities.DatesInEntity.ContractItem,\r\n                ci\r\n              ))\r\n            );\r\n            \r\n            let showAuthenticationLayout =\r\n            this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n              ? true\r\n              : false;\r\n          let tempContract = lodash.cloneDeep(modContract);\r\n          this.setState({ showAuthenticationLayout, tempContract }, () => {\r\n            if (showAuthenticationLayout === false) {\r\n              this.addUpdateContract();\r\n            }\r\n        });\r\n\r\n            modContract = Utilities.convertStringToDates(\r\n              DateFieldsInEntities.DatesInEntity.Contract,\r\n              modContract\r\n            );\r\n            modContract.ContractItems.forEach(\r\n              (ci) =>\r\n              (ci = Utilities.convertStringToDates(\r\n                DateFieldsInEntities.DatesInEntity.ContractItem,\r\n                ci\r\n              ))\r\n            );\r\n          } else {\r\n            this.setState({ saveEnabled: true });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"ContractDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateSave(modContract, attributeList) {\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(contractValidationDef).forEach(function (key) {\r\n      if (modContract[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          contractValidationDef[key],\r\n          modContract[key]\r\n        );\r\n    });\r\n\r\n    if (modContract.Active !== this.state.contract.Active) {\r\n      if (modContract.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"ShipmentOrder_RemarksRequired\";\r\n      }\r\n    }\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ContractInfo_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n\r\n    let returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    else return returnValue;\r\n\r\n    if (modContract.ContractItems.length > 0) {\r\n      modContract.ContractItems.forEach((com) => {\r\n        contractPlanValidationDef.forEach((col) => {\r\n          let err = \"\";\r\n\r\n          if (col.validator !== undefined) {\r\n            err = Utilities.validateField(col.validator, com[col.field]);\r\n          }\r\n\r\n          // if (col.field === \"Quantity\" && err === \"\") {\r\n          //   let quantity = Utilities.convertStringtoDecimal(\r\n          //     com.Quantity\r\n          //   ).toString();\r\n          //   if (quantity.length > 15) err = \"Common_MaxLengthExceeded\";\r\n          // }\r\n\r\n          if (err !== \"\") {\r\n            notification.messageResultDetails.push({\r\n              keyFields: [col.displayName],\r\n              keyValues: [com[col.field]],\r\n              isSuccess: false,\r\n              errorMessage: err,\r\n            });\r\n          }\r\n        });\r\n\r\n        if (com.AttributesforUI !== null && com.AttributesforUI !== undefined) {\r\n          com.AttributesforUI.forEach((item) => {\r\n            let errMsg = Utilities.valiateAttributeField(\r\n              item,\r\n              item.AttributeValue\r\n            );\r\n            if (errMsg !== \"\") {\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                notification.messageResultDetails.push({\r\n                  keyFields: [\"CompAttributeTerminal\", item.AttributeName],\r\n                  keyValues: [item.TerminalCode, item.AttributeValue],\r\n                  isSuccess: false,\r\n                  errorMessage: errMsg,\r\n                });\r\n              } else {\r\n                notification.messageResultDetails.push({\r\n                  keyFields: [item.AttributeName],\r\n                  keyValues: [item.AttributeValue],\r\n                  isSuccess: false,\r\n                  errorMessage: errMsg,\r\n                });\r\n              }\r\n            }\r\n          });\r\n        }\r\n        this.toggleExpand(com, true, true);\r\n      });\r\n    } else {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [\"ContractInfo_ContractCode\"],\r\n        keyValues: [modContract.ContractCode],\r\n        isSuccess: false,\r\n        errorMessage: \"ErrMsg_Contract_NoItems\",\r\n      });\r\n    }\r\n\r\n    this.setState({ validationErrors });\r\n    returnValue = Object.values(validationErrors).every(function (value) {\r\n      return value === \"\";\r\n    });\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modContract, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  toggleExpand = (data, open, isTerminalAdded = false) => {\r\n    //console.log(\"Data in Toggle\", data)\r\n    let expandedRows = this.state.expandedRows;\r\n    let expandedRowIndex = expandedRows.findIndex(\r\n      (item) => item.SeqNumber === data.SeqNumber\r\n    );\r\n    if (open) {\r\n      if (isTerminalAdded && expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n        expandedRows.push(data);\r\n      } else if (expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n      }\r\n    } else {\r\n      if (expandedRowIndex >= 0) {\r\n        expandedRows = expandedRows.filter(\r\n          (x) => x.Code !== data.Code && x.SeqNumber !== data.SeqNumber\r\n        );\r\n      } else expandedRows.push(data);\r\n    }\r\n    this.setState({ expandedRows });\r\n  };\r\n\r\n  createContract(modContract) {\r\n    this.handleAuthenticationClose();\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.contractCode,\r\n        value: modContract.ContractCode,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.contractCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modContract,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ContractInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ContractInfo_ContractCode\"],\r\n          keyValues: [modContract.ContractCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateContract,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            // trailer: lodash.cloneDeep(modTrailer),\r\n            // modTrailer: lodash.cloneDeep(modTrailer),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnContract\r\n            ),\r\n          });\r\n\r\n          this.getContract(false);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnContract\r\n            ),\r\n          });\r\n          console.log(\"Error in CreateContract:\", result.ErrorList);\r\n        }\r\n\r\n        this.props.onSaved(this.state.modContract, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnContract\r\n          ),\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modContract, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateContract(modContract) {\r\n    this.handleAuthenticationClose();\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.contractCode,\r\n        value: modContract.ContractCode,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.contractCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modContract,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ContractInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ContractInfo_ContractCode\"],\r\n          keyValues: [modContract.ContractCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateContract,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            // trailer: lodash.cloneDeep(modTrailer),\r\n            // modTrailer: lodash.cloneDeep(modTrailer),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnContract\r\n            ),\r\n          });\r\n          this.getContract(false);\r\n        } else {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnContract\r\n            ),\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in UpdateContract:\", result.ErrorList);\r\n        }\r\n\r\n        this.props.onSaved(this.state.modContract, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modContract, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnContract\r\n          ),\r\n        });\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      let modContractItems = Utilities.addSeqNumberToListObject(\r\n        lodash.cloneDeep(this.state.contract.ContractItems)\r\n      );\r\n      this.setState(\r\n        {\r\n          modContract: lodash.cloneDeep(this.state.contract),\r\n          modContractItems: modContractItems,\r\n          modAttributeMetaDataList: [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(this.state.contract.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n      let validationErrors = { ...this.state.validationErrors };\r\n      Object.keys(validationErrors).forEach((key) => {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState({ validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ContractDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  getCarrierList() {\r\n    axios(\r\n      RestAPIs.GetCarrierCodes +\r\n      \"?ShareholderCode=\" +\r\n      this.props.selectedShareholder +\r\n      \"&Transportationtype=\" +\r\n      this.props.transportationType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            // const carrierOptions = [];\r\n            // result.EntityResult.Table.forEach((carrier) => {\r\n            //   carrierOptions.push({\r\n            //     text: carrier.Common_Code,\r\n            //     value: carrier.Common_Name,\r\n            //   });\r\n            // });\r\n\r\n            let carrierOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ carrierOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetCarrierListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Carrier List:\", error);\r\n      });\r\n  }\r\n\r\n  handleForceClose = () => {\r\n    try {\r\n      let modContract = lodash.cloneDeep(this.state.modContract);\r\n      const validationErrors = { ...this.state.validationErrors };\r\n\r\n      if (modContract.Remarks === null || modContract.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"ShipmentOrder_RemarksRequired\";\r\n      }\r\n      this.setState({ validationErrors });\r\n\r\n      let returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n      let contactStatusObj = {\r\n        Shareholder: this.props.selectedShareholder,\r\n        ContractCode: modContract.ContractCode,\r\n        ForceClose: true,\r\n        ForceCloseReason: modContract.Remarks,\r\n        NewContractStatus: null,\r\n      };\r\n      \r\n      if (returnValue === true)\r\n      {\r\n\r\n        let showForceCloseAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempContactStatusObj = lodash.cloneDeep(contactStatusObj);\r\n      this.setState({ showForceCloseAuthenticationLayout, tempContactStatusObj }, () => {\r\n        if (showForceCloseAuthenticationLayout === false) {\r\n          this.updateContractStatus();\r\n        }\r\n    });\r\n\r\n\r\n      } \r\n      \r\n    } catch (error) {\r\n      console.log(\r\n        \"ContractDetailsComposite:Error occured on handleForceClose\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  updateContractStatus = () => {\r\n\r\n    let contactStatusObj= lodash.cloneDeep(this.state.tempContactStatusObj);\r\n    \r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.contractCode,\r\n      //KeyCodes: keyCode,\r\n      Entity: contactStatusObj,\r\n    };\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ContractInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ContractInfo_ContractCode\"],\r\n          keyValues: [contactStatusObj.ContractCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateContractStatus,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    ).then((response) => {\r\n      let result = response.data;\r\n      notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n      notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n      if (result.IsSuccess === true) {\r\n        this.getContract(false);\r\n      } else {\r\n        notification.messageResultDetails[0].errorMessage = result.ErrorList[0];\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  handleViewShipments = () => {\r\n    this.setState(\r\n      {\r\n        isShowTruckShipment: true,\r\n        isShowBackButton: true,\r\n      },\r\n      () => this.props.handleOperationVisibility(false)\r\n    );\r\n  };\r\n\r\n  handleViewDispatch = () => {\r\n    this.setState(\r\n      {\r\n        isShowRailDispatch: true,\r\n        isShowBackButton: true,\r\n      },\r\n      () => this.props.handleOperationVisibility(false)\r\n    );\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.setState(\r\n      {\r\n        isShowTruckShipment: false,\r\n        isShowRailDispatch: false,\r\n        isShowBackButton: false,\r\n      },\r\n      () => {\r\n        this.props.handleOperationVisibility(true);\r\n        this.getContract(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleShowBackButton = (status) => {\r\n    this.setState({\r\n      isShowBackButton: status,\r\n    });\r\n  };\r\n\r\n  confirmAllowToUpdate = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isAllowtoUpdate} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h5>{t(\"Contract_ConfirmAllowToUpdate\")}</h5>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"AccessCardInfo_Ok\")}\r\n                onClick={() => {\r\n                  this.setState({ isAllowtoUpdate: false, scheduledContractUpdate: true }, () => {\r\n                    this.handleSave();\r\n                  });\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  this.setState({ isAllowtoUpdate: false, saveEnabled: true });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n  //Get KPI for contract\r\n  getKPIList(shareholder, contractCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n\r\n      var transportationType = this.props.transportationType;\r\n      let Parameters = transportationType === Constants.TransportationType.ROAD ? [{ key: \"ShareholderCode\", value: shareholder }, {\r\n        key: \"ContractCode\", value: contractCode\r\n      }] : [{\r\n        key: \"ContractCode\", value: contractCode\r\n      }];\r\n      let objKPIRequestData = {\r\n        PageName: kpiContractDetail,\r\n        TransportationType: transportationType,\r\n        InputParameters: Parameters\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              contractKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ contractKPIList: [] });\r\n            console.log(\"Error in contract KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Contract KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  handleOperation() {\r\n    if (this.state.showAuthenticationLayout)\r\n      return this.addUpdateContract;\r\n    else if (this.state.showForceCloseAuthenticationLayout)\r\n      return this.updateContractStatus;\r\n    \r\n  }\r\n\r\n  getFunctionGroupName() {\r\n     if (this.state.showForceCloseAuthenticationLayout)\r\n      return fnContractForceClose;\r\n    else if (this.state.showAuthenticationLayout)\r\n      return fnContract;\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n      showForceCloseAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let listOptions = {\r\n      terminalCodes: this.state.terminalOptions,\r\n      contractTypeOptions: Utilities.transferListtoOptions(\r\n        Object.keys(Constants.contractType)\r\n      ),\r\n      carrierOptions: this.state.carrierOptions,\r\n      unitOfVolume: this.state.volumeUOMOptions,\r\n      unitOfWeight: this.state.weightUOMOptions,\r\n      finishedProductOptions: this.state.finishedProductOptions,\r\n      customerDestinationOptions: this.state.customerDestinationOptions,\r\n    };\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"ShipmentOrder_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modContract.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modContract.LastUpdatedTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"ShipmentOrder_LastActiveTime\",\r\n        fieldValue:\r\n          this.state.modContract.LastActiveTime !== undefined &&\r\n            this.state.modContract.LastActiveTime !== null\r\n            ? new Date(\r\n              this.state.modContract.LastActiveTime\r\n            ).toLocaleDateString() +\r\n            \" \" +\r\n            new Date(\r\n              this.state.modContract.LastActiveTime\r\n            ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"ShipmentOrder_CreatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.modContract.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modContract.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        {this.state.isShowTruckShipment ||\r\n          this.state.isShowRailDispatch ? null : (\r\n          <ErrorBoundary>\r\n            <TMDetailsHeader\r\n              entityCode={this.state.contract.ContractCode}\r\n              newEntityName=\"ContractInfo_Title\"\r\n              popUpContents={popUpContents}\r\n            ></TMDetailsHeader>\r\n          </ErrorBoundary>\r\n        )}\r\n        {this.state.isShowTruckShipment ? (\r\n          <ErrorBoundary>\r\n            <TruckShipmentProject\r\n              shipmentSource={Constants.shipmentFrom.Contract}\r\n              shipmentSourceCode={this.state.modContract.ContractCode}\r\n              selectedShareholder={this.props.selectedShareholder}\r\n              shipmentSourceCompartmentItems={this.state.modContractItems}\r\n              shipmentSourceDetails={this.state.modContract}\r\n              isShowBackButton={this.handleShowBackButton}\r\n            />\r\n          </ErrorBoundary>\r\n        ) : this.state.isShowRailDispatch ? (\r\n          <ErrorBoundary>\r\n            <RailDispatchProject\r\n              shipmentSource={Constants.shipmentFrom.Contract}\r\n              shipmentSourceCode={this.state.modContract.ContractCode}\r\n              selectedShareholder={this.props.selectedShareholder}\r\n              shipmentSourceCompartmentItems={this.state.modContractItems}\r\n              shipmentSourceDetails={this.state.modContract}\r\n              isShowBackButton={this.handleShowBackButton}\r\n            />\r\n          </ErrorBoundary>\r\n        ) : (\r\n          <> <TMDetailsKPILayout KPIList={this.state.contractKPIList}> </TMDetailsKPILayout>\r\n            <ErrorBoundary>\r\n              <ContractDetails\r\n                contract={this.state.contract}\r\n                modContract={this.state.modContract}\r\n                modContractItems={this.state.modContractItems}\r\n                validationErrors={this.state.validationErrors}\r\n                listOptions={listOptions}\r\n                onFieldChange={this.handleChange}\r\n                onDateTextChange={this.handleDateTextChange}\r\n                onAllTerminalsChange={this.handleAllTerminalsChange}\r\n                handleAddPlan={this.handleAddPlan}\r\n                handleDeletePlan={this.handleDeletePlan}\r\n                selectedPlanRow={this.state.selectedPlanRow}\r\n                handleRowSelectionChange={this.handleRowSelectionChange}\r\n                handleCellDataEdit={this.handleCellDataEdit}\r\n                isEnterpriseNode={\r\n                  this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                }\r\n                attributeValidationErrors={this.state.attributeValidationErrors}\r\n                onAttributeDataChange={this.handleAttributeDataChange}\r\n                handleCompAttributeCellDataEdit={\r\n                  this.handleCompAttributeCellDataEdit\r\n                }\r\n                modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n                toggleExpand={this.toggleExpand}\r\n                expandedRows={this.state.expandedRows}\r\n                compartmentDetailsPageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                handleForceClose={this.handleForceClose}\r\n                isEnableForceClose={this.state.isEnableForceClose}\r\n                handleViewShipments={this.handleViewShipments}\r\n                handleViewDispatch={this.handleViewDispatch}\r\n                isAutoGeneratedContractCode={\r\n                  this.state.isAutoGeneratedContractCode\r\n                }\r\n              ></ContractDetails>\r\n            </ErrorBoundary></>\r\n        )}\r\n        {this.state.isShowTruckShipment || this.state.isShowRailDispatch ? (\r\n          this.state.isShowBackButton ? (\r\n            <div className=\"row\">\r\n              <div className=\"col col-lg-8\" style={{ marginTop: \"1%\" }}>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <Button\r\n                      className=\"backButton\"\r\n                      onClick={this.handleBack}\r\n                      content={t(\"Back\")}\r\n                    ></Button>\r\n                  )}\r\n                </TranslationConsumer>\r\n              </div>\r\n            </div>\r\n          ) : null\r\n        ) : (\r\n          <ErrorBoundary>\r\n            <TMDetailsUserActions\r\n              handleBack={this.props.onBack}\r\n              handleSave={this.handleSave}\r\n              handleReset={this.handleReset}\r\n              saveEnabled={this.state.saveEnabled}\r\n            ></TMDetailsUserActions>\r\n          </ErrorBoundary>\r\n        )}\r\n        {this.state.isAllowtoUpdate ? this.confirmAllowToUpdate() : null}\r\n\r\n        {this.state.showAuthenticationLayout || this.state.showForceCloseAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.contract.ContractCode   === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={this.getFunctionGroupName()}\r\n            handleOperation={this.handleOperation()}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContractDetailsComposite);\r\n","import React from \"react\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport {\r\n  Select,\r\n  Icon,\r\n  Input,\r\n  Checkbox,\r\n  DatePicker,\r\n  Accordion,\r\n  Button,\r\n} from \"@scuf/common\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getKeyByValue } from \"../../../JS/Utilities\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\nimport PropTypes from \"prop-types\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { handleIsRequiredCompartmentCell } from \"../../../JS/functionalUtilities\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\n\r\nOrderDetails.propTypes = {\r\n  order: PropTypes.object.isRequired,\r\n  modOrder: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  attributeValidationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    //orderTypeOptions: PropTypes.array,\r\n    unitOfWeight: PropTypes.array,\r\n    unitOfVolume: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    finishedProductOptions: PropTypes.array,\r\n    customerOptions: PropTypes.array,\r\n  }).isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  selectedPlanRow: PropTypes.array.isRequired,\r\n  modOrderItems: PropTypes.array.isRequired,\r\n  handleRowSelectionChange: PropTypes.func.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n  handleAddPlan: PropTypes.func.isRequired,\r\n  handleDeletePlan: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  expandedRows: PropTypes.array.isRequired,\r\n  modAttributeMetaDataList: PropTypes.array.isRequired,\r\n  onAttributeDataChange: PropTypes.func.isRequired,\r\n  handleCompAttributeCellDataEdit: PropTypes.func.isRequired,\r\n  compartmentDetailsPageSize: PropTypes.number.isRequired,\r\n  handleForceClose: PropTypes.func.isRequired,\r\n  handleViewShipments: PropTypes.func.isRequired,\r\n  printScheduleClick: PropTypes.func.isRequired,////#Swapnil GES-IND 20Sep24\r\n  enableForceClose: PropTypes.bool.isRequired,\r\n};\r\n\r\nOrderDetails.defaultProps = {\r\n  listOptions: {\r\n    terminalCodes: [],\r\n    //orderTypeOptions: [],\r\n    unitOfVolume: [],\r\n    unitOfWeight: [],\r\n    finishedProductOptions: [],\r\n    customerOptions: [],\r\n  },\r\n  modOrderItems: [],\r\n  isEnterpriseNode: false,\r\n};\r\n\r\nexport default function OrderDetails({\r\n  order,\r\n  modOrder,\r\n  onFieldChange,\r\n  validationErrors,\r\n  attributeValidationErrors,\r\n  onDateTextChange,\r\n  listOptions,\r\n  onAllTerminalsChange,\r\n  onAttributeDataChange,\r\n  handleCompAttributeCellDataEdit,\r\n  handleAddPlan,\r\n  handleDeletePlan,\r\n  selectedPlanRow,\r\n  modAttributeMetaDataList,\r\n  expandedRows,\r\n  handleRowSelectionChange,\r\n  handleCellDataEdit,\r\n  selectedShareholder,\r\n  modOrderItems,\r\n  toggleExpand,\r\n  compartmentDetailsPageSize,\r\n  isEnterpriseNode,\r\n  handleForceClose,\r\n  handleViewShipments,\r\n  printScheduleClick,////#Swapnil GES-IND 20Sep24\r\n  enableForceClose\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  const handleAttributeType = (data) => {\r\n    //debugger;\r\n    const attribute = data.rowData;\r\n    const handleAttributeDateValue = (dateval) => {\r\n      var chars = dateval.split(\"-\");\r\n      return new Date(chars[0], chars[1] - 1, chars[2]);\r\n    };\r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n      var Dateval = new Date(value);\r\n      value =\r\n        Dateval.getFullYear() +\r\n        \"-\" +\r\n        (\"0\" + (Dateval.getMonth() + 1)).slice(-2) +\r\n        \"-\" +\r\n        (\"0\" + Dateval.getDate()).slice(-2);\r\n      handleCompAttributeCellDataEdit(attribute, value);\r\n    };\r\n    try {\r\n      return attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.STRING.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.INT.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.FLOAT.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.LONG.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.DOUBLE.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n              attribute.AttributeValue === undefined ||\r\n              attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : attribute.AttributeValue.toLocaleString()\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.BOOL.toLowerCase() ? (\r\n        <Checkbox\r\n          checked={\r\n            attribute.AttributeValue.toString().toLowerCase() === \"true\"\r\n              ? true\r\n              : false\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n        ></Checkbox>\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.DATETIME.toLowerCase() ? (\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n              attribute.AttributeValue === undefined ||\r\n              attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : handleAttributeDateValue(attribute.AttributeValue)\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          showYearSelector=\"true\"\r\n          onChange={(value) => convertAttributeDatetoString(data, value)}\r\n          onTextChange={(value) => {\r\n            convertAttributeDatetoString(data, value);\r\n          }}\r\n          reserveSpace={false}\r\n        />\r\n      ) : null;\r\n    } catch (error) {\r\n      console.log(\"OrderDetails:Error occured on handleAttributeType\", error);\r\n    }\r\n  };\r\n\r\n  const handleIsRequiredCompAttributes = (data) => {\r\n    return data.rowData.IsMandatory ? (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n        <div class=\"ui red circular empty label badge  circle-padding\" />\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const expanderTemplate = (data) => {\r\n    //const open = expandedRows.includes(data.rowData);\r\n    //debugger\r\n    const open =\r\n      expandedRows.findIndex((x) => x.SeqNumber === data.rowData.SeqNumber) >= 0\r\n        ? true\r\n        : false;\r\n    return (\r\n      <div\r\n        onClick={() => toggleExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        <span>{open ? t(\"Hide_Attributes\") : t(\"View_Attributes\")}</span>\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"caret-up\" : \"caret-down\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  function rowExpansionTemplate(data) {\r\n    return Array.isArray(data.AttributesforUI) &&\r\n      data.AttributesforUI.length > 0 ? (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable\r\n          data={data.AttributesforUI}\r\n          rows={compartmentDetailsPageSize}\r\n        >\r\n          {isEnterpriseNode ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"TerminalCode\"\r\n              field=\"TerminalCode\"\r\n              header={t(\"CompartmentTerminal\")}\r\n              editable={false}\r\n            ></DataTable.Column>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"AttributeName\"\r\n            header={t(\"CompartmentAttributeName\")}\r\n            renderer={handleIsRequiredCompAttributes}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            header={t(\"CompartmentAttributeValue\")}\r\n            renderer={handleAttributeType}\r\n          />\r\n          {Array.isArray(data.AttributesforUI) &&\r\n            data.AttributesforUI.length > compartmentDetailsPageSize ? (\r\n            <DataTable.Pagination />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </DataTable>\r\n      </div>\r\n    ) : (\r\n      <div className=\"compartmentIcon\">\r\n        <div className=\"gridButtonAlignLeft\">\r\n          {t(\"CustomerInventory_NoRecordsFound\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleTextEdit = (cellData) => {\r\n    let val = modOrderItems[cellData.rowIndex][cellData.field];\r\n    if (cellData.field === \"Quantity\" && val !== null && val !== \"\")\r\n      val = val.toLocaleString();\r\n    return (\r\n      // <TranslationConsumer>\r\n      //   {(t) => (\r\n      <Input\r\n        fluid\r\n        value={val}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      // error={t(validationErrors.Description)}\r\n      // disabled={cellData.field === \"Code\" ? true : false}\r\n      />\r\n      //   )}\r\n      // </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  const handleDropdownEdit = (cellData) => {\r\n    let dropDownOptions = [];\r\n    if (cellData.field === \"QuantityUOM\") {\r\n      dropDownOptions = [\r\n        ...listOptions.unitOfVolume,\r\n        ...listOptions.unitOfWeight,\r\n      ];\r\n    }\r\n    if (cellData.field === \"FinishedProductCode\")\r\n      dropDownOptions = listOptions.finishedProductOptions;\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        placeholder={t(\"Common_Select\")}\r\n        value={modOrderItems[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownOptions}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        // indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  ////#Swapnil GES-IND 17Sep24\r\n  const handleDateEdit = (cellData) => {\r\n    let val = modOrderItems[cellData.rowIndex][cellData.field];\r\n    return (\r\n      // <TranslationConsumer>\r\n      //   {(t) => (\r\n      <DatePicker\r\n        fluid\r\n        value={val === null ? \"\" : new Date(val)}\r\n        //label={t(`ContractInfo_StartDate`)}\r\n        showYearSelector=\"true\"\r\n        // indicator=\"required\"\r\n        // disablePast={true}\r\n        //type=\"datetime\"\r\n        displayFormat={getCurrentDateFormat()}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        onTextChange={(value, error) => {\r\n          handleCellDataEdit(value, cellData);\r\n        }}\r\n        // error={t(validationErrors.StartDate)}\r\n        reserveSpace={false}\r\n      />\r\n      //   )}\r\n      // </TranslationConsumer>\r\n    );\r\n  };\r\n////End\r\n\r\n  return (\r\n    // <TranslationConsumer>\r\n    //   {(t) => (\r\n    <div className=\"detailsContainer\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modOrder.OrderCode}\r\n            label={t(\"ShipmentOrder_OrderCode\")}\r\n            indicator=\"required\"\r\n            disabled={order.OrderCode !== \"\"}\r\n            onChange={(data) => onFieldChange(\"OrderCode\", data)}\r\n            error={t(validationErrors.OrderCode)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(\"Customer_Code\")}\r\n            indicator=\"required\"\r\n            value={modOrder.CustomerCode}\r\n            options={listOptions.customerOptions}\r\n            onChange={(data) => onFieldChange(\"CustomerCode\", data)}\r\n            error={t(validationErrors.CustomerCode)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modOrder.Description}\r\n            label={t(\"ShipmentOrder_Desc\")}\r\n            onChange={(data) => onFieldChange(\"Description\", data)}\r\n            error={t(validationErrors.Description)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <DatePicker\r\n            fluid\r\n            value={\r\n              modOrder.OrderStartDate === null\r\n                ? \"\"\r\n                : Utilities.convertStringToCommonDateFormat(\r\n                  modOrder.OrderStartDate\r\n                )\r\n            }\r\n            displayFormat={getCurrentDateFormat()}\r\n            //type=\"datetime\"\r\n            label={t(`ShipmentOrder_StartDate`)}\r\n            showYearSelector=\"true\"\r\n            indicator=\"required\"\r\n            // disablePast={true}\r\n            onChange={(data) => onFieldChange(\"OrderStartDate\", data)}\r\n            onTextChange={(value, error) => {\r\n              onDateTextChange(\"OrderStartDate\", value, error);\r\n            }}\r\n            error={t(validationErrors.OrderStartDate)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <DatePicker\r\n            fluid\r\n            value={\r\n              modOrder.OrderEndDate === null\r\n                ? \"\"\r\n                : Utilities.convertStringToCommonDateFormat(\r\n                  modOrder.OrderEndDate\r\n                )\r\n            }\r\n            displayFormat={getCurrentDateFormat()}\r\n            label={t(`ShipmentOrder_EndDate`)}\r\n            showYearSelector=\"true\"\r\n            indicator=\"required\"\r\n            //type=\"datetime\"\r\n            disablePast={true}\r\n            onChange={(data) => onFieldChange(\"OrderEndDate\", data)}\r\n            onTextChange={(value, error) => {\r\n              onDateTextChange(\"OrderEndDate\", value, error);\r\n            }}\r\n            error={t(validationErrors.OrderEndDate)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              getKeyByValue(Constants.orderStatus, modOrder.OrderStatus) ===\r\n                undefined\r\n                ? \"\"\r\n                : getKeyByValue(Constants.orderStatus, modOrder.OrderStatus)\r\n            }\r\n            label={t(\"ShipmentOrder_OrderStatus\")}\r\n            disabled={true}\r\n            //onChange={(data) => onFieldChange(\"Description\", data)}\r\n            //error={t(validationErrors.Description)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <DatePicker\r\n            fluid\r\n            value={\r\n              modOrder.OrderDate === null\r\n                ? \"\"\r\n                : Utilities.convertStringToCommonDateFormat(modOrder.OrderDate)\r\n            }\r\n            displayFormat={getCurrentDateFormat()}\r\n            label={t(`ShipmentOrder_OrderDate`)}\r\n            showYearSelector=\"true\"\r\n            indicator=\"required\"\r\n            // disablePast={true}\r\n            disabled={true}\r\n            //type=\"datetime\"\r\n            //onChange={(data) => onFieldChange(\"OrderEndDate\", data)}\r\n            // onTextChange={(value, error) => {\r\n            //  onDateTextChange(\"OrderEndDate\", value, error);\r\n            // }}\r\n            // error={t(validationErrors.OrderEndDate)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        {/* <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(\"ShipmentOrder_OrderType\")}\r\n            value={getKeyByValue(Constants.orderType, modOrder.OrderType)}\r\n            options={listOptions.orderTypeOptions}\r\n            disabled={true}\r\n          // onChange={(data) => onFieldChange(\"Active\", data)}\r\n          />\r\n        </div> */}\r\n\r\n        {isEnterpriseNode ? (\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <AssociatedTerminals\r\n              terminalList={listOptions.terminalCodes}\r\n              selectedTerminal={modOrder.TerminalCodes}\r\n              error={t(validationErrors.TerminalCodes)}\r\n              onFieldChange={onFieldChange}\r\n              onCheckChange={onAllTerminalsChange}\r\n            ></AssociatedTerminals>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(\"ShipmentOrder_Status\")}\r\n            value={modOrder.Active}\r\n            options={[\r\n              { text: t(\"ViewShipment_Ok\"), value: true },\r\n              { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n            ]}\r\n            onChange={(data) => onFieldChange(\"Active\", data)}\r\n            disabled={order.OrderCode === \"\" ? true : false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modOrder.Remarks === null ? \"\" : modOrder.Remarks}\r\n            label={t(\"ShipmentOrder_Remarks\")}\r\n            onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n            indicator={modOrder.Active !== order.Active ? \"required\" : \"\"}\r\n            error={t(validationErrors.Remarks)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      </div>\r\n      {modAttributeMetaDataList.length > 0\r\n        ? modAttributeMetaDataList.map((attire) => (\r\n          <ErrorBoundary>\r\n            <Accordion>\r\n              <Accordion.Content\r\n                className=\"attributeAccordian\"\r\n                title={\r\n                  isEnterpriseNode\r\n                    ? attire.TerminalCode + \" - \" + t(\"Attributes_Header\")\r\n                    : t(\"Attributes_Header\")\r\n                }\r\n              >\r\n                <AttributeDetails\r\n                  selectedAttributeList={attire.attributeMetaDataList}\r\n                  handleCellDataEdit={onAttributeDataChange}\r\n                  attributeValidationErrors={handleValidationErrorFilter(\r\n                    attributeValidationErrors,\r\n                    attire.TerminalCode\r\n                  )}\r\n                ></AttributeDetails>\r\n              </Accordion.Content>\r\n            </Accordion>\r\n          </ErrorBoundary>\r\n        ))\r\n        : null}\r\n      <div className=\"row compartmentRow\">\r\n        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n          <h4>{t(\"ShipmentOrder_PlanHeader\")}</h4>\r\n        </div>\r\n        <div className=\"col col-md-4 col-lg-3 col-xl-3\">\r\n          <div className=\"compartmentIconContainer\">\r\n            <div onClick={handleAddPlan} className=\"compartmentIcon\">\r\n              <div>\r\n                <Icon root=\"common\" name=\"badge-plus\" size=\"medium\" />\r\n              </div>\r\n              <div className=\"margin_l10\">\r\n                <h5 className=\"font14\">{t(\"TrailerInfo_Add\")}</h5>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              onClick={handleDeletePlan}\r\n              className=\"compartmentIcon margin_l30\"\r\n            >\r\n              <div>\r\n                <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n              </div>\r\n              <div className=\"margin_l10\">\r\n                <h5 className=\"font14\">{t(\"TrailerInfo_Delete\")}</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row marginRightZero tableScroll\">\r\n        <div className=\"col-12 detailsTable\">\r\n          <DataTable\r\n            data={modOrderItems}\r\n            rowExpansionTemplate={rowExpansionTemplate}\r\n            expandedRows={expandedRows}\r\n            selectionMode=\"multiple\"\r\n            selection={selectedPlanRow}\r\n            onSelectionChange={handleRowSelectionChange}\r\n            scrollable={true}\r\n            scrollHeight=\"320px\"\r\n          >\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"FinishedProductCode\"\r\n              field=\"FinishedProductCode\"\r\n              header={handleIsRequiredCompartmentCell(\r\n                t(\"ShipmentOrder_ProductCode\")\r\n              )}\r\n              // rowHeader={true}\r\n              editable={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleDropdownEdit}\r\n            ></DataTable.Column>\r\n\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"Quantity\"\r\n              field=\"Quantity\"\r\n              header={handleIsRequiredCompartmentCell(\r\n                t(\"ShipmentOrder_Quantity\")\r\n              )}\r\n              // rowHeader={true}\r\n              editable={true}\r\n              editFieldType=\"text\"\r\n              renderer={(cellData) =>\r\n                cellData.value === null ? \"\" : cellData.value.toLocaleString()\r\n              }\r\n              customEditRenderer={handleTextEdit}\r\n            ></DataTable.Column>\r\n\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"QuantityUOM\"\r\n              field=\"QuantityUOM\"\r\n              header={handleIsRequiredCompartmentCell(t(\"ShipmentOrder_UOM\"))}\r\n              // rowHeader={true}\r\n              editable={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleDropdownEdit}\r\n            ></DataTable.Column>\r\n\r\n            {/* #Swapnil GES-IND 17Sep24 */}\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"ScheduledDate\"\r\n              field=\"ScheduledDate\"\r\n              header={handleIsRequiredCompartmentCell(t(\"Scheduled Date\"))}\r\n              // header={t(\"ContractInfo_StartDate\")}\r\n              // rowHeader={true}\r\n              editable={true}\r\n              editFieldType=\"text\"\r\n              renderer={(cellData) =>\r\n                cellData.value === null\r\n                  ? \"\"\r\n                  : cellData.value\r\n              }\r\n              customEditRenderer={handleDateEdit}\r\n            ></DataTable.Column>\r\n            {/* #End */}\r\n\r\n            <DataTable.Column\r\n              className=\"compColHeight disabledColumn colminWidth\"\r\n              key=\"BlockedQuantity\"\r\n              field=\"BlockedQuantity\"\r\n              header={t(\"ShipmentOrder_ScheduledQuantity\")}\r\n              // rowHeader={true}\r\n              renderer={(cellData) =>\r\n                cellData.value === null ? \"\" : cellData.value.toLocaleString()\r\n              }\r\n              editFieldType=\"text\"\r\n            ></DataTable.Column>\r\n\r\n            <DataTable.Column\r\n              className=\"compColHeight disabledColumn colminWidth\"\r\n              key=\"LoadedQuantity\"\r\n              field=\"LoadedQuantity\"\r\n              header={t(\"ShipmentOrder_LoadedQuantity\")}\r\n              // rowHeader={true}\r\n              renderer={(cellData) =>\r\n                cellData.value === null ? \"\" : cellData.value.toLocaleString()\r\n              }\r\n              editFieldType=\"text\"\r\n            ></DataTable.Column>\r\n\r\n            <DataTable.Column\r\n              className=\"compColHeight disabledColumn colminWidth\"\r\n              key=\"ReaminingQuantity\"\r\n              field=\"RemainingQuantity\"\r\n              header={t(\"ShipmentOrder_RemainingQuantity\")}\r\n              // rowHeader={true}\r\n              renderer={(cellData) =>\r\n                cellData.value === null ? \"\" : cellData.value.toLocaleString()\r\n              }\r\n              editFieldType=\"text\"\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"expandedColumn\"\r\n              initialWidth=\"200px\"\r\n              renderer={expanderTemplate}\r\n            />\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div\r\n          className=\"col col-md-8 col-lg-9 col col-xl-12\"\r\n          style={{ textAlign: \"right\" }}\r\n        >\r\n          <Button\r\n            content={t(\"ShipmentOrder_BtnForceClose\")}\r\n            disabled={\r\n              order.OrderCode === \"\" ||\r\n                modOrder.OrderStatus === Constants.orderStatus.CLOSED ||\r\n                modOrder.OrderStatus === Constants.orderStatus.FULLY_DELIVERED || !enableForceClose\r\n                ? true\r\n                : false\r\n            }\r\n            onClick={handleForceClose}\r\n          ></Button>\r\n          {order.OrderCode !== \"\" ? (\r\n            <Button\r\n              content={t(\"ShipmentOrder_ViewShipments\")}\r\n              // disabled={order.OrderCode === \"\" || modOrder.OrderStatus === Constants.orderStatus.CLOSED\r\n              //   || modOrder.OrderStatus === Constants.orderStatus.FULLY_DELIVERED ? true : false}\r\n              onClick={handleViewShipments}\r\n            ></Button>\r\n          ) : null}\r\n\r\n          {order.OrderCode !== \"\" ? (\r\n            <Button\r\n              content={t(\"Print Schedule\")}\r\n              onClick={printScheduleClick}\r\n            ></Button>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    //   )}\r\n    // </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport { emptyOrder } from \"../../../JS/DefaultEntities\";\r\nimport lodash from \"lodash\";\r\nimport { functionGroups, fnOrder, fnKPIInformation, fnOrderForceClose } from \"../../../JS/FunctionGroups\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport OrderDetails from \"../../UIBase/Details/OrderDetails\";\r\nimport { orderValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { orderPlanValidationDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport {\r\n  orderAttributeEntity,\r\n  orderItemAttributeEntity,\r\n} from \"../../../JS/AttributeEntity\";\r\nimport TruckShipmentProject from \"../../Composite/Entity/TruckShipmentComposite\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button } from \"@scuf/common\";\r\nimport * as DateFieldsInEntities from \"../../../JS/DateFieldsInEntities\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { kpiOrderDetail } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\n\r\nclass OrderDetailsComposite extends Component {\r\n  state = {\r\n    order: {},\r\n    modOrder: {},\r\n    modOrderItems: [],\r\n    validationErrors: Utilities.getInitialValidationErrors(orderValidationDef),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    terminalOptions: [],\r\n    volumeUOMOptions: [],\r\n    weightUOMOptions: [],\r\n    selectedPlanRow: [],\r\n    finishedProductOptions: [],\r\n    customerOptions: [],\r\n    attributeMetaDataList: [],\r\n    compartmentAttributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    expandedRows: [],\r\n    isShowTruckShipment: false,\r\n    isShowBackButton: false,\r\n    orderKPIList: [],\r\n    enableForceClose: false,\r\n    showAuthenticationLayout: false,\r\n    showForceCloseAuthenticationLayout: false,\r\n    tempOrder: {},\r\n  };\r\n\r\n  // terminalOptions = [];\r\n\r\n  componentDidMount() {\r\n    Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n    let isNewOrder = false;\r\n    if (this.props.selectedRow.Common_Code === undefined) isNewOrder = true;\r\n    //this.getOrder(isNewOrder);\r\n    this.getAttributes(isNewOrder);\r\n    this.getTerminalList();\r\n    this.getUOMList();\r\n    this.getFinishedProductList();\r\n    this.getCustomerList();\r\n  }\r\n\r\n  getAttributes(isNewOrder) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [orderAttributeEntity, orderItemAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.ORDER\r\n              ),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.ORDER\r\n                ),\r\n              compartmentAttributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.ORDERITEM\r\n              ),\r\n            },\r\n            () => this.getOrder(isNewOrder)\r\n          );\r\n        } else {\r\n          console.log(\"Failed to get Attributes\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Attributes:\", error);\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.order.OrderCode !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getOrder(true);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"OrderDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getCustomerList() {\r\n    axios(\r\n      RestAPIs.GetCustomerDestinations +\r\n      \"?TransportationType=\" +\r\n      Constants.TransportationType.ROAD +\r\n      \"&ShareholderCode=\" +\r\n      this.props.selectedShareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    ).then((response) => {\r\n      var result = response.data;\r\n      if (result.IsSuccess === true) {\r\n        if (Array.isArray(result.EntityResult)) {\r\n          let shareholderCustomers = result.EntityResult.filter(\r\n            (shareholderCust) =>\r\n              shareholderCust.ShareholderCode === this.props.selectedShareholder\r\n          );\r\n          if (shareholderCustomers.length > 0) {\r\n            let customerDestinationOptions =\r\n              shareholderCustomers[0].CustomerDestinationsList;\r\n            let customerOptions = Object.keys(customerDestinationOptions);\r\n            customerOptions = Utilities.transferListtoOptions(customerOptions);\r\n            this.setState({ customerOptions });\r\n          } else {\r\n            console.log(\"no customers identified for shareholder\");\r\n          }\r\n\r\n          // let finishedProductOptions = Utilities.transferListtoOptions(\r\n          //   result.EntityResult\r\n          // );\r\n          // this.setState({ finishedProductOptions });\r\n        } else {\r\n          console.log(\"customerdestinations not identified for shareholder\");\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getFinishedProductList() {\r\n    axios(\r\n      RestAPIs.GetFinishedProductCodes +\r\n      \"?ShareholderCode=\" +\r\n      this.props.selectedShareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    ).then((response) => {\r\n      var result = response.data;\r\n      if (result.IsSuccess === true) {\r\n        if (\r\n          Array.isArray(result.EntityResult) &&\r\n          result.EntityResult.length > 0\r\n        ) {\r\n          let finishedProductOptions = Utilities.transferListtoOptions(\r\n            result.EntityResult\r\n          );\r\n          this.setState({ finishedProductOptions });\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getUOMList() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        // console.log(response);\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let weightUOMs = result.EntityResult.MASS;\r\n            let weightUOMOptions = [];\r\n            weightUOMs.forEach((weightOption) => {\r\n              weightUOMOptions.push({\r\n                text: weightOption,\r\n                value: weightOption,\r\n              });\r\n            });\r\n\r\n            let volumeUOMs = result.EntityResult.VOLUME;\r\n            let volumeUOMOptions = [];\r\n            volumeUOMs.forEach((volumeOption) => {\r\n              volumeUOMOptions.push({\r\n                text: volumeOption,\r\n                value: volumeOption,\r\n              });\r\n            });\r\n\r\n            // let lengthUOMs = result.EntityResult.LENGTH;\r\n            // let lengthUOMOptions = [];\r\n            // lengthUOMs.forEach((lengthOption) => {\r\n            //   lengthUOMOptions.push({\r\n            //     text: lengthOption,\r\n            //     value: lengthOption,\r\n            //   });\r\n            // });\r\n\r\n            this.setState({\r\n              volumeUOMOptions,\r\n              weightUOMOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getUOM:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getUOM:\", error);\r\n      });\r\n  }\r\n\r\n  getTerminalList() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetTerminals,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [this.props.selectedShareholder],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            Array.isArray(result.EntityResult) &&\r\n            result.EntityResult.length > 0\r\n          )\r\n            this.setState({ terminalOptions: result.EntityResult });\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(\"OrderComposite:Error occured on getTerminalsList\", err);\r\n    }\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      let modOrder = lodash.cloneDeep(this.state.modOrder);\r\n      modOrder[propertyName] = data;\r\n      //this.setState({ modOrder });\r\n\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      if (modOrder.Active === this.state.order.Active) {\r\n        if (\r\n          this.state.order.Remarks === modOrder.Remarks ||\r\n          modOrder.Remarks === \"\"\r\n        ) {\r\n          validationErrors.Remarks = \"\";\r\n        }\r\n        // if (modOrder.Remarks === \"\")\r\n        //   modOrder.Remarks = this.state.order.Remarks;\r\n      }\r\n      if (propertyName === \"Active\") {\r\n        if (modOrder.Active !== this.state.order.Active) {\r\n          modOrder.Remarks = \"\";\r\n        }\r\n      }\r\n      if (orderValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          orderValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n      this.setState({ validationErrors, modOrder }, () => {\r\n        if (propertyName === \"TerminalCodes\") {\r\n          this.terminalSelectionChange(data);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"OrderDetailsComposite:Error occured on handleChange\", error);\r\n    }\r\n  };\r\n\r\n  handleRowSelectionChange = (planRow) => {\r\n    this.setState({ selectedPlanRow: planRow });\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    console.log(`handleCellDataEdit() called... newVal: ${JSON.stringify(newVal)}, cellData: ${JSON.stringify(cellData)}`);\r\n    let modOrderItems = lodash.cloneDeep(this.state.modOrderItems);\r\n    console.log(`handleCellDataEdit() modOrderItems: ${JSON.stringify(modOrderItems)}`);\r\n    // modOrderItems[cellData.rowIndex][cellData.field] = newVal; ////#Swapnil GES-IND 17Sep24\r\n\r\n    ////#Swapnil GES-IND 17Sep24\r\n    if (cellData.field !== 'ScheduledDate') {\r\n      modOrderItems[cellData.rowIndex][cellData.field] = newVal;\r\n    } else {\r\n      const date = new Date(newVal);\r\n      const datePart = date.toISOString().split('T')[0];\r\n      modOrderItems[cellData.rowIndex][cellData.field] = datePart;\r\n    }\r\n    ////End\r\n\r\n    console.log(`handleCellDataEdit() modOrderItems: ${JSON.stringify(modOrderItems)}`);\r\n    this.setState({ modOrderItems, });\r\n    console.log(`handleCellDataEdit() this.state.modOrderItems: ${JSON.stringify(this.state.modOrderItems)}`);\r\n  };\r\n\r\n  handleAddPlan = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        const date = new Date();\r\n        const datePart = date.toISOString().split('T')[0];\r\n\r\n        let newPlan = {\r\n          // primaryKey: null,\r\n          Attributes: [],\r\n          BlockedQuantity: null,\r\n          FinishedProductCode: null,\r\n          FinishdedProductType: null,\r\n          ItemCode: null,\r\n          LoadedQuantity: null,\r\n          LotNumber: null,\r\n          OrderCode: null,\r\n          Quantity: null,\r\n          QuantityUOM:\r\n            this.props.userDetails.EntityResult.PageAttibutes\r\n              .DefaultQtyUOMForTransactionUI.ROAD,\r\n          RemainingQuantity: null,\r\n          ShareholderCode: null,\r\n\r\n          ////#Swapnil GES-IND 17Sep24\r\n          \r\n          ScheduledDate:datePart, //Utilities.convertStringToCommonDateFormat(new Date()),\r\n          ////End\r\n        };\r\n        let modOrderItems = lodash.cloneDeep(this.state.modOrderItems);\r\n        console.log(`handleAddPlan() after lodash modOrderItems:${JSON.stringify(modOrderItems)}`);\r\n\r\n        newPlan.SeqNumber = Utilities.getMaxSeqNumberfromListObject(modOrderItems);\r\n\r\n        modOrderItems.push(newPlan);\r\n        console.log(`handleAddPlan() after seqNumber modOrderItems:${JSON.stringify(modOrderItems)}`);\r\n\r\n        this.setState(\r\n          {\r\n            modOrderItems,\r\n            selectedPlanRow: [],\r\n          },\r\n          () => {\r\n            if (\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode === false\r\n            ) {\r\n              var attributeMetaDataList = lodash.cloneDeep(\r\n                this.state.compartmentAttributeMetaDataList\r\n              );\r\n              if (attributeMetaDataList.length > 0)\r\n                this.formCompartmentAttributes([\r\n                  attributeMetaDataList[0].TerminalCode,\r\n                ]);\r\n            } else\r\n              this.formCompartmentAttributes(this.state.modOrder.TerminalCodes);\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.log(\r\n          \"OrderDetailsComposite:Error occured on handleAddCompartment\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDeletePlan = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedPlanRow != null &&\r\n          this.state.selectedPlanRow.length > 0\r\n        ) {\r\n          if (this.state.modOrderItems.length > 0) {\r\n            let modOrderItems = lodash.cloneDeep(this.state.modOrderItems);\r\n\r\n            this.state.selectedPlanRow.forEach((obj, index) => {\r\n              modOrderItems = modOrderItems.filter((plan, cindex) => {\r\n                return plan.SeqNumber !== obj.SeqNumber;\r\n              });\r\n            });\r\n\r\n            // let start = 1;\r\n            // modOrder.OrderItems.forEach((plan) => {\r\n            //   plan.primaryKey = start;\r\n            //   ++start;\r\n            // });\r\n\r\n            this.setState({ modOrderItems });\r\n          }\r\n        }\r\n\r\n        this.setState({ selectedPlanRow: [] });\r\n      } catch (error) {\r\n        console.log(\r\n          \"OrderDetailsComposite:Error occured on handleDeleteCompartment\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  getOrder(isNewOrder) {\r\n    console.log(`getOrder() called... isNewOrder: ${isNewOrder}`);\r\n    if (isNewOrder) {\r\n      //this.terminalOptions = [];\r\n      emptyOrder.OrderStartDate = new Date();\r\n      // emptyOrder.OrderEndDate = new Date();\r\n      emptyOrder.TerminalCodes =\r\n        this.state.terminalOptions.length === 1\r\n          ? [...this.state.terminalOptions]\r\n          : [];\r\n      emptyOrder.OrderDate = new Date();\r\n      this.handleResetAttributeValidationError();\r\n      this.setState(\r\n        {\r\n          order: lodash.cloneDeep(emptyOrder),\r\n          modOrder: lodash.cloneDeep(emptyOrder),\r\n          modOrderItems: [],\r\n          isReadyToRender: true,\r\n          modAttributeMetaDataList: [],\r\n          orderKPIList: [],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnOrder\r\n          ),\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode === false)\r\n            this.localNodeAttribute();\r\n        }\r\n      );\r\n\r\n      return;\r\n    }\r\n\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.orderCode,\r\n        value:\r\n          this.props.selectedRow.Common_Code === undefined\r\n            ? this.state.modOrder.OrderCode\r\n            : this.props.selectedRow.Common_Code,\r\n      },\r\n    ];\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.orderCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetOrder,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n\r\n        if (result.IsSuccess === true) {\r\n          console.log(`getOrder() called...1 result.EntityResult: ${JSON.stringify(result.EntityResult)}`);\r\n\r\n          let modOrderItems = [];\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult.OrderItems !== null &&\r\n            result.EntityResult.OrderItems.length > 0\r\n          ) {\r\n            modOrderItems = Utilities.addSeqNumberToListObject(\r\n              lodash.cloneDeep(result.EntityResult.OrderItems)\r\n            );\r\n          }\r\n          console.log(`getOrder() called...2 result.EntityResult: ${JSON.stringify(result.EntityResult)}`);\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              order: lodash.cloneDeep(result.EntityResult),\r\n              modOrder: lodash.cloneDeep(result.EntityResult),\r\n              modOrderItems: lodash.cloneDeep(modOrderItems),\r\n              saveEnabled:\r\n                Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnOrder\r\n                ) &&\r\n                result.EntityResult.OrderStatus !==\r\n                Constants.orderStatus.CLOSED &&\r\n                result.EntityResult.OrderStatus !==\r\n                Constants.orderStatus.FULLY_DELIVERED,\r\n              enableForceClose: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnOrder\r\n              ),\r\n            },\r\n\r\n            () => {\r\n              this.getKPIList(this.props.selectedShareholder, result.EntityResult.OrderCode)\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            modOrder: lodash.cloneDeep(emptyOrder),\r\n            order: lodash.cloneDeep(emptyOrder),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetOrder:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Order:\", error);\r\n      });\r\n  }\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(attributeMetaDataList),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"OrderDetailsComposite:Error occured on handleResetAttributeValidationError\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modAttributeMetaDataList = [];\r\n\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      var modOrder = lodash.cloneDeep(this.state.modOrder);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        });\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.forEach(function (attributeMetaData) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue = modOrder.Attributes.find(\r\n                (orderAttribute) => {\r\n                  return orderAttribute.TerminalCode === terminal;\r\n                }\r\n              );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n\r\n      modAttributeMetaDataList = [];\r\n      modAttributeMetaDataList = attributesTerminalsList;\r\n      modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modAttributeMetaDataList\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n\r\n      this.formCompartmentAttributes(selectedTerminals);\r\n\r\n      this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"OrderDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  formCompartmentAttributes(selectedTerminals) {\r\n    console.log(`formCompartmentAttributes() called... selectedTerminals: ${JSON.stringify(selectedTerminals)}`);\r\n    try {\r\n      let attributes = lodash.cloneDeep(\r\n        this.state.compartmentAttributeMetaDataList\r\n      );\r\n\r\n      attributes = attributes.filter(function (attTerminal) {\r\n        return selectedTerminals.some(function (selTerminal) {\r\n          return attTerminal.TerminalCode === selTerminal;\r\n        });\r\n      });\r\n      let modOrderItems = lodash.cloneDeep(this.state.modOrderItems);\r\n      console.log(`formCompartmentAttributes() modOrderItems: ${JSON.stringify(modOrderItems)}`);\r\n\r\n      modOrderItems.forEach((comp) => {\r\n        let compAttributes = [];\r\n        comp.ScheduledDate = \"\";\r\n        attributes.forEach((att) => {\r\n          att.attributeMetaDataList.forEach((attribute) => {\r\n            compAttributes.push({\r\n              AttributeCode: attribute.Code,\r\n              AttributeName: attribute.DisplayName,\r\n              AttributeValue: attribute.DefaultValue,\r\n              TerminalCode: attribute.TerminalCode,\r\n              IsMandatory: attribute.IsMandatory,\r\n              DataType: attribute.DataType,\r\n              IsReadonly: attribute.IsReadonly,\r\n              MinValue: attribute.MinValue,\r\n              MaxValue: attribute.MaxValue,\r\n              ValidationFormat: attribute.ValidationFormat,\r\n              compSequenceNo: \"\",\r\n            });\r\n          });\r\n        });\r\n        let attributesforNewComp = lodash.cloneDeep(compAttributes);\r\n\r\n        if (\r\n          comp.Code === null &&\r\n          (comp.AttributesforUI === null || comp.AttributesforUI === undefined)\r\n        ) {\r\n          comp.AttributesforUI = [];\r\n          attributesforNewComp.forEach((assignedAttributes) => {\r\n            assignedAttributes.compSequenceNo = comp.SeqNumber;\r\n            comp.AttributesforUI.push(assignedAttributes);\r\n          });\r\n        } else {\r\n          if (\r\n            comp.AttributesforUI !== null &&\r\n            comp.AttributesforUI !== undefined\r\n          ) {\r\n            comp.AttributesforUI = comp.AttributesforUI.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n\r\n            compAttributes = compAttributes.filter(function (attTerminal) {\r\n              return !comp.AttributesforUI.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal.TerminalCode;\r\n              });\r\n            });\r\n          } else comp.AttributesforUI = [];\r\n\r\n          let tempCompAttributes = lodash.cloneDeep(compAttributes);\r\n          if (\r\n            Array.isArray(comp.Attributes) &&\r\n            comp.Attributes !== null &&\r\n            comp.Attributes !== undefined &&\r\n            comp.Attributes.length > 0\r\n          ) {\r\n            let selectedTerminalAttributes = comp.Attributes.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n            selectedTerminalAttributes.forEach((att) => {\r\n              att.ListOfAttributeData.forEach((attData) => {\r\n                let tempAttIndex = tempCompAttributes.findIndex(\r\n                  (item) =>\r\n                    item.TerminalCode === att.TerminalCode &&\r\n                    item.AttributeCode === attData.AttributeCode\r\n                );\r\n                if (tempAttIndex >= 0) {\r\n                  tempCompAttributes[tempAttIndex].AttributeValue = attData.AttributeValue;\r\n\r\n                  ////#Swapnil GES-IND 19Sep24\r\n                  comp.ScheduledDate = attData.AttributeValue;\r\n                  ////End\r\n                }\r\n              });\r\n            });\r\n            tempCompAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo = comp.SeqNumber;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          } else {\r\n            compAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo = comp.SeqNumber;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          }\r\n        }\r\n        this.toggleExpand(comp, true, true);\r\n        if (comp.AttributesforUI !== undefined && comp.AttributesforUI != null)\r\n          comp.AttributesforUI = Utilities.compartmentAttributesConvertoDecimal(\r\n            comp.AttributesforUI\r\n          );\r\n        comp.AttributesforUI = Utilities.addSeqNumberToListObject(\r\n          comp.AttributesforUI\r\n        );\r\n      });\r\n      console.log(`formCompartmentAttributes() before save state modOrderItems: ${JSON.stringify(modOrderItems)}`);\r\n      this.setState({ modOrderItems });\r\n    } catch (error) {\r\n      console.log(\r\n        \"OrderDetailsComposite:Error in forming Compartment Attributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  fillAttributeDetails(modOrder, attributeList) {\r\n    try {\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modOrder.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n\r\n      // For Compartment Attributes\r\n      modOrder.OrderItems.forEach((comp) => {\r\n        if (comp.AttributesforUI !== undefined && comp.AttributesforUI != null)\r\n          comp.AttributesforUI =\r\n            Utilities.compartmentAttributesDatatypeConversion(\r\n              comp.AttributesforUI\r\n            );\r\n        let selectedTerminals = [];\r\n        if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n          selectedTerminals = lodash.cloneDeep(modOrder.TerminalCodes);\r\n        else {\r\n          var compAttributeMetaDataList = lodash.cloneDeep(\r\n            this.state.compartmentAttributeMetaDataList\r\n          );\r\n          if (compAttributeMetaDataList.length > 0)\r\n            selectedTerminals = [compAttributeMetaDataList[0].TerminalCode];\r\n        }\r\n        let terminalAttributes = [];\r\n        comp.Attributes = [];\r\n        selectedTerminals.forEach((terminal) => {\r\n          if (\r\n            comp.AttributesforUI !== null &&\r\n            comp.AttributesforUI !== undefined\r\n          )\r\n            terminalAttributes = comp.AttributesforUI.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return attTerminal.TerminalCode === terminal;\r\n            });\r\n\r\n          let attribute = {\r\n            ListOfAttributeData: [],\r\n          };\r\n\r\n          attribute.TerminalCode = terminal;\r\n          terminalAttributes.forEach((termAtt) => {\r\n            if (termAtt.AttributeValue !== \"\" || termAtt.IsMandatory === true)\r\n              attribute.ListOfAttributeData.push({\r\n                AttributeCode: termAtt.AttributeCode,\r\n                AttributeValue: termAtt.AttributeValue,\r\n              });\r\n            //})\r\n            //comp.Attributes.push(attribute);\r\n          });\r\n          if (\r\n            attribute.ListOfAttributeData !== null &&\r\n            attribute.ListOfAttributeData !== undefined &&\r\n            attribute.ListOfAttributeData.length > 0\r\n          )\r\n            comp.Attributes.push(attribute);\r\n        });\r\n      });\r\n      return modOrder;\r\n    } catch (error) {\r\n      console.log(\r\n        \"OrderDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList) &&\r\n        attributeMetaDataList.length > 0\r\n      )\r\n        this.terminalSelectionChange([attributeMetaDataList[0].TerminalCode]);\r\n      else {\r\n        var compAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.compartmentAttributeMetaDataList\r\n        );\r\n        if (\r\n          Array.isArray(compAttributeMetaDataList) &&\r\n          compAttributeMetaDataList.length > 0\r\n        )\r\n          this.formCompartmentAttributes([\r\n            compAttributeMetaDataList[0].TerminalCode,\r\n          ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"OrderDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      let validationErrors = { ...this.state.validationErrors };\r\n      let modOrder = { ...this.state.modOrder };\r\n      validationErrors[propertyName] = error;\r\n      modOrder[propertyName] = value;\r\n      this.setState({ validationErrors, modOrder });\r\n    } catch (error) {\r\n      console.log(\r\n        \"OrderDetailsComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    console.log(`handleAttributeDataChange() called... attribute: ${JSON.stringify(attribute)} value: ${value}`);\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors, modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"OrderDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCompAttributeCellDataEdit = (compAttribute, value) => {\r\n    let modOrderItems = lodash.cloneDeep(this.state.modOrderItems);\r\n    let compIndex = modOrderItems.findIndex(\r\n      (item) => item.SeqNumber === compAttribute.rowData.compSequenceNo\r\n    );\r\n    if (compIndex >= 0)\r\n      modOrderItems[compIndex].AttributesforUI[\r\n        //compAttribute.rowIndex\r\n        compAttribute.rowData.SeqNumber - 1\r\n      ].AttributeValue = value;\r\n    this.setState({ modOrderItems });\r\n    if (compIndex >= 0) this.toggleExpand(modOrderItems[compIndex], true, true);\r\n  };\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      const modOrder = lodash.cloneDeep(this.state.modOrder);\r\n      if (checked) modOrder.TerminalCodes = [...this.state.terminalOptions];\r\n      else modOrder.TerminalCodes = [];\r\n      this.setState({ modOrder });\r\n      this.terminalSelectionChange(modOrder.TerminalCodes);\r\n    } catch (error) {\r\n      console.log(\r\n        \"OrderComposite:Error occured on handleAllTerminasChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modOrder = lodash.cloneDeep(this.state.modOrder);\r\n\r\n      modOrder.ShareholderCode = this.props.selectedShareholder;\r\n\r\n      if (this.state.order.OrderCode === \"\") modOrder.OrderDate = new Date();\r\n\r\n      modOrder.OrderItems = lodash.cloneDeep(this.state.modOrderItems);\r\n\r\n      if (modOrder.OrderItems !== null && modOrder.OrderItems.length > 0) {\r\n        modOrder.OrderItems.forEach((plan) => {\r\n          plan.OrderCode = modOrder.OrderCode;\r\n          plan.ShareholderCode = modOrder.ShareholderCode;\r\n          if (plan.Quantity !== null && plan.Quantity !== \"\")\r\n            plan.Quantity = plan.Quantity.toLocaleString();\r\n          delete plan.SeqNumber;\r\n\r\n          if (plan.AttributesforUI !== undefined && plan.AttributesforUI != null) {\r\n            ////#Swapnil GES-IND 18Sep24\r\n            plan.AttributesforUI.forEach((item) => {\r\n              if (item.AttributeCode === 'ScheduledDate') {\r\n                const date = new Date(plan.ScheduledDate);\r\n                const datePart = date.toISOString().split('T')[0];\r\n                console.log(`datePart: ${datePart}`);\r\n                item.AttributeValue = datePart;\r\n              }\r\n            });\r\n            ////End\r\n            plan.AttributesforUI = Utilities.compartmentAttributesConverttoLocaleString(plan.AttributesforUI);\r\n          }\r\n        });\r\n      }\r\n      return modOrder;\r\n    } catch (err) {\r\n      console.log(\"OrderDetailsComposite:Error occured on filldetails\", err);\r\n    }\r\n  }\r\n  convertStringtoDecimal(modOrder, attributeList) {\r\n    try {\r\n      modOrder.OrderItems.forEach((plan) => {\r\n        plan.Quantity = Utilities.convertStringtoDecimal(plan.Quantity);\r\n      });\r\n      modOrder = this.fillAttributeDetails(modOrder, attributeList);\r\n      return modOrder;\r\n    } catch (err) {\r\n      console.log(\"convertStringtoDecimal error order details\", err);\r\n    }\r\n  }\r\n\r\n\r\n  addUpdateOrder = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempOrder = lodash.cloneDeep(this.state.tempOrder);\r\n\r\n      this.state.order.OrderCode === \"\"\r\n        ? this.createOrder(tempOrder)\r\n        : this.updateOrder(tempOrder);\r\n    } catch (error) {\r\n      console.log(\"Order Composite : Error in addUpdateOrder\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n  handleSave = () => {\r\n    console.log(`handleSave() called...`);\r\n    try {\r\n      let returnValue = Object.values(this.state.validationErrors).every(\r\n        function (value) {\r\n          return value === \"\";\r\n        }\r\n      );\r\n      if (returnValue) {\r\n        // this.setState({ saveEnabled: false });\r\n        let modOrder = this.fillDetails();\r\n        console.log(`handleSave() modOrder:${JSON.stringify(modOrder)}`);\r\n\r\n        let attributeList = Utilities.attributesConverttoLocaleString(\r\n          this.state.modAttributeMetaDataList\r\n        );\r\n        console.log(`handleSave() attributeList:${JSON.stringify(attributeList)}`);\r\n\r\n        if (this.validateSave(modOrder, attributeList)) {\r\n          modOrder = this.convertStringtoDecimal(modOrder, attributeList);\r\n          //if (modOrder !== null)\r\n          modOrder = Utilities.convertDatesToString(\r\n            DateFieldsInEntities.DatesInEntity.Order,\r\n            modOrder\r\n          );\r\n\r\n\r\n          let showAuthenticationLayout =\r\n            this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n              ? true\r\n              : false;\r\n          let tempOrder = lodash.cloneDeep(modOrder);\r\n          this.setState({ showAuthenticationLayout, tempOrder }, () => {\r\n            if (showAuthenticationLayout === false) {\r\n              this.addUpdateOrder();\r\n            }\r\n          });\r\n\r\n\r\n          modOrder = Utilities.convertStringToDates(\r\n            DateFieldsInEntities.DatesInEntity.Order,\r\n            modOrder\r\n          );\r\n          // else this.setState({ saveEnabled: true });\r\n        } else {\r\n          this.setState({ saveEnabled: true });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"OrderDetailsComposite:Error occured on handleSave\", error);\r\n    }\r\n  };\r\n\r\n  validateSave(modOrder, attributeList) {\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(orderValidationDef).forEach(function (key) {\r\n      if (modOrder[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          orderValidationDef[key],\r\n          modOrder[key]\r\n        );\r\n    });\r\n\r\n    if (modOrder.Active !== this.state.order.Active) {\r\n      if (modOrder.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"ShipmentOrder_RemarksRequired\";\r\n      }\r\n    }\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"OrderInfo_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n\r\n    let returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    else return returnValue;\r\n\r\n    if (modOrder.OrderItems.length > 0) {\r\n      modOrder.OrderItems.forEach((com) => {\r\n        orderPlanValidationDef.forEach((col) => {\r\n          let err = \"\";\r\n\r\n          if (col.validator !== undefined) {\r\n            err = Utilities.validateField(col.validator, com[col.field]);\r\n          }\r\n\r\n          // if (col.field === \"Quantity\" && err === \"\") {\r\n          //   let quantity = Utilities.convertStringtoDecimal(\r\n          //     com.Quantity\r\n          //   ).toString();\r\n          //   if (quantity.length > 15) err = \"Common_MaxLengthExceeded\";\r\n          // }\r\n          if (err !== \"\") {\r\n            notification.messageResultDetails.push({\r\n              keyFields: [col.displayName],\r\n              keyValues: [com[col.field]],\r\n              isSuccess: false,\r\n              errorMessage: err,\r\n            });\r\n          }\r\n        });\r\n        if (com.AttributesforUI !== null && com.AttributesforUI !== undefined) {\r\n          com.AttributesforUI.forEach((item) => {\r\n            let errMsg = Utilities.valiateAttributeField(\r\n              item,\r\n              item.AttributeValue\r\n            );\r\n            if (errMsg !== \"\") {\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                notification.messageResultDetails.push({\r\n                  keyFields: [\"CompAttributeTerminal\", item.AttributeName],\r\n                  keyValues: [item.TerminalCode, item.AttributeValue],\r\n                  isSuccess: false,\r\n                  errorMessage: errMsg,\r\n                });\r\n              } else {\r\n                notification.messageResultDetails.push({\r\n                  keyFields: [item.AttributeName],\r\n                  keyValues: [item.AttributeValue],\r\n                  isSuccess: false,\r\n                  errorMessage: errMsg,\r\n                });\r\n              }\r\n            }\r\n          });\r\n        }\r\n        this.toggleExpand(com, true, true);\r\n      });\r\n    } else {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [\"ShipmentOrder_OrderCode\"],\r\n        keyValues: [modOrder.OrderCode],\r\n        isSuccess: false,\r\n        errorMessage: \"ShipmentOrder_MandatoryOrderPlan\",\r\n      });\r\n    }\r\n\r\n    this.setState({ validationErrors });\r\n    returnValue = Object.values(validationErrors).every(function (value) {\r\n      return value === \"\";\r\n    });\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modOrder, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  toggleExpand = (data, open, isTerminalAdded = false) => {\r\n    //console.log(\"Data in Toggle\", data)\r\n    let expandedRows = this.state.expandedRows;\r\n    let expandedRowIndex = expandedRows.findIndex(\r\n      (item) => item.SeqNumber === data.SeqNumber\r\n    );\r\n    if (open) {\r\n      if (isTerminalAdded && expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n        expandedRows.push(data);\r\n      } else if (expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n      }\r\n    } else {\r\n      if (expandedRowIndex >= 0) {\r\n        expandedRows = expandedRows.filter(\r\n          (x) => x.Code !== data.Code && x.SeqNumber !== data.SeqNumber\r\n        );\r\n      } else expandedRows.push(data);\r\n    }\r\n    this.setState({ expandedRows });\r\n  };\r\n\r\n  handleViewShipments = () => {\r\n    this.setState(\r\n      {\r\n        isShowTruckShipment: true,\r\n        isShowBackButton: true,\r\n      },\r\n      () => this.props.handleOperationVisibility(false)\r\n    );\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.setState(\r\n      {\r\n        isShowTruckShipment: false,\r\n        isShowBackButton: false,\r\n      },\r\n      () => {\r\n        this.props.handleOperationVisibility(true);\r\n        this.getOrder(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleShowBackButton = (status) => {\r\n    this.setState({\r\n      isShowBackButton: status,\r\n    });\r\n  };\r\n\r\n  forceCloseOperation = () => {\r\n\r\n    let modOrder = lodash.cloneDeep(this.state.tempOrder);\r\n\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.orderCode,\r\n        value: modOrder.OrderCode,\r\n      },\r\n    ];\r\n\r\n    let entity = {\r\n      OrderCode: modOrder.OrderCode,\r\n      ShareholderCode: this.props.selectedShareholder,\r\n      ForceCloseReason: modOrder.Remarks,\r\n      ForceClose: true,\r\n    };\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.orderCode,\r\n      KeyCodes: keyCode,\r\n      Entity: entity,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"OrderInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentOrder_OrderCode\"],\r\n          keyValues: [modOrder.OrderCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateOrderStatus,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getOrder(false);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in UpdateOrderStatus:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modOrder, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modOrder, \"add\", notification);\r\n      });\r\n  };\r\n\r\n\r\n  handleForceClose = () => {\r\n    let modOrder = lodash.cloneDeep(this.state.modOrder);\r\n\r\n    if (modOrder.Remarks === \"\") {\r\n      let validationErrors = this.state.validationErrors;\r\n      validationErrors[\"Remarks\"] = \"ShipmentOrder_RemarksRequired\";\r\n      this.setState({ validationErrors });\r\n    } else {\r\n\r\n      let showForceCloseAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempOrder = lodash.cloneDeep(modOrder);\r\n      this.setState({ showForceCloseAuthenticationLayout, tempOrder }, () => {\r\n        if (showForceCloseAuthenticationLayout === false) {\r\n          this.forceCloseOperation();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  createOrder(modOrder) {\r\n    this.handleAuthenticationClose();\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.orderCode,\r\n        value: modOrder.OrderCode,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.orderCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modOrder,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"OrderInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentOrder_OrderCode\"],\r\n          keyValues: [modOrder.OrderCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateOrder,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnOrder\r\n            ),\r\n          });\r\n\r\n          this.getOrder(false);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnOrder\r\n            ),\r\n          });\r\n          console.log(\"Error in CreateOrder:\", result.ErrorList);\r\n        }\r\n\r\n        this.props.onSaved(this.state.modOrder, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnOrder\r\n          ),\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modOrder, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateOrder(modOrder) {\r\n    this.handleAuthenticationClose();\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.orderCode,\r\n        value: modOrder.OrderCode,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.orderCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modOrder,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"OrderInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentOrder_OrderCode\"],\r\n          keyValues: [modOrder.OrderCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateOrder,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnOrder\r\n            ),\r\n          });\r\n          this.getOrder(false);\r\n        } else {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnOrder\r\n            ),\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in UpdateOrder:\", result.ErrorList);\r\n        }\r\n\r\n        this.props.onSaved(this.state.modOrder, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modOrder, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnOrder\r\n          ),\r\n        });\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      let modOrderItems = Utilities.addSeqNumberToListObject(\r\n        lodash.cloneDeep(this.state.order.OrderItems)\r\n      );\r\n      this.setState(\r\n        {\r\n          modOrder: lodash.cloneDeep(this.state.order),\r\n          modOrderItems: modOrderItems,\r\n          modAttributeMetaDataList: [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(this.state.order.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n      // if (this.state.order.Code === \"\") {\r\n      //   //let terminalOptions = { ...this.state.terminalOptions };\r\n      //   let terminalOptions = [];\r\n      //   this.setState({ terminalOptions });\r\n      // }\r\n      let validationErrors = { ...this.state.validationErrors };\r\n      Object.keys(validationErrors).forEach((key) => {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState({ validationErrors });\r\n    } catch (error) {\r\n      console.log(\"OrderDetailsComposite:Error occured on handleReset\", error);\r\n    }\r\n  };\r\n  //Get KPI for order\r\n  getKPIList(shareholder, orderCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      let objKPIRequestData = {\r\n        PageName: kpiOrderDetail,\r\n        TransportationType: Constants.TransportationType.ROAD,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder }, { key: \"OrderCode\", value: orderCode }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ orderKPIList: result.EntityResult.ListKPIDetails });\r\n          } else {\r\n            this.setState({ orderKPIList: [] });\r\n            console.log(\"Error in order KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Order KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  handleOperation() {\r\n    if (this.state.showAuthenticationLayout)\r\n      return this.addUpdateOrder;\r\n    else if (this.state.showForceCloseAuthenticationLayout)\r\n      return this.forceCloseOperation;\r\n\r\n  }\r\n\r\n  getFunctionGroupName() {\r\n    if (this.state.showForceCloseAuthenticationLayout)\r\n      return fnOrderForceClose;\r\n    else if (this.state.showAuthenticationLayout)\r\n      return fnOrder;\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n      showForceCloseAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  ////#Swapnil GES-IND 20Sep24\r\n  printScheduleClick = () => {\r\n    console.log(`printScheduleClick called...`);\r\n    this.printSchedule();\r\n  };\r\n\r\n  printSchedule = () => {\r\n    console.log(`printSchedule() called...`);\r\n    let order = lodash.cloneDeep(this.state.order);\r\n    console.log(`printSchedule() order: ${JSON.stringify(order)}`);\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewOrderStatus_PrintScheduleStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Order\"],\r\n          keyValues: [order.OrderCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.handlePrintSchedule(\r\n      order.OrderCode,\r\n      this.props.selectedShareholder,\r\n      this.props.tokenDetails.tokenInfo,\r\n      (result) => {\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        notification.messageResultDetails[0].errorMessage = result.ErrorList[0];\r\n\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  handlePrintSchedule(orderCode, shCode, token, callback) {\r\n    console.log(`handlePrintSchedule() called... orderCode: ${orderCode} shCode: ${shCode}`);\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.OperationName,\r\n        value: 'PRINT_ORDER_SCHEDULE',\r\n      },\r\n    ];\r\n    var input = { ShareholderCode: shCode, OrderCode: orderCode };\r\n    console.log(`handlePrintSchedule() input: ${JSON.stringify(input)}`);\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n      Input: input,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.ProjectPost,\r\n      Utilities.getAuthenticationObjectforPost(obj, token)\r\n    )\r\n      .then((response) => {\r\n\r\n        var result = response.data;\r\n        console.log(`handlePrintSchedule() result: ${JSON.stringify(result)}`);\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while handlePrintSchedule:\", error);\r\n      });\r\n  }\r\n  ////End\r\n\r\n  render() {\r\n    let listOptions = {\r\n      terminalCodes: this.state.terminalOptions,\r\n      // orderTypeOptions: Utilities.transferListtoOptions(\r\n      //   Object.keys(Constants.orderType)\r\n      // ),\r\n      unitOfVolume: this.state.volumeUOMOptions,\r\n      unitOfWeight: this.state.weightUOMOptions,\r\n      finishedProductOptions: this.state.finishedProductOptions,\r\n      customerOptions: this.state.customerOptions,\r\n    };\r\n\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"ShipmentOrder_LastUpdated\",\r\n        fieldValue:\r\n          new Date(this.state.modOrder.LastUpdatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modOrder.LastUpdatedTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"ShipmentOrder_LastActiveTime\",\r\n        fieldValue:\r\n          this.state.modOrder.LastActiveTime !== undefined &&\r\n            this.state.modOrder.LastActiveTime !== null\r\n            ? new Date(\r\n              this.state.modOrder.LastActiveTime\r\n            ).toLocaleDateString() +\r\n            \" \" +\r\n            new Date(this.state.modOrder.LastActiveTime).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"ShipmentOrder_CreatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.modOrder.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modOrder.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        {this.state.isShowTruckShipment ? null : (\r\n          <ErrorBoundary>\r\n            <TMDetailsHeader\r\n              // entityCode={this.state.isShowTruckShipment ? this.state.order.OrderCode + \" - \" + t(\"Shipment_OtherSource\") : this.state.order.OrderCode}\r\n              entityCode={this.state.order.OrderCode}\r\n              newEntityName=\"ShipmentOrder_NewOrder\"\r\n              popUpContents={\r\n                this.state.isShowTruckShipment ? \"\" : popUpContents\r\n              }\r\n            ></TMDetailsHeader>\r\n          </ErrorBoundary>\r\n        )}\r\n        {this.state.isShowTruckShipment ? (\r\n          <ErrorBoundary>\r\n            <TruckShipmentProject\r\n              shipmentSource={Constants.shipmentFrom.Order}\r\n              shipmentSourceCode={this.state.modOrder.OrderCode}\r\n              selectedShareholder={this.props.selectedShareholder}\r\n              shipmentSourceCompartmentItems={this.state.modOrderItems}\r\n              shipmentSourceDetails={this.state.modOrder}\r\n              isShowBackButton={this.handleShowBackButton}\r\n            />\r\n          </ErrorBoundary>\r\n        ) : (\r\n          <><TMDetailsKPILayout KPIList={this.state.orderKPIList}> </TMDetailsKPILayout>\r\n            <ErrorBoundary>\r\n              <OrderDetails\r\n                order={this.state.order}\r\n                modOrder={this.state.modOrder}\r\n                modOrderItems={this.state.modOrderItems}\r\n                validationErrors={this.state.validationErrors}\r\n                listOptions={listOptions}\r\n                onFieldChange={this.handleChange}\r\n                onDateTextChange={this.handleDateTextChange}\r\n                onAllTerminalsChange={this.handleAllTerminalsChange}\r\n                handleAddPlan={this.handleAddPlan}\r\n                handleDeletePlan={this.handleDeletePlan}\r\n                selectedPlanRow={this.state.selectedPlanRow}\r\n                handleRowSelectionChange={this.handleRowSelectionChange}\r\n                handleCellDataEdit={this.handleCellDataEdit}\r\n                selectedShareholder={this.props.selectedShareholder}\r\n                isEnterpriseNode={\r\n                  this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                }\r\n                attributeValidationErrors={this.state.attributeValidationErrors}\r\n                onAttributeDataChange={this.handleAttributeDataChange}\r\n                handleCompAttributeCellDataEdit={\r\n                  this.handleCompAttributeCellDataEdit\r\n                }\r\n                modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n                toggleExpand={this.toggleExpand}\r\n                expandedRows={this.state.expandedRows}\r\n                compartmentDetailsPageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                handleForceClose={this.handleForceClose}\r\n                handleViewShipments={this.handleViewShipments}\r\n                enableForceClose={this.state.enableForceClose}\r\n\r\n                printScheduleClick={this.printScheduleClick}  ////#Swapnil GES-IND 20Sep24\r\n              ></OrderDetails>\r\n            </ErrorBoundary></>\r\n        )}\r\n        {this.state.isShowTruckShipment ? (\r\n          this.state.isShowBackButton ? (\r\n            <div className=\"row\">\r\n              <div className=\"col col-lg-8\" style={{ marginTop: \"1%\" }}>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <Button\r\n                      className=\"backButton\"\r\n                      onClick={this.handleBack}\r\n                      content={t(\"Back\")}\r\n                    ></Button>\r\n                  )}\r\n                </TranslationConsumer>\r\n              </div>\r\n            </div>\r\n          ) : null\r\n        ) : (\r\n          <ErrorBoundary>\r\n            <TMDetailsUserActions\r\n              handleBack={this.props.onBack}\r\n              handleSave={this.handleSave}\r\n              handleReset={this.handleReset}\r\n              saveEnabled={this.state.saveEnabled}\r\n            ></TMDetailsUserActions>\r\n          </ErrorBoundary>\r\n        )}\r\n\r\n        {this.state.showAuthenticationLayout || this.state.showForceCloseAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.order.OrderCode === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={this.getFunctionGroupName()}\r\n            handleOperation={this.handleOperation()}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(OrderDetailsComposite);\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nContractSummaryPageComposite.propTypes = {\r\n  tableData: PropTypes.array.isRequired,\r\n  columnDetails: PropTypes.array.isRequired,\r\n  pageSize: PropTypes.number,\r\n  exportRequired:PropTypes.bool,\r\n  exportFileName:PropTypes.string,\r\n  columnPickerRequired:PropTypes.bool,\r\n  columnGroupingRequired:PropTypes.bool,\r\n  selectionRequired:PropTypes.bool,\r\n  terminalsToShow: PropTypes.number,\r\n  //selectedItems: PropTypes.array,\r\n  onSelectionChange: PropTypes.func,\r\n  onRowClick: PropTypes.func.isRequired,\r\n  parentComponent:PropTypes.string,\r\n};\r\n\r\nContractSummaryPageComposite.defaultProps = {\r\n  pageSize: 10,\r\n  terminalsToShow: 2,\r\n  tableData: [],\r\n  columnDetails: [],\r\n  //selectedItems: [],\r\n};\r\n\r\nexport function ContractSummaryPageComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  selectionRequired,\r\n  terminalsToShow,\r\n  //selectedItems,\r\n  onSelectionChange,\r\n  onRowClick,\r\n  parentComponent,\r\n}) {\r\n  return (\r\n    <WijmoGridComposite\r\n    data={tableData}\r\n    columns={columnDetails}\r\n    rowsPerPage={pageSize}\r\n    exportRequired={exportRequired}\r\n    exportFileName={exportFileName}\r\n    columnPickerRequired={columnPickerRequired}\r\n    columnGroupingRequired={columnGroupingRequired}\r\n    selectionRequired={selectionRequired}\r\n   // selectedItems={selectedItems}\r\n    onSelectionHandle={onSelectionChange}\r\n    onRowClick={onRowClick}\r\n    parentComponent={parentComponent}\r\n    terminalsToShow={terminalsToShow}\r\n  ></WijmoGridComposite>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  functionGroups,\r\n  fnContract,\r\n  fnKPIInformation,\r\n  fnSBC,\r\n  fnSBP,\r\n  fnRailDispatch,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ContractSummaryPageComposite } from \"../Summary/ContractSummaryComposite\";\r\nimport ContractDetailsComposite from \"../Details/ContractDetailsComposite\";\r\nimport { TMTransactionFilters } from \"../../UIBase/Common/TMTransactionFilters\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport { kpiContractList } from \"../../../JS/KPIPageName\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport TransactionSourceSummaryOperations from \"../Common/TransactionSourceSummaryOperations\";\r\nimport TruckShipmentComposite from \"./TruckShipmentComposite\";\r\nimport RailDispatchComposite from \"./RailDispatchComposite\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass ContractComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    toDate: \"\",\r\n    fromDate: \"\",\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: false, delete: false, shareholder: true },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    data: {},\r\n    dateError: \"\",\r\n    contractKPIList: [],\r\n    isLoadShipment: false,\r\n    shipmentType: \"\",\r\n    terminalCodes: [],\r\n    isLoadRailDispatch: false,\r\n    selectedContractCode: [],\r\n    isShowRightPane: false,\r\n    isSBCEnable: false,\r\n    isSBPEnable: false,\r\n    isRailDispatchEnable: false,\r\n    showDeleteAuthenticationLayout: false,\r\n  };\r\n\r\n  componentName = \"ContractComponent\";\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnContract\r\n      );\r\n      let toDate = new Date();\r\n      toDate.setHours(23, 59, 59);\r\n      let fromDate = new Date();\r\n      fromDate.setHours(0, 0, 0);\r\n      this.setState({ fromDate: fromDate, toDate: toDate });\r\n      toDate = toDate.toISOString();\r\n      fromDate = fromDate.toISOString();\r\n\r\n      this.setState({\r\n        operationsVisibilty,\r\n        selectedShareholder:\r\n          this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      });\r\n      this.getContractList(\r\n        this.props.userDetails.EntityResult.PrimaryShareholder,\r\n        fromDate,\r\n        toDate\r\n      );\r\n      this.getKPIList(this.props.userDetails.EntityResult.PrimaryShareholder);\r\n      this.getTerminalsList(\r\n        this.props.userDetails.EntityResult.PrimaryShareholder\r\n      );\r\n      this.getlookupValues();\r\n    } catch (error) {\r\n      console.log(\r\n        \"ContractComposite:Error occured on ComponentDidMount\",\r\n        error\r\n      );\r\n    }\r\n    // clear session storage on window refresh event\r\n    window.addEventListener(\"beforeunload\", this.clearStorage)\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    // clear session storage\r\n    this.clearStorage();\r\n\r\n    // remove event listener\r\n    window.removeEventListener(\"beforeunload\", this.clearStorage)\r\n  }\r\n\r\n  clearStorage = () => {\r\n    sessionStorage.removeItem(this.componentName + \"GridState\");\r\n  }\r\n\r\n  handleDelete = () => {\r\n   this.handleAuthenticationClose();\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n      var deleteContractKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        var shCode = this.state.selectedShareholder;\r\n        var ContractCode = this.state.selectedItems[i][\"Common_Code\"];\r\n        var keyData = {\r\n          keyDataCode: 0,\r\n          ShareHolderCode: shCode,\r\n          KeyCodes: [{ Key: KeyCodes.contractCode, Value: ContractCode }],\r\n        };\r\n        deleteContractKeys.push(keyData);\r\n      }\r\n      axios(\r\n        RestAPIs.DeleteContract,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteContractKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          var isRefreshDataRequire = result.isSuccess;\r\n\r\n          if (\r\n            result.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            var failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n          var notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"ContractList_ContractDelSuccess\",\r\n            [\"ContractCode\"]\r\n          );\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({ isReadyToRender: false });\r\n            this.getContractList(\r\n              this.state.selectedShareholder,\r\n              this.state.fromDate.toISOString(),\r\n              this.state.toDate.toISOString()\r\n            );\r\n            this.getKPIList(this.state.selectedShareholder);\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n            });\r\n          } else {\r\n            operationsVisibilty.delete = true;\r\n            this.setState({ operationsVisibilty });\r\n          }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0)\r\n              messageResult.keyFields[0] = \"ContractInfo_ContractCode\";\r\n          });\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error occured while deleting:\" + error);\r\n          var { operationsVisibilty } = { ...this.state };\r\n          operationsVisibilty.delete = true;\r\n          this.setState({ operationsVisibilty });\r\n        });\r\n    } catch (error) {\r\n      console.log(\"ContractComposite:Error occured on handleDelete\", error);\r\n    }\r\n  };\r\n\r\n  getTransportationType() {\r\n    let transportationType = Constants.TransportationType.ROAD;\r\n    if (\r\n      this.props.activeItem !== undefined &&\r\n      this.props.activeItem.itemProps !== undefined &&\r\n      this.props.activeItem.itemProps.transportationType !== undefined\r\n    )\r\n      transportationType = this.props.activeItem.itemProps.transportationType;\r\n\r\n    return transportationType;\r\n  }\r\n  getContractList(shareholder, startRange, endRange) {\r\n    this.setState({ isReadyToRender: false });\r\n    let transportationType = this.getTransportationType();\r\n    let fromDate = new Date(startRange);\r\n    let toDate = new Date(endRange);\r\n    fromDate.setHours(0, 0, 0);\r\n    toDate.setHours(23, 59, 59);\r\n\r\n    let obj = {\r\n      ShareholderCode: shareholder,\r\n      TransportationType: transportationType,\r\n      startRange: fromDate,\r\n      endRange: toDate,\r\n    };\r\n    // let url =\r\n    //   RestAPIs.GetContractListForRole +\r\n    //   \"?ShareholderCode=\" +\r\n    //   shareholder +\r\n    //   \"&TransportationType=\" +\r\n    //   transportationType +\r\n    //   \"&startRange=\" +\r\n    //   startRange +\r\n    //   \"&endRange=\" +\r\n    //   endRange;\r\n\r\n    axios(\r\n      RestAPIs.GetContractListForRole,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ data: result.EntityResult, isReadyToRender: true });\r\n        } else {\r\n          this.setState({ data: {}, isReadyToRender: true });\r\n          console.log(\"Error in ContractListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: {}, isReadyToRender: true });\r\n        console.log(\"Error while getting Contract List:\", error);\r\n      });\r\n  }\r\n\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      // let { operationsVisibilty } = { ...this.state };\r\n      //operationsVisibilty.delete = false;\r\n      this.setState({\r\n        selectedShareholder: shareholder,\r\n        isReadyToRender: false,\r\n        selectedItems: [],\r\n        // operationsVisibilty,\r\n      });\r\n      this.getContractList(\r\n        shareholder,\r\n        this.state.fromDate.toISOString(),\r\n        this.state.toDate.toISOString()\r\n      );\r\n      this.getKPIList(shareholder);\r\n      this.getTerminalsList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"ContractComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.shareholder = false;\r\n\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: {},\r\n        operationsVisibilty,\r\n        isLoadShipment: false,\r\n        isLoadRailDispatch: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"ContractComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnContract\r\n      );\r\n      operationsVisibilty.delete = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.remove,\r\n        fnContract\r\n      );\r\n      //operationsVisibilty.delete = false;\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: item,\r\n        selectedItems: [item],\r\n        operationsVisibilty,\r\n        isLoadShipment: false,\r\n        isLoadRailDispatch: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"ContractComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnContract\r\n        );\r\n        operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnContract\r\n        );\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        let selectedItems = [\r\n          {\r\n            Common_Code: data.ContractCode,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"ContractComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  //Get KPI for contract\r\n  getKPIList(shareholder) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      var notification = {\r\n        message: \"\",\r\n        messageType: \"critical\",\r\n        messageResultDetails: [],\r\n      };\r\n      let objKPIRequestData = {\r\n        PageName: kpiContractList,\r\n        TransportationType: this.props.activeItem.itemProps.transportationType,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              contractKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ contractKPIList: [] });\r\n            console.log(\"Error in contract KPIList:\", result.ErrorList);\r\n            notification.messageResultDetails.push({\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: result.ErrorList[0],\r\n            });\r\n          }\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Contract KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n  handleBack = () => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnContract\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.shareholder = true;\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n        isLoadShipment: false,\r\n        isLoadRailDispatch: false,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getContractList(\r\n        this.state.selectedShareholder,\r\n        this.state.fromDate.toISOString(),\r\n        this.state.toDate.toISOString()\r\n      );\r\n      this.getKPIList(this.state.selectedShareholder);\r\n    } catch (error) {\r\n      console.log(\"ContractComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n\r\n  handleRangeSelect = ({ to, from }) => {\r\n    if (to !== undefined) this.setState({ toDate: to });\r\n    if (from !== undefined) this.setState({ fromDate: from });\r\n  };\r\n\r\n  handleDateTextChange = (value, error) => {\r\n    if (value === \"\")\r\n      this.setState({ dateError: \"\", toDate: \"\", fromDate: \"\" });\r\n    if (error !== null && error !== \"\")\r\n      this.setState({\r\n        dateError: \"Common_InvalidDate\",\r\n        toDate: \"\",\r\n        fromDate: \"\",\r\n      });\r\n    else {\r\n      this.setState({\r\n        dateError: \"\",\r\n        toDate: value.to,\r\n        fromDate: value.from,\r\n      });\r\n    }\r\n  };\r\n  handleSelection = (items) => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      let isCreated =\r\n        items.findIndex(\r\n          (x) =>\r\n            Constants.contractStatus[x.ShipmentGridContract_Status] ===\r\n            Constants.contractStatus.CREATED\r\n        ) >= 0\r\n          ? true\r\n          : false;\r\n      operationsVisibilty.delete =\r\n        items.length > 0 &&\r\n        isCreated &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnContract\r\n        );\r\n      let isReady = true;\r\n      isReady = Object.values(items).every(function (x) {\r\n        if (\r\n          x.ShipmentGridContract_Status.toUpperCase() === \"CLOSED\" ||\r\n          x.ShipmentGridContract_Status.toUpperCase() === \"EXPIRED\"\r\n        )\r\n          return false;\r\n        else return true;\r\n      });\r\n      if (isReady) this.setState({ isShowRightPane: true });\r\n      else this.setState({ isShowRightPane: false });\r\n\r\n      this.setState({ selectedItems: items, operationsVisibilty });\r\n    } catch (error) {\r\n      console.log(\"ContractComposite:Error occured on handleSelection\", error);\r\n    }\r\n  };\r\n\r\n  handleLoadContracts = () => {\r\n    let error = Utilities.validateDateRange(\r\n      this.state.toDate,\r\n      this.state.fromDate\r\n    );\r\n\r\n    if (error !== \"\") {\r\n      this.setState({ dateError: error });\r\n    } else {\r\n      this.setState({ dateError: \"\" });\r\n      this.getContractList(\r\n        this.state.selectedShareholder,\r\n        this.state.fromDate.toISOString(),\r\n        this.state.toDate.toISOString()\r\n      );\r\n    }\r\n  };\r\n\r\n  getTerminalsList(shareholder) {\r\n    try {\r\n      if (shareholder !== null && shareholder !== \"\") {\r\n        axios(\r\n          RestAPIs.GetTerminals,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            [shareholder],\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ terminalCodes: response.data.EntityResult });\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ terminalCodes: [] });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"DestinationComposite:Error occured on getTerminalsList\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleDispatchPageClick = () => {\r\n    let contractCodes = [];\r\n    var { operationsVisibilty } = { ...this.state };\r\n    operationsVisibilty.delete = false;\r\n    for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n      var ContractCode = this.state.selectedItems[i][\"Common_Code\"];\r\n      contractCodes.push(ContractCode);\r\n    }\r\n    this.setState({\r\n      isLoadRailDispatch: true,\r\n      selectedContractCode: contractCodes,\r\n      operationsVisibilty,\r\n    });\r\n  };\r\n\r\n  handleShipmentByProductPageClick = () => {\r\n    let contractCodes = [];\r\n    var { operationsVisibilty } = { ...this.state };\r\n    operationsVisibilty.delete = false;\r\n    for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n      var ContractCode = this.state.selectedItems[i][\"Common_Code\"];\r\n      contractCodes.push(ContractCode);\r\n    }\r\n    this.setState({\r\n      isLoadShipment: true,\r\n      shipmentType: \"ShipmentByProduct\",\r\n      selectedContractCode: contractCodes,\r\n      operationsVisibilty,\r\n    });\r\n  };\r\n\r\n  handleShipmentByCompartmentPageClick = () => {\r\n    let contractCodes = [];\r\n    var { operationsVisibilty } = { ...this.state };\r\n    operationsVisibilty.delete = false;\r\n    for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n      var ContractCode = this.state.selectedItems[i][\"Common_Code\"];\r\n      contractCodes.push(ContractCode);\r\n    }\r\n    this.setState({\r\n      isLoadShipment: true,\r\n      shipmentType: \"ShipmentByCompartment\",\r\n      selectedContractCode: contractCodes,\r\n      operationsVisibilty,\r\n    });\r\n  };\r\n\r\n  handleOperationVisibility = (status) => {\r\n    let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n    if (status === true) {\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnContract\r\n      );\r\n      operationsVisibilty.delete = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.remove,\r\n        fnContract\r\n      );\r\n      operationsVisibilty.shareholder = false;\r\n    } else {\r\n      operationsVisibilty.add = status;\r\n      operationsVisibilty.delete = status;\r\n      operationsVisibilty.shareholder = status;\r\n    }\r\n\r\n    this.setState({ operationsVisibilty });\r\n  };\r\n\r\n  getlookupValues() {\r\n    try {\r\n      let sbcAdd = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnSBC\r\n      );\r\n      let sbpAdd = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnSBP\r\n      );\r\n      let railDispatchAdd = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnRailDispatch\r\n      );\r\n      axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=Contract\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let isContractEnable =\r\n            result.EntityResult[\"EnableContract\"] === \"0\" ? false : true;\r\n\r\n          if (isContractEnable) {\r\n            if (sbcAdd) this.setState({ isSBCEnable: true });\r\n            if (sbpAdd) this.setState({ isSBPEnable: true });\r\n            if (railDispatchAdd) this.setState({ isRailDispatchEnable: true });\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"ContractComposite:Error occured on getLookUpData\", error);\r\n    }\r\n  }\r\n\r\n  \r\n  authenticateDelete = () => {\r\n    try {\r\n      let showDeleteAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showDeleteAuthenticationLayout });\r\n      if (showDeleteAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Order Composite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n \r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showDeleteAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  \r\n  getFunctionGroupName() {\r\n    if(this.state.showDeleteAuthenticationLayout )\r\n      return fnContract\r\n   };\r\n\r\n   getDeleteorEditMode() {\r\n    if(this.state.showDeleteAuthenticationLayout)\r\n      return functionGroups.remove;\r\n    else\r\n      return functionGroups.modify;\r\n   };\r\n\r\n   handleOperation()  {\r\n  \r\n    if(this.state.showDeleteAuthenticationLayout)\r\n      return this.handleDelete\r\n    \r\n };\r\n\r\n  \r\n\r\n  render() {\r\n    let contractSelected =\r\n      this.state.selectedItems.length > 0 && this.state.isShowRightPane;\r\n    return (\r\n      <div>\r\n        {this.props.shipmentSource === undefined ||\r\n          this.props.shipmentSource === \"\" ||\r\n          this.props.shipmentSource === null ? (\r\n          <ErrorBoundary>\r\n            <TMUserActionsComposite\r\n              operationsVisibilty={this.state.operationsVisibilty}\r\n              breadcrumbItem={this.props.activeItem}\r\n              shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n              selectedShareholder={this.state.selectedShareholder}\r\n              onShareholderChange={this.handleShareholderSelectionChange}\r\n              onDelete={this.authenticateDelete}\r\n              onAdd={this.handleAdd}\r\n              handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n            ></TMUserActionsComposite>\r\n          </ErrorBoundary>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {this.state.isDetails ? (\r\n          <ErrorBoundary>\r\n            <ContractDetailsComposite\r\n              key=\"ContractDetails\"\r\n              selectedRow={this.state.selectedRow}\r\n              onBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n              transportationType={this.getTransportationType()}\r\n              selectedShareholder={this.state.selectedShareholder}\r\n              handleOperationVisibility={this.handleOperationVisibility}\r\n            ></ContractDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isLoadShipment && this.state.shipmentType ? (\r\n          <ErrorBoundary>\r\n            <TruckShipmentComposite\r\n              shipmentSource={Constants.shipmentFrom.Contract}\r\n              selectedSourceCode={this.state.selectedContractCode}\r\n              shipmentType={this.state.shipmentType}\r\n              shipmentSourceFromSummary={true}\r\n              selectedShareholder={this.state.selectedShareholder}\r\n              activeItem={this.props.activeItem}\r\n            ></TruckShipmentComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isLoadRailDispatch ? (\r\n          <RailDispatchComposite\r\n            selectedShareholder={this.state.selectedShareholder}\r\n            shipmentSource={Constants.shipmentFrom.Contract}\r\n            selectedSourceCode={this.state.selectedContractCode}\r\n            shipmentType={this.state.shipmentType}\r\n            shipmentSourceFromSummary={true}\r\n            userDetails={this.props.userDetails}\r\n            activeItem={this.props.activeItem}\r\n          ></RailDispatchComposite>\r\n        ) : (\r\n          <>\r\n            <ErrorBoundary>\r\n              <div className=\"kpiSummaryContainer\">\r\n                <KPIDashboardLayout\r\n                  kpiList={this.state.contractKPIList}\r\n                  pageName=\"Contract\"\r\n                ></KPIDashboardLayout>\r\n              </div>\r\n            </ErrorBoundary>\r\n            {this.state.isReadyToRender ? (\r\n              <div\r\n                className={\r\n                  contractSelected ? \"showShipmentStatusRightPane\" : \"\"\r\n                }\r\n              >\r\n                <ErrorBoundary>\r\n                  <TMTransactionFilters\r\n                    dateRange={{\r\n                      from: this.state.fromDate,\r\n                      to: this.state.toDate,\r\n                    }}\r\n                    dateError={this.state.dateError}\r\n                    handleDateTextChange={this.handleDateTextChange}\r\n                    handleRangeSelect={this.handleRangeSelect}\r\n                    handleLoadOrders={this.handleLoadContracts}\r\n                    filterText=\"LoadContracts\"\r\n                  ></TMTransactionFilters>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                  <div className=\"compositeTransactionList\">\r\n                    <ContractSummaryPageComposite\r\n                      tableData={this.state.data.Table}\r\n                      columnDetails={this.state.data.Column}\r\n                      pageSize={\r\n                        this.props.userDetails.EntityResult.PageAttibutes\r\n                          .WebPortalListPageSize\r\n                      }\r\n                      exportRequired={true}\r\n                      exportFileName=\"ContractList\"\r\n                      columnPickerRequired={true}\r\n\r\n                      terminalsToShow={\r\n                        this.props.userDetails.EntityResult.PageAttibutes\r\n                          .NoOfTerminalsToShow\r\n                      }\r\n                      selectionRequired={true}\r\n                      columnGroupingRequired={true}\r\n                      onSelectionChange={this.handleSelection}\r\n                      onRowClick={this.handleRowClick}\r\n                      parentComponent={this.componentName}\r\n                    ></ContractSummaryPageComposite>\r\n                  </div>\r\n                </ErrorBoundary>\r\n              </div>\r\n            ) : (\r\n              <LoadingPage message=\"Loading\"></LoadingPage>\r\n            )}\r\n            {contractSelected ? (\r\n              <div>\r\n                <TransactionSourceSummaryOperations\r\n                  transportationType={\r\n                    this.props.activeItem.itemProps.transportationType\r\n                  }\r\n                  handleShipmentByCompartmentPageClick={\r\n                    this.handleShipmentByCompartmentPageClick\r\n                  }\r\n                  handleShipmentByProductPageClick={\r\n                    this.handleShipmentByProductPageClick\r\n                  }\r\n                  handleDispatchPageClick={this.handleDispatchPageClick}\r\n                  isSBCEnable={this.state.isSBCEnable}\r\n                  isSBPEnable={this.state.isSBPEnable}\r\n                  isRailDispatchEnable={this.state.isRailDispatchEnable}\r\n                ></TransactionSourceSummaryOperations>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </>\r\n        )}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n\r\n        {this.state.showDeleteAuthenticationLayout  \r\n          ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={this.getDeleteorEditMode()}\r\n            functionGroup={this.getFunctionGroupName()}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleOperation()}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nContractComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n  shipmentSource: PropTypes.number,\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContractComposite);\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nOrderSummaryPageComposite.propTypes = {\r\n  tableData: PropTypes.array.isRequired,\r\n  columnDetails: PropTypes.array.isRequired,\r\n  pageSize: PropTypes.number,\r\n  exportRequired:PropTypes.bool,\r\n  exportFileName:PropTypes.string,\r\n  columnPickerRequired:PropTypes.bool,\r\n  columnGroupingRequired:PropTypes.bool,\r\n  selectionRequired:PropTypes.bool,\r\n  terminalsToShow: PropTypes.number,\r\n // selectedItems: PropTypes.array,\r\n onSelectionChange: PropTypes.func,\r\n onRowClick: PropTypes.func.isRequired,\r\n parentComponent:PropTypes.string,\r\n};\r\n\r\nOrderSummaryPageComposite.defaultProps = {\r\n  pageSize: 10,\r\n  terminalsToShow: 2,\r\n  tableData: [],\r\n  columnDetails: [],\r\n //selectedItems: [],\r\n};\r\n\r\nexport function OrderSummaryPageComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  selectionRequired,\r\n  terminalsToShow,\r\n  //selectedItems,\r\n  onSelectionChange,\r\n  onRowClick,\r\n  parentComponent,\r\n}) {\r\n  return (\r\n    <WijmoGridComposite\r\n    data={tableData}\r\n    columns={columnDetails}\r\n    rowsPerPage={pageSize}\r\n    exportRequired={exportRequired}\r\n    exportFileName={exportFileName}\r\n    columnPickerRequired={columnPickerRequired}\r\n    columnGroupingRequired={columnGroupingRequired}\r\n    selectionRequired={selectionRequired}\r\n   // selectedItems={selectedItems}\r\n    onSelectionHandle={onSelectionChange}\r\n    onRowClick={onRowClick}\r\n    parentComponent={parentComponent}\r\n    terminalsToShow={terminalsToShow}\r\n  ></WijmoGridComposite>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  functionGroups,\r\n  fnOrder,\r\n  fnKPIInformation,\r\n  fnSBC,\r\n  fnSBP,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { OrderSummaryPageComposite } from \"../Summary/OrderSummaryComposite\";\r\nimport OrderDetailsComposite from \"../Details/OrderDetailsComposite\";\r\nimport { TMTransactionFilters } from \"../../UIBase/Common/TMTransactionFilters\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport { kpiOrderList } from \"../../../JS/KPIPageName\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport TruckShipmentComposite from \"./TruckShipmentComposite\";\r\nimport TransactionSourceSummaryOperations from \"../Common/TransactionSourceSummaryOperations\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass OrderComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    toDate: \"\",\r\n    fromDate: \"\",\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: false, delete: false, shareholder: true },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    data: {},\r\n    dateError: \"\",\r\n    orderKPIList: [],\r\n    None: [],\r\n    isLoadShipment: false,\r\n    shipmentType: \"\",\r\n    selectedCodes: [],\r\n    isSBCEnable: false,\r\n    isSBPEnable: false,\r\n    showDeleteAuthenticationLayout: false,\r\n  };\r\n\r\n  componentName = \"OrderComponent\";\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnOrder\r\n      );\r\n      let toDate = new Date();\r\n      toDate.setHours(23, 59, 59);\r\n      let fromDate = new Date();\r\n      fromDate.setHours(0, 0, 0);\r\n      this.setState({ fromDate: fromDate, toDate: toDate });\r\n      toDate = toDate.toISOString();\r\n      fromDate = fromDate.toISOString();\r\n\r\n      this.setState({\r\n        operationsVisibilty,\r\n        selectedShareholder:\r\n          this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      });\r\n      this.getOrderList(\r\n        this.props.userDetails.EntityResult.PrimaryShareholder,\r\n        fromDate,\r\n        toDate\r\n      );\r\n      this.getKPIList(this.props.userDetails.EntityResult.PrimaryShareholder);\r\n      this.getlookupValues();\r\n    } catch (error) {\r\n      console.log(\"OrderComposite:Error occured on ComponentDidMount\", error);\r\n    }\r\n    // clear session storage on window refresh event\r\n    window.addEventListener(\"beforeunload\", this.clearStorage)\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    // clear session storage\r\n    this.clearStorage();\r\n\r\n    // remove event listener\r\n    window.removeEventListener(\"beforeunload\", this.clearStorage)\r\n  }\r\n\r\n  clearStorage = () => {\r\n    sessionStorage.removeItem(this.componentName + \"GridState\");\r\n  }\r\n\r\n  //Get KPI for order\r\n  getKPIList(shareholder) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      var notification = {\r\n        message: \"\",\r\n        messageType: \"critical\",\r\n        messageResultDetails: [],\r\n      };\r\n      let objKPIRequestData = {\r\n        PageName: kpiOrderList,\r\n        TransportationType: Constants.TransportationType.ROAD,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ orderKPIList: result.EntityResult.ListKPIDetails });\r\n          } else {\r\n            this.setState({ orderKPIList: [] });\r\n            console.log(\"Error in order KPIList:\", result.ErrorList);\r\n            notification.messageResultDetails.push({\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: result.ErrorList[0],\r\n            });\r\n          }\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Order KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n  handleDelete = () => {\r\n    this.handleAuthenticationClose();\r\n    //console.log(\"Clicked Delete\", this.state.selectedItems);\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n\r\n      let deleteOrderKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        let shCode = this.state.selectedShareholder;\r\n        let OrderCode = this.state.selectedItems[i][\"Common_Code\"];\r\n        let keyData = {\r\n          keyDataCode: 0,\r\n          ShareHolderCode: shCode,\r\n          KeyCodes: [{ Key: KeyCodes.orderCode, Value: OrderCode }],\r\n        };\r\n        deleteOrderKeys.push(keyData);\r\n      }\r\n\r\n      axios(\r\n        RestAPIs.DeleteOrder,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteOrderKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let result = response.data;\r\n          let isRefreshDataRequire = result.isSuccess;\r\n\r\n          if (\r\n            result.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            var failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n\r\n          let notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"OrderInfo_DeletionStatus\",\r\n            [\"OrderCode\"]\r\n          );\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({ isReadyToRender: false });\r\n            this.getOrderList(\r\n              this.state.selectedShareholder,\r\n              this.state.fromDate.toISOString(),\r\n              this.state.toDate.toISOString()\r\n            );\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n            });\r\n          } else {\r\n            operationsVisibilty.delete = true;\r\n            this.setState({ operationsVisibilty });\r\n          }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0)\r\n              messageResult.keyFields[0] = \"ShipmentOrdertList_OrderCode\";\r\n          });\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    } catch (error) {\r\n      console.log(\"OrderComposite:Error occured on handleDelet\", error);\r\n    }\r\n  };\r\n\r\n  getOrderList(shareholder, startRange, endRange) {\r\n    this.setState({ isReadyToRender: false });\r\n    let fromDate = new Date(startRange);\r\n    let toDate = new Date(endRange);\r\n    fromDate.setHours(0, 0, 0);\r\n    toDate.setHours(23, 59, 59);\r\n\r\n    let obj = {\r\n      ShareholderCode: shareholder,\r\n      startRange: fromDate,\r\n      endRange: toDate,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetOrderListForRole,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ data: result.EntityResult, isReadyToRender: true });\r\n        } else {\r\n          this.setState({ data: {}, isReadyToRender: true });\r\n          console.log(\"Error in OrderListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: {}, isReadyToRender: true });\r\n        console.log(\"Error while getting Order List:\", error);\r\n      });\r\n  }\r\n\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      let { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({\r\n        selectedShareholder: shareholder,\r\n        isReadyToRender: false,\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n      });\r\n      this.getOrderList(\r\n        shareholder,\r\n        this.state.fromDate.toISOString(),\r\n        this.state.toDate.toISOString()\r\n      );\r\n      this.getKPIList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"OrderComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.shareholder = false;\r\n\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: {},\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"OrderComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnOrder\r\n      );\r\n      operationsVisibilty.delete = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.remove,\r\n        fnOrder\r\n      );\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: item,\r\n        selectedItems: [item],\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"OrderComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n\r\n  handleSelection = (items) => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n\r\n      let isReady =\r\n        items.findIndex(\r\n          (x) =>\r\n            Constants.orderStatus[x.ShipmentGridOrder_Status] !==\r\n            Constants.orderStatus.NOT_SCHEDULED\r\n        ) >= 0\r\n          ? false\r\n          : true;\r\n\r\n      operationsVisibilty.delete =\r\n        items.length > 0 &&\r\n        isReady &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnOrder\r\n        );\r\n\r\n      this.setState({ selectedItems: items, operationsVisibilty });\r\n    } catch (error) {\r\n      console.log(\"OrderComposite:Error occured on handleSelection\", error);\r\n    }\r\n  };\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnOrder\r\n        );\r\n        operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnOrder\r\n        );\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        let selectedItems = [\r\n          {\r\n            Common_Code: data.OrderCode,\r\n            Common_Status: data.Active,\r\n            Common_Shareholder: data.ShareholderCode,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"OrderComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  handleOperationVisibility = (status) => {\r\n    let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n    if (status === true) {\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnOrder\r\n      );\r\n      operationsVisibilty.delete = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.remove,\r\n        fnOrder\r\n      );\r\n      operationsVisibilty.shareholder = false;\r\n    } else {\r\n      operationsVisibilty.add = status;\r\n      operationsVisibilty.delete = status;\r\n      operationsVisibilty.shareholder = status;\r\n    }\r\n\r\n    this.setState({ operationsVisibilty });\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnOrder\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.shareholder = true;\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getOrderList(\r\n        this.state.selectedShareholder,\r\n        this.state.fromDate.toISOString(),\r\n        this.state.toDate.toISOString()\r\n      );\r\n      this.getKPIList(this.state.selectedShareholder);\r\n    } catch (error) {\r\n      console.log(\"OrderComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n\r\n  handleRangeSelect = ({ to, from }) => {\r\n    if (to !== undefined) this.setState({ toDate: to });\r\n    if (from !== undefined) this.setState({ fromDate: from });\r\n  };\r\n\r\n  handleDateTextChange = (value, error) => {\r\n    if (value === \"\")\r\n      this.setState({ dateError: \"\", toDate: \"\", fromDate: \"\" });\r\n    if (error !== null && error !== \"\")\r\n      this.setState({\r\n        dateError: \"Common_InvalidDate\",\r\n        toDate: \"\",\r\n        fromDate: \"\",\r\n      });\r\n    else {\r\n      this.setState({\r\n        dateError: \"\",\r\n        toDate: value.to,\r\n        fromDate: value.from,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleLoadOrders = () => {\r\n    //debugger;\r\n    let error = Utilities.validateDateRange(\r\n      this.state.toDate,\r\n      this.state.fromDate\r\n    );\r\n\r\n    if (error !== \"\") {\r\n      this.setState({ dateError: error });\r\n    } else {\r\n      this.setState({ dateError: \"\" });\r\n      this.getOrderList(\r\n        this.state.selectedShareholder,\r\n        this.state.fromDate.toISOString(),\r\n        this.state.toDate.toISOString()\r\n      );\r\n    }\r\n  };\r\n\r\n  handleShipmentByProductPageClick = () => {\r\n    let orderCodes = [];\r\n    for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n      var OrderCode = this.state.selectedItems[i][\"Common_Code\"];\r\n      orderCodes.push(OrderCode);\r\n    }\r\n    this.setState({\r\n      isLoadShipment: true,\r\n      shipmentType: \"ShipmentByProduct\",\r\n      selectedCodes: orderCodes,\r\n    });\r\n  };\r\n\r\n  handleShipmentByCompartmentPageClick = () => {\r\n    let orderCodes = [];\r\n    for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n      var OrderCode = this.state.selectedItems[i][\"Common_Code\"];\r\n      orderCodes.push(OrderCode);\r\n    }\r\n    this.setState({\r\n      isLoadShipment: true,\r\n      shipmentType: \"ShipmentByCompartment\",\r\n      selectedCodes: orderCodes,\r\n    });\r\n  };\r\n\r\n  getlookupValues() {\r\n    try {\r\n      let sbcAdd = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnSBC\r\n      );\r\n      let sbpAdd = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnSBP\r\n      );\r\n      axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=Order\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let isOrderEnable =\r\n            result.EntityResult[\"EnableOrder\"] === \"0\" ? false : true;\r\n          if (isOrderEnable) {\r\n            if (sbcAdd) this.setState({ isSBCEnable: true });\r\n            if (sbpAdd) this.setState({ isSBPEnable: true });\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"OrderComposite:Error occured on getLookUpData\", error);\r\n    }\r\n  }\r\n\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showDeleteAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showDeleteAuthenticationLayout });\r\n      if (showDeleteAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Order Composite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n  handleAuthenticationClose = () => {\r\n\r\n    this.setState({\r\n      showDeleteAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n\r\n  getFunctionGroupName() {\r\n    if (this.state.showDeleteAuthenticationLayout)\r\n      return fnOrder\r\n  };\r\n\r\n  getDeleteorEditMode() {\r\n    if (this.state.showDeleteAuthenticationLayout)\r\n      return functionGroups.remove;\r\n    else\r\n      return functionGroups.modify;\r\n  };\r\n\r\n  handleOperation() {\r\n\r\n    if (this.state.showDeleteAuthenticationLayout)\r\n      return this.handleDelete\r\n\r\n  };\r\n\r\n  render() {\r\n    let isOrdersSelected = this.state.selectedItems.length > 0;\r\n    return (\r\n      <div>\r\n        {this.props.shipmentSource === undefined ||\r\n          this.props.shipmentSource === \"\" ||\r\n          this.props.shipmentSource === null ? (\r\n          <ErrorBoundary>\r\n            <TMUserActionsComposite\r\n              operationsVisibilty={this.state.operationsVisibilty}\r\n              breadcrumbItem={this.props.activeItem}\r\n              shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n              selectedShareholder={this.state.selectedShareholder}\r\n              onShareholderChange={this.handleShareholderSelectionChange}\r\n              onDelete={this.authenticateDelete}\r\n              onAdd={this.handleAdd}\r\n              handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n            ></TMUserActionsComposite>\r\n          </ErrorBoundary>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {this.state.isDetails ? (\r\n          <ErrorBoundary>\r\n            <OrderDetailsComposite\r\n              key=\"OrderDetails\"\r\n              selectedRow={this.state.selectedRow}\r\n              onBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n              selectedShareholder={this.state.selectedShareholder}\r\n              handleOperationVisibility={this.handleOperationVisibility}\r\n            ></OrderDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isLoadShipment && this.state.shipmentType ? (\r\n          <ErrorBoundary>\r\n            <TruckShipmentComposite\r\n              shipmentSource={Constants.shipmentFrom.Order}\r\n              selectedSourceCode={this.state.selectedCodes}\r\n              shipmentType={this.state.shipmentType}\r\n              shipmentSourceFromSummary={true}\r\n              selectedShareholder={this.state.selectedShareholder}\r\n            ></TruckShipmentComposite>\r\n          </ErrorBoundary>\r\n        ) : (\r\n          <>\r\n            <ErrorBoundary>\r\n              <div className=\"kpiSummaryContainer\">\r\n                <KPIDashboardLayout\r\n                  kpiList={this.state.orderKPIList}\r\n                  pageName=\"Orders\"\r\n                ></KPIDashboardLayout>\r\n              </div>\r\n            </ErrorBoundary>\r\n            {this.state.isReadyToRender ? (\r\n              <div\r\n                className={\r\n                  isOrdersSelected ? \"showShipmentStatusRightPane\" : \"\"\r\n                }\r\n              >\r\n                <ErrorBoundary>\r\n                  <TMTransactionFilters\r\n                    dateRange={{\r\n                      from: this.state.fromDate,\r\n                      to: this.state.toDate,\r\n                    }}\r\n                    dateError={this.state.dateError}\r\n                    handleDateTextChange={this.handleDateTextChange}\r\n                    handleRangeSelect={this.handleRangeSelect}\r\n                    handleLoadOrders={this.handleLoadOrders}\r\n                    filterText=\"LoadOrders\"\r\n                  ></TMTransactionFilters>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                  <div className=\"compositeTransactionList\">\r\n                    <OrderSummaryPageComposite\r\n                      tableData={this.state.data.Table}\r\n                      columnDetails={this.state.data.Column}\r\n                      pageSize={\r\n                        this.props.userDetails.EntityResult.PageAttibutes\r\n                          .WebPortalListPageSize\r\n                      }\r\n                      exportRequired={true}\r\n                      exportFileName=\"OrderList\"\r\n                      columnPickerRequired={true}\r\n\r\n                      terminalsToShow={\r\n                        this.props.userDetails.EntityResult.PageAttibutes\r\n                          .NoOfTerminalsToShow\r\n                      }\r\n                      selectionRequired={true}\r\n                      columnGroupingRequired={true}\r\n                      onSelectionChange={this.handleSelection}\r\n                      onRowClick={this.handleRowClick}\r\n                      parentComponent={this.componentName}\r\n                    ></OrderSummaryPageComposite>\r\n                  </div>\r\n                </ErrorBoundary>\r\n              </div>\r\n            ) : (\r\n              <LoadingPage message=\"Loading\"></LoadingPage>\r\n            )}\r\n            {isOrdersSelected ? (\r\n              <div>\r\n                <TransactionSourceSummaryOperations\r\n                  transportationType={Constants.TransportationType.ROAD}\r\n                  handleShipmentByCompartmentPageClick={\r\n                    this.handleShipmentByCompartmentPageClick\r\n                  }\r\n                  handleShipmentByProductPageClick={\r\n                    this.handleShipmentByProductPageClick\r\n                  }\r\n                  isSBCEnable={this.state.isSBCEnable}\r\n                  isSBPEnable={this.state.isSBPEnable}\r\n                ></TransactionSourceSummaryOperations>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </>\r\n        )}\r\n        \r\n        {this.state.showDeleteAuthenticationLayout\r\n          ? (\r\n            <UserAuthenticationLayout\r\n              Username={this.props.userDetails.EntityResult.UserName}\r\n              functionName={this.getDeleteorEditMode()}\r\n              functionGroup={this.getFunctionGroupName()}\r\n              handleClose={this.handleAuthenticationClose}\r\n              handleOperation={this.handleOperation()}\r\n            ></UserAuthenticationLayout>\r\n          ) : null}\r\n\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nOrderComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n\r\nexport default connect(mapStateToProps)(OrderComposite);\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nRailDispatchSummaryPageComposite.propTypes = {\r\n  tableData: PropTypes.array.isRequired,\r\n  columnDetails: PropTypes.array.isRequired,\r\n  pageSize: PropTypes.number,\r\n  exportRequired:PropTypes.bool,\r\n  exportFileName:PropTypes.string,\r\n  columnPickerRequired:PropTypes.bool,\r\n  columnGroupingRequired:PropTypes.bool,\r\n  selectionRequired:PropTypes.bool,\r\n  terminalsToShow: PropTypes.number,\r\n  selectedItems: PropTypes.array.isRequired,\r\n  onSelectionChange: PropTypes.func.isRequired,\r\n  onRowClick: PropTypes.func.isRequired,\r\n  parentComponent:PropTypes.string,\r\n};\r\n\r\nRailDispatchSummaryPageComposite.defaultProps = {\r\n  pageSize: 10,\r\n  terminalsToShow: 2,\r\n  tableData: [],\r\n  columnDetails: [],\r\n  selectedItems: [],\r\n};\r\n\r\nexport function RailDispatchSummaryPageComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  selectionRequired,\r\n  terminalsToShow,\r\n  selectedItems,\r\n  onSelectionChange,\r\n  onRowClick,\r\n  parentComponent,\r\n}) {\r\n  return (\r\n    <WijmoGridComposite\r\n    data={tableData}\r\n    columns={columnDetails}\r\n    rowsPerPage={pageSize}\r\n    exportRequired={exportRequired}\r\n    exportFileName={exportFileName}\r\n    columnPickerRequired={columnPickerRequired}\r\n    columnGroupingRequired={columnGroupingRequired}\r\n    selectionRequired={selectionRequired}\r\n    selectedItems={selectedItems}\r\n    onSelectionHandle={onSelectionChange}\r\n    onRowClick={onRowClick}\r\n    parentComponent={parentComponent}\r\n    terminalsToShow={terminalsToShow}\r\n  ></WijmoGridComposite>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { RailDispatchSummaryPageComposite } from \"../Summary/RailDispatchSummaryComposite\";\r\nimport RailDispatchDetailsComposite from \"../Details/RailDispatchDetailsComposite\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../../CSS/styles.css\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport {\r\n  functionGroups,\r\n  fnRailDispatch,\r\n  fnKPIInformation,\r\n  fnCloseRailDispatch,\r\n  fnPrintRailBOL,\r\n  fnPrintRailFAN,\r\n  fnViewRailDispatch,\r\n\r\n} from \"../../../JS/FunctionGroups\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TMTransactionFilters } from \"../../UIBase/Common/TMTransactionFilters\";\r\n//import RailDispatchSummaryOperations from \"../Common/ViewAllShipmentFolder/RailDispatchSummaryOperations\";\r\nimport lodash from \"lodash\";\r\nimport { Button, Modal, Input } from \"@scuf/common\";\r\nimport ReportDetails from \"../../UIBase/Details/ReportDetails\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport TransactionSummaryOperations from \"../Common/TransactionSummaryOperations\";\r\n//import TransactionSummaryOperationsMarine from \"../Common/TransactionSummaryOperationsMarine\";\r\nimport ContractComposite from \"./ContractComposite\";\r\nimport { kpiRailShipmentList } from \"../../../JS/KPIPageName\";\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass RailDispatchComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    operationsVisibility: { add: false, delete: false, shareholder: false },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    selectedShareholder: \"\",\r\n    data: {},\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    dateError: \"\",\r\n    terminalCodes: [],\r\n    nextOperations: [],\r\n    currentStatuses: [],\r\n    currentAccess: {},\r\n    lastStatus: \"\",\r\n    modalData: {\r\n      closeDispatch: {\r\n        isOpen: false,\r\n        data: {\r\n          reason: \"\",\r\n          dispatchCode: \"\",\r\n          dispatchStatus: \"\",\r\n        },\r\n        validationErrors: {\r\n          reason: \"\",\r\n        },\r\n      },\r\n    },\r\n    subPageName: \"\",\r\n    isDirectOpenSubPage: false,\r\n    isDisplayDetails: false,\r\n    isReadyToShowOperation: false,\r\n    isDisplayRightPane: false,\r\n    enableHSEInspection: true,\r\n    railLookUpData: {},\r\n    showReport: false,\r\n    drawerStatus: false,\r\n    isGoBackToSource: false,\r\n    isContractDisable: false,\r\n    railDispatchKPIList: [],\r\n    railDispatchDeleteStates: [],\r\n    activityInfo: [],\r\n\r\n    showDeleteAuthenticationLayout: false,\r\n    showAuthorizeToLoadAuthenticationLayout: false,\r\n    showCloseShipmentAuthenticationLayout: false,\r\n    showViewBOLAuthenticationLayout: false,\r\n    showPrintBOLAuthenticationLayout:false,\r\n    showFANAuthenticationLayout: false,\r\n  };\r\n\r\n  componentName = \"RailDispatchComponent\";\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      if (this.props.shipmentSourceFromSummary) {\r\n        const operationsVisibility = lodash.cloneDeep(\r\n          this.state.operationsVisibility\r\n        );\r\n        operationsVisibility.add = false;\r\n        this.setState({\r\n          isDetails: true,\r\n          selectedItems: [],\r\n          selectedRow: {},\r\n          operationsVisibility,\r\n          isDirectOpenSubPage: false,\r\n          isReadyToShowOperation: false,\r\n        });\r\n        this.setRightPaneDisplay(true);\r\n      }\r\n      const operationsVisibility = lodash.cloneDeep(\r\n        this.state.operationsVisibility\r\n      );\r\n      operationsVisibility.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnRailDispatch\r\n      );\r\n      this.setState({\r\n        operationsVisibility,\r\n        selectedShareholder:\r\n          this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      });\r\n      this.CheckRailDispatchDeleteAllowed();\r\n      this.getLookUpData(\"HSEInspection\", (entityResult) => {\r\n        this.setState({\r\n          enableHSEInspection: entityResult.EnableRail === \"True\",\r\n        });\r\n      });\r\n      this.getLookUpData(\"Rail\", (entityResult) => {\r\n        this.setState({ railLookUpData: entityResult });\r\n      });\r\n\r\n      this.getTerminalsList(\r\n        this.props.userDetails.EntityResult.PrimaryShareholder\r\n      );\r\n      this.getRailDispatchList(\r\n        this.props.userDetails.EntityResult.PrimaryShareholder\r\n      );\r\n      this.getKPIList();\r\n      this.getContractLookupValues();\r\n      this.GetShipmentActivityInfo();\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchComposite: Error occurred on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n    // clear session storage on window refresh event\r\n    window.addEventListener(\"beforeunload\", this.clearStorage)\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    // clear session storage\r\n    this.clearStorage();\r\n\r\n    // remove event listener\r\n    window.removeEventListener(\"beforeunload\", this.clearStorage)\r\n  }\r\n\r\n  clearStorage = () => {\r\n    sessionStorage.removeItem(this.componentName + \"GridState\");\r\n  }\r\n\r\n\r\n  GetShipmentActivityInfo() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetShipmentActivityInfo,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ activityInfo: response.data.EntityResult });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting shipment activityInfo:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in GetShipmentActivityInfo:\", error);\r\n    }\r\n  }\r\n\r\n  getLookUpData = (lookUpTypeCode, callback) => {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=\" + lookUpTypeCode,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          callback(result.EntityResult);\r\n        } else {\r\n          console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"RailDispatchComposite: Error occurred on getLookUpData\",\r\n          error\r\n        );\r\n      });\r\n  };\r\n\r\n  getTerminalsList(shareholder) {\r\n    try {\r\n      if (shareholder !== null && shareholder !== \"\") {\r\n        axios(\r\n          RestAPIs.GetTerminals,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            [shareholder],\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ terminalCodes: response.data.EntityResult });\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ terminalCodes: [] });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchComposite: Error occurred on getTerminalsList\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getRailDispatchList(shareholder) {\r\n    try {\r\n      this.setState({ isReadyToRender: false });\r\n      const obj = {\r\n        ShareHolderCode: shareholder,\r\n        TransportationType: Constants.TransportationType.RAIL,\r\n        ShipmentFrom: null,\r\n        ScheduledFrom: null,\r\n        ScheduledTo: null,\r\n        ShipmentTypeCode: null,\r\n      };\r\n      if (\r\n        !this.props.shipmentSourceFromSummary &&\r\n        this.props.shipmentSource !== undefined\r\n      ) {\r\n        obj.ShipmentFrom = this.props.shipmentSource;\r\n        obj.ShipmentType = Constants.shipmentTypeOptions.All;\r\n        obj.ShipmentTypeCode = this.props.shipmentSourceCode;\r\n      } else {\r\n        const fromDate = new Date(this.state.fromDate);\r\n        const toDate = new Date(this.state.toDate);\r\n        fromDate.setHours(0, 0, 0);\r\n        toDate.setHours(23, 59, 59);\r\n        obj.ScheduledFrom = fromDate;\r\n        obj.ScheduledTo = toDate;\r\n        obj.ShipmentType = Constants.shipmentTypeOptions.All;\r\n        obj.ShipmentFrom = Constants.shipmentFrom.All;\r\n      }\r\n\r\n      axios(\r\n        RestAPIs.GetRailDispatchListForRole,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          const result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState(\r\n              { data: result.EntityResult, isReadyToRender: true },\r\n              () => {\r\n                if (this.state.selectedItems.length === 1) {\r\n                  const selectedItem = this.state.selectedItems[0];\r\n                  const updatedSelectedItem = result.EntityResult.Table.filter(\r\n                    (item) => {\r\n                      return item.Common_Code === selectedItem.Common_Code;\r\n                    }\r\n                  );\r\n\r\n                  let { operationsVisibility, activityInfo } = { ...this.state };\r\n\r\n                  let dispatchDeleteInfo = activityInfo.filter((item) => {\r\n                    return (\r\n                      item.ActivityCode ===\r\n                      Constants.ShipmentActivityInfo.RAILDISPATCH_ENABLE_DELETEPLAN &&\r\n                      item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n                    );\r\n                  });\r\n\r\n                  var dispatchDeleteStates = [];\r\n\r\n                  if (\r\n                    dispatchDeleteInfo !== undefined &&\r\n                    dispatchDeleteInfo.length > 0\r\n                  )\r\n                    dispatchDeleteStates =\r\n                      dispatchDeleteInfo[0].ShipmentStates;\r\n\r\n                  operationsVisibility.delete = this.props.userDetails\r\n                    .EntityResult.IsWebPortalUser\r\n                    ? false\r\n                    : dispatchDeleteStates.indexOf(\r\n                      updatedSelectedItem[0].ViewRailDispatchDetails_ShipmentStatus.toUpperCase()\r\n                    ) > -1 &&\r\n                    Utilities.isInFunction(\r\n                      this.props.userDetails.EntityResult.FunctionsList,\r\n                      functionGroups.remove,\r\n                      fnRailDispatch\r\n                    );\r\n\r\n                  if (this.state.isDetails) {\r\n                    this.setState({\r\n                      selectedItems: updatedSelectedItem,\r\n                      selectedRow: updatedSelectedItem[0],\r\n                      operationsVisibility\r\n                    });\r\n                  } else {\r\n                    this.getRailDispatchStatusOperation(\r\n                      updatedSelectedItem[0].Common_Code,\r\n                      updatedSelectedItem[0]\r\n                        .ViewRailDispatchDetails_ShipmentStatus,\r\n                      updatedSelectedItem[0]\r\n                    );\r\n                    this.setState({\r\n                      selectedItems: updatedSelectedItem,\r\n                      operationsVisibility\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n            );\r\n          } else {\r\n            this.setState({ data: [], isReadyToRender: true });\r\n            console.log(\r\n              \"Error in GetRailDispatchListForRole: \",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error while getting RailDispatch List: \", error);\r\n        });\r\n    } catch (error) {\r\n      this.setState({ isReadyToRender: true });\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      const operationsVisibility = lodash.cloneDeep(\r\n        this.state.operationsVisibility\r\n      );\r\n      operationsVisibility.delete = false;\r\n      operationsVisibility.add = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedItems: [],\r\n        selectedRow: {},\r\n        operationsVisibility,\r\n        isDirectOpenSubPage: false,\r\n        isReadyToShowOperation: false,\r\n        isDisplayRightPane: false,\r\n        drawerStatus: false,\r\n      });\r\n      this.setRightPaneDisplay(true);\r\n      if (this.props.shipmentSource !== undefined)\r\n        this.props.isShowBackButton(false);\r\n    } catch (error) {\r\n      console.log(\"RailDispatchComposite: Error occurred on handleAdd\");\r\n    }\r\n  };\r\n\r\n  handleDelete = () => {\r\n    this.handleAuthenticationClose();\r\n    try {\r\n      const operationsVisibility = lodash.cloneDeep(\r\n        this.state.operationsVisibility\r\n      );\r\n      operationsVisibility.delete = false;\r\n      this.setState({ operationsVisibility });\r\n      const deleteRailDispatchKeys = [];\r\n      for (let item of this.state.selectedItems) {\r\n        deleteRailDispatchKeys.push({\r\n          ShareHolderCode: this.state.selectedShareholder,\r\n          KeyCodes: [\r\n            { Key: KeyCodes.railDispatchCode, Value: item.Common_Code },\r\n          ],\r\n        });\r\n      }\r\n\r\n      axios(\r\n        RestAPIs.DeleteRailDispatch,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteRailDispatchKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          const result = response.data;\r\n          let isRefreshDataRequire = result.IsSuccess;\r\n          if (\r\n            result.ResultDataList !== undefined &&\r\n            result.ResultDataList !== null\r\n          ) {\r\n            const failedResultsCount = result.ResultDataList.filter((res) => {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else {\r\n              isRefreshDataRequire = true;\r\n            }\r\n          }\r\n\r\n          const notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"Shipment_DeletionStatus\",\r\n            [\"RailDispatchCode\"]\r\n          );\r\n\r\n          if (\r\n            result.ErrorList !== null &&\r\n            result.ErrorList !== undefined &&\r\n            result.ErrorList.length > 0 &&\r\n            notification.messageResultDetails.length === 0\r\n          ) {\r\n            notification.message =\r\n              result.ErrorList[0] === \"ERRMSG_EXCEPTION_IN_WEBAPI\"\r\n                ? \"CannotDeleteRailTransaction\"\r\n                : result.ErrorList[0];\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\"; //TODO:Localize\r\n          }\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({ isReadyToRender: false });\r\n            this.getRailDispatchList(this.state.selectedShareholder);\r\n            this.getKPIList();\r\n            operationsVisibility.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibility,\r\n              selectedRow: {},\r\n              isReadyToShowOperation: false,\r\n            });\r\n          }\r\n          console.log(notification);\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0) {\r\n              messageResult.keyFields[0] =\r\n                \"RailDispatchPlanDetail_DispatchCode\";\r\n            }\r\n          });\r\n          this.handleNotify(notification);\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    } catch (error) {\r\n      console.log(\"RailDispatchComposite: Error occurred on handleDelete\");\r\n    }\r\n  };\r\n\r\n  handleRangeSelect = ({ to, from }) => {\r\n    if (to !== undefined) this.setState({ toDate: to });\r\n    if (from !== undefined) this.setState({ fromDate: from });\r\n  };\r\n\r\n  handleDateTextChange = (value, error) => {\r\n    if (value === \"\")\r\n      this.setState({ dateError: \"\", toDate: \"\", fromDate: \"\" });\r\n    if (error !== null && error !== \"\")\r\n      this.setState({\r\n        dateError: \"Common_InvalidDate\",\r\n        toDate: \"\",\r\n        fromDate: \"\",\r\n      });\r\n    else {\r\n      this.setState({ dateError: \"\", toDate: value.to, fromDate: value.from });\r\n    }\r\n  };\r\n\r\n  handleLoadOrders = () => {\r\n    const error = Utilities.validateDateRange(\r\n      this.state.toDate,\r\n      this.state.fromDate\r\n    );\r\n\r\n    if (error !== \"\") {\r\n      this.setState({ dateError: error });\r\n    } else {\r\n      this.setState({ dateError: \"\" });\r\n      this.getRailDispatchList(this.state.selectedShareholder);\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      if (\r\n        this.props.shipmentSource !== undefined &&\r\n        this.props.shipmentSourceFromSummary\r\n      ) {\r\n        let operationsVisibility = { ...this.state.operationsVisibility };\r\n        operationsVisibility.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnRailDispatch\r\n        );\r\n        operationsVisibility.shareholder = true;\r\n        this.setState({\r\n          isDetails: false,\r\n          selectedRow: {},\r\n          selectedItems: [],\r\n          operationsVisibility,\r\n          isReadyToShowOperation: false,\r\n          drawerStatus: false,\r\n          isGoBackToSource: true,\r\n          isReadyToRender: false,\r\n        });\r\n      }\r\n      const operationsVisibility = lodash.cloneDeep(\r\n        this.state.operationsVisibility\r\n      );\r\n      operationsVisibility.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnRailDispatch\r\n      );\r\n      operationsVisibility.delete = false;\r\n      //operationsVisibility.shareholder = true;\r\n      this.setRightPaneDisplay(false);\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        operationsVisibility,\r\n        isReadyToShowOperation: false,\r\n        drawerStatus: false,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getRailDispatchList(this.state.selectedShareholder);\r\n      this.getKPIList();\r\n      this.props.isShowBackButton(true);\r\n    } catch (error) {\r\n      console.log(\"RailDispatchComposite: Error occurred on Back click\", error);\r\n    }\r\n  };\r\n\r\n  handleSubPageBack = () => {\r\n    try {\r\n      this.setRightPaneDisplay(true);\r\n      if (this.state.isDirectOpenSubPage) {\r\n        const operationsVisibility = lodash.cloneDeep(\r\n          this.state.operationsVisibility\r\n        );\r\n        operationsVisibility.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnRailDispatch\r\n        );\r\n        //operationsVisibility.delete = false;\r\n        //operationsVisibility.shareholder = true;\r\n        this.setState({\r\n          isDetails: false,\r\n          selectedRow: {},\r\n          operationsVisibility,\r\n          subPageName: \"\",\r\n          isDirectOpenSubPage: false,\r\n          isReadyToRender: false,\r\n        });\r\n        this.getRailDispatchList(this.state.selectedShareholder);\r\n        if (this.props.shipmentSource !== undefined)\r\n          this.props.isShowBackButton(true);\r\n      } else {\r\n        this.setState({\r\n          subPageName: \"\",\r\n        });\r\n        this.handleRowClick(this.state.selectedItems[0]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"RailDispatchComposite: Error occurred on Back click\", error);\r\n    }\r\n  };\r\n\r\n  handleRowClick = (item, isLoadOperaton = true, isDisplayDetails = false) => {\r\n    try {\r\n      var { operationsVisibility, activityInfo } = { ... this.state };\r\n\r\n      operationsVisibility.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnRailDispatch\r\n      );\r\n\r\n      let dispatchDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ShipmentActivityInfo.RAILDISPATCH_ENABLE_DELETEPLAN &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      var dispatchDeleteStates = [];\r\n\r\n      if (\r\n        dispatchDeleteInfo !== undefined &&\r\n        dispatchDeleteInfo.length > 0\r\n      )\r\n        dispatchDeleteStates =\r\n          dispatchDeleteInfo[0].ShipmentStates;\r\n\r\n      operationsVisibility.delete = this.props.userDetails\r\n        .EntityResult.IsWebPortalUser\r\n        ? false\r\n        : dispatchDeleteStates.indexOf(\r\n          item.ViewRailDispatchDetails_ShipmentStatus.toUpperCase()\r\n        ) > -1 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnRailDispatch\r\n        );\r\n\r\n      // operationsVisibility.delete =\r\n      //   item.ViewRailDispatchDetails_ShipmentStatus ===\r\n      //     Constants.Shipment_Status.READY &&\r\n      //   Utilities.isInFunction(\r\n      //     this.props.userDetails.EntityResult.FunctionsList,\r\n      //     functionGroups.remove,\r\n      //     fnRailDispatch\r\n      //   );\r\n      if (isLoadOperaton) {\r\n        this.getRailDispatchStatusOperation(\r\n          item.Common_Code,\r\n          item.ViewRailDispatchDetails_ShipmentStatus,\r\n          item\r\n        );\r\n      }\r\n      // if (\r\n      //   this.state.selectedItems.length === 1 &&\r\n      //   this.state.selectedItems[0].Common_Code === item.Common_Code &&\r\n      //   this.state.selectedItems[0].ViewRailDispatchDetails_ShipmentStatus ===\r\n      //     item.ViewRailDispatchDetails_ShipmentStatus\r\n      // ) {\r\n      // } else {\r\n\r\n      // }\r\n      this.setRightPaneDisplay(true);\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: item,\r\n        selectedItems: [item],\r\n        operationsVisibility,\r\n        isDisplayDetails,\r\n        drawerStatus: false,\r\n      });\r\n      if (this.props.shipmentSource !== undefined)\r\n        this.props.isShowBackButton(false);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchComposite: Error occurred on handleRowClick\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleOperationClick = (operation) => {\r\n    let operationsVisibility = this.state.operationsVisibility;\r\n\r\n    switch (operation) {\r\n      case \"ViewRailDispatch_AuthorizeToLoad\":\r\n        this.authorizeToLoadClick();\r\n        break;\r\n      case \"ViewRailDispatch_CloseDispatch\":\r\n        this.handleConfirmCloseDispatch(\r\n          this.state.selectedItems[0].Common_Code,\r\n          this.state.selectedItems[0].ViewRailDispatchDetails_ShipmentStatus\r\n        );\r\n        break;\r\n      case \"ViewRailDispatch_ManualEntry\":\r\n        this.setState({\r\n          subPageName: \"RailDispatchCompartmentManualEntryDetails\",\r\n        });\r\n        if (!this.state.isDetails) {\r\n          this.handleRowClick(this.state.selectedItems[0], false);\r\n          this.setState({ isDirectOpenSubPage: true });\r\n        }\r\n        operationsVisibility.delete = false;\r\n        operationsVisibility.add = false;\r\n        break;\r\n      case \"ViewRailDispatch_PrintBOL\":\r\n        this.printBOLClick();\r\n        break;\r\n      case \"ViewRailDispatch_PrintFAN\":\r\n        this.printFANClick();\r\n        break;\r\n      case \"ViewRailDispatch_RecordWeight\":\r\n        this.setState({ subPageName: \"RailDispatchRecordWeightDetails\" });\r\n        if (!this.state.isDetails) {\r\n          this.handleRowClick(this.state.selectedItems[0], false);\r\n          this.setState({ isDirectOpenSubPage: true });\r\n        }\r\n        operationsVisibility.delete = false;\r\n        operationsVisibility.add = false;\r\n        break;\r\n      case \"ViewRailDispatch_ViewAuditTrail\":\r\n        this.setState({ subPageName: \"RailDispatchViewAuditTrailDetails\" });\r\n        if (!this.state.isDetails) {\r\n          this.handleRowClick(this.state.selectedItems[0], false);\r\n          this.setState({ isDirectOpenSubPage: true });\r\n        }\r\n        operationsVisibility.delete = false;\r\n        operationsVisibility.add = false;\r\n        break;\r\n      case \"ViewRailDispatch_ViewBOL\":\r\n        this.viewBOLClick();\r\n        break;\r\n      case \"ViewRailDispatch_ViewLoadingDetails\":\r\n        this.setState({ subPageName: \"RailDispatchViewLoadingDetailsDetails\" });\r\n        if (!this.state.isDetails) {\r\n          this.handleRowClick(this.state.selectedItems[0], false);\r\n          this.setState({ isDirectOpenSubPage: true });\r\n        }\r\n        operationsVisibility.delete = false;\r\n        operationsVisibility.add = false;\r\n        break;\r\n      case \"ViewRailDispatch_RailWagonAssignment\":\r\n        this.setState({\r\n          subPageName: \"RailDispatchRailWagonAssignmentDetails\",\r\n        });\r\n        if (!this.state.isDetails) {\r\n          this.handleRowClick(this.state.selectedItems[0], false);\r\n          this.setState({ isDirectOpenSubPage: true });\r\n        }\r\n        operationsVisibility.delete = false;\r\n        operationsVisibility.add = false;\r\n        break;\r\n      case \"ViewRailDispatch_ProductAssignment\":\r\n        this.setState({ subPageName: \"RailDispatchProductAssignmentDetails\" });\r\n        if (!this.state.isDetails) {\r\n          this.handleRowClick(this.state.selectedItems[0], false);\r\n          this.setState({ isDirectOpenSubPage: true });\r\n        }\r\n        operationsVisibility.delete = false;\r\n        operationsVisibility.add = false;\r\n        break;\r\n      case \"ViewRailDispatch_LoadSpotAssignment\":\r\n        this.setState({ subPageName: \"RailDispatchLoadSpotAssignmentDetails\" });\r\n        if (!this.state.isDetails) {\r\n          this.handleRowClick(this.state.selectedItems[0], false);\r\n          this.setState({ isDirectOpenSubPage: true });\r\n        }\r\n        operationsVisibility.delete = false;\r\n        operationsVisibility.add = false;\r\n        break;\r\n      case \"ViewRailDispatch_BSIOutbound\":\r\n        this.handleBSIOutbound(this.state.selectedItems[0].Common_Code);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    this.setState({ operationsVisibility });\r\n  };\r\n\r\n  handleSelection = (items) => {\r\n    try {\r\n      const operationsVisibility = lodash.cloneDeep(\r\n        this.state.operationsVisibility\r\n      );\r\n\r\n      var { drawerStatus, activityInfo } = { ...this.state };\r\n\r\n      // let railDispatchDeleteStates = lodash.cloneDeep(\r\n      //   this.state.railDispatchDeleteStates\r\n      // );\r\n\r\n      // const isReady =\r\n      //   items.findIndex(\r\n      //     (x) =>\r\n      //       railDispatchDeleteStates.indexOf(\r\n      //         x.ViewRailDispatchDetails_ShipmentStatus.toUpperCase()\r\n      //       ) < 0\r\n      //   ) >= 0\r\n      //     ? false\r\n      //     : true;\r\n\r\n      // operationsVisibility.delete =\r\n      //   isReady &&\r\n      //   items.length > 0 &&\r\n      //   Utilities.isInFunction(\r\n      //     this.props.userDetails.EntityResult.FunctionsList,\r\n      //     functionGroups.remove,\r\n      //     fnRailDispatch\r\n      //   );\r\n\r\n      let dispatchDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ShipmentActivityInfo.RAILDISPATCH_ENABLE_DELETEPLAN &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      var dispatchDeleteStates = [];\r\n\r\n      if (\r\n        dispatchDeleteInfo !== undefined &&\r\n        dispatchDeleteInfo.length > 0\r\n      )\r\n        dispatchDeleteStates =\r\n          dispatchDeleteInfo[0].ShipmentStates;\r\n\r\n      let isReady =\r\n        items.findIndex(\r\n          (x) =>\r\n            dispatchDeleteStates.indexOf(\r\n              x.ViewRailDispatchDetails_ShipmentStatus.toUpperCase()\r\n            ) < 0\r\n        ) >= 0\r\n          ? false\r\n          : true;\r\n\r\n      operationsVisibility.delete = this.props.userDetails\r\n        .EntityResult.IsWebPortalUser\r\n        ? false\r\n        : isReady &&\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnRailDispatch\r\n        );\r\n\r\n      if (items.length !== 1) {\r\n        drawerStatus = true;\r\n      } else {\r\n        drawerStatus = false;\r\n      }\r\n\r\n      this.setState({\r\n        selectedItems: items,\r\n        operationsVisibility,\r\n        drawerStatus,\r\n      });\r\n\r\n      if (\r\n        items.length === 1\r\n        // this.props.userDetails.EntityResult.IsEnterpriseNode === false\r\n      ) {\r\n        this.setRightPaneDisplay(true);\r\n        this.getRailDispatchStatusOperation(\r\n          items[0].Common_Code,\r\n          items[0].ViewRailDispatchDetails_ShipmentStatus,\r\n          items[0]\r\n        );\r\n      } else {\r\n        this.setRightPaneDisplay(false);\r\n        this.setState({ isReadyToShowOperation: false });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchComposite: Error occurred on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  CheckRailDispatchDeleteAllowed() {\r\n    try {\r\n      axios(\r\n        RestAPIs.CheckRailDispatchDeleteAllowed,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.setState({\r\n              railDispatchDeleteStates: response.data.EntityResult,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while fetching delete states in Rail:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while fetching delete states in Rail:\", error);\r\n    }\r\n  }\r\n\r\n  handleUpdateStatusOperation = (railDispatch) => {\r\n    const item = {\r\n      Common_Code: railDispatch.DispatchCode,\r\n      ViewRailDispatchDetails_ShipmentStatus: railDispatch.DispatchStatus,\r\n      RailRouteConfigurationDetails_RailRouteCode: railDispatch.RouteCode,\r\n      ScheduledDate: railDispatch.ScheduledDate,\r\n      ViewRailDispatchList_LoadedDate: railDispatch.LoadEndTime,\r\n      AssociatedTerminals: railDispatch.TerminalCodes,\r\n      AcutalTerminalCode: railDispatch.ActualTerminalCode,\r\n    };\r\n    this.setState({ selectedItems: [item], selectedRow: item }, () => {\r\n      this.getRailDispatchStatusOperation(\r\n        railDispatch.DispatchCode,\r\n        railDispatch.DispatchStatus,\r\n        item\r\n      );\r\n    });\r\n  };\r\n\r\n  getRailDispatchStatusOperation(dispatchCode, dispatchStatus, item) {\r\n    this.setState({ isReadyToShowOperation: false });\r\n    this.getRailDispatchOperations(dispatchCode, dispatchStatus, item, () => {\r\n      this.getRailDispatchAllChangeStatus(dispatchCode, () => {\r\n        this.setState({ isReadyToShowOperation: true });\r\n      });\r\n    });\r\n  }\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      var { operationsVisibility, activityInfo } = { ...this.state };\r\n\r\n      let dispatchDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ShipmentActivityInfo.RAILDISPATCH_ENABLE_DELETEPLAN &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      var dispatchDeleteStates = [];\r\n\r\n      if (\r\n        dispatchDeleteInfo !== undefined &&\r\n        dispatchDeleteInfo.length > 0\r\n      )\r\n        dispatchDeleteStates =\r\n          dispatchDeleteInfo[0].ShipmentStates;\r\n\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibility.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnRailDispatch\r\n        );\r\n        operationsVisibility.delete = this.props.userDetails\r\n          .EntityResult.IsWebPortalUser\r\n          ? false\r\n          : dispatchDeleteStates.indexOf(\r\n            data.DispatchStatus.toUpperCase()\r\n          ) > -1 &&\r\n          Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.remove,\r\n            fnRailDispatch\r\n          );\r\n        this.setState({ isDetailsModified: true, operationsVisibility });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        const selectedItems = [\r\n          {\r\n            RailDispatchCode: data.Code,\r\n            Common_Shareholder: data.ShareholderCode,\r\n          },\r\n        ];\r\n        this.setState({\r\n          selectedItems,\r\n        });\r\n      }\r\n      this.handleNotify(notification);\r\n    } catch (error) {\r\n      console.log(\"RailDispatchComposite: Error occurred on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  handleNotify(notification) {\r\n    try {\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchComposite: Error occurred on handleNotify\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      this.setState({ selectedShareholder: shareholder });\r\n      this.getRailDispatchList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchComposite: Error occurred on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getTransportationType() {\r\n    let transportationType = Constants.TransportationType.RAIL;\r\n    const { itemProps } = this.props.activeItem;\r\n    if (itemProps !== undefined && itemProps.transportationType !== undefined) {\r\n      transportationType = itemProps.transportationType;\r\n    }\r\n    return transportationType;\r\n  }\r\n\r\n  getRailDispatchOperations(dispatchCode, dispatchStatus, item, callBack) {\r\n    var localTerminalCode = item.AcutalTerminalCode;\r\n\r\n    if (localTerminalCode === null || localTerminalCode === undefined) {\r\n      if (this.state.selectedItems.length === 1) {\r\n        localTerminalCode = this.state.selectedItems[0].AcutalTerminalCode;\r\n      }\r\n    }\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      KeyCodes: [\r\n        {\r\n          key: \"RailDispatchStatus\",\r\n          value: dispatchStatus,\r\n        },\r\n        {\r\n          key: \"DispatchCode\",\r\n          value: dispatchCode,\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailDispatchOperations,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          const currentAccess = {\r\n            ViewRailDispatch_EditAccess: false,\r\n            ViewRailDispatch_DisableAdjustPlanQty: false,\r\n            ViewRailDispatch_DisableWagonForceClose: false,\r\n            ViewRailDispatch_Delete: false,\r\n            ViewRailDispatch_Update: false,\r\n          };\r\n          for (let key in currentAccess) {\r\n            if (result.EntityResult[key] !== undefined) {\r\n              currentAccess[key] = result.EntityResult[key];\r\n              if (\r\n                key !== \"ViewRailDispatch_Update\" &&\r\n                key !== \"ViewRailDispatch_Delete\"\r\n              )\r\n                delete result.EntityResult[key];\r\n            }\r\n          }\r\n\r\n          const operationOrder = [\r\n            \"ViewRailDispatch_Update\",\r\n            \"ViewRailDispatch_Delete\",\r\n            \"ViewRailDispatch_AuthorizeToLoad\",\r\n            \"ViewRailDispatch_PrintFAN\",\r\n            \"ViewRailDispatch_RecordWeight\",\r\n            \"ViewRailDispatch_RailWagonAssignment\",\r\n            \"ViewRailDispatch_ProductAssignment\",\r\n            \"ViewRailDispatch_LoadSpotAssignment\",\r\n            \"ViewRailDispatch_ManualEntry\",\r\n            \"ViewRailDispatch_ViewLoadingDetails\",\r\n            \"ViewRailDispatch_ViewAuditTrail\",\r\n            \"ViewRailDispatch_CloseDispatch\",\r\n            \"ViewRailDispatch_ViewBOL\",\r\n            \"ViewRailDispatch_PrintBOL\",\r\n          ];\r\n          const nextOperations = [];\r\n          for (let operation of operationOrder) {\r\n            if (\r\n              operation === \"ViewRailDispatch_Update\" ||\r\n              operation === \"ViewRailDispatch_Delete\"\r\n            ) {\r\n              let operationsVisibility = this.state.operationsVisibility;\r\n              if (operation === \"ViewRailDispatch_Update\") {\r\n                //operationsVisibility.modify=true;\r\n                currentAccess.ViewRailDispatch_Update =\r\n                  result.EntityResult[operation];\r\n              }\r\n              if (operation === \"ViewRailDispatch_Delete\") {\r\n                operationsVisibility.delete = result.EntityResult[operation];\r\n                currentAccess.ViewRailDispatch_Delete =\r\n                  result.EntityResult[operation];\r\n              }\r\n              this.setState({\r\n                operationsVisibility,\r\n              });\r\n              continue;\r\n            }\r\n            if (\r\n              dispatchStatus === Constants.Shipment_Status.CHECKED_IN &&\r\n              operation === \"ViewRailDispatch_ProductAssignment\"\r\n            ) {\r\n              continue;\r\n            } else if (\r\n              operation === \"ViewRailDispatch_RailWagonAssignment\" ||\r\n              operation === \"ViewRailDispatch_ProductAssignment\" ||\r\n              operation === \"ViewRailDispatch_LoadSpotAssignment\"\r\n            ) {\r\n              if (\r\n                !this.props.userDetails.EntityResult.IsEnterpriseNode &&\r\n                dispatchStatus !== \"READY\" &&\r\n                localTerminalCode === null\r\n              ) {\r\n                continue;\r\n              } else if (result.EntityResult[operation] === true) {\r\n                nextOperations.push(operation);\r\n              }\r\n            } else if (result.EntityResult[operation] === true) {\r\n              if (\r\n                operation === \"ViewRailDispatch_CloseDispatch\" ||\r\n                operation === \"ViewRailDispatch_RecordWeight\" ||\r\n                operation === \"ViewRailDispatch_ManualEntry\"\r\n              ) {\r\n                if (\r\n                  !this.props.userDetails.EntityResult.IsEnterpriseNode &&\r\n                  localTerminalCode !==\r\n                  this.props.userDetails.EntityResult.TerminalCode\r\n                ) {\r\n                  continue;\r\n                }\r\n              }\r\n\r\n              if (\r\n                operation === \"ViewRailDispatch_PrintFAN\" ||\r\n                operation === \"ViewRailDispatch_PrintBOL\"\r\n              ) {\r\n                if (this.props.userDetails.EntityResult.IsWebPortalUser) {\r\n                  continue;\r\n                }\r\n              }\r\n              nextOperations.push(operation);\r\n            }\r\n          }\r\n          if (\r\n            dispatchStatus === Constants.Shipment_Status.CLOSED &&\r\n            this.props.userDetails.EntityResult.IsBSIEnabledLicense &&\r\n            !this.props.userDetails.EntityResult.IsArchived &&\r\n            !this.props.userDetails.EntityResult.IsWebPortalUser\r\n          ) {\r\n            nextOperations.push(\"ViewRailDispatch_BSIOutbound\");\r\n          }\r\n\r\n          this.setState({ nextOperations, currentAccess });\r\n          callBack();\r\n        } else {\r\n          console.log(\"Error in getRailDispatchOperations: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getRailDispatchOperations: \", error);\r\n      });\r\n  }\r\n\r\n  getRailDispatchAllChangeStatus(dispatchCode, callBack) {\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      KeyCodes: [\r\n        {\r\n          key: \"DispatchCode\",\r\n          value: dispatchCode,\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailDispatchAllChangeStatus,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            currentStatuses: result.EntityResult,\r\n            //lastStatus: result.EntityResult.pop(),\r\n          });\r\n          callBack();\r\n        } else {\r\n          console.log(\r\n            \"Error in getRailDispatchAllChangeStatus: \",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getRailDispatchAllChangeStatus: \", error);\r\n      });\r\n  }\r\n\r\n  authorizeToLoadClick = () => {\r\n    let showAuthorizeToLoadAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n  \r\n    this.setState({ showAuthorizeToLoadAuthenticationLayout, }, () => {\r\n      if (showAuthorizeToLoadAuthenticationLayout === false) {\r\n        this.handleAuthorizeToLoad();\r\n      }})\r\n    }\r\n  \r\n\r\n    handleAuthorizeToLoad= () =>  {\r\n\r\n    this.handleAuthenticationClose();\r\n\r\n   let dispatchCode= this.state.selectedItems[0].Common_Code;\r\n   let dispatchStatus= this.state.selectedItems[0].ViewRailDispatchDetails_ShipmentStatus;\r\n   \r\n    const obj = {\r\n      DispatchCode: dispatchCode,\r\n      DispatchStatus: dispatchStatus,\r\n      TMWebApiRequest: {\r\n        ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n        KeyCodes: [\r\n          {\r\n            key: \"RailDispatchCode\",\r\n            value: dispatchCode,\r\n          },\r\n        ],\r\n      },\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewRailDispatch_AuthorizeLoad_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n          keyValues: [dispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.RailDispatchAuthorizeToLoad,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          const operationsVisibility = lodash.cloneDeep(\r\n            this.state.operationsVisibility\r\n          );\r\n          operationsVisibility.delete = false;\r\n          if (this.state.isDetails) {\r\n            const selectedRow = lodash.cloneDeep(this.state.selectedRow);\r\n            selectedRow.ViewRailDispatchDetails_ShipmentStatus =\r\n              Constants.Shipment_Status.CHECKED_IN;\r\n            this.setState({ selectedRow });\r\n          } else {\r\n            this.getRailDispatchList(this.state.selectedShareholder);\r\n          }\r\n          // setTimeout(() => {\r\n          //   this.getRailDispatchStatusOperation(\r\n          //     dispatchCode,\r\n          //     Constants.Shipment_Status.CHECKED_IN\r\n          //   );\r\n          // }, 700);\r\n          this.setState({ operationsVisibility });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in handleAuthorizeToLoad: \", result.ErrorList);\r\n        }\r\n        this.handleNotify(notification);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while handleAuthorizeToLoad: \", error);\r\n      });\r\n  }\r\n\r\n  handleConfirmCloseDispatch = (dispatchCode, dispatchStatus) => {\r\n    const modalData = this.state.modalData;\r\n    modalData.closeDispatch.isOpen = true;\r\n    modalData.closeDispatch.data.dispatchCode = dispatchCode;\r\n    modalData.closeDispatch.data.dispatchStatus = dispatchStatus;\r\n    this.setState({ modalData });\r\n  };\r\n\r\n  handleCloseDispatchReasonChange = (reason) => {\r\n    const modalData = this.state.modalData;\r\n    modalData.closeDispatch.data.reason = reason;\r\n    this.setState({ modalData });\r\n  };\r\n\r\n  forceCloseRailDispatch = () => {\r\n    const modalData = lodash.cloneDeep(this.state.modalData);\r\n    if (modalData.closeDispatch.data.reason === \"\") {\r\n      modalData.closeDispatch.validationErrors.reason =\r\n        \"ViewShipment_MandatoryReason\";\r\n      this.setState({ modalData });\r\n      return;\r\n    } else {\r\n      modalData.closeDispatch.validationErrors.reason = \"\";\r\n    }\r\n    \r\n    let showCloseShipmentAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n  \r\n    this.setState({ showCloseShipmentAuthenticationLayout, }, () => {\r\n      if (showCloseShipmentAuthenticationLayout === false) {\r\n        this.closeRailDispatch();\r\n      }})\r\n  };\r\n\r\n  closeRailDispatch= () =>\r\n  {\r\n    this.handleAuthenticationClose();\r\n     const modalData = lodash.cloneDeep(this.state.modalData);\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      KeyCodes: [\r\n        {\r\n          key: \"RailDispatchCode\",\r\n          value: modalData.closeDispatch.data.dispatchCode,\r\n        },\r\n      ],\r\n      Entity: {\r\n        Reason: modalData.closeDispatch.data.reason,\r\n        DispatchCode: modalData.closeDispatch.data.dispatchCode,\r\n        DispatchStatus: modalData.closeDispatch.data.dispatchStatus,\r\n      },\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewRailDispatch_CloseDispatch_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n          keyValues: [modalData.closeDispatch.data.dispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.ForceCloseRailDispatch,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        modalData.closeDispatch.isOpen = false;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          if (this.state.isDetails) {\r\n            const selectedRow = lodash.cloneDeep(this.state.selectedRow);\r\n            selectedRow.ViewRailDispatchDetails_ShipmentStatus =\r\n              Constants.Shipment_Status.CLOSED;\r\n            this.setState({ selectedRow });\r\n          } else {\r\n            this.getRailDispatchList(this.state.selectedShareholder);\r\n          }\r\n          \r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in forceCloseRailDispatch: \", result.ErrorList);\r\n        }\r\n        this.setState({ modalData });\r\n        this.handleNotify(notification);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while forceCloseRailDispatch: \", error);\r\n      });\r\n  }\r\n\r\n\r\n  printFANClick= () => {\r\n    let showFANAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n  \r\n    this.setState({ showFANAuthenticationLayout, }, () => {\r\n      if (showFANAuthenticationLayout === false) {\r\n        this.handlePrintFAN();\r\n      }})\r\n     \r\n    }\r\n\r\n  handlePrintFAN= () =>{\r\n    this.handleAuthenticationClose();\r\n    let dispatchCode= this.state.selectedItems[0].Common_Code;\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      KeyCodes: [\r\n        {\r\n          key: \"RailDispatchCode\",\r\n          value: dispatchCode,\r\n        },\r\n      ],\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_PrintStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n          keyValues: [dispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.RailDispatchPrintFAN,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess !== true) {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in handlePrintFAN: \", result.ErrorList);\r\n        }\r\n        this.handleNotify(notification);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while handlePrintFAN: \", error);\r\n      });\r\n  }\r\n\r\n  handleModalBack = () => {\r\n    this.setState({ showReport: false });\r\n  };\r\n  renderModal() {\r\n    let path = null;\r\n    if (this.props.userDetails.EntityResult.IsArchived) {\r\n      path = \"TM/\" + Constants.TMReportArchive + \"/RailBOL\";\r\n    } else {\r\n      path = \"TM/\" + Constants.TMReports + \"/RailBOL\";\r\n    }\r\n    let paramValues = {\r\n      Culture: this.props.userDetails.EntityResult.UICulture,\r\n      ShareholderCode: this.state.selectedShareholder,\r\n      RailDispatchCode:\r\n        this.state.selectedItems.length === 1\r\n          ? this.state.selectedItems[0].Common_Code\r\n          : this.state.selectedRow.Common_Code,\r\n    };\r\n\r\n    return (\r\n      <ReportDetails\r\n        showReport={this.state.showReport}\r\n        handleBack={this.handleModalBack}\r\n        handleModalClose={this.handleModalBack}\r\n        // proxyServerHost=\"http://epksr5115dit:3625/TMWebAPI/\"\r\n        proxyServerHost={RestAPIs.WebAPIURL}\r\n        reportServiceHost={this.reportServiceURI}\r\n        filePath={path}\r\n        parameters={paramValues}\r\n      />\r\n    );\r\n  }\r\n\r\n  viewBOLClick= () => {\r\n    let showViewBOLAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n  \r\n    this.setState({ showViewBOLAuthenticationLayout, }, () => {\r\n      if (showViewBOLAuthenticationLayout === false) {\r\n        this.handleViewBOL();\r\n      }})\r\n     \r\n    }\r\n\r\n  handleViewBOL = () => {\r\n    this.handleAuthenticationClose();\r\n    if (this.reportServiceURI === undefined) {\r\n      axios(\r\n        RestAPIs.GetReportServiceURI,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        if (response.data.IsSuccess) {\r\n          this.reportServiceURI = response.data.EntityResult;\r\n          this.setState({ showReport: true });\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ showReport: true });\r\n    }\r\n  };\r\n\r\n\r\n  printBOLClick= () => {\r\n    let showPrintBOLAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n  \r\n    this.setState({ showPrintBOLAuthenticationLayout, }, () => {\r\n      if (showPrintBOLAuthenticationLayout === false) {\r\n        this.handlePrintBOL();\r\n      }})\r\n     \r\n    }\r\n\r\n\r\n  handlePrintBOL= () => {\r\n    this.handleAuthenticationClose();\r\n    let dispatchCode=this.state.selectedItems[0].Common_Code;\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      KeyCodes: [\r\n        {\r\n          key: \"RailDispatchCode\",\r\n          value: dispatchCode,\r\n        },\r\n      ],\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_PrintStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n          keyValues: [dispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.RailDispatchPrintBOL,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess !== true) {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in handlePrintBOL: \", result.ErrorList);\r\n        }\r\n        this.handleNotify(notification);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while handlePrintBOL: \", error);\r\n      });\r\n  }\r\n\r\n  handleBSIOutbound(dispatchCode) {\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      KeyCodes: [\r\n        {\r\n          key: \"RailDispatchCode\",\r\n          value: dispatchCode,\r\n        },\r\n      ],\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewRailDispatch_BSIOutbound_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n          keyValues: [dispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.RailDispatchBSIOutbound,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess !== true) {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in handleBSIOutbound: \", result.ErrorList);\r\n        }\r\n        this.handleNotify(notification);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while handleBSIOutbound: \", error);\r\n      });\r\n  }\r\n\r\n  setRightPaneDisplay = (isDisplayRightPane) => {\r\n    this.setState({ isDisplayRightPane });\r\n  };\r\n\r\n  handleDrawer = () => {\r\n    var drawerStatus = lodash.cloneDeep(this.state.drawerStatus);\r\n    this.setState({\r\n      drawerStatus: !drawerStatus,\r\n    });\r\n  };\r\n\r\n  //Get KPI for Rail Dispatch\r\n  getKPIList() {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      var notification = {\r\n        message: \"\",\r\n        messageType: \"critical\",\r\n        messageResultDetails: [],\r\n      };\r\n      let objKPIRequestData = {\r\n        PageName: kpiRailShipmentList,\r\n        InputParameters: [],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              railDispatchKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ railDispatchKPIList: [] });\r\n            console.log(\"Error in Rail Dispatch KPIList:\", result.ErrorList);\r\n            notification.messageResultDetails.push({\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: result.ErrorList[0],\r\n            });\r\n          }\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Rail Dispatch KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  getContractLookupValues() {\r\n    try {\r\n      let railDispatchAdd = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnRailDispatch\r\n      );\r\n      if (railDispatchAdd) {\r\n        this.getLookUpData(\"Contract\", (entityResult) => {\r\n          this.setState({\r\n            isContractDisable:\r\n              entityResult[\"EnableContract\"] === \"0\" ? false : true,\r\n          });\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error while getContractLookupValues: \", error);\r\n    }\r\n  }\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showDeleteAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showDeleteAuthenticationLayout });\r\n      if (showDeleteAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Marine Shipment Composite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n \r\n\r\n  handleAuthenticationClose = () => {\r\n    \r\n    this.setState({\r\n      showDeleteAuthenticationLayout: false,\r\n      showAuthorizeToLoadAuthenticationLayout: false,\r\n      showCloseShipmentAuthenticationLayout: false,\r\n      showViewBOLAuthenticationLayout: false,\r\n      showPrintBOLAuthenticationLayout:false,\r\n      showFANAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  \r\n  getFunctionGroupName() {\r\n    if(this.state.showDeleteAuthenticationLayout )\r\n      return fnRailDispatch\r\n    else if(this.state.showCloseShipmentAuthenticationLayout)\r\n      return fnCloseRailDispatch\r\n    else if(this.state.showAuthorizeToLoadAuthenticationLayout)\r\n      return fnViewRailDispatch\r\n    else if(this.state.showViewBOLAuthenticationLayout || this.state.showPrintBOLAuthenticationLayout)\r\n      return fnPrintRailBOL\r\n      else if(this.state.showFANAuthenticationLayout)\r\n      return fnPrintRailFAN\r\n   };\r\n\r\n   getDeleteorEditMode() {\r\n    if(this.state.showDeleteAuthenticationLayout)\r\n      return functionGroups.remove;\r\n    else\r\n      return functionGroups.modify;\r\n   };\r\n\r\n   handleOperation()  {\r\n  \r\n    if(this.state.showDeleteAuthenticationLayout)\r\n      return this.handleDelete\r\n    else if(this.state.showAuthorizeToLoadAuthenticationLayout)\r\n      return this.handleAuthorizeToLoad\r\n    else if(this.state.showCloseShipmentAuthenticationLayout)\r\n      return this.closeRailDispatch\r\n    else if(this.state.showFANAuthenticationLayout)\r\n      return this.handlePrintFAN\r\n    else if(this.state.showViewBOLAuthenticationLayout)\r\n      return this.handleViewBOL;\r\n      else if(this.state.showPrintBOLAuthenticationLayout)\r\n      return this.handlePrintBOL;\r\n };\r\n\r\n  render() {\r\n    const modalData = this.state.modalData;\r\n    let fillPage = true;\r\n    const isDisplayRightPane =\r\n      this.state.selectedItems.length === 1 &&\r\n      // this.props.userDetails.EntityResult.IsEnterpriseNode === false &&\r\n      this.state.isDisplayRightPane;\r\n    let loadingClass = \"globalLoader\";\r\n\r\n    return (\r\n      <div>\r\n        {this.props.shipmentSource === undefined ||\r\n          this.props.shipmentSource === \"\" ||\r\n          this.props.shipmentSource === null ? (\r\n          <ErrorBoundary>\r\n            <TMUserActionsComposite\r\n              operationsVisibilty={this.state.operationsVisibility}\r\n              breadcrumbItem={this.props.activeItem}\r\n              onAdd={this.handleAdd}\r\n              onDelete={this.authenticateDelete}\r\n              shrVisible={false}\r\n              handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n            />\r\n          </ErrorBoundary>\r\n        ) : (\r\n          <>\r\n            {this.state.isDetails ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                {!this.state.isGoBackToSource ? (\r\n                  <TranslationConsumer>\r\n                    {(t) => (\r\n                      <div className=\"headerContainer\">\r\n                        <div className=\"row headerSpacing\">\r\n                          <div className=\"col paddingHeaderItemLeft\">\r\n                            <span\r\n                              style={{ margin: \"auto\" }}\r\n                              className=\"headerLabel\"\r\n                            >\r\n                              {this.props.shipmentSourceCode +\r\n                                \" - \" +\r\n                                t(\"Dispatch_OtherSource\")}\r\n                            </span>\r\n                          </div>\r\n\r\n                          <div>\r\n                            <div className=\"headerItemRight\">\r\n                              <Button\r\n                                type=\"primary\"\r\n                                content={t(\"RailDispatchPlanList_AddNew\")}\r\n                                disabled={!this.state.isContractDisable}\r\n                                onClick={this.handleAdd}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </TranslationConsumer>\r\n                ) : null}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {this.state.isGoBackToSource ? (\r\n          <ErrorBoundary>\r\n            <ContractComposite\r\n              shipmentSource={this.props.shipmentSource}\r\n              activeItem={this.props.activeItem}\r\n            ></ContractComposite>\r\n          </ErrorBoundary>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {this.state.isDetails === true ? (\r\n          // <div\r\n          //   className={isDisplayRightPane ? \"showShipmentStatusRightPane\" : \"\"}\r\n          // >\r\n          <div\r\n            className={\r\n              isDisplayRightPane\r\n                ? !this.state.drawerStatus\r\n                  ? \"showShipmentStatusRightPane\"\r\n                  : \"drawerClose\"\r\n                : \"\"\r\n            }\r\n          >\r\n            <ErrorBoundary>\r\n              <RailDispatchDetailsComposite\r\n                Key=\"RailDispatchDetails\"\r\n                selectedRow={this.state.selectedRow}\r\n                onBack={this.handleBack}\r\n                onSubPageBack={this.handleSubPageBack}\r\n                onSaved={this.savedEvent}\r\n                terminalCodes={this.state.terminalCodes}\r\n                selectedShareholder={this.state.selectedShareholder}\r\n                getLookUpData={this.getLookUpData}\r\n                onNotify={this.handleNotify}\r\n                onUpdateStatusOperation={this.handleUpdateStatusOperation}\r\n                subPageName={this.state.subPageName}\r\n                isDirectOpenSubPage={this.state.isDirectOpenSubPage}\r\n                isDisplayDetails={this.state.isDisplayDetails}\r\n                currentAccess={this.state.currentAccess}\r\n                onSetRightPaneDisplay={this.setRightPaneDisplay}\r\n                enableHSEInspection={this.state.enableHSEInspection}\r\n                railLookUpData={this.state.railLookUpData}\r\n                shipmentSource={this.props.shipmentSource}\r\n                shipmentSourceCode={this.props.shipmentSourceCode}\r\n                shipmentSourceCompartmentItems={\r\n                  this.props.shipmentSourceCompartmentItems\r\n                }\r\n                shipmentSourceDetails={this.props.shipmentSourceDetails}\r\n                shipmentSourceFromSummary={this.props.shipmentSourceFromSummary}\r\n                selectedSourceCode={this.props.selectedSourceCode}\r\n              />\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : (\r\n          // {/* <div\r\n          //   className={\r\n          //     isDisplayRightPane ? \"showShipmentStatusRightPane\" : \"\"\r\n          //   }\r\n          // > */}\r\n          // <div className={isDisplayRightPane ? \"showShipmentStatusRightPane\" : \"\"}>\r\n          <div>\r\n            {this.props.shipmentSource === undefined ||\r\n              this.props.shipmentSource === \"\" ||\r\n              this.props.shipmentSource === null ? (\r\n              <ErrorBoundary>\r\n                <div className=\"kpiSummaryContainer\">\r\n                  <KPIDashboardLayout\r\n                    kpiList={this.state.railDispatchKPIList}\r\n                    pageName=\"RailDispatch\"\r\n                  ></KPIDashboardLayout>\r\n                </div>\r\n              </ErrorBoundary>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div\r\n              className={\r\n                isDisplayRightPane\r\n                  ? !this.state.drawerStatus\r\n                    ? \"showShipmentStatusRightPane\"\r\n                    : \"drawerClose\"\r\n                  : \"\"\r\n              }\r\n            >\r\n              {this.props.shipmentSourceFromSummary === undefined ||\r\n                this.props.shipmentSourceFromSummary === \"\" ||\r\n                this.props.shipmentSourceFromSummary === null ? (\r\n                <div>\r\n                  {this.props.shipmentSource === undefined ? (\r\n                    <ErrorBoundary>\r\n                      <TMTransactionFilters\r\n                        dateRange={{\r\n                          from: this.state.fromDate,\r\n                          to: this.state.toDate,\r\n                        }}\r\n                        dateError={this.state.dateError}\r\n                        handleDateTextChange={this.handleDateTextChange}\r\n                        handleRangeSelect={this.handleRangeSelect}\r\n                        handleLoadOrders={this.handleLoadOrders}\r\n                        filterText=\"LoadShipments\"\r\n                      />\r\n                    </ErrorBoundary>\r\n                  ) : null}\r\n\r\n                  {this.state.isReadyToRender ? (\r\n                    <ErrorBoundary>\r\n                      <div\r\n                        className={\r\n                          fillPage === true ? \"compositeTransactionList\" : \"\"\r\n                        }\r\n                      >\r\n                        <RailDispatchSummaryPageComposite\r\n                          tableData={this.state.data.Table}\r\n                          columnDetails={this.state.data.Column}\r\n                          pageSize={\r\n                            this.props.userDetails.EntityResult.PageAttibutes\r\n                              .WebPortalListPageSize\r\n                          }\r\n                          exportRequired={true}\r\n                          exportFileName=\"RailDispatchList\"\r\n                          columnPickerRequired={true}\r\n                          terminalsToShow={\r\n                            this.props.userDetails.EntityResult.PageAttibutes\r\n                              .NoOfTerminalsToShow\r\n                          }\r\n                          selectionRequired={true}\r\n                          columnGroupingRequired={true}\r\n                          onSelectionChange={this.handleSelection}\r\n                          onRowClick={this.handleRowClick}\r\n                          parentComponent={this.componentName}\r\n                        />\r\n                      </div>\r\n                    </ErrorBoundary>\r\n                  ) : (\r\n                    <LoadingPage\r\n                      loadingClass={loadingClass}\r\n                      message=\"\"\r\n                    ></LoadingPage>\r\n                  )}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          // {/* </div> */}\r\n        )}\r\n\r\n        {isDisplayRightPane ? (\r\n          // <div className=\"showShipmentStatusLeftPane\">\r\n          <div\r\n            className={this.state.drawerStatus ? \"marineStatusLeftPane\" : \"\"}\r\n          >\r\n            {/* <RailDispatchSummaryOperations\r\n              selectedItem={this.state.selectedItems}\r\n              nextOperations={this.state.nextOperations}\r\n              handleDetailsPageClick={this.handleRowClick}\r\n              handleOperationButtonClick={this.handleOperationClick}\r\n              currentStatuses={this.state.currentStatuses}\r\n              lastStatus={this.state.lastStatus}\r\n              isDetails={this.state.isDetails}\r\n              isReadyToRender={this.state.isReadyToShowOperation}\r\n            /> */}\r\n            <TransactionSummaryOperations\r\n              selectedItem={this.state.selectedItems}\r\n              shipmentNextOperations={this.state.nextOperations}\r\n              handleDetailsPageClick={this.handleRowClick}\r\n              handleOperationButtonClick={this.handleOperationClick}\r\n              currentStatuses={this.state.currentStatuses}\r\n              isDetails={this.state.isDetails}\r\n              handleDrawer={this.handleDrawer}\r\n              isWebPortalUser={\r\n                this.props.userDetails.EntityResult.IsWebPortalUser\r\n              }\r\n              title={\"ViewAllShipment_Details\"}\r\n              unAllowedOperations={[]}\r\n              webPortalAllowedOperations={[\r\n                \"ViewRailDispatch_ViewLoadingDetails\",\r\n                \"ViewRailDispatch_ViewAuditTrail\",\r\n                \"ViewRailDispatch_ViewBOL\",\r\n              ]}\r\n            />\r\n          </div>\r\n        ) : null}\r\n\r\n        {this.state.showDeleteAuthenticationLayout  ||\r\n           this.state.showAuthorizeToLoadAuthenticationLayout ||\r\n           this.state.showCloseShipmentAuthenticationLayout ||\r\n           this.state.showViewBOLAuthenticationLayout ||\r\n           this.state.showPrintBOLAuthenticationLayout ||\r\n           this.state.showFANAuthenticationLayout \r\n          ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={this.getDeleteorEditMode()}\r\n            functionGroup={this.getFunctionGroupName()}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleOperation()}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n\r\n        {this.props.shipmentSource === undefined ? (\r\n          <ErrorBoundary>\r\n            <ToastContainer\r\n              hideProgressBar={true}\r\n              closeOnClick={false}\r\n              closeButton={true}\r\n              newestOnTop={true}\r\n              position=\"bottom-right\"\r\n              toastClassName=\"toast-notification-wrap\"\r\n            />\r\n          </ErrorBoundary>\r\n        ) : null}\r\n        {Object.keys(this.state.selectedRow).length > 0 ||\r\n          this.state.selectedItems.length === 1\r\n          ? this.renderModal()\r\n          : \"\"}\r\n\r\n        <ErrorBoundary>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <>\r\n                <Modal\r\n                  size=\"mini\"\r\n                  open={this.state.modalData.closeDispatch.isOpen}\r\n                  closeOnDimmerClick={false}\r\n                >\r\n                  <Modal.Content>\r\n                    <Input\r\n                      fluid\r\n                      label={t(\"ViewRailDispatchList_ForceCloseHeader\")}\r\n                      onChange={this.handleCloseDispatchReasonChange}\r\n                      error={t(\r\n                        this.state.modalData.closeDispatch.validationErrors\r\n                          .reason\r\n                      )}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </Modal.Content>\r\n                  <Modal.Footer>\r\n                    <Button\r\n                      content={t(\"AccessCardInfo_Ok\")}\r\n                      onClick={this.forceCloseRailDispatch}\r\n                    />\r\n                    <Button\r\n                      content={t(\"AccessCardInfo_Cancel\")}\r\n                      onClick={() => {\r\n                        modalData.closeDispatch.isOpen = false;\r\n                        modalData.closeDispatch.data.reason = \"\";\r\n                        modalData.closeDispatch.validationErrors.reason = \"\";\r\n                        this.setState({ modalData });\r\n                      }}\r\n                    />\r\n                  </Modal.Footer>\r\n                </Modal>\r\n              </>\r\n            )}\r\n          </TranslationConsumer>\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RailDispatchComposite);\r\n\r\nRailDispatchComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n  shipmentSource: PropTypes.number,\r\n  shipmentSourceCode: PropTypes.string,\r\n  selectedShareholder: PropTypes.string,\r\n  shipmentSourceCompartmentItems: PropTypes.array,\r\n  shipmentSourceDetails: PropTypes.object,\r\n  shipmentSourceFromSummary: PropTypes.bool,\r\n  shipmentType: PropTypes.string,\r\n  selectedSourceCode: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nTruckShipmentSummaryPageComposite.propTypes = {\r\n  tableData: PropTypes.array.isRequired,\r\n  columnDetails: PropTypes.array.isRequired,\r\n  pageSize: PropTypes.number,\r\n  exportRequired:PropTypes.bool,\r\n  exportFileName:PropTypes.string,\r\n  columnPickerRequired:PropTypes.bool,\r\n  columnGroupingRequired:PropTypes.bool,\r\n  selectionRequired:PropTypes.bool,\r\n  terminalsToShow: PropTypes.number,\r\n  selectedItems: PropTypes.array.isRequired,\r\n  onSelectionChange: PropTypes.func.isRequired,\r\n  onRowClick: PropTypes.func.isRequired,\r\n  parentComponent:PropTypes.string,\r\n};\r\n\r\nTruckShipmentSummaryPageComposite.defaultProps = {\r\n  pageSize: 10,\r\n  terminalsToShow: 2,\r\n  tableData: [],\r\n  columnDetails: [],\r\n  selectedItems: [],\r\n};\r\nexport function TruckShipmentSummaryPageComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  selectionRequired,\r\n  terminalsToShow,\r\n  selectedItems,\r\n  onSelectionChange,\r\n  onRowClick,\r\n  parentComponent,\r\n}) {\r\n  return (\r\n    <div>\r\n      <WijmoGridComposite\r\n      data={tableData}\r\n      columns={columnDetails}\r\n      rowsPerPage={pageSize}\r\n      exportRequired={exportRequired}\r\n      exportFileName={exportFileName}\r\n      columnPickerRequired={columnPickerRequired}\r\n      columnGroupingRequired={columnGroupingRequired}\r\n      selectionRequired={selectionRequired}\r\n      selectedItems={selectedItems}\r\n      onSelectionHandle={onSelectionChange}\r\n      onRowClick={onRowClick}\r\n      parentComponent={parentComponent}\r\n      terminalsToShow={terminalsToShow}\r\n    ></WijmoGridComposite>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TruckShipmentSummaryPageComposite } from \"../Summary/TruckShipmentSummaryComposite\";\r\nimport TruckShipmentManualEntryDetailsComposite from \"../Details/TruckShipmentManualEntryDetailsComposite\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../CSS/styles.css\";\r\nimport {\r\n  functionGroups,\r\n  fnSBC,\r\n  fnSBP,\r\n  fnKPIInformation,\r\n  fnCloseShipment,\r\n  fnShipmentStatus,\r\n  fnPrintBOL,\r\n  fnPrintFAN,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport axios from \"axios\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport ReportDetails from \"../../UIBase/Details/ReportDetails\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport TransactionSummaryOperations from \"../Common/TransactionSummaryOperations\";\r\nimport { TMTransactionFilters } from \"../../UIBase/Common/TMTransactionFilters\";\r\n//import { emptyShipment } from \"../../../JS/DefaultEntities\";\r\nimport TruckShipmentDetailsComposite from \"../Details/TruckShipmentDetailsComposite\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport lodash from \"lodash\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { TruckShipmentViewAuditTrailDetails } from \"../../UIBase/Details/TruckShipmentViewAuditTrailDetails\";\r\nimport { TruckShipmentViewLoadingDetails } from \"../../UIBase/Details/TruckShipmentViewLoadingDetails\";\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport { kpiTruckShipmentList } from \"../../../JS/KPIPageName\";\r\nimport { shipmentStatusTimeAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Checkbox,\r\n  VerticalMenu,\r\n  Popup,\r\n} from \"@scuf/common\";\r\nimport OrderComposite from \"./OrderComposite\";\r\nimport ContractComposite from \"./ContractComposite\";\r\nimport TruckShipmentSealDetailsComposite from \"../Details/TruckShipmentSealDetailsComposite\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\n\r\nclass TruckShipmentComposite extends Component {\r\n  state = {\r\n    shipment: {},\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: \"false\",\r\n    operationsVisibilty: { add: true, delete: false, shareholder: true },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    selectedShareholder:\r\n      this.props.selectedShareholder === undefined ||\r\n        this.props.selectedShareholder === null ||\r\n        this.props.selectedShareholder === \"\"\r\n        ? this.props.userDetails.EntityResult.PrimaryShareholder\r\n        : this.props.selectedShareholder,\r\n    popUpContent: [],\r\n    data: {},\r\n    terminalCodes: [],\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    dateError: \"\",\r\n    shipmentNextOperations: [],\r\n    currentShipmentStatuses: [],\r\n    //lastStatus: \"\",\r\n    shipmentType: \"\",\r\n    isOperation: false,\r\n    isManualEntry: false,\r\n    isViewAuditTrail: false,\r\n    auditTrailList: [],\r\n    modAuditTrailList: [],\r\n    truckShipmentKPIList: [],\r\n    attributeMetaDataList: [],\r\n    isViewLoadingDetails: false,\r\n    modViewLoadingDetails: [],\r\n    loadingExpandedRows: [],\r\n    nonConfigColumns: [],\r\n    isSealCompartments: false,\r\n    sealCompartments: [],\r\n    isRecordWeight: false,\r\n    recordWeightList: [],\r\n    weighBridgeCode: \"\",\r\n    scadaValue: \"\",\r\n    allowOutofRangeTW: false,\r\n    isNotRevised: false,\r\n    staticLoadingDetails: [],\r\n    showReport: false,\r\n    isCloseShipment: false,\r\n    isVehicleCrippled: false,\r\n    reasonForClosure: \"\",\r\n    modCustomValues: {},\r\n    drawerStatus: false,\r\n    popUpOpen: false,\r\n    isGoBackToSource: false,\r\n    isContractDisable: false,\r\n    isOrderDisable: false,\r\n    activityInfo: [],\r\n    isLadenWeightValid: false,\r\n    ladenWeightError: \"\",\r\n    vehicleForRecordWeight: {},\r\n    showDeleteAuthenticationLayout: false,\r\n    showAuthorizeToLoadAuthenticationLayout: false,\r\n    showAllowToLoadAuthenticationLayout: false,\r\n    showCloseShipmentAuthenticationLayout: false,\r\n    showViewBOLAuthenticationLayout: false,\r\n    showPrintBOLAuthenticationLayout: false,\r\n    showFANAuthenticationLayout: false,\r\n    isAllocateBay: false,\r\n    bayData: [],\r\n    selectBay: \"\",\r\n    isDeAllocateBay: false,\r\n    ShipmentBay: \"\",\r\n  };\r\n\r\n  componentName = \"TruckShipmentComponent\";\r\n\r\n  populatePopupContents() {\r\n    let popUpContent = [...this.state.popUpContent];\r\n    let sbcfnAdd = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.add,\r\n      fnSBC\r\n    );\r\n    let sbpfnAdd = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.add,\r\n      fnSBP\r\n    );\r\n    if (sbcfnAdd) {\r\n      popUpContent.push({\r\n        fieldName: \"ShipmentByCompartment\",\r\n        fieldValue: \"ContractInfo_ShipByComp\",\r\n      });\r\n    }\r\n    if (sbpfnAdd) {\r\n      popUpContent.push({\r\n        fieldName: \"ShipmentByProduct\",\r\n        fieldValue: \"ContractInfo_ShipByProduct\",\r\n      });\r\n    }\r\n    const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n    operationsVisibilty.add = popUpContent.length > 0;\r\n    this.setState({\r\n      popUpContent,\r\n      operationsVisibilty,\r\n    });\r\n  }\r\n\r\n  handleAdd = (itemName) => {\r\n    try {\r\n      let shipmentType = \"\";\r\n      if (itemName !== null) {\r\n        shipmentType = itemName;\r\n      } else {\r\n        shipmentType = this.state.popUpContent[0].fieldName;\r\n      }\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.shareholder = false;\r\n      operationsVisibilty.add = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        isManualEntry: false,\r\n        isViewAuditTrail: false,\r\n        isViewLoadingDetails: false,\r\n        selectedRow: {},\r\n        operationsVisibilty,\r\n        shipmentType: shipmentType,\r\n      });\r\n\r\n      if (this.props.shipmentSource !== undefined)\r\n        this.props.isShowBackButton(false);\r\n    } catch (error) {\r\n      console.log(\"TruckShipmentComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n\r\n  getTerminalsList(shareholder) {\r\n    try {\r\n      if (shareholder !== null && shareholder !== \"\") {\r\n        axios(\r\n          RestAPIs.GetTerminals,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            [shareholder],\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ terminalCodes: response.data.EntityResult });\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ terminalCodes: [] });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"DestinationComposite:Error occured on getTerminalsList\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getVehicle(vehicleCode) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: vehicleCode,\r\n      },\r\n    ];\r\n    let obj = {\r\n      ShareHolderCode: this.state.selectedShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetVehicle,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            this.setState({\r\n              vehicleForRecordWeight: result.EntityResult,\r\n            });\r\n          }\r\n        } else {\r\n          this.setState({\r\n            vehicleForRecordWeight: {},\r\n          });\r\n          console.log(\"Error in GetVehicle:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ vehicleForRecordWeight: {} });\r\n        console.log(\"Error while getting Vehicle:\", error);\r\n      });\r\n  }\r\n\r\n  GetViewAllShipmentCustomData(shipmentRow) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentRow.ShipmentCode,\r\n      },\r\n      {\r\n        key: KeyCodes.shipmentStatus,\r\n        value: shipmentRow.Status,\r\n      },\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: shipmentRow.VehicleCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.state.selectedShareholder,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetViewAllShipmentCustomData,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        if (response.data.IsSuccess) {\r\n          this.setState({ modCustomValues: response.data.EntityResult });\r\n        } else this.setState({ modCustomValues: {} });\r\n        //this.setState({ modLoadingDetails: this.formLoadingCompartments(response.data.EntityResult) })\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error while getting shipment custom details:\",\r\n          error,\r\n          shipmentRow\r\n        );\r\n      });\r\n  }\r\n\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      this.setState({\r\n        selectedShareholder: shareholder,\r\n        isReadyToRender: false,\r\n        selectedItems: [],\r\n      });\r\n      this.getShipmentList(shareholder);\r\n      this.getTerminalsList(shareholder);\r\n      this.getKPIList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  //Get KPI for Truck Shipment\r\n  getKPIList(shareholder) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      var notification = {\r\n        message: \"\",\r\n        messageType: \"critical\",\r\n        messageResultDetails: [],\r\n      };\r\n      let objKPIRequestData = {\r\n        PageName: kpiTruckShipmentList,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              truckShipmentKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ truckShipmentKPIList: [] });\r\n            console.log(\"Error in truck shipment KPIList:\", result.ErrorList);\r\n            notification.messageResultDetails.push({\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: result.ErrorList[0],\r\n            });\r\n          }\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting truck shipment KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  getShipment(shipmentRow) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentRow.Common_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.state.selectedShareholder,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetShipment,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              shipment: result.EntityResult,\r\n            },\r\n            () => {\r\n              this.getAttributes();\r\n              this.getLoadingDetails(shipmentRow);\r\n              this.getShipmentStatusOperations(result.EntityResult);\r\n              this.getShipmentStatuses(shipmentRow);\r\n              this.getVehicle(result.EntityResult.VehicleCode);\r\n              this.GetBayByTrnsaction(\r\n                result.EntityResult.ShipmentCode,\r\n                \"SHIPMENT\",\r\n                result.EntityResult.ShareholderCode\r\n              );\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Shipment:\", error, shipmentRow);\r\n      });\r\n  }\r\n\r\n  getLoadingDetails(shipmentRow) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentRow.ShipmentCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.state.selectedShareholder,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetTruckShipmentLoadingDetails,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        response.data.IsSuccess\r\n          ? this.setState({ staticLoadingDetails: response.data.EntityResult })\r\n          : this.setState({ staticLoadingDetails: [] });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error while getting Shipment Loading Details:\",\r\n          error,\r\n          shipmentRow\r\n        );\r\n      });\r\n  }\r\n\r\n  getAttributes() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [shipmentStatusTimeAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n          });\r\n        } else {\r\n          console.log(\"Failed to get Attributes\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Attributes:\", error);\r\n    }\r\n  }\r\n\r\n  getShipmentStatusOperations(shipmentItem) {\r\n    try {\r\n      //var shipmentStatus = shipmentItem.Status;\r\n      //var isVolumneBased = shipmentItem.IsVolumeBased;\r\n\r\n      let obj = {\r\n        ShareHolderCode: this.state.selectedShareholder,\r\n        keyDataCode: 0,\r\n        KeyCodes: null,\r\n        Entity: shipmentItem,\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.GetShipmentOperations,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          let nextOperations = [];\r\n          Object.keys(result.EntityResult).forEach((operation) => {\r\n            if (result.EntityResult[operation]) nextOperations.push(operation);\r\n          });\r\n\r\n          // const index = nextOperations.indexOf(Constants.ViewAllShipmentOperations.ViewShipment_CloseShipment);\r\n          // if (index > -1) {\r\n          //   nextOperations.splice(index, 1);\r\n          // }\r\n          this.setState({ shipmentNextOperations: nextOperations });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Error while getting getShipmentStatusOperations:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  getShipmentStatuses(shipmentRow) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetShipmentStatuses +\r\n        \"?shCode=\" +\r\n        this.state.selectedShareholder +\r\n        \"&shipmentCode=\" +\r\n        shipmentRow.Common_Code +\r\n        \"&shipmentType=\" +\r\n        shipmentRow.ViewShipmentStatus_ShipmentType,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          //let lastStatus = result.EntityResult.pop();\r\n          this.setState({\r\n            currentShipmentStatuses: result.EntityResult,\r\n            //lastStatus: lastStatus,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting getShipmentStatuses:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  handleSelection = (items) => {\r\n    try {\r\n      var { operationsVisibilty, drawerStatus, activityInfo } = {\r\n        ...this.state,\r\n      };\r\n      let shipmentDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ShipmentActivityInfo.SHIPMENT_ENABLE_DELETE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n      var shipmentDeleteStates = [];\r\n      if (shipmentDeleteInfo !== undefined && shipmentDeleteInfo.length > 0)\r\n        shipmentDeleteStates = shipmentDeleteInfo[0].ShipmentStates;\r\n\r\n      let isReady =\r\n        items.findIndex(\r\n          (x) =>\r\n            shipmentDeleteStates.indexOf(\r\n              x.ViewShipmentStatus_ShipmentStatus.toUpperCase()\r\n            ) < 0\r\n        ) >= 0\r\n          ? false\r\n          : true;\r\n\r\n      let productCount = items.filter(function (x) {\r\n        return (\r\n          x.ViewShipmentStatus_ShipmentType === Constants.shipmentType.PRODUCT\r\n        );\r\n      }).length;\r\n\r\n      let compCount = items.filter(function (x) {\r\n        return (\r\n          x.ViewShipmentStatus_ShipmentType ===\r\n          Constants.shipmentType.COMPARTMENT\r\n        );\r\n      }).length;\r\n\r\n      let productFunctionGroup = true;\r\n      if (productCount > 0)\r\n        productFunctionGroup = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnSBP\r\n        );\r\n      let compartmentFunctionGroup = true;\r\n      if (compCount > 0)\r\n        compartmentFunctionGroup = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnSBC\r\n        );\r\n\r\n      operationsVisibilty.delete = this.props.userDetails.EntityResult\r\n        .IsWebPortalUser\r\n        ? false\r\n        : isReady &&\r\n        items.length > 0 &&\r\n        compartmentFunctionGroup &&\r\n        productFunctionGroup;\r\n\r\n      if (items.length !== 1) {\r\n        drawerStatus = true;\r\n      } else {\r\n        drawerStatus = false;\r\n      }\r\n\r\n      this.setState({\r\n        selectedItems: items,\r\n        operationsVisibilty,\r\n        isOperation: false,\r\n        drawerStatus,\r\n        shipment: {}\r\n      }, () => {\r\n        if (items.length === 1) {\r\n          this.getShipment(items[0]);\r\n          this.setState({ isOperation: true, shipmentType:items[0].ViewShipmentStatus_ShipmentType, });\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentComposite:Error occured on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      if (this.props.shipmentSourceFromSummary) {\r\n        const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n        operationsVisibilty.shareholder = false;\r\n        operationsVisibilty.add = false;\r\n        this.setState({\r\n          isDetails: true,\r\n          isManualEntry: false,\r\n          isViewAuditTrail: false,\r\n          isViewLoadingDetails: false,\r\n          selectedRow: {},\r\n          operationsVisibilty,\r\n          shipmentType: this.props.shipmentType,\r\n          selectedShareholder: this.props.selectedShareholder,\r\n        });\r\n      }\r\n      this.populatePopupContents();\r\n      this.GetShipmentActivityInfo();\r\n      // this.CheckShipmentDeleteAllowed();\r\n      this.getTerminalsList(this.state.selectedShareholder);\r\n      this.getShipmentList(this.state.selectedShareholder);\r\n      this.getKPIList(this.state.selectedShareholder);\r\n      this.getlookupValues();\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentComposite:Error occured on ComponentDidMount\",\r\n        error\r\n      );\r\n    }\r\n\r\n    // clear session storage on window refresh event\r\n    window.addEventListener(\"beforeunload\", this.clearStorage);\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    // clear session storage\r\n    this.clearStorage();\r\n\r\n    // remove event listener\r\n    window.removeEventListener(\"beforeunload\", this.clearStorage);\r\n  };\r\n\r\n  clearStorage = () => {\r\n    sessionStorage.removeItem(this.componentName + \"GridState\");\r\n  };\r\n\r\n  GetShipmentActivityInfo() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetShipmentActivityInfo,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ activityInfo: response.data.EntityResult });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting shipment activityInfo:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in GetShipmentActivityInfo:\", error);\r\n    }\r\n  }\r\n\r\n  getShipmentList(shareholder) {\r\n    try {\r\n      this.setState({ isReadyToRender: false });\r\n      let obj = {\r\n        ShareholderCode: shareholder,\r\n        TransportationType: null,\r\n        ScheduledFrom: null,\r\n        ScheduledTo: null,\r\n        ShipmentType: null,\r\n        ShipmentFrom: null,\r\n        ShipmentTypeCode: null,\r\n      };\r\n      if (this.props.shipmentSource !== undefined) {\r\n        obj.ShipmentFrom = this.props.shipmentSource;\r\n        obj.ShipmentType = Constants.shipmentTypeOptions.All;\r\n        obj.ShipmentTypeCode = this.props.shipmentSourceCode;\r\n      } else {\r\n        let fromDate = new Date(this.state.fromDate);\r\n        let toDate = new Date(this.state.toDate);\r\n        fromDate.setHours(0, 0, 0);\r\n        toDate.setHours(23, 59, 59);\r\n        obj.ScheduledFrom = fromDate;\r\n        obj.ScheduledTo = toDate;\r\n        obj.ShipmentType = Constants.shipmentTypeOptions.All;\r\n        obj.ShipmentFrom = Constants.shipmentFrom.All;\r\n      }\r\n\r\n      axios(\r\n        RestAPIs.GetShipmentListForRole,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (this.props.shipmentSource !== undefined) {\r\n            }\r\n            this.setState(\r\n              {\r\n                data: result.EntityResult,\r\n                isReadyToRender: true,\r\n              },\r\n              () => {\r\n                if (\r\n                  this.state.isOperation === true &&\r\n                  this.state.selectedItems.length === 1\r\n                ) {\r\n                  let selectedItem = this.state.selectedItems[0];\r\n                  var updatedselectedItem = result.EntityResult.Table.filter(\r\n                    function (item) {\r\n                      return item.Common_Code === selectedItem.Common_Code;\r\n                    }\r\n                  );\r\n\r\n                  if (updatedselectedItem.length > 0) {\r\n                    let { operationsVisibilty, activityInfo } = { ...this.state };\r\n                    let shipmentDeleteInfo = activityInfo.filter((item) => {\r\n                      return (\r\n                        item.ActivityCode ===\r\n                        Constants.ShipmentActivityInfo.SHIPMENT_ENABLE_DELETE &&\r\n                        item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n                      );\r\n                    });\r\n\r\n                    var shipmentDeleteStates = [];\r\n                    if (\r\n                      shipmentDeleteInfo !== undefined &&\r\n                      shipmentDeleteInfo.length > 0\r\n                    )\r\n                      shipmentDeleteStates = shipmentDeleteInfo[0].ShipmentStates;\r\n\r\n                    operationsVisibilty.delete = this.props.userDetails\r\n                      .EntityResult.IsWebPortalUser\r\n                      ? false\r\n                      : shipmentDeleteStates.indexOf(\r\n                        updatedselectedItem[0].ViewShipmentStatus_ShipmentStatus.toUpperCase()\r\n                      ) > -1 &&\r\n                      Utilities.isInFunction(\r\n                        this.props.userDetails.EntityResult.FunctionsList,\r\n                        functionGroups.remove,\r\n                        updatedselectedItem[0]\r\n                          .ViewShipmentStatus_ShipmentType ===\r\n                          Constants.shipmentType.PRODUCT\r\n                          ? fnSBP\r\n                          : fnSBC\r\n                      );\r\n\r\n                    this.setState({\r\n                      selectedItems: updatedselectedItem,\r\n                      operationsVisibilty,\r\n                    });\r\n                    this.getShipment(updatedselectedItem[0]);\r\n                  }\r\n                }\r\n              }\r\n            );\r\n          } else {\r\n            this.setState({ data: [], isReadyToRender: true });\r\n            console.log(\"Error in GetShipmentListForRole:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error while getting Shipment List:\", error);\r\n        });\r\n    } catch (error) {\r\n      this.setState({ isReadyToRender: true });\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  handleAuthorizeToLoad(shipmentItem, shCode, token, callback) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.shipmentStatus,\r\n        value: shipmentItem.Status,\r\n      },\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentItem.ShipmentCode,\r\n      },\r\n      {\r\n        key: KeyCodes.driverCode,\r\n        value: shipmentItem.DriverCode,\r\n      },\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: shipmentItem.VehicleCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.AuthorizeToLoad,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        token\r\n        //this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while AuthorizeToLoad:\", error);\r\n      });\r\n  }\r\n\r\n  getlookupValues() {\r\n    try {\r\n      let sbcAdd = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnSBC\r\n      );\r\n      if (sbcAdd) {\r\n        axios(\r\n          RestAPIs.GetLookUpData + \"?LookUpTypeCode=Contract\",\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              isContractDisable:\r\n                result.EntityResult[\"EnableContract\"] === \"0\" ? false : true,\r\n            });\r\n          }\r\n        });\r\n        axios(\r\n          RestAPIs.GetLookUpData + \"?LookUpTypeCode=Order\",\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              isOrderDisable:\r\n                result.EntityResult[\"EnableOrder\"] === \"0\" ? false : true,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentComposite:Error occured on getLookUpData\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAllowToLoad(shipmentItem, shCode, token, callback) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.shipmentStatus,\r\n        value: shipmentItem.Status,\r\n      },\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentItem.ShipmentCode,\r\n      },\r\n      {\r\n        key: KeyCodes.driverCode,\r\n        value: shipmentItem.DriverCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.AllowToLoad,\r\n      Utilities.getAuthenticationObjectforPost(obj, token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while AllowToLoad:\", error);\r\n      });\r\n  }\r\n\r\n  closeShipment = () => {\r\n    let showCloseShipmentAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showCloseShipmentAuthenticationLayout }, () => {\r\n      if (showCloseShipmentAuthenticationLayout === false) {\r\n        this.handleShipmentClose();\r\n      }\r\n    });\r\n  };\r\n\r\n  handleShipmentClose = () => {\r\n    this.handleAuthenticationClose();\r\n    try {\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"ViewAllShipment_ShipmentClose\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n            keyValues: [this.state.shipment.ShipmentCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      let entity = this.formCloseShipmentRequest();\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.shareholderCode,\r\n          value: this.state.selectedShareholder,\r\n        },\r\n        {\r\n          key: KeyCodes.shipmentCode,\r\n          value: this.state.shipment.ShipmentCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: this.state.selectedShareholder,\r\n        keyDataCode: KeyCodes.shipmentCode,\r\n        KeyCodes: keyCode,\r\n        Entity: entity,\r\n      };\r\n      axios(\r\n        RestAPIs.CloseShipment,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          if (result.IsSuccess === true) {\r\n            this.getShipmentList(this.state.selectedShareholder);\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n          }\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while shipment close:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while closing the shipment:\", error);\r\n    }\r\n  };\r\n\r\n  formCloseShipmentRequest() {\r\n    try {\r\n      //let loadingDetails = lodash.cloneDeep(this.state.staticLoadingDetails)\r\n      let ViewAllTruckShipmentLoadingDetails = {\r\n        topUpDecantApprovalStatus: \"\",\r\n        topUpDecantEnabled: \"\",\r\n        Remarks: \"\",\r\n        listShipmentCompartmentInfo: [],\r\n        listShipmentLoadingCompData: [],\r\n      };\r\n      ViewAllTruckShipmentLoadingDetails.topUpDecantApprovalStatus =\r\n        this.state.modCustomValues.TopUpDecantStatusText;\r\n      ViewAllTruckShipmentLoadingDetails.topUpDecantEnabled =\r\n        this.state.modCustomValues.EnableTopUpDecant;\r\n      ViewAllTruckShipmentLoadingDetails.Remarks = this.state.reasonForClosure;\r\n\r\n      return ViewAllTruckShipmentLoadingDetails;\r\n    } catch (error) {\r\n      console.log(\r\n        \"Error while forming request for closing the shipment:\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCloseShipmentModal = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isCloseShipment} size=\"mini\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h3>\r\n                  {t(\"ViewShipment_CloseHeader\") +\r\n                    \" : \" +\r\n                    this.state.shipment.ShipmentCode}\r\n                </h3>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <div className=\"col col-lg-9\">\r\n                  <label>{t(\"CloseShipment_VehicleCrippled\")}</label>\r\n                </div>\r\n                <div>\r\n                  <Checkbox\r\n                    checked={this.state.isVehicleCrippled}\r\n                    onChange={(cellData) => {\r\n                      this.setState({ isVehicleCrippled: cellData }, () => {\r\n                        if (cellData)\r\n                          this.setState({ reasonForClosure: \"Crippled\" });\r\n                        else this.setState({ reasonForClosure: \"\" });\r\n                      });\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <div className=\"col col-lg-12\">\r\n                  <Input\r\n                    fluid\r\n                    value={this.state.reasonForClosure}\r\n                    label={t(\"ViewShipment_Reason\")}\r\n                    disbaled={this.state.isVehicleCrippled ? true : false}\r\n                    reserveSpace={false}\r\n                    onChange={(value) => {\r\n                      this.setState({ reasonForClosure: value });\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"AccessCardInfo_Ok\")}\r\n                onClick={() => {\r\n                  if (this.state.reasonForClosure === \"\") {\r\n                    let notification = {\r\n                      messageType: \"critical\",\r\n                      message: \"ViewAllShipment_ShipmentClose\",\r\n                      messageResultDetails: [\r\n                        {\r\n                          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n                          keyValues: [this.state.shipment.ShipmentCode],\r\n                          isSuccess: false,\r\n                          errorMessage: \"Enter_ReasonForCloseure\",\r\n                        },\r\n                      ],\r\n                    };\r\n\r\n                    toast(\r\n                      <ErrorBoundary>\r\n                        <NotifyEvent\r\n                          notificationMessage={notification}\r\n                        ></NotifyEvent>\r\n                      </ErrorBoundary>,\r\n                      {\r\n                        autoClose:\r\n                          notification.messageType === \"success\"\r\n                            ? 10000\r\n                            : false,\r\n                      }\r\n                    );\r\n                  } else\r\n                    this.setState({ isCloseShipment: false }, () => {\r\n                      this.closeShipment();\r\n                    });\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  this.setState({\r\n                    isCloseShipment: false,\r\n                    isVehicleCrippled: false,\r\n                    reasonForClosure: \"\",\r\n                  });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  confirmRecordLadenWeight = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isLadenWeightValid} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h5>\r\n                  {t(this.state.ladenWeightError) +\r\n                    t(\"ConfirmCaptureLadenWeight\")}\r\n                </h5>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"AccessCardInfo_Ok\")}\r\n                onClick={() => {\r\n                  this.setState({ isLadenWeightValid: false }, () => {\r\n                    this.RecordLadenWeight();\r\n                  });\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  this.setState({ isLadenWeightValid: false });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  confirmAllowToLoad = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isNotRevised} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h5>{t(\"ViewShipment_ConfirmAllowToLoad\")}</h5>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"AccessCardInfo_Ok\")}\r\n                onClick={() => {\r\n                  this.setState({ isNotRevised: false }, () => {\r\n                    this.allowToLoad();\r\n                  });\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  this.setState({ isNotRevised: false });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  printBOLClick = () => {\r\n    let showPrintBOLAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showPrintBOLAuthenticationLayout }, () => {\r\n      if (showPrintBOLAuthenticationLayout === false) {\r\n        this.printBOL();\r\n      }\r\n    });\r\n  };\r\n\r\n  printBOL = () => {\r\n    this.handleAuthenticationClose();\r\n    let shipment = lodash.cloneDeep(this.state.shipment);\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewShipmentStatus_PrintBOL_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [shipment.ShipmentCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.handlePrintBOL(\r\n      shipment.ShipmentCode,\r\n      this.state.selectedShareholder,\r\n      this.props.tokenDetails.tokenInfo,\r\n      (result) => {\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        // if (result.IsSuccess === true) {\r\n        //   this.getShipmentList(this.state.selectedShareholder);\r\n        // }\r\n        // else {\r\n        notification.messageResultDetails[0].errorMessage = result.ErrorList[0];\r\n        //}\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  printFANClick = () => {\r\n    console.log(`printFANClick called...`);\r\n    let showFANAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showFANAuthenticationLayout }, () => {\r\n      if (showFANAuthenticationLayout === false) {\r\n        this.printFAN();\r\n      }\r\n    });\r\n  };\r\n\r\n  printFAN = () => {\r\n    console.log(`printFAN called...`);\r\n    this.handleAuthenticationClose();\r\n    let shipment = lodash.cloneDeep(this.state.shipment);\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewShipmentStatus_PrintFAN_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [shipment.ShipmentCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.handlePrintFAN(\r\n      \r\n      shipment.ShipmentCode,\r\n      this.state.selectedShareholder,\r\n      this.props.tokenDetails.tokenInfo,\r\n      (result) => {\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n\r\n        notification.messageResultDetails[0].errorMessage = result.ErrorList[0];\r\n\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  allowToLoad = () => {\r\n    let showAllowToLoadAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showAllowToLoadAuthenticationLayout }, () => {\r\n      if (showAllowToLoadAuthenticationLayout === false) {\r\n        this.ConfirmedAllowToLoad();\r\n      }\r\n    });\r\n  };\r\n\r\n  ConfirmedAllowToLoad = () => {\r\n    let shipment = lodash.cloneDeep(this.state.shipment);\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewShipment_AllowToLoad_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [shipment.ShipmentCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    this.handleAllowToLoad(\r\n      lodash.cloneDeep(this.state.shipment),\r\n      this.state.selectedShareholder,\r\n      this.props.tokenDetails.tokenInfo,\r\n      (result) => {\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getShipmentList(this.state.selectedShareholder);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  handlePrintFAN(shipmentCode, shCode, token, callback) {\r\n    console.log(`handlePrintFAN called...`);\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.PrintFAN,\r\n      Utilities.getAuthenticationObjectforPost(obj, token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while handlePrintFAN:\", error);\r\n      });\r\n  }\r\n\r\n  handleSendBOL(shipmentCode, shCode, token, callback) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.SendBOL,\r\n      Utilities.getAuthenticationObjectforPost(obj, token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while handleSendBOL:\", error);\r\n      });\r\n  }\r\n\r\n  handlePrintBOL(shipmentCode, shCode, token, callback) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.PrintBOL,\r\n      Utilities.getAuthenticationObjectforPost(obj, token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while handlePrintBOL:\", error);\r\n      });\r\n  }\r\n\r\n  handleBSIOutbound(shipmentCode, shCode, token, callback) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.BSIOutbound,\r\n      Utilities.getAuthenticationObjectforPost(obj, token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while handleBSIOutbound:\", error);\r\n      });\r\n  }\r\n\r\n  handleSealCompartments(shipmentCode, shCode, token, callback) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetSealCompartmentsforShipment,\r\n      Utilities.getAuthenticationObjectforPost(obj, token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while handleBSIOutbound:\", error);\r\n      });\r\n  }\r\n\r\n  handleSealClose = () => {\r\n    this.setState({\r\n      isSealCompartments: false,\r\n      sealCompartments: [],\r\n    });\r\n  };\r\n\r\n  handleViewAuditTrail(shCode, shipmentCode, shipmentType, token, callback) {\r\n    axios(\r\n      RestAPIs.GetTruckAuditTrailInfo +\r\n      \"?shCode=\" +\r\n      shCode +\r\n      \"&shipmentCode=\" +\r\n      shipmentCode +\r\n      \"&shipmentType=\" +\r\n      shipmentType,\r\n      //shipmentRow.ViewShipmentStatus_ShipmentType,\r\n      Utilities.getAuthenticationObjectforGet(token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting handleViewAuditTrail:\", error);\r\n      });\r\n  }\r\n\r\n  handleViewLoadingDetails(shipmentCode, shCode, token, callback) {\r\n    axios(\r\n      RestAPIs.GetLoadingDetails +\r\n      \"?shipmentCode=\" +\r\n      shipmentCode +\r\n      \"&shCode=\" +\r\n      shCode,\r\n      Utilities.getAuthenticationObjectforGet(token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting handleViewLoadingDetails:\", error);\r\n      });\r\n  }\r\n\r\n  formReadonlyCompAttributes(attributes, attributeMetaDataList) {\r\n    let compAttributes = [];\r\n    if (\r\n      attributeMetaDataList !== null &&\r\n      attributeMetaDataList !== undefined &&\r\n      attributeMetaDataList.length > 0\r\n    ) {\r\n      attributeMetaDataList.forEach((att) => {\r\n        att.attributeMetaDataList.forEach((attribute) => {\r\n          //if (attribute.TerminalCode)\r\n          compAttributes.push({\r\n            AttributeCode: attribute.Code,\r\n            AttributeName: attribute.DisplayName\r\n              ? attribute.DisplayName\r\n              : attribute.Code,\r\n            AttributeValue: attribute.DefaultValue,\r\n            TerminalCode: attribute.TerminalCode,\r\n            IsMandatory: attribute.IsMandatory,\r\n            DataType: attribute.DataType,\r\n            IsReadonly: attribute.IsReadonly,\r\n            MinValue: attribute.MinValue,\r\n            MaxValue: attribute.MaxValue,\r\n            ValidationFormat: attribute.ValidationFormat,\r\n            compSequenceNo: \"\",\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    if (\r\n      attributes !== null &&\r\n      attributes !== undefined &&\r\n      attributes.length > 0\r\n    ) {\r\n      attributes.forEach((att) => {\r\n        compAttributes.forEach((compAtt) => {\r\n          if (compAtt.TerminalCode === att.TerminalCode) {\r\n            att.ListOfAttributeData.forEach((selAtt) => {\r\n              if (compAtt.AttributeCode === selAtt.AttributeCode)\r\n                compAtt.AttributeValue = selAtt.AttributeValue;\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n    return compAttributes;\r\n  }\r\n\r\n  getRecordWeightList() {\r\n    axios(\r\n      RestAPIs.GetWeighBridgeList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        this.setState({\r\n          isRecordWeight: true,\r\n          recordWeightList: result.EntityResult,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting RecordWeightList:\", error);\r\n      });\r\n  }\r\n\r\n  handleModalBack = () => {\r\n    this.setState({ showReport: false });\r\n  };\r\n\r\n  renderModal() {\r\n    let path = null;\r\n    if (this.props.userDetails.EntityResult.IsArchived) {\r\n      path = \"TM/\" + Constants.TMReportArchive + \"/TMBOL\";\r\n    } else {\r\n      path = \"TM/\" + Constants.TMReports + \"/TMBOL\";\r\n    }\r\n    let paramValues = {\r\n      Culture: this.props.userDetails.EntityResult.UICulture,\r\n      Shareholder: this.state.selectedShareholder,\r\n      ShipmentCode:\r\n        this.state.selectedItems.length === 1\r\n          ? this.state.selectedItems[0].Common_Code\r\n          : this.state.selectedRow.Common_Code,\r\n    };\r\n\r\n    return (\r\n      <ReportDetails\r\n        showReport={this.state.showReport}\r\n        handleBack={this.handleModalBack}\r\n        handleModalClose={this.handleModalBack}\r\n        // proxyServerHost=\"http://epksr5115dit:3625/TMWebAPI/\"\r\n        proxyServerHost={RestAPIs.WebAPIURL}\r\n        reportServiceHost={this.reportServiceURI}\r\n        filePath={path}\r\n        parameters={paramValues}\r\n      />\r\n    );\r\n  }\r\n\r\n  handleViewBOL = () => {\r\n    this.handleAuthenticationClose();\r\n    if (this.reportServiceURI === undefined) {\r\n      axios(\r\n        RestAPIs.GetReportServiceURI,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        if (response.data.IsSuccess) {\r\n          this.reportServiceURI = response.data.EntityResult;\r\n          this.setState({ showReport: true });\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ showReport: true });\r\n    }\r\n  };\r\n\r\n  authorizeToLoadOnClick = () => {\r\n    let showAuthorizeToLoadAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showAuthorizeToLoadAuthenticationLayout }, () => {\r\n      if (showAuthorizeToLoadAuthenticationLayout === false) {\r\n        this.authorizeToLoad();\r\n      }\r\n    });\r\n  };\r\n\r\n  authorizeToLoad = () => {\r\n    this.handleAuthenticationClose();\r\n\r\n    let shipment = lodash.cloneDeep(this.state.shipment);\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewShipment_AuthorizeLoad_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [shipment.ShipmentCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.handleAuthorizeToLoad(\r\n      lodash.cloneDeep(this.state.shipment),\r\n      this.state.selectedShareholder,\r\n      this.props.tokenDetails.tokenInfo,\r\n      (result) => {\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getShipmentList(this.state.selectedShareholder);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  handleOperationClick = (operation) => {\r\n    let shipment = lodash.cloneDeep(this.state.shipment);\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: operation + \"_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [shipment.ShipmentCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    switch (operation) {\r\n      case Constants.ViewAllShipmentOperations.ViewShipment_AuthorizeLoad:\r\n        this.authorizeToLoadOnClick();\r\n\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipment_AllowToLoad:\r\n        let staticLoadingDetails = lodash.cloneDeep(\r\n          this.state.staticLoadingDetails\r\n        );\r\n        let rows = staticLoadingDetails.filter((item) => {\r\n          return item.Planned_Quantity !== item.Revised_Planned_Quantity;\r\n        });\r\n        if (rows.length <= 0) this.setState({ isNotRevised: true });\r\n        else {\r\n          this.allowToLoad();\r\n        }\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ManualEntry:\r\n        this.setState({ isManualEntry: true, isDetails: false }, () => {\r\n          if (this.props.shipmentSource !== undefined)\r\n            this.props.isShowBackButton(false);\r\n        });\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipment_RecordWeight:\r\n        this.getRecordWeightList();\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipment_CloseShipment:\r\n        this.setState({ isCloseShipment: true });\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipmentStatus_PrintFAN:\r\n        this.printFANClick();\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipmentStatus_PrintBOL:\r\n        this.printBOLClick();\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipmentStatus_ViewBOL:\r\n        let showViewBOLAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n\r\n        this.setState({ showViewBOLAuthenticationLayout }, () => {\r\n          if (showViewBOLAuthenticationLayout === false) {\r\n            this.handleViewBOL();\r\n          }\r\n        });\r\n\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewAllShipment_SendBOL:\r\n        this.handleSendBOL(\r\n          shipment.ShipmentCode,\r\n          this.state.selectedShareholder,\r\n          this.props.tokenDetails.tokenInfo,\r\n          (result) => {\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\";\r\n            notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n            // if (result.IsSuccess === true) {\r\n            //   this.getShipmentList(this.state.selectedShareholder);\r\n            // }\r\n            // else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            //}\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        );\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewAllShipment_BSIOutbound:\r\n        this.handleBSIOutbound(\r\n          shipment.ShipmentCode,\r\n          this.state.selectedShareholder,\r\n          this.props.tokenDetails.tokenInfo,\r\n          (result) => {\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\";\r\n            notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n            // if (result.IsSuccess === true) {\r\n            //   this.getShipmentList(this.state.selectedShareholder);\r\n            // }\r\n            // else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            //}\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        );\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipment_ViewAuditTrail:\r\n        this.handleViewAuditTrail(\r\n          this.state.selectedShareholder,\r\n          shipment.ShipmentCode,\r\n          this.state.selectedItems[0].ViewShipmentStatus_ShipmentType,\r\n          this.props.tokenDetails.tokenInfo,\r\n          (result) => {\r\n            if (result.IsSuccess === true) {\r\n              let modAuditTrailList = result.EntityResult;\r\n              let attributeMetaDataList = lodash.cloneDeep(\r\n                this.state.attributeMetaDataList.SHIPMENTSTATUSTIME\r\n              );\r\n\r\n              for (let i = 0; i < modAuditTrailList.length; i++) {\r\n                modAuditTrailList[i].UpdatedTime =\r\n                  new Date(\r\n                    modAuditTrailList[i].UpdatedTime\r\n                  ).toLocaleDateString() +\r\n                  \" \" +\r\n                  new Date(\r\n                    modAuditTrailList[i].UpdatedTime\r\n                  ).toLocaleTimeString();\r\n              }\r\n              let auditTrailList = result.EntityResult;\r\n              for (let i = 0; i < auditTrailList.length; i++) {\r\n                auditTrailList[i].AttributesforUI =\r\n                  this.formReadonlyCompAttributes(\r\n                    auditTrailList[i].Attributes,\r\n                    attributeMetaDataList\r\n                  );\r\n              }\r\n\r\n              var { operationsVisibilty } = { ...this.state };\r\n              operationsVisibilty.add = false;\r\n              operationsVisibilty.delete = false;\r\n              this.setState({\r\n                operationsVisibilty,\r\n                auditTrailList: auditTrailList,\r\n                modAuditTrailList: modAuditTrailList,\r\n                isViewAuditTrail: true,\r\n              });\r\n              if (this.props.shipmentSource !== undefined)\r\n                this.props.isShowBackButton(false);\r\n            } else {\r\n              notification.messageType = result.IsSuccess\r\n                ? \"success\"\r\n                : \"critical\";\r\n              notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n              toast(\r\n                <ErrorBoundary>\r\n                  <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n                </ErrorBoundary>,\r\n                {\r\n                  autoClose:\r\n                    notification.messageType === \"success\" ? 10000 : false,\r\n                }\r\n              );\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewShipment_ViewLoadingDetails:\r\n        this.handleViewLoadingDetails(\r\n          shipment.ShipmentCode,\r\n          this.state.selectedShareholder,\r\n          this.props.tokenDetails.tokenInfo,\r\n          (result) => {\r\n            if (result.IsSuccess === true) {\r\n              let modViewLoadingDetails = result.EntityResult;\r\n              let nonConfigColumns = [];\r\n              if (\r\n                modViewLoadingDetails !== null &&\r\n                modViewLoadingDetails.Table !== null &&\r\n                modViewLoadingDetails.Table.length > 0\r\n              ) {\r\n                let count = 0;\r\n                modViewLoadingDetails.Table.forEach((item) => {\r\n                  item.seqNo = count;\r\n                  item.endtime =\r\n                    new Date(item.endtime).toLocaleDateString() +\r\n                    \" \" +\r\n                    new Date(item.endtime).toLocaleTimeString();\r\n                  item.starttime =\r\n                    new Date(item.starttime).toLocaleDateString() +\r\n                    \" \" +\r\n                    new Date(item.starttime).toLocaleTimeString();\r\n                  count++;\r\n                  item.productcode = item.productcode.split(\"&nbsp;\").join(\" \");\r\n                });\r\n              }\r\n\r\n              if (\r\n                modViewLoadingDetails !== null &&\r\n                modViewLoadingDetails.Table1 !== null &&\r\n                modViewLoadingDetails.Table1.length > 0\r\n              ) {\r\n                nonConfigColumns =\r\n                  modViewLoadingDetails.Table1[0].NonConfiguredColumns.split(\r\n                    \",\"\r\n                  );\r\n              }\r\n\r\n              var { operationsVisibilty } = { ...this.state };\r\n              operationsVisibilty.add = false;\r\n              operationsVisibilty.delete = false;\r\n              this.setState({\r\n                operationsVisibilty,\r\n                modViewLoadingDetails: modViewLoadingDetails,\r\n                isViewLoadingDetails: true,\r\n                nonConfigColumns: nonConfigColumns,\r\n              });\r\n\r\n              if (this.props.shipmentSource !== undefined)\r\n                this.props.isShowBackButton(false);\r\n            } else {\r\n              notification.messageType = result.IsSuccess\r\n                ? \"success\"\r\n                : \"critical\";\r\n              notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n              toast(\r\n                <ErrorBoundary>\r\n                  <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n                </ErrorBoundary>,\r\n                {\r\n                  autoClose:\r\n                    notification.messageType === \"success\" ? 10000 : false,\r\n                }\r\n              );\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case Constants.ViewAllShipmentOperations.ViewAllShipment_SealCompartments:\r\n        this.handleSealCompartments(\r\n          shipment.ShipmentCode,\r\n          this.state.selectedShareholder,\r\n          this.props.tokenDetails.tokenInfo,\r\n          (result) => {\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\";\r\n            notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n            if (result.IsSuccess === true) {\r\n              //let sealCompartments = []\r\n              this.setState({\r\n                isSealCompartments: true,\r\n                sealCompartments: result.EntityResult,\r\n              });\r\n            } else {\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n              toast(\r\n                <ErrorBoundary>\r\n                  <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n                </ErrorBoundary>,\r\n                {\r\n                  autoClose:\r\n                    notification.messageType === \"success\" ? 10000 : false,\r\n                }\r\n              );\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case \"ViewAllocateBay_AllocateBay\":\r\n        this.getBays();\r\n        break;\r\n      case \"ViewAllocateBay_DeallocateBay\":\r\n        this.setState({\r\n          isDeAllocateBay: true,\r\n        });\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  getBays = () => {\r\n    let shipment = lodash.cloneDeep(this.state.shipment);\r\n    let products = [];\r\n    shipment.ShipmentCompartments.forEach((element) => {\r\n      products.push(element.FinishedProductCode);\r\n    });\r\n\r\n    const obj = {\r\n      ShareHolderCode: this.state.selectedShareholder,\r\n      KeyCodes: [\r\n        {\r\n          key: \"TransactionType\",\r\n          value: \"SHIPMENT\",\r\n        },\r\n        {\r\n          key: \"TransportationType\",\r\n          value: \"ROAD\",\r\n        },\r\n        {\r\n          key: \"TerminalCode\",\r\n          value: this.state.shipment.ActualTerminalCode,\r\n        },\r\n        {\r\n          key: \"FinishedProductCode\",\r\n          value: products.toString(),\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetAllValidBays,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let bayAllocation = result.EntityResult;\r\n          bayAllocation.forEach((element) => {\r\n            element.SupportedProducts.forEach((ele) => {\r\n              if (\r\n                element.AssociatedProduct === \"\" ||\r\n                element.AssociatedProduct === undefined\r\n              ) {\r\n                element.AssociatedProduct = ele.Code;\r\n              } else {\r\n                element.AssociatedProduct += \",\" + ele.Code;\r\n              }\r\n            });\r\n          });\r\n\r\n          this.setState({\r\n            bayData: bayAllocation,\r\n            isAllocateBay: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            bayData: [],\r\n            isAllocateBay: true,\r\n          });\r\n          console.log(\"Error in getBays:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ bayData: [], isReadyToRender: true });\r\n        console.log(\"Error while getBays:\", error);\r\n      });\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      let { operationsVisibilty, activityInfo } = { ...this.state };\r\n      let shipmentDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ShipmentActivityInfo.SHIPMENT_ENABLE_DELETE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      var shipmentDeleteStates = [];\r\n      if (shipmentDeleteInfo !== undefined && shipmentDeleteInfo.length > 0)\r\n        shipmentDeleteStates = shipmentDeleteInfo[0].ShipmentStates;\r\n\r\n      operationsVisibilty.add = this.state.popUpContent.length > 0;\r\n      let shipmentType = \"\";\r\n\r\n      if (\r\n        item.ViewShipmentStatus_ShipmentType ===\r\n        Constants.shipmentType.COMPARTMENT\r\n      ) {\r\n        shipmentType = fnSBC;\r\n        operationsVisibilty.delete = this.props.userDetails.EntityResult\r\n          .IsWebPortalUser\r\n          ? false\r\n          : shipmentDeleteStates.indexOf(\r\n            item.ViewShipmentStatus_ShipmentStatus.toUpperCase()\r\n          ) > -1 &&\r\n          Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.remove,\r\n            fnSBC\r\n          );\r\n      }\r\n\r\n      if (\r\n        item.ViewShipmentStatus_ShipmentType === Constants.shipmentType.PRODUCT\r\n      ) {\r\n        shipmentType = fnSBP;\r\n        operationsVisibilty.delete = this.props.userDetails.EntityResult\r\n          .IsWebPortalUser\r\n          ? false\r\n          : shipmentDeleteStates.indexOf(\r\n            item.ViewShipmentStatus_ShipmentStatus.toUpperCase()\r\n          ) > -1 &&\r\n          Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.remove,\r\n            fnSBP\r\n          );\r\n      }\r\n      operationsVisibilty.shareholder = false;\r\n\r\n      if (this.props.shipmentSource !== undefined)\r\n        this.props.isShowBackButton(false);\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: item,\r\n        selectedItems: [item],\r\n        operationsVisibilty,\r\n        shipmentType: shipmentType,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"TruckShipmentComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n\r\n  handleDelete = () => {\r\n    // console.log(\"Clicked Delete\", this.state.selectedItems);\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n      var deleteShipmentsKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        var shCode = this.state.selectedShareholder;\r\n        var shipmentCode = this.state.selectedItems[i][\"Common_Code\"];\r\n        var shipmentType =\r\n          this.state.selectedItems[i][\"ViewShipmentStatus_ShipmentType\"];\r\n        var keyData = {\r\n          keyDataCode: 0,\r\n          ShareHolderCode: shCode,\r\n          KeyCodes: [\r\n            { Key: KeyCodes.shipmentCode, Value: shipmentCode },\r\n            { Key: KeyCodes.shipmentType, Value: shipmentType },\r\n          ],\r\n        };\r\n        deleteShipmentsKeys.push(keyData);\r\n      }\r\n      axios(\r\n        RestAPIs.DeleteShipment,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteShipmentsKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          var isRefreshDataRequire = result.IsSuccess;\r\n          if (\r\n            result.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            var failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n          var notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"Shipment_DeletionStatus\",\r\n            [\"ShipmentCode\"]\r\n          );\r\n          if (isRefreshDataRequire) {\r\n            this.setState({ isReadyToRender: false });\r\n            this.handleAuthenticationClose();\r\n            this.getShipmentList(this.state.selectedShareholder);\r\n            this.getKPIList(this.state.selectedShareholder);\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n            });\r\n            this.handleAuthenticationClose();\r\n          } else {\r\n            operationsVisibilty.delete = true;\r\n            this.setState({ operationsVisibilty });\r\n            this.handleAuthenticationClose();\r\n          }\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0)\r\n              messageResult.keyFields[0] =\r\n                \"ShipmentByCompartmentList_ShipmentCode\";\r\n          });\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"TruckShipmentComposite:Error occured on handleDelete\",\r\n            error\r\n          );\r\n          var { operationsVisibilty } = { ...this.state };\r\n          operationsVisibilty.delete = true;\r\n          this.setState({ operationsVisibilty });\r\n          this.handleAuthenticationClose();\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentComposite:Error occured on handleDelete\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      let { operationsVisibilty, activityInfo } = { ...this.state };\r\n      let shipmentDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ShipmentActivityInfo.SHIPMENT_ENABLE_DELETE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      var shipmentDeleteStates = [];\r\n      if (shipmentDeleteInfo !== undefined && shipmentDeleteInfo.length > 0)\r\n        shipmentDeleteStates = shipmentDeleteInfo[0].ShipmentStates;\r\n\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = this.state.popUpContent.length > 0;\r\n        operationsVisibilty.delete = this.props.userDetails.EntityResult\r\n          .IsWebPortalUser\r\n          ? false\r\n          : shipmentDeleteStates.indexOf(data.Status.toUpperCase()) > -1 &&\r\n          Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.remove,\r\n            data.ShipmentType === 0 ? fnSBC : fnSBP\r\n          );\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            Common_Code: data.ShipmentCode,\r\n            Common_Shareholder: this.state.selectedShareholder,\r\n            ViewShipmentStatus_ShipmentType:\r\n              data.ShipmentType === 0\r\n                ? Constants.shipmentType.COMPARTMENT\r\n                : Constants.shipmentType.PRODUCT,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"TruckShipmentComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      if (\r\n        this.props.shipmentSource !== undefined &&\r\n        this.props.shipmentSourceFromSummary\r\n      ) {\r\n        let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n        operationsVisibilty.add = this.state.popUpContent.length > 0;\r\n        operationsVisibilty.delete = false;\r\n        operationsVisibilty.shareholder = true;\r\n        this.setState({\r\n          isManualEntry: false,\r\n          isViewAuditTrail: false,\r\n          isDetails: false,\r\n          selectedRow: {},\r\n          selectedItems: [],\r\n          operationsVisibilty,\r\n          isViewLoadingDetails: false,\r\n          isSealCompartments: false,\r\n          drawerStatus: false,\r\n          isGoBackToSource: true,\r\n          isReadyToRender: false,\r\n        });\r\n      } else {\r\n        let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n        operationsVisibilty.add = this.state.popUpContent.length > 0;\r\n        operationsVisibilty.delete = false;\r\n        operationsVisibilty.shareholder = true;\r\n        this.setState({\r\n          isManualEntry: false,\r\n          isViewAuditTrail: false,\r\n          isDetails: false,\r\n          selectedRow: {},\r\n          selectedItems: [],\r\n          operationsVisibilty,\r\n          isViewLoadingDetails: false,\r\n          isSealCompartments: false,\r\n          drawerStatus: false,\r\n          isReadyToRender: false,\r\n        });\r\n        this.getShipmentList(this.state.selectedShareholder);\r\n        this.getKPIList(this.state.selectedShareholder);\r\n        this.props.isShowBackButton(true);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"TruckShipmentComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n\r\n  handleRangeSelect = ({ to, from }) => {\r\n    if (to !== undefined) this.setState({ toDate: to });\r\n    if (from !== undefined) this.setState({ fromDate: from });\r\n  };\r\n\r\n  RecordLadenWeight() {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.weighBridgeCode,\r\n          value: this.state.weighBridgeCode,\r\n        },\r\n        {\r\n          key: KeyCodes.weight,\r\n          value: this.state.scadaValue,\r\n        },\r\n        {\r\n          key: KeyCodes.vehicleCode,\r\n          value: this.state.shipment.VehicleCode,\r\n        },\r\n        {\r\n          key: KeyCodes.shipmentCode,\r\n          value: this.state.shipment.ShipmentCode,\r\n        },\r\n        {\r\n          key: KeyCodes.outOfToleranceAllowed,\r\n          value: this.state.allowOutofRangeTW,\r\n        },\r\n      ];\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"ViewAllShipment_Record_Weight\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n            keyValues: [this.state.shipment.ShipmentCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      var obj = {\r\n        ShareHolderCode: this.state.selectedShareholder,\r\n        keyDataCode: KeyCodes.weighBridgeCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.RecordShipmentLadenWeight,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          notification.messageType = response.data.IsSuccess\r\n            ? \"success\"\r\n            : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess =\r\n            response.data.IsSuccess;\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ isRecordWeight: false }, () => {\r\n              this.getShipmentList(this.state.selectedShareholder);\r\n            });\r\n          }\r\n          notification.messageResultDetails[0].errorMessage =\r\n            response.data.ErrorList[0];\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while recording laden weight:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in GetScadaValue\");\r\n    }\r\n  }\r\n\r\n  RecordTareWeight = () => {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.weighBridgeCode,\r\n          value: this.state.weighBridgeCode,\r\n        },\r\n        {\r\n          key: KeyCodes.weight,\r\n          value: this.state.scadaValue,\r\n        },\r\n        {\r\n          key: KeyCodes.vehicleCode,\r\n          value: this.state.shipment.VehicleCode,\r\n        },\r\n        {\r\n          key: KeyCodes.shipmentCode,\r\n          value: this.state.shipment.ShipmentCode,\r\n        },\r\n        {\r\n          key: KeyCodes.outOfToleranceAllowed,\r\n          value: this.state.allowOutofRangeTW,\r\n        },\r\n      ];\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"ViewAllShipment_Record_Weight\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n            keyValues: [this.state.shipment.ShipmentCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      var obj = {\r\n        ShareHolderCode: this.state.selectedShareholder,\r\n        keyDataCode: KeyCodes.weighBridgeCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.RecordShipmentTareWeight,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          notification.messageType = response.data.IsSuccess\r\n            ? \"success\"\r\n            : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess =\r\n            response.data.IsSuccess;\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ isRecordWeight: false }, () => {\r\n              this.getShipmentList(this.state.selectedShareholder);\r\n            });\r\n          }\r\n          notification.messageResultDetails[0].errorMessage =\r\n            response.data.ErrorList[0];\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while recording tare weight:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in GetScadaValue\");\r\n    }\r\n  };\r\n\r\n  getScadaValue = () => {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.weighBridgeCode,\r\n          value: this.state.weighBridgeCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: this.state.selectedShareholder,\r\n        keyDataCode: KeyCodes.weighBridgeCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.ReadWBScadaValue,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let notification = {\r\n            messageType: \"critical\",\r\n            message: \"ViewAllShipment_Record_Weight\",\r\n            messageResultDetails: [\r\n              {\r\n                keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n                keyValues: [this.state.shipment.ShipmentCode],\r\n                isSuccess: false,\r\n                errorMessage: \"\",\r\n              },\r\n            ],\r\n          };\r\n\r\n          notification.messageType = response.data.IsSuccess\r\n            ? \"success\"\r\n            : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess =\r\n            response.data.IsSuccess;\r\n\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ scadaValue: response.data.EntityResult });\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              response.data.ErrorList[0];\r\n\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting weigh brdige Scada value:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in GetScadaValue\");\r\n    }\r\n  };\r\n\r\n  handleStatus = (e) => {\r\n    if (e === Constants.ShipmentCompartmentStatus.EMPTY) {\r\n      return \"EMPTY\";\r\n    } else if (e === Constants.ShipmentCompartmentStatus.LOADING) {\r\n      return \"LOADING\";\r\n    } else if (e === Constants.ShipmentCompartmentStatus.PART_FILLED) {\r\n      return \"PART_FILLED\";\r\n    } else if (e === Constants.ShipmentCompartmentStatus.OVER_FILLED) {\r\n      return \"OVER_FILLED\";\r\n    } else if (e === Constants.ShipmentCompartmentStatus.FORCE_COMPLETED) {\r\n      return \"FORCE_COMPLETED\";\r\n    } else if (e === Constants.ShipmentCompartmentStatus.COMPLETED) {\r\n      return \"COMPLETED\";\r\n    } else if (e === Constants.ShipmentCompartmentStatus.INTERRUPTED) {\r\n      return \"INTERRUPTED\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  getSiteConfigurationLookUP = () => {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=SiteConfiguration\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          const result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let siteConfiguration = result.EntityResult;\r\n            this.getWeighBridge(siteConfiguration);\r\n          } else {\r\n            console.log(\r\n              \"Error in getSiteConfigurationLookUP: \",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"TruckShipmentComposite: Error occurred on getSiteConfigurationLookUP\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentComposite: Error occurred on getSiteConfigurationLookUP\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getWeighBridge(siteConfiguration) {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.weighBridgeCode,\r\n          value: this.state.weighBridgeCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        keyDataCode: KeyCodes.weighBridgeCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetWeighBridge,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let weighBridge = result.EntityResult;\r\n\r\n            this.getLadenWeightData(\r\n              this.state.vehicleForRecordWeight.TareWeight, //RegisteredTareWeight\r\n              this.state.vehicleForRecordWeight.WeightUOM, //VehicleWeightUOM\r\n              weighBridge.WeightUOM,\r\n              this.state.vehicleForRecordWeight.MaxLoadableWeight, // MaxLoadableWeight\r\n              this.state.scadaValue, //Weight\r\n              siteConfiguration\r\n            );\r\n          } else {\r\n            console.log(\"Error in GetWeighBridge:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while GetWeighBridge:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in get GetWeighBridge\", error);\r\n    }\r\n  }\r\n\r\n  ValidateLadenWeight(ladenWeighData, siteConfiguration) {\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewAllShipment_Record_Weight\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    var returnValue = true;\r\n\r\n    try {\r\n      let minLadenWeightTolerance =\r\n        siteConfiguration.MinLadenweightQuantityTolerance;\r\n      let maxLadenWeightTolerance =\r\n        siteConfiguration.MaxLadenweightQuantityTolerance;\r\n\r\n      var error = \"\";\r\n      var minLadenWeightTol = 0;\r\n      var maxLadenWeightTol = 0;\r\n\r\n      if (isNaN(parseFloat(this.state.scadaValue))) {\r\n        error = \"MesuredWeight_Improper\";\r\n        returnValue = false;\r\n      } else if (\r\n        isNaN(parseFloat(ladenWeighData[\"ConvertedRegisteredTareWeight\"]))\r\n      ) {\r\n        error = \"Improper_Tare_Weight\";\r\n        returnValue = false;\r\n      } else if (\r\n        isNaN(parseFloat(ladenWeighData[\"ConvertedMaxLoadableWeight\"]))\r\n      ) {\r\n        error = \"Improper_Max_Weight\";\r\n        returnValue = false;\r\n      } else if (\r\n        isNaN(parseFloat(ladenWeighData[\"ConvertedMeasuredTareWeight\"]))\r\n      ) {\r\n        error = \"TareWeight_Not_Captured\";\r\n        returnValue = false;\r\n      }\r\n      if (returnValue === true) {\r\n        minLadenWeightTol =\r\n          ((parseFloat(ladenWeighData[\"ConvertedMeasuredTareWeight\"]) +\r\n            parseFloat(ladenWeighData[\"ConvertedLoadedQty\"])) *\r\n            parseFloat(minLadenWeightTolerance)) /\r\n          100;\r\n\r\n        maxLadenWeightTol =\r\n          ((parseFloat(ladenWeighData[\"ConvertedMeasuredTareWeight\"]) +\r\n            parseFloat(ladenWeighData[\"ConvertedLoadedQty\"])) *\r\n            parseFloat(maxLadenWeightTolerance)) /\r\n          100;\r\n\r\n        if (\r\n          (parseFloat(ladenWeighData[\"ConvertedLoadedQty\"]) >\r\n            parseFloat(ladenWeighData[\"ConvertedMaxLoadableWeight\"])) |\r\n          (parseFloat(this.state.scadaValue) >\r\n            parseFloat(ladenWeighData[\"ConvertedMaxLoadableWeight\"]) +\r\n            parseFloat(ladenWeighData[\"ConvertedRegisteredTareWeight\"]))\r\n        ) {\r\n          error = \"ShipmentWeight_GreaterThan_MaxLoadableWeight\";\r\n        } else if (\r\n          parseFloat(this.state.scadaValue) <\r\n          parseFloat(ladenWeighData[\"ConvertedMeasuredTareWeight\"]) +\r\n          parseFloat(ladenWeighData[\"ConvertedLoadedQty\"]) -\r\n          minLadenWeightTol\r\n        ) {\r\n          error = \"MeasuredWeight_LessThan_ExpectedLoadedWeight\";\r\n        } else if (\r\n          parseFloat(this.state.scadaValue) >\r\n          parseFloat(ladenWeighData[\"ConvertedMeasuredTareWeight\"]) +\r\n          parseFloat(ladenWeighData[\"ConvertedLoadedQty\"]) +\r\n          maxLadenWeightTol\r\n        ) {\r\n          error = \"MeasuredWeight_MoreThan_ExpectedLoadedWeight\";\r\n        }\r\n      } else {\r\n        if (error !== \"\") {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [\"ShipmentCompDetail_ShipmentNumber\"],\r\n            keyValues: [this.state.shipment.ShipmentCode],\r\n            isSuccess: false,\r\n            errorMessage: error,\r\n          });\r\n          this.setState({\r\n            isLadenWeightValid: false,\r\n          });\r\n        }\r\n        if (notification.messageResultDetails.length > 0) {\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if (error !== \"\") {\r\n        this.setState({\r\n          isLadenWeightValid: true,\r\n          ladenWeightError: error,\r\n        });\r\n      } else this.RecordLadenWeight();\r\n    } catch (error) {\r\n      console.log(\"Error while validating laden weight : \", error);\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  getLadenWeightData(\r\n    RegisteredTareWeight,\r\n    VehicleWeightUOM,\r\n    WeightUOM,\r\n    MaxLoadableWeight,\r\n    Weight,\r\n    siteConfiguration\r\n  ) {\r\n    let trailerWeighData = {};\r\n    try {\r\n      axios(\r\n        RestAPIs.GetLadenWeightData +\r\n        \"?shipmentCode=\" +\r\n        this.state.shipment.ShipmentCode +\r\n        \"&shCode=\" +\r\n        this.state.selectedShareholder +\r\n        \"&vehicleTareWeight=\" +\r\n        RegisteredTareWeight +\r\n        \"&vehicleWeightUOM=\" +\r\n        VehicleWeightUOM +\r\n        \"&weightUOM=\" +\r\n        WeightUOM +\r\n        \"&maxLoadableWeight=\" +\r\n        MaxLoadableWeight +\r\n        \"&weight=\" +\r\n        Weight,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            trailerWeighData = response.data.EntityResult;\r\n            this.ValidateLadenWeight(trailerWeighData, siteConfiguration);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Error while getting Shipment trailer weigh data Details:\",\r\n            error,\r\n            this.state.shipment\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in getLadenWeightData:\", error);\r\n    }\r\n  }\r\n\r\n  handleRecordWeight = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isRecordWeight} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h3>\r\n                  {t(\"ViewAllShipment_RecordWeightShipment\") +\r\n                    \" : \" +\r\n                    this.state.shipment.ShipmentCode}\r\n                </h3>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <div className=\"col col-lg-9\">\r\n                  <Select\r\n                    fluid\r\n                    placeholder={t(\"Select_WB\")}\r\n                    label={t(\"ViewShipment_WeighBridgeCode\")}\r\n                    value={this.state.weighBridgeCode}\r\n                    options={Utilities.transferListtoOptions(\r\n                      this.state.recordWeightList\r\n                    )}\r\n                    onChange={(cellData) => {\r\n                      this.setState({ weighBridgeCode: cellData }, () =>\r\n                        this.getScadaValue()\r\n                      );\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"shipmentRecordWeightButtonDiv\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    size=\"small\"\r\n                    className=\"shipmentRecordWeightButton\"\r\n                    content={t(\"ViewShipment_ReadWeight\")}\r\n                    onClick={() => this.getScadaValue()}\r\n                    disabled={\r\n                      this.state.weighBridgeCode === null ||\r\n                        this.state.weighBridgeCode === \"\" ||\r\n                        this.state.weighBridgeCode === undefined\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <div className=\"col col-lg-12\">\r\n                  <Input\r\n                    fluid\r\n                    value={this.state.scadaValue}\r\n                    label={t(\"ViewShipment_Weight\")}\r\n                    reserveSpace={false}\r\n                    disabled={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <div className=\"col col-lg-12\">\r\n                  <Checkbox\r\n                    className=\"LabelEnabled\"\r\n                    label={t(\"Allow_Out_of_Tolerance_for_TW\")}\r\n                    checked={this.state.allowOutofRangeTW}\r\n                    onChange={(cellData) => {\r\n                      this.setState({ allowOutofRangeTW: cellData });\r\n                    }}\r\n                    disabled={false}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"shipmentRecordWeightOtherbuttons\"\r\n                content={t(\"ViewShipment_RecordTareWeight\")}\r\n                onClick={() => this.RecordTareWeight()}\r\n                disabled={\r\n                  this.state.scadaValue === null ||\r\n                    this.state.scadaValue === \"\" ||\r\n                    this.state.scadaValue === undefined\r\n                    ? true\r\n                    : false\r\n                }\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"ViewShipment_RecordLadenWeight\")}\r\n                className=\"shipmentRecordWeightOtherbuttons\"\r\n                onClick={() => this.getSiteConfigurationLookUP()}\r\n                disabled={\r\n                  this.state.scadaValue === null ||\r\n                    this.state.scadaValue === \"\" ||\r\n                    this.state.scadaValue === undefined\r\n                    ? true\r\n                    : false\r\n                }\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Cancel\")}\r\n                className=\"shipmentRecordWeightOtherbuttons\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    isRecordWeight: false,\r\n                    weighBridgeCode: \"\",\r\n                    scadaValue: \"\",\r\n                  });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  handleDateTextChange = (value, error) => {\r\n    if (value === \"\")\r\n      this.setState({ dateError: \"\", toDate: \"\", fromDate: \"\" });\r\n    if (error !== null && error !== \"\")\r\n      this.setState({\r\n        dateError: \"Common_InvalidDate\",\r\n        toDate: \"\",\r\n        fromDate: \"\",\r\n      });\r\n    else {\r\n      this.setState({ dateError: \"\", toDate: value.to, fromDate: value.from });\r\n    }\r\n  };\r\n\r\n  handleLoadOrders = () => {\r\n    let error = Utilities.validateDateRange(\r\n      this.state.toDate,\r\n      this.state.fromDate\r\n    );\r\n\r\n    if (error !== \"\") {\r\n      this.setState({ dateError: error });\r\n    } else {\r\n      this.setState({ dateError: \"\" });\r\n      this.getShipmentList(this.state.selectedShareholder);\r\n    }\r\n  };\r\n\r\n  onBack = () => {\r\n    let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n    operationsVisibilty.add = this.state.popUpContent.length > 0;\r\n    operationsVisibilty.shareholder = true;\r\n    this.setState({\r\n      isManualEntry: false,\r\n      isViewAuditTrail: false,\r\n      isDetails: false,\r\n      isViewLoadingDetails: false,\r\n      operationsVisibilty,\r\n      loadingExpandedRows: [],\r\n      isReadyToRender: false,\r\n    });\r\n    if (this.props.shipmentSource !== undefined)\r\n      this.props.isShowBackButton(true);\r\n    this.getShipmentList(this.state.selectedShareholder);\r\n  };\r\n\r\n  toggleExpand = (data, open) => {\r\n    let loadingExpandedRows = this.state.loadingExpandedRows;\r\n    let expandedRowIndex = loadingExpandedRows.findIndex(\r\n      (item) => item.seqNo === data.seqNo\r\n    );\r\n    if (open) {\r\n      loadingExpandedRows.splice(expandedRowIndex, 1);\r\n    } else {\r\n      loadingExpandedRows.push(data);\r\n    }\r\n    this.setState({ loadingExpandedRows });\r\n  };\r\n\r\n  handleDrawer = () => {\r\n    var drawerStatus = lodash.cloneDeep(this.state.drawerStatus);\r\n    this.setState({\r\n      drawerStatus: !drawerStatus,\r\n    });\r\n  };\r\n\r\n  isNodeEnterpriseOrWebortal() {\r\n    if (\r\n      this.props.userDetails.EntityResult.IsEnterpriseNode ||\r\n      this.props.userDetails.EntityResult.IsWebPortalUser\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handlePopUpClick = () => {\r\n    if (this.state.operationsVisibilty.add) {\r\n      if (this.state.popUpContent.length > 0) {\r\n        if (this.state.popUpOpen === false) this.setState({ popUpOpen: true });\r\n        else this.setState({ popUpOpen: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  popUpMenuClick = (menuItem) => {\r\n    this.setState({ popUpOpen: false });\r\n    this.handleAdd(menuItem);\r\n  };\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showDeleteAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showDeleteAuthenticationLayout });\r\n      if (showDeleteAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Shipment Composite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showDeleteAuthenticationLayout: false,\r\n      showAuthorizeToLoadAuthenticationLayout: false,\r\n      showAllowToLoadAuthenticationLayout: false,\r\n      showCloseShipmentAuthenticationLayout: false,\r\n      showViewBOLAuthenticationLayout: false,\r\n      showPrintBOLAuthenticationLayout: false,\r\n      showFANAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  getFunctionGroupName() {\r\n    if (\r\n      this.state.showDeleteAuthenticationLayout &&\r\n      (this.state.shipmentType.toLowerCase() === fnSBP || this.state.shipmentType.toLowerCase() === Constants.shipmentType.PRODUCT.toLowerCase())\r\n    )\r\n      return fnSBP;\r\n\r\n    if (\r\n      this.state.showDeleteAuthenticationLayout &&\r\n      (this.state.shipmentType.toLowerCase() === fnSBC || this.state.shipmentType.toLowerCase() === Constants.shipmentType.COMPARTMENT.toLowerCase())\r\n    )\r\n      return fnSBC;\r\n\r\n    else if (this.state.showCloseShipmentAuthenticationLayout)\r\n      return fnCloseShipment;\r\n    else if (\r\n      this.state.showAllowToLoadAuthenticationLayout ||\r\n      this.state.showAuthorizeToLoadAuthenticationLayout\r\n    )\r\n      return fnShipmentStatus;\r\n    else if (\r\n      this.state.showViewBOLAuthenticationLayout ||\r\n      this.state.showPrintBOLAuthenticationLayout\r\n    )\r\n      return fnPrintBOL;\r\n    else if (this.state.showFANAuthenticationLayout) return fnPrintFAN;\r\n  }\r\n\r\n  getDeleteorEditMode() {\r\n    if (this.state.showDeleteAuthenticationLayout) return functionGroups.remove;\r\n    else return functionGroups.modify;\r\n  }\r\n\r\n  handleOperation() {\r\n    if (this.state.showDeleteAuthenticationLayout) return this.handleDelete;\r\n    else if (this.state.showAuthorizeToLoadAuthenticationLayout)\r\n      return this.authorizeToLoad;\r\n    else if (this.state.showAllowToLoadAuthenticationLayout)\r\n      return this.ConfirmedAllowToLoad;\r\n    else if (this.state.showCloseShipmentAuthenticationLayout)\r\n      return this.handleShipmentClose;\r\n    else if (this.state.showFANAuthenticationLayout) return this.printFAN;\r\n    else if (this.state.showViewBOLAuthenticationLayout)\r\n      return this.handleViewBOL;\r\n    else if (this.state.showPrintBOLAuthenticationLayout) return this.printBOL;\r\n  }\r\n\r\n  confirmAllocateBay = () => {\r\n    let bayData = lodash.cloneDeep(this.state.bayData);\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isAllocateBay} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h3>\r\n                  {t(\"ViewAllocateBay_AllocateBay\")} -{\" \"}\r\n                  {this.state.shipment.ShipmentCode}\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-12 detailsTable\">\r\n                <DataTable\r\n                  className=\"iconblock\"\r\n                  data={bayData}\r\n                  selection={this.state.selectBay}\r\n                  selectionMode=\"single\"\r\n                  showHeader={true}\r\n                  onSelectionChange={(e) => this.setState({ selectBay: e })}\r\n                  rows={\r\n                    this.props.userDetails.EntityResult.PageAttibutes\r\n                      .WebPortalListPageSize\r\n                  }\r\n                  resizableColumns={true}\r\n                >\r\n                  {/* <DataTable.ActionBar /> */}\r\n                  <DataTable.Column\r\n                    className=\"compColHeight compColmiddle\"\r\n                    field={\"BayCode\"}\r\n                    header={t(\"ViewAllocateBay_BayCode\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight compColmiddle\"\r\n                    field={\"AssociatedProduct\"}\r\n                    header={t(\"ViewAllocateBay_FinishProduct\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight compColmiddle\"\r\n                    field=\"CurrentQueue\"\r\n                    header={t(\"ViewAllocateBay_CurrentQueue\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight compColmiddle\"\r\n                    field=\"MaximumQueue\"\r\n                    header={t(\"ViewAllocateBay_MaximumQueue\")}\r\n                    editable={false}\r\n                  />\r\n                  {Array.isArray(bayData) &&\r\n                    bayData.length >\r\n                    this.props.userDetails.EntityResult.PageAttibutes\r\n                      .WebPortalListPageSize ? (\r\n                    <DataTable.Pagination />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </DataTable>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"MarineEOD_Close\")}\r\n                className=\"cancelButton\"\r\n                onClick={() => this.setState({ isAllocateBay: false })}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"ViewAllocateBay_Allocate\")}\r\n                onClick={() => {\r\n                  if (\r\n                    this.state.selectBay === null ||\r\n                    this.state.selectBay === undefined ||\r\n                    this.state.selectBay.length === 0\r\n                  ) {\r\n                    let notification = {\r\n                      messageType: \"critical\",\r\n                      message: \"ViewAllocateBay_Allocate\",\r\n                      messageResultDetails: [\r\n                        {\r\n                          keyFields: [\"BayCode\"],\r\n                          keyValues: [],\r\n                          isSuccess: false,\r\n                          errorMessage: \"ViewAllocateBay_bayrequired\",\r\n                        },\r\n                      ],\r\n                    };\r\n\r\n                    toast(\r\n                      <ErrorBoundary>\r\n                        <NotifyEvent\r\n                          notificationMessage={notification}\r\n                        ></NotifyEvent>\r\n                      </ErrorBoundary>,\r\n                      {\r\n                        autoClose:\r\n                          notification.messageType === \"success\"\r\n                            ? 10000\r\n                            : false,\r\n                      }\r\n                    );\r\n                  } else {\r\n                    this.AllocateBay(\r\n                      this.state.shipment.ShipmentCode,\r\n                      this.state.selectBay[0].BayCode,\r\n                      \"SHIPMENT\"\r\n                    );\r\n                  }\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  confirmDeAllocateBay = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isDeAllocateBay} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h5>\r\n                  {t(\"ViewAllocateBay_ConfirmDeallocateBay\", [\r\n                    this.state.ShipmentBay,\r\n                    \"Shipment\",\r\n                  ])}\r\n                </h5>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"cancelButton\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  this.setState({ isDeAllocateBay: false });\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"ViewAllocateBay_Deallocate\")}\r\n                onClick={() => {\r\n                  this.setState({ isDeAllocateBay: false }, () => {\r\n                    this.DeAllocateBay(\r\n                      this.state.shipment.ShipmentCode,\r\n                      \"SHIPMENT\",\r\n                      this.state.ShipmentBay\r\n                    );\r\n                  });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  GetBayByTrnsaction(TrnsactionCode, TrnsactionType, shareholder) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: TrnsactionCode,\r\n      },\r\n      {\r\n        key: KeyCodes.TransactionType,\r\n        value: TrnsactionType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shareholder,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetBayAllocatedInfoByTransaction,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      ),\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess) {\r\n          this.setState({\r\n            ShipmentBay: result.EntityResult.BayCode,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while GetBayByTrnsaction:\", error);\r\n      });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {*} shipmentCode\r\n   * @param {*} bayCode\r\n   * @param {*} entityType ：shipment or receipt\r\n   */\r\n  AllocateBay(shipmentCode, bayCode, entityType) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentCode,\r\n      },\r\n      {\r\n        key: KeyCodes.bayCode,\r\n        value: bayCode,\r\n      },\r\n      {\r\n        key: KeyCodes.entityType,\r\n        value: entityType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.state.selectedShareholder,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"BayAllocation_SaveStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"BayCode\"],\r\n          keyValues: [bayCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.AllocateBay,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getShipmentList(this.state.selectedShareholder);\r\n          this.setState({ isAllocateBay: false });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ResultDataList[0].ErrorList[0];\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while AllocateBay:\", error);\r\n      });\r\n  }\r\n\r\n  DeAllocateBay(shipmentCode, entityType, bayCode) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentCode,\r\n      },\r\n      {\r\n        key: KeyCodes.entityType,\r\n        value: entityType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.state.selectedShareholder,\r\n      KeyCodes: keyCode,\r\n    };\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"BayDeAllocation_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"BayCode\"],\r\n          keyValues: [bayCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.DeallocateShipment,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getShipmentList(this.state.selectedShareholder);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while DeAllocateBay:\", error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"DriverInfo_LastUpdated\",\r\n        fieldValue:\r\n          new Date(this.state.shipment.LastUpdatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.shipment.LastUpdatedTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_LastActive\",\r\n        fieldValue:\r\n          this.state.shipment.LastActiveTime !== undefined &&\r\n            this.state.shipment.LastActiveTime !== null\r\n            ? new Date(\r\n              this.state.shipment.LastActiveTime\r\n            ).toLocaleDateString() +\r\n            \" \" +\r\n            new Date(this.state.shipment.LastActiveTime).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_CreatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.shipment.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.shipment.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    let fillPage = true;\r\n    let shipmentSelected = this.state.selectedItems.length === 1;\r\n    // && this.props.userDetails.EntityResult.IsEnterpriseNode === false;\r\n    let loadingClass = \"globalLoader\";\r\n    if (\r\n      this.props.shipmentSource !== undefined &&\r\n      this.props.shipmentSource !== \"\" &&\r\n      this.props.shipmentSource !== null\r\n    ) {\r\n      fillPage = false;\r\n      loadingClass = \"nestedList\";\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.props.shipmentSource === undefined ||\r\n          this.props.shipmentSource === \"\" ||\r\n          this.props.shipmentSource === null ? (\r\n          <ErrorBoundary>\r\n            <TMUserActionsComposite\r\n              operationsVisibilty={this.state.operationsVisibilty}\r\n              breadcrumbItem={this.props.activeItem}\r\n              shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n              selectedShareholder={this.state.selectedShareholder}\r\n              onShareholderChange={this.handleShareholderSelectionChange}\r\n              //onDelete={() => { }}\r\n              onDelete={this.authenticateDelete}\r\n              onAdd={this.handleAdd}\r\n              popUpContent={\r\n                this.state.popUpContent.length > 0\r\n                  ? this.state.popUpContent\r\n                  : []\r\n              }\r\n              handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n            ></TMUserActionsComposite>\r\n          </ErrorBoundary>\r\n        ) : (\r\n          <>\r\n            {this.state.isDetails ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                {!this.state.isGoBackToSource ? (\r\n                  <TranslationConsumer>\r\n                    {(t) => (\r\n                      <div className=\"headerContainer\">\r\n                        <div className=\"row headerSpacing\">\r\n                          <div className=\"col paddingHeaderItemLeft\">\r\n                            <span\r\n                              style={{ margin: \"auto\" }}\r\n                              className=\"headerLabel\"\r\n                            >\r\n                              {this.props.shipmentSourceCode +\r\n                                \" - \" +\r\n                                t(\"Shipment_OtherSource\")}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"headerItemRight\">\r\n                            {/* <div> */}\r\n                            {/* <div className=\"col col-md-8 col-lg-9 col col-xl-12\" style={{ textAlign: \"right\" }}> */}\r\n                            <Popup\r\n                              element={\r\n                                <div>\r\n                                  <Button\r\n                                    type=\"primary\"\r\n                                    content={t(\"Add_Shipment\")}\r\n                                    disabled={\r\n                                      this.props.shipmentSource ===\r\n                                        Constants.shipmentFrom.Contract\r\n                                        ? !this.state.isContractDisable\r\n                                        : this.props.shipmentSource ===\r\n                                          Constants.shipmentFrom.Order\r\n                                          ? !this.state.isOrderDisable\r\n                                          : false\r\n                                    }\r\n                                    onClick={this.handlePopUpClick}\r\n                                  />\r\n                                </div>\r\n                              }\r\n                              on=\"click\"\r\n                              open={this.state.popUpOpen}\r\n                            >\r\n                              <div\r\n                                onMouseLeave={() =>\r\n                                  this.setState({ popUpOpen: false })\r\n                                }\r\n                              >\r\n                                <VerticalMenu style={{ textAlign: \"right\" }}>\r\n                                  <VerticalMenu>\r\n                                    <VerticalMenu.Header>\r\n                                      {t(\"Common_Create\")}\r\n                                    </VerticalMenu.Header>\r\n                                    {this.state.popUpContent.map((item) => {\r\n                                      return (\r\n                                        <VerticalMenu.Item\r\n                                          onClick={() =>\r\n                                            this.popUpMenuClick(item.fieldName)\r\n                                          }\r\n                                        >\r\n                                          {t(item.fieldValue)}\r\n                                        </VerticalMenu.Item>\r\n                                      );\r\n                                    })}\r\n                                  </VerticalMenu>\r\n                                </VerticalMenu>\r\n                              </div>\r\n                            </Popup>\r\n                          </div>\r\n                          {/* </div> */}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </TranslationConsumer>\r\n                ) : null}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n        {this.state.isGoBackToSource ? (\r\n          <ErrorBoundary>\r\n            {this.props.shipmentSource === Constants.shipmentFrom.Order ? (\r\n              <OrderComposite\r\n                shipmentSource={this.props.shipmentSource}\r\n              ></OrderComposite>\r\n            ) : this.props.shipmentSource ===\r\n              Constants.shipmentFrom.Contract ? (\r\n              <ContractComposite\r\n                shipmentSource={this.props.shipmentSource}\r\n                activeItem={this.props.activeItem}\r\n              ></ContractComposite>\r\n            ) : null}\r\n          </ErrorBoundary>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {this.state.isDetails && this.state.shipmentType ? (\r\n          <ErrorBoundary>\r\n            <TruckShipmentDetailsComposite\r\n              key=\"ShipmentDetails\"\r\n              selectedRow={this.state.selectedRow}\r\n              onBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n              terminalCodes={this.state.terminalCodes}\r\n              selectedShareholder={this.state.selectedShareholder}\r\n              ShipmentType={this.state.shipmentType}\r\n              handleAuthorizeToLoad={this.handleAuthorizeToLoad}\r\n              handleAllowToLoad={this.handleAllowToLoad}\r\n              handleViewAuditTrail={this.handleViewAuditTrail}\r\n              handleViewLoadingDetails={this.handleViewLoadingDetails}\r\n              handlePrintFAN={this.handlePrintFAN}\r\n              handlePrintBOL={this.handlePrintBOL}\r\n              handleSendBOL={this.handleSendBOL}\r\n              handleBSIOutbound={this.handleBSIOutbound}\r\n              handleSealCompartments={this.handleSealCompartments}\r\n              handleViewBOL={this.handleViewBOL}\r\n              shipmentSource={this.props.shipmentSource}\r\n              shipmentSourceCode={this.props.shipmentSourceCode}\r\n              shipmentSourceCompartmentItems={\r\n                this.props.shipmentSourceCompartmentItems\r\n              }\r\n              shipmentSourceDetails={this.props.shipmentSourceDetails}\r\n              shipmentSourceFromSummary={this.props.shipmentSourceFromSummary}\r\n              selectedSourceCode={this.props.selectedSourceCode}\r\n            ></TruckShipmentDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : (\r\n          <div>\r\n            {this.state.isViewAuditTrail ? (\r\n              <ErrorBoundary>\r\n                <TruckShipmentViewAuditTrailDetails\r\n                  ShipmentCode={this.state.selectedItems[0].Common_Code}\r\n                  auditTrailList={this.state.auditTrailList}\r\n                  modAuditTrailList={this.state.modAuditTrailList}\r\n                  Attributes={\r\n                    this.state.auditTrailList !== undefined &&\r\n                      this.state.auditTrailList.length > 0\r\n                      ? this.state.auditTrailList[0].AttributesforUI\r\n                      : []\r\n                  }\r\n                  handleBack={this.onBack}\r\n                ></TruckShipmentViewAuditTrailDetails>\r\n              </ErrorBoundary>\r\n            ) : this.state.isViewLoadingDetails ? (\r\n              <ErrorBoundary>\r\n                <TruckShipmentViewLoadingDetails\r\n                  ShipmentCode={this.state.selectedItems[0].Common_Code}\r\n                  modLoadingDetails={this.state.modViewLoadingDetails}\r\n                  handleBack={this.onBack}\r\n                  expandedRows={this.state.loadingExpandedRows}\r\n                  toggleExpand={this.toggleExpand}\r\n                  nonConfigColumns={this.state.nonConfigColumns}\r\n                ></TruckShipmentViewLoadingDetails>\r\n              </ErrorBoundary>\r\n            ) : this.state.isManualEntry ? (\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <TMDetailsHeader\r\n                      entityCode={\r\n                        this.state.shipment.ShipmentCode +\r\n                        \" - \" +\r\n                        t(\"LoadingDetailsEntry_Title\")\r\n                      }\r\n                      popUpContents={popUpContents}\r\n                    ></TMDetailsHeader>\r\n                  )}\r\n                </TranslationConsumer>\r\n                <TruckShipmentManualEntryDetailsComposite\r\n                  shipment={this.state.shipment}\r\n                  handleBack={this.onBack}\r\n                  selectedShareholder={this.state.selectedShareholder}\r\n                ></TruckShipmentManualEntryDetailsComposite>\r\n              </ErrorBoundary>\r\n            ) : (\r\n              <div>\r\n                {this.props.shipmentSource === undefined ||\r\n                  this.props.shipmentSource === \"\" ||\r\n                  this.props.shipmentSource === null ? (\r\n                  <ErrorBoundary>\r\n                    <div className=\"kpiSummaryContainer\">\r\n                      <KPIDashboardLayout\r\n                        kpiList={this.state.truckShipmentKPIList}\r\n                        pageName=\"TruckShipment\"\r\n                      ></KPIDashboardLayout>\r\n                    </div>\r\n                  </ErrorBoundary>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <div\r\n                  // className={\r\n                  //   shipmentSelected ? \"showShipmentStatusRightPane\" : \"\"\r\n                  // }\r\n                  className={\r\n                    (shipmentSelected &&\r\n                      Array.isArray(this.state.shipment.ShipmentCompartments) &&\r\n                      this.state.shipment.ShipmentCompartments.length > 0) //&& this.props.shipmentSource === undefined\r\n                      ? !this.state.drawerStatus\r\n                        ? \"showShipmentStatusRightPane\"\r\n                        : \"drawerClose\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  {this.props.shipmentSourceFromSummary === undefined ||\r\n                    this.props.shipmentSourceFromSummary === \"\" ||\r\n                    this.props.shipmentSourceFromSummary === null ? (\r\n                    <div>\r\n                      <ErrorBoundary>\r\n                        {this.props.shipmentSource === undefined ? (\r\n                          <div>\r\n                            <TMTransactionFilters\r\n                              dateRange={{\r\n                                from: this.state.fromDate,\r\n                                to: this.state.toDate,\r\n                              }}\r\n                              dateError={this.state.dateError}\r\n                              handleDateTextChange={this.handleDateTextChange}\r\n                              handleRangeSelect={this.handleRangeSelect}\r\n                              handleLoadOrders={this.handleLoadOrders}\r\n                              filterText=\"LoadShipments\"\r\n                            ></TMTransactionFilters>\r\n                          </div>\r\n                        ) : null}\r\n                      </ErrorBoundary>\r\n                      {this.state.isReadyToRender ? (\r\n                        <ErrorBoundary>\r\n                          <div\r\n                            className={\r\n                              fillPage === true\r\n                                ? \"compositeTransactionList\"\r\n                                : \"\"\r\n                            }\r\n                          >\r\n                            <TruckShipmentSummaryPageComposite\r\n                              tableData={this.state.data.Table}\r\n                              columnDetails={this.state.data.Column}\r\n                              pageSize={\r\n                                this.props.userDetails.EntityResult\r\n                                  .PageAttibutes.WebPortalListPageSize\r\n                              }\r\n                              exportRequired={true}\r\n                              exportFileName=\"TruckShipmentList\"\r\n                              columnPickerRequired={true}\r\n                              terminalsToShow={\r\n                                this.props.userDetails.EntityResult\r\n                                  .PageAttibutes.NoOfTerminalsToShow\r\n                              }\r\n                              selectionRequired={true}\r\n                              columnGroupingRequired={true}\r\n                              onSelectionChange={this.handleSelection}\r\n                              onRowClick={this.handleRowClick}\r\n                              fillPage={fillPage}\r\n                              parentComponent={this.componentName}\r\n                              selectedItems={this.state.selectedItems}\r\n                            ></TruckShipmentSummaryPageComposite>\r\n                          </div>\r\n                        </ErrorBoundary>\r\n                      ) : (\r\n                        <LoadingPage\r\n                          loadingClass={loadingClass}\r\n                          message=\"\"\r\n                        ></LoadingPage>\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                {\r\n                  (shipmentSelected &&\r\n                    Array.isArray(this.state.shipment.ShipmentCompartments) &&\r\n                    this.state.shipment.ShipmentCompartments.length > 0) ? ( //&& this.props.shipmentSource === undefined\r\n                    <div\r\n                      // className=\"showShipmentStatusLeftPane\"\r\n                      className={\r\n                        this.state.drawerStatus ? \"marineStatusLeftPane\" : \"\"\r\n                      }\r\n                    >\r\n                      <TransactionSummaryOperations\r\n                        selectedItem={this.state.selectedItems}\r\n                        shipmentNextOperations={this.state.shipmentNextOperations}\r\n                        handleDetailsPageClick={this.handleRowClick}\r\n                        handleOperationButtonClick={this.handleOperationClick}\r\n                        currentStatuses={this.state.currentShipmentStatuses}\r\n                        unAllowedOperations={[\r\n                          \"ManualEntry\",\r\n                          \"ViewShipment_AuthorizeLoad\",\r\n                          \"ViewShipment_AllowToLoad\",\r\n                          \"ViewShipment_RecordWeight\",\r\n                          \"ViewAllocateBay_AllocateBay\",\r\n                          \"ViewAllocateBay_DeallocateBay\",\r\n                          \"ViewShipment_CloseShipment\",\r\n                          \"ViewShipmentStatus_PrintFAN\",\r\n                        ]}\r\n                        webPortalAllowedOperations={[\r\n                          \"ViewShipment_ViewLoadingDetails\",\r\n                          \"ViewShipmentStatus_ViewBOL\",\r\n                          \"ViewShipment_ViewAuditTrail\",\r\n                        ]}\r\n                        isWebPortalUser={\r\n                          this.props.userDetails.EntityResult.IsWebPortalUser\r\n                        }\r\n                        isDetails={false}\r\n                        isEnterpriseNode={\r\n                          this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                        }\r\n                        handleDrawer={this.handleDrawer}\r\n                        title={\"ViewAllShipment_Details\"}\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        {Object.keys(this.state.selectedRow).length > 0 ||\r\n          this.state.selectedItems.length === 1\r\n          ? this.renderModal()\r\n          : \"\"}\r\n        {this.state.showDeleteAuthenticationLayout ||\r\n          this.state.showAllowToLoadAuthenticationLayout ||\r\n          this.state.showAuthorizeToLoadAuthenticationLayout ||\r\n          this.state.showCloseShipmentAuthenticationLayout ||\r\n          this.state.showViewBOLAuthenticationLayout ||\r\n          this.state.showPrintBOLAuthenticationLayout ||\r\n          this.state.showFANAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={this.getDeleteorEditMode()}\r\n            functionGroup={this.getFunctionGroupName()}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleOperation()}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n\r\n        {this.props.shipmentSource === undefined ? (\r\n          <ErrorBoundary>\r\n            <ToastContainer\r\n              hideProgressBar={true}\r\n              closeOnClick={false}\r\n              closeButton={true}\r\n              newestOnTop={true}\r\n              position=\"bottom-right\"\r\n              toastClassName=\"toast-notification-wrap\"\r\n            />\r\n          </ErrorBoundary>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {this.state.isRecordWeight ? this.handleRecordWeight() : null}\r\n        {this.state.isSealCompartments ? (\r\n          <ErrorBoundary>\r\n            <TruckShipmentSealDetailsComposite\r\n              transactionCode={this.state.shipment.ShipmentCode}\r\n              selectedShareholder={this.state.selectedShareholder}\r\n              sealCompartments={this.state.sealCompartments}\r\n              handleSealClose={this.handleSealClose}\r\n            ></TruckShipmentSealDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : null}\r\n        {this.state.isNotRevised ? this.confirmAllowToLoad() : null}\r\n        {this.state.isCloseShipment ? this.handleCloseShipmentModal() : null}\r\n        {this.state.isLadenWeightValid ? this.confirmRecordLadenWeight() : null}\r\n        {this.state.isAllocateBay ? this.confirmAllocateBay() : null}\r\n        {this.state.isDeAllocateBay ? this.confirmDeAllocateBay() : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TruckShipmentComposite);\r\n\r\nTruckShipmentComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n  shipmentSource: PropTypes.number,\r\n  shipmentSourceCode: PropTypes.string,\r\n  selectedShareholder: PropTypes.string,\r\n  shipmentSourceCompartmentItems: PropTypes.array,\r\n  shipmentSourceDetails: PropTypes.object,\r\n  shipmentSourceFromSummary: PropTypes.bool,\r\n  shipmentType: PropTypes.string,\r\n  selectedSourceCode: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { DatePicker, Button } from \"@scuf/common\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function TMTransactionFilters({\r\n  handleDateTextChange,\r\n  handleRangeSelect,\r\n  handleLoadOrders,\r\n  dateError,\r\n  dateRange,\r\n  filterText,\r\n}) {\r\n  //console.log(dateError);\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"dateRangeContainer\">\r\n          <div className=\"dateRangeMargin\">\r\n            <DatePicker\r\n              type=\"daterange\"\r\n              closeOnSelection={true}\r\n              error={t(dateError)}\r\n              displayFormat={getCurrentDateFormat()}\r\n              //value={dateRange}\r\n              rangeValue={dateRange}\r\n              onTextChange={handleDateTextChange}\r\n              onRangeSelect={handleRangeSelect}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"dateSearch\">\r\n            <Button content={t(filterText)} onClick={handleLoadOrders} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as WjCore from \"@grapecity/wijmo\";\r\nimport { ReportViewer } from \"@grapecity/wijmo.react.viewer\";\r\nimport * as wjViewer from \"@grapecity/wijmo.viewer\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { connect } from \"react-redux\";\r\n\r\nTMReportViewer.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\n\r\nTMReportViewer.defaultProps = {\r\n  parameters: {},\r\n};\r\n\r\nWjCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nfunction TMReportViewer({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  parameters,\r\n  filePath,\r\n  ...props\r\n}) {\r\n  //   const [proxyHost, setProxyHost] = useState(\r\n  //     \"http://localhost:8888/TMWebProxyAPI/\"\r\n  //   );\r\n  //   const [reportServiceHost, setReportServiceHost] = useState(\r\n  //     \"http://localhost:5632/\"\r\n  //   );\r\n  //   const [reportUrl, setReportUrl] = useState(proxyHost + \"api/report\");\r\n  //   const [filePath, setFilePath] = useState(\r\n  //     \"TM/\" + \"TMReports/\" + \"CarrierCompanyReport\"\r\n  //   );\r\n  const reportUrl = proxyServerHost + \"api/report\";\r\n  //const filePath = \"TM/\" + \"TMReports/\" + reportName;\r\n\r\n  const beforeXhrRequestSend = (s, event) => {\r\n    // use this event for Authorization purpose\r\n    const prevBeforeSend = event.settings.beforeSend;\r\n    event.settings.beforeSend = function (xhr) {\r\n      prevBeforeSend && prevBeforeSend(xhr);\r\n      //here you may add the params for XMLHttpRequest as required\r\n      if (!props.userDetails.EntityResult.IsWebPortalUser)\r\n        xhr.withCredentials = true;\r\n      if (xhr.URL_DEBUG.indexOf(\"parameters\") > -1) {\r\n        xhr.onreadystatechange = function () {\r\n          if (this.readyState === 4 && this.status === 200) {\r\n            var host = s.hostElement;\r\n            setTimeout(() => {\r\n              var splitter = host.querySelector(\".wj-viewer-splitter\");\r\n              var param = host\r\n                .querySelector(\".wj-viewer-tabsleft\")\r\n                .querySelectorAll(\"li\")[2];\r\n              if (!param.disabled) {\r\n                param.className = \"hidden\";\r\n                splitter.click();\r\n              }\r\n            }, 1000);\r\n          }\r\n        };\r\n      }\r\n    };\r\n  };\r\n  let header = {\r\n    Authorization: \"Bearer \" + props.tokenDetails.tokenInfo,\r\n  };\r\n\r\n  // let header = {\r\n  //   Authorization: \"Bearer \" + \"fiewjfjewifi\",\r\n  // };\r\n\r\n  const initViewer = (s, event) => {\r\n    wjViewer._ReportService.prototype.load = function (data) {\r\n      var _this = this;\r\n      var promise = new wjViewer._Promise();\r\n      if (!this._checkReportController(promise)) {\r\n        return promise;\r\n      }\r\n      this.httpRequest(this._getReportInstancesUrl(), {\r\n        method: \"POST\",\r\n        data: data,\r\n      }).then(\r\n        function (xhr) {\r\n          var v = wjViewer._parseReportExecutionInfo(xhr.responseText);\r\n          _this._instanceId = v.id;\r\n          _this._status = wjViewer._ExecutionStatus.loaded;\r\n          _this._outlinesLocation = v.outlinesLocation;\r\n          _this._statusLocation = v.statusLocation.replace(\r\n            reportServiceHost,\r\n            proxyServerHost\r\n          );\r\n          _this._pageSettingsLocation = v.pageSettingsLocation;\r\n          _this._featuresLocation = v.featuresLocation;\r\n          _this._parametersLocation = v.parametersLocation;\r\n          promise.resolve(v);\r\n        },\r\n        function (xhr) {\r\n          promise.reject(_this._getError(xhr));\r\n        }\r\n      );\r\n      return promise;\r\n    };\r\n  };\r\n\r\n  //console.log(props.userDetails.EntityResult.IsWebPortalUser, header);\r\n  return (\r\n    <div>\r\n      {props.userDetails.EntityResult.IsWebPortalUser ? (\r\n        <div>\r\n          <ReportViewer\r\n            requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <ReportViewer\r\n            //requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TMReportViewer);\r\n","import React from \"react\";\r\nimport { Modal, Button, Header } from \"@scuf/common\";\r\nimport TMReportViewer from \"../Common/TMReportViewer\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nReportDetails.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  filePath: PropTypes.string.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  showReport: PropTypes.bool.isRequired,\r\n  handleModalClose: PropTypes.func.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\nReportDetails.defaultProps = {\r\n  parameters: {},\r\n};\r\nexport default function ReportDetails({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  filePath,\r\n  handleBack,\r\n  showReport,\r\n  handleModalClose,\r\n  parameters,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <Modal\r\n      style={{ padding: \"0px\" }}\r\n      size=\"fullscreen\"\r\n      open={showReport}\r\n      // onClose={handleModalClose}\r\n    >\r\n      <div>\r\n        <Header title={t(\"Header_TerminalManager\")} menu={false} />\r\n        <TMReportViewer\r\n          proxyServerHost={proxyServerHost}\r\n          reportServiceHost={reportServiceHost}\r\n          filePath={filePath}\r\n          parameters={parameters}\r\n        />\r\n        <div style={{ marginTop: \"10px\", marginLeft: \"20px\" }}>\r\n          <Button\r\n            className=\"backButton\"\r\n            onClick={handleBack}\r\n            content={t(\"Report_Back\")}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","export const DatesInEntity={\r\n    Driver : [\r\n    \"License1ExpiryDate\",\r\n    \"License1IssueDate\",\r\n    \"License2IssueDate\",\r\n    \"License2ExpiryDate\",\r\n    \"License3IssueDate\",\r\n    \"License3ExpiryDate\",\r\n    \"HazardousLicenseExpiry\"\r\n  ],\r\n  CarrierCompany:[\"PermitExpiryDate\"],\r\n  PrimeMover:[\"RoadTaxNoIssueDate\",\"RoadTaxNoExpiryDate\",\"licenseExpiryDate\"],\r\n  Wagon:[\"LicenseExpiryDate\"],\r\n  Vehicle:[\"LicenseNoIssueDate\",\"LicenseNoExpiryDate\",\r\n  \"RoadTaxNoIssueDate\",\"RoadTaxNoExpiryDate\",\"Bondexpirydate\",\"HazardousLicenseExpiry\"],\r\n  Contract:[\"StartDate\",\"EndDate\"],\r\n  ContractItem:[\"StartDate\",\"EndDate\"],\r\n  Order:[\"OrderStartDate\",\"OrderEndDate\",\"OrderDate\",\"DeliveryDate\"],\r\n  AccessCard:[\"ExpiryDate\",\"IssueDate\",\"PasswordExpiryDate\"],\r\n  Trailer:[\"HazardousLicenseExpiry\"],\r\n  };"],"names":["TransactionSourceSummaryOperations","_ref","transportationType","handleShipmentByCompartmentPageClick","handleShipmentByProductPageClick","handleDispatchPageClick","isSBCEnable","isSBPEnable","isRailDispatchEnable","t","useTranslation","_jsxs","className","children","_jsx","Divider","style","marginLeft","Button","type","disabled","onClick","ContractDetails","contract","modContract","onFieldChange","validationErrors","attributeValidationErrors","onDateTextChange","listOptions","onAllTerminalsChange","handleAddPlan","handleDeletePlan","selectedPlanRow","handleRowSelectionChange","handleCellDataEdit","modContractItems","selectedShareholder","isEnterpriseNode","onAttributeDataChange","handleCompAttributeCellDataEdit","modAttributeMetaDataList","expandedRows","toggleExpand","compartmentDetailsPageSize","isEnableForceClose","handleForceClose","handleViewShipments","handleViewDispatch","isAutoGeneratedContractCode","customerOptions","customerDestinationOptions","Object","keys","length","Utilities","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","handleAttributeType","data","attribute","rowData","handleAttributeDateValue","dateval","chars","split","Date","convertAttributeDatetoString","value","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","Constants","STRING","INT","Input","fluid","AttributeValue","IsReadonly","onChange","reserveSpace","FLOAT","LONG","DOUBLE","undefined","toLocaleString","BOOL","Checkbox","checked","toString","DATETIME","DatePicker","showYearSelector","onTextChange","error","console","log","handleIsRequiredCompAttributes","IsMandatory","AttributeName","class","handleDateEdit","cellData","val","rowIndex","field","displayFormat","getCurrentDateFormat","handleDropdownEdit","dropDownOptions","unitOfVolume","unitOfWeight","finishedProductOptions","destOptions","CustomerCode","Array","isArray","getOptionsWithSelect","Select","placeholder","options","search","noResultsMessage","ContractCode","label","indicator","Description","StartDate","disablePast","EndDate","getKeyByValue","Status","AssociatedTerminals","terminalList","terminalCodes","selectedTerminal","TerminalCodes","onCheckChange","Active","text","Remarks","CarrierCollection","carrierOptions","multiple","map","attire","ErrorBoundary","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","Icon","root","name","size","DataTable","rowExpansionTemplate","AttributesforUI","rows","Column","header","editable","renderer","Pagination","selectionMode","selection","onSelectionChange","scrollable","scrollHeight","handleIsRequiredCompartmentCell","editFieldType","customEditRenderer","toLocaleDateString","initialWidth","open","findIndex","x","SeqNumber","textAlign","content","TransportationType","ROAD","RAIL","defaultProps","contractTypeOptions","ContractDetailsComposite","Component","constructor","_this","arguments","this","state","contractValidationDef","terminalOptions","volumeUOMOptions","weightUOMOptions","isReadyToRender","saveEnabled","compartmentAttributeMetaDataList","isShowTruckShipment","isShowBackButton","isShowRailDispatch","isAllowtoUpdate","updatedContractStatus","contractKPIList","scheduledContractUpdate","showAuthenticationLayout","showForceCloseAuthenticationLayout","tempContract","tempContactStatusObj","handleAttributeDataChange","matchedAttributes","lodash","matchedAttributesList","filter","modattribute","Code","DefaultValue","forEach","setState","compAttribute","compIndex","item","compSequenceNo","handleChange","propertyName","plan","DestinationCode","terminalSelectionChange","planRow","newVal","props","userDetails","EntityResult","IsArchived","newPlan","Attributes","BlockedQuantity","FinishedProductCode","FinishdedProductType","ItemCode","LoadedQuantity","Quantity","QuantityUOM","RemainingQuantity","ShareholderCode","push","IsEnterpriseNode","formCompartmentAttributes","obj","index","cindex","handleDateTextChange","handleAllTerminalsChange","addUpdateContract","createContract","updateContract","handleSave","SCHEDULED","values","every","fillDetails","attributeList","validateSave","convertStringtoDecimal","DateFieldsInEntities","Contract","ContractItems","ci","ContractItem","IsWebPortalUser","isTerminalAdded","expandedRowIndex","splice","handleReset","handleResetAttributeValidationError","localNodeAttribute","key","returnValue","contactStatusObj","Shareholder","ForceClose","ForceCloseReason","NewContractStatus","updateContractStatus","ShareHolderCode","keyDataCode","KeyCodes","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","getContract","ErrorList","toast","NotifyEvent","notificationMessage","autoClose","handleOperationVisibility","handleBack","handleShowBackButton","status","confirmAllowToUpdate","TranslationConsumer","Modal","Footer","handleAuthenticationClose","componentDidMount","isNewContract","selectedRow","Common_Code","getAttributes","getTerminalList","getUOMList","getCarrierList","getFinishedProductList","getCustomerDestinationList","contractAttributeEntity","contractItemAttributeEntity","CONTRACT","CONTRACT_ITEM","componentWillReceiveProps","nextProps","shareholderCustomers","shareholderCust","CustomerDestinationsList","catch","weightUOMs","MASS","weightOption","volumeUOMs","VOLUME","volumeOption","err","emptyContract","GetAutoGeneratedContractCode","FunctionsList","functionGroups","add","fnContract","keyCode","foceCloseStatus","modify","fnContractForceClose","CLOSED","getKPIList","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","contractAttribute","valueAttribute","ListOfAttributeData","AttributeCode","attributes","attTerminal","some","selTerminal","comp","compAttributes","att","DisplayName","MinValue","MaxValue","ValidationFormat","attributesforNewComp","tempCompAttributes","attData","tempAttIndex","assignedAttributes","fillAttributeDetails","compAttributeMetaDataList","terminalAttributes","termAtt","ContractType","DEFAULT_CONTRACT_TYPE","CREATED","com","contractPlanValidationDef","col","validator","displayName","errMsg","onSaved","shareholder","contractCode","view","fnKPIInformation","Parameters","objKPIRequestData","PageName","kpiContractDetail","InputParameters","ListKPIDetails","handleOperation","getFunctionGroupName","render","popUpContents","fieldName","fieldValue","LastUpdatedTime","toLocaleTimeString","LastActiveTime","CreatedTime","TMDetailsHeader","entityCode","newEntityName","TruckShipmentProject","shipmentSource","shipmentSourceCode","shipmentSourceCompartmentItems","shipmentSourceDetails","RailDispatchProject","_Fragment","TMDetailsKPILayout","KPIList","PageAttibutes","WebPortalListPageSize","marginTop","TMDetailsUserActions","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","OrderDetails","order","modOrder","modOrderItems","printScheduleClick","enableForceClose","OrderCode","OrderStartDate","OrderEndDate","OrderStatus","OrderDate","FULLY_DELIVERED","OrderDetailsComposite","orderValidationDef","orderKPIList","tempOrder","concat","JSON","stringify","datePart","toISOString","LotNumber","DefaultQtyUOMForTransactionUI","ScheduledDate","addUpdateOrder","createOrder","updateOrder","Order","getOrder","forceCloseOperation","entity","OrderItems","printSchedule","handlePrintSchedule","isNewOrder","getCustomerList","orderAttributeEntity","orderItemAttributeEntity","ORDER","ORDERITEM","emptyOrder","fnOrder","orderAttribute","orderPlanValidationDef","orderCode","kpiOrderDetail","fnOrderForceClose","shCode","token","callback","input","ContractSummaryPageComposite","tableData","columnDetails","pageSize","exportRequired","exportFileName","columnPickerRequired","columnGroupingRequired","selectionRequired","terminalsToShow","onRowClick","parentComponent","WijmoGridComposite","columns","rowsPerPage","onSelectionHandle","ContractComposite","isDetails","toDate","fromDate","isDetailsModified","operationsVisibilty","delete","selectedItems","dateError","isLoadShipment","shipmentType","isLoadRailDispatch","selectedContractCode","isShowRightPane","showDeleteAuthenticationLayout","componentName","componentWillUnmount","clearStorage","window","removeEventListener","sessionStorage","removeItem","handleDelete","deleteContractKeys","i","keyData","Key","Value","isRefreshDataRequire","ResultDataList","res","getContractList","messageResult","handleShareholderSelectionChange","getTerminalsList","handleAdd","handleRowClick","remove","savedEvent","saveType","handleRangeSelect","to","from","handleSelection","items","isCreated","ShipmentGridContract_Status","isReady","toUpperCase","handleLoadContracts","contractCodes","authenticateDelete","setHours","PrimaryShareholder","getlookupValues","addEventListener","getTransportationType","activeItem","itemProps","startRange","endRange","kpiContractList","sbcAdd","fnSBC","sbpAdd","fnSBP","railDispatchAdd","fnRailDispatch","getDeleteorEditMode","contractSelected","TMUserActionsComposite","breadcrumbItem","shareholders","ShareholderList","onShareholderChange","onDelete","onAdd","handleBreadCrumbClick","TruckShipmentComposite","selectedSourceCode","shipmentSourceFromSummary","RailDispatchComposite","KPIDashboardLayout","kpiList","pageName","TMTransactionFilters","dateRange","handleLoadOrders","filterText","Table","NoOfTerminalsToShow","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","position","toastClassName","OrderSummaryPageComposite","OrderComposite","None","selectedCodes","deleteOrderKeys","getOrderList","ShipmentGridOrder_Status","NOT_SCHEDULED","Common_Status","Common_Shareholder","orderCodes","kpiOrderList","isOrdersSelected","RailDispatchSummaryPageComposite","operationsVisibility","nextOperations","currentStatuses","currentAccess","lastStatus","modalData","closeDispatch","isOpen","reason","dispatchCode","dispatchStatus","subPageName","isDirectOpenSubPage","isDisplayDetails","isReadyToShowOperation","isDisplayRightPane","enableHSEInspection","railLookUpData","showReport","drawerStatus","isGoBackToSource","isContractDisable","railDispatchKPIList","railDispatchDeleteStates","activityInfo","showAuthorizeToLoadAuthenticationLayout","showCloseShipmentAuthenticationLayout","showViewBOLAuthenticationLayout","showPrintBOLAuthenticationLayout","showFANAuthenticationLayout","getLookUpData","lookUpTypeCode","setRightPaneDisplay","deleteRailDispatchKeys","getRailDispatchList","handleNotify","handleSubPageBack","isLoadOperaton","dispatchDeleteInfo","ActivityCode","RAILDISPATCH_ENABLE_DELETEPLAN","ActionTypeCode","CHECK","dispatchDeleteStates","ShipmentStates","indexOf","ViewRailDispatchDetails_ShipmentStatus","getRailDispatchStatusOperation","handleOperationClick","operation","authorizeToLoadClick","handleConfirmCloseDispatch","printBOLClick","printFANClick","viewBOLClick","handleBSIOutbound","handleUpdateStatusOperation","railDispatch","DispatchCode","DispatchStatus","RailRouteConfigurationDetails_RailRouteCode","RouteCode","ViewRailDispatchList_LoadedDate","LoadEndTime","AcutalTerminalCode","ActualTerminalCode","RailDispatchCode","handleAuthorizeToLoad","TMWebApiRequest","CHECKED_IN","handleCloseDispatchReasonChange","forceCloseRailDispatch","closeRailDispatch","Reason","handlePrintFAN","handleModalBack","handleViewBOL","reportServiceURI","handlePrintBOL","handleDrawer","CheckRailDispatchDeleteAllowed","entityResult","EnableRail","getContractLookupValues","GetShipmentActivityInfo","ShipmentFrom","ScheduledFrom","ScheduledTo","ShipmentTypeCode","ShipmentType","All","selectedItem","updatedSelectedItem","getRailDispatchOperations","getRailDispatchAllChangeStatus","callBack","localTerminalCode","ViewRailDispatch_EditAccess","ViewRailDispatch_DisableAdjustPlanQty","ViewRailDispatch_DisableWagonForceClose","ViewRailDispatch_Delete","ViewRailDispatch_Update","operationOrder","IsBSIEnabledLicense","renderModal","path","paramValues","Culture","UICulture","ReportDetails","handleModalClose","proxyServerHost","reportServiceHost","filePath","parameters","kpiRailShipmentList","fnCloseRailDispatch","fnViewRailDispatch","fnPrintRailBOL","fnPrintRailFAN","shrVisible","margin","RailDispatchDetailsComposite","onSubPageBack","onNotify","onUpdateStatusOperation","onSetRightPaneDisplay","loadingClass","TransactionSummaryOperations","shipmentNextOperations","handleDetailsPageClick","handleOperationButtonClick","isWebPortalUser","unAllowedOperations","webPortalAllowedOperations","closeOnDimmerClick","TruckShipmentSummaryPageComposite","shipment","popUpContent","currentShipmentStatuses","isOperation","isManualEntry","isViewAuditTrail","auditTrailList","modAuditTrailList","truckShipmentKPIList","isViewLoadingDetails","modViewLoadingDetails","loadingExpandedRows","nonConfigColumns","isSealCompartments","sealCompartments","isRecordWeight","recordWeightList","weighBridgeCode","scadaValue","allowOutofRangeTW","isNotRevised","staticLoadingDetails","isCloseShipment","isVehicleCrippled","reasonForClosure","modCustomValues","popUpOpen","isOrderDisable","isLadenWeightValid","ladenWeightError","vehicleForRecordWeight","showAllowToLoadAuthenticationLayout","isAllocateBay","bayData","selectBay","isDeAllocateBay","ShipmentBay","itemName","getShipmentList","shipmentDeleteInfo","SHIPMENT_ENABLE_DELETE","shipmentDeleteStates","ViewShipmentStatus_ShipmentStatus","productCount","ViewShipmentStatus_ShipmentType","PRODUCT","compCount","COMPARTMENT","productFunctionGroup","compartmentFunctionGroup","getShipment","closeShipment","handleShipmentClose","ShipmentCode","formCloseShipmentRequest","handleCloseShipmentModal","display","flexWrap","disbaled","confirmRecordLadenWeight","RecordLadenWeight","confirmAllowToLoad","allowToLoad","printBOL","printFAN","ConfirmedAllowToLoad","handleAllowToLoad","handleSealClose","authorizeToLoadOnClick","authorizeToLoad","ViewShipment_AuthorizeLoad","ViewShipment_AllowToLoad","Planned_Quantity","Revised_Planned_Quantity","ManualEntry","ViewShipment_RecordWeight","getRecordWeightList","ViewShipment_CloseShipment","ViewShipmentStatus_PrintFAN","ViewShipmentStatus_PrintBOL","ViewShipmentStatus_ViewBOL","ViewAllShipment_SendBOL","handleSendBOL","ViewAllShipment_BSIOutbound","ViewShipment_ViewAuditTrail","handleViewAuditTrail","SHIPMENTSTATUSTIME","UpdatedTime","formReadonlyCompAttributes","ViewShipment_ViewLoadingDetails","handleViewLoadingDetails","count","seqNo","endtime","starttime","productcode","join","Table1","NonConfiguredColumns","ViewAllShipment_SealCompartments","handleSealCompartments","getBays","products","ShipmentCompartments","element","bayAllocation","SupportedProducts","ele","AssociatedProduct","deleteShipmentsKeys","shipmentCode","RecordTareWeight","VehicleCode","getScadaValue","handleStatus","e","EMPTY","LOADING","PART_FILLED","OVER_FILLED","FORCE_COMPLETED","COMPLETED","INTERRUPTED","getSiteConfigurationLookUP","siteConfiguration","getWeighBridge","handleRecordWeight","handlePopUpClick","popUpMenuClick","menuItem","confirmAllocateBay","showHeader","resizableColumns","AllocateBay","BayCode","confirmDeAllocateBay","DeAllocateBay","populatePopupContents","sbcfnAdd","sbpfnAdd","getVehicle","vehicleCode","GetViewAllShipmentCustomData","shipmentRow","kpiTruckShipmentList","getLoadingDetails","getShipmentStatusOperations","getShipmentStatuses","GetBayByTrnsaction","shipmentStatusTimeAttributeEntity","shipmentItem","updatedselectedItem","DriverCode","ViewAllTruckShipmentLoadingDetails","topUpDecantApprovalStatus","topUpDecantEnabled","listShipmentCompartmentInfo","listShipmentLoadingCompData","TopUpDecantStatusText","EnableTopUpDecant","compAtt","selAtt","weighBridge","getLadenWeightData","TareWeight","WeightUOM","MaxLoadableWeight","ValidateLadenWeight","ladenWeighData","minLadenWeightTolerance","MinLadenweightQuantityTolerance","maxLadenWeightTolerance","MaxLadenweightQuantityTolerance","minLadenWeightTol","maxLadenWeightTol","isNaN","parseFloat","RegisteredTareWeight","VehicleWeightUOM","Weight","trailerWeighData","isNodeEnterpriseOrWebortal","fnCloseShipment","fnShipmentStatus","fnPrintBOL","fnPrintFAN","TrnsactionCode","TrnsactionType","bayCode","entityType","fillPage","shipmentSelected","Popup","on","onMouseLeave","VerticalMenu","Header","Item","TruckShipmentDetailsComposite","TruckShipmentViewAuditTrailDetails","TruckShipmentViewLoadingDetails","modLoadingDetails","TruckShipmentManualEntryDetailsComposite","TruckShipmentSealDetailsComposite","transactionCode","closeOnSelection","rangeValue","onRangeSelect","TMReportViewer","reportUrl","beforeXhrRequestSend","s","event","prevBeforeSend","settings","beforeSend","xhr","withCredentials","URL_DEBUG","onreadystatechange","readyState","host","hostElement","setTimeout","splitter","querySelector","param","querySelectorAll","click","Authorization","initViewer","wjViewer","prototype","load","promise","_checkReportController","httpRequest","_getReportInstancesUrl","method","v","responseText","_instanceId","id","_status","loaded","_outlinesLocation","outlinesLocation","_statusLocation","statusLocation","replace","_pageSettingsLocation","pageSettingsLocation","_featuresLocation","featuresLocation","_parametersLocation","parametersLocation","resolve","reject","_getError","ReportViewer","requestHeaders","height","serviceUrl","initialized","beforeSendRequest","WjCore","padding","menu","DatesInEntity","Driver","CarrierCompany","PrimeMover","Wagon","Vehicle","AccessCard","Trailer"],"sourceRoot":""}