{"version":3,"file":"static/js/80.c2b7a9de.chunk.js","mappings":"gOAKe,SAASA,EAAkBC,GAQtC,IARuC,QACvCC,EAAO,SACPC,EAAQ,UACRC,EAAS,aACTC,EAAY,YACZC,EAAW,YACXC,EAAW,wBACXC,GACHP,EACG,MAAOQ,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,GAEzCC,EAASC,EAAAA,OAAa,MAEtBC,EAAWA,KACb,IAAIC,EAAmBC,OAAOC,YAC1BC,EAAaT,EAGjB,GAAIG,EAAOO,SAAWP,EAAOO,QAAQC,wBAAwBC,IAAMb,EAC/DU,EAAa,MAGZ,IAAyB,IAArBH,EAIL,OAHAG,EAAa,CAIjB,CAEAR,EAAeQ,EAAW,EAkB9B,OAfAI,EAAAA,EAAAA,YAAU,KACgB,qBAAXN,QACPA,OAAOO,iBAAiB,SAAUT,EACtC,KAIJQ,EAAAA,EAAAA,YAAU,IAEC,KACHN,OAAOQ,oBAAoB,SAAUV,EAAS,GAGnD,KAGCW,EAAAA,EAAAA,KAAA,OAAKC,IAAKd,EAAOe,SACI,IAAhBlB,GAAoBgB,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SACnCE,IACEJ,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEC,UAAW,OAAQJ,UAC7BF,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACVF,EAAAA,EAAAA,KAACQ,EAAAA,EAAkB,CACfC,QAAShC,EACTI,YAAaA,EACbC,YAAaA,EACbH,UAAWA,EACXC,aAAcA,EACdF,SAAUA,UAML,IAGrC,CAMAH,EAAmBmC,aAAe,CAC9B3B,wBAAyB,I,uJClCd,SAAS4B,EAAenC,GAsBnC,IAtBoC,SACtCoC,EAAQ,YACRC,EAAW,iBACXC,EAAgB,gBAChBC,EAAe,iBACfC,EAAgB,YAChBC,EAAW,cACXC,EAAa,qBACbC,EAAoB,qBACpBC,EAAoB,yBACpBC,EAAwB,mBACxBC,EAAkB,qBAClBC,EAAoB,wBACpBC,EAAuB,qBACvBC,EAAoB,iBACpBC,EAAgB,yBAChBC,EAAwB,0BACxBC,EAAyB,sBACzBC,EAAqB,aACrBC,EAAY,6BACZC,EAA4B,sBAC5BC,GACDxD,EACC,MAAMyD,EAA8BA,CAACL,EAA2BM,KAC9D,IAAIC,EAAsB,GAM1B,OALAA,EAAsBP,EAA0BQ,MAC7CC,GACQA,EAAkBC,eAAiBJ,IAGvCC,EAAoBP,yBAAyB,GAG/CxB,IAAKmC,EAAAA,EAAAA,kBAqBNC,EAA2BC,IAE7BzC,EAAAA,EAAAA,KAAC0C,EAAAA,MAAK,CACJC,OAAK,EACLC,MAAO7B,EAAgB0B,EAASI,UAAUJ,EAASK,OACnDC,SAAWH,GAAUtB,EAAmBsB,EAAOH,GAC/CO,cAAc,IAKpB,OAGEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBhD,SAAA,EAC/B+C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKhD,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACvCF,EAAAA,EAAAA,KAAC0C,EAAAA,MAAK,CACJC,OAAK,EACLC,MAAO/B,EAAYsC,KACnBC,MAAOhD,EAAE,iBACTiD,UAAU,WACVC,SAA4B,KAAlB1C,EAASuC,KACnBJ,SAAWQ,GAASrC,EAAc,OAAQqC,GAC1CC,MAAOpD,EAAEY,EAAiBmC,MAC1BH,cAAc,OAGlBhD,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACvCF,EAAAA,EAAAA,KAAC0C,EAAAA,MAAK,CACJC,OAAK,EACLC,MAAO/B,EAAY4C,KACnBL,MAAOhD,EAAE,iBACTiD,UAAU,WACVN,SAAWQ,GAASrC,EAAc,OAAQqC,GAC1CC,MAAOpD,EAAEY,EAAiByC,MAC1BT,cAAc,OAGlBhD,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACvCF,EAAAA,EAAAA,KAAC0D,EAAAA,OAAM,CACLf,OAAK,EACLgB,YAAY,SACZC,UAAU,EACVR,MAAOhD,EAAE,qBACTwC,MAAO/B,EAAYgD,oBACnBC,QAAS7C,EAAY8C,oBACrBhB,SAAWQ,IACTrC,EAAc,sBAAuBqC,EAAK,EAE5CF,UAAU,WACVG,MAAOpD,EAAEY,EAAiB6C,qBAC1Bb,cAAc,EACdgB,QAAQ,EACRC,iBAAkB7D,EAAE,yBAGxBJ,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACvCF,EAAAA,EAAAA,KAAC0C,EAAAA,MAAK,CACJC,OAAK,EACLC,MAC8B,OAA5B/B,EAAYqD,YAAuB,GAAKrD,EAAYqD,YAEtDnB,SAAWQ,GAASrC,EAAc,cAAeqC,GACjDH,MAAOhD,EAAE,wBACToD,MAAOpD,EAAEY,EAAiBkD,aAC1BlB,cAAc,OAIlBhD,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACvCF,EAAAA,EAAAA,KAAC0C,EAAAA,MAAK,CACJC,OAAK,EACLC,MACgC,OAA9B/B,EAAYsD,cACR,GACAtD,EAAYsD,cAElBpB,SAAWQ,GAASrC,EAAc,gBAAiBqC,GACnDH,MAAOhD,EAAE,0BACToD,MAAOpD,EAAEY,EAAiBmD,eAC1BnB,cAAc,OAGlBhD,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACvCF,EAAAA,EAAAA,KAAC0C,EAAAA,MAAK,CACJC,OAAK,EACLC,MAA+B,OAAxB/B,EAAYuD,QAAmB,GAAKvD,EAAYuD,QACvDrB,SAAWQ,GAASrC,EAAc,UAAWqC,GAC7CH,MAAOhD,EAAE,oBACToD,MAAOpD,EAAEY,EAAiBoD,SAC1BpB,cAAc,OAIlBhD,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACvCF,EAAAA,EAAAA,KAAC0C,EAAAA,MAAK,CACJC,OAAK,EACLC,MAA8B,OAAvB/B,EAAYwD,OAAkB,GAAKxD,EAAYwD,OACtDjB,MAAOhD,EAAE,mBACT2C,SAAWQ,GAASrC,EAAc,SAAUqC,GAC5CC,MAAOpD,EAAEY,EAAiBqD,QAC1BrB,cAAc,OAGlBhD,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACvCF,EAAAA,EAAAA,KAAC0C,EAAAA,MAAK,CACJC,OAAK,EACLC,MAA6B,OAAtB/B,EAAYyD,MAAiB,GAAKzD,EAAYyD,MACrDlB,MAAOhD,EAAE,kBACT2C,SAAWQ,GAASrC,EAAc,QAASqC,GAC3CC,MAAOpD,EAAEY,EAAiBsD,OAC1BtB,cAAc,OAGlBhD,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACvCF,EAAAA,EAAAA,KAAC0C,EAAAA,MAAK,CACJC,OAAK,EACLC,MAA6B,OAAtB/B,EAAY0D,MAAiB,GAAK1D,EAAY0D,MACrDnB,MAAOhD,EAAE,kBACT2C,SAAWQ,GAASrC,EAAc,QAASqC,GAC3CC,MAAOpD,EAAEY,EAAiBuD,OAC1BvB,cAAc,OAIlBhD,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACvCF,EAAAA,EAAAA,KAAC0D,EAAAA,OAAM,CACLf,OAAK,EACLgB,YAAavD,EAAE,8BACfgD,MAAOhD,EAAE,eACTwC,MAAO/B,EAAY2D,OACnBV,QAAS,CACP,CAAEW,KAAMrE,EAAE,mBAAoBwC,OAAO,GACrC,CAAE6B,KAAMrE,EAAE,+BAAgCwC,OAAO,IAEnDG,SAAWQ,GAAS9B,EAAqB8B,QAG7CvD,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACvCF,EAAAA,EAAAA,KAAC0C,EAAAA,MAAK,CACJC,OAAK,EACLC,MAA+B,OAAxB/B,EAAY6D,QAAmB,GAAK7D,EAAY6D,QACvDtB,MAAOhD,EAAE,gBACT2C,SAAWQ,GAASrC,EAAc,UAAWqC,GAC7CF,UAAWxC,EAAY2D,SAAW5D,EAAS4D,OAAS,WAAa,GACjEhB,MAAOpD,EAAEY,EAAiB0D,SAC1B1B,cAAc,MAGjBtB,GACC1B,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACvCF,EAAAA,EAAAA,KAAC2E,EAAAA,EAAmB,CAClBC,aAAc3D,EAAY4D,cAC1BC,iBAAkBjE,EAAYkE,cAC9BvB,MAAOpD,EAAEY,EAAiB+D,eAC1B7D,cAAeA,EACf8D,cAAe7D,MAInB,MAGHQ,EAAyBsD,OAAS,EAC/BtD,EAAyBuD,KAAKC,IAC5BnF,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACZF,EAAAA,EAAAA,KAACoF,EAAAA,UAAS,CAAAlF,UACRF,EAAAA,EAAAA,KAACoF,EAAAA,UAAUC,QAAO,CAChBnC,UAAU,qBACVoC,MACE5D,EACIyD,EAAO7C,aAAe,MAAQlC,EAAE,qBAChCA,EAAE,qBACPF,UAEDF,EAAAA,EAAAA,KAACuF,EAAAA,EAAgB,CACfC,sBAAuBL,EAAOM,sBAC9BnE,mBAAoBO,EACpBD,0BAA2BK,EACzBL,EACAuD,EAAO7C,wBAOnB,KACHR,GAAgBhB,GAAoBA,EAAiBmE,OAAS,GAC7DjF,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACZF,EAAAA,EAAAA,KAACoF,EAAAA,UAAS,CAAAlF,UACRF,EAAAA,EAAAA,KAACoF,EAAAA,UAAUC,QAAO,CAChBnC,UAAU,qBACVoC,MAAOlF,EAAE,0BAA0BF,SAElCY,EAAiBoE,KAAKQ,IAErB1F,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACvCF,EAAAA,EAAAA,KAAC0C,EAAAA,MAAK,CACJC,OAAK,EACLS,MAAOhD,EAAEsF,EAAaC,YACtB/C,MACyB,OAAvB8C,EAAaE,MAAiB,GAAKF,EAAaE,MAElDvC,UAAW,WACXN,SAAWH,GACTZ,EAAsB0D,EAAc9C,GAEtCY,MAAOpD,EAAE2B,EAA6B2D,EAAaG,KACnD7C,cAAc,cAOxB,MACJC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKhD,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,iDAAgDhD,SAC5DE,EAAE,6BAELJ,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,oCAAmChD,UAChD+C,EAAAA,EAAAA,MAAA,OACE6C,QAASvE,EACTlB,MAAO,CACL0F,QAAS,OACTC,OAAQ,UACRC,eAAgB,iBAChB/F,SAAA,EAEFF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAE6F,MAAO,OAAQhG,UAC3BF,EAAAA,EAAAA,KAACmG,EAAAA,KAAI,CAACC,KAAK,SAASC,KAAK,aAAaC,KAAK,cAE7CtG,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAE6F,MAAO,OAAQhG,UAC3BF,EAAAA,EAAAA,KAAA,QAAAE,SAAOE,EAAE,qCAIfJ,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,mCAAkChD,UAC/C+C,EAAAA,EAAAA,MAAA,OACE6C,QAAStE,EACTnB,MAAO,CACL0F,QAAS,OACTC,OAAQ,UACRC,eAAgB,iBAChB/F,SAAA,EAEFF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAE6F,MAAO,OAAQhG,UAC3BF,EAAAA,EAAAA,KAACmG,EAAAA,KAAI,CAACC,KAAK,SAASC,KAAK,SAASC,KAAK,cAEzCtG,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAE6F,MAAO,OAAQhG,UAC3BF,EAAAA,EAAAA,KAAA,QAAAE,SAAOE,EAAE,+BAKjBJ,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,kCAAiChD,UAC9CF,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,sBAAqBhD,UAClC+C,EAAAA,EAAAA,MAACsD,EAAAA,GAAS,CACRhD,KAAMxC,EACNyF,cAAc,WACdC,UAAWrF,EACXsF,kBAAmBrF,EACnBsF,YAAY,EACZC,aAAa,QAAO1G,SAAA,EAEpBF,EAAAA,EAAAA,KAACuG,EAAAA,GAAUM,OAAM,CACf3D,UAAU,4BAEVJ,MAAM,qBACNgE,OAAQ1G,EAAE,uBACV2G,UAAU,EAEVC,cAAc,OACdC,mBAAqBC,IACnBC,OAxSoB1E,EAwSKyE,EAxSKE,EAwSKnG,EAAYoG,iBApSzDrH,EAAAA,EAAAA,KAAC0D,EAAAA,OAAM,CACLR,UAAU,kBACVS,YAAY,SACZf,MAAO7B,EAAgB0B,EAASI,UAAUJ,EAASK,OACnDH,OAAK,EACLmB,QAASsD,EACTrE,SAAWH,GAAUtB,EAAmBsB,EAAOH,GAC/CY,UAAU,WACVL,cAAc,EACdgB,QAAQ,EACRC,iBAAkB7D,EAAE,sBAdO+G,IAAC1E,EAAU2E,CAyS/B,GARG,uBAUNpH,EAAAA,EAAAA,KAACuG,EAAAA,GAAUM,OAAM,CACf3D,UAAU,4BAEVJ,MAAM,gBACNgE,OAAQ1G,EAAE,sBACV2G,UAAU,EAEVC,cAAc,OACdC,mBAAoBzE,GANhB,kBAQNxC,EAAAA,EAAAA,KAACuG,EAAAA,GAAUM,OAAM,CACf3D,UAAU,4BAEVJ,MAAM,QACNgE,OAAQ1G,EAAE,cACV2G,UAAU,EAEVC,cAAc,OACdC,mBAAoBzE,GANhB,UAQNxC,EAAAA,EAAAA,KAACuG,EAAAA,GAAUM,OAAM,CACf3D,UAAU,4BAEVJ,MAAM,SACNgE,OAAQ1G,EAAE,qBACV2G,UAAU,EAEVC,cAAc,OACdC,mBAAoBzE,GANhB,WAQNxC,EAAAA,EAAAA,KAACuG,EAAAA,GAAUM,OAAM,CACf3D,UAAU,4BAEVJ,MAAM,QACNgE,OAAQ1G,EAAE,cACV2G,UAAU,EAEVC,cAAc,OACdC,mBAAoBzE,GANhB,kBAelB,CArYA7B,EAAgBD,aAAe,CAC7BO,YAAa,CACX8C,oBAAqB,GACrBc,cAAe,IAEjBnD,kBAAkB,EAClBI,cAAc,G,+MCrBhB,MAAMwF,UAAiCC,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KAC/CC,MAAQ,CACN9G,SAAU,CAAC,EACXC,YAAa,CAAC,EACdE,gBAAiB,GACjBC,iBAAkB2G,EAAAA,GAChBC,EAAAA,IAEFC,iBAAiB,EACjBC,aAAa,EACb1G,qBAAsB,GACtBiG,gBAAiB,GACjB5B,sBAAuB,GACvB9D,yBAA0B,GAC1BC,0BAA2B,GAC3BE,cAAc,EACdhB,iBAAkB,GAClB4E,aAAc,GACd3D,6BAA8B,CAAC,EAC/BgG,gBAAiB,GACjBC,aAAc,CAAC,EACfC,0BAA0B,GAE1B,KACFC,aAAe,CAACC,EAAc5E,KAC5B,IACE,MAAM1C,EAAcuH,IAAAA,UAAiBC,KAAKX,MAAM7G,aAGhD,GAFAA,EAAYsH,GAAgB5E,EAC5B8E,KAAKC,SAAS,CAAEzH,qBAC4B0H,IAAxCX,EAAAA,GAAsBO,GAA6B,CACrD,IAAInH,EAAmB,IAAKqH,KAAKX,MAAM1G,kBACvCA,EAAiBmH,GAAgBR,EAAAA,GAC/BC,EAAAA,GAAsBO,GACtB5E,GAGF8E,KAAKC,SAAS,CAAEtH,oBAClB,CACqB,kBAAjBmH,GACFE,KAAKG,wBAAwBjF,EAEjC,CAAE,MAAOC,GACPiF,QAAQC,IACN,yDACAlF,EAEJ,GACA,KA6LFlC,mBAAqB,CAACqH,EAAQlG,KAC5B,IAAI1B,EAAkBqH,IAAAA,UAAiBC,KAAKX,MAAM3G,iBAClDA,EAAgB0B,EAASI,UAAUJ,EAASK,OAAS6F,EACrDN,KAAKC,SAAS,CAAEvH,mBAAkB,EAClC,KAEFiB,sBAAwB,CAAC4G,EAAWhG,KAClC,IACEgG,EAAUhD,MAAQhD,EAClByF,KAAKC,SAAS,CACZM,UAAWA,IAEb,MAAM7G,EAA+BqG,IAAAA,UACnCC,KAAKX,MAAM3F,8BAGbA,EAA6B6G,EAAU/C,GAAGgD,YAAclB,EAAAA,GACtDmB,EAAAA,GAAqC,UACrClG,GAEFyF,KAAKC,SAAS,CAAEvG,gCAElB,CAAE,MAAOyB,GACPiF,QAAQC,IACN,+DACAlF,EAEJ,GACA,KAEFuF,0BAA4B,CAACH,EAAWhG,KACtC,IACE,IAAIoG,EAAoB,GACpBrH,EAA2ByG,IAAAA,UAC7BC,KAAKX,MAAM/F,0BAETsH,EAAwBtH,EAAyBuH,QAClDC,GAAiBA,EAAa7G,eAAiBsG,EAAUtG,eAG1D2G,EAAsBhE,OAAS,GAC/BmE,MAAMC,QAAQJ,EAAsB,GAAGxD,yBAEvCuD,EACEC,EAAsB,GAAGxD,sBAAsByD,QAC5CC,GAAiBA,EAAahG,OAASyF,EAAUzF,QAGpD6F,EAAkB/D,OAAS,IAC7B+D,EAAkB,GAAGM,aAAe1G,GAEtC,MAAMhB,EAA4BwG,IAAAA,UAChCC,KAAKX,MAAM9F,2BAGbA,EAA0B2H,SAASpH,IAC7BA,EAAoBG,eAAiBsG,EAAUtG,eACjDH,EAAoBP,0BAClBgH,EAAUzF,MACRwE,EAAAA,GAAgCiB,EAAWhG,GACjD,IAEFyF,KAAKC,SAAS,CAAE1G,4BAA0BD,4BAC5C,CAAE,MAAO6B,GACPiF,QAAQC,IACN,sEACAlF,EAEJ,GACA,KAuCFgG,0BAA4B,KAC1BnB,KAAKC,SAAS,CACZL,0BAA0B,GAC1B,EACF,KAEFwB,aAAe,KACb,IACEpB,KAAKC,SAAS,CAAER,aAAa,IAC7B,IAAIE,EAAeI,IAAAA,UAAiBC,KAAKX,MAAMM,cAC3C0B,EAAgB/B,EAAAA,GAClBU,KAAKX,MAAM/F,0BAEbqG,EAAeK,KAAKsB,qBAAqB3B,EAAc0B,GAC1B,KAA7BrB,KAAKX,MAAM9G,SAASuC,KAChBkF,KAAKuB,eAAe5B,GACpBK,KAAKwB,eAAe7B,EAC1B,CAAE,MAAOxE,GACPiF,QAAQC,IAAI,mDACd,GACA,KACFoB,WAAa,KACX,IACE,IAAIjJ,EAAcuH,IAAAA,UAAiBC,KAAKX,MAAM7G,aAC1CE,EAAkBqH,IAAAA,UAAiBC,KAAKX,MAAM3G,iBAClDA,EAAgBwI,SACbQ,GAAiBA,EAAYC,aAAenJ,EAAYsC,OAE3DtC,EAAYoJ,wBAA0BtC,EAAAA,GACpC5G,GAEF,IAAI2I,EAAgB/B,EAAAA,GAClBU,KAAKX,MAAM/F,0BAIb,GAAI0G,KAAK6B,aAAarJ,EAAa6I,GAAgB,CACjD7I,EAAcwH,KAAKsB,qBAAqB9I,EAAa6I,GACrD,IAAIzB,GACsD,IAAxDI,KAAK8B,MAAMC,YAAYC,aAAaC,gBAGlCtC,EAAeI,IAAAA,UAAiBvH,GACpCwH,KAAKC,SAAS,CAAEL,2BAA0BD,iBAAgB,MACvB,IAA7BC,GACFI,KAAKoB,cACP,GAEJ,MACEpB,KAAKC,SAAS,CAAER,aAAa,GAEjC,CAAE,MAAOtE,GACPiF,QAAQC,IACN,uDACAlF,EAEJ,GACA,KAkfF+G,YAAc,KACZ,IAAI1J,EAAcuH,IAAAA,UAAiBC,KAAKX,MAAM9G,UAC9C,IA0BE,GAzBAyH,KAAKC,SACH,CACEzH,YAAauH,IAAAA,UAAiBC,KAAKX,MAAM9G,UACzCI,iBAAkB,GAClBW,yBAA0B,GAC1BZ,gBAAiBqI,MAAMC,QACrBhB,KAAKX,MAAM9G,SAASqJ,yBAElBtC,EAAAA,GACAS,IAAAA,UAAiBC,KAAKX,MAAM9G,SAASqJ,0BAErC,GACJlI,6BAA8B,CAAC,EAC/BjB,iBAAkBsH,IAAAA,UAAiBC,KAAKX,MAAMhC,gBAEhD,KACM2C,KAAK8B,MAAMC,YAAYC,aAAaG,kBACtCnC,KAAKG,wBAAwB3H,EAAYkE,eACzCsD,KAAKoC,wCAELpC,KAAKqC,qBACLrC,KAAKoC,sCACP,IAG6B,KAA7BpC,KAAKX,MAAM9G,SAASuC,KAAa,CACnC,IAAI0B,EAAoBwD,KAAKX,MAAM7C,cACnCA,EAAgB,GAChBwD,KAAKC,SAAS,CAAEzD,iBAClB,CACF,CAAE,MAAOrB,GACPiF,QAAQC,IACN,wDACAlF,EAEJ,GACA,KAEFmH,yBAA4BC,IAC1B,IACE,IAAI/F,EAAgB,IAAIwD,KAAK8B,MAAMtF,eAC/BhE,EAAcuH,IAAAA,UAAiBC,KAAKX,MAAM7G,aAEjCA,EAAYkE,cAArB6F,EAAqC,IAAI/F,GACZ,GACjCwD,KAAKC,SAAS,CAAEzH,YAAaA,IAC7BwH,KAAKG,wBAAwB3H,EAAYkE,cAC3C,CAAE,MAAOvB,GACPiF,QAAQC,IACN,oEACAlF,EAEJ,GACA,KACFjC,qBAAuB,KACrB,IAAK8G,KAAK8B,MAAMC,YAAYC,aAAaQ,WACvC,IACE,GACExC,KAAKX,MAAM3G,gBAAgBkE,OAASoD,KAAKX,MAAML,gBAAgBpC,OAC/D,CACA,IAAIlE,EAAkBqH,IAAAA,UAAiBC,KAAKX,MAAM3G,iBAC9C+J,EAAiB,CACnBC,UAAW,KACXC,mBAAoB,KACpBhB,aAAc,KACd7F,cAAe,KACfI,MAAO,KACPF,OAAQ,KACRC,MAAO,KACP2G,gBAAiB5C,KAAK8B,MAAMe,qBAE9BJ,EAAeC,UAAYpD,EAAAA,GACzB5G,GAGwC,IAAtCsH,KAAKX,MAAML,gBAAgBpC,SAC7B6F,EAAeE,mBAAqB3C,KAAKX,MAAML,gBAAgB,GAAGzE,OAGpE7B,EAAgBoK,KAAKL,GAErBzC,KAAKC,SAAS,CACZvH,kBACAK,qBAAsB,IAE1B,CACF,CAAE,MAAOoC,GACPiF,QAAQC,IACN,iEACAlF,EAEJ,CACF,EACA,KACFhC,wBAA0B,KACxB,IAAK6G,KAAK8B,MAAMC,YAAYC,aAAaQ,WACvC,IACE,GACqC,MAAnCxC,KAAKX,MAAMtG,sBACXiH,KAAKX,MAAMtG,qBAAqB6D,OAAS,GAErCoD,KAAKX,MAAM3G,gBAAgBkE,OAAS,EAAG,CACzC,IAAIlE,EAAkBqH,IAAAA,UAAiBC,KAAKX,MAAM3G,iBAElDsH,KAAKX,MAAMtG,qBAAqBmI,SAAQ,CAAC6B,EAAKC,KAC5CtK,EAAkBA,EAAgBmI,QAChC,CAACa,EAAauB,IACLvB,EAAYgB,YAAcK,EAAIL,WAExC,IAGH1C,KAAKC,SAAS,CAAEvH,kBAAiBK,qBAAsB,IACzD,CAEJ,CAAE,MAAOoC,GACPiF,QAAQC,IACN,oEACAlF,EAEJ,CACF,EACA,KACF+H,iCAAoCC,IAClCnD,KAAKC,SAAS,CAAElH,qBAAsBoK,GAAe,EACrD,KA+BFC,yBAA4B7I,IAC1B,IACE,IAAI/B,EAAcuH,IAAAA,UAAiBC,KAAKX,MAAM7G,aAC9CA,EAAY2D,OAAS5B,EACjB/B,EAAY2D,SAAW6D,KAAKX,MAAM9G,SAAS4D,SAC7C3D,EAAY6D,QAAU,IACxB2D,KAAKC,SAAS,CAAEzH,eAClB,CAAE,MAAO2C,GACPiF,QAAQC,IAAIlF,EACd,EACA,CA1/BFkI,oBAAAA,CAAqBC,GAEnB,IAAIC,EAAU,CACZ,CACEC,IAAKC,EAAAA,GACLlJ,MAAO+I,IAGPP,EAAM,CACRW,gBAAiBJ,EACjBK,YAAaF,EAAAA,GACbA,SAAUF,GAEZK,IACEC,EAAAA,IACAvE,EAAAA,GACEyD,EACA/C,KAAK8B,MAAMgC,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAS/I,MACG,IAArBgJ,EAAOC,UACTnE,KAAKC,SAAS,CACZxG,aACEyK,EAAOlC,aAAaoC,mBAAqB,IAC1C,KACGpE,KAAKX,MAAM5F,cACbuG,KAAKqE,yBAAyB,KAGlCrE,KAAKC,SAAS,CACZxG,cAAc,IAEhB2G,QAAQC,IAAI,iCAAkC6D,EAAOI,WACvD,IAEDC,OAAOpJ,IACNiF,QAAQC,IACN,0CACAlF,EACAmI,EACD,GAGP,CAEAe,uBAAAA,GACE,IACE,IAAI7L,EAAcuH,IAAAA,UAAiBC,KAAKX,MAAM7G,aAC1CgM,EAAoB,CACtBC,gBAAiBzE,KAAK8B,MAAMe,oBAC5B6B,WAAYlM,EAAYsC,KACxB6J,WAAYC,EAAAA,GAAuBC,UAErC,IAAI9B,EAAM,CACRW,gBAAiB1D,KAAK8B,MAAMe,oBAC5Bc,YAAaF,EAAAA,GACbqB,OAAQN,GAEVZ,IACEC,EAAAA,IACAvE,EAAAA,GACEyD,EACA/C,KAAK8B,MAAMgC,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAS/I,MACG,IAArBgJ,EAAOC,UACTnE,KAAKC,SAAS,CAAExH,iBAAkByL,EAAOlC,aAAc3E,aAAc6G,EAAOlC,eAI5E5B,QAAQC,IAAI,oCAAqC6D,EAAOI,UAC1D,IAEDC,OAAOpJ,IACNiF,QAAQC,IACN,4CACAlF,EACD,GAEP,CAAE,MAAOA,GACPiF,QAAQC,IACN,4CACAlF,EAEJ,CAEF,CAEAgF,uBAAAA,CAAwB4E,GACtB,IACE,IAAIC,EAA0B,GAC9B,IAAI5H,EAAwB,GACxB9D,EAA2B,GAC/B8D,EAAwB2C,IAAAA,UACtBC,KAAKX,MAAMjC,uBAEb9D,EAA2ByG,IAAAA,UACzBC,KAAKX,MAAM/F,0BAEb,MAAMC,EAA4BwG,IAAAA,UAChCC,KAAKX,MAAM9F,2BAEb,IAAIf,EAAcuH,IAAAA,UAAiBC,KAAKX,MAAM7G,aAE9CuM,EAAkB7D,SAASrH,IACzB,IAAIoL,EAAY3L,EAAyBS,MAAMC,GACtCA,EAAkBC,eAAiBJ,SAG1BqG,IAAd+E,EACF7H,EAAsB7E,SAAS2I,SAAQ,SAAUgE,GAC/C,GAAIA,EAAkBjL,eAAiBJ,EAAU,CAC/C,IAAIsL,EAAiB3M,EAAY4M,WAAWrL,MACzCsL,GACQA,EAAkBpL,eAAiBJ,SAGvBqG,IAAnBiF,GACFD,EAAkB9H,sBAAsB8D,SAAQ,SAC9CgE,GAEA,IAAII,EAAiBH,EAAeI,oBAAoBxL,MACrDyL,GACQA,EAAEC,gBAAkBP,EAAkBpK,YAG1BoF,IAAnBoF,IACFJ,EAAkBjE,aAChBqE,EAAeI,eACrB,IAEFV,EAAwBlC,KAAKoC,EAC/B,CACF,IAEAF,EAAwBlC,KAAKmC,EAC/B,IAEF3L,EAA2B,GAC3BA,EAA2B0L,EAC3B1L,EAA2BgG,EAAAA,GACzBhG,GAEFC,EAA0B2H,SAASpH,SAIXoG,IAHF6E,EAAkBhL,MAAMgL,GACnCjL,EAAoBG,eAAiB8K,KAG5CY,OAAOC,KAAK9L,EAAoBP,2BAA2B2H,SACxDsC,GAAS1J,EAAoBP,0BAA0BiK,GAAO,IAEnE,IAGFxD,KAAKC,SAAS,CAAE3G,2BAA0BC,6BAC5C,CAAE,MAAO4B,GACPiF,QAAQC,IACN,oEACAlF,EAEJ,CACF,CAEAkH,kBAAAA,GACE,IACE,IAAIjF,EAAwB2C,IAAAA,UAC1BC,KAAKX,MAAMjC,uBAET2D,MAAMC,QAAQ5D,EAAsB7E,WAAa6E,EAAsB7E,SAASqE,OAAS,GAC3FoD,KAAKG,wBAAwB,CAC3B/C,EAAsB7E,SAAS,GAAG0B,cAIxC,CAAE,MAAOkB,GACPiF,QAAQC,IACN,+DACAlF,EAEJ,CACF,CAyEA0K,yBAAAA,CAA0BC,GACxB,IAIiC,KAA7B9F,KAAKX,MAAM9G,SAASuC,WACkBoF,IAAtC4F,EAAUC,YAAYC,aACtBhG,KAAK8B,MAAMgC,aAAaC,YAAc+B,EAAUhC,aAAaC,WAG7D/D,KAAKiG,YAAYH,EAAUC,YAE/B,CAAE,MAAO5K,GACPiF,QAAQC,IACN,sEACAlF,EAEJ,CACF,CAEAiH,mCAAAA,GACE,IACE,IAAIhF,EAAwB2C,IAAAA,UAC1BC,KAAKX,MAAMjC,uBAEb4C,KAAKC,SAAS,CACZ1G,0BAA2B+F,EAAAA,GACzBlC,EAAsB7E,WAG5B,CAAE,MAAO4C,GACPiF,QAAQC,IACN,8DACAlF,EAEJ,CACF,CA4DAmG,oBAAAA,CAAqB9I,EAAa6I,GAChC,IAIE,GAHAA,EAAgB/B,EAAAA,GAAuC+B,GACvD7I,EAAY4M,WAAa9F,EAAAA,GAA+B+B,GAEpDrB,KAAKX,MAAM5F,aAAc,CAC3B,IAAIhB,EAAmBsH,IAAAA,UAAiBC,KAAKX,MAAM5G,kBAEnD,GADAD,EAAY0N,cAAe,EACF,OAArBzN,QAAkDyH,IAArBzH,GAAkCA,EAAiBmE,OAAS,EAAG,CAC9F,IAAIuJ,EAAmB,CACrBzB,WAAYlM,EAAYsC,KACxB6J,WAAYC,EAAAA,GAAuBC,SACnCJ,gBAAiBzE,KAAK8B,MAAMe,oBAC5BuD,qBAAsB,IAGxB3N,EAAiByI,SAASX,IACxB4F,EAAiBC,qBAAqBtD,KAAKvC,EAAU,IAEvD/H,EAAY6N,aAAeF,CAC7B,CACF,MAEE3N,EAAY0N,cAAe,EAC3B1N,EAAY6N,aAAe,KAE7B,OAAO7N,CACT,CAAE,MAAO2C,GACPiF,QAAQC,IACN,iEACAlF,EAEJ,CACF,CAEA0G,YAAAA,CAAarJ,EAAa6I,GAExB,MAAM1I,EAAmB,IAAKqH,KAAKX,MAAM1G,kBACzCgN,OAAOC,KAAKrG,EAAAA,IAAuB2B,SAAQ,SAAUsC,QAC1BtD,IAArB1H,EAAYgL,KACd7K,EAAiB6K,GAAOlE,EAAAA,GACtBC,EAAAA,GAAsBiE,GACtBhL,EAAYgL,IAElB,IACIhL,EAAY2D,SAAW6D,KAAKX,MAAM9G,SAAS4D,SACjB,OAAxB3D,EAAY6D,SAA4C,KAAxB7D,EAAY6D,UAC9C1D,EAA0B,QAAI,mCAII,OAApCH,EAAYgD,qBAC+B,IAA3ChD,EAAYgD,oBAAoBoB,SAEhCjE,EAAsC,oBAAI,6BAE5C,IAAI2N,EAAe,CACjBC,YAAa,WACbC,QAAS,uBACTC,qBAAsB,IAQxB,GALoB,IACf,IAAIC,IACLlO,EAAYoJ,wBAAwB/E,KAAK8J,GAAMA,EAAEhE,uBAGnC/F,SAAWpE,EAAYoJ,wBAAwBhF,OAQ/D,OAPA0J,EAAaG,qBAAqB3D,KAAK,CACrC8D,UAAW,GACXC,UAAW,GACXC,WAAW,EACXC,aAAc,iCAEhB/G,KAAK8B,MAAMkF,QAAQhH,KAAKX,MAAM7G,YAAa,SAAU8N,IAC9C,EAGPvF,MAAMC,QAAQxI,EAAYoJ,0BAC1BpJ,EAAYoJ,wBAAwBhF,OAAS,EAE7CpE,EAAYoJ,wBAAwBV,SAASQ,IAC3CuF,EAAAA,GAAoC/F,SAASgG,IAC3C,IAAIC,EAAM,QAEYjH,IAAlBgH,EAAIE,YACND,EAAM7H,EAAAA,GACJ4H,EAAIE,UACJ1F,EAAYwF,EAAIzM,SAGR,KAAR0M,GACFb,EAAaG,qBAAqB3D,KAAK,CACrC8D,UAAW,CAAC,sBAAuBM,EAAIG,aACvCR,UAAW,CACTnF,EAAYiB,mBACZjB,EAAYwF,EAAIzM,QAElBqM,WAAW,EACXC,aAAcI,GAElB,GACA,IAGJb,EAAaG,qBAAqB3D,KAAK,CACrC8D,UAAW,GACXC,UAAW,GACXC,WAAW,EACXC,aAAc,gDAIlB,IAAIxN,EAA4BwG,IAAAA,UAC9BC,KAAKX,MAAM9F,2BAGb8H,EAAcH,SAASX,IACrBhH,EAA0B2H,SAASpH,IAC7BA,EAAoBG,eAAiBsG,EAAUtG,cACjDsG,EAAUnD,sBAAsB8D,SAASgE,IACvCpL,EAAoBP,0BAClB2L,EAAkBpK,MAChBwE,EAAAA,GACF4F,EACAA,EAAkBjE,aACnB,GAEL,GACA,IAEJjB,KAAKC,SAAS,CAAEtH,mBAAkBY,8BAClC,IAAI+N,GAAc,EAClB/N,EAA0B2H,SAASsE,IACjC,IAAI8B,EAOF,OAAOA,EANPA,EAAc3B,OAAO4B,OAAO/B,EAAEjM,2BAA2BiO,OACvD,SAAUjN,GACR,MAAiB,KAAVA,CACT,GAIJ,IAGF,IAAIb,EAA+BqG,IAAAA,UACjCC,KAAKX,MAAM3F,8BA0Bb,OAvBuBqG,IAAAA,UACrBC,KAAKX,MAAM5G,kBAIIyI,SAASuG,IACxB/N,EAA6B+N,EAAWjK,IAAM8B,EAAAA,GAC5CmB,EAAAA,GAAqC,UACrCgH,EAAWlK,MACZ,IAGHyC,KAAKC,SAAS,CAAEvG,iCAEZ4N,IACFA,EAAc3B,OAAO4B,OAAO7N,GAA8B8N,OAAM,SAAUjN,GACxE,MAAiB,KAAVA,CACT,KAEE+M,IACFA,EAAc3B,OAAO4B,OAAO5O,GAAkB6O,OAAM,SAAUjN,GAC5D,MAAiB,KAAVA,CACT,KACE+L,EAAaG,qBAAqB7J,OAAS,GAC7CoD,KAAK8B,MAAMkF,QAAQhH,KAAKX,MAAM7G,YAAa,SAAU8N,IAC9C,GAEFgB,CACT,CACA9F,cAAAA,CAAehJ,GACb,IAAI+K,EAAU,CACZ,CACEC,IAAKC,EAAAA,GACLlJ,MAAO/B,EAAYsC,OAInBiI,EAAM,CACRW,gBAAiB1D,KAAK8B,MAAMe,oBAC5Bc,YAAaF,EAAAA,GACbA,SAAUF,EACVuB,OAAQtM,GAGN8N,EAAe,CACjBC,YAAa,WACbC,QAAS,uBACTC,qBAAsB,CACpB,CACEG,UAAW,CAAC,iBACZC,UAAW,CAACrO,EAAYsC,MACxBgM,WAAW,EACXC,aAAc,MAIpBnD,IACEC,EAAAA,GACAvE,EAAAA,GACEyD,EACA/C,KAAK8B,MAAMgC,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAS/I,KACtBoL,EAAaC,YAAcrC,EAAOC,UAAY,UAAY,WAC1DmC,EAAaG,qBAAqB,GAAGK,UAAY5C,EAAOC,WAC/B,IAArBD,EAAOC,UACTnE,KAAKC,SACH,CACER,YAAaH,EAAAA,GACXU,KAAK8B,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAeC,OACfC,EAAAA,IAEFjI,0BAA0B,IAG5B,IAAMI,KAAKiG,YAAY,CAAED,YAAaxN,EAAYsC,UAGpDwL,EAAaG,qBAAqB,GAAGM,aACnC7C,EAAOI,UAAU,GACnBtE,KAAKC,SAAS,CACZR,YAAaH,EAAAA,GACXU,KAAK8B,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAeG,IACfD,EAAAA,IAEFjI,0BAA0B,IAG5BQ,QAAQC,IAAI,2BAA4B6D,EAAOI,YAGjDtE,KAAK8B,MAAMkF,QAAQxO,EAAa,MAAO8N,EAAa,IAErD/B,OAAOpJ,IACN6E,KAAKC,SAAS,CACZR,YAAaH,EAAAA,GACXU,KAAK8B,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAeG,IACfD,EAAAA,IAEFjI,0BAA0B,IAG5B0G,EAAaG,qBAAqB,GAAGM,aAAe5L,EACpD6E,KAAK8B,MAAMkF,QAAQxO,EAAa,MAAO8N,EAAa,GAE1D,CAEA/E,cAAAA,CAAe/I,GACb,IAAI+K,EAAU,CACZ,CACEC,IAAKC,EAAAA,GACLlJ,MAAO/B,EAAYsC,OAInBiI,EAAM,CACRW,gBAAiB1D,KAAK8B,MAAMe,oBAC5Bc,YAAaF,EAAAA,GACbA,SAAUF,EACVuB,OAAQtM,GAGN8N,EAAe,CACjBC,YAAa,WACbC,QAAS,uBACTC,qBAAsB,CACpB,CACEG,UAAW,CAAC,iBACZC,UAAW,CAACrO,EAAYsC,MACxBgM,WAAW,EACXC,aAAc,MAIpBnD,IACEC,EAAAA,IACAvE,EAAAA,GACEyD,EACA/C,KAAK8B,MAAMgC,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAS/I,KACtBoL,EAAaC,YAAcrC,EAAOC,UAAY,UAAY,WAC1DmC,EAAaG,qBAAqB,GAAGK,UAAY5C,EAAOC,WAC/B,IAArBD,EAAOC,UACTnE,KAAKC,SACH,CACER,YAAaH,EAAAA,GACXU,KAAK8B,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAeC,OACfC,EAAAA,IAEFjI,0BAA0B,IAG5B,IAAMI,KAAKiG,YAAY,CAAED,YAAaxN,EAAYsC,UAGpDwL,EAAaG,qBAAqB,GAAGM,aACnC7C,EAAOI,UAAU,GACnBtE,KAAKC,SAAS,CACZR,YAAaH,EAAAA,GACXU,KAAK8B,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAeG,IACfD,EAAAA,IAEFjI,0BAA0B,IAG5BQ,QAAQC,IAAI,2BAA4B6D,EAAOI,YAGjDtE,KAAK8B,MAAMkF,QAAQxO,EAAa,MAAO8N,EAAa,IAErD/B,OAAOpJ,IACN6E,KAAKC,SAAS,CACZR,YAAaH,EAAAA,GACXU,KAAK8B,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAeG,IACfD,EAAAA,IAEFjI,0BAA0B,IAG5B0G,EAAaG,qBAAqB,GAAGM,aAAe5L,EACpD6E,KAAK8B,MAAMkF,QAAQxO,EAAa,MAAO8N,EAAa,GAE1D,CAEAyB,iBAAAA,GACE,IACEzI,EAAAA,GAAqBU,KAAK8B,MAAMC,YAAYC,aAAaQ,YAEzDxC,KAAKgI,cAAchI,KAAK8B,MAAMiE,aAC9B/F,KAAKiI,sBAAsBjI,KAAK8B,MAAMe,oBACxC,CAAE,MAAO1H,GACPiF,QAAQC,IACN,8DACAlF,EAEJ,CACF,CAEA6M,aAAAA,CAAcE,GACZ,IACEtE,IACEC,EAAAA,IACAvE,EAAAA,GACE,CAAC6I,EAAAA,IACDnI,KAAK8B,MAAMgC,aAAaC,YAE1BC,MAAMC,IACN,IAAIC,EAASD,EAAS/I,MACG,IAArBgJ,EAAOC,UACTnE,KAAKC,SACH,CACE7C,sBAAuB2C,IAAAA,UAAiBmE,EAAOlC,cAC/CzI,0BAA2B+F,EAAAA,GACzB4E,EAAOlC,aAAazJ,YAGxB,IAAMyH,KAAKiG,YAAYiC,KAGzB9H,QAAQC,IAAI,0BACd,GAEJ,CAAE,MAAOlF,GACPiF,QAAQC,IAAI,6BAA8BlF,EAC5C,CACF,CAEA8K,WAAAA,CAAYiC,GASV,GAPAE,EAAAA,GAAcxF,gBAAkB5C,KAAK8B,MAAMe,oBAC3CuF,EAAAA,GAAc5M,oBAAsBwE,KAAK8B,MAAMC,YAAYC,aAAaxG,oBACxE4M,EAAAA,GAAc1L,cACwB,IAApCsD,KAAK8B,MAAMtF,cAAcI,OACrB,IAAIoD,KAAK8B,MAAMtF,eACf,QAE0B0D,IAA5BgI,EAAYlC,YAAhB,CA0BA,IAAIzC,EAAU,CACZ,CACEC,IAAKC,EAAAA,GACLlJ,MAAO2N,EAAYlC,cAGnBjD,EAAM,CACRW,gBAAiB1D,KAAK8B,MAAMe,oBAC5Bc,YAAaF,EAAAA,GACbA,SAAUF,GAEZK,IACEC,EAAAA,IACAvE,EAAAA,GACEyD,EACA/C,KAAK8B,MAAMgC,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAS/I,MAEG,IAArBgJ,EAAOC,UAETnE,KAAKC,SACH,CACET,iBAAiB,EACjBjH,SAAU2L,EAAOlC,aACjBxJ,YAAauH,IAAAA,UAAiBmE,EAAOlC,cACrCtJ,gBAAiBqI,MAAMC,QACrBkD,EAAOlC,aAAaJ,yBAElBtC,EAAAA,GACAS,IAAAA,UACEmE,EAAOlC,aAAaJ,0BAGtB,GACJnC,YAAaH,EAAAA,GACXU,KAAK8B,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAeC,OACfC,EAAAA,MAIJ,KACE7H,KAAKqI,WAAWrI,KAAK8B,MAAMe,oBAAoBqB,EAAOlC,aAAalH,MAC/DkF,KAAK8B,MAAMC,YAAYC,aAAakE,cACtClG,KAAKqD,qBAAqBrD,KAAK8B,MAAMe,qBAEnC7C,KAAK8B,MAAMC,YAAYC,aAAaG,iBACtCnC,KAAKG,wBAAwB+D,EAAOlC,aAAatF,eAEjDsD,KAAKqC,oBACP,KAIJrC,KAAKC,SAAS,CACZzH,YAAauH,IAAAA,UAAiBqI,EAAAA,IAC9B7P,SAAUwH,IAAAA,UAAiBqI,EAAAA,IAC3B1P,gBAAiB,GACjB8G,iBAAiB,IAChB,KACGQ,KAAK8B,MAAMC,YAAYC,aAAakE,cACtClG,KAAKqD,qBAAqBrD,KAAK8B,MAAMe,oBAAoB,IAE7DzC,QAAQC,IAAI,wBAAyB6D,EAAOI,WAC9C,IAEDC,OAAOpJ,IACNiF,QAAQC,IAAI,gCAAiClF,EAAO+M,EAAY,GAvEpE,MAvBElI,KAAKC,SACH,CACE1H,SAAUwH,IAAAA,UAAiBqI,EAAAA,IAC3B5P,YAAauH,IAAAA,UAAiBqI,EAAAA,IAC9B9O,yBAA0B,GAC1BkG,iBAAiB,EACjB9G,gBAAiB,GACjBgH,gBAAgB,GAEhBD,YAAaH,EAAAA,GACXU,KAAK8B,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAeG,IACfD,EAAAA,MAGJ,KACM7H,KAAK8B,MAAMC,YAAYC,aAAakE,cACtClG,KAAKqD,qBAAqBrD,KAAK8B,MAAMe,sBACsB,IAAzD7C,KAAK8B,MAAMC,YAAYC,aAAaG,kBACtCnC,KAAKqC,oBAAoB,GA6EnC,CAoIA4F,qBAAAA,CAAsBK,GACpB1E,IACEC,EAAAA,IACA,oBACAyE,EACA,uBAEAhJ,EAAAA,GAAwCU,KAAK8B,MAAMgC,aAAaC,YAE/DC,MAAMC,IACL,IAAIC,EAASD,EAAS/I,KAGtB,IAAyB,IAArBgJ,EAAOC,UACT,GAAIpD,MAAMC,QAAQkD,EAAOlC,cAAe,CACtC,IAAIhD,EAAkBM,EAAAA,GACpB4E,EAAOlC,cAEThC,KAAKC,SAAS,CAAEjB,mBAClB,MACEoB,QAAQC,IAAI,iDAEhB,IAEDkE,OAAOpJ,IACNiF,QAAQC,IAAI,2CAA4ClF,EAAM,GAEpE,CAcAkN,UAAAA,CAAWC,EAAYC,GAMrB,IAAgB,IALFjJ,EAAAA,GACZU,KAAK8B,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAea,KACfC,EAAAA,IAEoB,CAEpB,IAAIC,EAAqB,QACOxI,IAA5BF,KAAK8B,MAAM6G,mBACsCzI,IAA/CF,KAAK8B,MAAM6G,aAAaD,qBAC1BA,EAAqB1I,KAAK8B,MAAM6G,aAAaD,oBAGjD,IAAIE,EAAoB,CACtBC,SAAUC,EAAAA,GACVC,mBAAoBL,EACpBM,gBAAiB,CAAC,CAAExF,IAAK,kBAAmBjJ,MAAO+N,GAAe,CAAE9E,IAAK,eAAgBjJ,MAAOgO,KAElG3E,IACEC,EAAAA,IACAvE,EAAAA,GACEsJ,EACA5I,KAAK8B,MAAMgC,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAS/I,MACG,IAArBgJ,EAAOC,UACTnE,KAAKC,SAAS,CACZP,gBAAiBwE,EAAOlC,aAAaiH,kBAGvCjJ,KAAKC,SAAS,CAAEP,gBAAiB,KACjCU,QAAQC,IAAI,6BAA8B6D,EAAOI,WACnD,IAEDC,OAAOpJ,IACNiF,QAAQC,IAAI,wCAAyClF,EAAM,GAEjE,CACF,CACA+N,MAAAA,GACE,MAAMC,EAAgB,CACpB,CACEC,UAAW,yBACXC,WACE,IAAIC,KACFtJ,KAAKX,MAAM7G,YAAY+Q,iBACvBC,qBACF,IACA,IAAIF,KAAKtJ,KAAKX,MAAM7G,YAAY+Q,iBAAiBE,sBAErD,CACEL,UAAW,wBACXC,gBAC4CnJ,IAA1CF,KAAKX,MAAM7G,YAAYkR,gBACqB,OAA1C1J,KAAKX,MAAM7G,YAAYkR,eACrB,IAAIJ,KACJtJ,KAAKX,MAAM7G,YAAYkR,gBACvBF,qBACF,IACA,IAAIF,KACFtJ,KAAKX,MAAM7G,YAAYkR,gBACvBD,qBACA,IAER,CACEL,UAAW,yBACXC,WACE,IAAIC,KAAKtJ,KAAKX,MAAM7G,YAAYmR,aAAaH,qBAC7C,IACA,IAAIF,KAAKtJ,KAAKX,MAAM7G,YAAYmR,aAAaF,uBAGnD,OAAOzJ,KAAKX,MAAMG,iBAChB5E,EAAAA,EAAAA,MAAA,OAAA/C,SAAA,EACEF,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACZF,EAAAA,EAAAA,KAACiS,EAAAA,EAAe,CACdC,WAAY7J,KAAKX,MAAM9G,SAASuC,KAChCgP,cAAc,qBACdX,cAAeA,OAGnBxR,EAAAA,EAAAA,KAACzB,EAAAA,EAAkB,CAACE,QAAS4J,KAAKX,MAAMK,gBAAgB7H,SAAC,OACzDF,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACZF,EAAAA,EAAAA,KAACW,EAAe,CACdC,SAAUyH,KAAKX,MAAM9G,SACrBC,YAAawH,KAAKX,MAAM7G,YACxBE,gBAAiBsH,KAAKX,MAAM3G,gBAC5BD,iBAAkBuH,KAAKX,MAAM5G,iBAC7BE,iBAAkBqH,KAAKX,MAAM1G,iBAC7BC,YAAa,CACX8C,oBAAqB4D,EAAAA,GACnBU,KAAK8B,MAAMC,YAAYC,aAAaxG,qBAEtCgB,cAAewD,KAAK8B,MAAMtF,cAC1BwC,gBAAiBgB,KAAKX,MAAML,iBAE9BzF,0BAA2ByG,KAAKX,MAAM9F,0BACtCD,yBAA0B0G,KAAKX,MAAM/F,yBACrC8D,sBAAuB4C,KAAKX,MAAMjC,sBAClCrE,qBAAsBiH,KAAKX,MAAMtG,qBACjCC,yBAA0BgH,KAAKkD,iCAC/BrK,cAAemH,KAAKH,aACpB/G,qBAAsBkH,KAAKsC,yBAC3BpJ,qBAAsB8G,KAAK9G,qBAC3BC,wBAAyB6G,KAAK7G,wBAC9BF,mBAAoB+G,KAAK/G,mBACzBO,sBAAuBwG,KAAKU,0BAC5BtH,qBAAsB4G,KAAKoD,yBAC3B/J,iBACE2G,KAAK8B,MAAMC,YAAYC,aAAaG,iBAEtC1I,aAAcuG,KAAKX,MAAM5F,aACzBC,6BAA8BsG,KAAKX,MAAM3F,6BACzCC,sBAAuBqG,KAAKrG,2BAGhChC,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACZF,EAAAA,EAAAA,KAACoS,EAAAA,EAAoB,CACnBC,WAAYhK,KAAK8B,MAAMmI,OACvBxI,WAAYzB,KAAKyB,WACjBS,YAAalC,KAAKkC,YAClBzC,YAAaO,KAAKX,MAAMI,gBAG3BO,KAAKX,MAAMO,0BACVjI,EAAAA,EAAAA,KAACuS,EAAAA,EAAwB,CACvBC,SAAUnK,KAAK8B,MAAMC,YAAYC,aAAaoI,SAC9CC,aAC+B,KAA7BrK,KAAKX,MAAM9G,SAASuC,KAChB6M,EAAAA,EAAeG,IACfH,EAAAA,EAAeC,OAErB0C,cAAezC,EAAAA,GACf0C,gBAAiBvK,KAAKoB,aACtBoJ,YAAaxK,KAAKmB,4BAElB,SAGNxJ,EAAAA,EAAAA,KAAC8S,EAAAA,EAAW,CAACjE,QAAQ,WAEzB,EAGF,MAOA,GAAekE,EAAAA,EAAAA,KAPUrL,IAChB,CACL0C,YAAa1C,EAAMsL,eAAe5I,YAClC+B,aAAczE,EAAMsL,eAAeC,aAIvC,CAAwC3L,E,4FC7sCjC,SAAS3C,EAAmBnG,GAM/B,IANgC,aAClCoG,EAAY,iBACZE,EAAgB,gBAChBoO,EAAe,cACfhS,EAAa,cACb8D,GACDxG,EAGC,OADyB,OAArBsG,IAA2BA,EAAmB,KAEhD9E,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SAChBE,IACA6C,EAAAA,EAAAA,MAAA,OAAK5C,MAAO,CAAE0F,QAAS,OAAQE,eAAgB,iBAAkB/F,SAAA,EAC/DF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAE6F,MAAO,OAAQhG,UAC3BF,EAAAA,EAAAA,KAAC0D,EAAAA,OAAM,CACLf,OAAK,EACLgB,YAAavD,EAAE,iBACfgD,MAAOhD,EAAE,iBACTwC,MAAOkC,EACPlB,UAAU,EACVE,QAAS6D,EAAAA,GAAgC/C,GACzC7B,SAAWQ,GAASrC,EAAc,gBAAiBqC,GACnDC,MAAOpD,EAAE8S,GACT5P,SAAkC,IAAxBsB,EAAaK,OACvBjC,cAAc,OAGlBhD,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,eAAchD,UAC3BF,EAAAA,EAAAA,KAACmT,EAAAA,SAAQ,CACP/P,MAAOhD,EAAE,cACTwK,QACExB,MAAMC,QAAQvE,IACdA,EAAiBG,SAAWL,EAAaK,OAE3ClC,SAAW6H,GAAY5F,EAAc4F,WAOnD,CA9CAjG,EAAoBjE,aAAe,CACjCkE,aAAc,GACdE,iBAAkB,GAClBoO,gBAAiB,G,iFCMZ,SAASjB,EAAezT,GAAgD,IAA/C,WAAE0T,EAAU,cAAEC,EAAa,cAAEX,GAAehT,EAC1E,OACEwB,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SAChBE,IACAJ,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,kBAAiBhD,UAC9B+C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBhD,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,4BAA2BhD,UACxCF,EAAAA,EAAAA,KAAA,QAAMK,MAAO,CAAE+S,OAAQ,QAAUlQ,UAAU,cAAahD,SACtC,KAAfgS,QAAoC3J,IAAf2J,EAClB9R,EAAE+R,GACFD,MAGQ,KAAfA,QACc3J,IAAf2J,GACAV,EAAcvM,OAAS,GACrBjF,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,kBAAiBhD,UAC9BF,EAAAA,EAAAA,KAACqT,EAAAA,MAAK,CACJC,SACErQ,EAAAA,EAAAA,MAAA,OAAA/C,SAAA,CACGE,EAAEoR,EAAc,GAAGC,WAAa,IAAI,IACpC,IAAMD,EAAc,GAAGE,YACxB1R,EAAAA,EAAAA,KAACmG,EAAAA,KAAI,CACH9F,MAAO,CAAEkT,WAAY,QACrBnN,KAAK,SACLC,KAAK,aACLC,KAAK,aAIXkN,SAAS,cACTtT,UAEAF,EAAAA,EAAAA,KAACyT,EAAAA,KAAI,CAACvQ,UAAU,qBAAoBhD,SACjCsR,EAActM,KAAKwO,IAClBzQ,EAAAA,EAAAA,MAACwQ,EAAAA,KAAKpO,QAAO,CAEXnC,UAAU,gCAA+BhD,SAAA,CAExCE,EAAEsT,EAAQjC,WAAa,IAAI,IAAE,IAAMiC,EAAQhC,aAHxC,6BAUd,SAOd,CA3DAO,EAAgBvR,aAAe,CAC7BwR,WAAY,GACZC,cAAe,GACfX,cAAe,IA0DjB,S,gFCjEO,SAASY,EAAoB5T,GAKhC,IALiC,WACnC6T,EAAU,WACVvI,EAAU,YACVS,EAAW,YACXzC,GACDtJ,EACC,OACEwB,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SAChBE,IACA6C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBhD,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACvCF,EAAAA,EAAAA,KAAC2T,EAAAA,OAAM,CACLzQ,UAAU,aACV4C,QAASuM,EACTqB,QAAStT,EAAE,aAGfJ,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACvC+C,EAAAA,EAAAA,MAAA,OAAK5C,MAAO,CAAEuT,MAAO,SAAU1T,SAAA,EAC7BF,EAAAA,EAAAA,KAAC2T,EAAAA,OAAM,CACLD,QAAStT,EAAE,uBACX8C,UAAU,eACV4C,QAASyE,KAEXvK,EAAAA,EAAAA,KAAC2T,EAAAA,OAAM,CACLD,QAAStT,EAAE,QACXkD,UAAWwE,EACXhC,QAASgE,aAWzB,CAvCAsI,EAAqB1R,aAAe,CAAEoH,aAAa,E,sGCH5C,SAASvC,EAAgB/G,GAI5B,IAJ6B,sBAC7BgH,EAAqB,mBACrBlE,EAAkB,0BAClBM,GACHpD,EACG,MAAMqV,EAA4BjL,IAC9B,GAA+B,eAA3BA,EAAUU,aAEV,OADAwK,EAA6BlL,EAAU,IAAI+I,MACpC,IAAIA,KAEX,IAAIoC,EAAQnL,EAAUU,aAAa0K,MAAM,KACzC,OAAO,IAAIrC,KAAKoC,EAAM,GAAGA,EAAM,GAAG,EAAEA,EAAM,GAC9C,EAEED,EAA+BA,CAAClL,EAAWhG,KAC7C,IAAIqR,EAAU,IAAItC,KAAK/O,GACvBA,EAAQqR,EAAQC,cAAgB,KAAO,KAAOD,EAAQE,WAAa,IAAIC,OAAO,GAAK,KAAO,IAAMH,EAAQI,WAAWD,OAAO,GAC1H9S,EAAmBsH,EAAUhG,EAAM,EAEvC,OACI5C,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SACdE,IACEJ,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,MAAKhD,UAChBF,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,kCAAiChD,UAC5CF,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,MAAKhD,SAEZsF,EAAsBN,KAAK0D,GACvBA,EAAU0L,SAASC,gBAAkBtH,EAAAA,GAAmBuH,OAAOD,gBAAyC,IAAxB3L,EAAU6L,WACtFzU,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACrCF,EAAAA,EAAAA,KAAC0C,EAAAA,MAAK,CACFC,OAAK,EACLS,MAAOhD,EAAEwI,EAAU8L,aACnB9R,MAAkC,OAA3BgG,EAAUU,aAAwB,GAAKV,EAAUU,aACxDjG,WAAqC,IAA1BuF,EAAU+L,YAAuB,WAAa,KACzDrR,UAAmC,IAAzBsF,EAAUgM,WACpB7R,SAAWH,GAAUtB,EAAmBsH,EAAWhG,GACnDY,MAAOpD,EAAEwB,EAA0BgH,EAAUzF,OAC7CH,cAAc,MAEZ4F,EAAU0L,SAASC,gBAAkBtH,EAAAA,GAAmB4H,IAAIN,eAAiB3L,EAAU0L,SAASC,gBAAkBtH,EAAAA,GAAmB6H,KAAKP,gBAA0C,IAAxB3L,EAAU6L,UAezK7L,EAAU0L,SAASC,gBAAkBtH,EAAAA,GAAmB8H,MAAMR,eAAiB3L,EAAU0L,SAASC,gBAAkBtH,EAAAA,GAAmB+H,OAAOT,gBAA0C,IAAxB3L,EAAU6L,UAgBzK7L,EAAU0L,SAASC,gBAAkBtH,EAAAA,GAAmBgI,KAAKV,gBAAyC,IAAxB3L,EAAU6L,WACpFzU,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACrCF,EAAAA,EAAAA,KAACmT,EAAAA,SAAQ,CAACjQ,UAAU,sCAChBE,MAAOhD,EAAEwI,EAAU8L,aACnB9J,QAAoC,OAA3BhC,EAAUU,aAAwB,GAAyD,SAApDV,EAAUU,aAAaT,WAAW0L,cAClFjR,UAAmC,IAAzBsF,EAAUgM,WACpB7R,SAAWH,GAAUtB,EAAmBsH,EAAWhG,OAIzDgG,EAAU0L,SAASC,gBAAkBtH,EAAAA,GAAmBiI,SAASX,gBAAyC,IAAxB3L,EAAU6L,WAE1FzU,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACrCF,EAAAA,EAAAA,KAACmV,EAAAA,WAAU,CACPxS,OAAK,EACLC,MAAmC,OAA3BgG,EAAUU,cAAoD,KAA3BV,EAAUU,aAAuB,GACtEuK,EAAyBjL,GAE/BxF,MAAOhD,EAAEwI,EAAU8L,aACnBU,eAAeC,EAAAA,EAAAA,MACfC,iBAAiB,OACjBjS,WAAqC,IAA1BuF,EAAU+L,YAAuB,WAAa,KACzDrR,UAAmC,IAAzBsF,EAAUgM,WACpB7R,SAAWH,GACPkR,EAA6BlL,EAAWhG,GAE5C2S,aAAe3S,IACXkR,EAA6BlL,EAAWhG,EAAM,EAElDY,MAAOpD,EAAEwB,EAA0BgH,EAAUzF,OAC7CH,cAAc,MAEb,MA/CjBhD,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACrCF,EAAAA,EAAAA,KAAC0C,EAAAA,MAAK,CACFC,OAAK,EACLS,MAAOhD,EAAEwI,EAAU8L,aACnB9R,MAEgC,OAA3BgG,EAAUU,cAAoD,KAA3BV,EAAUU,aAAuB,GAAMV,EAAUU,aAAckM,iBAEvGnS,WAAqC,IAA1BuF,EAAU+L,YAAuB,WAAa,KACzDrR,UAAmC,IAAzBsF,EAAUgM,WACpB7R,SAAWH,GAAUtB,EAAmBsH,EAAWhG,GACnDY,MAAOpD,EAAEwB,EAA0BgH,EAAUzF,OAC7CH,cAAc,OA3B1BhD,EAAAA,EAAAA,KAAA,OAAKkD,UAAU,2BAA0BhD,UACrCF,EAAAA,EAAAA,KAAC0C,EAAAA,MAAK,CACFC,OAAK,EACLS,MAAOhD,EAAEwI,EAAU8L,aACnB9R,MAAkC,OAA3BgG,EAAUU,aAAwB,GAAKV,EAAUU,aAExDjG,WAAqC,IAA1BuF,EAAU+L,YAAuB,WAAa,KACzDrR,UAAmC,IAAzBsF,EAAUgM,WACpB7R,SAAWH,GAAUtB,EAAmBsH,EAAWhG,GACnDY,MAAOpD,EAAEwB,EAA0BgH,EAAUzF,OAC7CH,cAAc,eA6DlE,C,mjCCtHO,MAAMyS,EAAwB,SACxBC,EAAyB,iBACzBC,EAA6B,cAC7BC,EAA6B,cAC7BC,EAAyB,UACzBC,EAA6B,qBAC7BC,EAA0B,WAC1BC,EAA0B,WAC1BC,EAA6B,cAC7BC,EAAiC,kBACjCC,EAAsB,OACtBC,EAAwB,gBACxBC,EAAmC,4BACnC7F,EAA0B,WAC1B8F,EAAyB,UACzBC,EAAgC,iBAChCC,EAAgC,iBAChCC,EAAqB,MACrBC,EAA4B,aAC5BC,EAA4B,aAC5BC,EAAmC,oBACnCC,EAAuB,QACvBC,EAA0B,WAC1BC,EAAqC,sBACrCC,EAAgD,iCAChDC,EAAiC,kBACjCC,EAA4C,6BAC5CC,EAAiC,kBACjCC,EAAoC,qBACpCC,EAAgC,iBAChCC,EAAoC,kCACpCC,EAA2B,YAC3BC,EAA4B,aAC5BC,EAAqB,MACrBC,EAA6B,kBAE7BC,EAAgC,6BAEhCC,EAA0C,yBAC1CC,EAA0C,yBAC1CC,EAA2C,+BAI3CC,EAAkC,mBAClCC,EAAkC,mBAClCC,EAA0C,2BAC1CC,EAAmC,oBACnCC,EAA6C,8BAC7CC,EAA+C,+BAC/CC,EAAuC,+BACvCC,EAAsC,uBACtCC,EAAsC,uBACtCC,EAA4C,6BAC5CC,EAA+B,gBAC/BC,EAA8B,8BAC9BC,GAA6B,6BAC7BC,GAAqC,yBACrCC,GAA8C,+BAC9CC,GAAwC,yBAExCC,GAAmC,iCACnCC,GAAoC,2BACpCC,GAAoC,2BACpCC,GAA4B,aAG5BC,GAA0C,mBAC1CC,GAA0C,mBAC1CC,GAA2C,yBAC3CC,GAA0B,0BAC1BC,GAA2B,2BAC3BC,GAAyB,UACzBC,GAAsC,wBAEtCC,GAAuB,QACvBC,GAA2B,YAC3BC,GAA0B,WAC1BC,GAA8B,gBAC9BC,GAAmC,mCACnCC,GAAyB,wBACzBC,GAA6B,cAC7BC,GAAqB,MAErBC,GAAuB,sBACvBC,GAAyB,wBACzBC,GAAgC,iBAChCC,GAA4B,aAC5BC,GAAwB,kBACxBC,GAAuB,uBACvBC,GAAsB,sBAEtBC,GAAyB,yBACzBC,GAAwB,wBAExBC,GAAkC,mBAClCC,GAAsC,uBACtCC,GAA4C,6BAC5CC,GAA2C,4BAC3CC,GAA+B,gBAE/BC,GAAuC,wBAGvCC,GAAiD,kCACjDC,GAA8C,+BAC9CC,GAAiD,kCACjDC,GAAwD,yCACxDC,GAAkD,mCAClDC,GAAiD,kCACjDC,GAAgD,iCAChDC,GAA+C,gCAC/CC,GAAgD,iCAChDC,GAA6C,8BAC7CC,GAAgD,iCAChDC,GAAuD,wCACvDC,GAAiD,kCACjDC,GAAgD,iCAChDC,GAA+C,gCAC/CC,GAA8C,+BAE9CC,GAA2B,uBAE3BC,GAA6B,cAC7BC,GAA+B,gBAC/BC,GAA6B,cAI7BC,GAA+B,e,6GC9HrC,SAASC,EAAqBC,EAAYC,GAC/C,GAAIpT,MAAMC,QAAQkT,GAAa,CAIA,IAHTA,EAAWrT,QAC5BuT,GAAWA,EAAOhY,OAAS+X,IAEZvX,QAChBsX,EAAWG,QAAQ,CACjB9Z,MAAO,KACP6B,KAAM+X,GAEZ,CACA,OAAOD,CACT,CAEO,SAASlH,IACd,IAAIsH,EAAWpd,OAAOqd,UAAUC,cAAgBtd,OAAOqd,UAAUD,SAMjE,OALAG,IAAAA,OAAcH,GACGG,IAAAA,aAEOC,eAAe,IAGzC,CAGO,SAASC,EAAgCzZ,GAC9C,OACEN,EAAAA,EAAAA,MAAA,OAAA/C,SAAA,EAAKF,EAAAA,EAAAA,KAAA,QAAAE,SAAOqD,KAAYvD,EAAAA,EAAAA,KAAA,OAAKid,MAAM,wDAEvC,C","sources":["Components/Composite/Common/TMDetailsKPILayout.jsx","Components/UIBase/Details/SupplierDetails.jsx","Components/Composite/Details/SupplierDetailsComposite.jsx","Components/UIBase/Common/AssociatedTerminals.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nexport default function TMDetailsKPILayout({\r\n    KPIList,\r\n    pageName,\r\n    rowHeight,\r\n    widgetHeight,\r\n    isDraggable,\r\n    isResizable,\r\n    kpiDisplayTopBreakpoint\r\n}) {\r\n    const [KPIDisplays, setKPIDisplays] = useState(1);\r\n\r\n    const kpiDiv = React.useRef(null);\r\n\r\n    const hideKpis = () => {\r\n        let currentScrollPos = window.pageYOffset;\r\n        let KPIDisplay = KPIDisplays;\r\n\r\n        // hide kpis based on div position to top of the window \r\n        if (kpiDiv.current && kpiDiv.current.getBoundingClientRect().top < kpiDisplayTopBreakpoint) {\r\n            KPIDisplay = 0;\r\n        }\r\n        // show the kpis once at top of the screen\r\n        else if (currentScrollPos === 0) {\r\n            KPIDisplay = 1\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n        setKPIDisplays(KPIDisplay);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\") {\r\n            window.addEventListener(\"scroll\", hideKpis);\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // remove listener on unmount\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", hideKpis)\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={kpiDiv}>\r\n            {KPIDisplays === 1 ? <TranslationConsumer>\r\n                {(t) => (\r\n                    <div style={{ marginTop: \"6px\" }}>\r\n                        <ErrorBoundary>\r\n                            <KPIDashboardLayout\r\n                                kpiList={KPIList}\r\n                                isDraggable={isDraggable}\r\n                                isResizable={isResizable}\r\n                                rowHeight={rowHeight}\r\n                                widgetHeight={widgetHeight}\r\n                                pageName={pageName}\r\n                            ></KPIDashboardLayout>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n                )}\r\n            </TranslationConsumer> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nTMDetailsKPILayout.propTypes = {\r\n    kpiDisplayTopBreakpoint: PropTypes.number\r\n}\r\n\r\nTMDetailsKPILayout.defaultProps = {\r\n    kpiDisplayTopBreakpoint: 100\r\n}","import React from \"react\";\r\nimport { Accordion, Select, Icon, Input } from \"@scuf/common\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n//import * as Constants from \"./../../../JS/Constants\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\n\r\nSupplierDetails.propTypes = {\r\n  supplier: PropTypes.object.isRequired,\r\n  modSupplier: PropTypes.object.isRequired,\r\n  modAssociations: PropTypes.array.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    transportationTypes: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    customerOptions: PropTypes.array,\r\n  }).isRequired,\r\n\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  //compartmentColumns: PropTypes.array.isRequired,\r\n  handleDCHCellDataEdit: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  selectedAssociations: PropTypes.array.isRequired,\r\n  handleRowSelectionChange: PropTypes.func.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n  handleAddAssociation: PropTypes.func.isRequired,\r\n  handleDeleteAssociation: PropTypes.func.isRequired,\r\n  onActiveStatusChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  modDCHAttributes: PropTypes.array.isRequired,\r\n  isDCHEnabled: PropTypes.bool.isRequired,\r\n  dchAttributeValidationErrors: PropTypes.object.isRequired,\r\n};\r\n\r\nSupplierDetails.defaultProps = {\r\n  listOptions: {\r\n    transportationTypes: [],\r\n    terminalCodes: [],\r\n  },\r\n  isEnterpriseNode: false,\r\n  isDCHEnabled: false,\r\n};\r\n\r\nexport default function SupplierDetails({\r\n  supplier,\r\n  modSupplier,\r\n  modDCHAttributes,\r\n  modAssociations,\r\n  validationErrors,\r\n  listOptions,\r\n  onFieldChange,\r\n  onAllTerminalsChange,\r\n  selectedAssociations,\r\n  handleRowSelectionChange,\r\n  handleCellDataEdit,\r\n  handleAddAssociation,\r\n  handleDeleteAssociation,\r\n  onActiveStatusChange,\r\n  isEnterpriseNode,\r\n  modAttributeMetaDataList,\r\n  attributeValidationErrors,\r\n  onAttributeDataChange,\r\n  isDCHEnabled,\r\n  dchAttributeValidationErrors,\r\n  handleDCHCellDataEdit,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  const [t] = useTranslation();\r\n  const handleCustomEditDropDown = (cellData, dropDownoptions) => {\r\n    return (\r\n      // <TranslationConsumer>\r\n      //   {(t) => (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        placeholder=\"Select\"\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownoptions}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n      //   )}\r\n      // </TranslationConsumer>\r\n    );\r\n  };\r\n  const handleCustomEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    // <TranslationConsumer>\r\n    //   {(t) => (\r\n    <div className=\"detailsContainer\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modSupplier.Code}\r\n            label={t(\"Supplier_Code\")}\r\n            indicator=\"required\"\r\n            disabled={supplier.Code !== \"\"}\r\n            onChange={(data) => onFieldChange(\"Code\", data)}\r\n            error={t(validationErrors.Code)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modSupplier.Name}\r\n            label={t(\"Supplier_Name\")}\r\n            indicator=\"required\"\r\n            onChange={(data) => onFieldChange(\"Name\", data)}\r\n            error={t(validationErrors.Name)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder=\"Select\"\r\n            multiple={true}\r\n            label={t(\"Vehicle_Transport\")}\r\n            value={modSupplier.TransportationTypes}\r\n            options={listOptions.transportationTypes}\r\n            onChange={(data) => {\r\n              onFieldChange(\"TransportationTypes\", data);\r\n            }}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.TransportationTypes)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modSupplier.Description === null ? \"\" : modSupplier.Description\r\n            }\r\n            onChange={(data) => onFieldChange(\"Description\", data)}\r\n            label={t(\"Supplier_Description\")}\r\n            error={t(validationErrors.Description)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modSupplier.ContactPerson === null\r\n                ? \"\"\r\n                : modSupplier.ContactPerson\r\n            }\r\n            onChange={(data) => onFieldChange(\"ContactPerson\", data)}\r\n            label={t(\"Supplier_ContactPerson\")}\r\n            error={t(validationErrors.ContactPerson)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modSupplier.Address === null ? \"\" : modSupplier.Address}\r\n            onChange={(data) => onFieldChange(\"Address\", data)}\r\n            label={t(\"Supplier_Address\")}\r\n            error={t(validationErrors.Address)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modSupplier.Mobile === null ? \"\" : modSupplier.Mobile}\r\n            label={t(\"Supplier_Mobile\")}\r\n            onChange={(data) => onFieldChange(\"Mobile\", data)}\r\n            error={t(validationErrors.Mobile)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modSupplier.Phone === null ? \"\" : modSupplier.Phone}\r\n            label={t(\"Supplier_PhNum\")}\r\n            onChange={(data) => onFieldChange(\"Phone\", data)}\r\n            error={t(validationErrors.Phone)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modSupplier.Email === null ? \"\" : modSupplier.Email}\r\n            label={t(\"Supplier_Email\")}\r\n            onChange={(data) => onFieldChange(\"Email\", data)}\r\n            error={t(validationErrors.Email)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"FinishedProductInfo_Select\")}\r\n            label={t(\"Cust_Status\")}\r\n            value={modSupplier.Status}\r\n            options={[\r\n              { text: t(\"ViewShipment_Ok\"), value: true },\r\n              { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n            ]}\r\n            onChange={(data) => onActiveStatusChange(data)}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modSupplier.Remarks === null ? \"\" : modSupplier.Remarks}\r\n            label={t(\"Cust_Remarks\")}\r\n            onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n            indicator={modSupplier.Status !== supplier.Status ? \"required\" : \"\"}\r\n            error={t(validationErrors.Remarks)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        {isEnterpriseNode ? (\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <AssociatedTerminals\r\n              terminalList={listOptions.terminalCodes}\r\n              selectedTerminal={modSupplier.TerminalCodes}\r\n              error={t(validationErrors.TerminalCodes)}\r\n              onFieldChange={onFieldChange}\r\n              onCheckChange={onAllTerminalsChange}\r\n            ></AssociatedTerminals>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      {modAttributeMetaDataList.length > 0\r\n        ? modAttributeMetaDataList.map((attire) => (\r\n            <ErrorBoundary>\r\n              <Accordion>\r\n                <Accordion.Content\r\n                  className=\"attributeAccordian\"\r\n                  title={\r\n                    isEnterpriseNode\r\n                      ? attire.TerminalCode + \" - \" + t(\"Attributes_Header\")\r\n                      : t(\"Attributes_Header\")\r\n                  }\r\n                >\r\n                  <AttributeDetails\r\n                    selectedAttributeList={attire.attributeMetaDataList}\r\n                    handleCellDataEdit={onAttributeDataChange}\r\n                    attributeValidationErrors={handleValidationErrorFilter(\r\n                      attributeValidationErrors,\r\n                      attire.TerminalCode\r\n                    )}\r\n                  ></AttributeDetails>\r\n                </Accordion.Content>\r\n              </Accordion>\r\n            </ErrorBoundary>\r\n          ))\r\n        : null}\r\n      {isDCHEnabled && modDCHAttributes && modDCHAttributes.length > 0 ? (\r\n        <ErrorBoundary>\r\n          <Accordion>\r\n            <Accordion.Content\r\n              className=\"attributeAccordian\"\r\n              title={t(\"External_System_Fields\")}\r\n            >\r\n              {modDCHAttributes.map((dchAttribute) => (\r\n                //console.log(\"dchAttributeValidationErrors[dchAttribute.EntityName]\", dchAttribute.ID.toString()),\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                  <Input\r\n                    fluid\r\n                    label={t(dchAttribute.EntityName)}\r\n                    value={\r\n                      dchAttribute.Value === null ? \"\" : dchAttribute.Value\r\n                    }\r\n                    indicator={\"required\"}\r\n                    onChange={(value) =>\r\n                      handleDCHCellDataEdit(dchAttribute, value)\r\n                    }\r\n                    error={t(dchAttributeValidationErrors[dchAttribute.ID])}\r\n                    reserveSpace={false}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </Accordion.Content>\r\n          </Accordion>\r\n        </ErrorBoundary>\r\n      ) : null}\r\n      <div className=\"row\">\r\n        <div className=\"col-10 col-sm-6 col-md-6 col-lg-10 headerLabel\">\r\n          {t(\"Supplier_AssociatedOTs\")}\r\n        </div>\r\n        <div className=\"col-1  col-sm-3 col-md-3 col-lg-1\">\r\n          <div\r\n            onClick={handleAddAssociation}\r\n            style={{\r\n              display: \"flex\",\r\n              cursor: \"pointer\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <div style={{ width: \"30%\" }}>\r\n              <Icon root=\"common\" name=\"badge-plus\" size=\"medium\" />\r\n            </div>\r\n            <div style={{ width: \"65%\" }}>\r\n              <span>{t(\"FinishedProductInfo_Add\")}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-1 col-sm-3 col-md-3 col-lg-1\">\r\n          <div\r\n            onClick={handleDeleteAssociation}\r\n            style={{\r\n              display: \"flex\",\r\n              cursor: \"pointer\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <div style={{ width: \"30%\" }}>\r\n              <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n            </div>\r\n            <div style={{ width: \"65%\" }}>\r\n              <span>{t(\"DestAdd_Delete\")}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row marginRightZero tableScroll\">\r\n        <div className=\"col-12 detailsTable\">\r\n          <DataTable\r\n            data={modAssociations}\r\n            selectionMode=\"multiple\"\r\n            selection={selectedAssociations}\r\n            onSelectionChange={handleRowSelectionChange}\r\n            scrollable={true}\r\n            scrollHeight=\"320px\"\r\n          >\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"OriginTerminalCode\"\r\n              field=\"OriginTerminalCode\"\r\n              header={t(\"OriginTerminal_Code\")}\r\n              editable={true}\r\n              //rowHeader={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={(celldata) =>\r\n                handleCustomEditDropDown(celldata, listOptions.customerOptions)\r\n              }\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"ContactPerson\"\r\n              field=\"ContactPerson\"\r\n              header={t(\"Cust_ContactPerson\")}\r\n              editable={true}\r\n              // rowHeader={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleCustomEditTextBox}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"Email\"\r\n              field=\"Email\"\r\n              header={t(\"Cust_Email\")}\r\n              editable={true}\r\n              // rowHeader={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleCustomEditTextBox}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"Mobile\"\r\n              field=\"Mobile\"\r\n              header={t(\"DriverInfo_Mobile\")}\r\n              editable={true}\r\n              // rowHeader={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleCustomEditTextBox}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"Phone\"\r\n              field=\"Phone\"\r\n              header={t(\"Dest_PhNum\")}\r\n              editable={true}\r\n              // rowHeader={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleCustomEditTextBox}\r\n            ></DataTable.Column>\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    //   )}\r\n    // </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport SupplierDetails from \"../../UIBase/Details/SupplierDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { supplierValidationDef, dchAttributeValidationDef } from \"../../../JS/ValidationDef\";\r\nimport lodash from \"lodash\";\r\nimport { functionGroups, fnSupplier,fnKPIInformation } from \"../../../JS/FunctionGroups\";\r\nimport { emptySupplier } from \"../../../JS/DefaultEntities\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport PropTypes from \"prop-types\";\r\nimport { supplierOriginTerminalValidationDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { supplierAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nimport { kpiSupplierDetail } from \"../../../JS/KPIPageName\";\r\nclass SupplierDetailsComposite extends Component {\r\n  state = {\r\n    supplier: {},\r\n    modSupplier: {},\r\n    modAssociations: [],\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      supplierValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    selectedAssociations: [],\r\n    customerOptions: [],\r\n    attributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    isDCHEnabled: false,\r\n    modDCHAttributes: [],\r\n    dchAttribute: [],\r\n    dchAttributeValidationErrors: {},\r\n    supplierKPIList: [],\r\n    tempSupplier: {},\r\n    showAuthenticationLayout: false,\r\n\r\n  };\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modSupplier = lodash.cloneDeep(this.state.modSupplier);\r\n      modSupplier[propertyName] = data;\r\n      this.setState({ modSupplier });\r\n      if (supplierValidationDef[propertyName] !== undefined) {\r\n        var validationErrors = { ...this.state.validationErrors };\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          supplierValidationDef[propertyName],\r\n          data\r\n        );\r\n\r\n        this.setState({ validationErrors });\r\n      }\r\n      if (propertyName === \"TerminalCodes\") {\r\n        this.terminalSelectionChange(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"SupplierDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n  getShareholderDetail(shareHolder) {\r\n    //console.log(\"DCH\", this.props.userDetails.EntityResult.IsDCHEnabled);\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shareHolder,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shareHolder,\r\n      keyDataCode: KeyCodes.shareholderCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetShareholder,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            isDCHEnabled:\r\n              result.EntityResult.ExternalSystemCode > 1 ? true : false,\r\n          }, () => {\r\n            if (this.state.isDCHEnabled)\r\n              this.GetDCHAttributeInfoList()\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isDCHEnabled: false,\r\n          });\r\n          console.log(\"Error in getShareholderDetail:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error while getting Shareholder detail:\",\r\n          error,\r\n          shareHolder\r\n        );\r\n      });\r\n    //console.log(\"Shareholder state : \", this.state.isValidShareholderSysExtCode)\r\n  }\r\n\r\n  GetDCHAttributeInfoList() {\r\n    try {\r\n      let modSupplier = lodash.cloneDeep(this.state.modSupplier);\r\n      let dcAttributeConfig = {\r\n        Shareholdercode: this.props.selectedShareholder,\r\n        EntityCode: modSupplier.Code,\r\n        EntityType: Constants.ExtendEntity.SUPPLIER\r\n      }\r\n      var obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.shareholderCode,\r\n        Entity: dcAttributeConfig\r\n      };\r\n      axios(\r\n        RestAPIs.GetDCHAttributeInfoList,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ modDCHAttributes: result.EntityResult, dchAttribute: result.EntityResult })\r\n\r\n          } else {\r\n\r\n            console.log(\"Error in GetDCHAttributeInfoList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Error while getting DCHAttributeInfoList:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"Error while getting DCHAttributeInfoList:\",\r\n        error\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modAttributeMetaDataList = [];\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n      var modSupplier = lodash.cloneDeep(this.state.modSupplier);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        });\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.supplier.forEach(function (attributeMetaData) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue = modSupplier.Attributes.find(\r\n                (supplierAttribute) => {\r\n                  return supplierAttribute.TerminalCode === terminal;\r\n                }\r\n              );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modAttributeMetaDataList = [];\r\n      modAttributeMetaDataList = attributesTerminalsList;\r\n      modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modAttributeMetaDataList\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n\r\n      this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"SupplierDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (Array.isArray(attributeMetaDataList.supplier) && attributeMetaDataList.supplier.length > 0) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.supplier[0].TerminalCode,\r\n        ]);\r\n      }\r\n     \r\n    } catch (error) {\r\n      console.log(\r\n        \"SupplierDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n    modAssociations[cellData.rowIndex][cellData.field] = newVal;\r\n    this.setState({ modAssociations });\r\n  };\r\n\r\n  handleDCHCellDataEdit = (attribute, value) => {\r\n    try {\r\n      attribute.Value = value;\r\n      this.setState({\r\n        attribute: attribute,\r\n      });\r\n      const dchAttributeValidationErrors = lodash.cloneDeep(\r\n        this.state.dchAttributeValidationErrors\r\n      );\r\n\r\n      dchAttributeValidationErrors[attribute.ID.toString()] = Utilities.validateField(\r\n        dchAttributeValidationDef[\"attribute\"],\r\n        value\r\n      );\r\n      this.setState({ dchAttributeValidationErrors });\r\n\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerDetailsComposite:Error occured on handleCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[\r\n            attribute.Code\r\n          ] = Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors,modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"SupplierDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      //console.log(nextProps);\r\n\r\n      if (\r\n        this.state.supplier.Code !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        //console.log(nextProps);\r\n        this.getSupplier(nextProps.selectedRow);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"SupplierDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors: Utilities.getAttributeInitialValidationErrors(\r\n          attributeMetaDataList.supplier\r\n        ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  saveSupplier = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempSupplier = lodash.cloneDeep(this.state.tempSupplier);\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      tempSupplier = this.fillAttributeDetails(tempSupplier, attributeList);\r\n      this.state.supplier.Code === \"\"\r\n        ? this.createSupplier(tempSupplier)\r\n        : this.updateSupplier(tempSupplier);\r\n    } catch (error) {\r\n      console.log(\"SupplierDetailsComposite : Error in saveSupplier\");\r\n    }\r\n  };\r\n  handleSave = () => {\r\n    try {\r\n      let modSupplier = lodash.cloneDeep(this.state.modSupplier);\r\n      let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n      modAssociations.forEach(\r\n        (association) => (association.SupplierCode = modSupplier.Code)\r\n      );\r\n      modSupplier.SupplierOriginTerminals = Utilities.removeSeqNumberFromListObject(\r\n        modAssociations\r\n      );\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      // this.setState({ saveEnabled: false });\r\n\r\n      if (this.validateSave(modSupplier, attributeList)) {\r\n        modSupplier = this.fillAttributeDetails(modSupplier, attributeList);\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempSupplier = lodash.cloneDeep(modSupplier);\r\n        this.setState({ showAuthenticationLayout, tempSupplier }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveSupplier();\r\n          }\r\n        })\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"SupplierDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  fillAttributeDetails(modSupplier, attributeList) {\r\n    try {\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modSupplier.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n\r\n      if (this.state.isDCHEnabled) {\r\n        let modDCHAttributes = lodash.cloneDeep(this.state.modDCHAttributes)\r\n        modSupplier.IsDCHEnabled = true;\r\n        if (modDCHAttributes !== null && modDCHAttributes !== undefined && modDCHAttributes.length > 0) {\r\n          let dchAttributeInfo = {\r\n            EntityCode: modSupplier.Code,\r\n            EntityType: Constants.ExtendEntity.SUPPLIER,\r\n            Shareholdercode: this.props.selectedShareholder,\r\n            TabAttributeDataList: []\r\n          }\r\n\r\n          modDCHAttributes.forEach((attribute) => {\r\n            dchAttributeInfo.TabAttributeDataList.push(attribute)\r\n          })\r\n          modSupplier.DCHAttribute = dchAttributeInfo;\r\n        }\r\n      }\r\n      else {\r\n        modSupplier.IsDCHEnabled = false;\r\n        modSupplier.DCHAttribute = null;\r\n      }\r\n      return modSupplier;\r\n    } catch (error) {\r\n      console.log(\r\n        \"SupplierDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  validateSave(modSupplier, attributeList) {\r\n    // const { modTrailer } = this.state;\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(supplierValidationDef).forEach(function (key) {\r\n      if (modSupplier[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          supplierValidationDef[key],\r\n          modSupplier[key]\r\n        );\r\n    });\r\n    if (modSupplier.Status !== this.state.supplier.Status) {\r\n      if (modSupplier.Remarks === null || modSupplier.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"OriginTerminal_RemarksRequired\";\r\n      }\r\n    }\r\n    if (\r\n      modSupplier.TransportationTypes === null ||\r\n      modSupplier.TransportationTypes.length === 0\r\n    )\r\n      validationErrors[\"TransportationTypes\"] = \"Vehicle_MandatoryTrasType\";\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"Supplier_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    let uniqueRecords = [\r\n      ...new Set(\r\n        modSupplier.SupplierOriginTerminals.map((a) => a.OriginTerminalCode)\r\n      ),\r\n    ];\r\n    if (uniqueRecords.length !== modSupplier.SupplierOriginTerminals.length) {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [],\r\n        keyValues: [],\r\n        isSuccess: false,\r\n        errorMessage: \"Duplicate_Associated_Origins\",\r\n      });\r\n      this.props.onSaved(this.state.modSupplier, \"update\", notification);\r\n      return false;\r\n    }\r\n    if (\r\n      Array.isArray(modSupplier.SupplierOriginTerminals) &&\r\n      modSupplier.SupplierOriginTerminals.length > 0\r\n    ) {\r\n      modSupplier.SupplierOriginTerminals.forEach((association) => {\r\n        supplierOriginTerminalValidationDef.forEach((col) => {\r\n          let err = \"\";\r\n\r\n          if (col.validator !== undefined) {\r\n            err = Utilities.validateField(\r\n              col.validator,\r\n              association[col.field]\r\n            );\r\n          }\r\n          if (err !== \"\") {\r\n            notification.messageResultDetails.push({\r\n              keyFields: [\"OriginTerminal_Code\", col.displayName],\r\n              keyValues: [\r\n                association.OriginTerminalCode,\r\n                association[col.field],\r\n              ],\r\n              isSuccess: false,\r\n              errorMessage: err,\r\n            });\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [],\r\n        keyValues: [],\r\n        isSuccess: false,\r\n        errorMessage: \"Supplier_OriginTerminal_Association_Require\",\r\n      });\r\n    }\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n    var returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    let dchAttributeValidationErrors = lodash.cloneDeep(\r\n      this.state.dchAttributeValidationErrors\r\n    );\r\n\r\n    let modDCHAttributes = lodash.cloneDeep(\r\n      this.state.modDCHAttributes\r\n    );\r\n\r\n    //dchAttributeValidationErrors = getDCHAttributeErrors(modDCHAttributes, dchAttributeValidationDef);\r\n    modDCHAttributes.forEach((attributes) => {\r\n      dchAttributeValidationErrors[attributes.ID] = Utilities.validateField(\r\n        dchAttributeValidationDef[\"attribute\"],\r\n        attributes.Value\r\n      );\r\n    })\r\n\r\n    this.setState({ dchAttributeValidationErrors });\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(dchAttributeValidationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modSupplier, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n  updateSupplier(modSupplier) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.supplierCode,\r\n        value: modSupplier.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.supplierCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modSupplier,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"Supplier_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Supplier_Code\"],\r\n          keyValues: [modSupplier.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateSupplier,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnSupplier\r\n              ),\r\n              showAuthenticationLayout: false,\r\n\r\n            },\r\n            () => this.getSupplier({ Common_Code: modSupplier.Code })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnSupplier\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          console.log(\"Error in UpdateSupplier:\", result.ErrorList);\r\n        }\r\n        // console.log(notification);\r\n        this.props.onSaved(modSupplier, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnSupplier\r\n          ),\r\n          showAuthenticationLayout: false,\r\n\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modSupplier, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  createSupplier(modSupplier) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.supplierCode,\r\n        value: modSupplier.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.supplierCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modSupplier,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"Supplier_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Supplier_Code\"],\r\n          keyValues: [modSupplier.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateSupplier,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnSupplier\r\n              ),\r\n              showAuthenticationLayout: false,\r\n\r\n            },\r\n            () => this.getSupplier({ Common_Code: modSupplier.Code })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnSupplier\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          console.log(\"Error in CreateSupplier:\", result.ErrorList);\r\n        }\r\n        // console.log(notification);\r\n        this.props.onSaved(modSupplier, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnSupplier\r\n          ),\r\n          showAuthenticationLayout: false,\r\n\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modSupplier, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      // this.getSupplier(this.props.selectedRow);\r\n      this.getAttributes(this.props.selectedRow);\r\n      this.getOriginTerminalList(this.props.selectedShareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"SupplierDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(supplierRow) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [supplierAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors: Utilities.getAttributeInitialValidationErrors(\r\n                result.EntityResult.supplier\r\n              ),\r\n            },\r\n            () => this.getSupplier(supplierRow)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  getSupplier(supplierRow) {\r\n    // let driver = props.selectedRow;\r\n    emptySupplier.ShareholderCode = this.props.selectedShareholder;\r\n    emptySupplier.TransportationTypes = this.props.userDetails.EntityResult.TransportationTypes;\r\n    emptySupplier.TerminalCodes =\r\n      this.props.terminalCodes.length === 1\r\n        ? [...this.props.terminalCodes]\r\n        : [];\r\n    //    var terminalCodes = [...this.state.terminalCodes];\r\n    if (supplierRow.Common_Code === undefined) {\r\n      // terminalCodes = [];\r\n      this.setState(\r\n        {\r\n          supplier: lodash.cloneDeep(emptySupplier),\r\n          modSupplier: lodash.cloneDeep(emptySupplier),\r\n          modAttributeMetaDataList: [],\r\n          isReadyToRender: true,\r\n          modAssociations: [],\r\n          supplierKPIList:[],\r\n          // terminalCodes,\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnSupplier\r\n          ),\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsDCHEnabled)\r\n            this.getShareholderDetail(this.props.selectedShareholder);\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode === false)\r\n            this.localNodeAttribute();\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.supplierCode,\r\n        value: supplierRow.Common_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.supplierCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetSupplier,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        // console.log(result);\r\n        if (result.IsSuccess === true) {\r\n          // this.getTerminalsForCarrier(result.EntityResult.CarrierCode);\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              supplier: result.EntityResult,\r\n              modSupplier: lodash.cloneDeep(result.EntityResult),\r\n              modAssociations: Array.isArray(\r\n                result.EntityResult.SupplierOriginTerminals\r\n              )\r\n                ? Utilities.addSeqNumberToListObject(\r\n                  lodash.cloneDeep(\r\n                    result.EntityResult.SupplierOriginTerminals\r\n                  )\r\n                )\r\n                : [],\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnSupplier\r\n              ),\r\n\r\n            },\r\n            () => {\r\n              this.getKPIList(this.props.selectedShareholder,result.EntityResult.Code)\r\n              if (this.props.userDetails.EntityResult.IsDCHEnabled)\r\n                this.getShareholderDetail(this.props.selectedShareholder);\r\n              // this.getTerminalsForCarrier(result.EntityResult.CarrierCode)\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            modSupplier: lodash.cloneDeep(emptySupplier),\r\n            supplier: lodash.cloneDeep(emptySupplier),\r\n            modAssociations: [],\r\n            isReadyToRender: true,\r\n          }, () => {\r\n            if (this.props.userDetails.EntityResult.IsDCHEnabled)\r\n              this.getShareholderDetail(this.props.selectedShareholder);\r\n          });\r\n          console.log(\"Error in GetSupplier:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Supplier:\", error, supplierRow);\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    var modSupplier = lodash.cloneDeep(this.state.supplier);\r\n    try {\r\n      this.setState(\r\n        {\r\n          modSupplier: lodash.cloneDeep(this.state.supplier),\r\n          validationErrors: [],\r\n          modAttributeMetaDataList: [],\r\n          modAssociations: Array.isArray(\r\n            this.state.supplier.SupplierOriginTerminals\r\n          )\r\n            ? Utilities.addSeqNumberToListObject(\r\n              lodash.cloneDeep(this.state.supplier.SupplierOriginTerminals)\r\n            )\r\n            : [],\r\n          dchAttributeValidationErrors: {},\r\n          modDCHAttributes: lodash.cloneDeep(this.state.dchAttribute)\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(modSupplier.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n      if (this.state.supplier.Code === \"\") {\r\n        var terminalCodes = [...this.state.terminalCodes];\r\n        terminalCodes = [];\r\n        this.setState({ terminalCodes });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"SupplierDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      var terminalCodes = [...this.props.terminalCodes];\r\n      var modSupplier = lodash.cloneDeep(this.state.modSupplier);\r\n\r\n      if (checked) modSupplier.TerminalCodes = [...terminalCodes];\r\n      else modSupplier.TerminalCodes = [];\r\n      this.setState({ modSupplier: modSupplier });\r\n      this.terminalSelectionChange(modSupplier.TerminalCodes);\r\n    } catch (error) {\r\n      console.log(\r\n        \"SupplierDetailsComposite:Error occured on handleAllTerminasChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleAddAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.modAssociations.length < this.state.customerOptions.length\r\n        ) {\r\n          let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n          let newAssociation = {\r\n            SeqNumber: null,\r\n            OriginTerminalCode: null,\r\n            SupplierCode: null,\r\n            ContactPerson: null,\r\n            Email: null,\r\n            Mobile: null,\r\n            Phone: null,\r\n            ShareholderCode: this.props.selectedShareholder,\r\n          };\r\n          newAssociation.SeqNumber = Utilities.getMaxSeqNumberfromListObject(\r\n            modAssociations\r\n          );\r\n\r\n          if (this.state.customerOptions.length === 1) {\r\n            newAssociation.OriginTerminalCode = this.state.customerOptions[0].value;\r\n          }\r\n\r\n          modAssociations.push(newAssociation);\r\n\r\n          this.setState({\r\n            modAssociations,\r\n            selectedAssociations: [],\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"SupplierDetailsComposite:Error occured on handleAddAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleDeleteAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedAssociations != null &&\r\n          this.state.selectedAssociations.length > 0\r\n        ) {\r\n          if (this.state.modAssociations.length > 0) {\r\n            let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n\r\n            this.state.selectedAssociations.forEach((obj, index) => {\r\n              modAssociations = modAssociations.filter(\r\n                (association, cindex) => {\r\n                  return association.SeqNumber !== obj.SeqNumber;\r\n                }\r\n              );\r\n            });\r\n\r\n            this.setState({ modAssociations, selectedAssociations: [] });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"SupplierDetailsComposite:Error occured on handleDeleteAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleAssociationSelectionChange = (associations) => {\r\n    this.setState({ selectedAssociations: associations });\r\n  };\r\n\r\n  getOriginTerminalList(shareholder) {\r\n    axios(\r\n      RestAPIs.GetOriginTerminalsList +\r\n      \"?ShareholderCode=\" +\r\n      shareholder +\r\n      \"&TransportationType=\",\r\n\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        // console.log(response);\r\n\r\n        if (result.IsSuccess === true) {\r\n          if (Array.isArray(result.EntityResult)) {\r\n            let customerOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ customerOptions });\r\n          } else {\r\n            console.log(\"supplierOrigins not identified for shareholder\");\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting OriginTerminal List:\", error);\r\n      });\r\n  }\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modSupplier = lodash.cloneDeep(this.state.modSupplier);\r\n      modSupplier.Status = value;\r\n      if (modSupplier.Status !== this.state.supplier.Status)\r\n        modSupplier.Remarks = \"\";\r\n      this.setState({ modSupplier });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  //Get KPI for Supplier\r\n  getKPIList(shareholder,supplierCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      \r\n      var transportationType = \"\";\r\n      if (this.props.genericProps !== undefined) {\r\n        if (this.props.genericProps.transportationType !== undefined) {\r\n          transportationType = this.props.genericProps.transportationType;\r\n        }\r\n      }\r\n      let objKPIRequestData = {\r\n        PageName: kpiSupplierDetail,\r\n        TransportationType: transportationType,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder }, { key: \"SupplierCode\", value: supplierCode }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              supplierKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ supplierKPIList: [] });\r\n            console.log(\"Error in supplier KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Supplier KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n  render() {\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"DriverInfo_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modSupplier.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modSupplier.LastUpdatedTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_LastActive\",\r\n        fieldValue:\r\n          this.state.modSupplier.LastActiveTime !== undefined &&\r\n            this.state.modSupplier.LastActiveTime !== null\r\n            ? new Date(\r\n              this.state.modSupplier.LastActiveTime\r\n            ).toLocaleDateString() +\r\n            \" \" +\r\n            new Date(\r\n              this.state.modSupplier.LastActiveTime\r\n            ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_CreatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.modSupplier.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modSupplier.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.supplier.Code}\r\n            newEntityName=\"SupplierInfo_Title\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <TMDetailsKPILayout KPIList={this.state.supplierKPIList}> </TMDetailsKPILayout>\r\n        <ErrorBoundary>\r\n          <SupplierDetails\r\n            supplier={this.state.supplier}\r\n            modSupplier={this.state.modSupplier}\r\n            modAssociations={this.state.modAssociations}\r\n            modDCHAttributes={this.state.modDCHAttributes}\r\n            validationErrors={this.state.validationErrors}\r\n            listOptions={{\r\n              transportationTypes: Utilities.transferListtoOptions(\r\n                this.props.userDetails.EntityResult.TransportationTypes\r\n              ),\r\n              terminalCodes: this.props.terminalCodes,\r\n              customerOptions: this.state.customerOptions,\r\n            }}\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            attributeMetaDataList={this.state.attributeMetaDataList}\r\n            selectedAssociations={this.state.selectedAssociations}\r\n            handleRowSelectionChange={this.handleAssociationSelectionChange}\r\n            onFieldChange={this.handleChange}\r\n            onAllTerminalsChange={this.handleAllTerminalsChange}\r\n            handleAddAssociation={this.handleAddAssociation}\r\n            handleDeleteAssociation={this.handleDeleteAssociation}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            onAttributeDataChange={this.handleAttributeDataChange} \r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            isDCHEnabled={this.state.isDCHEnabled}\r\n            dchAttributeValidationErrors={this.state.dchAttributeValidationErrors}\r\n            handleDCHCellDataEdit={this.handleDCHCellDataEdit}\r\n          ></SupplierDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.supplier.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnSupplier}\r\n            handleOperation={this.saveSupplier}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SupplierDetailsComposite);\r\n\r\nSupplierDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Select, Checkbox } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nAssociatedTerminals.propTypes = {\r\n  terminalList: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedTerminal: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  validationError: PropTypes.string,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCheckChange: PropTypes.func.isRequired,\r\n};\r\nAssociatedTerminals.defaultProps = {\r\n  terminalList: [],\r\n  selectedTerminal: [],\r\n  validationError: \"\",\r\n};\r\nexport function AssociatedTerminals({\r\n  terminalList,\r\n  selectedTerminal,\r\n  validationError,\r\n  onFieldChange,\r\n  onCheckChange,\r\n}) {\r\n  //console.log(\"component terminalList\", terminalList);\r\n  if (selectedTerminal === null) selectedTerminal = [];\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div style={{ width: \"80%\" }}>\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"TerminalCodes\")}\r\n              value={selectedTerminal}\r\n              multiple={true}\r\n              options={Utilities.transferListtoOptions(terminalList)}\r\n              onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n              error={t(validationError)}\r\n              disabled={terminalList.length === 0}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"ddlSelectAll\">\r\n            <Checkbox\r\n              label={t(\"Common_All\")}\r\n              checked={\r\n                Array.isArray(selectedTerminal) &&\r\n                selectedTerminal.length === terminalList.length\r\n              }\r\n              onChange={(checked) => onCheckChange(checked)}\r\n            ></Checkbox>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMDetailsKPILayout","_ref","KPIList","pageName","rowHeight","widgetHeight","isDraggable","isResizable","kpiDisplayTopBreakpoint","KPIDisplays","setKPIDisplays","useState","kpiDiv","React","hideKpis","currentScrollPos","window","pageYOffset","KPIDisplay","current","getBoundingClientRect","top","useEffect","addEventListener","removeEventListener","_jsx","ref","children","TranslationConsumer","t","style","marginTop","ErrorBoundary","KPIDashboardLayout","kpiList","defaultProps","SupplierDetails","supplier","modSupplier","modDCHAttributes","modAssociations","validationErrors","listOptions","onFieldChange","onAllTerminalsChange","selectedAssociations","handleRowSelectionChange","handleCellDataEdit","handleAddAssociation","handleDeleteAssociation","onActiveStatusChange","isEnterpriseNode","modAttributeMetaDataList","attributeValidationErrors","onAttributeDataChange","isDCHEnabled","dchAttributeValidationErrors","handleDCHCellDataEdit","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","useTranslation","handleCustomEditTextBox","cellData","Input","fluid","value","rowIndex","field","onChange","reserveSpace","_jsxs","className","Code","label","indicator","disabled","data","error","Name","Select","placeholder","multiple","TransportationTypes","options","transportationTypes","search","noResultsMessage","Description","ContactPerson","Address","Mobile","Phone","Email","Status","text","Remarks","AssociatedTerminals","terminalList","terminalCodes","selectedTerminal","TerminalCodes","onCheckChange","length","map","attire","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","dchAttribute","EntityName","Value","ID","onClick","display","cursor","justifyContent","width","Icon","root","name","size","DataTable","selectionMode","selection","onSelectionChange","scrollable","scrollHeight","Column","header","editable","editFieldType","customEditRenderer","celldata","handleCustomEditDropDown","dropDownoptions","customerOptions","SupplierDetailsComposite","Component","constructor","arguments","state","Utilities","supplierValidationDef","isReadyToRender","saveEnabled","supplierKPIList","tempSupplier","showAuthenticationLayout","handleChange","propertyName","lodash","this","setState","undefined","terminalSelectionChange","console","log","newVal","attribute","toString","dchAttributeValidationDef","handleAttributeDataChange","matchedAttributes","matchedAttributesList","filter","modattribute","Array","isArray","DefaultValue","forEach","handleAuthenticationClose","saveSupplier","attributeList","fillAttributeDetails","createSupplier","updateSupplier","handleSave","association","SupplierCode","SupplierOriginTerminals","validateSave","props","userDetails","EntityResult","IsWebPortalUser","handleReset","IsEnterpriseNode","handleResetAttributeValidationError","localNodeAttribute","handleAllTerminalsChange","checked","IsArchived","newAssociation","SeqNumber","OriginTerminalCode","ShareholderCode","selectedShareholder","push","obj","index","cindex","handleAssociationSelectionChange","associations","handleActiveStatusChange","getShareholderDetail","shareHolder","keyCode","key","KeyCodes","ShareHolderCode","keyDataCode","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","ExternalSystemCode","GetDCHAttributeInfoList","ErrorList","catch","dcAttributeConfig","Shareholdercode","EntityCode","EntityType","Constants","SUPPLIER","Entity","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","Attributes","supplierAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","Object","keys","componentWillReceiveProps","nextProps","selectedRow","Common_Code","getSupplier","IsDCHEnabled","dchAttributeInfo","TabAttributeDataList","DCHAttribute","notification","messageType","message","messageResultDetails","Set","a","keyFields","keyValues","isSuccess","errorMessage","onSaved","supplierOriginTerminalValidationDef","col","err","validator","displayName","returnValue","values","every","attributes","FunctionsList","functionGroups","modify","fnSupplier","add","componentDidMount","getAttributes","getOriginTerminalList","supplierRow","supplierAttributeEntity","emptySupplier","getKPIList","shareholder","supplierCode","view","fnKPIInformation","transportationType","genericProps","objKPIRequestData","PageName","kpiSupplierDetail","TransportationType","InputParameters","ListKPIDetails","render","popUpContents","fieldName","fieldValue","Date","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","LastActiveTime","CreatedTime","TMDetailsHeader","entityCode","newEntityName","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","validationError","Checkbox","margin","Popup","element","marginLeft","position","List","content","Button","float","handleAttributeDateValue","convertAttributeDatetoString","chars","split","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","toLocaleString","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","getOptionsWithSelect","ddlOptions","selectOptionText","option","unshift","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}