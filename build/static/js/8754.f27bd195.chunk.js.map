{"version":3,"file":"static/js/8754.f27bd195.chunk.js","mappings":"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","sources":["Components/Composite/Common/TMDetailsKPILayout.jsx","Components/UIBase/Details/TrailerDetails.jsx","Components/Composite/Details/TrailerDetailsComposite.jsx","Components/UIBase/Common/AssociatedTerminals.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/DateFieldsInEntities.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nexport default function TMDetailsKPILayout({\r\n    KPIList,\r\n    pageName,\r\n    rowHeight,\r\n    widgetHeight,\r\n    isDraggable,\r\n    isResizable,\r\n    kpiDisplayTopBreakpoint\r\n}) {\r\n    const [KPIDisplays, setKPIDisplays] = useState(1);\r\n\r\n    const kpiDiv = React.useRef(null);\r\n\r\n    const hideKpis = () => {\r\n        let currentScrollPos = window.pageYOffset;\r\n        let KPIDisplay = KPIDisplays;\r\n\r\n        // hide kpis based on div position to top of the window \r\n        if (kpiDiv.current && kpiDiv.current.getBoundingClientRect().top < kpiDisplayTopBreakpoint) {\r\n            KPIDisplay = 0;\r\n        }\r\n        // show the kpis once at top of the screen\r\n        else if (currentScrollPos === 0) {\r\n            KPIDisplay = 1\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n        setKPIDisplays(KPIDisplay);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\") {\r\n            window.addEventListener(\"scroll\", hideKpis);\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // remove listener on unmount\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", hideKpis)\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={kpiDiv}>\r\n            {KPIDisplays === 1 ? <TranslationConsumer>\r\n                {(t) => (\r\n                    <div style={{ marginTop: \"6px\" }}>\r\n                        <ErrorBoundary>\r\n                            <KPIDashboardLayout\r\n                                kpiList={KPIList}\r\n                                isDraggable={isDraggable}\r\n                                isResizable={isResizable}\r\n                                rowHeight={rowHeight}\r\n                                widgetHeight={widgetHeight}\r\n                                pageName={pageName}\r\n                            ></KPIDashboardLayout>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n                )}\r\n            </TranslationConsumer> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nTMDetailsKPILayout.propTypes = {\r\n    kpiDisplayTopBreakpoint: PropTypes.number\r\n}\r\n\r\nTMDetailsKPILayout.defaultProps = {\r\n    kpiDisplayTopBreakpoint: 100\r\n}","import React from \"react\";\r\nimport {\r\n  Select,\r\n  Input,\r\n  Icon,\r\n  Checkbox,\r\n  DatePicker,\r\n  Accordion,\r\n} from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport {\r\n  getOptionsWithSelect,\r\n  handleIsRequiredCompartmentCell,\r\n  getCurrentDateFormat,\r\n} from \"../../../JS/functionalUtilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { convertStringToCommonDateFormat } from \"../../../JS/Utilities\";\r\n\r\nTrailerDetails.propTypes = {\r\n  trailer: PropTypes.object.isRequired,\r\n  modTrailer: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  attributeValidationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    carriers: PropTypes.array,\r\n    productType: PropTypes.array,\r\n    loadingType: PropTypes.array,\r\n    unitOfWeight: PropTypes.array,\r\n    unitOfVolume: PropTypes.array,\r\n    unitOfDimension: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    hazardousTankerCategoryOptions: PropTypes.array,\r\n  }).isRequired,\r\n  selectedCompRow: PropTypes.array.isRequired,\r\n  expandedRows: PropTypes.array.isRequired,\r\n  modAttributeMetaDataList: PropTypes.array.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  handleRowSelectionChange: PropTypes.func.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n  onAttributeDataChange: PropTypes.func.isRequired,\r\n  handleCompAttributeCellDataEdit: PropTypes.func.isRequired,\r\n  handleAddCompartment: PropTypes.func.isRequired,\r\n  handleDeleteCompartment: PropTypes.func.isRequired,\r\n  toggleExpand: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  compartmentDetailsPageSize: PropTypes.number.isRequired,\r\n  onCarrierSearchChange: PropTypes.func.isRequired,\r\n  hazardousEnabled: PropTypes.bool,\r\n};\r\n\r\nTrailerDetails.defaultProps = {\r\n  listOptions: {\r\n    carriers: [],\r\n    productType: [],\r\n    loadingType: [],\r\n    unitOfWeight: [],\r\n    unitOfVolume: [],\r\n    unitOfDimension: [],\r\n    terminalCodes: [],\r\n    hazardousTankerCategoryOptions: [],\r\n  },\r\n  isEnterpriseNode: false,\r\n  hazardousEnabled: false,\r\n};\r\nexport default function TrailerDetails({\r\n  trailer,\r\n  modTrailer,\r\n  validationErrors,\r\n  attributeValidationErrors,\r\n  listOptions,\r\n  onFieldChange,\r\n  onDateTextChange,\r\n  onAllTerminalsChange,\r\n  selectedCompRow,\r\n  modAttributeMetaDataList,\r\n  expandedRows,\r\n  handleRowSelectionChange,\r\n  handleCellDataEdit,\r\n  onAttributeDataChange,\r\n  handleCompAttributeCellDataEdit,\r\n  handleAddCompartment,\r\n  handleDeleteCompartment,\r\n  isEnterpriseNode,\r\n  toggleExpand,\r\n  compartmentDetailsPageSize,\r\n  onCarrierSearchChange,\r\n  hazardousEnabled,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  const handleAttributeType = (data) => {\r\n    //debugger;\r\n    const attribute = data.rowData;\r\n    const handleAttributeDateValue = (dateval) => {\r\n      var chars = dateval.split(\"-\");\r\n      return new Date(chars[0], chars[1] - 1, chars[2]);\r\n    };\r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n      var Dateval = new Date(value);\r\n      value =\r\n        Dateval.getFullYear() +\r\n        \"-\" +\r\n        (\"0\" + (Dateval.getMonth() + 1)).slice(-2) +\r\n        \"-\" +\r\n        (\"0\" + Dateval.getDate()).slice(-2);\r\n      handleCompAttributeCellDataEdit(attribute, value);\r\n    };\r\n    try {\r\n      return attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.STRING.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.INT.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.FLOAT.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.LONG.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.DOUBLE.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n            attribute.AttributeValue === undefined ||\r\n            attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : attribute.AttributeValue.toLocaleString()\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.BOOL.toLowerCase() ? (\r\n        <Checkbox\r\n          checked={\r\n            attribute.AttributeValue.toString().toLowerCase() === \"true\"\r\n              ? true\r\n              : false\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n        ></Checkbox>\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.DATETIME.toLowerCase() ? (\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n            attribute.AttributeValue === undefined ||\r\n            attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : handleAttributeDateValue(attribute.AttributeValue)\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          showYearSelector=\"true\"\r\n          onChange={(value) => convertAttributeDatetoString(data, value)}\r\n          onTextChange={(value) => {\r\n            convertAttributeDatetoString(data, value);\r\n          }}\r\n          reserveSpace={false}\r\n        />\r\n      ) : null;\r\n    } catch (error) {\r\n      console.log(\"TrailerDetails:Error occured on handleAttributeType\", error);\r\n    }\r\n  };\r\n\r\n  const handleIsRequiredCompAttributes = (data) => {\r\n    return data.rowData.IsMandatory ? (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n        <div class=\"ui red circular empty label badge  circle-padding\" />\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const expanderTemplate = (data) => {\r\n    //const open = expandedRows.includes(data.rowData);\r\n    const open =\r\n      expandedRows.findIndex(\r\n        (x) =>\r\n          x.CompartmentSeqNoInTrailer === data.rowData.CompartmentSeqNoInTrailer\r\n      ) >= 0\r\n        ? true\r\n        : false;\r\n    return (\r\n      <div\r\n        onClick={() => toggleExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        <span>{open ? t(\"Hide_Attributes\") : t(\"View_Attributes\")}</span>\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"caret-up\" : \"caret-down\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  function rowExpansionTemplate(data) {\r\n    return Array.isArray(data.AttributesforUI) &&\r\n      data.AttributesforUI.length > 0 ? (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable\r\n          data={data.AttributesforUI}\r\n          rows={compartmentDetailsPageSize}\r\n        >\r\n          {isEnterpriseNode ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"TerminalCode\"\r\n              field=\"TerminalCode\"\r\n              header={t(\"CompartmentTerminal\")}\r\n              editable={false}\r\n            ></DataTable.Column>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"AttributeName\"\r\n            header={t(\"CompartmentAttributeName\")}\r\n            renderer={handleIsRequiredCompAttributes}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            header={t(\"CompartmentAttributeValue\")}\r\n            renderer={handleAttributeType}\r\n          />\r\n          {Array.isArray(data.AttributesforUI) &&\r\n          data.AttributesforUI.length > compartmentDetailsPageSize ? (\r\n            <DataTable.Pagination />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </DataTable>\r\n      </div>\r\n    ) : (\r\n      <div className=\"compartmentIcon\">\r\n        <div className=\"gridButtonAlignLeft\">\r\n          {t(\"CustomerInventory_NoRecordsFound\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleTextEdit = (cellData) => {\r\n    let val = modTrailer.Compartments[cellData.rowIndex][cellData.field];\r\n    if (cellData.field === \"Capacity\" && val !== null && val !== \"\")\r\n      val = val.toLocaleString();\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={val}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n        disabled={cellData.field === \"Code\" ? true : false}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleDropdownEdit = (cellData) => {\r\n    let dropDownOptions = [\r\n      ...listOptions.unitOfVolume,\r\n      ...listOptions.unitOfWeight,\r\n    ];\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        placeholder={t(\"Common_Select\")}\r\n        value={modTrailer.Compartments[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownOptions}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    //<TranslationConsumer>\r\n    // {(t) => (\r\n    <div className=\"detailsContainer\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modTrailer.Code}\r\n            label={t(\"Trailer_Code\")}\r\n            indicator=\"required\"\r\n            disabled={trailer.Code !== \"\"}\r\n            onChange={(data) => onFieldChange(\"Code\", data)}\r\n            error={t(validationErrors.Code)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modTrailer.Name}\r\n            label={t(\"TrailerList_Name\")}\r\n            indicator=\"required\"\r\n            onChange={(data) => onFieldChange(\"Name\", data)}\r\n            error={t(validationErrors.Name)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modTrailer.Description === null ? \"\" : modTrailer.Description\r\n            }\r\n            label={t(\"Trailer_Desc\")}\r\n            onChange={(data) => onFieldChange(\"Description\", data)}\r\n            error={t(validationErrors.Description)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(\"TrailerList_Carrier\")}\r\n            //value={modTrailer.CarrierCompanyCode}\r\n            value={\r\n              modTrailer.CarrierCompanyCode === null\r\n                ? \"\"\r\n                : modTrailer.CarrierCompanyCode\r\n            }\r\n            options={listOptions.carriers}\r\n            onChange={(data) => {\r\n              onFieldChange(\"CarrierCompanyCode\", data);\r\n            }}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.CarrierCompanyCode)}\r\n            reserveSpace={false}\r\n            disabled={trailer.Code !== \"\"}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n            onSearch={onCarrierSearchChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Trailer_ProductType`)}\r\n            value={modTrailer.ProductType}\r\n            options={listOptions.productType}\r\n            onChange={(data) => {\r\n              onFieldChange(\"ProductType\", data);\r\n            }}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.ProductType)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Trailer_LoadingType`)}\r\n            value={modTrailer.LoadingType}\r\n            options={listOptions.loadingType}\r\n            onChange={(data) => {\r\n              onFieldChange(\"LoadingType\", data);\r\n              //onCarrierChange(data);\r\n            }}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.LoadingType)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modTrailer.TareWeight === null\r\n                ? \"\"\r\n                : modTrailer.TareWeight.toLocaleString()\r\n            }\r\n            label={t(`Trailer_Tareweight`)}\r\n            indicator=\"required\"\r\n            onChange={(data) => onFieldChange(\"TareWeight\", data)}\r\n            error={t(validationErrors.TareWeight)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modTrailer.MaxLoadableWeight_UI === null\r\n                ? \"\"\r\n                : modTrailer.MaxLoadableWeight_UI.toLocaleString()\r\n            }\r\n            label={t(`Trailer_MaxLoadWeight`)}\r\n            indicator=\"required\"\r\n            onChange={(data) => onFieldChange(\"MaxLoadableWeight_UI\", data)}\r\n            error={t(validationErrors.MaxLoadableWeight_UI)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Trailer_WeightUOM`)}\r\n            value={modTrailer.WeightUOM}\r\n            options={listOptions.unitOfWeight}\r\n            onChange={(data) => {\r\n              onFieldChange(\"WeightUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.WeightUOM)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modTrailer.Height === null\r\n                ? \"\"\r\n                : modTrailer.Height.toLocaleString()\r\n            }\r\n            label={t(`Trailer_height`)}\r\n            onChange={(data) => onFieldChange(\"Height\", data)}\r\n            error={t(validationErrors.Height)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modTrailer.Width === null ? \"\" : modTrailer.Width.toLocaleString()\r\n            }\r\n            label={t(`Trailer_Width`)}\r\n            onChange={(data) => onFieldChange(\"Width\", data)}\r\n            error={t(validationErrors.Width)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modTrailer.Length === null\r\n                ? \"\"\r\n                : modTrailer.Length.toLocaleString()\r\n            }\r\n            label={t(`Trailer_Length`)}\r\n            onChange={(data) => onFieldChange(\"Length\", data)}\r\n            error={t(validationErrors.Length)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Trailer_UOMDimemsion`)}\r\n            value={modTrailer.LWHUOM}\r\n            options={getOptionsWithSelect(\r\n              listOptions.unitOfDimension,\r\n              t(\"Common_Select\")\r\n            )}\r\n            onChange={(data) => {\r\n              onFieldChange(\"LWHUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            error={t(validationErrors.LWHUOM)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modTrailer.MaxLoadableVolume === null\r\n                ? \"\"\r\n                : modTrailer.MaxLoadableVolume.toLocaleString()\r\n            }\r\n            label={t(`Trailer_MaxLoadVolume`)}\r\n            onChange={(data) => onFieldChange(\"MaxLoadableVolume\", data)}\r\n            error={t(validationErrors.MaxLoadableVolume)}\r\n            reserveSpace={false}\r\n            disabled={true}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Trailer_VolumeUOM`)}\r\n            value={modTrailer.VolumeUOM}\r\n            options={listOptions.unitOfVolume}\r\n            onChange={(data) => {\r\n              onFieldChange(\"VolumeUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            error={t(validationErrors.VolumeUOM)}\r\n            reserveSpace={false}\r\n            //search={true}\r\n            disabled={true}\r\n          />\r\n        </div>\r\n        {hazardousEnabled ? (\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <div style={{ width: \"48%\" }}>\r\n                <Select\r\n                  fluid\r\n                  placeholder={t(\"Common_Select\")}\r\n                  label={t(\"FP_HazardousCategory\")}\r\n                  value={\r\n                    modTrailer.HazardousCategory === null\r\n                      ? \"\"\r\n                      : modTrailer.HazardousCategory\r\n                  }\r\n                  options={getOptionsWithSelect(\r\n                    listOptions.hazardousTankerCategoryOptions,\r\n                    t(\"Common_Select\")\r\n                  )}\r\n                  onChange={(data) => onFieldChange(\"HazardousCategory\", data)}\r\n                  reserveSpace={false}\r\n                  search={true}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                  error={t(validationErrors.HazardousCategory)}\r\n                />\r\n              </div>\r\n              <div style={{ width: \"48%\" }}>\r\n                <DatePicker\r\n                  fluid\r\n                  value={\r\n                    modTrailer.HazardousLicenseExpiry === null\r\n                      ? \"\"\r\n                      : convertStringToCommonDateFormat(\r\n                          modTrailer.HazardousLicenseExpiry\r\n                        )\r\n                  }\r\n                  displayFormat={getCurrentDateFormat()}\r\n                  label={t(\"DriverInfo_HazardousLicExpiry\")}\r\n                  disablePast={true}\r\n                  showYearSelector=\"true\"\r\n                  onChange={(data) =>\r\n                    onFieldChange(\"HazardousLicenseExpiry\", data)\r\n                  }\r\n                  onTextChange={(value, error) => {\r\n                    onDateTextChange(\"HazardousLicenseExpiry\", value, error);\r\n                  }}\r\n                  error={t(validationErrors.HazardousLicenseExpiry)}\r\n                  reserveSpace={false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(\"Trailer_Status\")}\r\n            value={modTrailer.Active}\r\n            options={[\r\n              { text: t(\"ViewShipment_Ok\"), value: true },\r\n              { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n            ]}\r\n            onChange={(data) => onFieldChange(\"Active\", data)}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modTrailer.Remarks === null ? \"\" : modTrailer.Remarks}\r\n            label={t(\"Trailer_Remarks\")}\r\n            onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n            indicator={modTrailer.Active !== trailer.Active ? \"required\" : \"\"}\r\n            error={t(validationErrors.Remarks)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        {isEnterpriseNode ? (\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <AssociatedTerminals\r\n              terminalList={listOptions.terminalCodes}\r\n              selectedTerminal={modTrailer.TerminalCodes}\r\n              error={t(validationErrors.TerminalCodes)}\r\n              onFieldChange={onFieldChange}\r\n              onCheckChange={onAllTerminalsChange}\r\n            ></AssociatedTerminals>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      {modAttributeMetaDataList.length > 0\r\n        ? modAttributeMetaDataList.map((attire) => (\r\n            <ErrorBoundary>\r\n              <Accordion>\r\n                <Accordion.Content\r\n                  className=\"attributeAccordian\"\r\n                  title={\r\n                    isEnterpriseNode\r\n                      ? attire.TerminalCode + \" - \" + t(\"Attributes_Header\")\r\n                      : t(\"Attributes_Header\")\r\n                  }\r\n                >\r\n                  <AttributeDetails\r\n                    selectedAttributeList={attire.attributeMetaDataList}\r\n                    handleCellDataEdit={onAttributeDataChange}\r\n                    attributeValidationErrors={handleValidationErrorFilter(\r\n                      attributeValidationErrors,\r\n                      attire.TerminalCode\r\n                    )}\r\n                  ></AttributeDetails>\r\n                </Accordion.Content>\r\n              </Accordion>\r\n            </ErrorBoundary>\r\n          ))\r\n        : null}\r\n      <div className=\"row compartmentRow\">\r\n        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n          <h4>{t(\"Trailer_CompartmentInfo\")}</h4>\r\n        </div>\r\n        <div className=\"col col-md-4 col-lg-3 col-xl-3\">\r\n          <div className=\"compartmentIconContainer\">\r\n            <div onClick={handleAddCompartment} className=\"compartmentIcon\">\r\n              <div>\r\n                <Icon root=\"common\" name=\"badge-plus\" size=\"medium\" />\r\n              </div>\r\n              <div className=\"margin_l10\">\r\n                <h5 className=\"font14\">{t(\"TrailerInfo_Add\")}</h5>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              onClick={handleDeleteCompartment}\r\n              className=\"compartmentIcon margin_l30\"\r\n            >\r\n              <div>\r\n                <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n              </div>\r\n              <div className=\"margin_l10\">\r\n                <h5 className=\"font14\">{t(\"TrailerInfo_Delete\")}</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row marginRightZero tableScroll\">\r\n        <div className=\"col-12 detailsTable havingchildTable\">\r\n          <DataTable\r\n            data={modTrailer.Compartments}\r\n            rowExpansionTemplate={rowExpansionTemplate}\r\n            expandedRows={expandedRows}\r\n            scrollable={true}\r\n            scrollHeight=\"320px\"\r\n            selectionMode=\"multiple\"\r\n            selection={selectedCompRow}\r\n            onSelectionChange={handleRowSelectionChange}\r\n          >\r\n            <DataTable.Column\r\n              className=\"compColHeight disabledColumn colminWidth\"\r\n              key=\"Code\"\r\n              field=\"Code\"\r\n              header={t(\"Trailer_CompCode\")}\r\n              // rowHeader={true}\r\n              editFieldType=\"text\"\r\n            ></DataTable.Column>\r\n\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"Description\"\r\n              field=\"Description\"\r\n              header={t(\"Trailer_Desc\")}\r\n              editable={true}\r\n              // rowHeader={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleTextEdit}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"Capacity\"\r\n              field=\"Capacity\"\r\n              header={handleIsRequiredCompartmentCell(\r\n                t(\"Trailer_CompCapacity\")\r\n              )} //{t(\"Trailer_CompCapacity\")}\r\n              editable={true}\r\n              // rowHeader={true}\r\n              editFieldType=\"text\"\r\n              renderer={(cellData) =>\r\n                cellData.value === null ? \"\" : cellData.value.toLocaleString()\r\n              }\r\n              customEditRenderer={handleTextEdit}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"UOM\"\r\n              field=\"UOM\"\r\n              header={handleIsRequiredCompartmentCell(t(\"Trailer_UOM\"))}\r\n              editable={true}\r\n              // rowHeader={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleDropdownEdit}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"expandedColumn\"\r\n              initialWidth=\"200px\"\r\n              renderer={expanderTemplate}\r\n            />\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    // )}\r\n    //</TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { trailerValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport {\r\n  trailerAttributeEntity,\r\n  trailerCompAttributeEntity,\r\n} from \"../../../JS/AttributeEntity\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { functionGroups, fnTrailer,fnKPIInformation } from \"../../../JS/FunctionGroups\";\r\nimport { emptyTrailer } from \"../../../JS/DefaultEntities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport TrailerDetails from \"../../UIBase/Details/TrailerDetails\";\r\nimport lodash from \"lodash\";\r\nimport { trailerCompartmentValidationDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { kpiTrailerDetail } from \"../../../JS/KPIPageName\";\r\nimport * as DateFieldsInEntities from \"../../../JS/DateFieldsInEntities\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass TrailerDetailsComposite extends Component {\r\n  state = {\r\n    trailer: {},\r\n    modTrailer: {},\r\n    validationErrors:\r\n      Utilities.getInitialValidationErrors(trailerValidationDef),\r\n    isReadyToRender: false,\r\n    carrierOptions: [],\r\n    carrierSearchOptions: [],\r\n    terminalOptions: [],\r\n    lengthUOMOptions: [],\r\n    volumeUOMOptions: [],\r\n    weightUOMOptions: [],\r\n    productTypeOptions: [],\r\n    loadingTypeOptions: [],\r\n    attributeMetaDataList: [],\r\n    compartmentAttributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    saveEnabled: false,\r\n    selectedCompRow: [],\r\n    expandedRows: [],\r\n    trailerKPIList:[],\r\n    hazardousEnabled: false,\r\n    hazardousTankerCategoryOptions: [],\r\n    maxNumberOfCompartments: 12,\r\n    showAuthenticationLayout: false,\r\n    tempTrailer: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      //this.getTrailer(isNewTrailer);\r\n      this.getHazardousLookup();\r\n      this.getCarrierList(this.props.selectedShareholder);\r\n      this.getUOMList();\r\n      this.getProductTypes();\r\n      this.getLoadingTypes();\r\n      let isNewTrailer = false;\r\n      if (this.props.selectedRow.Common_Code === undefined) isNewTrailer = true;\r\n      this.getAttributes(isNewTrailer);\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  getHazardousLookup() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=HazardousMaterial\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult[\"RoadEnabled\"] &&\r\n            result.EntityResult[\"RoadEnabled\"].toLowerCase() === \"true\"\r\n          ) {\r\n            this.setState({ hazardousEnabled: true });\r\n            this.getHazardousCategories();\r\n          }\r\n        }\r\n      });\r\n       axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=VirtualPreset\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (!isNaN(parseInt(result.EntityResult[\"RoadMaximumNumberOfCompartments\"]))) {\r\n            this.setState({maxNumberOfCompartments:parseInt(result.EntityResult[\"RoadMaximumNumberOfCompartments\"])})\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on getHazardousLookup\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  getHazardousCategories() {\r\n    axios(\r\n      RestAPIs.GetHazardousTankerCategories,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    ).then((response) => {\r\n      var result = response.data;\r\n      if (result.IsSuccess === true) {\r\n        if (\r\n          result.EntityResult !== null &&\r\n          Array.isArray(result.EntityResult)\r\n        ) {\r\n          let categoryOptions = Utilities.transferListtoOptions(\r\n            result.EntityResult\r\n          );\r\n          this.setState({ hazardousTankerCategoryOptions: categoryOptions });\r\n        }\r\n      } else {\r\n        console.log(\"Error in getHazardousCategories:\", result.ErrorList);\r\n      }\r\n    });\r\n  }\r\n  catch(error) {\r\n    console.log(\r\n      \"TrailerDetailsComposite:Error occured on getHazardousCategories\",\r\n      error\r\n    );\r\n  }\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (Array.isArray(selectedTerminals)) {\r\n        let attributesTerminalsList = [];\r\n        var attributeMetaDataList = [];\r\n        var modAttributeMetaDataList = [];\r\n\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        modAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.modAttributeMetaDataList\r\n        );\r\n\r\n        const attributeValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeValidationErrors\r\n        );\r\n\r\n        var modTrailer = lodash.cloneDeep(this.state.modTrailer);\r\n\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          });\r\n\r\n          if (existitem === undefined) {\r\n            attributeMetaDataList.forEach(function (attributeMetaData) {\r\n              if (attributeMetaData.TerminalCode === terminal) {\r\n                var Attributevalue = modTrailer.Attributes.find(\r\n                  (trailerAttribute) => {\r\n                    return trailerAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n                attributesTerminalsList.push(attributeMetaData);\r\n              }\r\n            });\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n\r\n        modAttributeMetaDataList = [];\r\n        modAttributeMetaDataList = attributesTerminalsList;\r\n        modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n          modAttributeMetaDataList\r\n        );\r\n        attributeValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n              (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n\r\n        this.formCompartmentAttributes(selectedTerminals);\r\n\r\n        this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList) &&\r\n        attributeMetaDataList.length > 0\r\n      )\r\n        this.terminalSelectionChange([attributeMetaDataList[0].TerminalCode]);\r\n      else {\r\n        var compAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.compartmentAttributeMetaDataList\r\n        );\r\n        if (\r\n          Array.isArray(compAttributeMetaDataList) &&\r\n          compAttributeMetaDataList.length > 0\r\n        )\r\n          this.formCompartmentAttributes([\r\n            compAttributeMetaDataList[0].TerminalCode,\r\n          ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.trailer.Code !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getTrailer(true);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(isNewTrailer) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [trailerAttributeEntity, trailerCompAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.TRAILER\r\n              ),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.TRAILER\r\n                ),\r\n              compartmentAttributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.TRAILERCOMPARTMENT\r\n              ),\r\n            },\r\n            () => this.getTrailer(isNewTrailer)\r\n          );\r\n        } else {\r\n          console.log(\"Failed to get Attributes\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Attributes:\", error);\r\n    }\r\n  }\r\n\r\n  formCompartmentAttributes(selectedTerminals) {\r\n    try {\r\n      let attributes = lodash.cloneDeep(\r\n        this.state.compartmentAttributeMetaDataList\r\n      );\r\n\r\n      attributes = attributes.filter(function (attTerminal) {\r\n        return selectedTerminals.some(function (selTerminal) {\r\n          return attTerminal.TerminalCode === selTerminal;\r\n        });\r\n      });\r\n      let modTrailer = lodash.cloneDeep(this.state.modTrailer);\r\n\r\n      modTrailer.Compartments.forEach((comp) => {\r\n        let compAttributes = [];\r\n        attributes.forEach((att) => {\r\n          att.attributeMetaDataList.forEach((attribute) => {\r\n            compAttributes.push({\r\n              AttributeCode: attribute.Code,\r\n              AttributeName: attribute.DisplayName,\r\n              AttributeValue: attribute.DefaultValue,\r\n              TerminalCode: attribute.TerminalCode,\r\n              IsMandatory: attribute.IsMandatory,\r\n              DataType: attribute.DataType,\r\n              IsReadonly: attribute.IsReadonly,\r\n              MinValue: attribute.MinValue,\r\n              MaxValue: attribute.MaxValue,\r\n              ValidationFormat: attribute.ValidationFormat,\r\n              compSequenceNo: \"\",\r\n            });\r\n          });\r\n        });\r\n        let attributesforNewComp = lodash.cloneDeep(compAttributes);\r\n\r\n        if (\r\n          comp.Code === null &&\r\n          (comp.AttributesforUI === null || comp.AttributesforUI === undefined)\r\n        ) {\r\n          comp.AttributesforUI = [];\r\n          attributesforNewComp.forEach((assignedAttributes) => {\r\n            assignedAttributes.compSequenceNo = comp.CompartmentSeqNoInTrailer;\r\n            comp.AttributesforUI.push(assignedAttributes);\r\n          });\r\n        } else {\r\n          if (\r\n            comp.AttributesforUI !== null &&\r\n            comp.AttributesforUI !== undefined\r\n          ) {\r\n            comp.AttributesforUI = comp.AttributesforUI.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n\r\n            compAttributes = compAttributes.filter(function (attTerminal) {\r\n              return !comp.AttributesforUI.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal.TerminalCode;\r\n              });\r\n            });\r\n          } else comp.AttributesforUI = [];\r\n\r\n          let tempCompAttributes = lodash.cloneDeep(compAttributes);\r\n          if (\r\n            Array.isArray(comp.Attributes) &&\r\n            comp.Attributes !== null &&\r\n            comp.Attributes !== undefined &&\r\n            comp.Attributes.length > 0\r\n          ) {\r\n            let selectedTerminalAttributes = comp.Attributes.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n            selectedTerminalAttributes.forEach((att) => {\r\n              att.ListOfAttributeData.forEach((attData) => {\r\n                let tempAttIndex = tempCompAttributes.findIndex(\r\n                  (item) =>\r\n                    item.TerminalCode === att.TerminalCode &&\r\n                    item.AttributeCode === attData.AttributeCode\r\n                );\r\n                if (tempAttIndex >= 0)\r\n                  tempCompAttributes[tempAttIndex].AttributeValue =\r\n                    attData.AttributeValue;\r\n              });\r\n            });\r\n            tempCompAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo =\r\n                comp.CompartmentSeqNoInTrailer;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          } else {\r\n            compAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo =\r\n                comp.CompartmentSeqNoInTrailer;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          }\r\n        }\r\n        this.toggleExpand(comp, true, true);\r\n        if (comp.AttributesforUI !== undefined && comp.AttributesforUI != null)\r\n          comp.AttributesforUI = Utilities.compartmentAttributesConvertoDecimal(\r\n            comp.AttributesforUI\r\n          );\r\n        comp.AttributesforUI = Utilities.addSeqNumberToListObject(\r\n          comp.AttributesforUI\r\n        );\r\n      });\r\n      this.setState({ modTrailer });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error in forming Compartment Attributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  fillAttributeDetails(modTrailer, attributeList) {\r\n    try {\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n\r\n      modTrailer.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n\r\n      // For Compartment Attributes\r\n      modTrailer.Compartments.forEach((comp) => {\r\n        if (comp.AttributesforUI !== undefined && comp.AttributesforUI != null)\r\n          comp.AttributesforUI =\r\n            Utilities.compartmentAttributesDatatypeConversion(\r\n              comp.AttributesforUI\r\n            );\r\n        let selectedTerminals = [];\r\n        if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n          selectedTerminals = lodash.cloneDeep(modTrailer.TerminalCodes);\r\n        else {\r\n          var compAttributeMetaDataList = lodash.cloneDeep(\r\n            this.state.compartmentAttributeMetaDataList\r\n          );\r\n          if (compAttributeMetaDataList.length > 0)\r\n            selectedTerminals = [compAttributeMetaDataList[0].TerminalCode];\r\n        }\r\n        let terminalAttributes = [];\r\n        comp.Attributes = [];\r\n        if (selectedTerminals !== null && selectedTerminals !== undefined && selectedTerminals.length > 0) {\r\n        selectedTerminals.forEach((terminal) => {\r\n          if (\r\n            comp.AttributesforUI !== null &&\r\n            comp.AttributesforUI !== undefined\r\n          )\r\n            terminalAttributes = comp.AttributesforUI.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return attTerminal.TerminalCode === terminal;\r\n            });\r\n\r\n          let attribute = {\r\n            ListOfAttributeData: [],\r\n          };\r\n\r\n          attribute.TerminalCode = terminal;\r\n          terminalAttributes.forEach((termAtt) => {\r\n            if (termAtt.AttributeValue !== \"\" || termAtt.IsMandatory === true)\r\n              attribute.ListOfAttributeData.push({\r\n                AttributeCode: termAtt.AttributeCode,\r\n                AttributeValue: termAtt.AttributeValue,\r\n              });\r\n            //})\r\n            //comp.Attributes.push(attribute);\r\n          });\r\n          if (\r\n            attribute.ListOfAttributeData !== null &&\r\n            attribute.ListOfAttributeData !== undefined &&\r\n            attribute.ListOfAttributeData.length > 0\r\n          )\r\n            comp.Attributes.push(attribute);\r\n        });\r\n      }\r\n\r\n      });\r\n      this.setState({ modTrailer });\r\n      return modTrailer;\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getProductTypes() {\r\n    axios(\r\n      RestAPIs.GetProductType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let productTypeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ productTypeOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getProductTypes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getProductTypes:\", error);\r\n      });\r\n  }\r\n\r\n  getLoadingTypes() {\r\n    axios(\r\n      RestAPIs.GetLoadingType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let loadingTypeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ loadingTypeOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getLoadingTypes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getLoadingTypes:\", error);\r\n      });\r\n  }\r\n\r\n  toggleExpand = (data, open, isTerminalAdded = false) => {\r\n    let expandedRows = this.state.expandedRows;\r\n    let expandedRowIndex = expandedRows.findIndex(\r\n      (item) =>\r\n        item.CompartmentSeqNoInTrailer === data.CompartmentSeqNoInTrailer\r\n    );\r\n    if (open) {\r\n      if (isTerminalAdded && expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n        expandedRows.push(data);\r\n      } else if (expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n      }\r\n    } else {\r\n      if (expandedRowIndex >= 0) {\r\n        expandedRows = expandedRows.filter(\r\n          (x) =>\r\n            x.Code !== data.Code &&\r\n            x.CompartmentSeqNoInTrailer !== data.CompartmentSeqNoInTrailer\r\n        );\r\n      } else expandedRows.push(data);\r\n    }\r\n    this.setState({ expandedRows });\r\n  };\r\n\r\n  getUOMList() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let weightUOMs = result.EntityResult.MASS;\r\n            let weightUOMOptions = [];\r\n            weightUOMs.forEach((weightOption) => {\r\n              weightUOMOptions.push({\r\n                text: weightOption,\r\n                value: weightOption,\r\n              });\r\n            });\r\n\r\n            let volumeUOMs = result.EntityResult.VOLUME;\r\n            let volumeUOMOptions = [];\r\n            volumeUOMs.forEach((volumeOption) => {\r\n              volumeUOMOptions.push({\r\n                text: volumeOption,\r\n                value: volumeOption,\r\n              });\r\n            });\r\n            let lengthUOMs = result.EntityResult.LENGTH;\r\n            let lengthUOMOptions = [];\r\n            lengthUOMs.forEach((lengthOption) => {\r\n              lengthUOMOptions.push({\r\n                text: lengthOption,\r\n                value: lengthOption,\r\n              });\r\n            });\r\n\r\n            this.setState({\r\n              volumeUOMOptions,\r\n              weightUOMOptions,\r\n              lengthUOMOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getUOM:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getUOM:\", error);\r\n      });\r\n  }\r\n\r\n  getCarrierList(shareholder) {\r\n    axios(\r\n      RestAPIs.GetCarrierCodes +\r\n        \"?ShareholderCode=\" +\r\n        shareholder +\r\n        \"&Transportationtype=\" +\r\n        Constants.TransportationType.ROAD,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let carrierOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n\r\n            let carrierSearchOptions = lodash.cloneDeep(carrierOptions);\r\n            if (carrierSearchOptions.length > Constants.filteredOptionsCount) {\r\n              carrierSearchOptions = carrierSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({ carrierOptions, carrierSearchOptions });\r\n\r\n            //this.setState({ carrierOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetCarrierListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Carrier List:\", error);\r\n      });\r\n  }\r\n\r\n  getCarrierSearchOptions() {\r\n    let carrierSearchOptions = lodash.cloneDeep(\r\n      this.state.carrierSearchOptions\r\n    );\r\n    let modCarrierCode = this.state.modTrailer.CarrierCompanyCode;\r\n    if (\r\n      modCarrierCode !== null &&\r\n      modCarrierCode !== \"\" &&\r\n      modCarrierCode !== undefined\r\n    ) {\r\n      let selectedCarrierCode = carrierSearchOptions.find(\r\n        (element) =>\r\n          element.value.toLowerCase() === modCarrierCode.toLowerCase()\r\n      );\r\n      if (selectedCarrierCode === undefined) {\r\n        carrierSearchOptions.push({\r\n          text: modCarrierCode,\r\n          value: modCarrierCode,\r\n        });\r\n      }\r\n    }\r\n    return carrierSearchOptions;\r\n  }\r\n\r\n  getTrailer(isNewTrailer) {\r\n    if (isNewTrailer) {\r\n      let terminalOptions = [];\r\n      emptyTrailer.WeightUOM =\r\n        this.props.userDetails.EntityResult.PageAttibutes.DefaultUOMS.MassUOM;\r\n      this.handleResetAttributeValidationError();\r\n      this.setState(\r\n        {\r\n          trailer: lodash.cloneDeep(emptyTrailer),\r\n          modTrailer: lodash.cloneDeep(emptyTrailer),\r\n          isReadyToRender: true,\r\n          terminalOptions,\r\n          modAttributeMetaDataList: [],\r\n          trailerKPIList:[],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnTrailer\r\n          ),\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode === false)\r\n            this.localNodeAttribute();\r\n        }\r\n        //() => this.getOtherValues(null)\r\n      );\r\n      return;\r\n    }\r\n\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.trailerCode,\r\n        value:\r\n          this.props.selectedRow.Common_Code === undefined\r\n            ? this.state.modTrailer.Code\r\n            : this.props.selectedRow.Common_Code,\r\n      },\r\n    ];\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.trailerCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetTrailer,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            // console.log(\"Trailer\", result.EntityResult);\r\n            // result.EntityResult.MaxLoadableWeight =\r\n            //   result.EntityResult.MaxLoadableWeight +\r\n            //   result.EntityResult.TareWeight;\r\n            result.EntityResult.MaxLoadableWeight_UI =\r\n              result.EntityResult.MaxLoadableWeight +\r\n              result.EntityResult.TareWeight;\r\n            if (\r\n              result.EntityResult.Compartments !== null &&\r\n              result.EntityResult.Compartments.length > 0\r\n            )\r\n              result.EntityResult.Compartments =\r\n                result.EntityResult.Compartments.sort(\r\n                  (a, b) =>\r\n                    a.CompartmentSeqNoInTrailer - b.CompartmentSeqNoInTrailer\r\n                );\r\n          }\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              trailer: lodash.cloneDeep(result.EntityResult),\r\n              modTrailer: lodash.cloneDeep(result.EntityResult),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnTrailer\r\n              ),\r\n            },\r\n            () => {\r\n              this.getTerminalsForCarrier(\r\n                result.EntityResult.CarrierCompanyCode\r\n              );\r\n              this.getKPIList(result.EntityResult.ShareholderCode, result.EntityResult.TrailerCode);\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          emptyTrailer.ShareholderCode = this.props.selectedShareholder;\r\n          emptyTrailer.TrailerType = Constants.TrailerType.NON_RIGID_TRAILER;\r\n          this.setState({\r\n            modTrailer: lodash.cloneDeep(emptyTrailer),\r\n            trailer: lodash.cloneDeep(emptyTrailer),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetTrailer:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Trailer:\", error);\r\n      });\r\n  }\r\n\r\n  handleCarrierSearchChange = (carrierCode) => {\r\n    try {\r\n      let carrierSearchOptions = this.state.carrierOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(carrierCode.toLowerCase())\r\n      );\r\n      if (carrierSearchOptions.length > Constants.filteredOptionsCount) {\r\n        carrierSearchOptions = carrierSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        carrierSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on handleCarrierSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      let modTrailer = { ...this.state.modTrailer };\r\n      if (propertyName === \"CarrierCompanyCode\") {\r\n        this.handleCarrierChange(data);\r\n      }\r\n      modTrailer[propertyName] = data;\r\n\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      if (modTrailer.Active === this.state.trailer.Active) {\r\n        if (\r\n          this.state.trailer.Remarks === modTrailer.Remarks ||\r\n          modTrailer.Remarks === \"\"\r\n        ) {\r\n          validationErrors.Remarks = \"\";\r\n        }\r\n        if (modTrailer.Remarks === \"\")\r\n          modTrailer.Remarks = this.state.trailer.Remarks;\r\n      }\r\n      if (propertyName === \"Active\") {\r\n        if (modTrailer.Active !== this.state.trailer.Active) {\r\n          modTrailer.Remarks = \"\";\r\n        }\r\n      }\r\n\r\n      if (trailerValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          trailerValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n      this.setState({ validationErrors, modTrailer }, () => {\r\n        if (propertyName === \"TerminalCodes\") {\r\n          this.terminalSelectionChange(data);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleRowSelectionChange = (compRow) => {\r\n    this.setState({ selectedCompRow: compRow });\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    let modTrailer = lodash.cloneDeep(this.state.modTrailer);\r\n    if (cellData.field === \"Description\") {\r\n      modTrailer.Compartments[cellData.rowIndex][cellData.field] = newVal;\r\n    }\r\n    if (cellData.field === \"Capacity\") {\r\n      if (isNaN(parseFloat(newVal))) {\r\n        newVal = \"\";\r\n      }\r\n      modTrailer.Compartments[cellData.rowIndex][cellData.field] = newVal;\r\n    }\r\n    if (cellData.field === \"UOM\") {\r\n      modTrailer.Compartments.forEach((comp) => {\r\n        comp.UOM = newVal;\r\n      });\r\n    }\r\n\r\n    this.toggleExpand(modTrailer.Compartments[cellData.rowIndex], true, true);\r\n\r\n    this.setState({ modTrailer });\r\n  };\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCompAttributeCellDataEdit = (compAttribute, value) => {\r\n    let modTrailer = lodash.cloneDeep(this.state.modTrailer);\r\n    let compIndex = modTrailer.Compartments.findIndex(\r\n      (item) =>\r\n        item.CompartmentSeqNoInTrailer === compAttribute.rowData.compSequenceNo\r\n    );\r\n    if (compIndex >= 0)\r\n      modTrailer.Compartments[compIndex].AttributesforUI[\r\n        // compAttribute.rowIndex\r\n        compAttribute.rowData.SeqNumber - 1\r\n      ].AttributeValue = value;\r\n    this.setState({ modTrailer });\r\n    if (compIndex >= 0)\r\n      this.toggleExpand(modTrailer.Compartments[compIndex], true, true);\r\n  };\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      let modTrailer = lodash.cloneDeep(this.state.modTrailer);\r\n      let terminalOptions = [...this.state.terminalOptions];\r\n      if (checked) modTrailer.TerminalCodes = terminalOptions;\r\n      else modTrailer.TerminalCodes = [];\r\n\r\n      this.setState({ modTrailer }, () =>\r\n        this.terminalSelectionChange(modTrailer.TerminalCodes)\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on handleAllTerminalsChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAddCompartment = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        let newComp = {\r\n          Attributes: [],\r\n          Capacity: null,\r\n          Code: null,\r\n          CompartmentSeqNoInTrailer: 0,\r\n          TrailerCode: null,\r\n          ShareholderCode: null,\r\n          CarrierCompanyCode: null,\r\n          Description: \"\",\r\n          FRUOM: null,\r\n          FlangeNo: null,\r\n          MaxFR: null,\r\n          Name: \"\",\r\n          NoofSeals: null,\r\n          UOM: null,\r\n        };\r\n        let modTrailer = lodash.cloneDeep(this.state.modTrailer);\r\n\r\n        if (modTrailer.Compartments !== null) {\r\n          if (modTrailer.Compartments.length > 0)\r\n            newComp.UOM = modTrailer.Compartments[0].UOM;\r\n\r\n          let seqno = 1;\r\n          modTrailer.Compartments.forEach((com) => {\r\n            com.CompartmentSeqNoInTrailer = seqno;\r\n            ++seqno;\r\n          });\r\n          newComp.CompartmentSeqNoInTrailer =\r\n            modTrailer.Compartments.length + 1;\r\n          modTrailer.Compartments.push(newComp);\r\n        }\r\n\r\n        this.setState(\r\n          {\r\n            modTrailer,\r\n            selectedCompRow: [],\r\n          },\r\n          () => {\r\n            if (\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode === false\r\n            ) {\r\n              var attributeMetaDataList = lodash.cloneDeep(\r\n                this.state.compartmentAttributeMetaDataList\r\n              );\r\n              if (attributeMetaDataList.length > 0)\r\n                this.formCompartmentAttributes([\r\n                  attributeMetaDataList[0].TerminalCode,\r\n                ]);\r\n            } else this.formCompartmentAttributes(modTrailer.TerminalCodes);\r\n          }\r\n        );\r\n        // }\r\n      } catch (error) {\r\n        console.log(\r\n          \"TrailerDetailsComposite:Error occured on handleAddCompartment\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDeleteCompartment = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedCompRow != null &&\r\n          this.state.selectedCompRow.length > 0\r\n        ) {\r\n          if (this.state.modTrailer.Compartments.length > 0) {\r\n            let modTrailer = lodash.cloneDeep(this.state.modTrailer);\r\n\r\n            this.state.selectedCompRow.forEach((obj, index) => {\r\n              modTrailer.Compartments = modTrailer.Compartments.filter(\r\n                (com, cindex) => {\r\n                  return (\r\n                    com.CompartmentSeqNoInTrailer !==\r\n                    obj.CompartmentSeqNoInTrailer\r\n                  );\r\n                }\r\n              );\r\n            });\r\n\r\n            let seqno = 1;\r\n            modTrailer.Compartments.forEach((com) => {\r\n              com.CompartmentSeqNoInTrailer = seqno;\r\n              ++seqno;\r\n            });\r\n\r\n            this.setState({ modTrailer });\r\n          }\r\n        }\r\n\r\n        this.setState({ selectedCompRow: [] });\r\n      } catch (error) {\r\n        console.log(\r\n          \"TrailerDetailsComposite:Error occured on handleDeleteCompartment\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleCarrierChange = (carrier) => {\r\n    if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n      this.getTerminalsForCarrier(carrier);\r\n    } else {\r\n      var modTrailer = lodash.cloneDeep(this.state.modTrailer);\r\n      modTrailer.CarrierCompanyCode = carrier;\r\n      var terminalCodes = [];\r\n      modTrailer.TerminalCodes = [];\r\n      this.setState({ terminalCodes, modTrailer });\r\n    }\r\n    if (trailerValidationDef[\"CarrierCompanyCode\"] !== undefined) {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      validationErrors[\"CarrierCompanyCode\"] = Utilities.validateField(\r\n        trailerValidationDef[\"CarrierCompanyCode\"],\r\n        carrier\r\n      );\r\n\r\n      this.setState({ validationErrors });\r\n    }\r\n  };\r\n\r\n  getTerminalsForCarrier(carrier) {\r\n    if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n      const modTrailer = lodash.cloneDeep(this.state.modTrailer);\r\n      let terminalOptions = [...this.state.terminalOptions];\r\n      modTrailer.CarrierCompanyCode = carrier;\r\n\r\n      try {\r\n        if (carrier === undefined) {\r\n          terminalOptions = [];\r\n          modTrailer.TerminalCodes = [];\r\n          this.setState({ terminalOptions, modTrailer }, () =>\r\n            this.formCompartmentAttributes([])\r\n          );\r\n          return;\r\n        }\r\n        let keyCode = [\r\n          {\r\n            key: KeyCodes.carrierCode,\r\n            value: carrier,\r\n          },\r\n          {\r\n            key: KeyCodes.transportationType,\r\n            value: Constants.TransportationType.ROAD,\r\n          },\r\n        ];\r\n        let obj = {\r\n          ShareHolderCode: this.props.selectedShareholder,\r\n          keyDataCode: KeyCodes.carrierCode,\r\n          KeyCodes: keyCode,\r\n        };\r\n        axios(\r\n          RestAPIs.GetCarrier,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            let result = response.data;\r\n\r\n            if (\r\n              result.IsSuccess === true &&\r\n              result.EntityResult !== null &&\r\n              result.EntityResult.TerminalCodes !== null\r\n            ) {\r\n              terminalOptions = [...result.EntityResult.TerminalCodes];\r\n              this.setState({ terminalOptions });\r\n            } else {\r\n              terminalOptions = [];\r\n\r\n              this.setState({ terminalOptions });\r\n            }\r\n            let trailer = { ...this.state.trailer };\r\n            if (\r\n              trailer.Code === undefined ||\r\n              trailer.Code === \"\" ||\r\n              trailer.Code === null\r\n            ) {\r\n              if (terminalOptions.length === 1) {\r\n                modTrailer.TerminalCodes = [...terminalOptions];\r\n                //this.terminalSelectionChange(modTrailer.TerminalCodes);\r\n              } else {\r\n                modTrailer.TerminalCodes = [];\r\n                //this.terminalSelectionChange([]);\r\n              }\r\n            }\r\n\r\n            if (Array.isArray(modTrailer.TerminalCodes)) {\r\n              modTrailer.TerminalCodes = terminalOptions.filter((x) =>\r\n                modTrailer.TerminalCodes.includes(x)\r\n              );\r\n            }\r\n            this.setState({ modTrailer }, () =>\r\n              //this.formCompartmentAttributes());\r\n              this.terminalSelectionChange(modTrailer.TerminalCodes)\r\n            );\r\n          })\r\n          .catch((error) => {\r\n            terminalOptions = [];\r\n            modTrailer.TerminalCodes = [];\r\n            this.setState({ terminalOptions, modTrailer }, () =>\r\n              this.formCompartmentAttributes([])\r\n            );\r\n            console.log(\"Error while getting Carrier:\", error, carrier);\r\n            //throw error;\r\n          });\r\n      } catch (error) {\r\n        terminalOptions = [];\r\n        modTrailer.TerminalCodes = [];\r\n        this.setState({ terminalOptions, modTrailer }, () =>\r\n          this.formCompartmentAttributes([])\r\n        );\r\n        console.log(\r\n          \"TrailerDetailsComposite:Error occured on handleCarrierChange\",\r\n          error\r\n        );\r\n      }\r\n    } else {\r\n      this.formCompartmentAttributes([]);\r\n    }\r\n  }\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modTrailer = lodash.cloneDeep(this.state.modTrailer);\r\n      modTrailer.ShareholderCode = this.props.selectedShareholder;\r\n      modTrailer.TrailerType = Constants.TrailerType.NON_RIGID_TRAILER;\r\n      modTrailer.TransportationType = Constants.TransportationType.ROAD;\r\n      modTrailer.Compartments.forEach((comp) => {\r\n        comp.TrailerCode = modTrailer.Code;\r\n        comp.ShareholderCode = modTrailer.ShareholderCode;\r\n        comp.CarrierCompanyCode = modTrailer.CarrierCompanyCode;\r\n        if (comp.Capacity !== null && comp.Capacity !== \"\")\r\n          comp.Capacity = comp.Capacity.toLocaleString();\r\n        if (comp.Code === null || comp.Code === \"\") {\r\n          comp.Code = Utilities.generateCompartmentCode(\r\n            modTrailer.Compartments\r\n          ).toString();\r\n        }\r\n        if (comp.AttributesforUI !== undefined && comp.AttributesforUI != null)\r\n          comp.AttributesforUI =\r\n            Utilities.compartmentAttributesConverttoLocaleString(\r\n              comp.AttributesforUI\r\n            );\r\n      });\r\n\r\n      if (modTrailer.Height === \"\") modTrailer.Height = null;\r\n      if (modTrailer.Length === \"\") modTrailer.Length = null;\r\n      if (modTrailer.Width === \"\") modTrailer.Width = null;\r\n      if (modTrailer.TareWeight !== null && modTrailer.TareWeight !== \"\")\r\n        modTrailer.TareWeight = modTrailer.TareWeight.toLocaleString();\r\n      if (\r\n        modTrailer.MaxLoadableWeight_UI !== null &&\r\n        modTrailer.MaxLoadableWeight_UI !== \"\"\r\n      )\r\n        modTrailer.MaxLoadableWeight =\r\n          modTrailer.MaxLoadableWeight_UI.toLocaleString();\r\n      if (modTrailer.Height !== null && modTrailer.Height !== \"\")\r\n        modTrailer.Height = modTrailer.Height.toLocaleString();\r\n      if (modTrailer.Length !== null && modTrailer.Length !== \"\")\r\n        modTrailer.Length = modTrailer.Length.toLocaleString();\r\n      if (modTrailer.Width !== null && modTrailer.Width !== \"\")\r\n        modTrailer.Width = modTrailer.Width.toLocaleString();\r\n\r\n      return modTrailer;\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on fillDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  convertStringtoDecimal(modTrailer, attributeList) {\r\n    try {\r\n      modTrailer.TareWeight = Utilities.convertStringtoDecimal(\r\n        modTrailer.TareWeight\r\n      );\r\n\r\n      if (modTrailer.Height !== null && modTrailer.Height !== \"\") {\r\n        modTrailer.Height = Utilities.convertStringtoDecimal(modTrailer.Height);\r\n      }\r\n      if (modTrailer.Length !== null && modTrailer.Length !== \"\") {\r\n        modTrailer.Length = Utilities.convertStringtoDecimal(modTrailer.Length);\r\n      }\r\n      if (modTrailer.Width !== null && modTrailer.Width !== \"\") {\r\n        modTrailer.Width = Utilities.convertStringtoDecimal(modTrailer.Width);\r\n      }\r\n\r\n      modTrailer.MaxLoadableWeight = parseFloat(\r\n        Utilities.convertStringtoDecimal(modTrailer.MaxLoadableWeight_UI) -\r\n          modTrailer.TareWeight\r\n      );\r\n\r\n      modTrailer.Compartments.forEach((com) => {\r\n        com.Capacity = Utilities.convertStringtoDecimal(com.Capacity);\r\n      });\r\n      modTrailer = this.fillAttributeDetails(modTrailer, attributeList);\r\n      return modTrailer;\r\n    } catch (err) {\r\n      console.log(\"convertStringtoDecimal on trailer details\", err);\r\n    }\r\n  }\r\n\r\n  saveTrailer = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempTrailer = lodash.cloneDeep(this.state.tempTrailer);\r\n\r\n      this.state.trailer.Code === \"\"\r\n        ? this.createTrailer(tempTrailer)\r\n        : this.updateTrailer(tempTrailer);\r\n    } catch (error) {\r\n      console.log(\"TrailersComposite : Error in saveTrailer\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n      let returnValue = Object.values(this.state.validationErrors).every(\r\n        function (value) {\r\n          return value === \"\";\r\n        }\r\n      );\r\n      if (returnValue) {\r\n     //   this.setState({ saveEnabled: false });\r\n        let modTrailer = this.fillDetails();\r\n        let attributeList = Utilities.attributesConverttoLocaleString(\r\n          this.state.modAttributeMetaDataList\r\n        );\r\n        if (this.validateSave(modTrailer, attributeList)) {\r\n          modTrailer = this.convertStringtoDecimal(modTrailer, attributeList);\r\n          modTrailer = Utilities.convertDatesToString(\r\n            DateFieldsInEntities.DatesInEntity.Trailer,\r\n            modTrailer\r\n          );\r\n          let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempTrailer = lodash.cloneDeep(modTrailer);\r\n        this.setState({ showAuthenticationLayout, tempTrailer }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveTrailer();\r\n          }\r\n      });\r\n        } else {\r\n          this.setState({ saveEnabled: true });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"TrailerDetailsComposite:Error occured on handleSave\", error);\r\n    }\r\n  };\r\n\r\n  validateSave(modTrailer, attributeList) {\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(trailerValidationDef).forEach(function (key) {\r\n      if (modTrailer[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          trailerValidationDef[key],\r\n          modTrailer[key]\r\n        );\r\n    });\r\n\r\n    if (modTrailer.Active !== this.state.trailer.Active) {\r\n      if (modTrailer.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"Trailer_RemarksRequired\";\r\n      }\r\n    }\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"TrailerDetails_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    if (\r\n      (modTrailer.Height !== null ||\r\n        modTrailer.Width != null ||\r\n        modTrailer.Length !== null) &&\r\n      modTrailer.LWHUOM === null\r\n    ) {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [\"Trailer_Code\"],\r\n        keyValues: [modTrailer.Code],\r\n        isSuccess: false,\r\n        errorMessage: \"Trailer_UOMDimensionRequired\",\r\n      });\r\n    }\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n\r\n    let returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    else return returnValue;\r\n\r\n    if (modTrailer.Compartments.length > 0) {\r\n      if (modTrailer.Compartments.length <= this.state.maxNumberOfCompartments) {\r\n         modTrailer.Compartments.forEach((com) => {\r\n        trailerCompartmentValidationDef.forEach((col) => {\r\n          let err = \"\";\r\n\r\n          if (col.validator !== undefined) {\r\n            err = Utilities.validateField(col.validator, com[col.field]);\r\n          }\r\n\r\n          if (err !== \"\") {\r\n            notification.messageResultDetails.push({\r\n              keyFields: [\"Trailer_CompCode\", col.displayName],\r\n              keyValues: [com.Code, com[col.field]],\r\n              isSuccess: false,\r\n              errorMessage: err,\r\n            });\r\n          }\r\n        });\r\n        if (com.AttributesforUI !== null && com.AttributesforUI !== undefined) {\r\n          com.AttributesforUI.forEach((item) => {\r\n            let errMsg = Utilities.valiateAttributeField(\r\n              item,\r\n              item.AttributeValue\r\n            );\r\n            if (errMsg !== \"\") {\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                notification.messageResultDetails.push({\r\n                  keyFields: [\r\n                    \"CompAttributeComp\",\r\n                    \"CompAttributeTerminal\",\r\n                    item.AttributeName,\r\n                  ],\r\n                  keyValues: [com.Code, item.TerminalCode, item.AttributeValue],\r\n                  isSuccess: false,\r\n                  errorMessage: errMsg,\r\n                });\r\n              } else {\r\n                notification.messageResultDetails.push({\r\n                  keyFields: [\"CompAttributeComp\", item.AttributeName],\r\n                  keyValues: [com.Code, item.AttributeValue],\r\n                  isSuccess: false,\r\n                  errorMessage: errMsg,\r\n                });\r\n              }\r\n            }\r\n          });\r\n        }\r\n        this.toggleExpand(com, true, true);\r\n      });\r\n      }\r\n      else {\r\n         notification.messageResultDetails.push({\r\n        keyFields: [\"Trailer_Code\"],\r\n        keyValues: [modTrailer.Code],\r\n        isSuccess: false,\r\n        errorMessage: \"Compartment_limit_Exceeded\",\r\n      });\r\n      }\r\n     \r\n    } else {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [\"Trailer_Code\"],\r\n        keyValues: [modTrailer.Code],\r\n        isSuccess: false,\r\n        errorMessage: \"TrailerInfo_CompartmentRequired\",\r\n      });\r\n    }\r\n\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modTrailer, \"update\", notification);\r\n      return false;\r\n    }\r\n\r\n    return returnValue;\r\n  }\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(attributeMetaDataList),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on handleResetAttributeValidationError\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  createTrailer(modTrailer) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.trailerCode,\r\n        value: modTrailer.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.trailerCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modTrailer,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"TrailerDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Trailer_Code\"],\r\n          keyValues: [modTrailer.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateTrailer,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            // trailer: lodash.cloneDeep(modTrailer),\r\n            // modTrailer: lodash.cloneDeep(modTrailer),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnTrailer\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n\r\n          this.getTrailer(false);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnTrailer\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in CreateTrailer:\", result.ErrorList);\r\n        }\r\n        //console.log(notification);\r\n        this.props.onSaved(this.state.modTrailer, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnTrailer\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modTrailer, \"add\", notification);\r\n      });\r\n  }\r\n  updateTrailer(modTrailer) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.trailerCode,\r\n        value: modTrailer.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.trailerCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modTrailer,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"TrailerDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Trailer_Code\"],\r\n          keyValues: [modTrailer.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateTrailer,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            // trailer: lodash.cloneDeep(modTrailer),\r\n            // modTrailer: lodash.cloneDeep(modTrailer),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnTrailer\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          this.getTrailer(false);\r\n        } else {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnTrailer\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in UpdateTrailer:\", result.ErrorList);\r\n        }\r\n        //console.log(notification);\r\n        this.props.onSaved(this.state.modTrailer, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modTrailer, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnTrailer\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n      });\r\n  }\r\n  handleReset = () => {\r\n    try {\r\n      var modTrailer = lodash.cloneDeep(this.state.trailer);\r\n      this.setState(\r\n        {\r\n          modTrailer,\r\n          modAttributeMetaDataList: [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(modTrailer.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n\r\n      if (this.state.trailer.Code === \"\") {\r\n        //let terminalOptions = { ...this.state.terminalOptions };\r\n        let terminalOptions = [];\r\n        this.setState({ terminalOptions });\r\n      }\r\n      let validationErrors = { ...this.state.validationErrors };\r\n      Object.keys(validationErrors).forEach((key) => {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState({ validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  //Get KPI for Trailer details\r\n  getKPIList(shareholder,trailerCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      let objKPIRequestData = {\r\n        PageName: kpiTrailerDetail,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder }, { key: \"TrailerCode\", value: trailerCode }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              trailerKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ trailerKPIList: [] });\r\n            console.log(\"Error in Trailer KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting trailer KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      var validationErrors = { ...this.state.validationErrors };\r\n      var modTrailer = lodash.cloneDeep(this.state.modTrailer);\r\n      validationErrors[propertyName] = error;\r\n      modTrailer[propertyName] = value;\r\n      this.setState({ validationErrors, modTrailer });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    const listOptions = {\r\n      //carriers: this.state.carrierOptions,\r\n      carriers: this.getCarrierSearchOptions(),\r\n      productType: this.state.productTypeOptions,\r\n      loadingType: this.state.loadingTypeOptions,\r\n      unitOfWeight: this.state.weightUOMOptions,\r\n      unitOfVolume: this.state.volumeUOMOptions,\r\n      unitOfDimension: this.state.lengthUOMOptions,\r\n      terminalCodes: this.state.terminalOptions,\r\n      hazardousTankerCategoryOptions: this.state.hazardousTankerCategoryOptions,\r\n    };\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"Trailer_LastUpdated\",\r\n        fieldValue:\r\n          new Date(this.state.modTrailer.LastUpdateTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modTrailer.LastUpdateTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"Trailer_LastActiveTime\",\r\n        fieldValue:\r\n          this.state.modTrailer.LastActiveTime !== undefined &&\r\n          this.state.modTrailer.LastActiveTime !== null\r\n            ? new Date(\r\n                this.state.modTrailer.LastActiveTime\r\n              ).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(\r\n                this.state.modTrailer.LastActiveTime\r\n              ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"Trailer_CreateTime\",\r\n        fieldValue:\r\n          new Date(this.state.modTrailer.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modTrailer.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.trailer.Code}\r\n            newEntityName=\"Trailer_NewTrailer\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <TMDetailsKPILayout KPIList={this.state.trailerKPIList}> </TMDetailsKPILayout>\r\n        <ErrorBoundary>\r\n          <TrailerDetails\r\n            trailer={this.state.trailer}\r\n            modTrailer={this.state.modTrailer}\r\n            validationErrors={this.state.validationErrors}\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            listOptions={listOptions}\r\n            onFieldChange={this.handleChange}\r\n            onAllTerminalsChange={this.handleAllTerminalsChange}\r\n            selectedCompRow={this.state.selectedCompRow}\r\n            handleRowSelectionChange={this.handleRowSelectionChange}\r\n            onCarrierSearchChange={this.handleCarrierSearchChange}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            onAttributeDataChange={this.handleAttributeDataChange}\r\n            handleCompAttributeCellDataEdit={\r\n              this.handleCompAttributeCellDataEdit\r\n            }\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            handleAddCompartment={this.handleAddCompartment}\r\n            handleDeleteCompartment={this.handleDeleteCompartment}\r\n            toggleExpand={this.toggleExpand}\r\n            expandedRows={this.state.expandedRows}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            compartmentDetailsPageSize={\r\n              this.props.userDetails.EntityResult.PageAttibutes\r\n                .WebPortalListPageSize\r\n            }\r\n            onDateTextChange={this.handleDateTextChange}\r\n            hazardousEnabled={this.state.hazardousEnabled}\r\n          ></TrailerDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.trailer.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnTrailer}\r\n            handleOperation={this.saveTrailer}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TrailerDetailsComposite);\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Select, Checkbox } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nAssociatedTerminals.propTypes = {\r\n  terminalList: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedTerminal: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  validationError: PropTypes.string,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCheckChange: PropTypes.func.isRequired,\r\n};\r\nAssociatedTerminals.defaultProps = {\r\n  terminalList: [],\r\n  selectedTerminal: [],\r\n  validationError: \"\",\r\n};\r\nexport function AssociatedTerminals({\r\n  terminalList,\r\n  selectedTerminal,\r\n  validationError,\r\n  onFieldChange,\r\n  onCheckChange,\r\n}) {\r\n  //console.log(\"component terminalList\", terminalList);\r\n  if (selectedTerminal === null) selectedTerminal = [];\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div style={{ width: \"80%\" }}>\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"TerminalCodes\")}\r\n              value={selectedTerminal}\r\n              multiple={true}\r\n              options={Utilities.transferListtoOptions(terminalList)}\r\n              onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n              error={t(validationError)}\r\n              disabled={terminalList.length === 0}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"ddlSelectAll\">\r\n            <Checkbox\r\n              label={t(\"Common_All\")}\r\n              checked={\r\n                Array.isArray(selectedTerminal) &&\r\n                selectedTerminal.length === terminalList.length\r\n              }\r\n              onChange={(checked) => onCheckChange(checked)}\r\n            ></Checkbox>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","export const DatesInEntity={\r\n    Driver : [\r\n    \"License1ExpiryDate\",\r\n    \"License1IssueDate\",\r\n    \"License2IssueDate\",\r\n    \"License2ExpiryDate\",\r\n    \"License3IssueDate\",\r\n    \"License3ExpiryDate\",\r\n    \"HazardousLicenseExpiry\"\r\n  ],\r\n  CarrierCompany:[\"PermitExpiryDate\"],\r\n  PrimeMover:[\"RoadTaxNoIssueDate\",\"RoadTaxNoExpiryDate\",\"licenseExpiryDate\"],\r\n  Wagon:[\"LicenseExpiryDate\"],\r\n  Vehicle:[\"LicenseNoIssueDate\",\"LicenseNoExpiryDate\",\r\n  \"RoadTaxNoIssueDate\",\"RoadTaxNoExpiryDate\",\"Bondexpirydate\",\"HazardousLicenseExpiry\"],\r\n  Contract:[\"StartDate\",\"EndDate\"],\r\n  ContractItem:[\"StartDate\",\"EndDate\"],\r\n  Order:[\"OrderStartDate\",\"OrderEndDate\",\"OrderDate\",\"DeliveryDate\"],\r\n  AccessCard:[\"ExpiryDate\",\"IssueDate\",\"PasswordExpiryDate\"],\r\n  Trailer:[\"HazardousLicenseExpiry\"],\r\n  };","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMDetailsKPILayout","_ref","KPIList","pageName","rowHeight","widgetHeight","isDraggable","isResizable","kpiDisplayTopBreakpoint","KPIDisplays","setKPIDisplays","useState","kpiDiv","React","hideKpis","currentScrollPos","window","pageYOffset","KPIDisplay","current","getBoundingClientRect","top","useEffect","addEventListener","removeEventListener","_jsx","ref","children","TranslationConsumer","t","style","marginTop","ErrorBoundary","KPIDashboardLayout","kpiList","defaultProps","TrailerDetails","trailer","modTrailer","validationErrors","attributeValidationErrors","listOptions","onFieldChange","onDateTextChange","onAllTerminalsChange","selectedCompRow","modAttributeMetaDataList","expandedRows","handleRowSelectionChange","handleCellDataEdit","onAttributeDataChange","handleCompAttributeCellDataEdit","handleAddCompartment","handleDeleteCompartment","isEnterpriseNode","toggleExpand","compartmentDetailsPageSize","onCarrierSearchChange","hazardousEnabled","useTranslation","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","handleAttributeType","data","attribute","rowData","handleAttributeDateValue","dateval","chars","split","Date","convertAttributeDatetoString","value","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","Constants","STRING","INT","Input","fluid","AttributeValue","disabled","IsReadonly","onChange","reserveSpace","FLOAT","LONG","DOUBLE","undefined","toLocaleString","BOOL","Checkbox","checked","toString","DATETIME","DatePicker","showYearSelector","onTextChange","error","console","log","handleIsRequiredCompAttributes","IsMandatory","_jsxs","AttributeName","class","handleTextEdit","cellData","val","Compartments","rowIndex","field","className","Code","label","indicator","Name","Description","Select","placeholder","CarrierCompanyCode","options","carriers","search","noResultsMessage","onSearch","ProductType","productType","LoadingType","loadingType","TareWeight","MaxLoadableWeight_UI","WeightUOM","unitOfWeight","Height","Width","Length","LWHUOM","getOptionsWithSelect","unitOfDimension","MaxLoadableVolume","VolumeUOM","unitOfVolume","display","justifyContent","width","HazardousCategory","hazardousTankerCategoryOptions","HazardousLicenseExpiry","convertStringToCommonDateFormat","displayFormat","getCurrentDateFormat","disablePast","Active","text","Remarks","AssociatedTerminals","terminalList","terminalCodes","selectedTerminal","TerminalCodes","onCheckChange","length","map","attire","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","onClick","Icon","root","name","size","DataTable","rowExpansionTemplate","Array","isArray","AttributesforUI","rows","Column","header","editable","renderer","Pagination","scrollable","scrollHeight","selectionMode","selection","onSelectionChange","editFieldType","customEditRenderer","handleIsRequiredCompartmentCell","dropDownOptions","initialWidth","open","findIndex","x","CompartmentSeqNoInTrailer","TrailerDetailsComposite","Component","constructor","_this","arguments","this","state","Utilities","trailerValidationDef","isReadyToRender","carrierOptions","carrierSearchOptions","terminalOptions","lengthUOMOptions","volumeUOMOptions","weightUOMOptions","productTypeOptions","loadingTypeOptions","compartmentAttributeMetaDataList","saveEnabled","trailerKPIList","maxNumberOfCompartments","showAuthenticationLayout","tempTrailer","isTerminalAdded","expandedRowIndex","item","splice","push","filter","setState","handleCarrierSearchChange","carrierCode","includes","handleChange","propertyName","handleCarrierChange","terminalSelectionChange","compRow","newVal","lodash","isNaN","parseFloat","forEach","comp","UOM","handleAttributeDataChange","matchedAttributes","matchedAttributesList","modattribute","DefaultValue","compAttribute","compIndex","compSequenceNo","SeqNumber","handleAllTerminalsChange","props","userDetails","EntityResult","IsArchived","newComp","Attributes","Capacity","TrailerCode","ShareholderCode","FRUOM","FlangeNo","MaxFR","NoofSeals","seqno","com","IsEnterpriseNode","formCompartmentAttributes","obj","index","cindex","carrier","getTerminalsForCarrier","saveTrailer","createTrailer","updateTrailer","handleSave","Object","values","every","fillDetails","attributeList","validateSave","convertStringtoDecimal","DateFieldsInEntities","Trailer","IsWebPortalUser","handleReset","handleResetAttributeValidationError","localNodeAttribute","keys","key","handleDateTextChange","handleAuthenticationClose","componentDidMount","getHazardousLookup","getCarrierList","selectedShareholder","getUOMList","getProductTypes","getLoadingTypes","isNewTrailer","selectedRow","Common_Code","getAttributes","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","getHazardousCategories","parseInt","categoryOptions","ErrorList","catch","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","trailerAttribute","valueAttribute","ListOfAttributeData","AttributeCode","compAttributeMetaDataList","componentWillReceiveProps","nextProps","getTrailer","trailerAttributeEntity","trailerCompAttributeEntity","TRAILER","TRAILERCOMPARTMENT","attributes","attTerminal","some","selTerminal","compAttributes","att","DisplayName","MinValue","MaxValue","ValidationFormat","attributesforNewComp","tempCompAttributes","attData","tempAttIndex","assignedAttributes","fillAttributeDetails","terminalAttributes","termAtt","weightUOMs","MASS","weightOption","volumeUOMs","VOLUME","volumeOption","lengthUOMs","LENGTH","lengthOption","shareholder","ROAD","getCarrierSearchOptions","modCarrierCode","element","emptyTrailer","PageAttibutes","DefaultUOMS","MassUOM","FunctionsList","functionGroups","add","fnTrailer","keyCode","KeyCodes","ShareHolderCode","keyDataCode","MaxLoadableWeight","sort","a","b","modify","getKPIList","TrailerType","NON_RIGID_TRAILER","TransportationType","err","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","returnValue","trailerCompartmentValidationDef","col","validator","displayName","errMsg","onSaved","Entity","trailerCode","view","fnKPIInformation","objKPIRequestData","PageName","kpiTrailerDetail","InputParameters","ListKPIDetails","render","popUpContents","fieldName","fieldValue","LastUpdateTime","toLocaleDateString","toLocaleTimeString","LastActiveTime","CreatedTime","TMDetailsHeader","entityCode","newEntityName","WebPortalListPageSize","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","validationError","multiple","margin","Popup","marginLeft","position","List","content","Button","float","IsVisible","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","DatesInEntity","Driver","CarrierCompany","PrimeMover","Wagon","Vehicle","Contract","ContractItem","Order","AccessCard","ddlOptions","selectOptionText","option","unshift","language","navigator","userLanguage","moment","longDateFormat"],"sourceRoot":""}