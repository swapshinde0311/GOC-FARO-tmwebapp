{"version":3,"file":"static/js/8208.98ad45f5.chunk.js","mappings":"kOAKe,SAASA,EAAkBC,GAQtC,IARuC,QACvCC,EAAO,SACPC,EAAQ,UACRC,EAAS,aACTC,EAAY,YACZC,EAAW,YACXC,EAAW,wBACXC,GACHP,EACG,MAAOQ,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,GAEzCC,EAASC,EAAAA,OAAa,MAEtBC,EAAWA,KACb,IAAIC,EAAmBC,OAAOC,YAC1BC,EAAaT,EAGjB,GAAIG,EAAOO,SAAWP,EAAOO,QAAQC,wBAAwBC,IAAMb,EAC/DU,EAAa,MAGZ,IAAyB,IAArBH,EAIL,OAHAG,EAAa,CAIjB,CAEAR,EAAeQ,EAAW,EAkB9B,OAfAI,EAAAA,EAAAA,YAAU,KACgB,qBAAXN,QACPA,OAAOO,iBAAiB,SAAUT,EACtC,KAIJQ,EAAAA,EAAAA,YAAU,IAEC,KACHN,OAAOQ,oBAAoB,SAAUV,EAAS,GAGnD,KAGCW,EAAAA,EAAAA,KAAA,OAAKC,IAAKd,EAAOe,SACI,IAAhBlB,GAAoBgB,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SACnCE,IACEJ,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEC,UAAW,OAAQJ,UAC7BF,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACVF,EAAAA,EAAAA,KAACQ,EAAAA,EAAkB,CACfC,QAAShC,EACTI,YAAaA,EACbC,YAAaA,EACbH,UAAWA,EACXC,aAAcA,EACdF,SAAUA,UAML,IAGrC,CAMAH,EAAmBmC,aAAe,CAC9B3B,wBAAyB,I,4IC9CtB,SAAS4B,EAAenC,GAgB3B,IAhB4B,SAC9BoC,EAAQ,YACRC,EAAW,iBACXC,EAAgB,iBAChBC,EAAgB,0BAChBC,EAAyB,YACzBC,EAAW,cACXC,EAAa,qBACbC,EAAoB,qBACpBC,EAAoB,iBACpBC,EAAgB,yBAChBC,EAAwB,sBACxBC,EAAqB,aACrBC,EAAY,6BACZC,EAA4B,sBAC5BC,GACDlD,EAEC,MAAMmD,EAA8BA,CAACX,EAA2BY,KAC9D,IAAIC,EAAsB,GAI1B,OAHAA,EAAsBb,EAA0Bc,MAAMC,GAC7CA,EAAkBC,eAAiBJ,IAErCC,EAAoBb,yBAAyB,EAGtD,OACEhB,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SAChBE,IACA6B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBhC,SAAA,EAC/B+B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKhC,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACvCF,EAAAA,EAAAA,KAACmC,EAAAA,MAAK,CACJC,OAAK,EACLC,MAAOxB,EAAYyB,KACnBC,MAAOnC,EAAE,aACToC,UAAU,WACVC,SAA4B,KAAlB7B,EAAS0B,KACnBI,SAAWC,GAASzB,EAAc,OAAQyB,GAC1CC,MAAOxC,EAAEW,EAAiBuB,MAC1BO,cAAc,OAGlB7C,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACvCF,EAAAA,EAAAA,KAACmC,EAAAA,MAAK,CACJC,OAAK,EACLC,MAAOxB,EAAYiC,KACnBP,MAAOnC,EAAE,aACToC,UAAU,WACVE,SAAWC,GAASzB,EAAc,OAAQyB,GAC1CC,MAAOxC,EAAEW,EAAiB+B,MAC1BD,cAAc,OAGlB7C,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACvCF,EAAAA,EAAAA,KAAC+C,EAAAA,OAAM,CACLX,OAAK,EACLY,YAAY,SACZX,MAAOxB,EAAYoC,oBACnBV,MAAOnC,EAAE,uBACToC,UAAU,WACVU,QAASC,EAAAA,GACPlC,EAAYmC,gBAEdV,SAAWC,GAASzB,EAAc,sBAAuByB,GACzDC,MAAOxC,EAAEW,EAAiBkC,qBAC1BR,SAAgD,IAAtCxB,EAAYmC,eAAeC,OACrCC,UAAU,EACVT,cAAc,EACdU,QAAQ,EACRC,iBAAkBpD,EAAE,yBAGxBJ,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACvCF,EAAAA,EAAAA,KAACmC,EAAAA,MAAK,CACJC,OAAK,EACLC,MAC8B,OAA5BxB,EAAY4C,YACR,GACA5C,EAAY4C,YAElBf,SAAWC,GAASzB,EAAc,cAAeyB,GACjDJ,MAAOnC,EAAE,oBACTwC,MAAOxC,EAAEW,EAAiB0C,aAC1BZ,cAAc,OAGlB7C,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACvCF,EAAAA,EAAAA,KAAC+C,EAAAA,OAAM,CACLX,OAAK,EACLY,YAAY,SACZX,MAAOxB,EAAY6C,aACnBnB,MAAOnC,EAAE,yBACToC,UAAU,WACVU,QAASjC,EAAY0C,gBACrBjB,SAAWC,GAASzB,EAAc,eAAgByB,GAClDC,MAAOxC,EAAEW,EAAiB2C,cAC1Bb,cAAc,EACdU,QAAQ,EACRC,iBAAkBpD,EAAE,yBAGxBJ,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACvCF,EAAAA,EAAAA,KAACmC,EAAAA,MAAK,CACJC,OAAK,EACLC,MACgC,OAA9BxB,EAAY+C,cACR,GACA/C,EAAY+C,cAElBlB,SAAWC,GAASzB,EAAc,gBAAiByB,GACnDJ,MAAOnC,EAAE,sBACTwC,MAAOxC,EAAEW,EAAiB6C,eAC1Bf,cAAc,OAGlB7C,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACvCF,EAAAA,EAAAA,KAACmC,EAAAA,MAAK,CACJC,OAAK,EACLC,MAA+B,OAAxBxB,EAAYgD,QAAmB,GAAKhD,EAAYgD,QACvDnB,SAAWC,GAASzB,EAAc,UAAWyB,GAC7CJ,MAAOnC,EAAE,gBACTwC,MAAOxC,EAAEW,EAAiB8C,SAC1BhB,cAAc,OAIlB7C,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACvCF,EAAAA,EAAAA,KAACmC,EAAAA,MAAK,CACJC,OAAK,EACLC,MAA8B,OAAvBxB,EAAYiD,OAAkB,GAAKjD,EAAYiD,OACtDvB,MAAOnC,EAAE,eACTsC,SAAWC,GAASzB,EAAc,SAAUyB,GAC5CC,MAAOxC,EAAEW,EAAiB+C,QAC1BjB,cAAc,OAGlB7C,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACvCF,EAAAA,EAAAA,KAACmC,EAAAA,MAAK,CACJC,OAAK,EACLC,MAA6B,OAAtBxB,EAAYkD,MAAiB,GAAKlD,EAAYkD,MACrDxB,MAAOnC,EAAE,cACTsC,SAAWC,GAASzB,EAAc,QAASyB,GAC3CC,MAAOxC,EAAEW,EAAiBgD,OAC1BlB,cAAc,OAGlB7C,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACvCF,EAAAA,EAAAA,KAACmC,EAAAA,MAAK,CACJC,OAAK,EACLC,MAA6B,OAAtBxB,EAAYmD,MAAiB,GAAKnD,EAAYmD,MACrDzB,MAAOnC,EAAE,cACTsC,SAAWC,GAASzB,EAAc,QAASyB,GAC3CC,MAAOxC,EAAEW,EAAiBiD,OAC1BnB,cAAc,OAGlB7C,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACvCF,EAAAA,EAAAA,KAAC+C,EAAAA,OAAM,CACLX,OAAK,EACLY,YAAa5C,EAAE,8BACfmC,MAAOnC,EAAE,eACTiC,MAAOxB,EAAYoD,OACnBf,QAAS,CACP,CAAEgB,KAAM9D,EAAE,mBAAoBiC,OAAO,GACrC,CAAE6B,KAAM9D,EAAE,+BAAgCiC,OAAO,IAEnDK,SAAWC,GAASvB,EAAqBuB,QAG7C3C,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACvCF,EAAAA,EAAAA,KAACmC,EAAAA,MAAK,CACJC,OAAK,EACLC,MAA+B,OAAxBxB,EAAYsD,QAAmB,GAAKtD,EAAYsD,QACvD5B,MAAOnC,EAAE,gBACTsC,SAAWC,GAASzB,EAAc,UAAWyB,GAC7CH,UACE3B,EAAYoD,SAAWrD,EAASqD,OAAS,WAAa,GAExDrB,MAAOxC,EAAEW,EAAiBoD,SAC1BtB,cAAc,MAGjBxB,GACErB,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACxCF,EAAAA,EAAAA,KAACoE,EAAAA,EAAmB,CAClBC,aAAcpD,EAAYqD,cAC1BC,iBAAkB1D,EAAY2D,cAC9B5B,MAAOxC,EAAEW,EAAiByD,eAC1BtD,cAAeA,EACfuD,cAAetD,MAER,MAGbG,EAAyB+B,OAAS,EAClC/B,EAAyBoD,KAAKC,IAC1B3E,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACZF,EAAAA,EAAAA,KAAC4E,EAAAA,UAAS,CAAA1E,UACRF,EAAAA,EAAAA,KAAC4E,EAAAA,UAAUC,QAAO,CAChB3C,UAAU,qBACV4C,MAAOzD,EAAoBsD,EAAU3C,aAAe,MAAQ5B,EAAE,qBAAyBA,EAAE,qBAAsBF,UAE/GF,EAAAA,EAAAA,KAAC+E,EAAAA,EAAgB,CACfC,sBAAuBL,EAAUM,sBACjCC,mBAAoB3D,EACpBP,0BAA2BW,EAA4BX,EAA2B2D,EAAU3C,wBAKlG,KAINR,GAAgBV,GAAoBA,EAAiBuC,OAAS,GAC5DrD,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACZF,EAAAA,EAAAA,KAAC4E,EAAAA,UAAS,CAAA1E,UACRF,EAAAA,EAAAA,KAAC4E,EAAAA,UAAUC,QAAO,CAChB3C,UAAU,qBACV4C,MAAO1E,EAAE,0BAA0BF,SAGjCY,EAAiB4D,KAAKS,IAEpBnF,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACvCF,EAAAA,EAAAA,KAACmC,EAAAA,MAAK,CACJC,OAAK,EACLG,MAAOnC,EAAE+E,EAAaC,YACtB/C,MAA8B,OAAvB8C,EAAaE,MAAiB,GAAKF,EAAaE,MACvD7C,UAAW,WACXE,SAAWL,GAAUX,EAAsByD,EAAc9C,GACzDO,MAAOxC,EAAEqB,EAA6B0D,EAAaG,KACnDzC,cAAc,cAOT,SAOjC,CA5PAlC,EAAgBD,aAAe,CAC7BW,kBAAkB,EAClBG,cAAc,G,+MCRhB,MAAM+D,UAAiCC,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KAC/CC,MAAQ,CACN/E,SAAUgF,IAAAA,UAAiBC,EAAAA,IAC3BhF,YAAa,CAAC,EACdE,iBAAkBoC,EAAAA,GAChB2C,EAAAA,IAEFC,iBAAiB,EACjBpC,gBAAiB,GAEjBqC,aAAa,EACbf,sBAAuB,GACvB3D,yBAA0B,GAC1BN,0BAA2B,GAC3BQ,cAAc,EACdV,iBAAkB,GAClBqE,aAAc,GACd1D,6BAA8B,CAAC,EAC/BwE,gBAAiB,GACjBC,0BAA0B,EAC1BC,aAAc,CAAC,GACf,KAMFC,aAAe,CAACC,EAAc1D,KAC5B,IACE,MAAM9B,EAAc+E,IAAAA,UAAiBU,KAAKX,MAAM9E,aAC1CE,EAAmB6E,IAAAA,UAAiBU,KAAKX,MAAM5E,kBACrDF,EAAYwF,GAAgB1D,EAC5B2D,KAAKC,SAAS,CAAE1F,qBAC4B2F,IAAxCV,EAAAA,GAAsBO,KACxBtF,EAAiBsF,GAAgBlD,EAAAA,GAC/B2C,EAAAA,GAAsBO,GACtB1D,GAEF2D,KAAKC,SAAS,CAAExF,sBAEG,kBAAjBsF,GACFC,KAAKG,wBAAwB9D,EAEjC,CAAE,MAAOC,GACP8D,QAAQC,IACN,yDACA/D,EAEJ,GACA,KAycFgE,0BAA4B,KAC1BN,KAAKC,SAAS,CACZL,0BAA0B,GAC1B,EACF,KAEFW,aAAe,KACb,IACEP,KAAKC,SAAS,CAAEP,aAAa,IAC7B,IAAIG,EAAeP,IAAAA,UAAiBU,KAAKX,MAAMQ,cAE3CW,EAAgB3D,EAAAA,GAClBmD,KAAKX,MAAMrE,0BAGb6E,EAAeG,KAAKS,qBAAqBZ,EAAcW,GAG1B,KAA7BR,KAAKX,MAAM/E,SAAS0B,KAChBgE,KAAKU,eAAeb,GACpBG,KAAKW,eAAed,EAC1B,CAAE,MAAOvD,GACP8D,QAAQC,IAAI,mDACd,GACA,KACFO,WAAa,KACX,IACE,IAAIrG,EAAc+E,IAAAA,UAAiBU,KAAKX,MAAM9E,aAC1CiG,EAAgB3D,EAAAA,GAClBmD,KAAKX,MAAMrE,0BAGb,GAAIgF,KAAKa,aAAaL,GAAgB,CACpCjG,EAAcyF,KAAKS,qBAAqBlG,EAAaiG,GACrD,IAAIZ,GACsD,IAAxDI,KAAKc,MAAMC,YAAYC,aAAaC,gBAGlCpB,EAAeP,IAAAA,UAAiB/E,GACpCyF,KAAKC,SAAS,CAAEL,2BAA0BC,iBAAgB,MACvB,IAA7BD,GACFI,KAAKO,cACP,GAEJ,MACEP,KAAKC,SAAS,CAAEP,aAAa,GAEjC,CAAE,MAAOpD,GACP8D,QAAQC,IACN,uDACA/D,EAEJ,GACA,KA2MF4E,YAAc,KACZ,IACE,MAAMzG,EAAmB,IAAKuF,KAAKX,MAAM5E,kBACnCH,EAAWgF,IAAAA,UAAiBU,KAAKX,MAAM/E,UAE7C,IAAIC,EAAc+E,IAAAA,UAAiBU,KAAKX,MAAM/E,UAsB9C,GArBA6G,OAAOC,KAAK3G,GAAkB4G,SAAQ,SAAUC,GAC9C7G,EAAiB6G,GAAO,EAC1B,IACAtB,KAAKC,SACH,CACE1F,YAAa,IAAKD,GAClBG,mBACAO,yBAA0B,GAC1BG,6BAA8B,CAAC,EAC/BX,iBAAkB8E,IAAAA,UAAiBU,KAAKX,MAAMR,gBAEhD,KACMmB,KAAKc,MAAMC,YAAYC,aAAaO,kBACtCvB,KAAKG,wBAAwB5F,EAAY2D,eACzC8B,KAAKwB,wCAELxB,KAAKyB,qBACLzB,KAAKwB,sCACP,IAG6B,KAA7BxB,KAAKX,MAAM/E,SAAS0B,KAAa,CACnC,IAAIgC,EAAoBgC,KAAKX,MAAMrB,cACnCA,EAAgB,GAChBgC,KAAKC,SAAS,CAAEjC,iBAClB,CACF,CAAE,MAAO1B,GACP8D,QAAQC,IACN,wDACA/D,EAEJ,GACA,KAEFoF,0BAA4B,CAACrD,EAAWtC,KACtC,IACE,IAAI4F,EAAoB,GACpB3G,EAA2BsE,IAAAA,UAC7BU,KAAKX,MAAMrE,0BAET4G,EAAwB5G,EAAyB6G,QAClDC,GAAiBA,EAAapG,eAAiB2C,EAAU3C,eAG1DkG,EAAsB7E,OAAS,GAC/BgF,MAAMC,QAAQJ,EAAsB,GAAGjD,yBAEvCgD,EACEC,EAAsB,GAAGjD,sBAAsBkD,QAC5CC,GAAiBA,EAAa9F,OAASqC,EAAUrC,QAGpD2F,EAAkB5E,OAAS,IAC7B4E,EAAkB,GAAGM,aAAelG,GAEtC,MAAMrB,EAA4B4E,IAAAA,UAChCU,KAAKX,MAAM3E,2BAGbA,EAA0B2G,SAAS9F,IAC7BA,EAAoBG,eAAiB2C,EAAU3C,eACjDH,EAAoBb,0BAClB2D,EAAUrC,MACRa,EAAAA,GAAgCwB,EAAWtC,GACjD,IAEFiE,KAAKC,SAAS,CAAEvF,4BAA0BM,4BAC5C,CAAE,MAAOsB,GACP8D,QAAQC,IACN,sEACA/D,EAEJ,GACA,KAEFlB,sBAAwB,CAACiD,EAAWtC,KAClC,IACEsC,EAAUU,MAAQhD,EAClBiE,KAAKC,SAAS,CACZ5B,UAAWA,IAEb,MAAMlD,EAA+BmE,IAAAA,UACnCU,KAAKX,MAAMlE,8BAGbA,EAA6BkD,EAAUW,GAAGkD,YAAcrF,EAAAA,GACtDsF,EAAAA,GAAqC,UACrCpG,GAEFiE,KAAKC,SAAS,CAAE9E,gCAElB,CAAE,MAAOmB,GACP8D,QAAQC,IACN,kEACA/D,EAEJ,GACA,KAoBF8F,yBAA4BC,IAC1B,IAEE,IAAI9H,EAAc+E,IAAAA,UAAiBU,KAAKX,MAAM9E,aAC9C,IAAI+H,EAAkBtC,KAAKc,MAAM/C,aACpBxD,EAAY2D,cAArBmE,EAAqCC,EACR,GACjCtC,KAAKC,SAAS,CAAE1F,gBAChByF,KAAKG,wBAAwB5F,EAAY2D,cAC3C,CAAE,MAAO5B,GACP8D,QAAQC,IACN,qEACA/D,EAEJ,GACA,KACFiG,yBAA4BxG,IAC1B,IACE,IAAIxB,EAAc+E,IAAAA,UAAiBU,KAAKX,MAAM9E,aAC9CA,EAAYoD,OAAS5B,EACjBxB,EAAYoD,SAAWqC,KAAKX,MAAM/E,SAASqD,SAC7CpD,EAAYsD,QAAU,IACxBmC,KAAKC,SAAS,CAAE1F,eAClB,CAAE,MAAO+B,GACP8D,QAAQC,IAAI/D,EACd,EACA,CAx3BFkG,eAAAA,GACE,OAAOxC,KAAKc,MAAM/C,YACpB,CA0BAoC,uBAAAA,CAAwBsC,GACtB,IACE,IAAIC,EAA0B,GAC9B,IAAI/D,EAAwB,GACxB3D,EAA2B,GAC/B2D,EAAwBW,IAAAA,UACtBU,KAAKX,MAAMV,uBAEb3D,EAA2BsE,IAAAA,UACzBU,KAAKX,MAAMrE,0BAEb,MAAMN,EAA4B4E,IAAAA,UAChCU,KAAKX,MAAM3E,2BAEb,IAAIH,EAAc+E,IAAAA,UAAiBU,KAAKX,MAAM9E,aAE9CkI,EAAkBpB,SAAS/F,IACzB,IAAIqH,EAAY3H,EAAyBQ,MAAMC,GACtCA,EAAkBC,eAAiBJ,SAG1B4E,IAAdyC,EACFhE,EAAsBrE,SAAS+G,SAAQ,SAAUuB,GAC/C,GAAIA,EAAkBlH,eAAiBJ,EAAU,CAC/C,IAAIuH,EAAiBtI,EAAYuI,WAAWtH,MACzCuH,GACQA,EAAkBrH,eAAiBJ,SAGvB4E,IAAnB2C,GACFD,EAAkBjE,sBAAsB0C,SAAQ,SAC9CuB,GAEA,IAAII,EAAiBH,EAAeI,oBAAoBzH,MACrD0H,GACQA,EAAEC,gBAAkBP,EAAkB5G,YAG1BkE,IAAnB8C,IACFJ,EAAkBX,aAChBe,EAAeI,eACrB,IAEFV,EAAwBW,KAAKT,EAC/B,CACF,IAEAF,EAAwBW,KAAKV,EAC/B,IAEF3H,EAA2B,GAC3BA,EAA2B0H,EAC3B1H,EAA2B6B,EAAAA,GACzB7B,GAEFN,EAA0B2G,SAAS9F,SAIX2E,IAHFuC,EAAkBjH,MAAMiH,GACnClH,EAAoBG,eAAiB+G,KAG5CtB,OAAOC,KAAK7F,EAAoBb,2BAA2B2G,SACxDC,GAAS/F,EAAoBb,0BAA0B4G,GAAO,IAEnE,IAGFtB,KAAKC,SAAS,CAAEjF,2BAA0BN,6BAC5C,CAAE,MAAO4B,GACP8D,QAAQC,IACN,oEACA/D,EAEJ,CACF,CAEAgH,oBAAAA,CAAqBC,GAEnB,IAAIC,EAAU,CACZ,CACElC,IAAKmC,EAAAA,GACL1H,MAAOwH,IAGPG,EAAM,CACRC,gBAAiBJ,EACjBK,YAAaH,EAAAA,GACbA,SAAUD,GAEZK,IACEC,EAAAA,IACAjH,EAAAA,GACE6G,EACA1D,KAAKc,MAAMiD,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAS7H,MACG,IAArB8H,EAAOC,UACTpE,KAAKC,SAAS,CACZ/E,aACEiJ,EAAOnD,aAAaqD,mBAAqB,IAC1C,KACGrE,KAAKX,MAAMnE,cACb8E,KAAKsE,yBAAyB,KAGlCtE,KAAKC,SAAS,CACZ/E,cAAc,IAEhBkF,QAAQC,IAAI,iCAAkC8D,EAAOI,WACvD,IAEDC,OAAOlI,IACN8D,QAAQC,IACN,0CACA/D,EACAiH,EACD,GAGP,CAEAe,uBAAAA,GACE,IACE,IAAI/J,EAAc+E,IAAAA,UAAiBU,KAAKX,MAAM9E,aAC1CkK,EAAoB,CACtBC,gBAAiB1E,KAAKc,MAAM6D,oBAC5BC,WAAYrK,EAAYyB,KACxB6I,WAAYC,EAAAA,GAAuBC,UAErC,IAAIrB,EAAM,CACRC,gBAAiB3D,KAAKc,MAAM6D,oBAC5Bf,YAAaH,EAAAA,GACbuB,OAAQP,GAEVZ,IACEC,EAAAA,IACAjH,EAAAA,GACE6G,EACA1D,KAAKc,MAAMiD,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAS7H,MACG,IAArB8H,EAAOC,UACTpE,KAAKC,SAAS,CAAEzF,iBAAkB2J,EAAOnD,aAAcnC,aAAcsF,EAAOnD,eAI5EZ,QAAQC,IAAI,oCAAqC8D,EAAOI,UAC1D,IAEDC,OAAOlI,IACN8D,QAAQC,IACN,4CACA/D,EACD,GAEP,CAAE,MAAOA,GACP8D,QAAQC,IACN,4CACA/D,EAEJ,CAEF,CAEAmF,kBAAAA,GACE,IACE,IAAI9C,EAAwBW,IAAAA,UAC1BU,KAAKX,MAAMV,uBAEiB,OAA1BA,QAA4DuB,IAA1BvB,GACpCoD,MAAMC,QAAQrD,EAAsBrE,WAAaqE,EAAsBrE,SAASyC,OAAS,GACzFiD,KAAKG,wBAAwB,CAC3BxB,EAAsBrE,SAAS,GAAGoB,cAExC,CAAE,MAAOY,GACP8D,QAAQC,IACN,+DACA/D,EAEJ,CACF,CAEA2I,yBAAAA,CAA0BC,GACxB,IAEiC,KAA7BlF,KAAKX,MAAM/E,SAAS0B,WACkBkE,IAAtCgF,EAAUC,YAAYC,aACtBpF,KAAKc,MAAMiD,aAAaC,YAAckB,EAAUnB,aAAaC,WAE7DhE,KAAKqF,cAAcH,EAAUC,YAEjC,CAAE,MAAO7I,GACP8D,QAAQC,IACN,sEACA/D,EAEJ,CACF,CAEAgJ,iBAAAA,GACE,IACEzI,EAAAA,GAAqBmD,KAAKc,MAAMC,YAAYC,aAAauE,YACzDvF,KAAKwF,eACLxF,KAAKqF,cAAcrF,KAAKc,MAAMqE,YAChC,CAAE,MAAO7I,GACP8D,QAAQC,IACN,8DACA/D,EAEJ,CACF,CAEA+I,aAAAA,CAAcI,GACZ,IACE5B,IACEC,EAAAA,IACAjH,EAAAA,GACE,CAAC6I,EAAAA,IACD1F,KAAKc,MAAMiD,aAAaC,YAE1BC,MAAMC,IACN,IAAIC,EAASD,EAAS7H,MACG,IAArB8H,EAAOC,UACTpE,KAAKC,SACH,CACEtB,sBAAuBW,IAAAA,UAAiB6E,EAAOnD,cAC/CtG,0BAA2BmC,EAAAA,GACzBsH,EAAOnD,aAAa1G,YAGxB,IAAM0F,KAAK2F,YAAYF,KAGzBrF,QAAQC,IAAI,0BACd,GAEJ,CAAE,MAAO/D,GACP8D,QAAQC,IAAI,6BAA8B/D,EAC5C,CACF,CAEAkJ,YAAAA,GACE3B,IACEC,EAAAA,IACAjH,EAAAA,GAAwCmD,KAAKc,MAAMiD,aAAaC,YAE/DC,MAAMC,IACL,IAAIC,EAASD,EAAS7H,KACtB,IAAyB,IAArB8H,EAAOC,UAAoB,CAC7BhE,QAAQC,IAAI8D,GACZ,IAAI9G,EAAkB,GACM,OAAxB8G,EAAOnD,cACTG,OAAOC,KAAK+C,EAAOnD,cAAcK,SAASC,GACxCjE,EAAgBgG,KAAK,CACnBzF,KAAMuG,EAAOnD,aAAaM,GAC1BvF,MAAOuF,MAGXtB,KAAKC,SAAS,CAAE5C,qBAEhB+C,QAAQC,IAAI,2BAEhB,MACED,QAAQC,IAAI,wBAAyB8D,EAAOI,UAC9C,IAEDC,OAAOlI,IACN8D,QAAQC,IAAI,qCAAsC/D,EAAM,GAE9D,CAEAqJ,WAAAA,CAAYR,GAYV,GAVA5F,EAAAA,GAAc5C,oBAAsB,GACpC4C,EAAAA,GAAcqG,gBAAkB5F,KAAKc,MAAM6D,oBAC3CpF,EAAAA,GAAcnC,aAAe4C,KAAKc,MAAMC,YAAYC,aAAa6E,UACjEtG,EAAAA,GAAc5C,oBAAsBqD,KAAKc,MAAMC,YAAYC,aAAarE,oBACjC,IAAnCqD,KAAKc,MAAM/C,aAAahB,SAC1BwC,EAAAA,GAAcrB,cAAgB,IAAI8B,KAAKc,MAAM/C,oBAKfmC,IAA5BiF,EAAYC,YAAhB,CAwBA,IAAI5B,EAAU,CACZ,CACElC,IAAKmC,EAAAA,GACL1H,MAAOoJ,EAAYC,cAGnB1B,EAAM,CACRC,gBAAiB3D,KAAKc,MAAM6D,oBAC5Bf,YAAaH,EAAAA,GACbA,SAAUD,GAGZK,IACEC,EAAAA,IACAjH,EAAAA,GACE6G,EACA1D,KAAKc,MAAMiD,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAS7H,MACG,IAArB8H,EAAOC,UACTpE,KAAKC,SACH,CACER,iBAAiB,EACjBnF,SAAUgF,IAAAA,UAAiB6E,EAAOnD,cAClCzG,YAAa+E,IAAAA,UAAiB6E,EAAOnD,cACrCtB,YAAa7C,EAAAA,GACXmD,KAAKc,MAAMC,YAAYC,aAAa8E,cACpCC,EAAAA,EAAeC,OACfC,EAAAA,MAGJ,KACEjG,KAAKkG,WAAWlG,KAAKc,MAAM6D,oBAAoBR,EAAOnD,aAAahF,MAC/DgE,KAAKc,MAAMC,YAAYC,aAAamF,cACtCnG,KAAKsD,qBAAqBtD,KAAKc,MAAM6D,qBACnC3E,KAAKc,MAAMC,YAAYC,aAAaO,iBACtCvB,KAAKG,wBAAwBgE,EAAOnD,aAAa9C,eAEjD8B,KAAKyB,oBACP,KAIJzB,KAAKC,SAAS,CACZ3F,SAAUgF,IAAAA,UAAiBC,EAAAA,IAC3BhF,YAAa+E,IAAAA,UAAiBC,EAAAA,IAC9BE,iBAAiB,IAChB,KACGO,KAAKc,MAAMC,YAAYC,aAAamF,cACtCnG,KAAKsD,qBAAqBtD,KAAKc,MAAM6D,oBAAoB,IAE7DvE,QAAQC,IAAI,wBAAyB8D,EAAOI,WAC9C,IAEDC,OAAOlI,IACN8D,QAAQC,IAAI,gCAAiC/D,EAAO6I,EAAY,GA1DpE,MAtBEnF,KAAKC,SACH,CACE3F,SAAUgF,IAAAA,UAAiBC,EAAAA,IAC3BhF,YAAa+E,IAAAA,UAAiBC,EAAAA,IAC9BvE,yBAA0B,GAE1ByE,iBAAiB,EACjBE,gBAAgB,GAChBD,YAAa7C,EAAAA,GACXmD,KAAKc,MAAMC,YAAYC,aAAa8E,cACpCC,EAAAA,EAAeK,IACfH,EAAAA,MAGJ,KACMjG,KAAKc,MAAMC,YAAYC,aAAamF,cACtCnG,KAAKsD,qBAAqBtD,KAAKc,MAAM6D,sBACsB,IAAzD3E,KAAKc,MAAMC,YAAYC,aAAaO,kBACtCvB,KAAKyB,oBAAoB,GAgEnC,CAEAZ,YAAAA,CAAaL,GACX,MAAM,YAAEjG,GAAgByF,KAAKX,MAC7B,IAAI5E,EAAmB6E,IAAAA,UAAiBU,KAAKX,MAAM5E,kBACnD0G,OAAOC,KAAK5B,EAAAA,IAAuB6B,SAAQ,SAAUC,GACnD7G,EAAiB6G,GAAOzE,EAAAA,GACtB2C,EAAAA,GAAsB8B,GACtB/G,EAAY+G,GAEhB,IAEkC,OAAhC/G,EAAYqL,iBAC2B,KAAvCrL,EAAYqL,gBAAgBS,SAE5B5L,EAAkC,gBAChC,sCAEAF,EAAYoD,SAAWqC,KAAKX,MAAM/E,SAASqD,SACjB,OAAxBpD,EAAYsD,SAA4C,KAAxBtD,EAAYsD,UAC9CpD,EAA0B,QAAI,mCAIlC,IAAIC,EAA4B4E,IAAAA,UAC9BU,KAAKX,MAAM3E,2BAGb8F,EAAca,SAAShD,IACrB3D,EAA0B2G,SAAS9F,IAC7BA,EAAoBG,eAAiB2C,EAAU3C,cACjD2C,EAAUM,sBAAsB0C,SAASuB,IACvCrH,EAAoBb,0BAClBkI,EAAkB5G,MAChBa,EAAAA,GACF+F,EACAA,EAAkBX,aACnB,GAEL,GACA,IAEJjC,KAAKC,SAAS,CAAExF,mBAAkBC,8BAClC,IAAI4L,GAAc,EAClB5L,EAA0B2G,SAAS6B,IACjC,IAAIoD,EAOF,OAAOA,EANPA,EAAcnF,OAAOoF,OAAOrD,EAAExI,2BAA2B8L,OACvD,SAAUzK,GACR,MAAiB,KAAVA,CACT,GAIJ,IAGF,IAAIZ,EAA+BmE,IAAAA,UACjCU,KAAKX,MAAMlE,8BA2Bb,OAxBuBmE,IAAAA,UACrBU,KAAKX,MAAM7E,kBAII6G,SAASoF,IACxBtL,EAA6BsL,EAAWzH,IAAMnC,EAAAA,GAC5CsF,EAAAA,GAAqC,UACrCsE,EAAW1H,MACZ,IAGHiB,KAAKC,SAAS,CAAE9E,iCAEZmL,IACFA,EAAcnF,OAAOoF,OAAOpL,GAA8BqL,OAAM,SAAUzK,GACxE,MAAiB,KAAVA,CACT,KAGEuK,IACFA,EAAcnF,OAAOoF,OAAO9L,GAAkB+L,OAAM,SAAUzK,GAC5D,MAAiB,KAAVA,CACT,KACKuK,CACT,CAwDA7F,oBAAAA,CAAqBlG,EAAaiG,GAChC,IAIE,GAHAA,EAAgB3D,EAAAA,GAAuC2D,GACvDjG,EAAYuI,WAAajG,EAAAA,GAA+B2D,GAEpDR,KAAKX,MAAMnE,aAAc,CAC3B,IAAIV,EAAmB8E,IAAAA,UAAiBU,KAAKX,MAAM7E,kBAEnD,GADAD,EAAY4L,cAAe,EACF,OAArB3L,QAAkD0F,IAArB1F,GAAkCA,EAAiBuC,OAAS,EAAG,CAC9F,IAAI2J,EAAmB,CACrB9B,WAAYrK,EAAYyB,KACxB6I,WAAYC,EAAAA,GAAuBC,SACnCL,gBAAiB1E,KAAKc,MAAM6D,oBAC5BgC,qBAAsB,IAGxBnM,EAAiB6G,SAAShD,IACxBqI,EAAiBC,qBAAqBtD,KAAKhF,EAAU,IAEvD9D,EAAYqM,aAAeF,CAC7B,CACF,MAEEnM,EAAY4L,cAAe,EAC3B5L,EAAYqM,aAAe,KAE7B,OAAOrM,CACT,CAAE,MAAO+B,GACP8D,QAAQC,IACN,+DACA/D,EAEJ,CACF,CAEAoE,cAAAA,CAAenG,GACb,IAAIiJ,EAAU,CACZ,CACElC,IAAKmC,EAAAA,GACL1H,MAAOxB,EAAYyB,OAGnB0H,EAAM,CACRC,gBAAiB3D,KAAKc,MAAM6D,oBAC5Bf,YAAaH,EAAAA,GACbA,SAAUD,EACVwB,OAAQzK,GAENsM,EAAe,CACjBC,YAAa,WACbC,QAAS,8BACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,aACZC,UAAW,CAAC3M,EAAYyB,MACxBmL,WAAW,EACXC,aAAc,MAIpBvD,IACEC,EAAAA,IACAjH,EAAAA,GACE6G,EACA1D,KAAKc,MAAMiD,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAS7H,KACtBwK,EAAaC,YAAc3C,EAAOC,UAAY,UAAY,WAC1DyC,EAAaG,qBAAqB,GAAGG,UAAYhD,EAAOC,WAC/B,IAArBD,EAAOC,UACTpE,KAAKC,SACH,CAEEP,YAAa7C,EAAAA,GACXmD,KAAKc,MAAMC,YAAYC,aAAa8E,cACpCC,EAAAA,EAAeC,OACfC,EAAAA,IAEFrG,0BAA0B,IAG5B,IAAMI,KAAK2F,YAAY,CAAEP,YAAa7K,EAAYyB,UAGpD6K,EAAaG,qBAAqB,GAAGI,aACnCjD,EAAOI,UAAU,GACnBvE,KAAKC,SAAS,CACZP,YAAa7C,EAAAA,GACXmD,KAAKc,MAAMC,YAAYC,aAAa8E,cACpCC,EAAAA,EAAeK,IACfH,EAAAA,IAEFrG,0BAA0B,IAG5BQ,QAAQC,IAAI,2BAA4B8D,EAAOI,YAEjDvE,KAAKc,MAAMuG,QAAQ9M,EAAa,MAAOsM,EAAa,IAErDrC,OAAOlI,IACN0D,KAAKC,SAAS,CACZP,YAAa7C,EAAAA,GACXmD,KAAKc,MAAMC,YAAYC,aAAa8E,cACpCC,EAAAA,EAAeK,IACfH,EAAAA,IAEFrG,0BAA0B,IAG5BiH,EAAaG,qBAAqB,GAAGI,aAAe9K,EACpD0D,KAAKc,MAAMuG,QAAQ9M,EAAa,MAAOsM,EAAa,GAE1D,CAEAlG,cAAAA,CAAepG,GACb,IAAIiJ,EAAU,CACZ,CACElC,IAAKmC,EAAAA,GACL1H,MAAOxB,EAAYyB,OAInB0H,EAAM,CACRC,gBAAiB3D,KAAKc,MAAM6D,oBAC5Bf,YAAaH,EAAAA,GACbA,SAAUD,EACVwB,OAAQzK,GAGNsM,EAAe,CACjBC,YAAa,WACbC,QAAS,8BACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,iBACZC,UAAW,CAAC3M,EAAYyB,MACxBmL,WAAW,EACXC,aAAc,MAIpBvD,IACEC,EAAAA,IACAjH,EAAAA,GACE6G,EACA1D,KAAKc,MAAMiD,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAS7H,KACtBwK,EAAaC,YAAc3C,EAAOC,UAAY,UAAY,WAC1DyC,EAAaG,qBAAqB,GAAGG,UAAYhD,EAAOC,WAC/B,IAArBD,EAAOC,UACTpE,KAAKC,SACH,CAGEP,YAAa7C,EAAAA,GACXmD,KAAKc,MAAMC,YAAYC,aAAa8E,cACpCC,EAAAA,EAAeC,OACfC,EAAAA,IAEFrG,0BAA0B,IAG5B,IAAMI,KAAK2F,YAAY,CAAEP,YAAa7K,EAAYyB,UAIpD6K,EAAaG,qBAAqB,GAAGI,aACnCjD,EAAOI,UAAU,GACnBvE,KAAKC,SAAS,CACZP,YAAa7C,EAAAA,GACXmD,KAAKc,MAAMC,YAAYC,aAAa8E,cACpCC,EAAAA,EAAeC,OACfC,EAAAA,IAEFrG,0BAA0B,IAG5BQ,QAAQC,IAAI,2BAA4B8D,EAAOI,YAEjDvE,KAAKc,MAAMuG,QAAQ9M,EAAa,SAAUsM,EAAa,IAExDrC,OAAOlI,IACNuK,EAAaG,qBAAqB,GAAGI,aAAe9K,EACpD0D,KAAKc,MAAMuG,QAAQ9M,EAAa,SAAUsM,GAC1C7G,KAAKC,SAAS,CACZP,YAAa7C,EAAAA,GACXmD,KAAKc,MAAMC,YAAYC,aAAa8E,cACpCC,EAAAA,EAAeC,OACfC,EAAAA,IAEFrG,0BAA0B,GAE1B,GAER,CA2GA4B,mCAAAA,GACE,IACE,IAAI7C,EAAwBW,IAAAA,UAC1BU,KAAKX,MAAMV,uBAEbqB,KAAKC,SAAS,CACZvF,0BAA2BmC,EAAAA,GACzB8B,EAAsBrE,WAG5B,CAAE,MAAOgC,GACP8D,QAAQC,IACN,8DACA/D,EAEJ,CACF,CA8BA4J,UAAAA,CAAWoB,EAAaC,GAMtB,IAAgB,IALF1K,EAAAA,GACZmD,KAAKc,MAAMC,YAAYC,aAAa8E,cACpCC,EAAAA,EAAeyB,KACfC,EAAAA,IAEoB,CAEpB,IAAIC,EAAqB,QACOxH,IAA5BF,KAAKc,MAAM6G,mBACsCzH,IAA/CF,KAAKc,MAAM6G,aAAaD,qBAC1BA,EAAqB1H,KAAKc,MAAM6G,aAAaD,oBAGjD,IAAIE,EAAoB,CACtBC,SAAUC,EAAAA,GACVC,mBAAoBL,EACpBM,gBAAiB,CAAC,CAAE1G,IAAK,kBAAmBvF,MAAOuL,GAAe,CAAEhG,IAAK,eAAgBvF,MAAOwL,KAElG1D,IACEC,EAAAA,IACAjH,EAAAA,GACE+K,EACA5H,KAAKc,MAAMiD,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAS7H,MACG,IAArB8H,EAAOC,UACTpE,KAAKC,SAAS,CACZN,gBAAiBwE,EAAOnD,aAAaiH,kBAGvCjI,KAAKC,SAAS,CAAEN,gBAAiB,KACjCS,QAAQC,IAAI,6BAA8B8D,EAAOI,WACnD,IAEDC,OAAOlI,IACN8D,QAAQC,IAAI,wCAAyC/D,EAAM,GAEjE,CACF,CACA4L,MAAAA,GACE,MAAMvN,EAAc,CAClBqD,cAAegC,KAAKwC,kBACpB1F,eAAgBkD,KAAKc,MAAMC,YAAYC,aAAarE,oBACpDU,gBAAiB2C,KAAKX,MAAMhC,iBAGxB8K,EAAgB,CACpB,CACEC,UAAW,gBACXC,WACE,IAAIC,KACFtI,KAAKX,MAAM9E,YAAYgO,iBACvBC,qBACF,IACA,IAAIF,KAAKtI,KAAKX,MAAM9E,YAAYgO,iBAAiBE,sBAErD,CACEL,UAAW,sBACXC,gBAC4CnI,IAA1CF,KAAKX,MAAM9E,YAAYmO,gBACqB,OAA1C1I,KAAKX,MAAM9E,YAAYmO,eACrB,IAAIJ,KACJtI,KAAKX,MAAM9E,YAAYmO,gBACvBF,qBACF,IACA,IAAIF,KACFtI,KAAKX,MAAM9E,YAAYmO,gBACvBD,qBACA,IAER,CACEL,UAAW,gBACXC,WACE,IAAIC,KAAKtI,KAAKX,MAAM9E,YAAYoO,aAAaH,qBAC7C,IACA,IAAIF,KAAKtI,KAAKX,MAAM9E,YAAYoO,aAAaF,uBAGnD,OAAOzI,KAAKX,MAAMI,iBAChB9D,EAAAA,EAAAA,MAAA,OAAA/B,SAAA,EACEF,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACZF,EAAAA,EAAAA,KAACkP,EAAAA,EAAe,CACdC,WAAY7I,KAAKX,MAAM/E,SAAS0B,KAChC8M,cAAc,iBACdX,cAAeA,OAGnBzO,EAAAA,EAAAA,KAACzB,EAAAA,EAAkB,CAACE,QAAS6H,KAAKX,MAAMM,gBAAgB/F,SAAC,OAEzDF,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACZF,EAAAA,EAAAA,KAACW,EAAe,CACdC,SAAU0F,KAAKX,MAAM/E,SACrBC,YAAayF,KAAKX,MAAM9E,YACxBC,iBAAkBwF,KAAKX,MAAM7E,iBAC7BmN,aAAc3H,KAAKc,MAAM6G,aACzBlN,iBAAkBuF,KAAKX,MAAM5E,iBAC7BO,yBAA0BgF,KAAKX,MAAMrE,yBACrC2D,sBAAuBqB,KAAKX,MAAMV,sBAClCjE,0BAA2BsF,KAAKX,MAAM3E,0BAEtCC,YAAaA,EACbC,cAAeoF,KAAKF,aACpBjF,qBAAsBmF,KAAKoC,yBAC3BtH,qBAAsBkF,KAAKuC,yBAC3BxH,iBACEiF,KAAKc,MAAMC,YAAYC,aAAaO,iBAEtCtG,sBAAuB+E,KAAK0B,0BAC5BxG,aAAc8E,KAAKX,MAAMnE,aACzBC,6BAA8B6E,KAAKX,MAAMlE,6BACzCC,sBAAuB4E,KAAK5E,2BAGhC1B,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAL,UACZF,EAAAA,EAAAA,KAACqP,EAAAA,EAAoB,CACnBC,WAAYhJ,KAAKc,MAAMmI,OACvBrI,WAAYZ,KAAKY,WACjBM,YAAalB,KAAKkB,YAClBxB,YAAaM,KAAKX,MAAMK,gBAG3BM,KAAKX,MAAMO,0BACVlG,EAAAA,EAAAA,KAACwP,EAAAA,EAAwB,CACvBC,SAAUnJ,KAAKc,MAAMC,YAAYC,aAAaoI,SAC9CC,aAC+B,KAA7BrJ,KAAKX,MAAM/E,SAAS0B,KAChB+J,EAAAA,EAAeK,IACfL,EAAAA,EAAeC,OAErBsD,cAAerD,EAAAA,GACfsD,gBAAiBvJ,KAAKO,aACtBiJ,YAAaxJ,KAAKM,4BAElB,SAGN5G,EAAAA,EAAAA,KAAC+P,EAAAA,EAAW,CAAC1C,QAAQ,WAEzB,EAEF,MAOA,GAAe2C,EAAAA,EAAAA,KAPUrK,IAChB,CACL0B,YAAa1B,EAAMsK,eAAe5I,YAClCgD,aAAc1E,EAAMsK,eAAeC,aAIvC,CAAwC3K,E,4FC7iCjC,SAASnB,EAAmB5F,GAM/B,IANgC,aAClC6F,EAAY,iBACZE,EAAgB,gBAChB4L,EAAe,cACfjP,EAAa,cACbuD,GACDjG,EAGC,OADyB,OAArB+F,IAA2BA,EAAmB,KAEhDvE,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SAChBE,IACA6B,EAAAA,EAAAA,MAAA,OAAK5B,MAAO,CAAE+P,QAAS,OAAQC,eAAgB,iBAAkBnQ,SAAA,EAC/DF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEiQ,MAAO,OAAQpQ,UAC3BF,EAAAA,EAAAA,KAAC+C,EAAAA,OAAM,CACLX,OAAK,EACLY,YAAa5C,EAAE,iBACfmC,MAAOnC,EAAE,iBACTiC,MAAOkC,EACPjB,UAAU,EACVJ,QAASC,EAAAA,GAAgCkB,GACzC3B,SAAWC,GAASzB,EAAc,gBAAiByB,GACnDC,MAAOxC,EAAE+P,GACT1N,SAAkC,IAAxB4B,EAAahB,OACvBR,cAAc,OAGlB7C,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,eAAchC,UAC3BF,EAAAA,EAAAA,KAACuQ,EAAAA,SAAQ,CACPhO,MAAOnC,EAAE,cACTuI,QACEN,MAAMC,QAAQ/D,IACdA,EAAiBlB,SAAWgB,EAAahB,OAE3CX,SAAWiG,GAAYlE,EAAckE,WAOnD,CA9CAvE,EAAoB1D,aAAe,CACjC2D,aAAc,GACdE,iBAAkB,GAClB4L,gBAAiB,G,iFCMZ,SAASjB,EAAe1Q,GAAgD,IAA/C,WAAE2Q,EAAU,cAAEC,EAAa,cAAEX,GAAejQ,EAC1E,OACEwB,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SAChBE,IACAJ,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,kBAAiBhC,UAC9B+B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBhC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,4BAA2BhC,UACxCF,EAAAA,EAAAA,KAAA,QAAMK,MAAO,CAAEmQ,OAAQ,QAAUtO,UAAU,cAAahC,SACtC,KAAfiP,QAAoC3I,IAAf2I,EAClB/O,EAAEgP,GACFD,MAGQ,KAAfA,QACc3I,IAAf2I,GACAV,EAAcpL,OAAS,GACrBrD,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,kBAAiBhC,UAC9BF,EAAAA,EAAAA,KAACyQ,EAAAA,MAAK,CACJC,SACEzO,EAAAA,EAAAA,MAAA,OAAA/B,SAAA,CACGE,EAAEqO,EAAc,GAAGC,WAAa,IAAI,IACpC,IAAMD,EAAc,GAAGE,YACxB3O,EAAAA,EAAAA,KAAC2Q,EAAAA,KAAI,CACHtQ,MAAO,CAAEuQ,WAAY,QACrBC,KAAK,SACLC,KAAK,aACLC,KAAK,aAIXC,SAAS,cACT9Q,UAEAF,EAAAA,EAAAA,KAACiR,EAAAA,KAAI,CAAC/O,UAAU,qBAAoBhC,SACjCuO,EAAc/J,KAAKwM,IAClBjP,EAAAA,EAAAA,MAACgP,EAAAA,KAAKpM,QAAO,CAEX3C,UAAU,gCAA+BhC,SAAA,CAExCE,EAAE8Q,EAAQxC,WAAa,IAAI,IAAE,IAAMwC,EAAQvC,aAHxC,6BAUd,SAOd,CA3DAO,EAAgBxO,aAAe,CAC7ByO,WAAY,GACZC,cAAe,GACfX,cAAe,IA0DjB,S,gFCjEO,SAASY,EAAoB7Q,GAKhC,IALiC,WACnC8Q,EAAU,WACVpI,EAAU,YACVM,EAAW,YACXxB,GACDxH,EACC,OACEwB,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SAChBE,IACA6B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBhC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACvCF,EAAAA,EAAAA,KAACmR,EAAAA,OAAM,CACLjP,UAAU,aACVkP,QAAS9B,EACT4B,QAAS9Q,EAAE,aAGfJ,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACvC+B,EAAAA,EAAAA,MAAA,OAAK5B,MAAO,CAAEgR,MAAO,SAAUnR,SAAA,EAC7BF,EAAAA,EAAAA,KAACmR,EAAAA,OAAM,CACLD,QAAS9Q,EAAE,uBACX8B,UAAU,eACVkP,QAAS5J,KAEXxH,EAAAA,EAAAA,KAACmR,EAAAA,OAAM,CACLD,QAAS9Q,EAAE,QACXqC,UAAWuD,EACXoL,QAASlK,aAWzB,CAvCAmI,EAAqB3O,aAAe,CAAEsF,aAAa,E,sGCH5C,SAASjB,EAAgBvG,GAI5B,IAJ6B,sBAC7BwG,EAAqB,mBACrBE,EAAkB,0BAClBlE,GACHxC,EACG,MAAM8S,EAA4B3M,IAC9B,GAA+B,eAA3BA,EAAU4D,aAEV,OADAgJ,EAA6B5M,EAAU,IAAIiK,MACpC,IAAIA,KAEX,IAAI4C,EAAQ7M,EAAU4D,aAAakJ,MAAM,KACzC,OAAO,IAAI7C,KAAK4C,EAAM,GAAGA,EAAM,GAAG,EAAEA,EAAM,GAC9C,EAEED,EAA+BA,CAAC5M,EAAWtC,KAC7C,IAAIqP,EAAU,IAAI9C,KAAKvM,GACvBA,EAAQqP,EAAQC,cAAgB,KAAO,KAAOD,EAAQE,WAAa,IAAIC,OAAO,GAAK,KAAO,IAAMH,EAAQI,WAAWD,OAAO,GAC1H3M,EAAmBP,EAAUtC,EAAM,EAEvC,OACIrC,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAD,SACdE,IACEJ,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,MAAKhC,UAChBF,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,kCAAiChC,UAC5CF,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,MAAKhC,SAEZ8E,EAAsBN,KAAKC,GACvBA,EAAUoN,SAASC,gBAAkB5G,EAAAA,GAAmB6G,OAAOD,gBAAyC,IAAxBrN,EAAUuN,WACtFlS,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACrCF,EAAAA,EAAAA,KAACmC,EAAAA,MAAK,CACFC,OAAK,EACLG,MAAOnC,EAAEuE,EAAUwN,aACnB9P,MAAkC,OAA3BsC,EAAU4D,aAAwB,GAAK5D,EAAU4D,aACxD/F,WAAqC,IAA1BmC,EAAUyN,YAAuB,WAAa,KACzD3P,UAAmC,IAAzBkC,EAAU0N,WACpB3P,SAAWL,GAAU6C,EAAmBP,EAAWtC,GACnDO,MAAOxC,EAAEY,EAA0B2D,EAAUrC,OAC7CO,cAAc,MAEZ8B,EAAUoN,SAASC,gBAAkB5G,EAAAA,GAAmBkH,IAAIN,eAAiBrN,EAAUoN,SAASC,gBAAkB5G,EAAAA,GAAmBmH,KAAKP,gBAA0C,IAAxBrN,EAAUuN,UAezKvN,EAAUoN,SAASC,gBAAkB5G,EAAAA,GAAmBoH,MAAMR,eAAiBrN,EAAUoN,SAASC,gBAAkB5G,EAAAA,GAAmBqH,OAAOT,gBAA0C,IAAxBrN,EAAUuN,UAgBzKvN,EAAUoN,SAASC,gBAAkB5G,EAAAA,GAAmBsH,KAAKV,gBAAyC,IAAxBrN,EAAUuN,WACpFlS,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACrCF,EAAAA,EAAAA,KAACuQ,EAAAA,SAAQ,CAACrO,UAAU,sCAChBK,MAAOnC,EAAEuE,EAAUwN,aACnBxJ,QAAoC,OAA3BhE,EAAU4D,aAAwB,GAAyD,SAApD5D,EAAU4D,aAAaC,WAAWwJ,cAClFvP,UAAmC,IAAzBkC,EAAU0N,WACpB3P,SAAWL,GAAU6C,EAAmBP,EAAWtC,OAIzDsC,EAAUoN,SAASC,gBAAkB5G,EAAAA,GAAmBuH,SAASX,gBAAyC,IAAxBrN,EAAUuN,WAE1FlS,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACrCF,EAAAA,EAAAA,KAAC4S,EAAAA,WAAU,CACPxQ,OAAK,EACLC,MAAmC,OAA3BsC,EAAU4D,cAAoD,KAA3B5D,EAAU4D,aAAuB,GACtE+I,EAAyB3M,GAE/BpC,MAAOnC,EAAEuE,EAAUwN,aACnBU,eAAeC,EAAAA,EAAAA,MACfC,iBAAiB,OACjBvQ,WAAqC,IAA1BmC,EAAUyN,YAAuB,WAAa,KACzD3P,UAAmC,IAAzBkC,EAAU0N,WACpB3P,SAAWL,GACPkP,EAA6B5M,EAAWtC,GAE5C2Q,aAAe3Q,IACXkP,EAA6B5M,EAAWtC,EAAM,EAElDO,MAAOxC,EAAEY,EAA0B2D,EAAUrC,OAC7CO,cAAc,MAEb,MA/CjB7C,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACrCF,EAAAA,EAAAA,KAACmC,EAAAA,MAAK,CACFC,OAAK,EACLG,MAAOnC,EAAEuE,EAAUwN,aACnB9P,MAEgC,OAA3BsC,EAAU4D,cAAoD,KAA3B5D,EAAU4D,aAAuB,GAAM5D,EAAU4D,aAAc0K,iBAEvGzQ,WAAqC,IAA1BmC,EAAUyN,YAAuB,WAAa,KACzD3P,UAAmC,IAAzBkC,EAAU0N,WACpB3P,SAAWL,GAAU6C,EAAmBP,EAAWtC,GACnDO,MAAOxC,EAAEY,EAA0B2D,EAAUrC,OAC7CO,cAAc,OA3B1B7C,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,2BAA0BhC,UACrCF,EAAAA,EAAAA,KAACmC,EAAAA,MAAK,CACFC,OAAK,EACLG,MAAOnC,EAAEuE,EAAUwN,aACnB9P,MAAkC,OAA3BsC,EAAU4D,aAAwB,GAAK5D,EAAU4D,aAExD/F,WAAqC,IAA1BmC,EAAUyN,YAAuB,WAAa,KACzD3P,UAAmC,IAAzBkC,EAAU0N,WACpB3P,SAAWL,GAAU6C,EAAmBP,EAAWtC,GACnDO,MAAOxC,EAAEY,EAA0B2D,EAAUrC,OAC7CO,cAAc,eA6DlE,C,mjCCtHO,MAAMqQ,EAAwB,SACxBC,EAAyB,iBACzBC,EAA6B,cAC7BC,EAA6B,cAC7BC,EAAyB,UACzBC,EAA6B,qBAC7BC,EAA0B,WAC1BxH,EAA0B,WAC1ByH,EAA6B,cAC7BC,EAAiC,kBACjCC,EAAsB,OACtBC,EAAwB,gBACxBC,EAAmC,4BACnCC,EAA0B,WAC1BC,EAAyB,UACzBC,EAAgC,iBAChCC,EAAgC,iBAChCC,EAAqB,MACrBC,EAA4B,aAC5BC,EAA4B,aAC5BC,EAAmC,oBACnCC,EAAuB,QACvBC,EAA0B,WAC1BC,EAAqC,sBACrCC,EAAgD,iCAChDC,EAAiC,kBACjCC,EAA4C,6BAC5CC,EAAiC,kBACjCC,EAAoC,qBACpCC,EAAgC,iBAChCC,EAAoC,kCACpCC,EAA2B,YAC3BC,EAA4B,aAC5BC,EAAqB,MACrBC,EAA6B,kBAE7BC,EAAgC,6BAEhCC,EAA0C,yBAC1CC,EAA0C,yBAC1CC,EAA2C,+BAI3CC,EAAkC,mBAClCC,EAAkC,mBAClCC,EAA0C,2BAC1CC,EAAmC,oBACnCC,EAA6C,8BAC7CC,EAA+C,+BAC/CC,EAAuC,+BACvCC,EAAsC,uBACtCC,EAAsC,uBACtCC,EAA4C,6BAC5CC,EAA+B,gBAC/BC,EAA8B,8BAC9BC,GAA6B,6BAC7BC,GAAqC,yBACrCC,GAA8C,+BAC9CC,GAAwC,yBAExCC,GAAmC,iCACnCC,GAAoC,2BACpCC,GAAoC,2BACpCC,GAA4B,aAG5BC,GAA0C,mBAC1CC,GAA0C,mBAC1CC,GAA2C,yBAC3CC,GAA0B,0BAC1BC,GAA2B,2BAC3BC,GAAyB,UACzBC,GAAsC,wBAEtCC,GAAuB,QACvBC,GAA2B,YAC3BC,GAA0B,WAC1BC,GAA8B,gBAC9BC,GAAmC,mCACnCC,GAAyB,wBACzBC,GAA6B,cAC7BC,GAAqB,MAErBC,GAAuB,sBACvBC,GAAyB,wBACzBC,GAAgC,iBAChCC,GAA4B,aAC5BC,GAAwB,kBACxBC,GAAuB,uBACvBC,GAAsB,sBAEtBC,GAAyB,yBACzBC,GAAwB,wBAExBC,GAAkC,mBAClCC,GAAsC,uBACtCC,GAA4C,6BAC5CC,GAA2C,4BAC3CC,GAA+B,gBAE/BC,GAAuC,wBAGvCC,GAAiD,kCACjDC,GAA8C,+BAC9CC,GAAiD,kCACjDC,GAAwD,yCACxDC,GAAkD,mCAClDC,GAAiD,kCACjDC,GAAgD,iCAChDC,GAA+C,gCAC/CC,GAAgD,iCAChDC,GAA6C,8BAC7CC,GAAgD,iCAChDC,GAAuD,wCACvDC,GAAiD,kCACjDC,GAAgD,iCAChDC,GAA+C,gCAC/CC,GAA8C,+BAE9CC,GAA2B,uBAE3BC,GAA6B,cAC7BC,GAA+B,gBAC/BC,GAA6B,cAI7BC,GAA+B,e,6GC9HrC,SAASC,EAAqBC,EAAYC,GAC/C,GAAI5R,MAAMC,QAAQ0R,GAAa,CAIA,IAHTA,EAAW7R,QAC5B+R,GAAWA,EAAOhW,OAAS+V,IAEZ5W,QAChB2W,EAAWG,QAAQ,CACjB9X,MAAO,KACP6B,KAAM+V,GAEZ,CACA,OAAOD,CACT,CAEO,SAASlH,IACd,IAAIsH,EAAW7a,OAAO8a,UAAUC,cAAgB/a,OAAO8a,UAAUD,SAMjE,OALAG,IAAAA,OAAcH,GACGG,IAAAA,aAEOC,eAAe,IAGzC,CAGO,SAASC,EAAgC9X,GAC9C,OACEV,EAAAA,EAAAA,MAAA,OAAA/B,SAAA,EAAKF,EAAAA,EAAAA,KAAA,QAAAE,SAAOyC,KAAY3C,EAAAA,EAAAA,KAAA,OAAK0a,MAAM,wDAEvC,C","sources":["Components/Composite/Common/TMDetailsKPILayout.jsx","Components/UIBase/Details/CustomerDetails.jsx","Components/Composite/Details/CustomerDetailsComposite.jsx","Components/UIBase/Common/AssociatedTerminals.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nexport default function TMDetailsKPILayout({\r\n    KPIList,\r\n    pageName,\r\n    rowHeight,\r\n    widgetHeight,\r\n    isDraggable,\r\n    isResizable,\r\n    kpiDisplayTopBreakpoint\r\n}) {\r\n    const [KPIDisplays, setKPIDisplays] = useState(1);\r\n\r\n    const kpiDiv = React.useRef(null);\r\n\r\n    const hideKpis = () => {\r\n        let currentScrollPos = window.pageYOffset;\r\n        let KPIDisplay = KPIDisplays;\r\n\r\n        // hide kpis based on div position to top of the window \r\n        if (kpiDiv.current && kpiDiv.current.getBoundingClientRect().top < kpiDisplayTopBreakpoint) {\r\n            KPIDisplay = 0;\r\n        }\r\n        // show the kpis once at top of the screen\r\n        else if (currentScrollPos === 0) {\r\n            KPIDisplay = 1\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n        setKPIDisplays(KPIDisplay);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\") {\r\n            window.addEventListener(\"scroll\", hideKpis);\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // remove listener on unmount\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", hideKpis)\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={kpiDiv}>\r\n            {KPIDisplays === 1 ? <TranslationConsumer>\r\n                {(t) => (\r\n                    <div style={{ marginTop: \"6px\" }}>\r\n                        <ErrorBoundary>\r\n                            <KPIDashboardLayout\r\n                                kpiList={KPIList}\r\n                                isDraggable={isDraggable}\r\n                                isResizable={isResizable}\r\n                                rowHeight={rowHeight}\r\n                                widgetHeight={widgetHeight}\r\n                                pageName={pageName}\r\n                            ></KPIDashboardLayout>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n                )}\r\n            </TranslationConsumer> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nTMDetailsKPILayout.propTypes = {\r\n    kpiDisplayTopBreakpoint: PropTypes.number\r\n}\r\n\r\nTMDetailsKPILayout.defaultProps = {\r\n    kpiDisplayTopBreakpoint: 100\r\n}","import React from \"react\";\r\nimport { Accordion, Select } from \"@scuf/common\";\r\nimport { Input } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { AttributeDetails } from \"../../UIBase/Details/AttributeDetails\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\n\r\nCustomerDetails.propTypes = {\r\n  customer: PropTypes.object.isRequired,\r\n  modCustomer: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    languageOptions: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    transportTypes: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  handleDCHCellDataEdit: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  onActiveStatusChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  modDCHAttributes: PropTypes.array.isRequired,\r\n  isDCHEnabled: PropTypes.bool.isRequired,\r\n  dchAttributeValidationErrors: PropTypes.object.isRequired\r\n};\r\n\r\nCustomerDetails.defaultProps = {\r\n  isEnterpriseNode: false,\r\n  isDCHEnabled: false\r\n};\r\n\r\nexport function CustomerDetails({\r\n  customer,\r\n  modCustomer,\r\n  modDCHAttributes,\r\n  validationErrors,\r\n  attributeValidationErrors,\r\n  listOptions,\r\n  onFieldChange,\r\n  onAllTerminalsChange,\r\n  onActiveStatusChange,\r\n  isEnterpriseNode,\r\n  modAttributeMetaDataList,\r\n  onAttributeDataChange,\r\n  isDCHEnabled,\r\n  dchAttributeValidationErrors,\r\n  handleDCHCellDataEdit\r\n}) {\r\n\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find((selectedAttribute) => {\r\n      return selectedAttribute.TerminalCode === terminal;\r\n    })\r\n    return attributeValidation.attributeValidationErrors;\r\n  }\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCustomer.Code}\r\n                label={t(\"Cust_Code\")}\r\n                indicator=\"required\"\r\n                disabled={customer.Code !== \"\"}\r\n                onChange={(data) => onFieldChange(\"Code\", data)}\r\n                error={t(validationErrors.Code)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCustomer.Name}\r\n                label={t(\"Cust_Name\")}\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"Name\", data)}\r\n                error={t(validationErrors.Name)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={modCustomer.TransportationTypes}\r\n                label={t(\"TransportationTypes\")}\r\n                indicator=\"required\"\r\n                options={Utilities.transferListtoOptions(\r\n                  listOptions.transportTypes\r\n                )}\r\n                onChange={(data) => onFieldChange(\"TransportationTypes\", data)}\r\n                error={t(validationErrors.TransportationTypes)}\r\n                disabled={listOptions.transportTypes.length === 0}\r\n                multiple={true}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modCustomer.Description === null\r\n                    ? \"\"\r\n                    : modCustomer.Description\r\n                }\r\n                onChange={(data) => onFieldChange(\"Description\", data)}\r\n                label={t(\"Cust_Description\")}\r\n                error={t(validationErrors.Description)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={modCustomer.LanguageCode}\r\n                label={t(\"CustomerInfo_Language\")}\r\n                indicator=\"required\"\r\n                options={listOptions.languageOptions}\r\n                onChange={(data) => onFieldChange(\"LanguageCode\", data)}\r\n                error={t(validationErrors.LanguageCode)}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modCustomer.ContactPerson === null\r\n                    ? \"\"\r\n                    : modCustomer.ContactPerson\r\n                }\r\n                onChange={(data) => onFieldChange(\"ContactPerson\", data)}\r\n                label={t(\"Cust_ContactPerson\")}\r\n                error={t(validationErrors.ContactPerson)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCustomer.Address === null ? \"\" : modCustomer.Address}\r\n                onChange={(data) => onFieldChange(\"Address\", data)}\r\n                label={t(\"Cust_Address\")}\r\n                error={t(validationErrors.Address)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n           \r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCustomer.Mobile === null ? \"\" : modCustomer.Mobile}\r\n                label={t(\"Cust_Mobile\")}\r\n                onChange={(data) => onFieldChange(\"Mobile\", data)}\r\n                error={t(validationErrors.Mobile)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCustomer.Phone === null ? \"\" : modCustomer.Phone}\r\n                label={t(\"Cust_PhNum\")}\r\n                onChange={(data) => onFieldChange(\"Phone\", data)}\r\n                error={t(validationErrors.Phone)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCustomer.Email === null ? \"\" : modCustomer.Email}\r\n                label={t(\"Cust_Email\")}\r\n                onChange={(data) => onFieldChange(\"Email\", data)}\r\n                error={t(validationErrors.Email)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"FinishedProductInfo_Select\")}\r\n                label={t(\"Cust_Status\")}\r\n                value={modCustomer.Status}\r\n                options={[\r\n                  { text: t(\"ViewShipment_Ok\"), value: true },\r\n                  { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                ]}\r\n                onChange={(data) => onActiveStatusChange(data)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCustomer.Remarks === null ? \"\" : modCustomer.Remarks}\r\n                label={t(\"Cust_Remarks\")}\r\n                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                indicator={\r\n                  modCustomer.Status !== customer.Status ? \"required\" : \"\"\r\n                }\r\n                error={t(validationErrors.Remarks)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            {isEnterpriseNode ?\r\n              (<div className=\"col-12 col-md-6 col-lg-4\">\r\n                <AssociatedTerminals\r\n                  terminalList={listOptions.terminalCodes}\r\n                  selectedTerminal={modCustomer.TerminalCodes}\r\n                  error={t(validationErrors.TerminalCodes)}\r\n                  onFieldChange={onFieldChange}\r\n                  onCheckChange={onAllTerminalsChange}\r\n                ></AssociatedTerminals>\r\n              </div>) : (\"\")}\r\n          </div>\r\n          {\r\n            modAttributeMetaDataList.length > 0 ?\r\n            modAttributeMetaDataList.map((attribute) =>\r\n                <ErrorBoundary>\r\n                  <Accordion>\r\n                    <Accordion.Content\r\n                      className=\"attributeAccordian\"\r\n                      title={isEnterpriseNode ? (attribute.TerminalCode + ' - ' + t(\"Attributes_Header\")) : (t(\"Attributes_Header\"))}\r\n                    >\r\n                      <AttributeDetails\r\n                        selectedAttributeList={attribute.attributeMetaDataList}\r\n                        handleCellDataEdit={onAttributeDataChange}\r\n                        attributeValidationErrors={handleValidationErrorFilter(attributeValidationErrors, attribute.TerminalCode)}\r\n                      ></AttributeDetails>\r\n                    </Accordion.Content>\r\n                  </Accordion>\r\n                </ErrorBoundary>\r\n              ) : null\r\n\r\n          }\r\n          {\r\n            isDCHEnabled && modDCHAttributes && modDCHAttributes.length > 0 ?\r\n              <ErrorBoundary>\r\n                <Accordion>\r\n                  <Accordion.Content\r\n                    className=\"attributeAccordian\"\r\n                    title={t(\"External_System_Fields\")}\r\n                  >\r\n                    {\r\n                      modDCHAttributes.map((dchAttribute) =>\r\n                        //console.log(\"dchAttributeValidationErrors[dchAttribute.EntityName]\", dchAttribute.ID.toString()),\r\n                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                          <Input\r\n                            fluid\r\n                            label={t(dchAttribute.EntityName)}\r\n                            value={dchAttribute.Value === null ? \"\" : dchAttribute.Value}\r\n                            indicator={\"required\"}\r\n                            onChange={(value) => handleDCHCellDataEdit(dchAttribute, value)}\r\n                            error={t(dchAttributeValidationErrors[dchAttribute.ID])}\r\n                            reserveSpace={false}\r\n                          />\r\n                        </div>\r\n                      )\r\n                    }\r\n                  </Accordion.Content>\r\n                </Accordion>\r\n              </ErrorBoundary> : null\r\n          }\r\n\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { CustomerDetails } from \"../../UIBase/Details/CustomerDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { customerValidationDef, dchAttributeValidationDef } from \"../../../JS/ValidationDef\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { emptyCustomer } from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { functionGroups, fnCustomer,fnKPIInformation } from \"../../../JS/FunctionGroups\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { customerAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { kpiCustomerDetail } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass CustomerDetailsComposite extends Component {\r\n  state = {\r\n    customer: lodash.cloneDeep(emptyCustomer), //{ ...emptyCustomer },\r\n    modCustomer: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      customerValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    languageOptions: [],\r\n    //listOptions: { languageOptions: [], terminalCodes: this.getTerminalList(), transportTypes: this.props.userDetails.EntityResult.TransportationTypes },\r\n    saveEnabled: false,\r\n    attributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    isDCHEnabled: false,\r\n    modDCHAttributes: [],\r\n    dchAttribute: [],\r\n    dchAttributeValidationErrors: {},\r\n    customerKPIList: [],\r\n    showAuthenticationLayout: false,\r\n    tempCustomer: {},\r\n  };\r\n\r\n  getTerminalList() {\r\n    return this.props.terminalList;\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modCustomer = lodash.cloneDeep(this.state.modCustomer);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modCustomer[propertyName] = data;\r\n      this.setState({ modCustomer });\r\n      if (customerValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          customerValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n      if (propertyName === \"TerminalCodes\") {\r\n        this.terminalSelectionChange(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modAttributeMetaDataList = [];\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n      var modCustomer = lodash.cloneDeep(this.state.modCustomer);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        });\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.customer.forEach(function (attributeMetaData) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue = modCustomer.Attributes.find(\r\n                (customerAttribute) => {\r\n                  return customerAttribute.TerminalCode === terminal;\r\n                }\r\n              );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modAttributeMetaDataList = [];\r\n      modAttributeMetaDataList = attributesTerminalsList;\r\n      modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modAttributeMetaDataList\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n\r\n      this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getShareholderDetail(shareHolder) {\r\n    //console.log(\"DCH\", this.props.userDetails.EntityResult.IsDCHEnabled);\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shareHolder,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shareHolder,\r\n      keyDataCode: KeyCodes.shareholderCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetShareholder,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            isDCHEnabled:\r\n              result.EntityResult.ExternalSystemCode > 1 ? true : false,\r\n          }, () => {\r\n            if (this.state.isDCHEnabled)\r\n              this.GetDCHAttributeInfoList()\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isDCHEnabled: false,\r\n          });\r\n          console.log(\"Error in getShareholderDetail:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error while getting Shareholder detail:\",\r\n          error,\r\n          shareHolder\r\n        );\r\n      });\r\n    //console.log(\"Shareholder state : \", this.state.isValidShareholderSysExtCode)\r\n  }\r\n\r\n  GetDCHAttributeInfoList() {\r\n    try {\r\n      let modCustomer = lodash.cloneDeep(this.state.modCustomer);\r\n      let dcAttributeConfig = {\r\n        Shareholdercode: this.props.selectedShareholder,\r\n        EntityCode: modCustomer.Code,\r\n        EntityType: Constants.ExtendEntity.CUSTOMER\r\n      }\r\n      var obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.shareholderCode,\r\n        Entity: dcAttributeConfig\r\n      };\r\n      axios(\r\n        RestAPIs.GetDCHAttributeInfoList,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ modDCHAttributes: result.EntityResult, dchAttribute: result.EntityResult })\r\n\r\n          } else {\r\n\r\n            console.log(\"Error in GetDCHAttributeInfoList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Error while getting DCHAttributeInfoList:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"Error while getting DCHAttributeInfoList:\",\r\n        error\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (attributeMetaDataList !== null && attributeMetaDataList !== undefined &&\r\n        Array.isArray(attributeMetaDataList.customer) && attributeMetaDataList.customer.length > 0)\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.customer[0].TerminalCode,\r\n        ]);\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.customer.Code !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getAttributes(nextProps.selectedRow);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getLanguages();\r\n      this.getAttributes(this.props.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(customerRow) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [customerAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors: Utilities.getAttributeInitialValidationErrors(\r\n                result.EntityResult.customer\r\n              ),\r\n            },\r\n            () => this.getCustomer(customerRow)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  getLanguages() {\r\n    axios(\r\n      RestAPIs.GetLanguageList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          console.log(result);\r\n          let languageOptions = [];\r\n          if (result.EntityResult !== null) {\r\n            Object.keys(result.EntityResult).forEach((key) =>\r\n              languageOptions.push({\r\n                text: result.EntityResult[key],\r\n                value: key,\r\n              })\r\n            );\r\n            this.setState({ languageOptions });\r\n          } else {\r\n            console.log(\"No languages identified.\");\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetLanguage:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Language List:\", error);\r\n      });\r\n  }\r\n\r\n  getCustomer(selectedRow) {\r\n    //let selectedRow = props.selectedRow;\r\n    emptyCustomer.TransportationTypes = [];\r\n    emptyCustomer.ShareholderCode = this.props.selectedShareholder;\r\n    emptyCustomer.LanguageCode = this.props.userDetails.EntityResult.UICulture;\r\n    emptyCustomer.TransportationTypes = this.props.userDetails.EntityResult.TransportationTypes;\r\n    if (this.props.terminalList.length === 1) {\r\n      emptyCustomer.TerminalCodes = [...this.props.terminalList];\r\n    }\r\n\r\n    //var listOptions = lodash.cloneDeep(this.state.listOptions);\r\n\r\n    if (selectedRow.Common_Code === undefined) {\r\n      this.setState(\r\n        {\r\n          customer: lodash.cloneDeep(emptyCustomer),\r\n          modCustomer: lodash.cloneDeep(emptyCustomer),\r\n          modAttributeMetaDataList: [],\r\n          //listOptions,\r\n          isReadyToRender: true,\r\n          customerKPIList:[],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnCustomer\r\n          ),\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsDCHEnabled)\r\n            this.getShareholderDetail(this.props.selectedShareholder);\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode === false)\r\n            this.localNodeAttribute();\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.customerCode,\r\n        value: selectedRow.Common_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.customerCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetCustomer,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              customer: lodash.cloneDeep(result.EntityResult),\r\n              modCustomer: lodash.cloneDeep(result.EntityResult),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnCustomer\r\n              ),\r\n            },\r\n            () => {\r\n              this.getKPIList(this.props.selectedShareholder,result.EntityResult.Code)\r\n              if (this.props.userDetails.EntityResult.IsDCHEnabled)\r\n                this.getShareholderDetail(this.props.selectedShareholder);\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            customer: lodash.cloneDeep(emptyCustomer),\r\n            modCustomer: lodash.cloneDeep(emptyCustomer),\r\n            isReadyToRender: true,\r\n          }, () => {\r\n            if (this.props.userDetails.EntityResult.IsDCHEnabled)\r\n              this.getShareholderDetail(this.props.selectedShareholder);\r\n          });\r\n          console.log(\"Error in GetCustomer:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Customer:\", error, selectedRow);\r\n      });\r\n  }\r\n\r\n  validateSave(attributeList) {\r\n    const { modCustomer } = this.state;\r\n    var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    Object.keys(customerValidationDef).forEach(function (key) {\r\n      validationErrors[key] = Utilities.validateField(\r\n        customerValidationDef[key],\r\n        modCustomer[key]\r\n      );\r\n    });\r\n    if (\r\n      modCustomer.ShareholderCode === null ||\r\n      modCustomer.ShareholderCode.trim() === \"\"\r\n    )\r\n      validationErrors[\"ShareholderCode\"] =\r\n        \"MarineReceipt_MandatoryShareholder\";\r\n\r\n    if (modCustomer.Status !== this.state.customer.Status) {\r\n      if (modCustomer.Remarks === null || modCustomer.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"OriginTerminal_RemarksRequired\";\r\n      }\r\n    }\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n    var returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    let dchAttributeValidationErrors = lodash.cloneDeep(\r\n      this.state.dchAttributeValidationErrors\r\n    );\r\n\r\n    let modDCHAttributes = lodash.cloneDeep(\r\n      this.state.modDCHAttributes\r\n    );\r\n\r\n    //dchAttributeValidationErrors = getDCHAttributeErrors(modDCHAttributes, dchAttributeValidationDef);\r\n    modDCHAttributes.forEach((attributes) => {\r\n      dchAttributeValidationErrors[attributes.ID] = Utilities.validateField(\r\n        dchAttributeValidationDef[\"attribute\"],\r\n        attributes.Value\r\n      );\r\n    })\r\n\r\n    this.setState({ dchAttributeValidationErrors });\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(dchAttributeValidationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    return returnValue;\r\n  }\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  saveCustomer = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempCustomer = lodash.cloneDeep(this.state.tempCustomer);\r\n\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n\r\n      tempCustomer = this.fillAttributeDetails(tempCustomer, attributeList);\r\n\r\n\r\n      this.state.customer.Code === \"\"\r\n        ? this.createCustomer(tempCustomer)\r\n        : this.updateCustomer(tempCustomer);\r\n    } catch (error) {\r\n      console.log(\"CustomerDetailsComposite : Error in saveCustomer\");\r\n    }\r\n  };\r\n  handleSave = () => {\r\n    try {\r\n      let modCustomer = lodash.cloneDeep(this.state.modCustomer);\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      // this.setState({ saveEnabled: false });\r\n      if (this.validateSave(attributeList)) {\r\n        modCustomer = this.fillAttributeDetails(modCustomer, attributeList);\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempCustomer = lodash.cloneDeep(modCustomer);\r\n        this.setState({ showAuthenticationLayout, tempCustomer }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveCustomer();\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  fillAttributeDetails(modCustomer, attributeList) {\r\n    try {\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modCustomer.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n\r\n      if (this.state.isDCHEnabled) {\r\n        let modDCHAttributes = lodash.cloneDeep(this.state.modDCHAttributes)\r\n        modCustomer.IsDCHEnabled = true;\r\n        if (modDCHAttributes !== null && modDCHAttributes !== undefined && modDCHAttributes.length > 0) {\r\n          let dchAttributeInfo = {\r\n            EntityCode: modCustomer.Code,\r\n            EntityType: Constants.ExtendEntity.CUSTOMER,\r\n            Shareholdercode: this.props.selectedShareholder,\r\n            TabAttributeDataList: []\r\n          }\r\n\r\n          modDCHAttributes.forEach((attribute) => {\r\n            dchAttributeInfo.TabAttributeDataList.push(attribute)\r\n          })\r\n          modCustomer.DCHAttribute = dchAttributeInfo;\r\n        }\r\n      }\r\n      else {\r\n        modCustomer.IsDCHEnabled = false;\r\n        modCustomer.DCHAttribute = null;\r\n      }\r\n      return modCustomer;\r\n    } catch (error) {\r\n      console.log(\r\n        \"DriverDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  createCustomer(modCustomer) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.customerCode,\r\n        value: modCustomer.Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.customerCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modCustomer,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"CustomerDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Cust_Code\"],\r\n          keyValues: [modCustomer.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateCustomer,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              //customer: lodash.cloneDeep(this.state.modCustomer),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnCustomer\r\n              ),\r\n              showAuthenticationLayout: false,\r\n\r\n            },\r\n            () => this.getCustomer({ Common_Code: modCustomer.Code })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnCustomer\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          console.log(\"Error in CreateCustomer:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modCustomer, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnCustomer\r\n          ),\r\n          showAuthenticationLayout: false,\r\n\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modCustomer, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateCustomer(modCustomer) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.customerCode,\r\n        value: modCustomer.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.customerCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modCustomer,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"CustomerDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Customer_Code\"],\r\n          keyValues: [modCustomer.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateCustomer,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              // customer: { ...this.state.modCustomer },\r\n              //customer: lodash.cloneDeep(this.state.modCustomer),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnCustomer\r\n              ),\r\n              showAuthenticationLayout: false,\r\n\r\n            },\r\n            () => this.getCustomer({ Common_Code: modCustomer.Code })\r\n          );\r\n          // this.getCustomer(this.props);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnCustomer\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          console.log(\"Error in UpdateCustomer:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modCustomer, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modCustomer, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnCustomer\r\n          ),\r\n          showAuthenticationLayout: false,\r\n\r\n        });\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      const customer = lodash.cloneDeep(this.state.customer);\r\n\r\n      var modCustomer = lodash.cloneDeep(this.state.customer);\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState(\r\n        {\r\n          modCustomer: { ...customer },\r\n          validationErrors,\r\n          modAttributeMetaDataList: [],\r\n          dchAttributeValidationErrors: {},\r\n          modDCHAttributes: lodash.cloneDeep(this.state.dchAttribute)\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(modCustomer.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n      if (this.state.customer.Code === \"\") {\r\n        var terminalCodes = [...this.state.terminalCodes];\r\n        terminalCodes = [];\r\n        this.setState({ terminalCodes });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[\r\n            attribute.Code\r\n          ] = Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors,modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDCHCellDataEdit = (attribute, value) => {\r\n    try {\r\n      attribute.Value = value;\r\n      this.setState({\r\n        attribute: attribute,\r\n      });\r\n      const dchAttributeValidationErrors = lodash.cloneDeep(\r\n        this.state.dchAttributeValidationErrors\r\n      );\r\n\r\n      dchAttributeValidationErrors[attribute.ID.toString()] = Utilities.validateField(\r\n        dchAttributeValidationDef[\"attribute\"],\r\n        value\r\n      );\r\n      this.setState({ dchAttributeValidationErrors });\r\n\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerDetailsComposite:Error occured on handleDCHCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors: Utilities.getAttributeInitialValidationErrors(\r\n          attributeMetaDataList.customer\r\n        ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      //var listOptions = { ...this.state.listOptions };\r\n      var modCustomer = lodash.cloneDeep(this.state.modCustomer);\r\n      let terminalOptions = this.props.terminalList;\r\n      if (checked) modCustomer.TerminalCodes = terminalOptions;\r\n      else modCustomer.TerminalCodes = [];\r\n      this.setState({ modCustomer });\r\n      this.terminalSelectionChange(modCustomer.TerminalCodes);\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerDetailsComposite:Error occured on handleAllTerminalsChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modCustomer = lodash.cloneDeep(this.state.modCustomer);\r\n      modCustomer.Status = value;\r\n      if (modCustomer.Status !== this.state.customer.Status)\r\n        modCustomer.Remarks = \"\";\r\n      this.setState({ modCustomer });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  //Get KPI for Customers\r\n  getKPIList(shareholder, customerCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      \r\n      var transportationType = \"\";\r\n      if (this.props.genericProps !== undefined) {\r\n        if (this.props.genericProps.transportationType !== undefined) {\r\n          transportationType = this.props.genericProps.transportationType;\r\n        }\r\n      }\r\n      let objKPIRequestData = {\r\n        PageName: kpiCustomerDetail,\r\n        TransportationType: transportationType,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder }, { key: \"CustomerCode\", value: customerCode }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              customerKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ customerKPIList: [] });\r\n            console.log(\"Error in customer KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Customer KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n  render() {\r\n    const listOptions = {\r\n      terminalCodes: this.getTerminalList(),\r\n      transportTypes: this.props.userDetails.EntityResult.TransportationTypes,\r\n      languageOptions: this.state.languageOptions,\r\n    };\r\n\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"Cust_LastUpDt\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modCustomer.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modCustomer.LastUpdatedTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"Cust_LastActiveTime\",\r\n        fieldValue:\r\n          this.state.modCustomer.LastActiveTime !== undefined &&\r\n            this.state.modCustomer.LastActiveTime !== null\r\n            ? new Date(\r\n              this.state.modCustomer.LastActiveTime\r\n            ).toLocaleDateString() +\r\n            \" \" +\r\n            new Date(\r\n              this.state.modCustomer.LastActiveTime\r\n            ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"Cust_CreateDt\",\r\n        fieldValue:\r\n          new Date(this.state.modCustomer.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modCustomer.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.customer.Code}\r\n            newEntityName=\"CustInfo_Title\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <TMDetailsKPILayout KPIList={this.state.customerKPIList}> </TMDetailsKPILayout>\r\n\r\n        <ErrorBoundary>\r\n          <CustomerDetails\r\n            customer={this.state.customer}\r\n            modCustomer={this.state.modCustomer}\r\n            modDCHAttributes={this.state.modDCHAttributes}\r\n            genericProps={this.props.genericProps}\r\n            validationErrors={this.state.validationErrors}\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            attributeMetaDataList={this.state.attributeMetaDataList}\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            //listOptions={this.state.listOptions}\r\n            listOptions={listOptions}\r\n            onFieldChange={this.handleChange}\r\n            onAllTerminalsChange={this.handleAllTerminalsChange}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            onAttributeDataChange={this.handleAttributeDataChange} \r\n            isDCHEnabled={this.state.isDCHEnabled}\r\n            dchAttributeValidationErrors={this.state.dchAttributeValidationErrors}\r\n            handleDCHCellDataEdit={this.handleDCHCellDataEdit}\r\n          ></CustomerDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.customer.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnCustomer}\r\n            handleOperation={this.saveCustomer}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CustomerDetailsComposite);\r\n\r\nCustomerDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  genericProps: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Select, Checkbox } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nAssociatedTerminals.propTypes = {\r\n  terminalList: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedTerminal: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  validationError: PropTypes.string,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCheckChange: PropTypes.func.isRequired,\r\n};\r\nAssociatedTerminals.defaultProps = {\r\n  terminalList: [],\r\n  selectedTerminal: [],\r\n  validationError: \"\",\r\n};\r\nexport function AssociatedTerminals({\r\n  terminalList,\r\n  selectedTerminal,\r\n  validationError,\r\n  onFieldChange,\r\n  onCheckChange,\r\n}) {\r\n  //console.log(\"component terminalList\", terminalList);\r\n  if (selectedTerminal === null) selectedTerminal = [];\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div style={{ width: \"80%\" }}>\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"TerminalCodes\")}\r\n              value={selectedTerminal}\r\n              multiple={true}\r\n              options={Utilities.transferListtoOptions(terminalList)}\r\n              onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n              error={t(validationError)}\r\n              disabled={terminalList.length === 0}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"ddlSelectAll\">\r\n            <Checkbox\r\n              label={t(\"Common_All\")}\r\n              checked={\r\n                Array.isArray(selectedTerminal) &&\r\n                selectedTerminal.length === terminalList.length\r\n              }\r\n              onChange={(checked) => onCheckChange(checked)}\r\n            ></Checkbox>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMDetailsKPILayout","_ref","KPIList","pageName","rowHeight","widgetHeight","isDraggable","isResizable","kpiDisplayTopBreakpoint","KPIDisplays","setKPIDisplays","useState","kpiDiv","React","hideKpis","currentScrollPos","window","pageYOffset","KPIDisplay","current","getBoundingClientRect","top","useEffect","addEventListener","removeEventListener","_jsx","ref","children","TranslationConsumer","t","style","marginTop","ErrorBoundary","KPIDashboardLayout","kpiList","defaultProps","CustomerDetails","customer","modCustomer","modDCHAttributes","validationErrors","attributeValidationErrors","listOptions","onFieldChange","onAllTerminalsChange","onActiveStatusChange","isEnterpriseNode","modAttributeMetaDataList","onAttributeDataChange","isDCHEnabled","dchAttributeValidationErrors","handleDCHCellDataEdit","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","_jsxs","className","Input","fluid","value","Code","label","indicator","disabled","onChange","data","error","reserveSpace","Name","Select","placeholder","TransportationTypes","options","Utilities","transportTypes","length","multiple","search","noResultsMessage","Description","LanguageCode","languageOptions","ContactPerson","Address","Mobile","Phone","Email","Status","text","Remarks","AssociatedTerminals","terminalList","terminalCodes","selectedTerminal","TerminalCodes","onCheckChange","map","attribute","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","handleCellDataEdit","dchAttribute","EntityName","Value","ID","CustomerDetailsComposite","Component","constructor","arguments","state","lodash","emptyCustomer","customerValidationDef","isReadyToRender","saveEnabled","customerKPIList","showAuthenticationLayout","tempCustomer","handleChange","propertyName","this","setState","undefined","terminalSelectionChange","console","log","handleAuthenticationClose","saveCustomer","attributeList","fillAttributeDetails","createCustomer","updateCustomer","handleSave","validateSave","props","userDetails","EntityResult","IsWebPortalUser","handleReset","Object","keys","forEach","key","IsEnterpriseNode","handleResetAttributeValidationError","localNodeAttribute","handleAttributeDataChange","matchedAttributes","matchedAttributesList","filter","modattribute","Array","isArray","DefaultValue","toString","dchAttributeValidationDef","handleAllTerminalsChange","checked","terminalOptions","handleActiveStatusChange","getTerminalList","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","Attributes","customerAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","push","getShareholderDetail","shareHolder","keyCode","KeyCodes","obj","ShareHolderCode","keyDataCode","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","ExternalSystemCode","GetDCHAttributeInfoList","ErrorList","catch","dcAttributeConfig","Shareholdercode","selectedShareholder","EntityCode","EntityType","Constants","CUSTOMER","Entity","componentWillReceiveProps","nextProps","selectedRow","Common_Code","getAttributes","componentDidMount","IsArchived","getLanguages","customerRow","customerAttributeEntity","getCustomer","ShareholderCode","UICulture","FunctionsList","functionGroups","modify","fnCustomer","getKPIList","IsDCHEnabled","add","trim","returnValue","values","every","attributes","dchAttributeInfo","TabAttributeDataList","DCHAttribute","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","shareholder","customerCode","view","fnKPIInformation","transportationType","genericProps","objKPIRequestData","PageName","kpiCustomerDetail","TransportationType","InputParameters","ListKPIDetails","render","popUpContents","fieldName","fieldValue","Date","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","LastActiveTime","CreatedTime","TMDetailsHeader","entityCode","newEntityName","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","validationError","display","justifyContent","width","Checkbox","margin","Popup","element","Icon","marginLeft","root","name","size","position","List","content","Button","onClick","float","handleAttributeDateValue","convertAttributeDatetoString","chars","split","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","toLocaleString","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","getOptionsWithSelect","ddlOptions","selectOptionText","option","unshift","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}