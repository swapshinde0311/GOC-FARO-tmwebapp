{"version":3,"file":"static/js/8773.3a1efba0.chunk.js","mappings":"uXAmBO,SAASA,EAAyBC,GAKrC,IALsC,YACtCC,EAAW,eACXC,EAAc,iBACdC,EAAgB,cAChBC,GACHJ,EACG,OACIK,EAAAA,EAAAA,KAACC,EAAAA,oBAAmB,CAAAC,SACfA,CAACC,EAAGC,KACDJ,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mBAAkBH,UAC7BI,EAAAA,EAAAA,MAAA,OAAKD,UAAU,MAAKH,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,2BAA0BH,UACrCF,EAAAA,EAAAA,KAACO,EAAAA,MAAK,CAEFC,OAAK,EACLC,MAAOZ,EAAea,KACtBC,UAAU,WACVC,SAA+B,KAArBhB,EAAYc,KACtBG,SAAWC,GAASf,EAAc,OAAQe,GAC1CC,MAAOZ,EAAE,uBACTa,MAAOb,EAAEL,EAAiBY,MAC1BO,cAAc,GARTb,MAWbJ,EAAAA,EAAAA,KAAA,OAAKK,UAAU,2BAA0BH,UACrCF,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CACPT,MAAOU,IAC0B,OAA7BtB,EAAeuB,gBACkBC,IAA7BxB,EAAeuB,WACc,KAA7BvB,EAAeuB,WACb,IAAIE,MAAOC,WAAW,GACtB,IAAID,KAAKzB,EAAeuB,WAAWG,WAAW,IAExDR,MAAOZ,EAAE,uBACTqB,cAAe,UACfX,SAAWC,GACPf,EAAc,YAAaoB,IAAOL,GAAMW,UAE5CT,MAAOb,EAAEL,EAAiBsB,gBAGlCpB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,4BAA2BH,UACtCF,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CACPT,MAAOU,IACwB,OAA3BtB,EAAe6B,cACgBL,IAA3BxB,EAAe6B,SACY,KAA3B7B,EAAe6B,SACb,IAAIJ,MAAOC,WAAW,GACtB,IAAID,KAAKzB,EAAe6B,SAASH,WAAW,IAEtDR,MAAOZ,EAAE,qBACTqB,cAAe,UACnBX,SAAWC,GACPf,EAAc,UAAWoB,IAAOL,GAAMW,UAEtCT,MAAOb,EAAEL,EAAiB4B,cAGlC1B,EAAAA,EAAAA,KAAA,OAAKK,UAAU,2BAA0BH,UACrCF,EAAAA,EAAAA,KAACO,EAAAA,MAAK,CACFC,OAAK,EACLC,MAAOZ,EAAe8B,QACtBZ,MAAOZ,EAAE,eACTU,SAAWC,GAASf,EAAc,UAAWe,GAC7CE,MAAOb,EAAEL,EAAiB6B,SAC1BV,cAAc,YAS9C,CA/EAvB,EAA0BkC,aAAe,CACrCC,kBAAkB,EAClBC,aAAc,I,0BCIlB,MAAMC,UAA2CC,EAAAA,UAASC,WAAAA,GAAA,SAAAC,WAAA,KAEtDC,MAAQ,CACJvC,YAAawC,IAAAA,UAAiBC,EAAAA,IAC9BxC,eAAgB,CAAC,EACjBC,iBAAkBwC,EAAAA,GAAqCC,EAAAA,IACvDC,iBAAiB,EACjBC,aAAa,EACbC,0BAA0B,EAC1BC,uBAAuB,CAAC,GAC3B,KAoGDC,aAAe,CAACC,EAAc/B,KAE1B,IACI,MAAMjB,EAAiBuC,IAAAA,UAAiBU,KAAKX,MAAMtC,gBACnDA,EAAegD,GAAgB/B,EAC/BgC,KAAKC,SAAS,CAAElD,mBAChB,MAAMC,EAAmBsC,IAAAA,UAAiBU,KAAKX,MAAMrC,uBACCuB,IAAlDkB,EAAAA,GAAgCM,KAChC/C,EAAiB+C,GAAgBP,EAAAA,GAC7BC,EAAAA,GAAgCM,GAChC/B,GAEJgC,KAAKC,SAAS,CAAEjD,qBAExB,CAAE,MAAOkB,GACLgC,QAAQC,IACJ,mEACAjC,EAER,GACF,KACFkC,YAAc,KACV,IACI,MAAM,iBAAEpD,GAAqB,IAAKgD,KAAKX,OACjCvC,EAAcwC,IAAAA,UAAiBU,KAAKX,MAAMvC,aAChDuD,OAAOC,KAAKtD,GAAkBuD,SAAQ,SAAUC,GAC5CxD,EAAiBwD,GAAO,EAC5B,IACAR,KAAKC,SAAS,CACVlD,eAAgB,IAAKD,GACrBE,oBAER,CAAE,MAAOkB,GACLgC,QAAQC,IAAI,kEAAmEjC,EACnF,GACF,KAgCFuC,uBAAyB,KACrB,IACIT,KAAKC,SAAS,CAAEN,aAAa,IAC7B,IAAIE,EAAyBP,IAAAA,UAAiBU,KAAKX,MAAMQ,wBACzDG,KAAKU,kCAAkCb,EAI3C,CAAE,MAAO3B,GACLgC,QAAQC,IAAI,mEAChB,GACH,KACDQ,WAAa,KAET,IACI,IAAI5D,EAAiBuC,IAAAA,UAAiBU,KAAKX,MAAMtC,gBAEjD,GAAIiD,KAAKY,aAAa7D,GAAiB,CACnC,IAAI8C,EAAyBP,IAAAA,UAAiBvC,GAC1C6C,GACwD,IAAxDI,KAAKa,MAAMC,YAAYC,aAAaC,gBAGxChB,KAAKC,SAAS,CAAEL,2BAA0BC,2BAA0B,MAC/B,IAA7BD,GACAI,KAAKS,wBACT,GAER,MACIT,KAAKC,SAAS,CAAEN,aAAa,GAErC,CACA,MAAOzB,GACHgC,QAAQC,IAAI,iEAAkEjC,EAClF,GACF,KAgFF+C,0BAA4B,KACxBjB,KAAKC,SAAS,CACVL,0BAA0B,GAC5B,CACJ,CA5RFsB,iBAAAA,GACI,IACI1B,EAAAA,GAAqBQ,KAAKa,MAAMC,YAAYC,aAAaI,YACzDnB,KAAKoB,SAASpB,KAAKa,MAAMQ,YAC7B,CAAE,MAAOnD,GACLgC,QAAQC,IACJ,wEACAjC,EAER,CACJ,CAEAoD,yBAAAA,CAA0BC,GACtB,IACI,GACkC,KAA9BvB,KAAKX,MAAMvC,YAAY0E,SACMjD,IAA7BgD,EAAUF,YAAYG,IACtBxB,KAAKa,MAAMY,aAAaC,YAAcH,EAAUE,aAAaC,UAC/D,CACE1B,KAAKoB,SAASG,EAAUF,aACxB,IAAIrE,EAAmB,IAAKgD,KAAKX,MAAMrC,kBACvCqD,OAAOC,KAAKtD,GAAkBuD,SAASC,IACnCxD,EAAiBwD,GAAO,EAAE,IAE9BR,KAAKC,SAAS,CAAEjD,oBACpB,CACJ,CAAE,MAAOkB,GACLgC,QAAQC,IACJ,gFACAjC,EAER,CACJ,CAEAkD,QAAAA,CAASO,GACL,IACI,QAA0BpD,IAAtBoD,EAAeH,GAYf,YAXAxB,KAAKC,SAAS,CACVnD,YAAawC,IAAAA,UAAiBC,EAAAA,IAC9BxC,eAAgBuC,IAAAA,UAAiBC,EAAAA,IACjCG,iBAAiB,EACjBC,YAAaH,EAAAA,GACTQ,KAAKa,MAAMC,YAAYC,aAAaa,cACpCC,EAAAA,EAAeC,IACfC,EAAAA,MAMZ,IAAIC,EAAU,CACV,CACIxB,IAAKyB,EAAAA,GACLtE,MAAOgE,EAAeH,KAG1BU,EAAM,CACNC,QAASR,EAAeH,GACxBY,YAAaH,EAAAA,GACbA,SAAUD,GAEdK,IACIC,EAAAA,IACA9C,EAAAA,GACI0C,EACAlC,KAAKa,MAAMY,aAAaC,YAE9Ba,MAAMC,IACJ,IAAIC,EAASD,EAASxE,MACG,IAArByE,EAAOC,UACP1C,KAAKC,SACD,CACIP,iBAAiB,EACjB5C,YAAawC,IAAAA,UAAiBmD,EAAO1B,cACrChE,eAAgBuC,IAAAA,UAAiBmD,EAAO1B,cACxCpB,YAAaH,EAAAA,GACTQ,KAAKa,MAAMC,YAAYC,aAAaa,cACpCC,EAAAA,EAAec,OACfZ,EAAAA,OAKZ/B,KAAKC,SAAS,CACVnD,YAAawC,IAAAA,UAAiBC,EAAAA,IAC9BxC,eAAgBuC,IAAAA,UAAiBC,EAAAA,IACjCG,iBAAiB,IAErBQ,QAAQC,IAAI,2BAA4BsC,EAAOG,WACnD,IAECC,OAAO3E,IACJgC,QAAQC,IAAI,8BAA+BjC,EAAOyD,EAAe,GAE7E,CAAE,MAAOzD,GACLgC,QAAQC,IAAI,8BAA+BjC,EAC/C,CACJ,CAsCA0C,YAAAA,CAAa7D,GACT,IACI,IAAIC,EAAmBsC,IAAAA,UAAiBU,KAAKX,MAAMrC,kBACnDqD,OAAOC,KAAKb,EAAAA,IAAiCc,SAAQ,SAAUC,GAC3DxD,EAAiBwD,GAAOhB,EAAAA,GACpBC,EAAAA,GAAgCe,GAChCzD,EAAeyD,GAEvB,IACA,IAAIsC,EAAe,CACfC,YAAa,WACbC,QAAS,wCACTC,qBAAsB,IAE1BjD,KAAKC,SAAS,CAAEjD,qBAChB,IAAIkG,GAAc,EAMlB,OALIA,IACAA,EAAc7C,OAAO8C,OAAOnG,GAAkBoG,OAAM,SAAUzF,GAC1D,MAAiB,KAAVA,CACX,KAEAmF,EAAaG,qBAAqBI,OAAS,GAC3CrD,KAAKa,MAAMyC,QAAQtD,KAAKX,MAAMtC,eAAgB,SAAU+F,IACjD,GAEJI,CACX,CAAE,MAAOhF,GACLgC,QAAQC,IAAI,wBAAwBjC,EACxC,CACJ,CAqCAwC,iCAAAA,CAAkC3D,GAC9B,IACI,IAAImF,EAAM,CACNqB,OAAQxG,GAGR+F,EAAe,CACfC,YAAa,WACbC,QAAS,wCACTC,qBAAsB,CAClB,CACIO,UAAW,CAAC,uBACZC,UAAW,CAAC1G,EAAea,MAC3B8F,WAAW,EACXC,aAAc,MAK1BtB,IACIC,EAAAA,IACA9C,EAAAA,GACI0C,EACAlC,KAAKa,MAAMY,aAAaC,YAE9Ba,MAAMC,IAEJ,IAAIC,EAASD,EAASxE,KAGtB,GAFA8E,EAAaC,YAAcN,EAAOC,UAAY,UAAY,WAC1DI,EAAaG,qBAAqB,GAAGS,UAAYjB,EAAOC,WAC/B,IAArBD,EAAOC,UAAoB,CAE3B,IAAIkB,EAAkBnB,EAAO1B,aAC7Bf,KAAKC,SACD,CACIlD,eAAgBuC,IAAAA,UAAiBmD,EAAO1B,cACxCpB,YAAaH,EAAAA,GACTQ,KAAKa,MAAMC,YAAYC,aAAaa,cACpCC,EAAAA,EAAec,OACfZ,EAAAA,IAEJnC,0BAA0B,IAG9B,IAAMI,KAAKoB,SAAS,CAAEI,GAAIoC,EAAgBpC,MAElD,MACIsB,EAAaG,qBAAqB,GAAGU,aACjClB,EAAOG,UAAU,GACrB5C,KAAKC,SAAS,CACVN,YAAaH,EAAAA,GACTQ,KAAKa,MAAMC,YAAYC,aAAaa,cACpCC,EAAAA,EAAeC,IACfC,EAAAA,IAEJnC,0BAA0B,IAG9BM,QAAQC,IAAI,+BAAgCsC,EAAOG,WAEvD5C,KAAKa,MAAMyC,QAAQtD,KAAKX,MAAMtC,eAAgB,MAAO+F,EAAa,IAEjED,OAAO3E,IACJ8B,KAAKC,SAAS,CACVN,YAAaH,EAAAA,GACTQ,KAAKa,MAAMC,YAAYC,aAAaa,cACpCC,EAAAA,EAAeC,IACfC,EAAAA,IAEJnC,0BAA0B,IAG9BkD,EAAaG,qBAAqB,GAAGU,aAAezF,EACpD8B,KAAKa,MAAMyC,QAAQtD,KAAKX,MAAMtC,eAAgB,MAAO+F,EAAa,GAE9E,CAAE,MAAOe,GACL3D,QAAQC,IAAI,gDAAgD0D,EAChE,CACJ,CAOAC,MAAAA,GACI,OAAO9D,KAAKX,MAAMK,iBACdlC,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACIF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAa,CAAA3G,UACVF,EAAAA,EAAAA,KAAC8G,EAAAA,EAAe,CACZC,WAAYjE,KAAKX,MAAMvC,YAAYc,KACnCsG,cAAc,0BAItBhH,EAAAA,EAAAA,KAAC6G,EAAAA,EAAa,CAAA3G,UACVF,EAAAA,EAAAA,KAACN,EAAyB,CACtBE,YAAakD,KAAKX,MAAMvC,YACxBC,eAAgBiD,KAAKX,MAAMtC,eAC3BC,iBAAkBgD,KAAKX,MAAMrC,iBAC7BC,cAAe+C,KAAKF,aACpBf,iBAAkBiB,KAAKa,MAAMC,YAAYC,aAAaoD,sBAI9DjH,EAAAA,EAAAA,KAAC6G,EAAAA,EAAa,CAAA3G,UACVF,EAAAA,EAAAA,KAACkH,EAAAA,EAAoB,CACjBC,WAAYrE,KAAKa,MAAMyD,OACvB3D,WAAYX,KAAKW,WACjBP,YAAaJ,KAAKI,YAClBT,YAAaK,KAAKX,MAAMM,gBAG/BK,KAAKX,MAAMO,0BACR1C,EAAAA,EAAAA,KAACqH,EAAAA,EAAwB,CACrBC,SAAUxE,KAAKa,MAAMC,YAAYC,aAAa0D,SAC9CC,aACoC,KAAhC1E,KAAKX,MAAMvC,YAAYc,KACjBiE,EAAAA,EAAeC,IACfD,EAAAA,EAAec,OAEzBgC,cAAe5C,EAAAA,GACf6C,gBAAiB5E,KAAKS,uBACtBoE,YAAa7E,KAAKiB,4BAEtB,SAGR/D,EAAAA,EAAAA,KAAC4H,EAAAA,EAAW,CAAC9B,QAAQ,WAE7B,EAGJ,MAOA,GAAe+B,EAAAA,EAAAA,KAPU1F,IACd,CACHyB,YAAazB,EAAM2F,eAAelE,YAClCW,aAAcpC,EAAM2F,eAAeC,aAI3C,CAAwChG,E,iFChWjC,SAAS+E,EAAenH,GAAgD,IAA/C,WAAEoH,EAAU,cAAEC,EAAa,cAAEgB,GAAerI,EAC1E,OACEK,EAAAA,EAAAA,KAACC,EAAAA,oBAAmB,CAAAC,SAChBC,IACAH,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kBAAiBH,UAC9BI,EAAAA,EAAAA,MAAA,OAAKD,UAAU,oBAAmBH,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,4BAA2BH,UACxCF,EAAAA,EAAAA,KAAA,QAAMiI,MAAO,CAAEC,OAAQ,QAAU7H,UAAU,cAAaH,SACtC,KAAf6G,QAAoC1F,IAAf0F,EAClB5G,EAAE6G,GACFD,MAGQ,KAAfA,QACc1F,IAAf0F,GACAiB,EAAc7B,OAAS,GACrBnG,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kBAAiBH,UAC9BF,EAAAA,EAAAA,KAACmI,EAAAA,MAAK,CACJC,SACE9H,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,CACGC,EAAE6H,EAAc,GAAGK,WAAa,IAAI,IACpC,IAAML,EAAc,GAAGM,YACxBtI,EAAAA,EAAAA,KAACuI,EAAAA,KAAI,CACHN,MAAO,CAAEO,WAAY,QACrBC,KAAK,SACLC,KAAK,aACLC,KAAK,aAIXC,SAAS,cACT1I,UAEAF,EAAAA,EAAAA,KAAC6I,EAAAA,KAAI,CAACxI,UAAU,qBAAoBH,SACjC8H,EAAcc,KAAKC,IAClBzI,EAAAA,EAAAA,MAACuI,EAAAA,KAAKG,QAAO,CAEX3I,UAAU,gCAA+BH,SAAA,CAExCC,EAAE4I,EAAQV,WAAa,IAAI,IAAE,IAAMU,EAAQT,aAHxC,6BAUd,SAOd,CA3DAxB,EAAgBlF,aAAe,CAC7BmF,WAAY,GACZC,cAAe,GACfgB,cAAe,IA0DjB,S,gFCjEO,SAASd,EAAoBvH,GAKhC,IALiC,WACnCwH,EAAU,WACV1D,EAAU,YACVP,EAAW,YACXT,GACD9C,EACC,OACEK,EAAAA,EAAAA,KAACC,EAAAA,oBAAmB,CAAAC,SAChBC,IACAG,EAAAA,EAAAA,MAAA,OAAKD,UAAU,yBAAwBH,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,2BAA0BH,UACvCF,EAAAA,EAAAA,KAACiJ,EAAAA,OAAM,CACL5I,UAAU,aACV6I,QAAS/B,EACT4B,QAAS5I,EAAE,aAGfH,EAAAA,EAAAA,KAAA,OAAKK,UAAU,2BAA0BH,UACvCI,EAAAA,EAAAA,MAAA,OAAK2H,MAAO,CAAEkB,MAAO,SAAUjJ,SAAA,EAC7BF,EAAAA,EAAAA,KAACiJ,EAAAA,OAAM,CACLF,QAAS5I,EAAE,uBACXE,UAAU,eACV6I,QAAShG,KAEXlD,EAAAA,EAAAA,KAACiJ,EAAAA,OAAM,CACLF,QAAS5I,EAAE,QACXS,UAAW6B,EACXyG,QAASzF,aAWzB,CAvCAyD,EAAqBtF,aAAe,CAAEa,aAAa,E,qECF5C,SAAS2G,EAAazJ,GAOzB,IAP0B,MAC5Bc,EAAK,MACLM,EAAK,cACLS,EAAa,SACbX,EAAQ,SACRD,EAAQ,MACRI,GACDrB,EACC,OACEW,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,iBAAgBH,UAC7BF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,sBAAqBH,SAAEa,OAEzCf,EAAAA,EAAAA,KAAA,OAAKK,UAAU,6DAA4DH,UACzEF,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CACTmI,YAAY,EACZC,aAAc7I,EACdA,MAAOA,EACPI,SAAUA,EACVY,OAAQD,EACR+H,YAAU,EACVlJ,UAAU,aACVO,SAAUA,EACVI,MAAOA,QAKjB,CAhCAoI,EAAcxH,aAAe,CAC3BhB,UAAU,E","sources":["Components/UIBase/Details/ShiftConfigurationDetails.jsx","Components/Composite/Details/ShiftConfigurationDetailsComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Common/TimePicker.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Input, Select } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TimePickerMod as TimePicker } from \"../Common/TimePicker\";\r\nimport moment from \"moment-timezone\";\r\nShiftConfigurationDetails.propTypes = {\r\n    shiftConfig: PropTypes.object.isRequired,\r\n    modShiftConfig: PropTypes.object.isRequired,\r\n    validationErrors: PropTypes.object.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n}\r\n\r\nShiftConfigurationDetails.defaultProps = {\r\n    isEnterpriseNode: false,\r\n    terminalCode: [],\r\n}\r\n\r\nexport function ShiftConfigurationDetails({\r\n    shiftConfig,\r\n    modShiftConfig,\r\n    validationErrors,\r\n    onFieldChange,\r\n}) {\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t, index) => (\r\n                <div className=\"detailsContainer\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                key={index}\r\n                                fluid\r\n                                value={modShiftConfig.Name}\r\n                                indicator=\"required\"\r\n                                disabled={shiftConfig.Name !== \"\"}\r\n                                onChange={(data) => onFieldChange(\"Name\", data)}\r\n                                label={t(\"ShiftInfo_ShiftName\")}\r\n                                error={t(validationErrors.Name)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <TimePicker\r\n                                value={moment(\r\n                                    modShiftConfig.StartTime === null ||\r\n                                        modShiftConfig.StartTime === undefined ||\r\n                                        modShiftConfig.StartTime === \"\"\r\n                                        ? new Date().setSeconds(0)\r\n                                        : new Date(modShiftConfig.StartTime).setSeconds(0)\r\n                                )}\r\n                                label={t(\"ShiftInfo_StartTime\")}\r\n                                displayFormat={\"hh:mm A\"}\r\n                                onChange={(data) =>\r\n                                    onFieldChange(\"StartTime\", moment(data).format())\r\n                                }\r\n                                error={t(validationErrors.StartTime)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4 \">\r\n                            <TimePicker\r\n                                value={moment(\r\n                                    modShiftConfig.EndTime === null ||\r\n                                        modShiftConfig.EndTime === undefined ||\r\n                                        modShiftConfig.EndTime === \"\"\r\n                                        ? new Date().setSeconds(0)\r\n                                        : new Date(modShiftConfig.EndTime).setSeconds(0)\r\n                                )}\r\n                                label={t(\"ShiftInfo_EndTime\")}\r\n                                displayFormat={\"hh:mm A\"}\r\n                            onChange={(data) =>\r\n                                onFieldChange(\"EndTime\", moment(data).format())\r\n                            }\r\n                                error={t(validationErrors.EndTime)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modShiftConfig.Remarks}\r\n                                label={t(\"Description\")}\r\n                                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                                error={t(validationErrors.Remarks)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            )}\r\n        </TranslationConsumer>\r\n    )\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport lodash from \"lodash\";\r\nimport { emptyShiftConfig } from \"../../../JS/DefaultEntities\";\r\nimport { functionGroups, fnShiftConfig } from \"../../../JS/FunctionGroups\";\r\nimport { ShiftConfigurationDetails } from \"../../UIBase/Details/ShiftConfigurationDetails\";\r\nimport { ShiftconfigurationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport ShowAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\n\r\nclass ShiftConfigurationDetailsComposite extends Component{\r\n\r\n    state = {\r\n        shiftConfig: lodash.cloneDeep(emptyShiftConfig),\r\n        modShiftConfig: {},\r\n        validationErrors: Utilities.getInitialValidationErrors(ShiftconfigurationValidationDef),\r\n        isReadyToRender: false,\r\n        saveEnabled: false,\r\n        showAuthenticationLayout: false,\r\n        tempShiftConfiguration:{}\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n            this.GetShift(this.props.selectedRow);\r\n        } catch (error) {\r\n            console.log(\r\n                \"ShiftConfigurationDetailsComposite:Error occured on componentDidMount\",\r\n                error\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        try {\r\n            if (\r\n                this.state.shiftConfig.ID !== \"\" &&\r\n                nextProps.selectedRow.ID === undefined &&\r\n                this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n            ) {\r\n                this.GetShift(nextProps.selectedRow);\r\n                let validationErrors = { ...this.state.validationErrors };\r\n                Object.keys(validationErrors).forEach((key) => {\r\n                    validationErrors[key] = \"\";\r\n                });\r\n                this.setState({ validationErrors });\r\n            }\r\n        } catch (error) {\r\n            console.log(\r\n                \"ShiftConfigurationDetailsComposite:Error occured on componentWillReceiveProps\",\r\n                error\r\n            );\r\n        }\r\n    }\r\n    \r\n    GetShift(ShiftConfigRow) {\r\n        try {\r\n            if (ShiftConfigRow.ID === undefined) {\r\n                this.setState({\r\n                    shiftConfig: lodash.cloneDeep(emptyShiftConfig),\r\n                    modShiftConfig: lodash.cloneDeep(emptyShiftConfig),\r\n                    isReadyToRender: true,\r\n                    saveEnabled: Utilities.isInFunction(\r\n                        this.props.userDetails.EntityResult.FunctionsList,\r\n                        functionGroups.add,\r\n                        fnShiftConfig\r\n                    ),\r\n                }\r\n                );\r\n                return;\r\n            }\r\n            var keyCode = [\r\n                {\r\n                    key: KeyCodes.ShiftID,\r\n                    value: ShiftConfigRow.ID,\r\n                }\r\n            ];\r\n            var obj = {\r\n                ShiftID: ShiftConfigRow.ID,\r\n                keyDataCode: KeyCodes.ShiftID,\r\n                KeyCodes: keyCode,\r\n            };\r\n            axios(\r\n                RestAPIs.GetShift,\r\n                Utilities.getAuthenticationObjectforPost(\r\n                    obj,\r\n                    this.props.tokenDetails.tokenInfo\r\n                )\r\n            ).then((response) => {\r\n                var result = response.data;\r\n                if (result.IsSuccess === true) {\r\n                    this.setState(\r\n                        {\r\n                            isReadyToRender: true,\r\n                            shiftConfig: lodash.cloneDeep(result.EntityResult),\r\n                            modShiftConfig: lodash.cloneDeep(result.EntityResult),\r\n                            saveEnabled: Utilities.isInFunction(\r\n                                this.props.userDetails.EntityResult.FunctionsList,\r\n                                functionGroups.modify,\r\n                                fnShiftConfig\r\n                            ),\r\n                        }\r\n                    );\r\n                } else {\r\n                    this.setState({\r\n                        shiftConfig: lodash.cloneDeep(emptyShiftConfig),\r\n                        modShiftConfig: lodash.cloneDeep(emptyShiftConfig),\r\n                        isReadyToRender: true,\r\n                    });\r\n                    console.log(\"Error in getShiftConfig:\", result.ErrorList);\r\n                }\r\n            })\r\n                .catch((error) => {\r\n                    console.log(\"Error while getShiftConfig:\", error, ShiftConfigRow);\r\n                });\r\n        } catch (error) {\r\n            console.log(\"Error while getShiftConfig:\", error)\r\n        }\r\n    }\r\n    handleChange = (propertyName, data) => {\r\n        \r\n        try {\r\n            const modShiftConfig = lodash.cloneDeep(this.state.modShiftConfig);\r\n            modShiftConfig[propertyName] = data;\r\n            this.setState({ modShiftConfig });\r\n            const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n            if (ShiftconfigurationValidationDef[propertyName] !== undefined) {\r\n                validationErrors[propertyName] = Utilities.validateField(\r\n                    ShiftconfigurationValidationDef[propertyName],\r\n                    data\r\n                );\r\n                this.setState({ validationErrors });\r\n            }\r\n        } catch (error) {\r\n            console.log(\r\n                \"ShiftConfigurationDetailsComposite:Error occured on handleChange\",\r\n                error\r\n            );\r\n        }\r\n    };\r\n    handleReset = () => {\r\n        try {\r\n            const { validationErrors } = { ...this.state };\r\n            const shiftConfig = lodash.cloneDeep(this.state.shiftConfig);\r\n            Object.keys(validationErrors).forEach(function (key) {\r\n                validationErrors[key] = \"\";\r\n            });\r\n            this.setState({\r\n                modShiftConfig: { ...shiftConfig },\r\n                validationErrors,\r\n            });\r\n        } catch (error) {\r\n            console.log(\"ShiftConfigurationDetailsComposite:Error occured on handleReset\", error);\r\n        }\r\n    };\r\n\r\n    validateSave(modShiftConfig) {\r\n        try {\r\n            var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n            Object.keys(ShiftconfigurationValidationDef).forEach(function (key) {\r\n                validationErrors[key] = Utilities.validateField(\r\n                    ShiftconfigurationValidationDef[key],\r\n                    modShiftConfig[key]\r\n                );\r\n            });\r\n            let notification = {\r\n                messageType: \"critical\",\r\n                message: \"ShiftConfigurationDetails_SavedStatus\",\r\n                messageResultDetails: [],\r\n            };\r\n            this.setState({ validationErrors });\r\n            var returnValue = true;\r\n            if (returnValue)\r\n                returnValue = Object.values(validationErrors).every(function (value) {\r\n                    return value === \"\";\r\n                });\r\n\r\n            if (notification.messageResultDetails.length > 0) {\r\n                this.props.onSaved(this.state.modShiftConfig, \"update\", notification);\r\n                return false;\r\n            }\r\n            return returnValue;\r\n        } catch (error) {\r\n            console.log(\"Error in validatesave\",error)\r\n        }\r\n    }\r\n    saveShiftConfiguration = () => {\r\n        try {\r\n            this.setState({ saveEnabled: false });\r\n            let tempShiftConfiguration = lodash.cloneDeep(this.state.tempShiftConfiguration);\r\n            this.CreateAndUpdateShiftConfiguration(tempShiftConfiguration)\r\n\r\n\r\n            \r\n        } catch (error) {\r\n            console.log(\"ShiftConfigurationDetailsComposite : Error in ShiftConfiguration\")\r\n        }\r\n    }\r\n    handleSave = () => {\r\n        \r\n        try {\r\n            let modShiftConfig = lodash.cloneDeep(this.state.modShiftConfig);;\r\n            // this.setState({ saveEnabled: false });\r\n            if (this.validateSave(modShiftConfig)) {\r\n                let tempShiftConfiguration = lodash.cloneDeep(modShiftConfig);\r\n                let showAuthenticationLayout =\r\n                    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n                        ? true\r\n                        : false;\r\n                this.setState({ showAuthenticationLayout, tempShiftConfiguration }, () => {\r\n                    if (showAuthenticationLayout === false) {\r\n                        this.saveShiftConfiguration();\r\n                    }\r\n                });\r\n            } else {\r\n                this.setState({ saveEnabled: true });\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(\"ShiftConfigurationDetailsComposite:Error occured on handleSave\", error);\r\n        }\r\n    };\r\n    CreateAndUpdateShiftConfiguration(modShiftConfig) {\r\n        try {\r\n            let obj = {\r\n                Entity: modShiftConfig,\r\n            };\r\n\r\n            let notification = {\r\n                messageType: \"critical\",\r\n                message: \"ShiftConfigurationDetails_SavedStatus\",\r\n                messageResultDetails: [\r\n                    {\r\n                        keyFields: [\"ShiftInfo_ShiftName\"],\r\n                        keyValues: [modShiftConfig.Name],\r\n                        isSuccess: false,\r\n                        errorMessage: \"\",\r\n                    },\r\n                ],\r\n            };\r\n\r\n            axios(\r\n                RestAPIs.AddUpdateShift,\r\n                Utilities.getAuthenticationObjectforPost(\r\n                    obj,\r\n                    this.props.tokenDetails.tokenInfo\r\n                )\r\n            ).then((response) => {\r\n            \r\n                let result = response.data;\r\n                notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n                notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n                if (result.IsSuccess === true) {\r\n                \r\n                    let shiftConfiginfo = result.EntityResult\r\n                    this.setState(\r\n                        {\r\n                            modShiftConfig: lodash.cloneDeep(result.EntityResult),\r\n                            saveEnabled: Utilities.isInFunction(\r\n                                this.props.userDetails.EntityResult.FunctionsList,\r\n                                functionGroups.modify,\r\n                                fnShiftConfig\r\n                            ),\r\n                            showAuthenticationLayout: false,\r\n\r\n                        },\r\n                        () => this.GetShift({ ID: shiftConfiginfo.ID })\r\n                    );\r\n                } else {\r\n                    notification.messageResultDetails[0].errorMessage =\r\n                        result.ErrorList[0];\r\n                    this.setState({\r\n                        saveEnabled: Utilities.isInFunction(\r\n                            this.props.userDetails.EntityResult.FunctionsList,\r\n                            functionGroups.add,\r\n                            fnShiftConfig\r\n                        ),\r\n                        showAuthenticationLayout: false,\r\n\r\n                    });\r\n                    console.log(\"Error in ShiftCongiguration:\", result.ErrorList);\r\n                }\r\n                this.props.onSaved(this.state.modShiftConfig, \"add\", notification);\r\n            })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        saveEnabled: Utilities.isInFunction(\r\n                            this.props.userDetails.EntityResult.FunctionsList,\r\n                            functionGroups.add,\r\n                            fnShiftConfig\r\n                        ),\r\n                        showAuthenticationLayout: false,\r\n\r\n                    });\r\n                    notification.messageResultDetails[0].errorMessage = error;\r\n                    this.props.onSaved(this.state.modShiftConfig, \"add\", notification);\r\n                });\r\n        } catch (err) {\r\n            console.log(\"error while create/update shift configuration\",err)\r\n        }\r\n    }\r\n    handleAuthenticationClose = () => {\r\n        this.setState({\r\n            showAuthenticationLayout: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return this.state.isReadyToRender ? (\r\n            <div>\r\n                <ErrorBoundary>\r\n                    <TMDetailsHeader\r\n                        entityCode={this.state.shiftConfig.Name}\r\n                        newEntityName=\"ShiftInfo_NewShift\"\r\n\r\n                    ></TMDetailsHeader>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <ShiftConfigurationDetails\r\n                        shiftConfig={this.state.shiftConfig}\r\n                        modShiftConfig={this.state.modShiftConfig}\r\n                        validationErrors={this.state.validationErrors}\r\n                        onFieldChange={this.handleChange}\r\n                        isEnterpriseNode={this.props.userDetails.EntityResult.IsEnterpriseNode}\r\n                    >\r\n                    </ShiftConfigurationDetails>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <TMDetailsUserActions\r\n                        handleBack={this.props.onBack}\r\n                        handleSave={this.handleSave}\r\n                        handleReset={this.handleReset}\r\n                        saveEnabled={this.state.saveEnabled}\r\n                    ></TMDetailsUserActions>\r\n                </ErrorBoundary>\r\n                {this.state.showAuthenticationLayout ? (\r\n                    <ShowAuthenticationLayout\r\n                        Username={this.props.userDetails.EntityResult.UserName}\r\n                        functionName={\r\n                            this.state.shiftConfig.Name === \"\"\r\n                                ? functionGroups.add\r\n                                : functionGroups.modify\r\n                        }\r\n                        functionGroup={fnShiftConfig}\r\n                        handleOperation={this.saveShiftConfiguration}\r\n                        handleClose={this.handleAuthenticationClose}\r\n                    ></ShowAuthenticationLayout>\r\n                ) : null}\r\n            </div>\r\n        ) : (\r\n            <LoadingPage message=\"Loading\"></LoadingPage>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userDetails: state.getUserDetails.userDetails,\r\n        tokenDetails: state.getUserDetails.TokenAuth,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ShiftConfigurationDetailsComposite);\r\n\r\nShiftConfigurationDetailsComposite.propTypes = {\r\n    selectedRow: PropTypes.object.isRequired,\r\n    terminalCodes: PropTypes.array.isRequired,\r\n    onBack: PropTypes.func.isRequired,\r\n    onSaved: PropTypes.func.isRequired,\r\n};","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../../../CSS/timePickerStyles.css\";\r\nimport TimePicker from \"rc-time-picker\";\r\n\r\nTimePickerMod.defaultProps = {\r\n  disabled: false,\r\n};\r\n\r\nexport function TimePickerMod({\r\n  value,\r\n  label,\r\n  displayFormat,\r\n  onChange,\r\n  disabled,\r\n  error,\r\n}) {\r\n  return (\r\n    <div>\r\n      <div className=\"ui input-label\">\r\n        <span className=\"input-label-message\">{label}</span>\r\n      </div>\r\n      <div className=\"ui single-input picker-input datetime-time  fluid has-icon\">\r\n        <TimePicker\r\n          showSecond={false}\r\n          defaultValue={value}\r\n          value={value}\r\n          onChange={onChange}\r\n          format={displayFormat}\r\n          use12Hours\r\n          className=\"input-wrap\"\r\n          disabled={disabled}\r\n          error={error}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ShiftConfigurationDetails","_ref","shiftConfig","modShiftConfig","validationErrors","onFieldChange","_jsx","TranslationConsumer","children","t","index","className","_jsxs","Input","fluid","value","Name","indicator","disabled","onChange","data","label","error","reserveSpace","TimePicker","moment","StartTime","undefined","Date","setSeconds","displayFormat","format","EndTime","Remarks","defaultProps","isEnterpriseNode","terminalCode","ShiftConfigurationDetailsComposite","Component","constructor","arguments","state","lodash","emptyShiftConfig","Utilities","ShiftconfigurationValidationDef","isReadyToRender","saveEnabled","showAuthenticationLayout","tempShiftConfiguration","handleChange","propertyName","this","setState","console","log","handleReset","Object","keys","forEach","key","saveShiftConfiguration","CreateAndUpdateShiftConfiguration","handleSave","validateSave","props","userDetails","EntityResult","IsWebPortalUser","handleAuthenticationClose","componentDidMount","IsArchived","GetShift","selectedRow","componentWillReceiveProps","nextProps","ID","tokenDetails","tokenInfo","ShiftConfigRow","FunctionsList","functionGroups","add","fnShiftConfig","keyCode","KeyCodes","obj","ShiftID","keyDataCode","axios","RestAPIs","then","response","result","IsSuccess","modify","ErrorList","catch","notification","messageType","message","messageResultDetails","returnValue","values","every","length","onSaved","Entity","keyFields","keyValues","isSuccess","errorMessage","shiftConfiginfo","err","render","ErrorBoundary","TMDetailsHeader","entityCode","newEntityName","IsEnterpriseNode","TMDetailsUserActions","handleBack","onBack","ShowAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","popUpContents","style","margin","Popup","element","fieldName","fieldValue","Icon","marginLeft","root","name","size","position","List","map","content","Content","Button","onClick","float","TimePickerMod","showSecond","defaultValue","use12Hours"],"sourceRoot":""}