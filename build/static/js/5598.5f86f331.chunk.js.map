{"version":3,"file":"static/js/5598.5f86f331.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/UIBase/Details/LanguagesDetails.jsx","Components/Composite/Details/LanguagesDetailComposite.jsx","Components/Composite/Entity/LanguagesComposite.jsx","JS/FunctionGroups.js","JS/KeyCodes.js","JS/NotifyEvent.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Icon, Select } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\n\r\nLanguagesDetails.propTypes = {\r\n  selectedLanguageOptions: PropTypes.array.isRequired,\r\n  availablelanguageOptions: PropTypes.array.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  languagesAddSelectionRows: PropTypes.array.isRequired,\r\n  languagesDeleteSelectionRows: PropTypes.array.isRequired,\r\n  handleAddRowSelectionChange: PropTypes.func.isRequired,\r\n  handleDeleteRowSelectionChange: PropTypes.func.isRequired,\r\n  addLanguages: PropTypes.func.isRequired,\r\n  deleteLanguages: PropTypes.func.isRequired,\r\n  handleAddAssociation: PropTypes.func.isRequired,\r\n  onLanguagesSearchChange: PropTypes.func.isRequired,\r\n  handleFoucsLanguagesChange: PropTypes.func.isRequired,\r\n  // listOptions: PropTypes.shape({\r\n  //   selectedLanguageOptions: PropTypes.array,\r\n  //   availablelanguageOptions: PropTypes.array,\r\n  // }).isRequired,\r\n};\r\n\r\nLanguagesDetails.defaultProps = {\r\n  isEnterpriseNode: false,\r\n};\r\n\r\nexport function LanguagesDetails({\r\n  availablelanguageOptions,\r\n  selectedLanguageOptions,\r\n  languagesAddSelectionRows,\r\n  languagesDeleteSelectionRows,\r\n  handleAddRowSelectionChange,\r\n  handleDeleteRowSelectionChange,\r\n  addLanguages,\r\n  deleteLanguages,\r\n  handleAddAssociation,\r\n  // listOptions,\r\n  onLanguagesSearchChange,\r\n  handleFoucsLanguagesChange,\r\n}) {\r\n  const [t] = useTranslation();\r\n  const handleCustomEditDropDown = (cellData) => {\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        value={languagesAddSelectionRows}\r\n        fluid\r\n        options={availablelanguageOptions}\r\n        onChange={(value) => handleAddRowSelectionChange(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        onFocus={handleFoucsLanguagesChange}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n        onSearch={onLanguagesSearchChange}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"shipmentTabAlignment\">\r\n          <div className=\"detailsContainer\">\r\n            <div className=\"row compartmentRow\">\r\n              <div className=\"col col-md-4 col-lg-3 col-xl-2\"></div>\r\n              <div\r\n                className=\"col col-md-4 col-lg-3 col-xl-8\"\r\n                style={{ textAlign: \"right\" }}\r\n              >\r\n                <div className=\"compartmentIconContainer\">\r\n                  <div\r\n                    onClick={handleAddAssociation}\r\n                    className=\"compartmentIcon\"\r\n                  >\r\n                    <div>\r\n                      <Icon root=\"common\" name=\"badge-plus\" size=\"medium\" />\r\n                    </div>\r\n                    <div className=\"margin_l10\">\r\n                      <h5 className=\"font14\">{t(\"FinishedProductInfo_Add\")}</h5>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    onClick={deleteLanguages}\r\n                    className=\"compartmentIcon margin_l30\"\r\n                  >\r\n                    <div>\r\n                      <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n                    </div>\r\n                    <div className=\"margin_l10\">\r\n                      <h5 className=\"font14\">{t(\"TerminalHolidays_Remove\")}</h5>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-md-6 col-lg-2\"></div>\r\n              <div className=\"col-12 col-md-6 col-lg-8\">\r\n                <DataTable\r\n                  data={selectedLanguageOptions}\r\n                  selectionMode=\"single\"\r\n                  selection={languagesDeleteSelectionRows}\r\n                  onSelectionChange={handleDeleteRowSelectionChange}\r\n                  scrollable={true}\r\n                  scrollHeight=\"400px\"\r\n                >\r\n                  <DataTable.Column\r\n                    sortable={true}\r\n                    className=\"compColHeight\"\r\n                    key=\"LanguageName\"\r\n                    field=\"LanguageName\"\r\n                    header={t(\"Language_Select\")}\r\n                    editable={true}\r\n                    editFieldType=\"text\"\r\n                    customEditRenderer={(celldata) =>\r\n                      handleCustomEditDropDown(celldata)\r\n                    }\r\n                  ></DataTable.Column>\r\n                </DataTable>\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-2\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { LanguagesDetails } from \"../../UIBase/Details/LanguagesDetails\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport lodash from \"lodash\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { functionGroups, fnLanguage } from \"../../../JS/FunctionGroups\";\r\n\r\nclass LanguagesDetailComposite extends Component {\r\n  state = {\r\n    isReadyToRender: true,\r\n    saveEnabled: false,\r\n    availablelanguageOptions: [],\r\n    languageSearchOptions: [],\r\n    selectedLanguageOptions: [],\r\n    languagesAddSelectionRows: [],\r\n    languagesDeleteSelectionRows: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getLanguages();\r\n    } catch (error) {\r\n      console.log(\r\n        \"LanguagesDetailComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n    } catch (error) {\r\n      console.log(\r\n        \"LanguagesDetailComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  handleAddAssociation = () => {\r\n    try {\r\n      let newComp = {\r\n        LanguageCode: \"\",\r\n        LanguageName: \"\",\r\n      };\r\n      let selectedLanguageOptions = lodash.cloneDeep(\r\n        this.state.selectedLanguageOptions\r\n      );\r\n      selectedLanguageOptions.push(newComp);\r\n      selectedLanguageOptions.sort((a, b) => {\r\n        if (a.LanguageName > b.LanguageName) {\r\n          return 1;\r\n        } else if (a.LanguageName < b.LanguageName) {\r\n          return -1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n      this.setState({\r\n        selectedLanguageOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LanguagesDetailComposite:Error occured on handleAddAssociation\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleDeleteAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedCompRow != null &&\r\n          this.state.selectedCompRow.length > 0\r\n        ) {\r\n          if (this.state.modAssociations.length > 0) {\r\n            let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n\r\n            this.state.selectedCompRow.forEach((obj, index) => {\r\n              modAssociations = modAssociations.filter((com, cindex) => {\r\n                return com.SequenceNo !== obj.SequenceNo;\r\n              });\r\n            });\r\n\r\n            for (let i = 0; i < modAssociations.length; i++) {\r\n              modAssociations[i].SequenceNo = i + 1;\r\n            }\r\n\r\n            this.setState({ modAssociations });\r\n          }\r\n        }\r\n\r\n        this.setState({ selectedCompRow: [] });\r\n      } catch (error) {\r\n        console.log(\r\n          \"LanguagesDetailComposite:Error occured on handleDeleteAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  getLanguages() {\r\n    this.setState({\r\n      saveEnabled: Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.modify,\r\n        fnLanguage\r\n      ),\r\n    });\r\n\r\n    axios(\r\n      RestAPIs.GetLanguages,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var availablelanguageOptions = lodash.cloneDeep(\r\n            this.state.availablelanguageOptions\r\n          );\r\n          var selectedLanguageOptions = lodash.cloneDeep(\r\n            this.state.selectedLanguageOptions\r\n          );\r\n          if (result.EntityResult !== null) {\r\n            if (\r\n              result.EntityResult.AvailableLanguage !== null ||\r\n              result.EntityResult.AvailableLanguage !== undefined\r\n            ) {\r\n              result.EntityResult.AvailableLanguage.forEach((avaLanguages) => {\r\n                availablelanguageOptions.push({\r\n                  value: avaLanguages.Code + \":\" + avaLanguages.Name,\r\n                  text: avaLanguages.Name,\r\n                });\r\n              });\r\n              availablelanguageOptions.sort((a, b) => {\r\n                if (a.value > b.value) {\r\n                  return 1;\r\n                } else if (a.value < b.value) {\r\n                  return -1;\r\n                } else {\r\n                  return 0;\r\n                }\r\n              });\r\n              let languageSearchOptions = lodash.cloneDeep(\r\n                availablelanguageOptions\r\n              );\r\n              if (\r\n                languageSearchOptions.length > Constants.filteredOptionsCount\r\n              ) {\r\n                languageSearchOptions = languageSearchOptions.slice(\r\n                  0,\r\n                  Constants.filteredOptionsCount\r\n                );\r\n              }\r\n              this.setState({\r\n                availablelanguageOptions,\r\n                isReadyisToRender: true,\r\n                languageSearchOptions: languageSearchOptions,\r\n              });\r\n            }\r\n            if (\r\n              result.EntityResult.Language !== null ||\r\n              result.EntityResult.Language !== undefined\r\n            ) {\r\n              result.EntityResult.Language.forEach((avaLanguages) => {\r\n                selectedLanguageOptions.push({\r\n                  LanguageCode: avaLanguages.Code,\r\n                  LanguageName: avaLanguages.Name,\r\n                });\r\n              });\r\n              selectedLanguageOptions.sort((a, b) => {\r\n                if (a.LanguageName > b.LanguageName) {\r\n                  return 1;\r\n                } else if (a.LanguageName < b.LanguageName) {\r\n                  return -1;\r\n                } else {\r\n                  return 0;\r\n                }\r\n              });\r\n              this.setState({\r\n                selectedLanguageOptions,\r\n                isReadyisToRender: true,\r\n              });\r\n            }\r\n          } else {\r\n            this.setState({\r\n              availablelanguageOptions: lodash.cloneDeep(\r\n                this.state.availablelanguageOptions\r\n              ),\r\n              selectedLanguageOptions: lodash.cloneDeep(\r\n                this.state.selectedLanguageOptions\r\n              ),\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\r\n            \"LanguagesDetailComposite:Error in getLanguages:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"LanguagesDetailComposite:Error while getting Languages:\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  handleAddRowSelectionChange = (languagesRow, cellData) => {\r\n    let selectedLanguageOptions = lodash.cloneDeep(\r\n      this.state.selectedLanguageOptions\r\n    );\r\n    let languagesAddSelectionRows = lodash.cloneDeep(\r\n      this.state.languagesAddSelectionRows\r\n    );\r\n    let availablelanguageOptions = lodash.cloneDeep(\r\n      this.state.availablelanguageOptions\r\n    );\r\n    var SelectedInfo = languagesRow.split(\":\");\r\n    languagesAddSelectionRows.push({\r\n      LanguageCode: SelectedInfo[0],\r\n      LanguageName: SelectedInfo[1],\r\n    });\r\n    selectedLanguageOptions[cellData.rowIndex][cellData.field] =\r\n      SelectedInfo[1];\r\n    selectedLanguageOptions[cellData.rowIndex][\"LanguageCode\"] =\r\n      SelectedInfo[0];\r\n    selectedLanguageOptions.sort((a, b) => {\r\n      if (a.LanguageName > b.LanguageName) {\r\n        return 1;\r\n      } else if (a.LanguageName < b.LanguageName) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    let addRowIndex = availablelanguageOptions.findIndex(\r\n      (item) => item.LanguageName === languagesAddSelectionRows[0].LanguageName\r\n    );\r\n    availablelanguageOptions.splice(addRowIndex, 1);\r\n    availablelanguageOptions.sort((a, b) => {\r\n      if (a.LanguageName > b.LanguageName) {\r\n        return 1;\r\n      } else if (a.LanguageName < b.LanguageName) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    this.setState({\r\n      languagesAddSelectionRows: [],\r\n      selectedLanguageOptions,\r\n      availablelanguageOptions,\r\n      isReadyToRender: true,\r\n    });\r\n  };\r\n  handleDeleteRowSelectionChange = (languagesRow) => {\r\n    this.setState({ languagesDeleteSelectionRows: languagesRow });\r\n  };\r\n\r\n  addLanguages = () => {\r\n    try {\r\n      var languagesAddSelectionRows = lodash.cloneDeep(\r\n        this.state.languagesAddSelectionRows\r\n      );\r\n      var selectedLanguageOptions = this.state.selectedLanguageOptions;\r\n      var availablelanguageOptions = this.state.availablelanguageOptions;\r\n\r\n      if (\r\n        languagesAddSelectionRows !== null &&\r\n        languagesAddSelectionRows.length > 0\r\n      ) {\r\n        selectedLanguageOptions.push(languagesAddSelectionRows[0]);\r\n\r\n        selectedLanguageOptions.sort((a, b) => {\r\n          if (a.LanguageName > b.LanguageName) {\r\n            return 1;\r\n          } else if (a.LanguageName < b.LanguageName) {\r\n            return -1;\r\n          } else {\r\n            return 0;\r\n          }\r\n        });\r\n        let addRowIndex = availablelanguageOptions.findIndex(\r\n          (item) =>\r\n            item.LanguageName === languagesAddSelectionRows[0].LanguageName\r\n        );\r\n        availablelanguageOptions.splice(addRowIndex, 1);\r\n        availablelanguageOptions.sort((a, b) => {\r\n          if (a.LanguageName > b.LanguageName) {\r\n            return 1;\r\n          } else if (a.LanguageName < b.LanguageName) {\r\n            return -1;\r\n          } else {\r\n            return 0;\r\n          }\r\n        });\r\n      }\r\n      this.setState({\r\n        selectedLanguageOptions,\r\n        availablelanguageOptions,\r\n        isReadyisToRender: true,\r\n        languagesAddSelectionRows: [],\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LanguagesDetailComposite:Error occured on addLanguages\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  deleteLanguages = () => {\r\n    try {\r\n      var languagesDeleteSelectionRows = lodash.cloneDeep(\r\n        this.state.languagesDeleteSelectionRows\r\n      );\r\n\r\n      var selectedLanguageOptions = this.state.selectedLanguageOptions;\r\n      var availablelanguageOptions = this.state.availablelanguageOptions;\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"Language_DeleteNotAllowed\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"AccessCardInfo_Delete\"],\r\n            keyValues: [\"Not Allowed\"],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      if (\r\n        languagesDeleteSelectionRows !== null &&\r\n        languagesDeleteSelectionRows.length > 0\r\n      ) {\r\n        if (languagesDeleteSelectionRows[0].LanguageName !== \"English-US\") {\r\n          availablelanguageOptions.push(languagesDeleteSelectionRows[0]);\r\n\r\n          availablelanguageOptions.sort((a, b) => {\r\n            if (a.LanguageName > b.LanguageName) {\r\n              return 1;\r\n            } else if (a.LanguageName < b.LanguageName) {\r\n              return -1;\r\n            } else {\r\n              return 0;\r\n            }\r\n          });\r\n\r\n          let deleteRowIndex = selectedLanguageOptions.findIndex(\r\n            (item) =>\r\n              item.LanguageName === languagesDeleteSelectionRows[0].LanguageName\r\n          );\r\n          selectedLanguageOptions.splice(deleteRowIndex, 1);\r\n          selectedLanguageOptions.sort((a, b) => {\r\n            if (a.LanguageName > b.LanguageName) {\r\n              return 1;\r\n            } else if (a.LanguageName < b.LanguageName) {\r\n              return -1;\r\n            } else {\r\n              return 0;\r\n            }\r\n          });\r\n        } else {\r\n          this.handleNotify(notification);\r\n        }\r\n      }\r\n      this.setState({\r\n        selectedLanguageOptions: selectedLanguageOptions.sort(),\r\n        availablelanguageOptions: availablelanguageOptions.sort(),\r\n        isReadyisToRender: true,\r\n        languagesDeleteSelectionRows: [],\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LanguagesDetailComposite:Error occured on deleteLanguages\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleNotify(notification) {\r\n    try {\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"LanguagesDetailComposite: Error occurred on handleNotify\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleLanguagesSearchChange = (languagecode) => {\r\n    try {\r\n      let languageSearchOptions = this.state.availablelanguageOptions.filter(\r\n        (item) => item.value.toLowerCase().includes(languagecode.toLowerCase())\r\n      );\r\n      if (languageSearchOptions.length > Constants.filteredOptionsCount) {\r\n        languageSearchOptions = languageSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        languageSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LanguagesDetailComposite:Error occured on handleLanguagesSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleFoucsLanguagesChange = () => {\r\n    try {\r\n      let languageSearchOptions = this.state.availablelanguageOptions;\r\n      if (languageSearchOptions.length > Constants.filteredOptionsCount) {\r\n        languageSearchOptions = languageSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        languageSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LanguagesDetailComposite:Error occured on handleLanguagesSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getLanguageSearchOptions() {\r\n    let languageSearchOptions = lodash.cloneDeep(\r\n      this.state.languageSearchOptions\r\n    );\r\n    let modLanguageCode = this.state.CarrierCode;\r\n    if (\r\n      modLanguageCode !== null &&\r\n      modLanguageCode !== \"\" &&\r\n      modLanguageCode !== undefined\r\n    ) {\r\n      let selectedLanguageCode = languageSearchOptions.find(\r\n        (element) =>\r\n          element.value.toLowerCase() === modLanguageCode.toLowerCase()\r\n      );\r\n      if (selectedLanguageCode === undefined) {\r\n        languageSearchOptions.push({\r\n          text: modLanguageCode,\r\n          value: modLanguageCode,\r\n        });\r\n      }\r\n    }\r\n    return languageSearchOptions;\r\n  }\r\n\r\n  saveLanguageSelect = () => {\r\n    var selectedLanguageOptions = lodash.cloneDeep(\r\n      this.state.selectedLanguageOptions\r\n    );\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: this.props.selectedShareholder,\r\n      },\r\n    ];\r\n    let obj = {\r\n      keyDataCode: KeyCodes.shareholderCode,\r\n      KeyCodes: keyCode,\r\n      Entity: selectedLanguageOptions,\r\n    };\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"LanguageInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Languages_PageTitle\"],\r\n          keyValues: [\"Save\"],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateLanguages,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          if (!result.resultAdd || !result.resultDelete) {\r\n            notification.errorMessage = \"Languages Updated Failed\";\r\n            if (!result.resultAdd)\r\n              notification.errorMessage += response.errorMessage;\r\n            if (!result.resultAdd)\r\n              notification.errorMessage += response.errorMessage;\r\n            if (!result.resultAdd && !result.resultDelete)\r\n              notification.errorMessage += response.errorMessage;\r\n          }\r\n          notification.errorMessage = \"\";\r\n\r\n          this.setState({});\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({});\r\n          console.log(\"Error in createTankGroup:\", result.ErrorList);\r\n        }\r\n        this.handleNotify(notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({});\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return this.state.isReadyisToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <LanguagesDetails\r\n            availablelanguageOptions={this.getLanguageSearchOptions()}\r\n            selectedLanguageOptions={this.state.selectedLanguageOptions}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            // listOptions={{\r\n            //   availablelanguageOptions: this.state.languageSearchOptions,\r\n            //   selectedLanguageOptions: this.state.selectedLanguageOptions,\r\n            // }}\r\n            languagesAddSelectionRows={this.state.languagesAddSelectionRows}\r\n            languagesDeleteSelectionRows={\r\n              this.state.languagesDeleteSelectionRows\r\n            }\r\n            handleAddRowSelectionChange={this.handleAddRowSelectionChange}\r\n            handleDeleteRowSelectionChange={this.handleDeleteRowSelectionChange}\r\n            handleFoucsLanguagesChange={this.handleFoucsLanguagesChange}\r\n            addLanguages={this.addLanguages}\r\n            deleteLanguages={this.deleteLanguages}\r\n            handleAddAssociation={this.handleAddAssociation}\r\n            onLanguagesSearchChange={this.handleLanguagesSearchChange}\r\n          ></LanguagesDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 col-lg-2\"></div>\r\n                <div\r\n                  className=\"col-12 col-md-6 col-lg-8\"\r\n                  style={{ textAlign: \"right\" }}\r\n                >\r\n                  <Button\r\n                    className=\"saveButton\"\r\n                    disabled={!this.state.saveEnabled}\r\n                    onClick={() => this.saveLanguageSelect()}\r\n                    content={t(\"Language_Save\")}\r\n                  ></Button>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-2\"></div>\r\n              </div>\r\n            )}\r\n          </TranslationConsumer>\r\n        </ErrorBoundary>\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LanguagesDetailComposite);\r\n\r\nLanguagesDetailComposite.propTypes = {\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport LanguagesDetailComposite from \"../Details/LanguagesDetailComposite\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../CSS/styles.css\";\r\n\r\nclass LanguagesComposite extends Component {\r\n  state = {\r\n    isReadyToRender: false,\r\n    operationsVisibility: { add: false, delete: false, shareholder: false },\r\n    selectedShareholder: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.setState({\r\n        isReadyToRender: true,\r\n        selectedShareholder:\r\n          this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LanguagesComposite:Error occurred on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  notifyEvent = (notification) => {\r\n    try {\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"LanguagesComposite: Error occurred on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibility={this.state.operationsVisibility}\r\n            breadcrumbItem={this.props.activeItem}\r\n            shrVisible={false}\r\n            addVisible={false}\r\n            deleteVisible={false}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n          />\r\n        </ErrorBoundary>\r\n        {this.state.isReadyToRender ? (\r\n          <LanguagesDetailComposite\r\n            Key=\"Languages\"\r\n            onNotice={this.notifyEvent}\r\n            selectedShareholder={this.state.selectedShareholder}\r\n          ></LanguagesDetailComposite>\r\n        ) : (\r\n          <LoadingPage message=\"Loading\"></LoadingPage>\r\n        )}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LanguagesComposite);\r\n\r\nLanguagesComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";","import React from \"react\";\r\nimport { Notification } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { delimiter } from \"./Constants\";\r\nimport PropTypes from \"prop-types\";\r\nNotifyEvent.propTypes = {\r\n  notificationMessage: PropTypes.shape({\r\n    messageType: PropTypes.oneOf([\"success\", \"critical\"]),\r\n    message: PropTypes.string,\r\n    messageResultDetails: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        keyFields: PropTypes.arrayOf(PropTypes.string),\r\n        KeyValues: PropTypes.arrayOf(PropTypes.string),\r\n        isSuccess: PropTypes.bool,\r\n        errorMessage: PropTypes.string,\r\n      })\r\n    ),\r\n  }).isRequired,\r\n  //closeToast: PropTypes.bool,\r\n};\r\n// notifiaionMessage={messageType:\"success/critical\",message:\"title of message\",\r\n// messageResultDetails:[{keyFields:[Array Of Key Codes],KeyValues:[Array of Key Values],isSuccess,ErrorMessage}]}\r\nexport default function NotifyEvent({ notificationMessage }) {\r\n\r\n  function getLocalizedMessage(message) {\r\n    try {\r\n      let messageOptions = message.split(delimiter);\r\n      return messageOptions[0];\r\n    } catch (error) {\r\n      console.log(error);\r\n      return \"\";\r\n    }\r\n  }\r\n  function getLocalizedMessageParameters(message) {\r\n    try {\r\n      let messageOptions = message.split(delimiter);\r\n      messageOptions.splice(0, 1);\r\n      return messageOptions;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <Notification\r\n          className=\"toast-notification\"\r\n          severity={notificationMessage.messageType}\r\n          // onCloseClick={closeToast}\r\n          hasIcon={true}\r\n          title={t(notificationMessage.message)}\r\n        //onDetailsClick={() => alert(details)}\r\n        >\r\n          {notificationMessage.messageResultDetails.map((messageResult) => {\r\n            var entityKeyDetails = \"\";\r\n            if (messageResult.keyFields.length > 0) {\r\n              for (var i = 0; i < messageResult.keyFields.length; i++) {\r\n                entityKeyDetails =\r\n                  entityKeyDetails +\r\n                  t(messageResult.keyFields[i]) +\r\n                  \" : \" +\r\n                  messageResult.keyValues[i] +\r\n                  \", \";\r\n              }\r\n            }\r\n            return (\r\n              <div>\r\n                <span\r\n                  style={{ color: messageResult.isSuccess ? \"#7eb338\" : \"#F15A4F\" }}\r\n                >\r\n                  {entityKeyDetails}\r\n                  {messageResult.isSuccess\r\n                    ? t(\"NotificationList_MessageType_Success\")\r\n                    : t(\"NotificationList_MessageType_Failure\") +\r\n                    \" : \" +\r\n                    t(\r\n                      getLocalizedMessage(messageResult.errorMessage),\r\n                      getLocalizedMessageParameters(\r\n                        messageResult.errorMessage\r\n                      )\r\n                    )}\r\n                </span>\r\n                <br></br>\r\n              </div>\r\n            );\r\n          })}\r\n        </Notification>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","LanguagesDetails","availablelanguageOptions","selectedLanguageOptions","languagesAddSelectionRows","languagesDeleteSelectionRows","handleAddRowSelectionChange","handleDeleteRowSelectionChange","addLanguages","deleteLanguages","handleAddAssociation","onLanguagesSearchChange","handleFoucsLanguagesChange","useTranslation","handleCustomEditDropDown","cellData","fluid","indicator","reserveSpace","onFocus","search","noResultsMessage","onSearch","textAlign","DataTable","data","selectionMode","selection","onSelectionChange","scrollable","scrollHeight","Column","sortable","field","header","editable","editFieldType","customEditRenderer","celldata","isEnterpriseNode","LanguagesDetailComposite","Component","constructor","arguments","state","isReadyToRender","saveEnabled","languageSearchOptions","newComp","LanguageCode","LanguageName","lodash","this","push","sort","a","b","setState","error","console","log","handleDeleteAssociation","props","userDetails","EntityResult","IsArchived","selectedCompRow","modAssociations","forEach","obj","index","filter","com","cindex","SequenceNo","i","languagesRow","SelectedInfo","split","rowIndex","addRowIndex","findIndex","splice","isReadyisToRender","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","deleteRowIndex","handleNotify","handleLanguagesSearchChange","languagecode","toLowerCase","includes","Constants","slice","saveLanguageSelect","keyCode","key","KeyCodes","keyDataCode","Entity","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","resultAdd","resultDelete","ErrorList","catch","componentDidMount","getLanguages","componentWillReceiveProps","nextProps","FunctionsList","functionGroups","modify","fnLanguage","AvailableLanguage","avaLanguages","Code","Name","text","Language","toast","NotifyEvent","notificationMessage","autoClose","getLanguageSearchOptions","modLanguageCode","CarrierCode","find","render","IsEnterpriseNode","LoadingPage","connect","getUserDetails","TokenAuth","LanguagesComposite","operationsVisibility","notifyEvent","PrimaryShareholder","activeItem","Key","onNotice","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","view","remove","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","transportationType","shareholderCode","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","shipmentCode","orderCode","receiptCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","entityCode","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","bayCode","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","TransactionType","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks","getLocalizedMessage","delimiter","getLocalizedMessageParameters","messageOptions","Notification","severity","hasIcon","title","messageResult","entityKeyDetails"],"sourceRoot":""}