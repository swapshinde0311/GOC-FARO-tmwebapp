{"version":3,"file":"static/js/4749.6bf199c0.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Details/ProductReconciliationReportDetails.jsx","Components/UIBase/Details/ViewMeterUnAccountedTransactionsDetails.jsx","Components/UIBase/Details/ViewTankUnAccountedTransactionsDetails.jsx","Components/Composite/Details/ProductReconciliationReportDetailsComposite.jsx","Components/UIBase/Details/ProductReconciliationScheduleDetails.jsx","Components/Composite/Details/ProductReconciliationScheduleDetailsComposite.jsx","Components/Composite/Summary/ProductReconciliationSummaryComposite.jsx","Components/Composite/Entity/ProductReconciliationReportComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Common/TMTransactionFilters.jsx","Components/UIBase/Common/TMReportViewer.jsx","Components/UIBase/Details/ReportDetails.jsx","JS/FunctionGroups.js","JS/KeyCodes.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { Select, Input,Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\n\r\n\r\nProductReconciliationReportDetails.propTypes = {\r\n    reconciliationInfo: PropTypes.object.isRequired,\r\n    modReconciliationInfo:PropTypes.object.isRequired,\r\n    validationErrors: PropTypes.object.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    listOptions: PropTypes.shape({\r\n        productReconciliationStatusOptions: PropTypes.array,\r\n        \r\n    }).isRequired,\r\n    handleReconciliationStatusChange: PropTypes.func.isRequired,\r\n    handleReopenReconciliation: PropTypes.func.isRequired,\r\n    handleViewReport: PropTypes.func.isRequired,\r\n    handleViewUnAccountedTransactions: PropTypes.func.isRequired,\r\n    handleReset: PropTypes.func.isRequired,\r\n    \r\n}\r\n\r\nProductReconciliationReportDetails.defaultProps = {\r\n    listOptions: {\r\n        productReconciliationStatusOptions: [],\r\n    },\r\n   \r\n}\r\n\r\n\r\nexport function ProductReconciliationReportDetails({\r\n    reconciliationInfo,\r\n    modReconciliationInfo,\r\n    validationErrors,\r\n    onFieldChange,\r\n    listOptions,\r\n    handleReconciliationStatusChange,\r\n    handleReopenReconciliation,\r\n    handleViewReport,\r\n    handleViewUnAccountedTransactions,\r\n    handleReset,\r\n    \r\n \r\n}) {\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"detailsContainer\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input \r\n                                fluid\r\n                                value={modReconciliationInfo.ReconciliationCode}\r\n                                disabled= {true}\r\n                                label={t(\"ReconciliationReportDetail_RcCode\")}\r\n                                error={t(validationErrors.Code)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input \r\n                                fluid\r\n                                value= {new Date(modReconciliationInfo.StartDate).toLocaleDateString() +\r\n                                    \" \" +\r\n                                   new Date(modReconciliationInfo.StartDate).toLocaleTimeString()}\r\n                                disabled= {true}\r\n                                label={t(\"ReconciliationReportDetail_StartDate\")}\r\n                                error={t(validationErrors.Name)}\r\n                                reserveSpace={false}\r\n                                \r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input \r\n                                fluid\r\n                                value= {new Date(modReconciliationInfo.EndDate).toLocaleDateString() +\r\n                                    \" \" +\r\n                                   new Date(modReconciliationInfo.EndDate).toLocaleTimeString()}\r\n                                disabled= {true}\r\n                                label={t(\"ReconciliationReportDetail_EndDate\")}\r\n                                error={t(validationErrors.Name)}\r\n                                reserveSpace={false}\r\n                                \r\n                            />\r\n                        </div>\r\n  \r\n                         <div className= \"col-12 col-md-6 col-lg-4\">\r\n                            <Select \r\n                                fluid\r\n                                placeholder=\"Select\"\r\n                                value={modReconciliationInfo.Status}\r\n                                label={t(\"ReconciliationReportDetail_Status\")}\r\n                                options={Utilities.transferListtoOptions(\r\n                                    listOptions.productReconciliationStatusOptions\r\n                                )}\r\n                                onChange={(data) => handleReconciliationStatusChange(data)}\r\n                                error={t(validationErrors.Status)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                onResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div> \r\n                       \r\n                       \r\n                        \r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modReconciliationInfo.Remarks}\r\n                                label={t(\"CaptainInfo_Remarks\")}\r\n                                error={t(validationErrors.Remarks)}\r\n                                indicator={modReconciliationInfo.Status !== reconciliationInfo.Status ? \"required\" : \"\"}\r\n                                reserveSpace={false}\r\n                                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modReconciliationInfo.ReportWarnings}\r\n                                label={t(\"ReconciliationReportDetail_ReportProcessWarning\")}\r\n                                disabled={true}\r\n                                error={t(validationErrors.ReportWarnings)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n                    <div className=\"row userActionPosition\">\r\n                    <div className=\"col-12 col-md-3 col-lg-4\">\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    onClick={() => handleViewReport()}\r\n                                    content={t(\"ReconciliationReportDetail_btnViewReconcile\")}\r\n                                    disabled={false}\r\n                                    ></Button>\r\n                                    </div>\r\n                                    <div className=\"col-12 col-md-3 col-lg-4\">\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    content={t(\"ReconciliationReportDetail_btnUnAccountedTankTransaction\")}\r\n                                    disabled={reconciliationInfo.EntityTypeCode === \"Meter\" }\r\n                                    onClick={() => handleViewUnAccountedTransactions()}\r\n                                    ></Button>\r\n                                    </div>\r\n                                    <div className=\"col-12 col-md-3 col-lg-4\">\r\n                                    <Button\r\n                                    type=\"primary\"\r\n                                    \r\n                                    disabled={reconciliationInfo.EntityTypeCode === \"Tank\" }\r\n                                    content={t(\"ReconciliationReportDetail_btnUnAccountedMeterTransaction\")}\r\n\r\n                                    onClick={() => handleViewUnAccountedTransactions()}\r\n\r\n                                    ></Button>\r\n                                    </div>\r\n                                    <div className=\"col-12 col-md-3 col-lg-4\">\r\n                                     <Button\r\n                                    type=\"primary\"\r\n                                  onClick={() => handleReopenReconciliation()}\r\n                                    disabled={!(modReconciliationInfo.Status.toUpperCase()===Constants.ProductReconciliationReportStatus.Reconciled_Diff.toUpperCase())}\r\n                                    content={t(\"ReconciliationReportDetail_btnManualReconcile\")}\r\n                                ></Button>\r\n\r\n                                </div>\r\n                            </div>  \r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    )\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\n\r\nViewMeterUnAccountedTransactionsDetails.propTypes = {\r\n    transactionData: PropTypes.array.isRequired,\r\n    handleBack: PropTypes.func.isRequired,\r\n    pageSize: PropTypes.number\r\n};\r\n\r\nViewMeterUnAccountedTransactionsDetails.defaultProps = {};\r\n\r\nexport function ViewMeterUnAccountedTransactionsDetails({\r\n    transactionData,\r\n    handleBack,\r\n    pageSize\r\n}) {\r\n\r\n    return (\r\n        <div>\r\n            <TranslationConsumer>\r\n                {(t) => (\r\n                    <div>\r\n                        <div className=\"detailsContainer\">\r\n                            <div id=\"printTable\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <h3>\r\n                                            {t(\"MeterUnaccountedTransaction_Header\")}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row marginRightZero tableScroll\">\r\n                                    <div className=\"col-12 detailsTable \">\r\n                                        <DataTable\r\n                                            data={transactionData}\r\n                                            reorderableColumns={true}\r\n                                            resizableColumns={true}\r\n                                            search={true}\r\n                                            searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                                            rows={pageSize}\r\n                                        >\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"MeterUnaccountedTransaction_MeterCode\"\r\n                                                field=\"MeterUnaccountedTransaction_MeterCode\"\r\n                                                header={t(\"MeterUnaccountedTransaction_MeterCode\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"MeterUnaccountedTransaction_TankCode\"\r\n                                                field=\"MeterUnaccountedTransaction_TankCode\"\r\n                                                header={t(\"MeterUnaccountedTransaction_TankCode\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"Vehicle_Transport\"\r\n                                                field=\"Vehicle_Transport\"\r\n                                                header={t(\"Vehicle_Transport\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"MeterUnaccountedTransaction_BPCode\"\r\n                                                field=\"MeterUnaccountedTransaction_BPCode\"\r\n                                                header={t(\"MeterUnaccountedTransaction_BPCode\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"MeterUnaccountedTransaction_Type\"\r\n                                                field=\"MeterUnaccountedTransaction_Type\"\r\n                                                header={t(\"MeterUnaccountedTransaction_Type\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"MeterUnaccountedTransaction_UnAccountedGrossQuantity\"\r\n                                                field=\"MeterUnaccountedTransaction_UnAccountedGrossQuantity\"\r\n                                                header={t(\"MeterUnaccountedTransaction_UnAccountedGrossQuantity\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"MeterUnaccountedTransaction_UnAccountedNetQuantity\"\r\n                                                field=\"MeterUnaccountedTransaction_UnAccountedNetQuantity\"\r\n                                                header={t(\"MeterUnaccountedTransaction_UnAccountedNetQuantity\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"MeterUnaccountedTransaction_QuantityUOM\"\r\n                                                field=\"MeterUnaccountedTransaction_QuantityUOM\"\r\n                                                header={t(\"MeterUnaccountedTransaction_QuantityUOM\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"MeterUnaccountedTransaction_CreatedTime\"\r\n                                                field=\"MeterUnaccountedTransaction_CreatedTime\"\r\n                                                header={t(\"MeterUnaccountedTransaction_CreatedTime\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                                renderer={(cellData) => new Date(cellData.value).toLocaleDateString()}\r\n                                            ></DataTable.Column>\r\n                                        </DataTable>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 col-sm-6 col-lg-8\">\r\n                                    <Button\r\n                                        className=\"backButton\"\r\n                                        onClick={handleBack}\r\n                                        content={t(\"Back\")}\r\n                                    ></Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </TranslationConsumer>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\n\r\nViewTankUnAccountedTransactionsDetails.propTypes = {\r\n    transactionData: PropTypes.array.isRequired,\r\n    handleBack: PropTypes.func.isRequired,\r\n    pageSize: PropTypes.number\r\n};\r\n\r\nViewTankUnAccountedTransactionsDetails.defaultProps = {};\r\n\r\nexport function ViewTankUnAccountedTransactionsDetails({\r\n    transactionData,\r\n    handleBack,\r\n    pageSize\r\n}) {\r\n    return (\r\n        <div>\r\n            <TranslationConsumer>\r\n                {(t) => (\r\n                    <div>\r\n                        <div className=\"detailsContainer\">\r\n                            <div id=\"printTable\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <h3>\r\n                                            {t(\"TankUnaccountedTransaction_Header\")}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row marginRightZero tableScroll\">\r\n                                    <div className=\"col-12 detailsTable \">\r\n                                        <DataTable\r\n                                            data={transactionData}\r\n                                            reorderableColumns={true}\r\n                                            resizableColumns={true}\r\n                                            search={true}\r\n                                            searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                                            rows={pageSize}\r\n                                        >\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"TankUnaccountedTransaction_TankCode\"\r\n                                                field=\"TankUnaccountedTransaction_TankCode\"\r\n                                                header={t(\"TankUnaccountedTransaction_TankCode\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"TankUnaccountedTransaction_BPCode\"\r\n                                                field=\"TankUnaccountedTransaction_BPCode\"\r\n                                                header={t(\"TankUnaccountedTransaction_BPCode\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"Vehicle_Transport\"\r\n                                                field=\"Vehicle_Transport\"\r\n                                                header={t(\"Vehicle_Transport\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"TankUnaccountedTransaction_Type\"\r\n                                                field=\"TankUnaccountedTransaction_Type\"\r\n                                                header={t(\"TankUnaccountedTransaction_Type\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"TankUnaccountedTransaction_UnAccountedGrossQuantity\"\r\n                                                field=\"TankUnaccountedTransaction_UnAccountedGrossQuantity\"\r\n                                                header={t(\"TankUnaccountedTransaction_UnAccountedGrossQuantity\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"TankUnaccountedTransaction_UnAccountedNetQuantity\"\r\n                                                field=\"TankUnaccountedTransaction_UnAccountedNetQuantity\"\r\n                                                header={t(\"TankUnaccountedTransaction_UnAccountedNetQuantity\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"TankUnaccountedTransaction_QuantityUOM\"\r\n                                                field=\"TankUnaccountedTransaction_QuantityUOM\"\r\n                                                header={t(\"TankUnaccountedTransaction_QuantityUOM\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"TankUnaccountedTransaction_Density\"\r\n                                                field=\"TankUnaccountedTransaction_Density\"\r\n                                                header={t(\"TankUnaccountedTransaction_Density\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"TankUnaccountedTransaction_DensityUOM\"\r\n                                                field=\"TankUnaccountedTransaction_DensityUOM\"\r\n                                                header={t(\"TankUnaccountedTransaction_DensityUOM\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"TankUnaccountedTransaction_StartTime\"\r\n                                                field=\"TankUnaccountedTransaction_StartTime\"\r\n                                                header={t(\"TankUnaccountedTransaction_StartTime\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"TankUnaccountedTransaction_EndTime\"\r\n                                                field=\"TankUnaccountedTransaction_EndTime\"\r\n                                                header={t(\"TankUnaccountedTransaction_EndTime\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                            <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key=\"TankUnaccountedTransaction_CreatedTime\"\r\n                                                field=\"TankUnaccountedTransaction_CreatedTime\"\r\n                                                header={t(\"TankUnaccountedTransaction_CreatedTime\")}\r\n                                                editable={false}\r\n                                                editFieldType=\"text\"\r\n                                            ></DataTable.Column>\r\n                                        </DataTable>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 col-sm-6 col-lg-8\">\r\n                                    <Button\r\n                                        className=\"backButton\"\r\n                                        onClick={handleBack}\r\n                                        content={t(\"Back\")}\r\n                                    ></Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </TranslationConsumer>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { ProductReconciliationReportDetails } from \"../../UIBase/Details/ProductReconciliationReportDetails\";\r\nimport { ViewMeterUnAccountedTransactionsDetails } from \"../../UIBase/Details/ViewMeterUnAccountedTransactionsDetails\";\r\nimport { ViewTankUnAccountedTransactionsDetails } from \"../../UIBase/Details/ViewTankUnAccountedTransactionsDetails\";\r\nimport { emptyReconciliationInfo } from \"../../../JS/DefaultEntities\";\r\nimport { productReconciliationReportValidationDef } from \"../../../JS/ValidationDef\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport PropTypes from \"prop-types\";\r\nimport lodash, { constant } from \"lodash\";\r\nimport { functionGroups, fnProductReconciliationReports } from \"../../../JS/FunctionGroups\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport ReportDetails from \"../../UIBase/Details/ReportDetails\";\r\nimport { TMTransactionFilters } from \"../../UIBase/Common/TMTransactionFilters\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass ProductReconciliationReportDetailsComposite extends Component {\r\n  state = {\r\n    reconciliationInfo: lodash.cloneDeep(emptyReconciliationInfo),\r\n    modReconciliationInfo: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      productReconciliationReportValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    saveEnabled: true,\r\n    productReconciliationStatusOptions: [],\r\n    showReport: false,\r\n    reonciliationReportNames: { tank: '', meter: ''},\r\n    showTankTransactions:false,\r\n    showMeterTransactions: false,\r\n    data: {},\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    dateError: \"\",\r\n    showAuthenticationLayout: false,\r\n    tempReconciliationInfo: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getReconciliationReport(this.props.selectedRow);\r\n      this.getLookUpData();\r\n      this.getProductReconciliationStatus(this.props.selectedRow.Reconciliation_Status);\r\n    } catch (error) {\r\n      console.log(\r\n        \"ProductReconciliationDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      let ReconciliationCode = this.state.reconciliationInfo.reconciliationCode\r\n      if (\r\n        ReconciliationCode !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getReconciliationReport(nextProps.selectedRow);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"ProductReconciliationDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n \r\n\r\n  getProductReconciliationStatus(reconStatus) {\r\n    axios(\r\n      RestAPIs.GetProductReconciliationStatus,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let productReconciliationStatusOptions = [];\r\n          if (result.EntityResult !== null) {\r\n            Object.keys(result.EntityResult).forEach((key) =>\r\n            productReconciliationStatusOptions.push(result.EntityResult[key])\r\n            );\r\n             \r\n            let filteredStatus = [];\r\n          \r\n\r\n            if (reconStatus.toUpperCase()===Constants.ProductReconciliationReportStatus.Open.toUpperCase())\r\n            {\r\n              filteredStatus = productReconciliationStatusOptions.filter(\r\n                (objOption) => objOption.toUpperCase() === Constants.ProductReconciliationReportStatus.Open.toUpperCase()\r\n              );\r\n            }\r\n            else if (reconStatus.toUpperCase() === Constants.ProductReconciliationReportStatus.In_Progress.toUpperCase())\r\n            {\r\n              filteredStatus = productReconciliationStatusOptions.filter(\r\n                (objOption) => objOption.toUpperCase() === Constants.ProductReconciliationReportStatus.In_Progress.toUpperCase()\r\n              );\r\n            }\r\n            else if(reconStatus.toUpperCase()===Constants.ProductReconciliationReportStatus.Reconciled_NoDiff.toUpperCase() )\r\n            {\r\n              filteredStatus = productReconciliationStatusOptions.filter(\r\n                (objOption) => (\r\n                  objOption.toUpperCase() === Constants.ProductReconciliationReportStatus.Reconciled_NoDiff.toUpperCase()\r\n                  ||\r\n                  objOption.toUpperCase() === Constants.ProductReconciliationReportStatus.Approved.toUpperCase()\r\n                  ||\r\n                  objOption.toUpperCase() === Constants.ProductReconciliationReportStatus.Closed.toUpperCase()\r\n                  )\r\n              );\r\n            }\r\n            else if (reconStatus.toUpperCase() === Constants.ProductReconciliationReportStatus.Approved.toUpperCase())\r\n            {\r\n           \r\n              filteredStatus = productReconciliationStatusOptions.filter(\r\n                (objOption) => (\r\n                  \r\n                  objOption.toUpperCase() === Constants.ProductReconciliationReportStatus.Approved.toUpperCase()\r\n                  ||\r\n                  objOption.toUpperCase() === Constants.ProductReconciliationReportStatus.Closed.toUpperCase()\r\n                  )\r\n\r\n              );\r\n            }\r\n              \r\n            else if (reconStatus.toUpperCase()===Constants.ProductReconciliationReportStatus.Reconciled_Diff.toUpperCase())\r\n            {\r\n                 filteredStatus = productReconciliationStatusOptions.filter(\r\n                  (objOption) => (\r\n                    objOption.toUpperCase() === Constants.ProductReconciliationReportStatus.Reconciled_Diff.toUpperCase()\r\n                    ||\r\n                    objOption.toUpperCase() === Constants.ProductReconciliationReportStatus.Approved.toUpperCase()\r\n                    ||\r\n                    objOption.toUpperCase() === Constants.ProductReconciliationReportStatus.Rejected.toUpperCase()\r\n                    )\r\n                );\r\n\r\n              }\r\n            else if (reconStatus.toUpperCase() ===Constants.ProductReconciliationReportStatus.Rejected.toUpperCase())\r\n            {\r\n              filteredStatus = productReconciliationStatusOptions.filter(\r\n                (objOption) => (\r\n              objOption.toUpperCase() === Constants.ProductReconciliationReportStatus.Rejected.toUpperCase()\r\n              ||\r\n              objOption.toUpperCase() === Constants.ProductReconciliationReportStatus.Closed.toUpperCase()  \r\n              )\r\n              );\r\n            }\r\n\r\n            if(filteredStatus.length>0)\r\n             this.setState({ productReconciliationStatusOptions:filteredStatus });\r\n             else\r\n             this.setState({ productReconciliationStatusOptions });\r\n\r\n          } else {\r\n            console.log(\"No productReconciliationStatusOptions identified.\");\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetProductReconciliationStatus:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting ProductReconciliationStatus:\", error);\r\n      });\r\n  }\r\n\r\n  updateProductReconciliationReport = () => {\r\n    try {\r\n      this.handleAuthenticationClose();\r\n      this.setState({ saveEnabled: false });\r\n      let tempReconciliationInfo = lodash.cloneDeep(this.state.tempReconciliationInfo);\r\n      this.updateReconciliationReport(tempReconciliationInfo);\r\n\r\n    } catch (error) {\r\n      console.log(\"ProductReconciliationReport Details Composite : Error in updateProductReconciliationReport\");\r\n    }\r\n  };\r\n\r\n\r\n  handleSave = () => {\r\n     \r\n    try {\r\n        let modReconciliationInfo = this.state.modReconciliationInfo;\r\n        \r\n    \r\n        if (this.validateSave(modReconciliationInfo)) {\r\n          \r\n          let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempReconciliationInfo= lodash.cloneDeep(modReconciliationInfo);\r\n        this.setState({ showAuthenticationLayout, tempReconciliationInfo }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.updateProductReconciliationReport();\r\n          }\r\n      });\r\n       \r\n        } else this.setState({ saveEnabled: true });\r\n    }\r\n    catch (error) {\r\n        console.log(\"ProductReconciliationReportDetailsComposite:Error occured on handleSave\", error);\r\n    }\r\n};\r\n  \r\n\r\nhandleReopenReconciliation = () => {\r\n  try {\r\n      let modReconciliationInfo = this.state.modReconciliationInfo;\r\n      modReconciliationInfo.RefreshWithLatestTransactions = true;\r\n\r\n      this.setState({ saveEnabled: false });\r\n      if (this.validateSave(modReconciliationInfo)) {\r\n        \r\n      this.reopenReconciliation(modReconciliationInfo);\r\n      } else this.setState({ saveEnabled: true });\r\n  }\r\n  catch (error) {\r\n      console.log(\"ProductReconciliationReportDetailsComposite:Error occured on handleReopenReconciliation\", error);\r\n  }\r\n};\r\n\r\nvalidateSave(modReconciliationInfo) {\r\n  var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n  Object.keys(productReconciliationReportValidationDef).forEach(function (key) {\r\n      validationErrors[key] = Utilities.validateField(\r\n        productReconciliationReportValidationDef[key],\r\n          modReconciliationInfo[key]\r\n      );\r\n  });\r\n  if (modReconciliationInfo.Status !== this.state.reconciliationInfo.Status) {\r\n    if (modReconciliationInfo.Remarks === null || modReconciliationInfo.Remarks === \"\") {\r\n      validationErrors[\"Remarks\"] = \"CaptainInfo_RemarksRequired\";\r\n    }\r\n  }\r\n\r\n  this.setState({ validationErrors });\r\n\r\n \r\n  var returnValue = true;\r\n\r\n\r\n \r\n  if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n          return value === \"\";\r\n      });\r\n\r\n\r\n  return returnValue;\r\n}\r\n \r\n\r\nreopenReconciliation(modReconciliationInfo) {\r\n  let keyCode = [\r\n      {\r\n          key: KeyCodes.reconciliationCode,\r\n          value: modReconciliationInfo.Code,\r\n      },\r\n  ];\r\n  let obj = {\r\n      keyDataCode: KeyCodes.reconciliationCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modReconciliationInfo,\r\n  };\r\n\r\n  let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ManualReconciliation_UpdateSuccessMsg\",\r\n      messageResultDetails: [\r\n          {\r\n              keyFields: [\"ReconciliationReportDetail_RcCode\"],\r\n              keyValues: [modReconciliationInfo.ReconciliationCode],\r\n              isSuccess: false,\r\n              errorMessage: \"\",\r\n          },\r\n      ],\r\n  };\r\n\r\n  axios(\r\n      RestAPIs.UpdateReconciliationReport,\r\n      Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n      )\r\n  ).then((response) => {\r\n      let result = response.data;\r\n      notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n      notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n      if (result.IsSuccess === true) {\r\n          this.setState(\r\n              {\r\n                  saveEnabled: Utilities.isInFunction(\r\n                      this.props.userDetails.EntityResult.FunctionsList,\r\n                      functionGroups.modify,\r\n                      fnProductReconciliationReports\r\n                  ),\r\n              },\r\n              () => this.getReconciliationReport({ Common_Code: modReconciliationInfo.ReconciliationCode })\r\n          );\r\n      } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n          this.setState({\r\n              saveEnabled: Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnProductReconciliationReports\r\n              ),\r\n          });\r\n          console.log(\"Error in update ReconciliationReport:\", result.ErrorList);\r\n      }\r\n      this.props.onSaved(this.state.modReconciliationInfo, \"update\", notification);\r\n  })\r\n      .catch((error) => {\r\n          this.setState({\r\n              saveEnabled: Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnProductReconciliationReports\r\n              ),\r\n          });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          this.props.onSaved(this.state.modReconciliationInfo, \"modify\", notification);\r\n      });\r\n}\r\n\r\nhandleViewUnAccountedTransactions = () => {\r\n try {\r\n  let modReconciliationInfo = lodash.cloneDeep(this.state.modReconciliationInfo);\r\n \r\n  if(modReconciliationInfo.EntityTypeCode===\"Meter\")\r\n  {\r\n  this.GetUnAccountedTransactionMeterList(this.props.shareholerCode)\r\n  this.setState({\r\n    showTankTransactions: false, showMeterTransactions: true,\r\n } )\r\n    }\r\n    else\r\n    {\r\n      this.GetUnAccountedTransactionTankList(this.props.shareholerCode)\r\n  this.setState({\r\n    showTankTransactions: true, showMeterTransactions: false,\r\n } )\r\n    }\r\n  }\r\n    catch (error) {\r\n        console.log(\"Error in handleViewUnAccountedTransactions\", error)\r\n    }\r\n};\r\n\r\nhandleRangeSelect = ({ to, from }) => {\r\n  if (to !== undefined) this.setState({ toDate: to });\r\n  if (from !== undefined) this.setState({ fromDate: from });\r\n};\r\nhandleLoadOrders = () => {\r\n  //debugger;\r\n  let error = Utilities.validateDateRange(\r\n    this.state.toDate,\r\n    this.state.fromDate\r\n  );\r\n\r\n  if (error !== \"\") {\r\n    this.setState({ dateError: error });\r\n  } else {\r\n    this.setState({ dateError: \"\" });\r\n    let kk=this.props.userDetails;\r\n    if(this.state.showMeterTransactions)\r\n    this.GetUnAccountedTransactionMeterList(this.props.shareholerCode);\r\n    else\r\n    this.GetUnAccountedTransactionTankList(this.props.shareholerCode);\r\n\r\n  }\r\n};\r\n\r\nGetUnAccountedTransactionTankList(shareholder) {\r\n  let fromDate = new Date(this.state.fromDate);\r\n  let toDate = new Date(this.state.toDate);\r\n  fromDate.setHours(0, 0, 0);\r\n  toDate.setHours(23, 59, 59);\r\n  let obj = {\r\n    ShareholderCode: shareholder,\r\n    startRange: fromDate,\r\n    endRange: toDate,\r\n  };\r\n  if (shareholder !== undefined && shareholder !== \"\") {\r\n    axios(\r\n      RestAPIs.GetUnAccountedTransactionTankList,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            data: this.fillTankDetails(result.EntityResult),\r\n            isReadyToRender: true,\r\n          });\r\n        } else {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\r\n            \"Error in GetUnAccountedTransactionTankList:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: [], isReadyToRender: true });\r\n        console.log(\r\n          \"Error while getting UnAccountedTransactionTank List:\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n}\r\n\r\nfillTankDetails(data) {\r\n  try {\r\n    data.Table.forEach((p) => {\r\n      if (\r\n        p.TankUnaccountedTransaction_UnAccountedGrossQuantity !== null &&\r\n        p.TankUnaccountedTransaction_UnAccountedGrossQuantity !== \"\"\r\n      )\r\n        p.TankUnaccountedTransaction_UnAccountedGrossQuantity =\r\n          p.TankUnaccountedTransaction_UnAccountedGrossQuantity.toLocaleString();\r\n      if (\r\n        p.TankUnaccountedTransaction_UnAccountedNetQuantity !== null &&\r\n        p.TankUnaccountedTransaction_UnAccountedNetQuantity !== \"\"\r\n      )\r\n        p.TankUnaccountedTransaction_UnAccountedNetQuantity =\r\n          p.TankUnaccountedTransaction_UnAccountedNetQuantity.toLocaleString();\r\n      if (\r\n        p.TankUnaccountedTransaction_Density !== null &&\r\n        p.TankUnaccountedTransaction_Density !== \"\"\r\n      )\r\n        p.TankUnaccountedTransaction_Density =\r\n          p.TankUnaccountedTransaction_Density.toLocaleString();\r\n    });\r\n\r\n    this.setState({ data });\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\r\n      \"UnAccountedTransactionMeterDetailsComposite:Error occured on fillDetails\",\r\n      error\r\n    );\r\n  }\r\n}\r\n\r\nGetUnAccountedTransactionMeterList(shareholder) {\r\n  let fromDate = new Date(this.state.fromDate);\r\n  let toDate = new Date(this.state.toDate);\r\n  fromDate.setHours(0, 0, 0);\r\n  toDate.setHours(23, 59, 59);\r\n  let obj = {\r\n    ShareholderCode: shareholder,\r\n    startRange: fromDate,\r\n    endRange: toDate,\r\n  };\r\n  if (shareholder !== undefined && shareholder !== \"\") {\r\n    axios(\r\n      RestAPIs.GetUnAccountedTransactionMeterList,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            data: this.fillMeterDetails(result.EntityResult),\r\n            isReadyToRender: true,\r\n          });\r\n        } else {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\r\n            \"Error in GetUnAccountedTransactionMeterList:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: [], isReadyToRender: true });\r\n        console.log(\r\n          \"Error while getting UnAccountedTransactionMeter List:\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n}\r\n\r\nfillMeterDetails(data) {\r\n  try {\r\n    data.Table.forEach((p) => {\r\n      if (\r\n        p.MeterUnaccountedTransaction_UnAccountedGrossQuantity !== null &&\r\n        p.MeterUnaccountedTransaction_UnAccountedGrossQuantity !== \"\"\r\n      )\r\n        p.MeterUnaccountedTransaction_UnAccountedGrossQuantity =\r\n          p.MeterUnaccountedTransaction_UnAccountedGrossQuantity.toLocaleString();\r\n      if (\r\n        p.MeterUnaccountedTransaction_UnAccountedNetQuantity !== null &&\r\n        p.MeterUnaccountedTransaction_UnAccountedNetQuantity !== \"\"\r\n      )\r\n        p.MeterUnaccountedTransaction_UnAccountedNetQuantity =\r\n          p.MeterUnaccountedTransaction_UnAccountedNetQuantity.toLocaleString();\r\n    });\r\n    this.setState({ data });\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\r\n      \"UnAccountedTransactionMeterDetailsComposite:Error occured on fillDetails\",\r\n      error\r\n    );\r\n  }\r\n}\r\n\r\n\r\n \r\n\r\nupdateReconciliationReport(modReconciliationInfo) {\r\n  let keyCode = [\r\n      {\r\n          key: KeyCodes.reconciliationCode,\r\n          value: modReconciliationInfo.Code,\r\n      },\r\n  ];\r\n  let obj = {\r\n      keyDataCode: KeyCodes.reconciliationCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modReconciliationInfo,\r\n  };\r\n\r\n  let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ProductReconciliation_UpdateMsg\",\r\n      messageResultDetails: [\r\n          {\r\n              keyFields: [\"ReconciliationReportDetail_RcCode\"],\r\n              keyValues: [modReconciliationInfo.ReconciliationCode],\r\n              isSuccess: false,\r\n              errorMessage: \"\",\r\n          },\r\n      ],\r\n  };\r\n\r\n  axios(\r\n      RestAPIs.UpdateReconciliationReport,\r\n      Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n      )\r\n  ).then((response) => {\r\n      let result = response.data;\r\n      notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n      notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n      if (result.IsSuccess === true) {\r\n          this.setState(\r\n              {\r\n                  saveEnabled: Utilities.isInFunction(\r\n                      this.props.userDetails.EntityResult.FunctionsList,\r\n                      functionGroups.modify,\r\n                      fnProductReconciliationReports\r\n                  ),\r\n              },\r\n              () => this.getReconciliationReport({ Common_Code: modReconciliationInfo.ReconciliationCode })\r\n          );\r\n      } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n          this.setState({\r\n              saveEnabled: Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnProductReconciliationReports\r\n              ),\r\n          });\r\n          console.log(\"Error in update ReconciliationReport:\", result.ErrorList);\r\n      }\r\n      this.props.onSaved(this.state.modReconciliationInfo, \"update\", notification);\r\n  })\r\n      .catch((error) => {\r\n          this.setState({\r\n              saveEnabled: Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnProductReconciliationReports\r\n              ),\r\n          });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          this.props.onSaved(this.state.modReconciliationInfo, \"modify\", notification);\r\n      });\r\n}\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const { validationErrors } = { ...this.state };\r\n      const reconciliationInfo = lodash.cloneDeep(this.state.reconciliationInfo);\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState(\r\n        {\r\n          modReconciliationInfo: { ...reconciliationInfo },\r\n          selectedCompRow: [],\r\n          validationErrors,\r\n        } \r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"ProductReconciliationDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getReconciliationReport(prodReconReportRow) {\r\n        \r\n    if (prodReconReportRow.Common_Code === undefined) {\r\n        this.setState({\r\n            reconciliationInfo: lodash.cloneDeep(emptyReconciliationInfo),\r\n            modReconciliationInfo: lodash.cloneDeep(emptyReconciliationInfo),\r\n            isReadyToRender: true,\r\n            \r\n            saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.add,\r\n                fnProductReconciliationReports\r\n            ),\r\n        },\r\n         \r\n        );\r\n        return;\r\n    }\r\n    var keyCode = [\r\n        {\r\n            key: KeyCodes.reconciliationCode,\r\n            value: prodReconReportRow.Common_Code,\r\n        }\r\n    ];\r\n    var obj = {\r\n        reconciliationCode: prodReconReportRow.Common_Code,\r\n        keyDataCode: KeyCodes.reconciliationCode,\r\n        KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n        RestAPIs.GetReconciliationReport,\r\n        Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n        )\r\n    ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n            result.EntityResult.ReconciliationCode = result.EntityResult.ReconciliationCode.toString();\r\n            this.setState(\r\n                {\r\n                    isReadyToRender: true,\r\n                    reconciliationInfo: lodash.cloneDeep(result.EntityResult),\r\n                    modReconciliationInfo: lodash.cloneDeep(result.EntityResult),\r\n                    saveEnabled: Utilities.isInFunction(\r\n                        this.props.userDetails.EntityResult.FunctionsList,\r\n                        functionGroups.modify,\r\n                        fnProductReconciliationReports\r\n                    ),\r\n                }, \r\n            );\r\n        } else {\r\n            this.setState({\r\n              reconciliationInfo: lodash.cloneDeep(emptyReconciliationInfo),\r\n              modReconciliationInfo: lodash.cloneDeep(emptyReconciliationInfo),\r\n                isReadyToRender: true,\r\n            });\r\n            console.log(\"Error in get ReconciliationReport:\", result.ErrorList);\r\n        }\r\n    })\r\n        .catch((error) => {\r\n            console.log(\"Error while get ReconciliationReport:\", error, prodReconReportRow);\r\n        });\r\n}\r\n\r\n\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modReconciliationInfo = lodash.cloneDeep(this.state.modReconciliationInfo);\r\n\r\n      modReconciliationInfo[propertyName] = data;\r\n      this.setState({ modReconciliationInfo });\r\n\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (productReconciliationReportValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          productReconciliationReportValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n \r\n    } catch (error) {\r\n      console.log(\r\n        \"ProductReconciliationDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getLookUpData() {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=ReportConfig\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var { reonciliationReportNames } = { ...this.state };\r\n          reonciliationReportNames.tank = result.EntityResult.TankFolio;\r\n          reonciliationReportNames.meter = result.EntityResult.MeterReconciliation;\r\n\r\n          this.setState({ reonciliationReportNames });\r\n        } else {\r\n          console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"ProductReconciliationDetailsComposite: Error occurred on getLookUpData\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  handleModalBack = () => {\r\n    this.setState({ showReport: false });\r\n  };\r\n\r\n  renderModal() {\r\n   \r\n    var { reonciliationReportNames } = { ...this.state };\r\n     \r\n    let path = null;\r\n    let reportName = '';\r\n   if(this.state.reconciliationInfo.EntityTypeCode === \"Meter\")\r\n    reportName = reonciliationReportNames.meter;\r\n    else\r\n    reportName= reonciliationReportNames.tank;\r\n   \r\n    if (this.props.userDetails.EntityResult.IsArchived) {\r\n      path = \"TM/\" + Constants.TMReportArchive + \"/\" + reportName;\r\n    } else {\r\n      path = \"TM/\" + Constants.TMReports + \"/\" + reportName;\r\n    }\r\n    let paramValues = {};\r\n\r\n      paramValues = {\r\n        Culture: this.props.userDetails.EntityResult.UICulture,\r\n        ReconciliationCode: this.state.reconciliationInfo.ReconciliationCode,\r\n        readonly: 1\r\n      };\r\n   \r\n    return (\r\n      <ErrorBoundary>\r\n        <ReportDetails\r\n          showReport={this.state.showReport}\r\n          handleBack={this.handleModalBack}\r\n          handleModalClose={this.handleModalBack}\r\n          proxyServerHost={RestAPIs.WebAPIURL}\r\n          reportServiceHost={this.reportServiceURI}\r\n          filePath={path}\r\n          parameters={paramValues}\r\n        />\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n\r\n  handleViewReport = () => {\r\n    try {\r\n      if (this.reportServiceURI === undefined) {\r\n        axios(\r\n          RestAPIs.GetReportServiceURI,\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.reportServiceURI = response.data.EntityResult;\r\n            this.setState({ showReport: true });\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ showReport: true});\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(\r\n        \"ProductReconciliationDetailsComposite:Error occured on handleView Report\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  \r\n  BackEvent = () => {\r\n    try {\r\n        this.setState({\r\n           showTankTransactions: false,showMeterTransactions: false,\r\n        }, )\r\n    }\r\n    catch (error) {\r\n        console.log(\"Error in BackEvent\", error)\r\n    }\r\n}\r\n\r\n\r\n\r\n  handleReconciliationStatusChange = (value) => {\r\n    try {\r\n      let modReconciliationInfo = lodash.cloneDeep(this.state.modReconciliationInfo);\r\n      modReconciliationInfo.Status = value;\r\n      if (modReconciliationInfo.Status !== this.state.reconciliationInfo.Status)\r\n      modReconciliationInfo.Remarks = \"\";\r\n      this.setState({ modReconciliationInfo });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      productReconciliationStatusOptions: this.state.productReconciliationStatusOptions,\r\n    };\r\n\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"CaptainInfo_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modReconciliationInfo.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modReconciliationInfo.LastUpdatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"CaptainInfo_CreatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.modReconciliationInfo.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modReconciliationInfo.CreatedTime).toLocaleTimeString(),\r\n      },\r\n \r\n    ];\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.reconciliationInfo.ReconciliationCode}\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        {this.state.showTankTransactions || this.state.showMeterTransactions ? (\r\n          this.state.showMeterTransactions?(\r\n          <ErrorBoundary>\r\n          <TMTransactionFilters\r\n            dateRange={{ from: this.state.fromDate, to: this.state.toDate }}\r\n            dateError={this.state.dateError}\r\n            handleRangeSelect={this.handleRangeSelect}\r\n            handleLoadOrders={this.handleLoadOrders}\r\n            filterText=\"LoadTransactionMeter\"\r\n          ></TMTransactionFilters>\r\n      \r\n                      <ViewMeterUnAccountedTransactionsDetails\r\n                          transactionData={this.state.data.Table}\r\n                          handleBack={this.BackEvent}\r\n                          pageSize={this.props.userDetails.EntityResult.PageAttibutes\r\n                              .WebPortalListPageSize}\r\n                      >\r\n                      </ViewMeterUnAccountedTransactionsDetails>\r\n                  </ErrorBoundary>) :\r\n                   <ErrorBoundary>\r\n                   <TMTransactionFilters\r\n                     dateRange={{ from: this.state.fromDate, to: this.state.toDate }}\r\n                     dateError={this.state.dateError}\r\n                     handleRangeSelect={this.handleRangeSelect}\r\n                     handleLoadOrders={this.handleLoadOrders}\r\n                     filterText=\"LoadTransactionTank\"\r\n                   ></TMTransactionFilters>\r\n                      <ViewTankUnAccountedTransactionsDetails\r\n                          transactionData={this.state.data.Table}\r\n                          handleBack={this.BackEvent}\r\n                          pageSize={this.props.userDetails.EntityResult.PageAttibutes\r\n                              .WebPortalListPageSize}\r\n                      >\r\n                      </ViewTankUnAccountedTransactionsDetails>\r\n                  </ErrorBoundary>\r\n                        ):\r\n      this.state.showReport === false ? (\r\n        <ErrorBoundary>\r\n          <ProductReconciliationReportDetails\r\n            reconciliationInfo={this.state.reconciliationInfo}\r\n            modReconciliationInfo={this.state.modReconciliationInfo}\r\n            listOptions={listOptions}\r\n            validationErrors={this.state.validationErrors}\r\n            onFieldChange={this.handleChange}\r\n            handleReconciliationStatusChange={this.handleReconciliationStatusChange}\r\n            handleReopenReconciliation={this.handleReopenReconciliation}\r\n            handleViewReport={this.handleViewReport}\r\n            handleViewUnAccountedTransactions= {this.handleViewUnAccountedTransactions}\r\n          ></ProductReconciliationReportDetails>\r\n        <TMDetailsUserActions\r\n          handleBack={this.props.onBack}\r\n          handleSave={this.handleSave}\r\n          handleReset={this.handleReset}\r\n          saveEnabled={this.state.saveEnabled}\r\n        ></TMDetailsUserActions>\r\n          \r\n      </ErrorBoundary>\r\n      \r\n          ) : (this.renderModal())\r\n        }\r\n         \r\n         {\r\n           \r\n         this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.modify}\r\n            functionGroup={fnProductReconciliationReports}\r\n            handleOperation={this.updateProductReconciliationReport}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProductReconciliationReportDetailsComposite);\r\n\r\nProductReconciliationReportDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  shareholerCode: PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport {  Checkbox, Input, Icon, Radio, DatePicker,InputLabel } from '@scuf/common';\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { DataTable } from '@scuf/datatable';\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nProductReconciliationScheduleDetails.propTypes = {\r\n\r\n};\r\nexport default function ProductReconciliationScheduleDetails({\r\n  modReportSchedule,\r\n  modReconciliationSchedules,\r\n  validationErrors,\r\n  columnDetails,\r\n  onFieldChange,\r\n  onRowClick,\r\n  addNewSchedule,\r\n}) {\r\n\r\n  const [t] = useTranslation();\r\n\r\n\r\n  function displayValues(cellData, columnDetail) {\r\n    const { value, field } = cellData;\r\n    if (typeof value === \"boolean\" || field === \"Active\") {\r\n      if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n      else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n    } else if (value === \"\" || value === null || value === undefined) {\r\n      return value;\r\n    }\r\n    else if (\r\n      columnDetail !== undefined &&\r\n      columnDetail !== null &&\r\n      columnDetail.DataType !== undefined &&\r\n      columnDetail.DataType === \"DateTime\"\r\n    ) {\r\n      return (\r\n        new Date(value).toLocaleDateString() +\r\n        \" \" +\r\n        new Date(value).toLocaleTimeString()\r\n      );\r\n    } else if (\r\n      columnDetail !== undefined &&\r\n      columnDetail !== null &&\r\n      columnDetail.DataType !== undefined &&\r\n      columnDetail.DataType === \"Date\"\r\n    ) {\r\n      return new Date(value).toLocaleDateString();\r\n    } else return value;\r\n  }\r\n\r\nfunction getScheduleTitle(modSchedInfo)\r\n{\r\n  let scheduleTitle='';\r\n  if(addNewSchedule)\r\n  scheduleTitle=t(\"ReconciliationSchedule_AddFolioSchedule\");\r\n  else\r\n  {\r\n    if(modSchedInfo.IsRecurrent)\r\n    {\r\n      if(modSchedInfo.IsEOD)\r\n      scheduleTitle= modReportSchedule.EntityTypeCode + \"-\" +  t(\"ReconciliationSchedule_Schedule_EOD\");\r\n      else \r\n      scheduleTitle= modReportSchedule.EntityTypeCode + \"-\" +  t(\"ReconciliationSchedule_Schedule_EOS\");\r\n    }\r\n    else\r\n    {\r\n      scheduleTitle= modReportSchedule.EntityTypeCode + \"-\" +  modReportSchedule.ScheduleName;\r\n    }\r\n  }\r\n\r\n  return scheduleTitle;\r\n}\r\n\r\n  return (\r\n    <div className=\"detailsContainer\">\r\n\r\n      <div className=\"row\">\r\n    \r\n        <div className=\"col-6 col-md-6 col-lg-6 pb-0\">\r\n          <br></br>\r\n          {(modReconciliationSchedules!==null && modReconciliationSchedules!==undefined)?\r\n          <DataTable\r\n            data={modReconciliationSchedules}\r\n            reorderableColumns={true}\r\n            resizableColumns={true}\r\n            searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n            onCellClick={(data) =>\r\n              onRowClick(data.rowData)}\r\n          >\r\n            <DataTable.ActionBar />\r\n            {columnDetails.map(function (columnDetail) {\r\n              return (\r\n                <DataTable.Column\r\n                  initialWidth={columnDetail.Width}\r\n                  key={columnDetail.Name}\r\n                  field={columnDetail.Name}\r\n                  header={t(columnDetail.Name)}\r\n                  renderer={(cellData) => displayValues(cellData, columnDetail)}\r\n\r\n                />\r\n              );\r\n            })}\r\n            { }\r\n\r\n          </DataTable>\r\n  :\"\"}\r\n\r\n        </div>\r\n\r\n        <div className=\"col-6 col-md-6 col-lg-6\">\r\n          <span>\r\n            {modReportSchedule.EntityTypeCode !== '' || addNewSchedule===true ? (\r\n              <h5>{getScheduleTitle(modReportSchedule)}</h5>) : \"\"}\r\n          </span>\r\n          {modReportSchedule.EntityTypeCode !== '' || addNewSchedule===true ? (\r\n            <div >\r\n\r\n              <div className=\"row\">\r\n              <div className=\"col-12 col-md-6 col-lg-5\">\r\n                  <Input\r\n                    fluid\r\n                    value={modReportSchedule.ScheduleName}\r\n                    disabled={addNewSchedule===false?true:false || modReportSchedule.IsRecurrent===true?true:false}\r\n                    label={t(\"ReconciliationSchedule_FolioName\")}\r\n                    error={t(validationErrors.ScheduleName)}\r\n                    reserveSpace={false}\r\n                    onChange={(data) => onFieldChange(\"ScheduleName\", data)}\r\n                    indicator={addNewSchedule===true && modReportSchedule.IsRecurrent===false?\"required\":false}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-6 col-lg-5\">\r\n                <InputLabel label={t(\"ReconciliationSchedule_Entity\")} indicator={addNewSchedule===true && modReportSchedule.IsRecurrent===false?\"required\":false} />\r\n                  \r\n                  <Radio\r\n                    label={t(\"Reconciliation_Tank\")}\r\n                    name=\"RadioGroup\"\r\n                    error={t(validationErrors.EntityTypeCode)}\r\n                    disabled={addNewSchedule===false?true:false}\r\n                    checked={\r\n                      modReportSchedule.EntityTypeCode.toLowerCase() === \"tank\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onChange={() => onFieldChange(\"EntityTypeCode\", \"Tank\")}\r\n                  />\r\n                  <Radio\r\n                    label={t(\"Reconcillation_Meter\")}\r\n                    name=\"RadioGroup\"\r\n                    error={t(validationErrors.EntityTypeCode)}\r\n                    disabled={addNewSchedule===false?true:false}\r\n                    onChange={() => onFieldChange(\"EntityTypeCode\", \"Meter\")}\r\n                    checked={\r\n                      modReportSchedule.EntityTypeCode.toLowerCase() === \"meter\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  />\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n              <div className=\"col-12 col-md-12 col-lg-12\">\r\n              <InputLabel label={t(\"ReconciliationSchedule_Schedule\")} indicator={addNewSchedule===true && modReportSchedule.IsRecurrent===false?\"required\":false} />\r\n                  <Radio\r\n                    label={t(\"ReconciliationSchedule_Recurrent\")}\r\n                    name=\"OccuranceGroup\"\r\n                    error={t(validationErrors.ScheduleType)}\r\n                    disabled={addNewSchedule===false?true:false}\r\n                    onChange={() => onFieldChange(\"IsRecurrent\", true)}\r\n                    checked={\r\n                      modReportSchedule.IsRecurrent.toString().toLowerCase() === \"true\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n\r\n                  />\r\n                  <Radio\r\n                    label={t(\"ReconciliationSchedule_OneTime\")}\r\n                    name=\"OccuranceGroup\"\r\n                    onChange={() => onFieldChange(\"IsRecurrent\", false)}\r\n                    checked={\r\n                      modReportSchedule.IsRecurrent.toString().toLowerCase() === \"false\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    \r\n                     disabled={addNewSchedule===false?true:false}\r\n                  />\r\n\r\n                  <Checkbox\r\n                    \r\n                    onChange={() => onFieldChange(\"IsEOD\", true)}\r\n                    checked={\r\n                      modReportSchedule.IsEOD.toString().toLowerCase() === \"true\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    disabled={addNewSchedule===false|| modReportSchedule.IsRecurrent===false?true:false}\r\n                    label={t(\"ReconciliationSchedule_Schedule_EOD\")}\r\n                  ></Checkbox>\r\n                  <Checkbox\r\n                    onChange={() => onFieldChange(\"IsEOS\", true)}\r\n                    checked={\r\n                      modReportSchedule.IsEOS.toString().toLowerCase() === \"true\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    disabled={addNewSchedule===false|| modReportSchedule.IsRecurrent===false?true:false}\r\n                    label={t(\"ReconciliationSchedule_Schedule_EOS\")}\r\n                  ></Checkbox>\r\n                </div>\r\n                \r\n\r\n                 \r\n              </div>\r\n              <div className=\"row\">\r\n                  <div className=\"col-12 col-md-12 col-lg-8\">\r\n                  <DatePicker\r\n                    fluid\r\n                    value={modReportSchedule.StartDateTime == null ? '' : new Date(modReportSchedule.StartDateTime)}\r\n                    label={t(\"ReconciliationSchedule_OneTime_Start\")}\r\n                    disablePast={false}\r\n                    type=\"datetime\"\r\n                    indicator={addNewSchedule===true && modReportSchedule.IsRecurrent===false?\"required\":false}\r\n                    error={t(validationErrors.StartDateTime)}\r\n                    onChange={(data) => onFieldChange(\"StartDateTime\", data)}\r\n                    displayFormat={getCurrentDateFormat()}\r\n                    minuteStep={1}\r\n                    reserveSpace={false}\r\n                    disabled={addNewSchedule===true && modReportSchedule.IsRecurrent===false?false:true}\r\n\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"col-12 col-md-12 col-lg-8\">\r\n                  <DatePicker\r\n                    fluid\r\n                    value={modReportSchedule.EndDateTime == null ? '' : new Date(modReportSchedule.EndDateTime)}\r\n                    label={t(\"ReconciliationSchedule_OneTime_End\")}\r\n                    disablePast={false}\r\n                    error={t(validationErrors.EndDateTime)}\r\n                    type=\"datetime\"\r\n                    indicator={addNewSchedule===true && modReportSchedule.IsRecurrent===false?\"required\":false}\r\n                    onChange={(data) => onFieldChange(\"EndDateTime\", data)}\r\n                    displayFormat={getCurrentDateFormat()}\r\n                    minuteStep={1}\r\n                    reserveSpace={false}\r\n                    disabled={addNewSchedule===true && modReportSchedule.IsRecurrent===false?false:true}\r\n                  />\r\n                </div>\r\n\r\n              </div>\r\n            </div>) : \"\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport lodash from \"lodash\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport { emptyReconciliationScheduleInfo,emptyReconciliationInfo } from \"../../../JS/DefaultEntities\";\r\nimport { productReconciliationScheduleValidationDef } from \"../../../JS/ValidationDef\";\r\nimport ProductReconciliationScheduleDetails from \"../../UIBase/Details/ProductReconciliationScheduleDetails\";\r\nimport { functionGroups, fnProductReconciliationReports } from \"../../../JS/FunctionGroups\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass ProductReconciliationScheduleDetailsComposite extends Component {\r\n  state = {\r\n    reportSchedule: {},\r\n    modReportSchedule: {},\r\n    saveEnabled: false,\r\n    isDeleteEnabled: false,\r\n    isReadyToRender: false,\r\n    modReconciliationSchedules: [],\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      productReconciliationScheduleValidationDef\r\n    ),\r\n    addNewSchedule:false,\r\n    showAuthenticationLayout: false,\r\n    tempReportSchedule: {}\r\n    \r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getReconciliationSchedules();\r\n\r\n      this.setState(\r\n        {\r\n          reportSchedule: lodash.cloneDeep(emptyReconciliationScheduleInfo),\r\n          modReportSchedule: lodash.cloneDeep(emptyReconciliationScheduleInfo),\r\n        //  addNewSchedule: false,\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ProductReconciliationScheduleDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      \r\n      if(nextProps.refreshScheduleUIRequired===true)\r\n      {\r\n        this.handleReset();\r\n      }\r\n      \r\n      if (nextProps.addSchedule===true)\r\n      {\r\n      \r\n        this.handleReset();\r\n        this.setState({addNewSchedule:true,saveEnabled: Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.view,\r\n          fnProductReconciliationReports\r\n      ),})\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(\r\n        \"ProductReconciliationScheduleDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n \r\n  getReconciliationSchedules() {\r\n    axios(\r\n      RestAPIs.GetReconciliationScheduleList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ modReconciliationSchedules: result.EntityResult, isReadyToRender: true });\r\n        } else {\r\n          this.setState({ modReconciliationSchedules: [], isReadyToRender: true });\r\n          console.log(\"Error in GetReconciliationScheduleList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ modReconciliationSchedules: [], isReadyToRender: true });\r\n        console.log(\"Error while getting GetReconciliationScheduleList:\", error);\r\n      });\r\n  }\r\n  \r\n \r\n\r\n  validateSave(modSchedInfo) {\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(productReconciliationScheduleValidationDef).forEach(function (key) {\r\n      if (modSchedInfo[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          productReconciliationScheduleValidationDef[key],\r\n          modSchedInfo[key]\r\n        );\r\n    });\r\n\r\n    if(modSchedInfo.EntityTypeCode===\"\")\r\n    {\r\n      validationErrors[\"ScheduleName\"] = \"ReconciliationSchedule_EntityMandatory\";\r\n    }\r\n    else\r\n    if(modSchedInfo.IsRecurrent===\"\")\r\n    {\r\n      validationErrors[\"ScheduleName\"] = \"ReconciliationSchedule_ScheduleMandatory\";\r\n    }\r\n    else\r\n    if(modSchedInfo.IsRecurrent===true &&  modSchedInfo.IsEOS=== false && modSchedInfo.IsEOD===false)\r\n    {\r\n      validationErrors[\"ScheduleName\"] = \"ReconciliationSchedule_EODEOSMandatory\";\r\n    }\r\n    else\r\n    if((modSchedInfo.IsRecurrent===\"\" || modSchedInfo.IsRecurrent===false) && modSchedInfo.ScheduleName===\"\")\r\n    {\r\n       \r\n      validationErrors[\"ScheduleName\"] = \"ReconciliationSchedule_FolioNameMandatory\";\r\n    }\r\n    if(modSchedInfo.IsRecurrent===false && modSchedInfo.StartDateTime===null)\r\n    {\r\n      validationErrors[\"StartDateTime\"] = \"ReconciliationSchedule_StartDateMandatory\";\r\n    }\r\n    \r\n    if(modSchedInfo.IsRecurrent===false && modSchedInfo.EndDateTime===null)\r\n    {\r\n      validationErrors[\"EndDateTime\"] = \"ReconciliationSchedule_EndDateMandatory\";\r\n    }\r\n\r\n    this.setState({ validationErrors });\r\n\r\n    var returnValue = true;\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  }\r\n\r\n\r\n\r\n  handleRowClick = (row) => {\r\n    try {\r\n\r\n\r\n      var keyCode = [\r\n        {\r\n            key: KeyCodes.reconciliationCode,\r\n            value: row.ScheduleName,\r\n        },\r\n        {\r\n          key: KeyCodes.entityType,\r\n          value: row.EntityCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n        reconciliationCode: row.ScheduleName,\r\n        keyDataCode: KeyCodes.reconciliationCode,\r\n        KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n        RestAPIs.GetReconciliationSchedule,\r\n        Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n        )\r\n    ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n            \r\n          let rptSchedule= lodash.cloneDeep(result.EntityResult);\r\n        \r\n          rptSchedule.ScheduleName=row.ScheduleName;\r\n          this.props.onScheduleSelect(rptSchedule);\r\n\r\n            this.setState(\r\n                {\r\n                    addNewSchedule:false,\r\n                    isReadyToRender: true,\r\n                    reportSchedule: lodash.cloneDeep(result.EntityResult),\r\n                    modReportSchedule: lodash.cloneDeep(result.EntityResult),\r\n                    saveEnabled:  false,\r\n                }, \r\n                 \r\n            );\r\n        } else {\r\n            this.setState({\r\n              reportSchedule: lodash.cloneDeep(emptyReconciliationScheduleInfo),\r\n              modReportSchedule: lodash.cloneDeep(emptyReconciliationScheduleInfo),\r\n                isReadyToRender: true,\r\n            });\r\n            console.log(\"Error in get ReconciliationReport:\", result.ErrorList);\r\n        }\r\n   \r\n    })\r\n        .catch((error) => {\r\n            console.log(\"Error while get ReconciliationReport:\", error, row);\r\n        });\r\n \r\n      \r\n    } catch (error) {\r\n      console.log(\"CarrierCompanyComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modReportSchedule = lodash.cloneDeep(\r\n        this.state.modReportSchedule\r\n      );\r\n      \r\n      if(propertyName===\"IsEOD\")\r\n      {\r\n       modReportSchedule.IsEOD=!modReportSchedule.IsEOD;\r\n      }\r\n      else if(propertyName===\"IsEOS\")\r\n      {\r\n       modReportSchedule.IsEOS=!modReportSchedule.IsEOS;\r\n      }\r\n      else if(propertyName===\"IsRecurrent\" && data === false)\r\n      {\r\n        modReportSchedule.IsEOD= false;\r\n        modReportSchedule.IsEOS=false;\r\n        modReportSchedule[propertyName] = data;\r\n        \r\n      }\r\n      else if(propertyName===\"IsRecurrent\" && data === true)\r\n      {\r\n        modReportSchedule.ScheduleName='';\r\n        modReportSchedule[propertyName] = data;\r\n        \r\n      }\r\n      else \r\n      modReportSchedule[propertyName] = data;\r\n\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      if (productReconciliationScheduleValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          productReconciliationScheduleValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n       \r\n        this.setState({ validationErrors, modReportSchedule, });\r\n\r\n    \r\n    } catch (error) {\r\n      console.log(\r\n        \"ProductReconciliationScheduleDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n  \r\n  handleReset = () => {\r\n    try {\r\n      \r\n      const { validationErrors } = { ...this.state };\r\n\r\n      this.getReconciliationSchedules();\r\n      \r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n\r\n      this.props.onUnScheduleSelect(null);\r\n      this.setState(\r\n        {\r\n          reportSchedule: lodash.cloneDeep(emptyReconciliationScheduleInfo),\r\n          modReportSchedule: lodash.cloneDeep(emptyReconciliationScheduleInfo),\r\n        },\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"ProductReconciliationScheduleDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  addProductReconciliationSchedule = () => {\r\n    try {\r\n      this.handleAuthenticationClose();\r\n      this.setState({ saveEnabled: false });\r\n      let tempReportSchedule = lodash.cloneDeep(this.state.tempReportSchedule);\r\n     \r\n      if(tempReportSchedule.IsRecurrent===false)\r\n       {\r\n        let modReconRepInfo= this.prepareReconciliationReportDetails(tempReportSchedule);\r\n        modReconRepInfo.Status =  Constants.ProductReconciliationReportStatus.Open;\r\n        this.CreateOneTimeReconciliationSchedule(modReconRepInfo);\r\n       }\r\n       else\r\n       {\r\n        tempReportSchedule.Active=true;\r\n        this.CreateRecurrenceSchedule(tempReportSchedule);\r\n       }\r\n\r\n    } catch (error) {\r\n      console.log(\"ProductReconciliation Details Composite : Error in addProductReconciliationSchedule\");\r\n    }\r\n  };\r\n\r\n\r\n  handleSave = () => {\r\n    try {\r\n     \r\n      let modReportSchedule = lodash.cloneDeep(this.state.modReportSchedule);\r\n      \r\n      if (this.validateSave(modReportSchedule)) {\r\n        let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempReportSchedule = lodash.cloneDeep(modReportSchedule);\r\n      this.setState({ showAuthenticationLayout, tempReportSchedule }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.addProductReconciliationSchedule();\r\n        }\r\n    });\r\n         \r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"ProductReconciliationScheduleDetailsComposite:Error occured on handleSave\", error);\r\n    }\r\n  };\r\n  \r\n  prepareReconciliationReportDetails= (schedInfo) => {\r\n    let modReconRepInfo= lodash.cloneDeep(emptyReconciliationInfo);\r\n    try {\r\n     \r\n     modReconRepInfo.ReconciliationCode=schedInfo.ScheduleName;\r\n     modReconRepInfo.EntityTypeCode=schedInfo.EntityTypeCode;\r\n     modReconRepInfo.StartDate=schedInfo.StartDateTime;\r\n     modReconRepInfo.EndDate=schedInfo.EndDateTime;\r\n     modReconRepInfo.LastUpdatedTime= new Date();\r\n     modReconRepInfo.LastUpdatedBy=this.props.userDetails.EntityResult.Firstname + \" \" + this.props.userDetails.EntityResult.LastName;\r\n   \r\n    } catch (error) {\r\n      console.log(\"ProductReconciliationReportComposite:Error occured on prepareReconciliationReportDetails\", error);\r\n    }\r\n    return modReconRepInfo;\r\n  };\r\n\r\n\r\n  CreateRecurrenceSchedule (modReportSchedule) {\r\n\r\n    let keyCode = [\r\n        {\r\n            key: KeyCodes.reconciliationCode,\r\n            value: modReportSchedule.ScheduleName,\r\n        },\r\n    ];\r\n\r\n    let obj = {\r\n        keyDataCode: KeyCodes.reconciliationCode,\r\n        KeyCodes: keyCode,\r\n        Entity: modReportSchedule,\r\n    };\r\n  \r\n    let notification = {\r\n        messageType: \"critical\",\r\n        message: \"ReconciliationSchedule_SavedMsg\",\r\n        messageResultDetails: [\r\n            {\r\n                keyFields: [\"ReconciliationSchedule_Entity\"],\r\n                keyValues: [modReportSchedule.EntityTypeCode],\r\n                isSuccess: false,\r\n                errorMessage: \"\",\r\n            },\r\n        ],\r\n    };\r\n  \r\n    \r\n    axios(\r\n        RestAPIs.CreateRecurrenceSchedule,\r\n        Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n        )\r\n    ).then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n            this.setState(\r\n                {\r\n                  saveEnabled:false,\r\n                  addNewSchedule:false,\r\n                },\r\n              \r\n            );\r\n            this.getReconciliationSchedules();\r\n        } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n            this.setState({\r\n                saveEnabled: Utilities.isInFunction(\r\n                    this.props.userDetails.EntityResult.FunctionsList,\r\n                    functionGroups.add,\r\n                    fnProductReconciliationReports\r\n                ),\r\n            });\r\n            console.log(\"Error in Add ReconciliationReport:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modReportSchedule, \"add\", notification);\r\n    })\r\n        .catch((error) => {\r\n            this.setState({\r\n                saveEnabled: Utilities.isInFunction(\r\n                    this.props.userDetails.EntityResult.FunctionsList,\r\n                    functionGroups.modify,\r\n                    fnProductReconciliationReports\r\n                ),\r\n            });\r\n            notification.messageResultDetails[0].errorMessage = error;\r\n            this.props.onSaved(modReportSchedule, \"add\", notification);\r\n        });\r\n  }\r\n\r\n\r\n  CreateOneTimeReconciliationSchedule(modReconciliationInfo) {\r\n\r\n    let keyCode = [\r\n        {\r\n            key: KeyCodes.reconciliationCode,\r\n            value: modReconciliationInfo.Code,\r\n        },\r\n    ];\r\n\r\n    let obj = {\r\n        keyDataCode: KeyCodes.reconciliationCode,\r\n        KeyCodes: keyCode,\r\n        Entity: modReconciliationInfo,\r\n    };\r\n  \r\n    let notification = {\r\n        messageType: \"critical\",\r\n        message: \"ReconciliationSchedule_SavedMsg\",\r\n        messageResultDetails: [\r\n            {\r\n                keyFields: [\"ReconciliationReportDetail_RcCode\"],\r\n                keyValues: [modReconciliationInfo.ReconciliationCode],\r\n                isSuccess: false,\r\n                errorMessage: \"\",\r\n            },\r\n        ],\r\n    };\r\n  \r\n    \r\n    axios(\r\n        RestAPIs.CreateReconciliationReport,\r\n        Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n        )\r\n    ).then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n            this.setState(\r\n                {\r\n                  saveEnabled:false,\r\n                  addNewSchedule:false,\r\n                },\r\n              \r\n            );\r\n            this.getReconciliationSchedules();\r\n        } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n            this.setState({\r\n                saveEnabled: Utilities.isInFunction(\r\n                    this.props.userDetails.EntityResult.FunctionsList,\r\n                    functionGroups.add,\r\n                    fnProductReconciliationReports\r\n                ),\r\n            });\r\n            console.log(\"Error in Add ReconciliationReport:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modReconciliationInfo, \"add\", notification);\r\n    })\r\n        .catch((error) => {\r\n            this.setState({\r\n                saveEnabled: Utilities.isInFunction(\r\n                    this.props.userDetails.EntityResult.FunctionsList,\r\n                    functionGroups.modify,\r\n                    fnProductReconciliationReports\r\n                ),\r\n            });\r\n            notification.messageResultDetails[0].errorMessage = error;\r\n            this.props.onSaved(modReconciliationInfo, \"add\", notification);\r\n        });\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n        <TranslationConsumer>\r\n                  {(t) => (\r\n          <TMDetailsHeader\r\n           entityCode={t(\"ReconciliationSchedule_Title\")}\r\n          ></TMDetailsHeader>)}</TranslationConsumer>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <ProductReconciliationScheduleDetails\r\n            modReportSchedule={this.state.modReportSchedule}\r\n            modReconciliationSchedules={this.state.modReconciliationSchedules!=null?this.state.modReconciliationSchedules.Table:null}\r\n            validationErrors={this.state.validationErrors}\r\n            columnDetails={this.state.modReconciliationSchedules!=null?this.state.modReconciliationSchedules.Column:null}\r\n            onFieldChange={this.handleChange}\r\n            onRowClick={this.handleRowClick}\r\n            addNewSchedule={this.state.addNewSchedule}\r\n          ></ProductReconciliationScheduleDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n        <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.add}\r\n            functionGroup={fnProductReconciliationReports}\r\n            handleOperation={this.addProductReconciliationSchedule}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\n\r\nProductReconciliationScheduleDetailsComposite.propTypes = {\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  refreshScheduleUIRequired:PropTypes.func.isRequired,\r\n  addSchedule:PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProductReconciliationScheduleDetailsComposite);\r\n","import React from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\n\r\nProductReconciliationSummaryComposite.propTypes = {\r\n  tableData: PropTypes.array.isRequired,\r\n  columnDetails: PropTypes.array.isRequired,\r\n  pageSize: PropTypes.number,\r\n  selectedItems: PropTypes.array.isRequired,\r\n  onSelectionChange: PropTypes.func.isRequired,\r\n  onRowClick: PropTypes.func.isRequired,\r\n};\r\nProductReconciliationSummaryComposite.defaultProps = {\r\n  pageSize: 10,\r\n  tableData: [],\r\n  columnDetails: [],\r\n  selectedItems: [],\r\n};\r\n\r\nexport function ProductReconciliationSummaryComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  selectedItems,\r\n  onSelectionChange,\r\n  onRowClick,\r\n}) {\r\n  const [t] = useTranslation();\r\n  const ViewReportColumn = (data) => {\r\n    try {\r\n    return (\r\n      <div  className=\"compartmentIcon gridButtonFontColor\">\r\n        <ErrorBoundary>\r\n        <span className=\"gridButtonFontColor\">{t('ReconciliationReportDetail_btnViewReconcile')}</span>\r\n        </ErrorBoundary>\r\n        </div>\r\n    );\r\n    } catch (error) {\r\n      console.log(\"productReconciliationSummaryComposite :Error occured on ViewReportColumn\", error);\r\n    }\r\n  };\r\n\r\n  function displayValues(cellData, columnDetail) {\r\n    const { value, field } = cellData;\r\n    if (typeof value === \"boolean\" || field === \"Active\") {\r\n      if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n      else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n    } else if (value === \"\" || value === null || value === undefined) {\r\n      return value;\r\n    }  \r\n    else if (\r\n      columnDetail !== undefined &&\r\n      columnDetail !== null &&\r\n      columnDetail.DataType !== undefined &&\r\n      columnDetail.DataType === \"DateTime\"\r\n    ) {\r\n      return (\r\n        new Date(value).toLocaleDateString() +\r\n        \" \" +\r\n        new Date(value).toLocaleTimeString()\r\n      );\r\n    } else if (\r\n      columnDetail !== undefined &&\r\n      columnDetail !== null &&\r\n      columnDetail.DataType !== undefined &&\r\n      columnDetail.DataType === \"Date\"\r\n    ) {\r\n      return new Date(value).toLocaleDateString();\r\n    } else return value;\r\n  }\r\n\r\n  function getInitialWidth(columnDetails) {\r\n    const windowWidth = window.screen.width;\r\n    if (windowWidth < 1024) {\r\n      return columnDetails.WidthPx === undefined ||\r\n        columnDetails.WidthPx === null ||\r\n        columnDetails.WidthPx === \"\"\r\n        ? columnDetails.Width\r\n        : columnDetails.WidthPx;\r\n    } else {\r\n      return columnDetails.WidthPercentage === undefined ||\r\n        columnDetails.WidthPercentage === null ||\r\n        columnDetails.WidthPercentage === \"\"\r\n        ? columnDetails.Width\r\n        : columnDetails.WidthPercentage;\r\n    }\r\n  }\r\n\r\n \r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div\r\n          className={\r\n               \"tableScroll  flexRelative\"\r\n          }\r\n        >\r\n          <DataTable\r\n            data={tableData}\r\n            reorderableColumns={true}\r\n            resizableColumns={true}\r\n            selectionMode=\"multiple\"\r\n            onCellClick={(data) =>\r\n              onRowClick !== undefined ? onRowClick(data) : {}\r\n            }\r\n            selection={selectedItems}\r\n            onSelectionChange={(e) => onSelectionChange(e)}\r\n            search={true}\r\n            searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n            rows={pageSize}\r\n          >\r\n            <DataTable.ActionBar />\r\n            {columnDetails.map(function (columnDetail) {\r\n              return (\r\n                <DataTable.Column\r\n                  initialWidth={getInitialWidth(columnDetail)}\r\n                  key={columnDetail.Name}\r\n                  field={columnDetail.Name}\r\n                  header={t(columnDetail.Name)}\r\n                  sortable={true}\r\n                  renderer={(cellData) => displayValues(cellData, columnDetail)}\r\n                />\r\n              );\r\n            })}\r\n            \r\n            <DataTable.Column\r\n                      className=\"colminWidth\"\r\n                      initialWidth=\"150px\"\r\n                      field={\"ReconciliationReportDetail_btnViewReconcile\"}\r\n                  header={t(\"ReconciliationReportDetail_btnViewReconcile\")}\r\n            renderer={ViewReportColumn}\r\n                    /> \r\n            {Array.isArray(tableData) && tableData.length > pageSize ? (\r\n              <DataTable.Pagination />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </DataTable>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { ProductReconciliationSummaryComposite } from \"../Summary/ProductReconciliationSummaryComposite\";\r\nimport ProductReconciliationReportDetailsComposite from \"../Details/ProductReconciliationReportDetailsComposite\";\r\nimport ProductReconciliationScheduleDetailsComposite from \"../Details/ProductReconciliationScheduleDetailsComposite\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { connect } from \"react-redux\";\r\nimport lodash from \"lodash\";\r\nimport \"../../../CSS/styles.css\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport PropTypes from \"prop-types\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport ReportDetails from \"../../UIBase/Details/ReportDetails\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { functionGroups, fnProductReconciliationReports } from \"../../../JS/FunctionGroups\";\r\nimport { emptyReconciliationScheduleInfo, emptyReconciliationInfo } from \"../../../JS/DefaultEntities\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport dayjs from \"dayjs\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass ProductReconciliationReportComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    data: {},\r\n    showReport: false,\r\n    reportType: \"\",\r\n    selectedScheduleInfo: {},\r\n    refreshScheduleUI: false,\r\n    showSchedule: false,\r\n    operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n    reonciliationReportNames: { tank: '', meter: '', compareFolio: '' },\r\n    addSchedule: false,\r\n    shareholderCode: \"\",\r\n    showAuthenticationLayout: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getLookUpData();\r\n      this.setState(\r\n        {\r\n          selectedScheduleInfo: lodash.cloneDeep(emptyReconciliationScheduleInfo),shareholderCode:this.props.userDetails.EntityResult.PrimaryShareholder,\r\n        });\r\n      this.getProductReconciliationList();\r\n\r\n\r\n    } catch (error) {\r\n      console.log(\r\n        \"ProductReconciliationReportComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getProductReconciliationList() {\r\n    axios(\r\n      RestAPIs.GetProductReconciliationListForRole,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n\r\n          this.setState({ data: result.EntityResult, isReadyToRender: true });\r\n        } else {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error in getProductReconciliationList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: [], isReadyToRender: true });\r\n        console.log(\"Error while getting getProductReconciliationList:\", error);\r\n      });\r\n  }\r\n\r\n\r\n  handleBack = () => {\r\n    try {\r\n\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.delete = false;\r\n\r\n\r\n      this.setState({\r\n        isDetails: false,\r\n        showSchedule: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        isReadyToRender: false,\r\n        operationsVisibilty,\r\n        addSchedule:false,\r\n      });\r\n      this.getProductReconciliationList();\r\n\r\n    } catch (error) {\r\n      console.log(\"ProductReconciliationReportComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n\r\n\r\n  setSelectedSchedule = (selscheduleInfo) => {\r\n    try {\r\n\r\n      var { operationsVisibilty } = { ...this.state };\r\n\r\n      operationsVisibilty.delete = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.remove,\r\n        fnProductReconciliationReports\r\n      );\r\n      this.setState({\r\n        operationsVisibilty, selectedScheduleInfo: selscheduleInfo, addSchedule: false, refreshScheduleUI:false,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"ProductReconciliationReportComposite:Error occured on setSelectedSchedule\", error);\r\n    }\r\n  };\r\n\r\n\r\n  unSetSelectedSchedule = () => {\r\n    try {\r\n\r\n      var { operationsVisibilty } = { ...this.state };\r\n\r\n      operationsVisibilty.delete =  false;\r\n      this.setState({\r\n        operationsVisibilty, selectedScheduleInfo: {}, addSchedule: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"ProductReconciliationReportComposite:Error occured on unSetSelectedSchedule\", error);\r\n    }\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n\r\n      this.setState({\r\n\r\n        selectedRow: item.rowData,\r\n        selectedItems: [item.rowData],\r\n\r\n      });\r\n      if (item.field !== undefined && item.field === 'ReconciliationReportDetail_btnViewReconcile') {\r\n        this.handleViewReport();\r\n      }\r\n      else {\r\n        this.setState({\r\n          isDetails: true,\r\n          showSchedule: false,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"ProductReconciliationReportComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  handleReportSchedule = () => {\r\n    try {\r\n\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnProductReconciliationReports\r\n      );\r\n      this.setState({\r\n        isDetails: false,\r\n        showSchedule: true,\r\n        operationsVisibilty\r\n      });\r\n    } catch (error) {\r\n      console.log(\"ProductReconciliationReportComposite:Error occured on schedule List click\", error);\r\n    }\r\n  };\r\n\r\n  handleSelection = (items) => {\r\n    try {\r\n      this.setState({ selectedItems: items });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ProductReconciliationReportComposite:Error occured on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getLookUpData() {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=ReportConfig\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var { reonciliationReportNames } = { ...this.state };\r\n          reonciliationReportNames.tank = result.EntityResult.TankFolio;\r\n          reonciliationReportNames.meter = result.EntityResult.MeterReconciliation;\r\n          reonciliationReportNames.compareFolio = result.EntityResult.TankFolioCompare;\r\n\r\n          this.setState({ reonciliationReportNames });\r\n        } else {\r\n          console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"ProductReconciliationReportComposite: Error occurred on getLookUpData\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  handleModalBack = () => {\r\n    this.setState({ showReport: false, reportType: \"\" });\r\n  };\r\n\r\n  renderModal() {\r\n    let reportType = this.state.reportType;\r\n    var { reonciliationReportNames } = { ...this.state };\r\n\r\n    if(reportType===\"\")\r\n      return;\r\n\r\n    let path = null;\r\n    let reportName = '';\r\n    if (reportType === \"entity\") {\r\n      if (this.state.selectedRow.Reconcillation_Type === \"Meter\")\r\n        reportName = reonciliationReportNames.meter\r\n      else\r\n        reportName = reonciliationReportNames.tank\r\n    }\r\n    else {\r\n      reportName = reonciliationReportNames.compareFolio\r\n    }\r\n    if (this.props.userDetails.EntityResult.IsArchived) {\r\n      path = \"TM/\" + Constants.TMReportArchive + \"/\" + reportName;\r\n    } else {\r\n      path = \"TM/\" + Constants.TMReports + \"/\" + reportName;\r\n    }\r\n    let paramValues = {};\r\n\r\n    if (reportType === \"entity\") {\r\n      paramValues = {\r\n        Culture: this.props.userDetails.EntityResult.UICulture,\r\n        ReconciliationCode:\r\n          this.state.selectedItems.length === 1\r\n            ? this.state.selectedItems[0].Common_Code\r\n            : this.state.selectedRow.Common_Code,\r\n        readonly: 1\r\n      };\r\n    }\r\n    else {\r\n      let minStartDate= this.state.selectedItems[0].ReconciliationReportDetail_StartDate;\r\n      this.state.selectedItems.forEach(function (entry) {\r\n        if (entry.ReconciliationReportDetail_StartDate < minStartDate) {\r\n          minStartDate = entry.ReconciliationReportDetail_StartDate;\r\n      }\r\n    });\r\n\r\n    let maxEndDate= this.state.selectedItems[0].ReconciliationReportDetail_EndDate;\r\n    this.state.selectedItems.forEach(function (entry) {\r\n      if (entry.ReconciliationReportDetail_EndDate > maxEndDate) {\r\n        maxEndDate = entry.ReconciliationReportDetail_EndDate;\r\n    }\r\n  });\r\n  \r\n      paramValues = {\r\n        Culture: this.props.userDetails.EntityResult.UICulture,\r\n        StartDate:dayjs(minStartDate).format(\"DD-MMM-YYYY HH:mm:ss\").toString(),\r\n        EndDate:dayjs(maxEndDate).format(\"DD-MMM-YYYY HH:mm:ss\").toString(),\r\n          readonly: 1\r\n    };\r\n    }\r\n    return (\r\n      <ErrorBoundary>\r\n        <ReportDetails\r\n          showReport={this.state.showReport}\r\n          handleBack={this.handleModalBack}\r\n          handleModalClose={this.handleModalBack}\r\n          proxyServerHost={RestAPIs.WebAPIURL}\r\n          reportServiceHost={this.reportServiceURI}\r\n          filePath={path}\r\n          parameters={paramValues}\r\n        />\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n  handleViewReport = () => {\r\n    try {\r\n      if (this.reportServiceURI === undefined) {\r\n        axios(\r\n          RestAPIs.GetReportServiceURI,\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.reportServiceURI = response.data.EntityResult;\r\n            this.setState({ showReport: true, reportType: 'entity' });\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ showReport: true, reportType: 'entity' });\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(\r\n        \"ProductReconciliationReportComposite:Error occured on handleView Report\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleFolioCompare = () => {\r\n    try {\r\n      if (this.reportServiceURI === undefined) {\r\n        axios(\r\n          RestAPIs.GetReportServiceURI,\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.reportServiceURI = response.data.EntityResult;\r\n            this.setState({ showReport: true, reportType: 'folioCompare' });\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ showReport: true, reportType: 'folioCompare' });\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(\r\n        \"ProductReconciliationReportComposite:Error occured on handleView Report\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      if (notification.messageType === \"success\") {\r\n\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            Common_Code: data.Code,\r\n            Common_Shareholder: data.Shareholdercode,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"FinishedProductComposite:Error occured on savedEvent\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  deleteEvent = (notification) => {\r\n    try {\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n\r\n    } catch (error) {\r\n      console.log(\"SiteTreeView:Error occured on deleteEvent\", error);\r\n    }\r\n  };\r\n\r\n  handleDelete = () => {\r\n    this.handleAuthenticationClose();\r\n    try {\r\n\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n\r\n      this.setState({\r\n        operationsVisibilty,\r\n      });\r\n      let selectedScheduleInfo = this.state.selectedScheduleInfo;\r\n      if (selectedScheduleInfo.IsRecurrent === false) {\r\n        let modReconRepInfo = this.prepareReconciliationReportDetails(selectedScheduleInfo);\r\n        modReconRepInfo.Status = Constants.ProductReconciliationReportStatus.Cancelled;\r\n        this.disableOneTimeReconciliationSchedule(modReconRepInfo);\r\n      }\r\n      else {\r\n        selectedScheduleInfo.Active = true;\r\n        this.DisableRecurrenceSchedule(selectedScheduleInfo);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(\"Product Reconciliation composite:Error occured on handleDelete\", error);\r\n    }\r\n  };\r\n\r\n  DisableRecurrenceSchedule(modReportSchedule) {\r\n\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.reconciliationCode,\r\n        value: modReportSchedule.ScheduleName,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      keyDataCode: KeyCodes.reconciliationCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modReportSchedule,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ReconciliationSchedule_DisabledSuccess\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ReconciliationReportDetail_RcCode\"],\r\n          keyValues: [modReportSchedule.ScheduleName],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n\r\n    axios(\r\n      RestAPIs.DisableRecurrenceSchedule,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    ).then((response) => {\r\n      let result = response.data;\r\n      notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n      notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n      if (result.IsSuccess === true) {\r\n        this.setState(\r\n          {\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnProductReconciliationReports\r\n            ),\r\n            refreshScheduleUI: true,\r\n          },\r\n\r\n        );\r\n      } else {\r\n        notification.messageResultDetails[0].errorMessage =\r\n          result.ErrorList[0];\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnProductReconciliationReports\r\n          ),\r\n        });\r\n        console.log(\"Error in DisableRecurrenceSchedule:\", result.ErrorList);\r\n      }\r\n      this.deleteEvent(notification);\r\n    })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnProductReconciliationReports\r\n          ),\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.deleteEvent(notification);\r\n      });\r\n  }\r\n\r\n  prepareReconciliationReportDetails = (schedInfo) => {\r\n    let modReconRepInfo = lodash.cloneDeep(emptyReconciliationInfo);\r\n    try {\r\n\r\n      modReconRepInfo.ReconciliationCode = schedInfo.ScheduleName;\r\n      modReconRepInfo.EntityTypeCode = schedInfo.EntityTypeCode;\r\n      modReconRepInfo.StartDate = schedInfo.StartDateTime;\r\n      modReconRepInfo.EndDate = schedInfo.EndDateTime;\r\n      modReconRepInfo.LastUpdatedTime = new Date();\r\n      modReconRepInfo.LastUpdatedBy = this.props.userDetails.EntityResult.Firstname + \" \" + this.props.userDetails.EntityResult.LastName;\r\n\r\n    } catch (error) {\r\n      console.log(\"ProductReconciliationReportComposite:Error occured on prepareReconciliationReportDetails\", error);\r\n    }\r\n    return modReconRepInfo;\r\n  };\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnProductReconciliationReports\r\n      );\r\n      this.setState({\r\n        operationsVisibilty,\r\n        addSchedule: true,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Product Reconciliation composite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n\r\n\r\n  disableOneTimeReconciliationSchedule(modReconciliationInfo) {\r\n\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.reconciliationCode,\r\n        value: modReconciliationInfo.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      keyDataCode: KeyCodes.reconciliationCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modReconciliationInfo,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ReconciliationSchedule_DisabledSuccess\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ReconciliationReportDetail_RcCode\"],\r\n          keyValues: [modReconciliationInfo.ReconciliationCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n\r\n    axios(\r\n      RestAPIs.UpdateReconciliationReport,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    ).then((response) => {\r\n      let result = response.data;\r\n      notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n      notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n      if (result.IsSuccess === true) {\r\n        this.setState(\r\n          {\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnProductReconciliationReports\r\n            ),\r\n            refreshScheduleUI: true,\r\n          },\r\n\r\n        );\r\n      } else {\r\n        notification.messageResultDetails[0].errorMessage =\r\n          result.ErrorList[0];\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnProductReconciliationReports\r\n          ),\r\n        });\r\n        console.log(\"Error in update ReconciliationReport:\", result.ErrorList);\r\n      }\r\n      this.deleteEvent(notification);\r\n    })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnProductReconciliationReports\r\n          ),\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.deleteEvent(notification);\r\n      });\r\n  }\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showAuthenticationLayout });\r\n      if (showAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Product Reconciliation Report : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            breadcrumbItem={this.props.activeItem}\r\n            shrVisible={false}\r\n            onDelete={this.authenticateDelete}\r\n            onAdd={this.handleAdd}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isDetails === true || this.state.showSchedule === true ? (\r\n          <ErrorBoundary>\r\n            {this.state.isDetails === true ? (\r\n              <ProductReconciliationReportDetailsComposite\r\n                key=\"ProductReconciliationReportDetails\"\r\n                selectedRow={this.state.selectedRow}\r\n                onBack={this.handleBack}\r\n                onSaved={this.savedEvent}\r\n                shareholerCode= {this.state.shareholderCode}\r\n              ></ProductReconciliationReportDetailsComposite>\r\n            ) : (\r\n              <ErrorBoundary>\r\n                <ProductReconciliationScheduleDetailsComposite\r\n                  key=\"ProductReconciliationScheduleDetails\"\r\n                  onBack={this.handleBack}\r\n                  onSaved={this.savedEvent}\r\n                  onScheduleSelect={this.setSelectedSchedule}\r\n                  onUnScheduleSelect={this.unSetSelectedSchedule}\r\n                  refreshScheduleUIRequired={this.state.refreshScheduleUI}\r\n                  addSchedule={this.state.addSchedule}\r\n                ></ProductReconciliationScheduleDetailsComposite>\r\n              </ErrorBoundary>\r\n            )}\r\n          </ErrorBoundary>\r\n        ) : this.state.isReadyToRender && !this.state.showReport ? (\r\n          <ErrorBoundary>\r\n\r\n            <ProductReconciliationSummaryComposite\r\n              tableData={this.state.data.Table}\r\n              columnDetails={this.state.data.Column}\r\n              pageSize={\r\n                this.props.userDetails.EntityResult.PageAttibutes\r\n                  .WebPortalListPageSize\r\n              }\r\n              selectedItems={this.state.selectedItems}\r\n              onRowClick={this.handleRowClick}\r\n              onSelectionChange={this.handleSelection}\r\n            ></ProductReconciliationSummaryComposite>\r\n\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div className=\"row userActionPosition\">\r\n                  <div className=\"col-12 col-md-3 col-lg-4\">\r\n                    <Button\r\n                      type=\"primary\"\r\n                      disabled={this.state.showSchedule || this.state.selectedItems.length === 0 || this.state.selectedItems.length === 1}\r\n                      content={t(\"ProductReconciliation_CompareFolio\")}\r\n                      onClick={this.handleFolioCompare}\r\n                    ></Button>\r\n                  </div>\r\n                  <div className=\"col-12 col-md-9 col-lg-8\">\r\n                    <div style={{ float: \"right\" }}>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        disabled={this.state.showSchedule}\r\n                        content={t(\"ReportSchedules_ReportSchedule\")}\r\n                        onClick={this.handleReportSchedule}\r\n                      ></Button>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>)}\r\n            </TranslationConsumer>\r\n          </ErrorBoundary>\r\n        ) : (\r\n          <LoadingPage message=\"\"></LoadingPage>\r\n        )}\r\n\r\n        {\r\n          \r\n\r\n        Object.keys(this.state.selectedRow).length > 0 &&\r\n          this.state.selectedItems.length === 1 && this.state.reportType === 'entity'\r\n          ? this.renderModal()\r\n          : \"\"}\r\n\r\n        { this.state.selectedItems.length > 1 && this.state.reportType === 'folioCompare'\r\n          ? this.renderModal()\r\n          : \"\"}\r\n\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.remove}\r\n            functionGroup={fnProductReconciliationReports}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleDelete}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProductReconciliationReportComposite);\r\n\r\nProductReconciliationReportComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { DatePicker, Button } from \"@scuf/common\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function TMTransactionFilters({\r\n  handleDateTextChange,\r\n  handleRangeSelect,\r\n  handleLoadOrders,\r\n  dateError,\r\n  dateRange,\r\n  filterText,\r\n}) {\r\n  //console.log(dateError);\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"dateRangeContainer\">\r\n          <div className=\"dateRangeMargin\">\r\n            <DatePicker\r\n              type=\"daterange\"\r\n              closeOnSelection={true}\r\n              error={t(dateError)}\r\n              displayFormat={getCurrentDateFormat()}\r\n              //value={dateRange}\r\n              rangeValue={dateRange}\r\n              onTextChange={handleDateTextChange}\r\n              onRangeSelect={handleRangeSelect}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"dateSearch\">\r\n            <Button content={t(filterText)} onClick={handleLoadOrders} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as WjCore from \"@grapecity/wijmo\";\r\nimport { ReportViewer } from \"@grapecity/wijmo.react.viewer\";\r\nimport * as wjViewer from \"@grapecity/wijmo.viewer\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { connect } from \"react-redux\";\r\n\r\nTMReportViewer.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\n\r\nTMReportViewer.defaultProps = {\r\n  parameters: {},\r\n};\r\n\r\nWjCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nfunction TMReportViewer({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  parameters,\r\n  filePath,\r\n  ...props\r\n}) {\r\n  //   const [proxyHost, setProxyHost] = useState(\r\n  //     \"http://localhost:8888/TMWebProxyAPI/\"\r\n  //   );\r\n  //   const [reportServiceHost, setReportServiceHost] = useState(\r\n  //     \"http://localhost:5632/\"\r\n  //   );\r\n  //   const [reportUrl, setReportUrl] = useState(proxyHost + \"api/report\");\r\n  //   const [filePath, setFilePath] = useState(\r\n  //     \"TM/\" + \"TMReports/\" + \"CarrierCompanyReport\"\r\n  //   );\r\n  const reportUrl = proxyServerHost + \"api/report\";\r\n  //const filePath = \"TM/\" + \"TMReports/\" + reportName;\r\n\r\n  const beforeXhrRequestSend = (s, event) => {\r\n    // use this event for Authorization purpose\r\n    const prevBeforeSend = event.settings.beforeSend;\r\n    event.settings.beforeSend = function (xhr) {\r\n      prevBeforeSend && prevBeforeSend(xhr);\r\n      //here you may add the params for XMLHttpRequest as required\r\n      if (!props.userDetails.EntityResult.IsWebPortalUser)\r\n        xhr.withCredentials = true;\r\n      if (xhr.URL_DEBUG.indexOf(\"parameters\") > -1) {\r\n        xhr.onreadystatechange = function () {\r\n          if (this.readyState === 4 && this.status === 200) {\r\n            var host = s.hostElement;\r\n            setTimeout(() => {\r\n              var splitter = host.querySelector(\".wj-viewer-splitter\");\r\n              var param = host\r\n                .querySelector(\".wj-viewer-tabsleft\")\r\n                .querySelectorAll(\"li\")[2];\r\n              if (!param.disabled) {\r\n                param.className = \"hidden\";\r\n                splitter.click();\r\n              }\r\n            }, 1000);\r\n          }\r\n        };\r\n      }\r\n    };\r\n  };\r\n  let header = {\r\n    Authorization: \"Bearer \" + props.tokenDetails.tokenInfo,\r\n  };\r\n\r\n  // let header = {\r\n  //   Authorization: \"Bearer \" + \"fiewjfjewifi\",\r\n  // };\r\n\r\n  const initViewer = (s, event) => {\r\n    wjViewer._ReportService.prototype.load = function (data) {\r\n      var _this = this;\r\n      var promise = new wjViewer._Promise();\r\n      if (!this._checkReportController(promise)) {\r\n        return promise;\r\n      }\r\n      this.httpRequest(this._getReportInstancesUrl(), {\r\n        method: \"POST\",\r\n        data: data,\r\n      }).then(\r\n        function (xhr) {\r\n          var v = wjViewer._parseReportExecutionInfo(xhr.responseText);\r\n          _this._instanceId = v.id;\r\n          _this._status = wjViewer._ExecutionStatus.loaded;\r\n          _this._outlinesLocation = v.outlinesLocation;\r\n          _this._statusLocation = v.statusLocation.replace(\r\n            reportServiceHost,\r\n            proxyServerHost\r\n          );\r\n          _this._pageSettingsLocation = v.pageSettingsLocation;\r\n          _this._featuresLocation = v.featuresLocation;\r\n          _this._parametersLocation = v.parametersLocation;\r\n          promise.resolve(v);\r\n        },\r\n        function (xhr) {\r\n          promise.reject(_this._getError(xhr));\r\n        }\r\n      );\r\n      return promise;\r\n    };\r\n  };\r\n\r\n  //console.log(props.userDetails.EntityResult.IsWebPortalUser, header);\r\n  return (\r\n    <div>\r\n      {props.userDetails.EntityResult.IsWebPortalUser ? (\r\n        <div>\r\n          <ReportViewer\r\n            requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <ReportViewer\r\n            //requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TMReportViewer);\r\n","import React from \"react\";\r\nimport { Modal, Button, Header } from \"@scuf/common\";\r\nimport TMReportViewer from \"../Common/TMReportViewer\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nReportDetails.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  filePath: PropTypes.string.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  showReport: PropTypes.bool.isRequired,\r\n  handleModalClose: PropTypes.func.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\nReportDetails.defaultProps = {\r\n  parameters: {},\r\n};\r\nexport default function ReportDetails({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  filePath,\r\n  handleBack,\r\n  showReport,\r\n  handleModalClose,\r\n  parameters,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <Modal\r\n      style={{ padding: \"0px\" }}\r\n      size=\"fullscreen\"\r\n      open={showReport}\r\n      // onClose={handleModalClose}\r\n    >\r\n      <div>\r\n        <Header title={t(\"Header_TerminalManager\")} menu={false} />\r\n        <TMReportViewer\r\n          proxyServerHost={proxyServerHost}\r\n          reportServiceHost={reportServiceHost}\r\n          filePath={filePath}\r\n          parameters={parameters}\r\n        />\r\n        <div style={{ marginTop: \"10px\", marginLeft: \"20px\" }}>\r\n          <Button\r\n            className=\"backButton\"\r\n            onClick={handleBack}\r\n            content={t(\"Report_Back\")}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","ProductReconciliationReportDetails","reconciliationInfo","modReconciliationInfo","listOptions","handleReconciliationStatusChange","handleReopenReconciliation","handleViewReport","handleViewUnAccountedTransactions","handleReset","ReconciliationCode","Code","Date","StartDate","toLocaleDateString","toLocaleTimeString","Name","EndDate","Status","productReconciliationStatusOptions","search","onResultsMessage","Remarks","ReportWarnings","EntityTypeCode","toUpperCase","Constants","Reconciled_Diff","ViewMeterUnAccountedTransactionsDetails","transactionData","handleBack","pageSize","id","DataTable","reorderableColumns","resizableColumns","searchPlaceholder","rows","Column","field","header","editable","editFieldType","renderer","cellData","ViewTankUnAccountedTransactionsDetails","ProductReconciliationReportDetailsComposite","emptyReconciliationInfo","productReconciliationReportValidationDef","isReadyToRender","saveEnabled","showReport","reonciliationReportNames","tank","meter","showTankTransactions","showMeterTransactions","fromDate","toDate","dateError","showAuthenticationLayout","tempReconciliationInfo","updateProductReconciliationReport","handleAuthenticationClose","updateReconciliationReport","handleSave","validateSave","IsWebPortalUser","RefreshWithLatestTransactions","reopenReconciliation","GetUnAccountedTransactionMeterList","shareholerCode","GetUnAccountedTransactionTankList","handleRangeSelect","to","from","handleLoadOrders","keys","forEach","selectedCompRow","handleChange","handleModalBack","reportServiceURI","BackEvent","IsArchived","getReconciliationReport","selectedRow","getLookUpData","getProductReconciliationStatus","Reconciliation_Status","componentWillReceiveProps","nextProps","reconciliationCode","Common_Code","reconStatus","push","filteredStatus","Open","filter","objOption","In_Progress","Reconciled_NoDiff","Approved","Closed","Rejected","keyCode","KeyCodes","obj","keyDataCode","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","FunctionsList","functionGroups","modify","fnProductReconciliationReports","onSaved","setHours","ShareholderCode","startRange","endRange","fillTankDetails","Table","p","TankUnaccountedTransaction_UnAccountedGrossQuantity","toLocaleString","TankUnaccountedTransaction_UnAccountedNetQuantity","TankUnaccountedTransaction_Density","fillMeterDetails","MeterUnaccountedTransaction_UnAccountedGrossQuantity","MeterUnaccountedTransaction_UnAccountedNetQuantity","prodReconReportRow","TankFolio","MeterReconciliation","renderModal","path","reportName","paramValues","Culture","UICulture","readonly","ReportDetails","handleModalClose","proxyServerHost","reportServiceHost","filePath","parameters","popUpContents","LastUpdatedTime","CreatedTime","TMDetailsHeader","entityCode","TMTransactionFilters","dateRange","filterText","PageAttibutes","WebPortalListPageSize","TMDetailsUserActions","onBack","UserName","LoadingPage","ProductReconciliationScheduleDetails","modReportSchedule","modReconciliationSchedules","columnDetails","onRowClick","addNewSchedule","useTranslation","onCellClick","rowData","ActionBar","columnDetail","initialWidth","Width","DataType","displayValues","modSchedInfo","scheduleTitle","IsRecurrent","IsEOD","ScheduleName","getScheduleTitle","InputLabel","Radio","checked","ScheduleType","Checkbox","IsEOS","DatePicker","StartDateTime","disablePast","displayFormat","getCurrentDateFormat","minuteStep","EndDateTime","ProductReconciliationScheduleDetailsComposite","reportSchedule","isDeleteEnabled","productReconciliationScheduleValidationDef","tempReportSchedule","handleRowClick","row","EntityCode","rptSchedule","onScheduleSelect","emptyReconciliationScheduleInfo","getReconciliationSchedules","onUnScheduleSelect","addProductReconciliationSchedule","modReconRepInfo","prepareReconciliationReportDetails","CreateOneTimeReconciliationSchedule","Active","CreateRecurrenceSchedule","schedInfo","LastUpdatedBy","Firstname","LastName","refreshScheduleUIRequired","addSchedule","view","ProductReconciliationSummaryComposite","tableData","selectedItems","onSelectionChange","ViewReportColumn","getInitialWidth","window","screen","width","WidthPx","WidthPercentage","selectionMode","selection","e","sortable","Array","isArray","Pagination","ProductReconciliationReportComposite","isDetails","isDetailsModified","reportType","selectedScheduleInfo","refreshScheduleUI","showSchedule","compareFolio","shareholderCode","getProductReconciliationList","setSelectedSchedule","selscheduleInfo","remove","unSetSelectedSchedule","handleReportSchedule","handleSelection","items","handleFolioCompare","savedEvent","saveType","Common_Shareholder","Shareholdercode","toast","NotifyEvent","notificationMessage","autoClose","deleteEvent","handleDelete","Cancelled","disableOneTimeReconciliationSchedule","DisableRecurrenceSchedule","handleAdd","authenticateDelete","PrimaryShareholder","TankFolioCompare","Reconcillation_Type","minStartDate","ReconciliationReportDetail_StartDate","entry","maxEndDate","ReconciliationReportDetail_EndDate","dayjs","format","activeItem","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","newEntityName","margin","List","handleDateTextChange","closeOnSelection","rangeValue","onTextChange","onRangeSelect","TMReportViewer","reportUrl","beforeXhrRequestSend","s","event","prevBeforeSend","settings","beforeSend","xhr","withCredentials","URL_DEBUG","indexOf","onreadystatechange","readyState","status","host","hostElement","setTimeout","splitter","querySelector","param","querySelectorAll","click","Authorization","initViewer","wjViewer","prototype","load","_this","promise","_checkReportController","httpRequest","_getReportInstancesUrl","method","v","responseText","_instanceId","_status","loaded","_outlinesLocation","outlinesLocation","_statusLocation","statusLocation","replace","_pageSettingsLocation","pageSettingsLocation","_featuresLocation","featuresLocation","_parametersLocation","parametersLocation","resolve","reject","_getError","ReportViewer","requestHeaders","height","serviceUrl","initialized","beforeSendRequest","WjCore","title","menu","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","transportationType","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","shipmentCode","orderCode","receiptCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","bayCode","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","TransactionType","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks","getOptionsWithSelect","ddlOptions","selectOptionText","option","text","unshift","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}