{"version":3,"file":"static/js/9975.f62a6a4d.chunk.js","mappings":"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","sources":["Components/UIBase/Details/TerminalDetails.jsx","Components/Composite/Details/TerminalDetailsComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/functionalUtilities.js"],"sourcesContent":["import React from \"react\";\r\nimport { Accordion, Select, Input } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { DataTable } from '@scuf/datatable';\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { AttributeDetails } from \"../../UIBase/Details/AttributeDetails\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTerminalDetails.propTypes = {\r\n    selectedEnterpriseProcess: PropTypes.array.isRequired,\r\n    modEnterpriseProcess:PropTypes.array.isRequired\r\n}\r\n\r\nTerminalDetails.defaultProps = {\r\n    isEnterpriseNode: false,\r\n     isDCHEnabled: false\r\n}\r\n\r\nexport function TerminalDetails({\r\n    terminal,\r\n    modTerminal,\r\n    validationErrors,\r\n    modDCHAttributes,\r\n    onFieldChange,\r\n    modEnterpriseProcess,\r\n    selectedEnterpriseProcess,\r\n    handleCellDataEdit,\r\n    onAttributeDataChange,\r\n    handleRowSelectionChange,\r\n    attributeValidationErrors,\r\n    isEnterpriseNode,\r\n    modAttributeMetaDataList,\r\n    isDCHEnabled,\r\n    dchAttributeValidationErrors,\r\n    handleDCHCellDataEdit,\r\n    dchAttribute,\r\n    dchAttributeMetaDataList,\r\n}) {\r\n    const handleDCHTextEdit = (cellData) => {\r\n        let val =\r\n        dchAttributeMetaDataList[cellData.rowIndex][cellData.field];\r\n        return (\r\n          <Input\r\n            fluid\r\n            value={val}\r\n            onChange={(value) => handleDCHCellDataEdit(value, cellData)}\r\n            reserveSpace={false}\r\n          />\r\n        );\r\n      };\r\n    \r\n    const handleCustomEditTextBox = (cellData) => {\r\n        return (\r\n            <Input\r\n                fluid\r\n                value={modEnterpriseProcess[cellData.rowIndex][cellData.field]}\r\n                onChange={(value) => handleCellDataEdit(value, cellData)}\r\n                reserveSpace={false}\r\n            />\r\n        );\r\n    };\r\n    const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n        let attributeValidation = [];\r\n        attributeValidation = attributeValidationErrors.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n        })\r\n        return attributeValidation.attributeValidationErrors;\r\n    }\r\n\r\n    return (\r\n        < TranslationConsumer >\r\n            {(t) => (\r\n                <div className=\"detailsContainer\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTerminal.Code}\r\n                                indicator=\"required\"\r\n                                disabled={terminal.Code !== \"\"}\r\n                                onChange={(data) => onFieldChange(\"Code\", data)}\r\n                                label={t(\"Terminal_Code\")}\r\n                                error={t(validationErrors.Code)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTerminal.Name}\r\n                                indicator=\"required\"\r\n                                onChange={(data) => onFieldChange(\"Name\", data)}\r\n                                label={t(\"Terminal_Name\")}\r\n                                error={t(validationErrors.Name)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTerminal.City}\r\n                                indicator=\"required\"\r\n                                label={t(\"TerminalList_City\")}\r\n                                onChange={(data) => onFieldChange(\"City\", data)}\r\n                                error={t(validationErrors.City)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTerminal.State}\r\n                                indicator=\"required\"\r\n                                label={t(\"Terminal_State\")}\r\n                                onChange={(data) => onFieldChange(\"State\", data)}\r\n                                error={t(validationErrors.State)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTerminal.ZipCode}\r\n                                indicator=\"required\"\r\n                                label={t(\"Terminal_ZipCode\")}\r\n                                onChange={(data) => onFieldChange(\"ZipCode\", data)}\r\n                                error={t(validationErrors.ZipCode)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTerminal.Country}\r\n                                indicator=\"required\"\r\n                                label={t(\"Terminal_Country\")}\r\n                                onChange={(data) => onFieldChange(\"Country\", data)}\r\n                                error={t(validationErrors.Country)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTerminal.Longitude}\r\n                                indicator=\"required\"\r\n                                label={t(\"Terminal_Langitude\")}\r\n                                onChange={(data) => onFieldChange(\"Longitude\", data)}\r\n                                error={t(validationErrors.Longitude)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTerminal.Latitude}\r\n                                indicator=\"required\"\r\n                                label={t(\"Terminal_Latitude\")}\r\n                                onChange={(data) => onFieldChange(\"Latitude\", data)}\r\n                                error={t(validationErrors.Latitude)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"Terminal_TimeZone\")}\r\n                                value={modTerminal.TimeZone}\r\n                                options={Constants.utcTimeZones}\r\n                                onChange={(data) => onFieldChange(\"TimeZone\", data)}\r\n                                indicator=\"required\"\r\n                                reserveSpace={false}\r\n                                search={false}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={\r\n                                    modTerminal.ContactPerson === null\r\n                                        ? \"\"\r\n                                        : modTerminal.ContactPerson\r\n                                }\r\n                                onChange={(data) => onFieldChange(\"ContactPerson\", data)}\r\n                                label={t(\"Cust_ContactPerson\")}\r\n                                error={t(validationErrors.ContactPerson)}\r\n                                reserveSpace={false}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTerminal.Address === null ? \"\" : modTerminal.Address}\r\n                                onChange={(data) => onFieldChange(\"Address\", data)}\r\n                                label={t(\"Cust_Address\")}\r\n                                error={t(validationErrors.Address)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTerminal.Phone === null ? \"\" : modTerminal.Phone}\r\n                                label={t(\"Cust_PhNum\")}\r\n                                onChange={(data) => onFieldChange(\"Phone\", data)}\r\n                                error={t(validationErrors.Phone)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTerminal.Email === null ? \"\" : modTerminal.Email}\r\n                                label={t(\"Cust_Email\")}\r\n                                onChange={(data) => onFieldChange(\"Email\", data)}\r\n                                error={t(validationErrors.Email)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        {/* <div className=\"col-12 col-md-6 col-lg-4 \">\r\n                            <Checkbox className=\"deviceCheckBox\"\r\n\r\n                                label={t(\"TerminalList_IsRedundant\")}\r\n                                defaultChecked={true}\r\n                                checked={modTerminal.IsRedundant}\r\n                                disabled={false}\r\n                                onChange={(data) => onFieldChange(\"IsRedundant\", data)}\r\n                            >\r\n                            </Checkbox>\r\n\r\n                        </div> */}\r\n                    </div>\r\n                    {\r\n                        modAttributeMetaDataList.length > 0 ?\r\n                        modAttributeMetaDataList.map((attire) =>\r\n                                <ErrorBoundary>\r\n                                    <Accordion>\r\n                                        <Accordion.Content\r\n                                            className=\"attributeAccordian\"\r\n                                            title={t(\"Attributes_Header\")}\r\n                                        >\r\n                                            <AttributeDetails\r\n                                                selectedAttributeList={attire.attributeMetaDataList}\r\n                                                handleCellDataEdit={onAttributeDataChange}\r\n                                                attributeValidationErrors={handleValidationErrorFilter(attributeValidationErrors, attire.TerminalCode)}\r\n                                            ></AttributeDetails>\r\n                                        </Accordion.Content>\r\n                                    </Accordion>\r\n                                </ErrorBoundary>\r\n                            ) : null\r\n\r\n                    }\r\n\r\n                    {isEnterpriseNode ? (\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 detailsTable\">\r\n                                <DataTable\r\n                                    data={modEnterpriseProcess}\r\n                                    selectionMode=\"multiple\"\r\n                                    selection={selectedEnterpriseProcess}\r\n                                    onSelectionChange={handleRowSelectionChange}\r\n                                    scrollable={true}\r\n                                    scrollHeight=\"320px\"\r\n                                >\r\n                                    <DataTable.Column\r\n                                        className=\"compColHeight\"\r\n                                        key=\"ProcessName\"\r\n                                        field=\"ProcessName\"\r\n                                        header={t(\"TerminalInfo_EnterpriseProcessName\")}\r\n                                        //editable={true}\r\n                                        sortable={true}\r\n                                        editFieldType=\"text\"\r\n                                        customEditRenderer={handleCustomEditTextBox}\r\n                                    ></DataTable.Column>\r\n                                </DataTable>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\"\")\r\n                    }\r\n                    {\r\n                        isDCHEnabled ? (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 detailsTable\">\r\n                                <DataTable\r\n                                    data={dchAttributeMetaDataList}\r\n                                    scrollable={true}\r\n                                    scrollHeight=\"320px\"\r\n                                    >\r\n                                        <DataTable.Column\r\n                                        className=\"compColHeight\"\r\n                                        key=\"ExternalSystem\"\r\n                                        field=\"ExternalSystem\"\r\n                                        header={t(\"ShareholderDetails_ExternalSystem\")}\r\n                                    ></DataTable.Column>\r\n                                        {dchAttribute.map(function (dchAttribute) {\r\n                                            return (\r\n                                                <DataTable.Column\r\n                                                className=\"compColHeight\"\r\n                                                key={dchAttribute.EntityName}\r\n                                                field={dchAttribute.EntityName}\r\n                                                    header={t(dchAttribute.EntityName)}\r\n                                                    editable={true}\r\n                                                    editFieldType=\"text\"\r\n                                                    customEditRenderer={handleDCHTextEdit}\r\n                                                />\r\n                                            )\r\n                                        })}\r\n                                </DataTable>\r\n                                </div>\r\n                            </div>\r\n                        ):(\"\")\r\n}\r\n\r\n                </div>\r\n            )\r\n            }\r\n        </TranslationConsumer >\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { TerminalDetails } from \"../../UIBase/Details/TerminalDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { emptyTerminal } from \"../../../JS/DefaultEntities\";\r\nimport { terminalValidationDef } from \"../../../JS/ValidationDef\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport lodash from \"lodash\";\r\nimport { functionGroups, fnTerminal } from \"../../../JS/FunctionGroups\";\r\nimport { terminalAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass TerminalDetailsComposite extends Component {\r\n  state = {\r\n    terminal: lodash.cloneDeep(emptyTerminal),\r\n    modTerminal: {},\r\n    modEnterpriseProcess: [],\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      terminalValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    selectedEnterpriseProcess: [],\r\n    attributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    isDCHEnabled: false,\r\n    modDCHAttributes: [],\r\n    dchAttribute: [],\r\n    dchAttributeValidationErrors: {},\r\n    externalSystemList: [],\r\n    dchAttributeMetaDataList: [],\r\n    showAuthenticationLayout: false,\r\n    tempTerminal: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    let terminal = this.props.selectedRow;\r\n    try {\r\n      //this.getEnterpriseProcess();\r\n\r\n      terminal.Common_Code === undefined\r\n        ? this.getTerminal(this.props.selectedRow)\r\n        : this.getAttributes(this.props);\r\n    } catch (error) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.terminal.Code !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getEnterpriseProcess();\r\n        this.getTerminal(nextProps.selectedRow);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  GetDCHAttributeInfoList() {\r\n    try {\r\n      let modTerminal = lodash.cloneDeep(this.state.modTerminal);\r\n      let dcAttributeConfig = {\r\n        Shareholdercode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n        EntityCode: modTerminal.Code,\r\n        EntityType: Constants.ExtendEntity.TERMINAL,\r\n      };\r\n      var obj = {\r\n        ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n        keyDataCode: KeyCodes.shareholderCode,\r\n        Entity: dcAttributeConfig,\r\n      };\r\n      axios(\r\n        RestAPIs.GetDCHAttributeInfoList,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ dchAttribute: result.EntityResult }, () => {\r\n              this.getExternalSystemInfo();\r\n            });\r\n          } else {\r\n            console.log(\"Error in GetDCHAttributeInfoList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting DCHAttributeInfoList:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while getting DCHAttributeInfoList:\", error);\r\n    }\r\n  }\r\n\r\n  getExternalSystemInfo() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetExternalSystemInfo,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess) {\r\n          let externalSystemList = [];\r\n          Object.keys(result.EntityResult).forEach(function (key) {\r\n            if (result.EntityResult[key] !== \"NONE\") {\r\n              externalSystemList.push(result.EntityResult[key]);\r\n            }\r\n          });\r\n          this.setState({ externalSystemList: externalSystemList }, () => {\r\n            this.buildDCHAttributes();\r\n          });\r\n        } else {\r\n          this.setState({ externalSystemList: [] });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error occured on get ExternalSystemInfo List\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  buildDCHAttributes() {\r\n    try {\r\n      let dchAttributeMetaDataList = [];\r\n      let externalSystemList = lodash.cloneDeep(this.state.externalSystemList);\r\n      let modTerminal = lodash.cloneDeep(this.state.modTerminal);\r\n      if (\r\n        modTerminal.DCHAttributes != null &&\r\n        modTerminal.DCHAttributes.length > 0\r\n      ) {\r\n        externalSystemList.forEach(function (externalSystem) {\r\n          var att1 = {};\r\n          att1.ExternalSystem = externalSystem;\r\n          let existitem = modTerminal.DCHAttributes.filter((data1) => {\r\n            return data1.ExternalSystemName === externalSystem;\r\n          });\r\n          if (existitem !== null && existitem.length > 0) {\r\n            existitem.forEach(function (attribute) {\r\n              att1[attribute.EntityName] = attribute.Value;\r\n            });\r\n          }\r\n          dchAttributeMetaDataList.push(att1);\r\n        });\r\n      } else {\r\n        externalSystemList.forEach(function (externalSystem) {\r\n          dchAttributeMetaDataList.push({ ExternalSystem: externalSystem });\r\n        });\r\n      }\r\n      this.setState({ dchAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error occured on buildDCHAttributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(props) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [terminalAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.terminal\r\n                ),\r\n            },\r\n            () => this.getTerminal(this.props.selectedRow)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals !== undefined && selectedTerminals !== null) {\r\n        let attributesTerminalsList = [];\r\n        var attributeMetaDataList = [];\r\n        var modAttributeMetaDataList = [];\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        modAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.modAttributeMetaDataList\r\n        );\r\n        const attributeValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeValidationErrors\r\n        );\r\n        var modTerminal = lodash.cloneDeep(this.state.modTerminal);\r\n\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          });\r\n\r\n          if (existitem === undefined) {\r\n            attributeMetaDataList.terminal.forEach(function (\r\n              attributeMetaData\r\n            ) {\r\n              if (attributeMetaData.TerminalCode === terminal) {\r\n                var Attributevalue = modTerminal.Attributes.find(\r\n                  (terminalAttribute) => {\r\n                    return terminalAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n                attributesTerminalsList.push(attributeMetaData);\r\n              }\r\n            });\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n        modAttributeMetaDataList = [];\r\n        modAttributeMetaDataList = attributesTerminalsList;\r\n        modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n          modAttributeMetaDataList\r\n        );\r\n        attributeValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n              (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n\r\n        this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getEnterpriseProcess() {\r\n    try {\r\n      let modTerminal = lodash.cloneDeep(this.state.modTerminal);\r\n      axios(\r\n        RestAPIs.GetTerminalEnterpriseProcesses,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            modEnterpriseProcess: lodash.cloneDeep(result.EntityResult),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            modEnterpriseProcess: [],\r\n          });\r\n        }\r\n\r\n        if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n          if (modTerminal.Code === undefined || modTerminal.Code === \"\")\r\n            this.setState({\r\n              selectedEnterpriseProcess: lodash.cloneDeep(\r\n                this.state.modEnterpriseProcess\r\n              ),\r\n            });\r\n\r\n          if (modTerminal.EnterpriseProcesses.length > 0) {\r\n            let selectedProcessData = [];\r\n            modTerminal.EnterpriseProcesses.forEach((process) => {\r\n              var processObj = this.state.modEnterpriseProcess.find(\r\n                (allProcess) => {\r\n                  return allProcess.ProcessName === process.ProcessName;\r\n                }\r\n              );\r\n              selectedProcessData.push(processObj);\r\n            });\r\n            this.setState({ selectedEnterpriseProcess: selectedProcessData });\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error while getting getEnterpriseProcess\"\r\n      );\r\n    }\r\n  }\r\n  getTerminal(terminalRow) {\r\n    if (terminalRow.Common_Code === undefined) {\r\n      this.setState(\r\n        {\r\n          terminal: lodash.cloneDeep(emptyTerminal),\r\n          modTerminal: lodash.cloneDeep(emptyTerminal),\r\n          // modEnterpriseProcess: [],\r\n          selectedEnterpriseProcess: [],\r\n          isReadyToRender: true,\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnTerminal\r\n          ),\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsDCHEnabled) {\r\n            this.GetDCHAttributeInfoList();\r\n          }\r\n          this.getEnterpriseProcess();\r\n        }\r\n      );\r\n      return;\r\n    }\r\n\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.terminalCode,\r\n        value: terminalRow.Common_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.terminalCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetTerminal,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              terminal: lodash.cloneDeep(result.EntityResult),\r\n              modTerminal: lodash.cloneDeep(result.EntityResult),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnTerminal\r\n              ),\r\n            },\r\n            () => {\r\n              this.getEnterpriseProcess();\r\n              if (this.props.userDetails.EntityResult.IsDCHEnabled)\r\n                this.GetDCHAttributeInfoList();\r\n              this.terminalSelectionChange([result.EntityResult.Code]);\r\n            }\r\n          );\r\n        } else {\r\n          this.setState(\r\n            {\r\n              terminal: lodash.cloneDeep(emptyTerminal),\r\n              modTerminal: lodash.cloneDeep(emptyTerminal),\r\n              isReadyToRender: true,\r\n            },\r\n            () => {\r\n              if (this.props.userDetails.EntityResult.IsDCHEnabled)\r\n                this.GetDCHAttributeInfoList();\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Terminal:\", error, terminalRow);\r\n      });\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modTerminal = lodash.cloneDeep(this.state.modTerminal);\r\n      modTerminal[propertyName] = data;\r\n      this.setState({ modTerminal });\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (terminalValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          terminalValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const { validationErrors } = { ...this.state };\r\n      const terminal = lodash.cloneDeep(this.state.terminal);\r\n      const dchAttribute = lodash.cloneDeep(this.state.dchAttribute);\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState(\r\n        {\r\n          modTerminal: { ...terminal },\r\n          selectedCompRow: [],\r\n          validationErrors,\r\n          dchAttributeValidationErrors: {},\r\n          modDCHAttributes: { ...dchAttribute },\r\n        },\r\n        () => {\r\n          this.terminalSelectionChange(this.state.modTerminal.Code);\r\n          this.handleResetAttributeValidationError();\r\n          if (this.props.userDetails.EntityResult.IsDCHEnabled)\r\n            this.buildDCHAttributes();\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDCHCellDataEdit = (newVal, cellData) => {\r\n    try {\r\n      let dchAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.dchAttributeMetaDataList\r\n      );\r\n      dchAttributeMetaDataList[cellData.rowIndex][cellData.field] = newVal;\r\n      this.setState({ dchAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error occured on handleDCHCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.driver\r\n          ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  saveTerminal = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempTerminal = lodash.cloneDeep(this.state.tempTerminal);\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      tempTerminal = this.fillAttributeDetails(tempTerminal, attributeList);\r\n      this.state.terminal.Code === \"\"\r\n        ? this.createTerminal(tempTerminal)\r\n        : this.updateTerminal(tempTerminal);\r\n    } catch (error) {\r\n      console.log(\"TerminalDetailsComposite : Error in saveShareholder\")\r\n    }\r\n  }\r\n  handleSave = () => {\r\n    try {\r\n      // this.setState({ saveEnabled: false });\r\n      let modTerminal = this.fillDetails();\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      if (this.validateSave(modTerminal, attributeList)) {\r\n        let tempTerminal = lodash.cloneDeep(modTerminal);\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        this.setState({ showAuthenticationLayout, tempTerminal }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveTerminal();\r\n          }\r\n        });\r\n      } else this.setState({ saveEnabled: true });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleRowSelectionChange = (enterpriseRow) => {\r\n    try {\r\n      const modTerminal = lodash.cloneDeep(this.state.modTerminal);\r\n      if (modTerminal.Code !== \"\") {\r\n        this.setState({ selectedEnterpriseProcess: [] });\r\n        this.setState({ selectedEnterpriseProcess: enterpriseRow });\r\n      }\r\n    } catch (err) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error occured on handleRowSelectionChange\"\r\n      );\r\n    }\r\n  };\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modTerminal = lodash.cloneDeep(this.state.modTerminal);\r\n      let selectedEnterpriseProcess = lodash.cloneDeep(\r\n        this.state.selectedEnterpriseProcess\r\n      );\r\n      modTerminal.EnterpriseProcesses = selectedEnterpriseProcess;\r\n\r\n      return modTerminal;\r\n    } catch (err) {\r\n      console.log(\"TerminalDetailsComposite:Error occured on filldetails\", err);\r\n    }\r\n  }\r\n\r\n  fillAttributeDetails(modTerminal, attributeList) {\r\n    try {\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modTerminal.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n\r\n      if (this.props.userDetails.EntityResult.IsDCHEnabled) {\r\n        modTerminal.DCHAttributes = [];\r\n        let dchAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.dchAttributeMetaDataList\r\n        );\r\n        let externalSystemList = lodash.cloneDeep(\r\n          this.state.externalSystemList\r\n        );\r\n        let dchAttribute = lodash.cloneDeep(this.state.dchAttribute);\r\n\r\n        externalSystemList.forEach(function (externalSystem) {\r\n          var existitem = dchAttributeMetaDataList.find((metaData) => {\r\n            return metaData.ExternalSystem === externalSystem;\r\n          });\r\n          dchAttribute.forEach(function (attribute) {\r\n            Object.keys(existitem).forEach(function (val) {\r\n              if (val === attribute.EntityName) {\r\n                modTerminal.DCHAttributes.push({\r\n                  ExternalSystemName: externalSystem,\r\n                  EntityName: attribute.EntityName,\r\n                  Value: existitem[val],\r\n                });\r\n              }\r\n            });\r\n          });\r\n        });\r\n      }\r\n      return modTerminal;\r\n    } catch (error) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  validateSave(modTerminal, attributeList) {\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(terminalValidationDef).forEach(function (key) {\r\n      if (modTerminal[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          terminalValidationDef[key],\r\n          modTerminal[key]\r\n        );\r\n    });\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n    var returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    return returnValue;\r\n  }\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors,modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    try {\r\n      let modEnterpriseProcess = lodash.cloneDeep(\r\n        this.state.modEnterpriseProcess\r\n      );\r\n      modEnterpriseProcess[cellData.rowIndex][cellData.field] = newVal;\r\n      this.setState({ modEnterpriseProcess });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error occured on handleCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  createTerminal(modTerminal) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.terminalCode,\r\n        value: modTerminal.Code,\r\n      },\r\n    ];\r\n    let obj = {\r\n      keyDataCode: KeyCodes.terminalCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modTerminal,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"Terminal_UpdateSuccess\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Terminal_Code\"],\r\n          keyValues: [modTerminal.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.CreateTerminal,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnTerminal\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () => this.getTerminal({ Common_Code: modTerminal.Code })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnTerminal\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n        }\r\n        this.props.onSaved(this.state.modTerminal, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnTerminal\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modTerminal, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateTerminal(modTerminal) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.terminalCode,\r\n        value: modTerminal.Code,\r\n      },\r\n    ];\r\n    let obj = {\r\n      keyDataCode: KeyCodes.terminalCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modTerminal,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"Terminal_UpdateSuccess\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Terminal_Code\"],\r\n          keyValues: [modTerminal.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.UpdateTerminal,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnTerminal\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () => this.getTerminal({ Common_Code: modTerminal.Code })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnTerminal\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n        }\r\n        this.props.onSaved(this.state.modTerminal, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnTerminal\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modTerminal, \"modify\", notification);\r\n      });\r\n  }\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n \r\n  render() {\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"BaseProductInfo_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modTerminal.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modTerminal.LastUpdatedTime).toLocaleTimeString(),\r\n      },\r\n      // {\r\n      //     fieldName: \"BaseProductInfo_LastActivatedTime\",\r\n      //     fieldValue:\r\n      //         this.state.modTerminal.LastActiveTime !== undefined &&\r\n      //             this.state.modTerminal.LastActiveTime !== null\r\n      //             ? new Date(\r\n      //                 this.state.modTerminal.LastActiveTime\r\n      //             ).toLocaleDateString() +\r\n      //             \" \" +\r\n      //             new Date(this.state.modTerminal.LastActiveTime).toLocaleTimeString()\r\n      //             : \"\",\r\n      // },\r\n      {\r\n        fieldName: \"BaseProductInfo_Created\",\r\n        fieldValue:\r\n          new Date(this.state.modTerminal.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modTerminal.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.terminal.Code}\r\n            newEntityName=\"TerminalInfo_NewBaseProduct\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TerminalDetails\r\n            terminal={this.state.terminal}\r\n            modTerminal={this.state.modTerminal}\r\n            modEnterpriseProcess={this.state.modEnterpriseProcess}\r\n            modDCHAttributes={this.state.modDCHAttributes}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            selectedEnterpriseProcess={this.state.selectedEnterpriseProcess}\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            attributeMetaDataList={this.state.attributeMetaDataList}\r\n            validationErrors={this.state.validationErrors}\r\n            onFieldChange={this.handleChange}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            onAttributeDataChange={this.handleAttributeDataChange} \r\n            handleRowSelectionChange={this.handleRowSelectionChange}\r\n            isDCHEnabled={this.props.userDetails.EntityResult.IsDCHEnabled}\r\n            dchAttributeValidationErrors={\r\n              this.state.dchAttributeValidationErrors\r\n            }\r\n            handleDCHCellDataEdit={this.handleDCHCellDataEdit}\r\n            dchAttribute={this.state.dchAttribute}\r\n            dchAttributeMetaDataList={this.state.dchAttributeMetaDataList}\r\n          ></TerminalDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.terminal.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnTerminal}\r\n            handleOperation={this.saveTerminal}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TerminalDetailsComposite);\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TerminalDetails","_ref","terminal","modTerminal","validationErrors","modDCHAttributes","onFieldChange","modEnterpriseProcess","selectedEnterpriseProcess","handleCellDataEdit","onAttributeDataChange","handleRowSelectionChange","attributeValidationErrors","isEnterpriseNode","modAttributeMetaDataList","isDCHEnabled","dchAttributeValidationErrors","handleDCHCellDataEdit","dchAttribute","dchAttributeMetaDataList","handleDCHTextEdit","cellData","val","rowIndex","field","_jsx","Input","fluid","value","onChange","reserveSpace","handleCustomEditTextBox","handleValidationErrorFilter","attributeValidation","find","selectedAttribute","TerminalCode","TranslationConsumer","children","t","_jsxs","className","Code","indicator","disabled","data","label","error","Name","City","State","ZipCode","Country","Longitude","Latitude","Select","placeholder","TimeZone","options","Constants","search","noResultsMessage","ContactPerson","Address","Phone","Email","length","map","attire","ErrorBoundary","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","DataTable","selectionMode","selection","onSelectionChange","scrollable","scrollHeight","Column","header","sortable","editFieldType","customEditRenderer","EntityName","editable","defaultProps","TerminalDetailsComposite","Component","constructor","arguments","state","lodash","emptyTerminal","Utilities","terminalValidationDef","isReadyToRender","saveEnabled","externalSystemList","showAuthenticationLayout","tempTerminal","handleChange","propertyName","this","setState","undefined","console","log","handleReset","Object","keys","forEach","key","selectedCompRow","terminalSelectionChange","handleResetAttributeValidationError","props","userDetails","EntityResult","IsDCHEnabled","buildDCHAttributes","newVal","saveTerminal","attributeList","fillAttributeDetails","createTerminal","updateTerminal","handleSave","fillDetails","validateSave","IsWebPortalUser","enterpriseRow","err","handleAttributeDataChange","attribute","matchedAttributes","matchedAttributesList","filter","modattribute","Array","isArray","DefaultValue","handleAuthenticationClose","componentDidMount","selectedRow","Common_Code","getTerminal","getAttributes","componentWillReceiveProps","nextProps","tokenDetails","tokenInfo","getEnterpriseProcess","GetDCHAttributeInfoList","dcAttributeConfig","Shareholdercode","PrimaryShareholder","EntityCode","EntityType","TERMINAL","obj","ShareHolderCode","keyDataCode","KeyCodes","Entity","axios","RestAPIs","then","response","result","IsSuccess","getExternalSystemInfo","ErrorList","catch","push","DCHAttributes","externalSystem","att1","ExternalSystem","existitem","data1","ExternalSystemName","Value","terminalAttributeEntity","selectedTerminals","attributesTerminalsList","attributeMetaData","Attributevalue","Attributes","terminalAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","IsEnterpriseNode","EnterpriseProcesses","selectedProcessData","process","processObj","allProcess","ProcessName","terminalRow","keyCode","FunctionsList","functionGroups","modify","fnTerminal","add","driver","metaData","returnValue","values","every","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","render","popUpContents","fieldName","fieldValue","Date","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","CreatedTime","TMDetailsHeader","entityCode","newEntityName","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","style","margin","Popup","element","Icon","marginLeft","root","name","size","position","List","content","Button","onClick","float","handleAttributeDateValue","convertAttributeDatetoString","chars","split","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","Checkbox","checked","toString","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","toLocaleString","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","getOptionsWithSelect","ddlOptions","selectOptionText","option","text","unshift","language","window","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}