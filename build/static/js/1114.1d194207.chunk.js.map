{"version":3,"file":"static/js/1114.1d194207.chunk.js","mappings":"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","sources":["Components/UIBase/Details/RailDispatchDetails.jsx","Components/UIBase/Details/RailDispatchCompartmentManualEntryDetails.jsx","Components/UIBase/Details/RailDispatchViewAuditTrailDetails.jsx","Components/UIBase/Details/RailDispatchViewLoadingDetailsDetails.jsx","Components/UIBase/Details/RailDispatchRailWagonAssignmentDetails.jsx","Components/UIBase/Details/RailDispatchProductAssignmentDetails.jsx","Components/UIBase/Details/RailDispatchLoadSpotAssignmentDetails.jsx","Components/UIBase/Details/RailDispatchRecordWeightDetails.jsx","Components/Composite/Details/RailDispatchDetailsComposite.jsx","Components/UIBase/Common/CommonConfirmModal.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport {\r\n  DatePicker,\r\n  Input,\r\n  Select,\r\n  Icon,\r\n  Tab,\r\n  Accordion,\r\n  Checkbox,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport {\r\n  getOptionsWithSelect,\r\n  getCurrentDateFormat,\r\n  handleIsRequiredCompartmentCell,\r\n} from \"../../../JS/functionalUtilities\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\n\r\nRailDispatchDetails.propTypes = {\r\n  railDispatch: PropTypes.object.isRequired,\r\n  modRailDispatch: PropTypes.object.isRequired,\r\n  modAssociations: PropTypes.array.isRequired,\r\n  modWagonDetails: PropTypes.array.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    shareholders: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    quantityUOMs: PropTypes.array,\r\n    routeCodes: PropTypes.array,\r\n    railWagonCategories: PropTypes.array,\r\n    contractCodes: PropTypes.array,\r\n    createdFromEntities: PropTypes.array,\r\n    finishedProducts: PropTypes.object,\r\n  }).isRequired,\r\n  selectedAssociations: PropTypes.array.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  onAssociationSelectionChange: PropTypes.func.isRequired,\r\n  onCellDataEdit: PropTypes.func.isRequired,\r\n  onAddAssociation: PropTypes.func.isRequired,\r\n  onDeleteAssociation: PropTypes.func.isRequired,\r\n  onRouteSearchChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  WagonDetailTab: PropTypes.array.isRequired,\r\n  shipmentSource: PropTypes.number,\r\n};\r\nRailDispatchDetails.defaultProps = {\r\n  genericProps: { transportationType: \"RAIL\" },\r\n  isEnterpriseNode: false,\r\n};\r\n\r\nexport function RailDispatchDetails({\r\n  railDispatch,\r\n  modRailDispatch,\r\n  modAssociations,\r\n  modWagonDetails,\r\n  validationErrors,\r\n  listOptions,\r\n\r\n  attributeValidationErrors,\r\n  onAttributeCellDataEdit,\r\n  onCompAttributeCellDataEdit,\r\n  selectedAttributeList,\r\n  expandedRows,\r\n  toggleExpand,\r\n\r\n  railRouteData,\r\n  selectedAssociations,\r\n  tabActiveIndex,\r\n  onFieldChange,\r\n  onDateTextChange,\r\n  onAllTerminalsChange,\r\n  onAssociationSelectionChange,\r\n  onCellDataEdit,\r\n  onWagonCellDataEdit,\r\n  onAddAssociation,\r\n  onDeleteAssociation,\r\n  onRouteSearchChange,\r\n  onTabChange,\r\n  toggleWagonExpand,\r\n  expandedWagonRows,\r\n  currentAccess,\r\n  isEnterpriseNode,\r\n  compartmentDetailsPageSize,\r\n  enableHSEInspection,\r\n  railLookUpData,\r\n  WagonDetailTab,\r\n  shipmentSource,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  const handleCustomEditDropDown = (cellData, dropDownOptions) => {\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownOptions}\r\n        onChange={(value) => onCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleCustomEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        onChange={(value) => onCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleCustomerEditDropDown = (cellData) => {\r\n    const customerOptions = [];\r\n    if (\r\n      listOptions.customerDestinations[cellData.rowData[\"ShareholderCode\"]] !==\r\n      undefined &&\r\n      listOptions.customerDestinations[cellData.rowData[\"ShareholderCode\"]] !==\r\n      null\r\n    ) {\r\n      Object.keys(\r\n        listOptions.customerDestinations[cellData.rowData[\"ShareholderCode\"]]\r\n      ).forEach((customer) =>\r\n        customerOptions.push({ text: customer, value: customer })\r\n      );\r\n    }\r\n    return handleCustomEditDropDown(cellData, customerOptions);\r\n  };\r\n\r\n  const handleDestinationEditDropDown = (cellData) => {\r\n    const destinationOptions = [];\r\n    if (\r\n      listOptions.customerDestinations[cellData.rowData[\"ShareholderCode\"]] !==\r\n      undefined &&\r\n      listOptions.customerDestinations[cellData.rowData[\"ShareholderCode\"]] !==\r\n      null\r\n    ) {\r\n      if (\r\n        listOptions.customerDestinations[cellData.rowData[\"ShareholderCode\"]][\r\n        cellData.rowData.CustomerCode\r\n        ] !== undefined &&\r\n        Array.isArray(\r\n          listOptions.customerDestinations[cellData.rowData[\"ShareholderCode\"]][\r\n          cellData.rowData.CustomerCode\r\n          ]\r\n        )\r\n      ) {\r\n        listOptions.customerDestinations[cellData.rowData[\"ShareholderCode\"]][\r\n          cellData.rowData.CustomerCode\r\n        ].forEach((destination) =>\r\n          destinationOptions.push({ text: destination, value: destination })\r\n        );\r\n      }\r\n    }\r\n    return handleCustomEditDropDown(cellData, destinationOptions);\r\n  };\r\n\r\n  const handleProductEditDropDown = (cellData) => {\r\n    const finishedProductOptions = [];\r\n    if (\r\n      listOptions.finishedProducts !== undefined &&\r\n      listOptions.finishedProducts !== null\r\n    ) {\r\n      if (\r\n        listOptions.finishedProducts[cellData.rowData.ShareholderCode] !==\r\n        undefined &&\r\n        Array.isArray(\r\n          listOptions.finishedProducts[cellData.rowData.ShareholderCode]\r\n        )\r\n      ) {\r\n        listOptions.finishedProducts[cellData.rowData.ShareholderCode].forEach(\r\n          (productCode) =>\r\n            finishedProductOptions.push({\r\n              text: productCode,\r\n              value: productCode,\r\n            })\r\n        );\r\n      }\r\n    }\r\n    return handleCustomEditDropDown(cellData, finishedProductOptions);\r\n  };\r\n\r\n  const decimalDisplayValues = (cellData) => {\r\n    const { value } = cellData;\r\n    if (typeof value === \"number\") {\r\n      return value.toLocaleString();\r\n    } else {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  const handleForceComplete = (cellData, isEnable) => {\r\n    const forceCompleteEnable = !(\r\n      currentAccess.ViewRailDispatch_EditAccess === false ||\r\n      cellData.rowData.DispatchCompartmentStatus ===\r\n      Constants.ShipmentCompartmentStatus.LOADING ||\r\n      cellData.rowData.DispatchCompartmentStatus ===\r\n      Constants.ShipmentCompartmentStatus.FORCE_COMPLETED ||\r\n      cellData.rowData.DispatchCompartmentStatus ===\r\n      Constants.ShipmentCompartmentStatus.COMPLETED ||\r\n      cellData.rowData.DispatchCompartmentStatus ===\r\n      Constants.ShipmentCompartmentStatus.OVER_FILLED ||\r\n      currentAccess.ViewRailDispatch_DisableWagonForceClose ||\r\n      cellData.rowData.FinishedProductCode === null ||\r\n      cellData.rowData.FinishedProductCode === \"\"\r\n    );\r\n    return (\r\n      <Checkbox\r\n        disabled={!forceCompleteEnable}\r\n        onChange={(checked) => onWagonCellDataEdit(checked, cellData)}\r\n        checked={cellData.value}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleIsRequiredCompAttributes = (data) => {\r\n    return data.rowData.IsMandatory ? (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n        <div className=\"ui red circular empty label badge  circle-padding\" />\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const DisableEnableControl = () => {\r\n    return currentAccess.ViewRailDispatch_Update\r\n      ? !currentAccess.ViewRailDispatch_Update\r\n      : modRailDispatch.DispatchStatus !== Constants.Shipment_Status.READY;\r\n  };\r\n\r\n  const expanderTemplate = (data) => {\r\n    const open =\r\n      expandedRows.findIndex(\r\n        (item) => item.SeqNumber === data.rowData.SeqNumber\r\n      ) >= 0\r\n        ? true\r\n        : false;\r\n    return (\r\n      <div\r\n        onClick={() => toggleExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        <span>{open ? t(\"Hide_Attributes\") : t(\"View_Attributes\")}</span>\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"caret-up\" : \"caret-down\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleAttributeType = (data) => {\r\n    const attribute = data.rowData;\r\n    try {\r\n      return attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.STRING.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => onCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.INT.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => onCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.FLOAT.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.LONG.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.DOUBLE.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n              attribute.AttributeValue === undefined ||\r\n              attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : attribute.AttributeValue.toLocaleString()\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => onCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.BOOL.toLowerCase() ? (\r\n        <Checkbox\r\n          checked={\r\n            attribute.AttributeValue.toString().toLowerCase() === \"true\"\r\n              ? true\r\n              : false\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => onCompAttributeCellDataEdit(data, value)}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.DATETIME.toLowerCase() ? (\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n              attribute.AttributeValue === undefined ||\r\n              attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : new Date(attribute.AttributeValue)\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          showYearSelector=\"true\"\r\n          onChange={(value) => onCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : null;\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetails: Error occurred on handleAttributeType\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  // let actualTerminalCode = [];\r\n  // if (modRailDispatch.ActualTerminalCode !== null) {\r\n  //   actualTerminalCode = modRailDispatch.ActualTerminalCode;\r\n  // }\r\n\r\n  const rowExpansionTemplate = (data) => {\r\n    return Array.isArray(data.AttributesForUI) &&\r\n      data.AttributesForUI.length > 0 ? (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable\r\n          data={data.AttributesForUI}\r\n          rows={compartmentDetailsPageSize}\r\n        >\r\n          {isEnterpriseNode ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"TerminalCode\"\r\n              field=\"TerminalCode\"\r\n              header={t(\"CompartmentTerminal\")}\r\n              editable={false}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"AttributeName\"\r\n            header={t(\"CompartmentAttributeName\")}\r\n            renderer={handleIsRequiredCompAttributes}\r\n            editable={false}\r\n          />\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            header={t(\"CompartmentAttributeValue\")}\r\n            renderer={handleAttributeType}\r\n          />\r\n          {Array.isArray(data.AttributesforUI) &&\r\n            data.AttributesforUI.length > compartmentDetailsPageSize ? (\r\n            <DataTable.Pagination />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </DataTable>\r\n      </div>\r\n    ) : (\r\n      <div className=\"compartmentIcon\">\r\n        <div className=\"gridButtonAlignLeft\">\r\n          {t(\"CustomerInventory_NoRecordsFound\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const expanderWagonTemplate = (data) => {\r\n    const open =\r\n      expandedWagonRows.findIndex(\r\n        (item) => item.TrailerCode === data.rowData.TrailerCode\r\n      ) >= 0\r\n        ? true\r\n        : false;\r\n    if (\r\n      data.rowData.DispatchCompartmentStatus ===\r\n      Constants.ShipmentCompartmentStatus.FORCE_COMPLETED\r\n    ) {\r\n      data.rowData.ForceComplete = true;\r\n    }\r\n    return (\r\n      <div\r\n        onClick={() => toggleWagonExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        {/* <span>{open ? t(\"Hide_Attributes\") : t(\"View_Attributes\")}</span> */}\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"slidercontrols-minus\" : \"ellipsis-horizontal\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const wagonRowExpansionTemplate = (data) => {\r\n    let compData = [];\r\n    compData.push(data);\r\n    return Array.isArray(compData) && compData.length > 0 ? (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable data={compData} onEdit={onWagonCellDataEdit}>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"TareWeight\"\r\n            field=\"TareWeight\"\r\n            header={t(\"RailWagonConfigurationDetails_TareWeight\")}\r\n          />\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"LadenWeight\"\r\n            field=\"LadenWeight\"\r\n            header={t(\"PCDET_Planning_gvLadenWeight\")}\r\n          />\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"DiffWeight\"\r\n            field=\"DiffWeight\"\r\n            header={t(\"Weight_Difference\")}\r\n          />\r\n        </DataTable>\r\n      </div>\r\n    ) : (\r\n      <div className=\"compartmentIcon\">\r\n        <div className=\"gridButtonAlignLeft\">\r\n          {t(\"CustomerInventory_NoRecordsFound\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const inputInDataTable = (cellData) => {\r\n    return (\r\n      <div>\r\n        {!(\r\n          currentAccess.ViewRailDispatch_EditAccess === false ||\r\n          cellData.rowData.DispatchCompartmentStatus ===\r\n          Constants.ShipmentCompartmentStatus.LOADING ||\r\n          cellData.rowData.DispatchCompartmentStatus ===\r\n          Constants.ShipmentCompartmentStatus.FORCE_COMPLETED ||\r\n          cellData.rowData.DispatchCompartmentStatus ===\r\n          Constants.ShipmentCompartmentStatus.COMPLETED ||\r\n          cellData.rowData.DispatchCompartmentStatus ===\r\n          Constants.ShipmentCompartmentStatus.OVER_FILLED ||\r\n          currentAccess.ViewRailDispatch_DisableAdjustPlanQty ||\r\n          cellData.rowData.FinishedProductCode === null ||\r\n          cellData.rowData.FinishedProductCode === \"\"\r\n        ) ? (\r\n          <Input\r\n            fluid\r\n            disabled={false}\r\n            value={cellData.rowData.AdjustedQty}\r\n            onChange={(value) => onWagonCellDataEdit(value, cellData)}\r\n            reserveSpace={false}\r\n          />\r\n        ) : (\r\n          <Input fluid disabled={true} />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modRailDispatch.DispatchCode}\r\n                indicator=\"required\"\r\n                disabled={railDispatch.DispatchCode !== \"\"}\r\n                onChange={(data) => onFieldChange(\"DispatchCode\", data)}\r\n                label={t(\"RailDispatchPlanDetail_DispatchCode\")}\r\n                error={t(validationErrors.DispatchCode)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modRailDispatch.Description}\r\n                label={t(\"RailDispatchPlanDetail_Description\")}\r\n                onChange={(data) => onFieldChange(\"Description\", data)}\r\n                error={t(validationErrors.Description)}\r\n                reserveSpace={false}\r\n                disabled={DisableEnableControl()}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                indicator=\"required\"\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"RailDispatchPlanDetail_RouteCode\")}\r\n                value={modRailDispatch.RouteCode}\r\n                onChange={(data) => onFieldChange(\"RouteCode\", data)}\r\n                disabled={DisableEnableControl()}\r\n                error={t(validationErrors.RouteCode)}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.routeCodes,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                search={true}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                onSearch={onRouteSearchChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                value={\r\n                  modRailDispatch.ScheduledDate === null\r\n                    ? \"\"\r\n                    : new Date(modRailDispatch.ScheduledDate)\r\n                }\r\n                label={t(\"RailDispatchPlanDetail_ScheduledDate\")}\r\n                type=\"datetime\"\r\n                displayFormat={getCurrentDateFormat()}\r\n                disabled={DisableEnableControl()}\r\n                disablePast={false}\r\n                indicator=\"required\"\r\n                showYearSelector=\"true\"\r\n                onChange={(data) => onFieldChange(\"ScheduledDate\", data)}\r\n                onTextChange={(value, error) => {\r\n                  onDateTextChange(\"ScheduledDate\", value, error);\r\n                }}\r\n                error={t(validationErrors.ScheduledDate)}\r\n                minuteStep=\"5\"\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={railRouteData.DestinationCode}\r\n                label={t(\"RailDispatchPlanDetail_FinalDestination\")}\r\n                reserveSpace={false}\r\n                disabled={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                indicator=\"required\"\r\n                placeholder={t(\"Common_Select\")}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"CreatedFromEntity\", parseInt(data))\r\n                }\r\n                label={t(\"RailDispatchPlanDetail_CreatedFromEntity\")}\r\n                options={listOptions.createdFromEntities}\r\n                value={modRailDispatch.CreatedFromEntity}\r\n                disabled={\r\n                  DisableEnableControl() || shipmentSource !== undefined\r\n                    ? true\r\n                    : false\r\n                }\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modRailDispatch.DispatchStatus}\r\n                label={t(\"RailDispatchPlanDetail_RailStatus\")}\r\n                reserveSpace={false}\r\n                disabled={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"RailDispatchPlanDetail_QuantityUOM\")}\r\n                value={modRailDispatch.QuantityUOM}\r\n                multiple={false}\r\n                indicator=\"required\"\r\n                options={listOptions.quantityUOMs}\r\n                onChange={(data) => onFieldChange(\"QuantityUOM\", data)}\r\n                error={t(validationErrors.QuantityUOM)}\r\n                disabled={\r\n                  DisableEnableControl() ||\r\n                  listOptions.quantityUOMs.length === 0\r\n                }\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={railRouteData.DepartureTime}\r\n                label={t(\"RailDispatchPlanDetail_DepartTime\")}\r\n                reserveSpace={false}\r\n                disabled={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"Cust_Status\")}\r\n                value={modRailDispatch.Active}\r\n                options={[\r\n                  { text: t(\"ViewRailDispatchList_Ok\"), value: true },\r\n                  { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                ]}\r\n                onChange={(data) => onFieldChange(\"Active\", data)}\r\n                disabled={\r\n                  DisableEnableControl() || railDispatch.DispatchCode === \"\"\r\n                }\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modRailDispatch.Remarks}\r\n                label={t(\"Cust_Remarks\")}\r\n                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                indicator={\r\n                  modRailDispatch.Active !== railDispatch.Active\r\n                    ? \"required\"\r\n                    : \"\"\r\n                }\r\n                error={t(validationErrors.Remarks)}\r\n                reserveSpace={false}\r\n                disabled={\r\n                  DisableEnableControl() || railDispatch.DispatchCode === \"\"\r\n                }\r\n              />\r\n            </div>\r\n            {isEnterpriseNode ? (\r\n              <>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                  <AssociatedTerminals\r\n                    terminalList={listOptions.terminalCodes}\r\n                    selectedTerminal={modRailDispatch.TerminalCodes}\r\n                    error={validationErrors.TerminalCodes}\r\n                    onFieldChange={onFieldChange}\r\n                    onCheckChange={onAllTerminalsChange}\r\n                  />\r\n                </div>\r\n                {railDispatch.DispatchCode === null ||\r\n                  railDispatch.DispatchCode === undefined ||\r\n                  railDispatch.DispatchCode === \"\" ? (\r\n                  \"\"\r\n                ) : (\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    {/* <Select\r\n                      fluid\r\n                      label={t(\"Shipment_LoadedTerminal\")}\r\n                      value={actualTerminalCode}\r\n                      multiple={true}\r\n                      options={Utilities.transferListtoOptions(\r\n                        actualTerminalCode\r\n                      )}\r\n                      // onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n                      // error={t(validationError)}\r\n                      disabled={true}\r\n                      reserveSpace={false}\r\n                    /> */}\r\n                    <Input\r\n                      fluid\r\n                      placeholder=\"\"\r\n                      label={t(\"Shipment_LoadedTerminal\")}\r\n                      value={modRailDispatch.ActualTerminalCode}\r\n                      disabled={true}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : null}\r\n          </div>\r\n\r\n          {selectedAttributeList.length > 0\r\n            ? selectedAttributeList.map((attire) => (\r\n              <ErrorBoundary>\r\n                <Accordion>\r\n                  <Accordion.Content\r\n                    className=\"attributeAccordian\"\r\n                    title={\r\n                      isEnterpriseNode\r\n                        ? attire.TerminalCode + \" - \" + t(\"Attributes_Header\")\r\n                        : t(\"Attributes_Header\")\r\n                    }\r\n                  >\r\n                    <AttributeDetails\r\n                      selectedAttributeList={attire.attributeMetaDataList}\r\n                      handleCellDataEdit={onAttributeCellDataEdit}\r\n                      attributeValidationErrors={handleValidationErrorFilter(\r\n                        attributeValidationErrors,\r\n                        attire.TerminalCode\r\n                      )}\r\n                    />\r\n                  </Accordion.Content>\r\n                </Accordion>\r\n              </ErrorBoundary>\r\n            ))\r\n            : null}\r\n\r\n          <div className=\"shipmentTabAlignment\">\r\n            <Tab\r\n              activeIndex={tabActiveIndex}\r\n              onTabChange={(activeIndex) => {\r\n                onTabChange(activeIndex);\r\n              }}\r\n            >\r\n              <Tab.Pane title={t(\"RailDispatchPlanDetail_PlanHeader\")}>\r\n                <div className=\"row compartmentRow\">\r\n                  <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n                    {/* <h4>{t(\"RailDispatchPlanDetail_PlanHeader\")}</h4> */}\r\n                  </div>\r\n                  <div className=\"col col-md-4 col-lg-3 col-xl-3\">\r\n                    <div className=\"compartmentIconContainer\">\r\n                      <div\r\n                        onClick={onAddAssociation}\r\n                        className=\"compartmentIcon\"\r\n                      >\r\n                        <div>\r\n                          <Icon root=\"common\" name=\"badge-plus\" size=\"medium\" />\r\n                        </div>\r\n                        <div className=\"margin_l10\">\r\n                          <h5 className=\"font14\">\r\n                            {t(\"FinishedProductInfo_Add\")}\r\n                          </h5>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div\r\n                        onClick={onDeleteAssociation}\r\n                        className=\"compartmentIcon margin_l30\"\r\n                      >\r\n                        <div>\r\n                          <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n                        </div>\r\n                        <div className=\"margin_l10\">\r\n                          <h5 className=\"font14\">{t(\"DestAdd_Delete\")}</h5>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row marginRightZero tableScroll\">\r\n                  <div className=\"col-12 detailsTable\">\r\n                    <DataTable\r\n                      data={modAssociations}\r\n                      rowExpansionTemplate={rowExpansionTemplate}\r\n                      expandedRows={expandedRows}\r\n                      scrollable={true}\r\n                      scrollHeight=\"320px\"\r\n                      selectionMode=\"multiple\"\r\n                      selection={selectedAssociations}\r\n                      onSelectionChange={onAssociationSelectionChange}\r\n                    >\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"ShareholderCode\"\r\n                        field=\"ShareholderCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"RailDispatchPlanDetail_ShareHolderCode\")\r\n                        )}\r\n                        editable={!DisableEnableControl()}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(cellData) =>\r\n                          handleCustomEditDropDown(\r\n                            cellData,\r\n                            listOptions.shareholders\r\n                          )\r\n                        }\r\n                      />\r\n                      {/* {(() => {\r\n                        switch (modRailDispatch.CreatedFromEntity) {\r\n                          case 2:\r\n                            return (\r\n                              <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"ContractCode\"\r\n                                field=\"ContractCode\"\r\n                                header={handleIsRequiredCompartmentCell(t(\"RailDispatchPlanDetail_ContractCode\"))}\r\n                                editable={modRailDispatch.DispatchStatus === Constants.Shipment_Status.READY}\r\n                                editFieldType=\"text\"\r\n                                customEditRenderer={(cellData) =>\r\n                                  handleCustomEditDropDown(\r\n                                    cellData,\r\n                                    listOptions.contractCodes\r\n                                  )\r\n                                }\r\n                              />\r\n                            );\r\n                          default:\r\n                            return \"\";\r\n                        }\r\n                      })()} */}\r\n                      {modRailDispatch.CreatedFromEntity === 2 ? (\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"ContractCode\"\r\n                          field=\"ContractCode\"\r\n                          header={handleIsRequiredCompartmentCell(\r\n                            t(\"RailDispatchPlanDetail_ContractCode\")\r\n                          )}\r\n                          editable={!DisableEnableControl()}\r\n                          editFieldType=\"text\"\r\n                          customEditRenderer={(cellData) =>\r\n                            handleCustomEditDropDown(\r\n                              cellData,\r\n                              listOptions.contractCodes\r\n                            )\r\n                          }\r\n                        />\r\n                      ) : null}\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"FinishedProductCode\"\r\n                        field=\"FinishedProductCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"RailDispatchPlanDetail_FinishedProductCode\")\r\n                        )}\r\n                        editable={!DisableEnableControl()}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(cellData) =>\r\n                          handleProductEditDropDown(cellData)\r\n                        }\r\n                      />\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"CustomerCode\"\r\n                        field=\"CustomerCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"RailDispatchPlanDetail_Customer\")\r\n                        )}\r\n                        editable={!DisableEnableControl()}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(cellData) =>\r\n                          handleCustomerEditDropDown(cellData)\r\n                        }\r\n                      />\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"DestinationCode\"\r\n                        field=\"DestinationCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"RailDispatchPlanDetail_Destination\")\r\n                        )}\r\n                        editable={!DisableEnableControl()}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(cellData) =>\r\n                          handleDestinationEditDropDown(cellData)\r\n                        }\r\n                      />\r\n                      {railLookUpData.PlanType === \"1\" ? (\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"PlannedQuantity\"\r\n                          field=\"PlannedQuantity\"\r\n                          header={handleIsRequiredCompartmentCell(\r\n                            t(\"RailDispatchPlanDetail_Quantity\")\r\n                          )}\r\n                          editable={!DisableEnableControl()}\r\n                          editFieldType=\"text\"\r\n                          renderer={(cellData) =>\r\n                            decimalDisplayValues(cellData)\r\n                          }\r\n                          customEditRenderer={handleCustomEditTextBox}\r\n                        />\r\n                      ) : null}\r\n                      {railLookUpData.PlanType === \"2\" ? (\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"RailWagonCategory\"\r\n                          field=\"RailWagonCategory\"\r\n                          header={handleIsRequiredCompartmentCell(\r\n                            t(\"RailDispatchPlanDetail_RailWagonCategory\")\r\n                          )}\r\n                          editable={!DisableEnableControl()}\r\n                          editFieldType=\"text\"\r\n                          customEditRenderer={(cellData) =>\r\n                            handleCustomEditDropDown(\r\n                              cellData,\r\n                              listOptions.railWagonCategories\r\n                            )\r\n                          }\r\n                        />\r\n                      ) : null}\r\n                      {railLookUpData.PlanType === \"2\" ? (\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"PlannedNoOfRailWagons\"\r\n                          field=\"PlannedNoOfRailWagons\"\r\n                          header={handleIsRequiredCompartmentCell(\r\n                            t(\"RailDispatchPlanDetail_NoOfRailWagons\")\r\n                          )}\r\n                          editable={!DisableEnableControl()}\r\n                          editFieldType=\"text\"\r\n                          renderer={(cellData) =>\r\n                            decimalDisplayValues(cellData)\r\n                          }\r\n                          customEditRenderer={handleCustomEditTextBox}\r\n                        />\r\n                      ) : null}\r\n                      <DataTable.Column\r\n                        className=\"expandedColumn\"\r\n                        initialWidth=\"200px\"\r\n                        renderer={expanderTemplate}\r\n                      />\r\n                    </DataTable>\r\n                  </div>\r\n                </div>\r\n              </Tab.Pane>\r\n              {WagonDetailTab.map((index) => {\r\n                return (\r\n                  <Tab.Pane title={t(\"ViewRailDispatchList_WagonDetails\")}>\r\n                    <div className=\"row marginRightZero tableScroll\">\r\n                      <div className=\"col-12 detailsTable\">\r\n                        <DataTable\r\n                          data={modWagonDetails}\r\n                          rowExpansionTemplate={wagonRowExpansionTemplate}\r\n                          expandedRows={expandedWagonRows}\r\n                          scrollable={true}\r\n                          scrollHeight=\"320px\"\r\n                        >\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"TrailerCode\"\r\n                            field=\"TrailerCode\"\r\n                            header={t(\"Rail_Receipt_Wagon\")}\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"CarrierCompanyCode\"\r\n                            field=\"CarrierCompanyCode\"\r\n                            header={t(\"Rail_Receipt_Carrier\")}\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"FinishedProductCode\"\r\n                            field=\"FinishedProductCode\"\r\n                            header={t(\"Rail_Receipt_Product\")}\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"DispatchCompartmentStatus\"\r\n                            field=\"DispatchCompartmentStatus\"\r\n                            header={t(\"ViewRailDispatchList_DispatchStatus\")}\r\n                            renderer={(cellData) => {\r\n                              if (cellData.value !== null) {\r\n                                return Utilities.getKeyByValue(\r\n                                  Constants.ShipmentCompartmentStatus,\r\n                                  cellData.value\r\n                                );\r\n                              }\r\n                            }}\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"PlannedQuantity\"\r\n                            field=\"PlannedQuantity\"\r\n                            header={t(\"ViewRailDispatchList_PlannedQuantity\")}\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"RevisedQuantity\"\r\n                            field=\"RevisedQuantity\"\r\n                            header={t(\r\n                              \"ViewRailDispatchList_RevisedPlannedQuantity\"\r\n                            )}\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"LoadedQuantity\"\r\n                            field=\"LoadedQuantity\"\r\n                            header={t(\"ViewRailDispatchList_LoadedQuantity\")}\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"ReturnQuantity\"\r\n                            field=\"ReturnQuantity\"\r\n                            header={t(\"ViewMarineShipmentList_ReturnQuantity\")}\r\n                          />\r\n\r\n                          {enableHSEInspection ? (\r\n                            <DataTable.Column\r\n                              className=\"compColHeight colminWidth\"\r\n                              key=\"HSEInspectionStatus\"\r\n                              field=\"HSEInspectionStatus\"\r\n                              header={t(\"VehHSE_InspectionStatus\")}\r\n                              renderer={(cellData) => {\r\n                                return Utilities.getKeyByValue(\r\n                                  Constants.HSEInspectionStatus,\r\n                                  parseInt(cellData.value)\r\n                                );\r\n                              }}\r\n                            />\r\n                          ) : null}\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            field={\"AdjustedQty\"}\r\n                            header={t(\"ViewMarineShipmentList_AdjustPlan\")}\r\n                            renderer={(cellData) => inputInDataTable(cellData)}\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            initialWidth=\"100px\"\r\n                            field=\"ForceComplete\"\r\n                            header={t(\"ViewShipment_ForceComplete\")}\r\n                            renderer={(cellData) =>\r\n                              handleForceComplete(cellData)\r\n                            }\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"expandedColumn\"\r\n                            initialWidth=\"100px\"\r\n                            renderer={expanderWagonTemplate}\r\n                          />\r\n                        </DataTable>\r\n                      </div>\r\n                    </div>\r\n                  </Tab.Pane>\r\n                );\r\n              })}\r\n            </Tab>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { DatePicker, Input, Select, Accordion, Tab } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport {\r\n  getOptionsWithSelect,\r\n  getCurrentDateFormat,\r\n} from \"../../../JS/functionalUtilities\";\r\n\r\nRailDispatchCompartmentManualEntryDetails.propTypes = {\r\n  modLoadingDataInfo: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    wagonCodes: PropTypes.array,\r\n    clusterCodes: PropTypes.array,\r\n    BCUCodes: PropTypes.array,\r\n    loadingArmCodes: PropTypes.array,\r\n    quantityUOMs: PropTypes.array,\r\n    densityUOMs: PropTypes.array,\r\n    temperatureUOMs: PropTypes.array,\r\n    tankCodes: PropTypes.array,\r\n    meterCodes: PropTypes.array,\r\n  }).isRequired,\r\n  selectedAttributeList: PropTypes.array.isRequired,\r\n  attributeValidationErrorList: PropTypes.array.isRequired,\r\n  onAttributeCellDataEdit: PropTypes.func.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  onTankSearchChange: PropTypes.func.isRequired,\r\n  onMeterSearchChange: PropTypes.func.isRequired,\r\n  onTabChange: PropTypes.func.isRequired,\r\n  tabActiveIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nexport function RailDispatchCompartmentManualEntryDetails({\r\n  modLoadingDataInfo,\r\n  validationErrors,\r\n  listOptions,\r\n\r\n  selectedAttributeList,\r\n  attributeValidationErrorList,\r\n  onAttributeCellDataEdit,\r\n\r\n  onFieldChange,\r\n  onDateTextChange,\r\n  onTankSearchChange,\r\n  onMeterSearchChange,\r\n  onTabChange,\r\n  tabActiveIndex,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  const generateTabPane = (listIndex, isAdditive, errorIndex) => {\r\n    let title, dataKeyName;\r\n    if (isAdditive) {\r\n      title =\r\n        t(\"BaseProductInfo_Additive\") +\r\n        \" - \" +\r\n        modLoadingDataInfo.ArrTransactionAdditive[listIndex]\r\n          .AdditiveProductCode +\r\n        \" (\" +\r\n        t(\"BPCode\") +\r\n        \" - \" +\r\n        modLoadingDataInfo.ArrTransactionAdditive[listIndex].BaseProductCode +\r\n        \")\";\r\n      dataKeyName = \"ArrTransactionAdditive\";\r\n    } else {\r\n      title =\r\n        t(\"BPCode\") +\r\n        \" - \" +\r\n        modLoadingDataInfo.ArrTransactionBP[listIndex].BaseProductCode;\r\n      dataKeyName = \"ArrTransactionBP\";\r\n    }\r\n    return (\r\n      <Tab.Pane title={title}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              indicator=\"required\"\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].GrossQuantity}\r\n              label={t(\"GrossQuantity\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\r\n                  \"GrossQuantity\",\r\n                  data,\r\n                  { type: dataKeyName, index: listIndex },\r\n                  { category: \"product\", index: errorIndex }\r\n                )\r\n              }\r\n              error={t(validationErrors.product[errorIndex].GrossQuantity)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].NetQuantity}\r\n              label={t(\"NetQuantity\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\r\n                  \"NetQuantity\",\r\n                  data,\r\n                  { type: dataKeyName, index: listIndex },\r\n                  { category: \"product\", index: errorIndex }\r\n                )\r\n              }\r\n              error={t(validationErrors.product[errorIndex].NetQuantity)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].Temperature}\r\n              label={t(\"Temperature\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\r\n                  \"Temperature\",\r\n                  data,\r\n                  { type: dataKeyName, index: listIndex },\r\n                  { category: \"product\", index: errorIndex }\r\n                )\r\n              }\r\n              error={t(validationErrors.product[errorIndex].Temperature)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"MarineDispatchManualEntry_TemperatureUOM\")}\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].TemperatureUOM}\r\n              options={listOptions.temperatureUOMs}\r\n              onChange={(data) =>\r\n                onFieldChange(\r\n                  \"TemperatureUOM\",\r\n                  data,\r\n                  { type: dataKeyName, index: listIndex },\r\n                  { category: \"product\", index: errorIndex }\r\n                )\r\n              }\r\n              reserveSpace={false}\r\n              noResultsMessage={t(\"noResultsMessage\")}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].ProductDensity}\r\n              label={t(\"Density\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\r\n                  \"ProductDensity\",\r\n                  data,\r\n                  { type: dataKeyName, index: listIndex },\r\n                  { category: \"product\", index: errorIndex }\r\n                )\r\n              }\r\n              error={t(validationErrors.product[errorIndex].ProductDensity)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"BCU_DensityUOM\")}\r\n              value={\r\n                modLoadingDataInfo[dataKeyName][listIndex].ProductDensityUOM\r\n              }\r\n              options={listOptions.densityUOMs}\r\n              onChange={(data) =>\r\n                onFieldChange(\r\n                  \"ProductDensityUOM\",\r\n                  data,\r\n                  { type: dataKeyName, index: listIndex },\r\n                  { category: \"product\", index: errorIndex }\r\n                )\r\n              }\r\n              reserveSpace={false}\r\n              noResultsMessage={t(\"noResultsMessage\")}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"MeterCode\")}\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].MeterCode}\r\n              options={getOptionsWithSelect(\r\n                listOptions.meterCodes,\r\n                t(\"Common_Select\")\r\n              )}\r\n              onChange={(data) =>\r\n                onFieldChange(\"MeterCode\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              search={true}\r\n              reserveSpace={false}\r\n              noResultsMessage={t(\"noResultsMessage\")}\r\n              onSearch={onMeterSearchChange}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"TankCode\")}\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].TankCode}\r\n              options={getOptionsWithSelect(\r\n                listOptions.tankCodes,\r\n                t(\"Common_Select\")\r\n              )}\r\n              onChange={(data) =>\r\n                onFieldChange(\"TankCode\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              search={true}\r\n              reserveSpace={false}\r\n              noResultsMessage={t(\"noResultsMessage\")}\r\n              onSearch={onTankSearchChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].StartTotalizer}\r\n              label={t(\"StartTotalizer\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\r\n                  \"StartTotalizer\",\r\n                  data,\r\n                  { type: dataKeyName, index: listIndex },\r\n                  { category: \"product\", index: errorIndex }\r\n                )\r\n              }\r\n              error={t(validationErrors.product[errorIndex].StartTotalizer)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].EndTotalizer}\r\n              label={t(\"EndTotalizer\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\r\n                  \"EndTotalizer\",\r\n                  data,\r\n                  { type: dataKeyName, index: listIndex },\r\n                  { category: \"product\", index: errorIndex }\r\n                )\r\n              }\r\n              error={t(validationErrors.product[errorIndex].EndTotalizer)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={\r\n                modLoadingDataInfo[dataKeyName][listIndex].NetStartTotalizer\r\n              }\r\n              label={t(\"MarineReceiptManualEntry_NetStartTotalizer\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\r\n                  \"NetStartTotalizer\",\r\n                  data,\r\n                  { type: dataKeyName, index: listIndex },\r\n                  { category: \"product\", index: errorIndex }\r\n                )\r\n              }\r\n              error={t(validationErrors.product[errorIndex].NetStartTotalizer)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].NetEndTotalizer}\r\n              label={t(\"MarineReceiptManualEntry_NetEndTotalizer\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\r\n                  \"NetEndTotalizer\",\r\n                  data,\r\n                  { type: dataKeyName, index: listIndex },\r\n                  { category: \"product\", index: errorIndex }\r\n                )\r\n              }\r\n              error={t(validationErrors.product[errorIndex].NetEndTotalizer)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].CalculatedGross}\r\n              label={t(\"LoadingDetailsEntry_CalculatedGross\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\r\n                  \"CalculatedGross\",\r\n                  data,\r\n                  { type: dataKeyName, index: listIndex },\r\n                  { category: \"product\", index: errorIndex }\r\n                )\r\n              }\r\n              error={t(validationErrors.product[errorIndex].CalculatedGross)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].CalculatedNet}\r\n              label={t(\"LoadingDetailsEntry_CalculatedNet\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\r\n                  \"CalculatedNet\",\r\n                  data,\r\n                  { type: dataKeyName, index: listIndex },\r\n                  { category: \"product\", index: errorIndex }\r\n                )\r\n              }\r\n              error={t(validationErrors.product[errorIndex].CalculatedNet)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"LoadingDetails_CalculatedValueUOM\")}\r\n              value={\r\n                modLoadingDataInfo[dataKeyName][listIndex].CalculatedValueUOM\r\n              }\r\n              multiple={false}\r\n              options={listOptions.quantityUOMs}\r\n              onChange={(data) =>\r\n                onFieldChange(\r\n                  \"CalculatedValueUOM\",\r\n                  data,\r\n                  { type: dataKeyName, index: listIndex },\r\n                  { category: \"product\", index: errorIndex }\r\n                )\r\n              }\r\n              reserveSpace={false}\r\n              noResultsMessage={t(\"noResultsMessage\")}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {selectedAttributeList[errorIndex].length > 0\r\n          ? selectedAttributeList[errorIndex].map((attire) => (\r\n              <ErrorBoundary>\r\n                <Accordion>\r\n                  <Accordion.Content\r\n                    className=\"attributeAccordian\"\r\n                    title={t(\"Attributes_Header\")}\r\n                  >\r\n                    <AttributeDetails\r\n                      selectedAttributeList={attire.attributeMetaDataList}\r\n                      handleCellDataEdit={(attribute, value) =>\r\n                        onAttributeCellDataEdit(attribute, value, errorIndex)\r\n                      }\r\n                      attributeValidationErrors={handleValidationErrorFilter(\r\n                        attributeValidationErrorList[errorIndex],\r\n                        attire.TerminalCode\r\n                      )}\r\n                    />\r\n                  </Accordion.Content>\r\n                </Accordion>\r\n              </ErrorBoundary>\r\n            ))\r\n          : null}\r\n      </Tab.Pane>\r\n    );\r\n  };\r\n\r\n  const tabPaneList = [];\r\n  let errorIndex = 1;\r\n  for (\r\n    let index = 0;\r\n    index < modLoadingDataInfo.ArrTransactionBP.length;\r\n    index++\r\n  ) {\r\n    tabPaneList.push(generateTabPane(index, false, errorIndex));\r\n    errorIndex += 1;\r\n  }\r\n  for (\r\n    let index = 0;\r\n    index < modLoadingDataInfo.ArrTransactionAdditive.length;\r\n    index++\r\n  ) {\r\n    tabPaneList.push(generateTabPane(index, true, errorIndex));\r\n    errorIndex += 1;\r\n  }\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLoadingDataInfo.CommonInfo.DispatchCode}\r\n                disabled={true}\r\n                label={t(\"RailDispatchPlanDetail_DispatchCode\")}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLoadingDataInfo.CommonInfo.CarrierCode}\r\n                disabled={true}\r\n                label={t(\"Rail_Receipt_Carrier\")}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                indicator=\"required\"\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"Rail_Receipt_Wagon\")}\r\n                value={modLoadingDataInfo.CommonInfo.TrailerCode}\r\n                options={listOptions.wagonCodes}\r\n                onChange={(data) => onFieldChange(\"TrailerCode\", data)}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                indicator=\"required\"\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"RailDispatchManualEntry_Cluster\")}\r\n                value={modLoadingDataInfo.CommonInfo.BayCode}\r\n                onChange={(data) => onFieldChange(\"BayCode\", data)}\r\n                options={listOptions.clusterCodes}\r\n                error={t(validationErrors.bayCode)}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"RailDispatchManualEntry_BCU\")}\r\n                value={modLoadingDataInfo.CommonInfo.BCUCode}\r\n                onChange={(data) => onFieldChange(\"BCUCode\", data)}\r\n                options={listOptions.BCUCodes}\r\n                reserveSpace={false}\r\n                indicator=\"required\"\r\n                error={t(validationErrors.BCUCode)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"RailDispatchManualEntry_LoadingArm\")}\r\n                value={modLoadingDataInfo.TransactionFPinfo.ArmCode}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"ArmCode\", data, { type: \"TransactionFPinfo\" })\r\n                }\r\n                indicator=\"required\"\r\n                error={t(validationErrors.LoadingArm)}\r\n                options={listOptions.loadingArmCodes}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLoadingDataInfo.TransactionFPinfo.FinishedProductCode}\r\n                disabled={true}\r\n                label={t(\"Rail_Receipt_Product\")}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLoadingDataInfo.TransactionFPinfo.TransactionID}\r\n                label={t(\"RailDispatchManualEntry_TransactionNo\")}\r\n                onChange={(data) =>\r\n                  onFieldChange(\r\n                    \"TransactionID\",\r\n                    data,\r\n                    { type: \"TransactionFPinfo\" },\r\n                    { category: \"common\" }\r\n                  )\r\n                }\r\n                error={t(validationErrors.common.TransactionID)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                value={modLoadingDataInfo.TransactionFPinfo.StartTime}\r\n                label={t(\"RailDispatchManualEntry_MandatoryLoadStartTime\")}\r\n                onChange={(data) =>\r\n                  onFieldChange(\r\n                    \"StartTime\",\r\n                    data,\r\n                    { type: \"TransactionFPinfo\" },\r\n                    { category: \"common\" }\r\n                  )\r\n                }\r\n                type=\"datetime\"\r\n                disablePast={false}\r\n                disableFuture={true}\r\n                indicator=\"required\"\r\n                reserveSpace={false}\r\n                minuteStep={5}\r\n                showYearSelector={true}\r\n                displayFormat={getCurrentDateFormat()}\r\n                onTextChange={(value, error) => {\r\n                  onDateTextChange(\"StartTime\", value, error);\r\n                }}\r\n                error={t(validationErrors.common.StartTime)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                value={modLoadingDataInfo.TransactionFPinfo.EndTime}\r\n                label={t(\"RailDispatchManualEntry_MandatoryLoadEndTime\")}\r\n                onChange={(data) =>\r\n                  onFieldChange(\r\n                    \"EndTime\",\r\n                    data,\r\n                    { type: \"TransactionFPinfo\" },\r\n                    { category: \"common\" }\r\n                  )\r\n                }\r\n                type=\"datetime\"\r\n                disablePast={false}\r\n                disableFuture={true}\r\n                indicator=\"required\"\r\n                reserveSpace={false}\r\n                minuteStep={5}\r\n                showYearSelector={true}\r\n                displayFormat={getCurrentDateFormat()}\r\n                onTextChange={(value, error) => {\r\n                  onDateTextChange(\"EndTime\", value, error);\r\n                }}\r\n                error={t(validationErrors.common.EndTime)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"RailDispatchManualEntry_QuantityUOM\")}\r\n                value={modLoadingDataInfo.TransactionFPinfo.QuantityUOM}\r\n                multiple={false}\r\n                indicator=\"required\"\r\n                options={listOptions.quantityUOMs}\r\n                // onChange={(data) => onFieldChange(\"QuantityUOM\", data)}\r\n                disabled={true}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLoadingDataInfo.TransactionFPinfo.Remarks}\r\n                label={t(\"RailDispatchManualEntry_Remarks\")}\r\n                onChange={(data) =>\r\n                  onFieldChange(\r\n                    \"Remarks\",\r\n                    data,\r\n                    { type: \"TransactionFPinfo\" },\r\n                    { category: \"common\" }\r\n                  )\r\n                }\r\n                error={t(validationErrors.common.Remarks)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"shipmentTabAlignment\">\r\n            <Tab activeIndex={tabActiveIndex} onTabChange={onTabChange}>\r\n              <Tab.Pane\r\n                title={\r\n                  modLoadingDataInfo.TransactionFPinfo.FinishedProductCode ===\r\n                  \"\"\r\n                    ? t(\"FinishedProduct\")\r\n                    : t(\"FinishedProduct\") +\r\n                      \"-\" +\r\n                      modLoadingDataInfo.TransactionFPinfo.FinishedProductCode\r\n                }\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      indicator=\"required\"\r\n                      value={modLoadingDataInfo.TransactionFPinfo.GrossQuantity}\r\n                      label={t(\"GrossQuantity\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\r\n                          \"GrossQuantity\",\r\n                          data,\r\n                          { type: \"TransactionFPinfo\" },\r\n                          { category: \"product\", index: 0 }\r\n                        )\r\n                      }\r\n                      error={t(validationErrors.product[0].GrossQuantity)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={modLoadingDataInfo.TransactionFPinfo.NetQuantity}\r\n                      label={t(\"NetQuantity\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\r\n                          \"NetQuantity\",\r\n                          data,\r\n                          { type: \"TransactionFPinfo\" },\r\n                          { category: \"product\", index: 0 }\r\n                        )\r\n                      }\r\n                      error={t(validationErrors.product[0].NetQuantity)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={modLoadingDataInfo.TransactionFPinfo.Temperature}\r\n                      label={t(\"Temperature\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\r\n                          \"Temperature\",\r\n                          data,\r\n                          { type: \"TransactionFPinfo\" },\r\n                          { category: \"product\", index: 0 }\r\n                        )\r\n                      }\r\n                      error={t(validationErrors.product[0].Temperature)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                      fluid\r\n                      placeholder={t(\"Common_Select\")}\r\n                      label={t(\"MarineDispatchManualEntry_TemperatureUOM\")}\r\n                      value={\r\n                        modLoadingDataInfo.TransactionFPinfo.TemperatureUOM\r\n                      }\r\n                      options={listOptions.temperatureUOMs}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\r\n                          \"TemperatureUOM\",\r\n                          data,\r\n                          { type: \"TransactionFPinfo\" },\r\n                          { category: \"product\", index: 0 }\r\n                        )\r\n                      }\r\n                      reserveSpace={false}\r\n                      noResultsMessage={t(\"noResultsMessage\")}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={\r\n                        modLoadingDataInfo.TransactionFPinfo.ProductDensity\r\n                      }\r\n                      label={t(\"Density\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\r\n                          \"ProductDensity\",\r\n                          data,\r\n                          { type: \"TransactionFPinfo\" },\r\n                          { category: \"product\", index: 0 }\r\n                        )\r\n                      }\r\n                      error={t(validationErrors.product[0].ProductDensity)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                      fluid\r\n                      placeholder={t(\"Common_Select\")}\r\n                      label={t(\"BCU_DensityUOM\")}\r\n                      value={\r\n                        modLoadingDataInfo.TransactionFPinfo.ProductDensityUOM\r\n                      }\r\n                      options={listOptions.densityUOMs}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\r\n                          \"ProductDensityUOM\",\r\n                          data,\r\n                          { type: \"TransactionFPinfo\" },\r\n                          { category: \"product\", index: 0 }\r\n                        )\r\n                      }\r\n                      reserveSpace={false}\r\n                      noResultsMessage={t(\"noResultsMessage\")}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                      fluid\r\n                      placeholder={t(\"Common_Select\")}\r\n                      label={t(\"MeterCode\")}\r\n                      value={modLoadingDataInfo.TransactionFPinfo.MeterCode}\r\n                      options={getOptionsWithSelect(\r\n                        listOptions.meterCodes,\r\n                        t(\"Common_Select\")\r\n                      )}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"MeterCode\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      search={true}\r\n                      reserveSpace={false}\r\n                      noResultsMessage={t(\"noResultsMessage\")}\r\n                      onSearch={onMeterSearchChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                      fluid\r\n                      placeholder={t(\"Common_Select\")}\r\n                      label={t(\"TankCode\")}\r\n                      value={modLoadingDataInfo.TransactionFPinfo.TankCode}\r\n                      options={getOptionsWithSelect(\r\n                        listOptions.tankCodes,\r\n                        t(\"Common_Select\")\r\n                      )}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"TankCode\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      search={true}\r\n                      reserveSpace={false}\r\n                      noResultsMessage={t(\"noResultsMessage\")}\r\n                      onSearch={onTankSearchChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={\r\n                        modLoadingDataInfo.TransactionFPinfo.StartTotalizer\r\n                      }\r\n                      label={t(\"StartTotalizer\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\r\n                          \"StartTotalizer\",\r\n                          data,\r\n                          { type: \"TransactionFPinfo\" },\r\n                          { category: \"product\", index: 0 }\r\n                        )\r\n                      }\r\n                      error={t(validationErrors.product[0].StartTotalizer)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={modLoadingDataInfo.TransactionFPinfo.EndTotalizer}\r\n                      label={t(\"EndTotalizer\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\r\n                          \"EndTotalizer\",\r\n                          data,\r\n                          { type: \"TransactionFPinfo\" },\r\n                          { category: \"product\", index: 0 }\r\n                        )\r\n                      }\r\n                      error={t(validationErrors.product[0].EndTotalizer)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={\r\n                        modLoadingDataInfo.TransactionFPinfo.NetStartTotalizer\r\n                      }\r\n                      label={t(\"MarineReceiptManualEntry_NetStartTotalizer\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\r\n                          \"NetStartTotalizer\",\r\n                          data,\r\n                          { type: \"TransactionFPinfo\" },\r\n                          { category: \"product\", index: 0 }\r\n                        )\r\n                      }\r\n                      error={t(validationErrors.product[0].NetStartTotalizer)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={\r\n                        modLoadingDataInfo.TransactionFPinfo.NetEndTotalizer\r\n                      }\r\n                      label={t(\"MarineReceiptManualEntry_NetEndTotalizer\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\r\n                          \"NetEndTotalizer\",\r\n                          data,\r\n                          { type: \"TransactionFPinfo\" },\r\n                          { category: \"product\", index: 0 }\r\n                        )\r\n                      }\r\n                      error={t(validationErrors.product[0].NetEndTotalizer)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={\r\n                        modLoadingDataInfo.TransactionFPinfo.CalculatedGross\r\n                      }\r\n                      label={t(\"LoadingDetailsEntry_CalculatedGross\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\r\n                          \"CalculatedGross\",\r\n                          data,\r\n                          { type: \"TransactionFPinfo\" },\r\n                          { category: \"product\", index: 0 }\r\n                        )\r\n                      }\r\n                      error={t(validationErrors.product[0].CalculatedGross)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={modLoadingDataInfo.TransactionFPinfo.CalculatedNet}\r\n                      label={t(\"LoadingDetailsEntry_CalculatedNet\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\r\n                          \"CalculatedNet\",\r\n                          data,\r\n                          { type: \"TransactionFPinfo\" },\r\n                          { category: \"product\", index: 0 }\r\n                        )\r\n                      }\r\n                      error={t(validationErrors.product[0].CalculatedNet)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                      fluid\r\n                      placeholder={t(\"Common_Select\")}\r\n                      label={t(\"LoadingDetails_CalculatedValueUOM\")}\r\n                      value={\r\n                        modLoadingDataInfo.TransactionFPinfo.CalculatedValueUOM\r\n                      }\r\n                      options={listOptions.quantityUOMs}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\r\n                          \"CalculatedValueUOM\",\r\n                          data,\r\n                          { type: \"TransactionFPinfo\" },\r\n                          { category: \"product\", index: 0 }\r\n                        )\r\n                      }\r\n                      reserveSpace={false}\r\n                      noResultsMessage={t(\"noResultsMessage\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {selectedAttributeList[0].length > 0\r\n                  ? selectedAttributeList[0].map((attire) => (\r\n                      <ErrorBoundary>\r\n                        <Accordion>\r\n                          <Accordion.Content\r\n                            className=\"attributeAccordian\"\r\n                            title={t(\"Attributes_Header\")}\r\n                          >\r\n                            <AttributeDetails\r\n                              selectedAttributeList={\r\n                                attire.attributeMetaDataList\r\n                              }\r\n                              handleCellDataEdit={(attribute, value) =>\r\n                                onAttributeCellDataEdit(attribute, value, 0)\r\n                              }\r\n                              attributeValidationErrors={handleValidationErrorFilter(\r\n                                attributeValidationErrorList[0],\r\n                                attire.TerminalCode\r\n                              )}\r\n                            />\r\n                          </Accordion.Content>\r\n                        </Accordion>\r\n                      </ErrorBoundary>\r\n                    ))\r\n                  : null}\r\n              </Tab.Pane>\r\n              {tabPaneList}\r\n            </Tab>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { Button, Modal, Checkbox } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport lodash from \"lodash\";\r\nimport * as wjChart from \"@grapecity/wijmo.react.chart\";\r\nimport * as wjcCore from \"@grapecity/wijmo\";\r\nwjcCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nRailDispatchViewAuditTrailDetails.propTypes = {\r\n  modRailDispatch: PropTypes.object.isRequired,\r\n  auditTrailList: PropTypes.array.isRequired,\r\n  modalData: PropTypes.object.isRequired,\r\n  onModalDataChange: PropTypes.func.isRequired,\r\n  Attributes: PropTypes.array.isRequired,\r\n  onPrint: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function RailDispatchViewAuditTrailDetails({\r\n  modRailDispatch,\r\n  auditTrailList,\r\n  modalData,\r\n  onModalDataChange,\r\n  Attributes,\r\n  onPrint,\r\n}) {\r\n  const handleAttributeType = (data) => {\r\n    const attribute = data.rowData.AttributesforUI.filter(\r\n      (att) => att.AttributeName === data.name\r\n    )[0];\r\n\r\n    return attribute.DataType.toLowerCase() ===\r\n      Constants.DataType.STRING.toLowerCase() ||\r\n      attribute.DataType.toLowerCase() ===\r\n      Constants.DataType.INT.toLowerCase() ||\r\n      attribute.DataType.toLowerCase() ===\r\n      Constants.DataType.LONG.toLowerCase() ||\r\n      attribute.DataType.toLowerCase() ===\r\n      Constants.DataType.FLOAT.toLowerCase() ? (\r\n      <label>{attribute.AttributeValue}</label>\r\n    ) : attribute.DataType.toLowerCase() ===\r\n      Constants.DataType.BOOL.toLowerCase() ? (\r\n      <Checkbox\r\n        checked={\r\n          attribute.AttributeValue.toString().toLowerCase() === \"true\"\r\n            ? true\r\n            : false\r\n        }\r\n        disabled={true}\r\n      ></Checkbox>\r\n    ) : (\r\n      <label>{new Date(attribute.AttributeValue).toLocaleDateString()}</label>\r\n    );\r\n  };\r\n\r\n  const formatter = (engine, label) => {\r\n    label.cls = null;\r\n    engine.fontSize = \"7px\";\r\n    label.text =\r\n      Constants.Shipment_Status[\r\n      Utilities.getKeyByValue(Constants.ShipmentStatus, label.val)\r\n      ];\r\n    return label;\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row marginRightZero tableScroll\">\r\n            <div className=\"col-12 detailsTable container-fluid\">\r\n              <wjChart.FlexChart\r\n                itemsSource={auditTrailList}\r\n                chartType=\"Line\"\r\n                bindingX=\"UpdatedTime\"\r\n                palette={[\"red\"]}\r\n                style={{ width: \"100%\", minWidth: \"800px\", height: \"450px\" }}\r\n              >\r\n                <wjChart.FlexChartLegend position=\"Bottom\" />\r\n                <wjChart.FlexChartAxis\r\n                  wjProperty=\"axisY\"\r\n                  majorUnit={1}\r\n                  max={16}\r\n                  min={0}\r\n                  itemFormatter={formatter}\r\n                  axisLine={true}\r\n                />\r\n                <wjChart.FlexChartSeries\r\n                  binding=\"DispatchStatusInNumber\"\r\n                  name={t(\"RailDispatchPlanDetail_RailStatus\")}\r\n                />\r\n              </wjChart.FlexChart>\r\n            </div>\r\n          </div>\r\n          <div className=\"row marginRightZero tableScroll\">\r\n            <div className=\"col-12 detailsTable\" id=\"printTable\">\r\n              <DataTable data={auditTrailList}>\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"DispatchCode\"\r\n                  field=\"DispatchCode\"\r\n                  header={t(\"RailDispatchPlanDetail_DispatchCode\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"DispatchStatus\"\r\n                  field=\"DispatchStatus\"\r\n                  header={t(\"RailDispatchPlanDetail_RailStatus\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"TrailerCode\"\r\n                  field=\"TrailerCode\"\r\n                  header={t(\"Rail_Receipt_Wagon\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"CarrierCompanyCode\"\r\n                  field=\"CarrierCompanyCode\"\r\n                  header={t(\"Rail_Receipt_Carrier\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"DispatchCompartmentStatus\"\r\n                  field=\"DispatchCompartmentStatus\"\r\n                  header={t(\"Rail_Wagon_Status\")}\r\n                  renderer={(cellData) => {\r\n                    if (cellData.value !== null) {\r\n                      return Utilities.getKeyByValue(\r\n                        Constants.ShipmentCompartmentStatus,\r\n                        cellData.value\r\n                      );\r\n                    }\r\n                  }}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"UserPIN\"\r\n                  field=\"UserPIN\"\r\n                  header={t(\"PIN\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"UpdatedTime\"\r\n                  field=\"UpdatedTime\"\r\n                  header={t(\"SAAuditTrial_UpdatedTime\")}\r\n                // renderer={(cellData) => {\r\n                //   return new Date(cellData.value).toLocaleString()\r\n                // }}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"OfficerName\"\r\n                  field=\"OfficerName\"\r\n                  header={t(\"ViewAuditTrail_OfficerName\")}\r\n                />\r\n                {Attributes.map((att) => {\r\n                  return (\r\n                    <DataTable.Column\r\n                      className=\"compColHeight colminWidth\"\r\n                      header={t(att.AttributeName)}\r\n                      editable={false}\r\n                      renderer={handleAttributeType}\r\n                    ></DataTable.Column>\r\n                  );\r\n                })}\r\n              </DataTable>\r\n            </div>\r\n          </div>\r\n\r\n          <Modal\r\n            open={modalData.printAuditTrail.isOpen}\r\n            closeOnDimmerClick={false}\r\n            className=\"marineModalPrint\"\r\n          >\r\n            <Modal.Content>\r\n              <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n                <h3>\r\n                  {modRailDispatch.DispatchCode +\r\n                    \" - \" +\r\n                    t(\"Transaction_AuditTrail_Heading\")}\r\n                </h3>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-10 container-fluid\">\r\n                  <wjChart.FlexChart\r\n                    itemsSource={auditTrailList}\r\n                    chartType=\"Line\"\r\n                    bindingX=\"UpdatedTime\"\r\n                    palette={[\"red\"]}\r\n                    style={{ width: \"100%\", height: \"450px\" }}\r\n                  >\r\n                    <wjChart.FlexChartLegend position=\"Bottom\" />\r\n                    <wjChart.FlexChartAxis\r\n                      wjProperty=\"axisY\"\r\n                      majorUnit={1}\r\n                      max={16}\r\n                      min={0}\r\n                      itemFormatter={formatter}\r\n                      axisLine={true}\r\n                    />\r\n                    <wjChart.FlexChartSeries\r\n                      binding=\"DispatchStatusInNumber\"\r\n                      name={t(\"RailDispatchPlanDetail_RailStatus\")}\r\n                    />\r\n                  </wjChart.FlexChart>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 detailsTable\">\r\n                <DataTable data={auditTrailList}>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"DispatchCode\"\r\n                    field=\"DispatchCode\"\r\n                    header={t(\"RailDispatchPlanDetail_DispatchCode\")}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"DispatchStatus\"\r\n                    field=\"DispatchStatus\"\r\n                    header={t(\"RailDispatchPlanDetail_RailStatus\")}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"TrailerCode\"\r\n                    field=\"TrailerCode\"\r\n                    header={t(\"Rail_Receipt_Wagon\")}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"CarrierCompanyCode\"\r\n                    field=\"CarrierCompanyCode\"\r\n                    header={t(\"Rail_Receipt_Carrier\")}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"DispatchCompartmentStatus\"\r\n                    field=\"DispatchCompartmentStatus\"\r\n                    header={t(\"Rail_Wagon_Status\")}\r\n                    renderer={(cellData) => {\r\n                      if (cellData.value !== null) {\r\n                        return Utilities.getKeyByValue(\r\n                          Constants.ShipmentCompartmentStatus,\r\n                          cellData.value\r\n                        );\r\n                      }\r\n                    }}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"UserPIN\"\r\n                    field=\"UserPIN\"\r\n                    header={t(\"PIN\")}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"UpdatedTime\"\r\n                    field=\"UpdatedTime\"\r\n                    header={t(\"SAAuditTrial_UpdatedTime\")}\r\n                  // renderer={(cellData) => {\r\n                  //   return new Date(cellData.value).toLocaleString()\r\n                  // }}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"OfficerName\"\r\n                    field=\"OfficerName\"\r\n                    header={t(\"ViewAuditTrail_OfficerName\")}\r\n                  />\r\n                  {Attributes.map((att) => {\r\n                    return (\r\n                      <DataTable.Column\r\n                        className=\"compColHeight\"\r\n                        header={t(att.AttributeName)}\r\n                        editable={false}\r\n                        renderer={handleAttributeType}\r\n                      ></DataTable.Column>\r\n                    );\r\n                  })}\r\n                </DataTable>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"ViewAuditTrail_Print\")}\r\n                onClick={() => {\r\n                  onPrint(\r\n                    modRailDispatch.DispatchCode +\r\n                    \" - \" +\r\n                    t(\"ViewRailDispatchList_ViewAuditTrail\")\r\n                  );\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"AccessCardInfo_Cancel\")}\r\n                onClick={() => {\r\n                  const modModalData = lodash.cloneDeep(modalData);\r\n                  modModalData.printAuditTrail.isOpen = false;\r\n                  onModalDataChange(modModalData);\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nRailDispatchViewLoadingDetailsDetails.propTypes = {\r\n  loadingDetailsList: PropTypes.array,\r\n  hideColumnList: PropTypes.array,\r\n};\r\n\r\nexport function RailDispatchViewLoadingDetailsDetails({\r\n  loadingDetailsList,\r\n  hideColumnList,\r\n}) {\r\n  const columnDisplaySetting = {\r\n    BCUCode: true,\r\n    BaseProductCode: true,\r\n    BayCode: true,\r\n    CalculatedGross: true,\r\n    CalculatedNet: true,\r\n    CalculatedValueUOM: true,\r\n    CarrierCode: true,\r\n    CompartmentSeqNoInVehicle: true,\r\n    Density: true,\r\n    EndTime: true,\r\n    EndTotalizer: true,\r\n    EndWeightInAir: true,\r\n    EndWeightInVacuum: true,\r\n    GeneralTMUserID: true,\r\n    GrossQuantity: true,\r\n    IsBonded: true,\r\n    IsBonded1: true,\r\n    Mass: true,\r\n    MeterCode: true,\r\n    Netendtotalizer: true,\r\n    NetQuantity: true,\r\n    Netstarttotalizer: true,\r\n    OfficerID: true,\r\n    PresetQuantity: true,\r\n    Pressure: true,\r\n    ProductCategoryType: true,\r\n    ProductCode: true,\r\n    ReferenceDensity: true,\r\n    Remarks: true,\r\n    StartTime: true,\r\n    StartTotalizer: true,\r\n    StartWeightInAir: true,\r\n    TankCode: true,\r\n    Temperature: true,\r\n    TrailerCode: true,\r\n    TransactionID: true,\r\n    WeighInAir: true,\r\n    WeightInVacuum: true,\r\n    resetQuantity: true,\r\n  };\r\n  for (let item of hideColumnList) {\r\n    if (columnDisplaySetting[item] !== undefined) {\r\n      columnDisplaySetting[item] = false;\r\n    }\r\n  }\r\n\r\n  const convertNumberWithUOM = (quantityString) => {\r\n    try {\r\n      if (\r\n        quantityString === null ||\r\n        quantityString === undefined ||\r\n        quantityString === \" \"\r\n      ) {\r\n        return \"\";\r\n      }\r\n      const quantityList = quantityString.split(\" \", 2);\r\n      if (quantityList.length !== 2) {\r\n        return \"\";\r\n      }\r\n      if (quantityList[0] === \"\") {\r\n        return \"\";\r\n      }\r\n      return (\r\n        parseFloat(quantityList[0]).toLocaleString() + \" \" + quantityList[1]\r\n      );\r\n    } catch (error) {\r\n      console.log(\"Error in convertNumberWithUOM  : \" + quantityString);\r\n      return quantityString;\r\n    }\r\n  };\r\n  const changeNoSpaceNumber = (e) => {\r\n    const { value } = e;\r\n    if (value != null && value !== \"\") {\r\n      return value.toLocaleString();\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"detailsTable loadingTable\">\r\n              <DataTable\r\n                data={loadingDetailsList}\r\n                scrollable={true}\r\n                resizableColumns={true}\r\n              >\r\n                {columnDisplaySetting.CompartmentSeqNoInVehicle ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"CompartmentSeqNoInVehicle\"\r\n                    field=\"CompartmentSeqNoInVehicle\"\r\n                    header={t(\"ViewRailLoadingDetails_SequenceNo\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.TrailerCode ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"160px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"TrailerCode\"\r\n                    field=\"TrailerCode\"\r\n                    header={t(\"ViewRailLoadingDetails_RailWagonCode\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.CarrierCode ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"160px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"CarrierCode\"\r\n                    field=\"CarrierCode\"\r\n                    header={t(\"ViewRailLoadingDetails_CarrierCompany\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.ProductCode ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"ProductCode\"\r\n                    field=\"ProductCode\"\r\n                    header={t(\"ViewRailLoadingDetails_ProductCode\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.BaseProductCode ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"160px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"BaseProductCode\"\r\n                    field=\"BaseProductCode\"\r\n                    header={t(\"ViewRailLoadingDetails_BaseProductCode\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.TankCode ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"TankCode\"\r\n                    field=\"TankCode\"\r\n                    header={t(\"ViewRailLoadingDetails_TankCode\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.BayCode ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"BayCode\"\r\n                    field=\"BayCode\"\r\n                    header={t(\"ViewRailLoadingDetails_BayCode\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.BCUCode ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"BCUCode\"\r\n                    field=\"BCUCode\"\r\n                    header={t(\"ViewRailLoadingDetails_BCUCode\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.MeterCode ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"MeterCode\"\r\n                    field=\"MeterCode\"\r\n                    header={t(\"ViewRailLoadingDetails_MeterCode\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.GrossQuantity ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"GrossQuantity\"\r\n                    field=\"GrossQuantity\"\r\n                    renderer={(cellData) =>\r\n                      convertNumberWithUOM(cellData.value)\r\n                    }\r\n                    header={t(\"ViewRailLoadingDetails_GrossQuantity\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.NetQuantity ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"NetQuantity\"\r\n                    field=\"NetQuantity\"\r\n                    renderer={(cellData) =>\r\n                      convertNumberWithUOM(cellData.value)\r\n                    }\r\n                    header={t(\"ViewRailLoadingDetails_NetQuantity\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.Density ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"Density\"\r\n                    field=\"Density\"\r\n                    renderer={(cellData) =>\r\n                      convertNumberWithUOM(cellData.value)\r\n                    }\r\n                    header={t(\"ViewRailLoadingDetails_Density\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.Pressure ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"Pressure\"\r\n                    field=\"Pressure\"\r\n                    renderer={(cellData) =>\r\n                      convertNumberWithUOM(cellData.value)\r\n                    }\r\n                    header={t(\"ViewRailLoadingDetails_Pressure\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.Temperature ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"Temperature\"\r\n                    field=\"Temperature\"\r\n                    renderer={(cellData) =>\r\n                      convertNumberWithUOM(cellData.value)\r\n                    }\r\n                    header={t(\"ViewRailLoadingDetails_Temperature\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.Mass ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"Mass\"\r\n                    field=\"Mass\"\r\n                    header={t(\"ViewRailLoadingDetails_Mass\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.StartTime ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"200px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"StartTime\"\r\n                    field=\"StartTime\"\r\n                    header={t(\"ViewRailLoadingDetails_StartTime\")}\r\n                    renderer={(cellData) => {\r\n                      return (\r\n                        new Date(cellData.value).toLocaleDateString() +\r\n                        \" \" +\r\n                        new Date(cellData.value).toLocaleTimeString()\r\n                      );\r\n                    }}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.EndTime ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"200px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"EndTime\"\r\n                    field=\"EndTime\"\r\n                    header={t(\"ViewRailLoadingDetails_EndTime\")}\r\n                    renderer={(cellData) => {\r\n                      return (\r\n                        new Date(cellData.value).toLocaleDateString() +\r\n                        \" \" +\r\n                        new Date(cellData.value).toLocaleTimeString()\r\n                      );\r\n                    }}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.StartTotalizer ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"StartTotalizer\"\r\n                    field=\"StartTotalizer\"\r\n                    renderer={(celldata) => changeNoSpaceNumber(celldata)}\r\n                    header={t(\"ViewRailLoadingDetails_StartTotalizer\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.EndTotalizer ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"EndTotalizer\"\r\n                    field=\"EndTotalizer\"\r\n                    renderer={(celldata) => changeNoSpaceNumber(celldata)}\r\n                    header={t(\"ViewRailLoadingDetails_EndTotalizer\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.TransactionID ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"160px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"TransactionID\"\r\n                    field=\"TransactionID\"\r\n                    header={t(\"ViewRailLoadingDetails_TransactionNo\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.ReferenceDensity ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"ReferenceDensity\"\r\n                    field=\"ReferenceDensity\"\r\n                    renderer={(cellData) =>\r\n                      convertNumberWithUOM(cellData.value)\r\n                    }\r\n                    header={t(\"ViewRailLoadingDetails_ReferenceDensity\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.Remarks ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"Remarks\"\r\n                    field=\"Remarks\"\r\n                    header={t(\"ViewRailLoadingDetails_Remarks\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.PresetQuantity ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"PresetQuantity\"\r\n                    field=\"PresetQuantity\"\r\n                    renderer={(cellData) =>\r\n                      convertNumberWithUOM(cellData.value)\r\n                    }\r\n                    header={t(\"ViewRailLoadingDetails_PresetQuantity\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.resetQuantity ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"resetQuantity\"\r\n                    field=\"resetQuantity\"\r\n                    renderer={(cellData) =>\r\n                      convertNumberWithUOM(cellData.value)\r\n                    }\r\n                    header={t(\"ViewRailLoadingDetails_resetQuantity\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.Netstarttotalizer ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"NetStartTotalizer\"\r\n                    field=\"NetStartTotalizer\"\r\n                    header={t(\"ViewRailLoadingDetails_netstarttotalizer\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.NetEndtoTalizer ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"NetEndtoTalizer\"\r\n                    field=\"NetEndtoTalizer\"\r\n                    header={t(\"ViewRailLoadingDetails_netendtotalizer\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.WeightInAir ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"WeightInAir\"\r\n                    field=\"WeightInAir\"\r\n                    renderer={(cellData) =>\r\n                      convertNumberWithUOM(cellData.value)\r\n                    }\r\n                    header={t(\"ViewRailLoadingDetails_WeightInAir\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.WeightInVacuum ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"WeightInVacuum\"\r\n                    field=\"WeightInVacuum\"\r\n                    renderer={(cellData) =>\r\n                      convertNumberWithUOM(cellData.value)\r\n                    }\r\n                    header={t(\"ViewRailLoadingDetails_WeightInVacuum\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.IsBonded ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"90px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"IsBonded\"\r\n                    field=\"IsBonded\"\r\n                    header={t(\"ViewRailLoadingDetails_IsBonded\")}\r\n                    renderer={(cellData) => {\r\n                      if (cellData.value) {\r\n                        return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n                      } else {\r\n                        return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n                      }\r\n                    }}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.CalculatedGross ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"CalculatedGross\"\r\n                    field=\"CalculatedGross\"\r\n                    header={t(\"ViewRailLoadingDetails_CalculatedGross\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.CalculatedNet ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"CalculatedNet\"\r\n                    field=\"CalculatedNet\"\r\n                    header={t(\"ViewRailLoadingDetails_CalculatedNet\")}\r\n                  />\r\n                ) : null}\r\n                {columnDisplaySetting.CalculatedValueUOM ? (\r\n                  <DataTable.Column\r\n                    initialWidth=\"130px\"\r\n                    className=\"compColHeight\"\r\n                    key=\"CalculatedValueUOM\"\r\n                    field=\"CalculatedValueUOM\"\r\n                    header={t(\"ViewRailLoadingDetails_CalculatedValueUOM\")}\r\n                  />\r\n                ) : null}\r\n              </DataTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { DataTable } from '@scuf/datatable';\r\nimport { Select, Icon, Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport lodash from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../../../CSS/hseConfiguration.css\";\r\n\r\nRailDispatchRailWagonAssignmentDetails.propTypes = {\r\n  listOptions: PropTypes.shape({\r\n    carrierCodes: PropTypes.array,\r\n    trailerCodes: PropTypes.array\r\n  }).isRequired,\r\n  modRailWagonList: PropTypes.array.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  selectedRow: PropTypes.array.isRequired,\r\n  onSelectionChange: PropTypes.func.isRequired,\r\n  onAssignWagon: PropTypes.func.isRequired,\r\n  onDeleteWagon: PropTypes.func.isRequired,\r\n  onMoveWagon: PropTypes.func.isRequired,\r\n  onReverseSelect: PropTypes.func.isRequired\r\n}\r\n\r\nexport function RailDispatchRailWagonAssignmentDetails({\r\n  listOptions,\r\n  modRailWagonList,\r\n  data,\r\n  onFieldChange,\r\n  selectedRow,\r\n  onSelectionChange,\r\n  onAssignWagon,\r\n  onDeleteWagon,\r\n  onMoveWagon,\r\n  onReverseSelect\r\n}) {\r\n  const wagonOptionsFilter = () => {\r\n    let newOptions = lodash.cloneDeep(listOptions.trailerCodes);\r\n    for (let item of modRailWagonList) {\r\n      newOptions = newOptions.filter((optionItem) => {\r\n        return !(item.TrailerCode === optionItem.value && item.CarrierCompanyCode === data.CarrierCompanyCode)\r\n      })\r\n    }\r\n    return newOptions;\r\n  }\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"WagonList_CarrierCompany\")}\r\n                value={data.CarrierCode}\r\n                onChange={(data) => onFieldChange(\"CarrierCompanyCode\", data)}\r\n                options={listOptions.carrierCodes}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                className=\"selectDropwdown\"\r\n                label={t(\"RailWagonSeqInfo_RailWagonCode\")}\r\n                value={data.TrailerCode}\r\n                fluid\r\n                options={wagonOptionsFilter()}\r\n                onChange={(data) => onFieldChange(\"TrailerCode\", data)}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Button\r\n                className=\"hse-configuration-button\"\r\n                content={t(\"RailWagonSeqInfo_Assigned\")}\r\n                onClick={onAssignWagon}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row compartmentRow\">\r\n            <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n              {/* <h4>{t(\"RailDispatchPlanDetail_PlanHeader\")}</h4> */}\r\n            </div>\r\n            <div className=\"col col-md-4 col-lg-3 col-xl-3\">\r\n              <div className=\"compartmentIconContainer\">\r\n                <div onClick={() => onMoveWagon(true)} className=\"compartmentIcon\">\r\n                  <div>\r\n                    <Icon root=\"common\" name=\"arrow-up\" size=\"medium\" />\r\n                  </div>\r\n                  <div className=\"margin_l10\">\r\n                    <h5 className=\"font14\">{t(\"RailWagonSeqInfo_MoveUp\")}</h5>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div onClick={() => onMoveWagon(false)} className=\"compartmentIcon margin_l30\">\r\n                  <div>\r\n                    <Icon root=\"common\" name=\"arrow-down\" size=\"medium\" />\r\n                  </div>\r\n                  <div className=\"margin_l10\">\r\n                    <h5 className=\"font14\">{t(\"RailWagonSeqInfo_MoveDown\")}</h5>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div onClick={onReverseSelect} className=\"compartmentIcon margin_l30\">\r\n                  <div>\r\n                    <Icon root=\"common\" name=\"arrow-left-and-right\" size=\"medium\" />\r\n                  </div>\r\n                  <div className=\"margin_l10\">\r\n                    <h5 className=\"font14\">{t(\"RailWagonSeqInfo_Reverse\")}</h5>\r\n                  </div>\r\n                </div>\r\n\r\n                <div onClick={onDeleteWagon} className=\"compartmentIcon margin_l30\">\r\n                  <div>\r\n                    <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n                  </div>\r\n                  <div className=\"margin_l10\">\r\n                    <h5 className=\"font14\">{t(\"RailWagonSeqInfo_DeAssign\")}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-12 detailsTable\">\r\n              <DataTable\r\n                data={modRailWagonList}\r\n                selectionMode=\"multiple\"\r\n                selection={selectedRow}\r\n                onSelectionChange={onSelectionChange}\r\n              >\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"SequenceNo\"\r\n                  field=\"SequenceNo\"\r\n                  header={t(\"RailRouteConfigurationDetails_Sequence\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"TrailerCode\"\r\n                  field=\"TrailerCode\"\r\n                  header={t(\"ViewRailLoadingDetails_RailWagonCode\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"CarrierCompanyCode\"\r\n                  field=\"CarrierCompanyCode\"\r\n                  header={t(\"ViewRailLoadingDetails_CarrierCompany\")}\r\n                />\r\n              </DataTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  )\r\n}","import React from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { DatePicker, Input, Select, Icon, Checkbox } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { handleIsRequiredCompartmentCell } from \"../../../JS/functionalUtilities\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\n\r\nRailDispatchProductAssignmentDetails.propTypes = {\r\n  listOptions: PropTypes.shape({\r\n    shareholderCodes: PropTypes.array,\r\n    contractCodes: PropTypes.array,\r\n    finishedProductCodes: PropTypes.array,\r\n    customerDestinations: PropTypes.array,\r\n  }).isRequired,\r\n  modRailWagonList: PropTypes.array.isRequired,\r\n  onCellDataEdit: PropTypes.func.isRequired,\r\n  createdFromEntity: PropTypes.number.isRequired,\r\n};\r\n\r\nexport function RailDispatchProductAssignmentDetails({\r\n  listOptions,\r\n  modRailWagonList,\r\n  onCellDataEdit,\r\n  createdFromEntity,\r\n  expandedRows,\r\n  toggleExpand,\r\n  onCompAttributeCellDataEdit,\r\n  railLookUpData,\r\n  compartmentDetailsPageSize,\r\n  isEnterpriseNode,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  const handleCustomEditDropDown = (cellData, dropDownOptions) => {\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        value={modRailWagonList[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownOptions}\r\n        onChange={(value) => onCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleCustomEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={modRailWagonList[cellData.rowIndex][cellData.field]}\r\n        onChange={(value) => onCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleCustomerEditDropDown = (cellData) => {\r\n    let customerOptions = [];\r\n    if (\r\n      listOptions.customerDestinations[cellData.rowData[\"ShareholderCode\"]] !==\r\n        undefined &&\r\n      listOptions.customerDestinations[cellData.rowData[\"ShareholderCode\"]] !==\r\n        null\r\n    ) {\r\n      Object.keys(\r\n        listOptions.customerDestinations[cellData.rowData[\"ShareholderCode\"]]\r\n      ).forEach((customer) =>\r\n        customerOptions.push({ text: customer, value: customer })\r\n      );\r\n    }\r\n    return handleCustomEditDropDown(cellData, customerOptions);\r\n  };\r\n\r\n  const handleDestinationEditDropDown = (cellData) => {\r\n    let destinationOptions = [];\r\n    if (\r\n      listOptions.customerDestinations[cellData.rowData[\"ShareholderCode\"]] !==\r\n        undefined &&\r\n      listOptions.customerDestinations[cellData.rowData[\"ShareholderCode\"]] !==\r\n        null\r\n    ) {\r\n      if (\r\n        listOptions.customerDestinations[cellData.rowData[\"ShareholderCode\"]][\r\n          cellData.rowData.CustomerCode\r\n        ] !== undefined &&\r\n        Array.isArray(\r\n          listOptions.customerDestinations[cellData.rowData[\"ShareholderCode\"]][\r\n            cellData.rowData.CustomerCode\r\n          ]\r\n        )\r\n      ) {\r\n        listOptions.customerDestinations[cellData.rowData[\"ShareholderCode\"]][\r\n          cellData.rowData.CustomerCode\r\n        ].forEach((destination) =>\r\n          destinationOptions.push({ text: destination, value: destination })\r\n        );\r\n      }\r\n    }\r\n    return handleCustomEditDropDown(cellData, destinationOptions);\r\n  };\r\n\r\n  const handleProductEditDropDown = (cellData) => {\r\n    const finishedProductOptions = [];\r\n    if (\r\n      listOptions.finishedProductCodes !== undefined &&\r\n      listOptions.finishedProductCodes !== null\r\n    ) {\r\n      if (\r\n        listOptions.finishedProductCodes[cellData.rowData.ShareholderCode] !==\r\n          undefined &&\r\n        Array.isArray(\r\n          listOptions.finishedProductCodes[cellData.rowData.ShareholderCode]\r\n        )\r\n      ) {\r\n        listOptions.finishedProductCodes[\r\n          cellData.rowData.ShareholderCode\r\n        ].forEach((productCode) =>\r\n          finishedProductOptions.push({ text: productCode, value: productCode })\r\n        );\r\n      }\r\n    }\r\n    return handleCustomEditDropDown(cellData, finishedProductOptions);\r\n  };\r\n\r\n  const decimalDisplayValues = (cellData) => {\r\n    const { value } = cellData;\r\n    if (typeof value === \"number\") {\r\n      return value.toLocaleString();\r\n    } else {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  const expanderTemplate = (data) => {\r\n    const open =\r\n      expandedRows.findIndex(\r\n        (item) => item.SequenceNo === data.rowData.SequenceNo\r\n      ) >= 0\r\n        ? true\r\n        : false;\r\n    return (\r\n      <div\r\n        onClick={() => toggleExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        <span>{open ? t(\"Hide_Attributes\") : t(\"View_Attributes\")}</span>\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"caret-up\" : \"caret-down\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleIsRequiredCompAttributes = (data) => {\r\n    return data.rowData.IsMandatory ? (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n        <div className=\"ui red circular empty label badge  circle-padding\" />\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleAttributeType = (data) => {\r\n    const attribute = data.rowData;\r\n    try {\r\n      return attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.STRING.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => onCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.INT.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => onCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.FLOAT.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.LONG.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.DOUBLE.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n            attribute.AttributeValue === undefined ||\r\n            attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : attribute.AttributeValue.toLocaleString()\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => onCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.BOOL.toLowerCase() ? (\r\n        <Checkbox\r\n          checked={\r\n            attribute.AttributeValue.toString().toLowerCase() === \"true\"\r\n              ? true\r\n              : false\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => onCompAttributeCellDataEdit(data, value)}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.DATETIME.toLowerCase() ? (\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n            attribute.AttributeValue === undefined ||\r\n            attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : new Date(attribute.AttributeValue)\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          showYearSelector=\"true\"\r\n          onChange={(value) => onCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : null;\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetails: Error occurred on handleAttributeType\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  const rowExpansionTemplate = (data) => {\r\n    return Array.isArray(data.AttributesForUI) &&\r\n      data.AttributesForUI.length > 0 ? (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable\r\n          data={data.AttributesForUI}\r\n          rows={compartmentDetailsPageSize}\r\n        >\r\n          {isEnterpriseNode ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"TerminalCode\"\r\n              field=\"TerminalCode\"\r\n              header={t(\"CompartmentTerminal\")}\r\n              editable={false}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"AttributeName\"\r\n            header={t(\"CompartmentAttributeName\")}\r\n            renderer={handleIsRequiredCompAttributes}\r\n            editable={false}\r\n          />\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            header={t(\"CompartmentAttributeValue\")}\r\n            renderer={handleAttributeType}\r\n          />\r\n          {Array.isArray(data.AttributesforUI) &&\r\n          data.AttributesforUI.length > compartmentDetailsPageSize ? (\r\n            <DataTable.Pagination />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </DataTable>\r\n      </div>\r\n    ) : (\r\n      <div className=\"compartmentIcon\">\r\n        <div className=\"gridButtonAlignLeft\">\r\n          {t(\"CustomerInventory_NoRecordsFound\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 detailsTable\">\r\n              <DataTable\r\n                data={modRailWagonList}\r\n                rowExpansionTemplate={rowExpansionTemplate}\r\n                expandedRows={expandedRows}\r\n              >\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"SequenceNo\"\r\n                  field=\"SequenceNo\"\r\n                  header={t(\"RailRouteConfigurationDetails_Sequence\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"TrailerCode\"\r\n                  field=\"TrailerCode\"\r\n                  header={t(\"ViewRailLoadingDetails_RailWagonCode\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"CarrierCompanyCode\"\r\n                  field=\"CarrierCompanyCode\"\r\n                  header={t(\"ViewRailLoadingDetails_CarrierCompany\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"ShareholderCode\"\r\n                  field=\"ShareholderCode\"\r\n                  header={handleIsRequiredCompartmentCell(\r\n                    t(\"RailDispatchPlanDetail_ShareHolderCode\")\r\n                  )}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditDropDown(\r\n                      cellData,\r\n                      listOptions.shareholderCodes\r\n                    )\r\n                  }\r\n                />\r\n                {createdFromEntity === 2 ? (\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"ContractCode\"\r\n                    field=\"ContractCode\"\r\n                    header={handleIsRequiredCompartmentCell(\r\n                      t(\"RailDispatchPlanDetail_ContractCode\")\r\n                    )}\r\n                    editable={true}\r\n                    editFieldType=\"text\"\r\n                    customEditRenderer={(cellData) =>\r\n                      handleCustomEditDropDown(\r\n                        cellData,\r\n                        listOptions.contractCodes\r\n                      )\r\n                    }\r\n                  />\r\n                ) : null}\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"FinishedProductCode\"\r\n                  field=\"FinishedProductCode\"\r\n                  header={handleIsRequiredCompartmentCell(\r\n                    t(\"ViewRailDispatchList_FinishedProductCode\")\r\n                  )}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleProductEditDropDown(cellData)\r\n                  }\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"CustomerCode\"\r\n                  field=\"CustomerCode\"\r\n                  header={handleIsRequiredCompartmentCell(\r\n                    t(\"ViewRailDispatchList_Customer\")\r\n                  )}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomerEditDropDown(cellData)\r\n                  }\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"DestinationCode\"\r\n                  field=\"DestinationCode\"\r\n                  header={handleIsRequiredCompartmentCell(\r\n                    t(\"ViewRailDispatchList_DestinationCode\")\r\n                  )}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleDestinationEditDropDown(cellData)\r\n                  }\r\n                />\r\n                {railLookUpData.PlanType === \"1\" ? (\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"Quantity\"\r\n                    field=\"Quantity\"\r\n                    header={handleIsRequiredCompartmentCell(\r\n                      t(\"RailDispatchPlanDetail_Quantity\")\r\n                    )}\r\n                    editable={true}\r\n                    editFieldType=\"text\"\r\n                    renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                    customEditRenderer={handleCustomEditTextBox}\r\n                  />\r\n                ) : null}\r\n                <DataTable.Column\r\n                  className=\"expandedColumn\"\r\n                  initialWidth=\"200px\"\r\n                  renderer={expanderTemplate}\r\n                />\r\n              </DataTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { Input, Select } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { handleIsRequiredCompartmentCell } from \"../../../JS/functionalUtilities\";\r\n\r\nRailDispatchLoadSpotAssignmentDetails.propTypes = {\r\n  listOptions: PropTypes.shape({\r\n    spurCodes: PropTypes.array,\r\n    clusterCodes: PropTypes.array,\r\n    BCUCodes: PropTypes.array\r\n  }).isRequired,\r\n  modRailWagonBatchPlanList: PropTypes.array,\r\n  onCellDataEdit: PropTypes.func.isRequired,\r\n  onAuthorize: PropTypes.func.isRequired\r\n}\r\n\r\nexport function RailDispatchLoadSpotAssignmentDetails({\r\n  listOptions,\r\n  modRailWagonBatchPlanList,\r\n  onCellDataEdit,\r\n  onAuthorize,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  const handleCustomEditDropDown = (cellData, dropDownOptions) => {\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        value={modRailWagonBatchPlanList[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownOptions}\r\n        onChange={(value) => onCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleCustomEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={modRailWagonBatchPlanList[cellData.rowIndex][cellData.field]}\r\n        onChange={(value) => onCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  const buttonInDataTable = (cellData) => {\r\n    return (\r\n      <div className={\"compartmentIconContainer\" + (cellData.value ? \" gridButtonFontColor\" : \"\")}>\r\n        <div onClick={() => onAuthorize(cellData.rowData)} className=\"compartmentIcon\">\r\n          <div className=\"margin_l10\">\r\n            <h5 className=\"font14\">{t(\"RailDispatchPlanInfo_Authorize\")}</h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const decimalDisplayValues = (cellData) => {\r\n    const { value } = cellData;\r\n    if (typeof value === \"number\") {\r\n      return value.toLocaleString();\r\n    } else {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 detailsTable\">\r\n              <DataTable data={modRailWagonBatchPlanList}>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"RailWagonCode\"\r\n                  field=\"RailWagonCode\"\r\n                  header={t(\"ViewRailLoadingDetails_RailWagonCode\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"CarrierCompanyCode\"\r\n                  field=\"CarrierCompanyCode\"\r\n                  header={t(\"ViewRailLoadingDetails_CarrierCompany\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"FinishedProduct\"\r\n                  field=\"FinishedProduct\"\r\n                  header={t(\"ViewRailDispatchList_FinishedProductCode\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"PresetQuantity\"\r\n                  field=\"PresetQuantity\"\r\n                  header={t(\"RailDispatchTrainAssignment_PresetQuantity\")}\r\n                  renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"SpurCode\"\r\n                  field=\"SpurCode\"\r\n                  header={handleIsRequiredCompartmentCell(t(\"Spur_Code\"))}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditDropDown(cellData, listOptions.spurCodes)\r\n                  }\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"ClusterCode\"\r\n                  field=\"ClusterCode\"\r\n                  header={handleIsRequiredCompartmentCell(t(\"RailDispatchManualEntry_Cluster\"))}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditDropDown(cellData, listOptions.clusterCodes)\r\n                  }\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"BCUCode\"\r\n                  field=\"BCUCode\"\r\n                  header={handleIsRequiredCompartmentCell(t(\"ViewRailLoadingDetails_BCUCode\"))}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditDropDown(cellData, listOptions.BCUCodes)\r\n                  }\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"ArmNoInBCU\"\r\n                  field=\"ArmNoInBCU\"\r\n                  header={handleIsRequiredCompartmentCell(t(\"LoadingArmInfo_ArmNoInBCU\"))}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                  customEditRenderer={handleCustomEditTextBox}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"LoadingSequenceNo\"\r\n                  field=\"LoadingSequenceNo\"\r\n                  header={handleIsRequiredCompartmentCell(t(\"RailDispatchLoadSpotAssign_LoadingSeq\"))}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                  customEditRenderer={handleCustomEditTextBox}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"ReturnQuantity\"\r\n                  field=\"ReturnQuantity\"\r\n                  header={handleIsRequiredCompartmentCell(t(\"ViewRailReceiptList_ReturnQuantity\"))}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                  customEditRenderer={handleCustomEditTextBox}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"AllowAuthorize\"\r\n                  field=\"AllowAuthorize\"\r\n                  renderer={(cellData) => buttonInDataTable(cellData)}\r\n                />\r\n              </DataTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { DatePicker, Input, Select, Checkbox } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nRailDispatchRecordWeightDetails.propTypes = {\r\n  modWeightBridgeData: PropTypes.array.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    weightBridges: PropTypes.array,\r\n  }).isRequired,\r\n  onCellDataEdit: PropTypes.func.isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n};\r\nRailDispatchRecordWeightDetails.defaultProps = {};\r\n\r\nexport function RailDispatchRecordWeightDetails({\r\n  modWeightBridgeData,\r\n  listOptions,\r\n  onCellDataEdit,\r\n  onDateTextChange\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  const handleCustomEditDropDown = (cellData, dropDownOptions) => {\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        value={modWeightBridgeData[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownOptions}\r\n        onChange={(value) => onCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  \r\n   \r\n  const handleCustomEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={modWeightBridgeData[cellData.rowIndex][cellData.field]}\r\n        onChange={(value) => onCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n  \r\n\r\n\r\n  const handleCustomEditDateSelect = (cellData) => {\r\n    return (\r\n      <DatePicker\r\n        fluid\r\n        value={\r\n          modWeightBridgeData[cellData.rowIndex][\r\n            cellData.field\r\n          ] === null\r\n            ? \"\"\r\n            : new Date(\r\n              modWeightBridgeData[cellData.rowIndex][\r\n              cellData.field\r\n              ]\r\n            )\r\n        }\r\n        type=\"datetime\"\r\n        minuteStep={5}\r\n        displayFormat={getCurrentDateFormat()}\r\n        indicator=\"required\"\r\n        disableFuture={true}\r\n        onChange={(value) => onCellDataEdit(value, cellData)}\r\n        onTextChange={(value, error) => {\r\n          onDateTextChange(cellData, value, error);\r\n        }}\r\n        reserveSpace={false}\r\n      ></DatePicker>\r\n    );\r\n  };\r\n\r\n  \r\n  const dateDisplayValues = (cellData) => {\r\n    const { value } = cellData;\r\n    return value !== null ? new Date(value).toLocaleDateString() + \" \" + new Date(value).toLocaleTimeString() : \"\";\r\n  };\r\n\r\n  const handleReceiptEdiCheckbox = (cellData) => {\r\n    return (\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <Checkbox\r\n          style={{ textAlign: \"center\" }}\r\n          fluid\r\n          checked={modWeightBridgeData[cellData.rowIndex][cellData.field]}\r\n          onChange={(value) => onCellDataEdit(value, cellData)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  const decimalDisplayValues = (cellData) => {\r\n    const { value } = cellData;\r\n    if (typeof value === \"number\") {\r\n      return value.toLocaleString();\r\n    } else {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 detailsTable\">\r\n              <DataTable\r\n                data={modWeightBridgeData}\r\n                editable={true}\r\n              >\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"WagonCode\"\r\n                  field=\"WagonCode\"\r\n                  header={t(\"Rail_Wagon_Code\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"FinishedProductCode\"\r\n                  field=\"FinishedProductCode\"\r\n                  header={t(\"Receipt_Product\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"TareWeight\"\r\n                  field=\"TareWeight\"\r\n                  header={t(\"RailWagonConfigurationDetails_TareWeight\")}\r\n                  editable={true}\r\n                  editFieldType=\"number\"\r\n                  renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                  customEditRenderer={handleCustomEditTextBox}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"TareWeightUOM\"\r\n                  field=\"TareWeightUOM\"\r\n                  header={t(\"ViewReceiptStatus_QuantityUOM\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"TareWeightWeightBridgeCode\"\r\n                  field=\"TareWeightWeightBridgeCode\"\r\n                  header={t(\"weighBridge_tare\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditDropDown(cellData, listOptions.weightBridges)\r\n                  }\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"TareWeightOperatorOverWritten\"\r\n                  field=\"TareWeightOperatorOverWritten\"\r\n                  header={t(\"Operator_OverWrite_Tare\")}\r\n                  renderer={(cellData) => handleReceiptEdiCheckbox(cellData)}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"LadenWeight\"\r\n                  field=\"LadenWeight\"\r\n                  header={t(\"PCDET_Planning_gvLadenWeight\")}\r\n                  editable={true}\r\n                  editFieldType=\"number\"\r\n                  renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                  customEditRenderer={handleCustomEditTextBox}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"LadenWeightUOM\"\r\n                  field=\"LadenWeightUOM\"\r\n                  header={t(\"ViewReceiptStatus_QuantityUOM\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"LadenWeightWeightBridgeCode\"\r\n                  field=\"LadenWeightWeightBridgeCode\"\r\n                  header={t(\"weighBridge_Laden\")}\r\n                  editable={true}\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditDropDown(cellData, listOptions.weightBridges)\r\n                  }\r\n                />\r\n                  <DataTable.Column\r\n                        className=\"compColHeight\"\r\n                        key=\"StartTime\"\r\n                        field=\"StartTime\"\r\n                        displayFormat={getCurrentDateFormat()}\r\n                        header={t(\"LoadingDetails_StartTime\")}\r\n                        editable={true}\r\n                        renderer={(cellData) => dateDisplayValues(cellData)}\r\n                        customEditRenderer={(cellData) =>\r\n                          handleCustomEditDateSelect(cellData)\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight\"\r\n                        key=\"EndTime\"\r\n                        field=\"EndTime\"\r\n                        displayFormat={getCurrentDateFormat()}\r\n                        header={t(\"LoadingDetails_EndTime\")}\r\n                        editable={true}\r\n                        renderer={(cellData) => dateDisplayValues(cellData)}\r\n                        customEditRenderer={(cellData) =>\r\n                          handleCustomEditDateSelect(cellData)\r\n                        }\r\n                      ></DataTable.Column>\r\n\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"LadenWeightOperatorOverWritten\"\r\n                  field=\"LadenWeightOperatorOverWritten\"\r\n                  header={t(\"Operator_OverWrite_Laden\")}\r\n                  renderer={(cellData) => handleReceiptEdiCheckbox(cellData)}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"LoadingType\"\r\n                  field=\"LoadingType\"\r\n                  header={t(\"Bay_LoadType\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                />\r\n              </DataTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { RailDispatchDetails } from \"../../UIBase/Details/RailDispatchDetails\";\r\nimport { RailDispatchCompartmentManualEntryDetails } from \"../../UIBase/Details/RailDispatchCompartmentManualEntryDetails\";\r\nimport { RailDispatchViewAuditTrailDetails } from \"../../UIBase/Details/RailDispatchViewAuditTrailDetails\";\r\nimport { RailDispatchViewLoadingDetailsDetails } from \"../../UIBase/Details/RailDispatchViewLoadingDetailsDetails\";\r\nimport { RailDispatchRailWagonAssignmentDetails } from \"../../UIBase/Details/RailDispatchRailWagonAssignmentDetails\";\r\nimport { RailDispatchProductAssignmentDetails } from \"../../UIBase/Details/RailDispatchProductAssignmentDetails\";\r\nimport { RailDispatchLoadSpotAssignmentDetails } from \"../../UIBase/Details/RailDispatchLoadSpotAssignmentDetails\";\r\nimport { RailDispatchRecordWeightDetails } from \"../../UIBase/Details/RailDispatchRecordWeightDetails\";\r\n\r\nimport {\r\n  railDispatchPlanAttributeEntity,\r\n  railDispatchItemAttributeEntity,\r\n  railDispatchStatusChangeAttributeEntity,\r\n  railDispatchWagonAttributeEntity,\r\n  railDispatchWagonDetailPlanAttributeEntity,\r\n  railDispatchWagonWeightBridgeAttributeEntity,\r\n  railDispatchWagonCompAttributeEntity,\r\n  railLoadingDetailsFPAttributeEntity,\r\n  railLoadingDetailsBPAttributeEntity,\r\n  railLoadingDetailsAdditiveAttributeEntity,\r\n  MARINEDISPATCHSTATUSTIME,\r\n} from \"../../../JS/AttributeEntity\";\r\n\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport {\r\n  railDispatchValidationDef,\r\n  railDispatchCompartmentManualEntryValidationDef,\r\n} from \"../../../JS/ValidationDef\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport {\r\n  emptyRailDispatch,\r\n  emptyRailMarineTransactionCommonInfo,\r\n  emptyRailMarineTransactionProductInfo,\r\n} from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"./../../../Components/ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"./../../../JS/KeyCodes\";\r\nimport { functionGroups, fnRailDispatch, fnKPIInformation,\r\n  fnRailDispatchLoadSpotAssignment,\r\n  fnRailDispatchProductAssignment,\r\n  fnViewRailLoadingDetails,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport lodash from \"lodash\";\r\nimport {\r\n  railDispatchCompartmentDef,\r\n  railDispatchLoadSpotAssignmentDef,\r\n  railDispatchCompartmentAdjustmentDef,\r\n} from \"../../../JS/DetailsTableValidationDef\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button, Modal } from \"@scuf/common\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { kpiRailShipmentDetails } from \"../../../JS/KPIPageName\";\r\n\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nimport CommonConfirmModal from \"../../UIBase/Common/CommonConfirmModal\"\r\n\r\nclass RailDispatchDetailsComposite extends Component {\r\n  state = {\r\n    railDispatch: lodash.cloneDeep(emptyRailDispatch),\r\n    modRailDispatch: {},\r\n    modAssociations: [],\r\n    modWagonDetails: [],\r\n    loadingDataInfo: {},\r\n    modLoadingDataInfo: {},\r\n    dispatchStatusChangeList: [],\r\n    auditTrailList: [],\r\n    loadingDetailsList: [],\r\n    weightBridgeData: [],\r\n    modWeightBridgeData: [],\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      railDispatchValidationDef\r\n    ),\r\n    manualEntryValidationDict: {},\r\n    isReadyToRender: false,\r\n    shareholders: this.getShareholders(),\r\n    terminalCodes: [],\r\n    railWagonCategoryOptions: [],\r\n    contractCodeOptions: [],\r\n    quantityUOMOptions: [],\r\n    densityUOMOptions: [],\r\n    temperatureUOMOptions: [],\r\n    routeCodeOptions: [],\r\n    routeCodeSearchOptions: [],\r\n    finishedProductOptions: {},\r\n    customerDestinationOptions: {},\r\n    weightBridgeOptions: [],\r\n    weightBridgeSetting: {},\r\n    expandedRows: [],\r\n    expandedWagonRows: [],\r\n\r\n    attribute: [],\r\n    attributeMetaDataList: [],\r\n    compartmentAttributeMetaDataList: [],\r\n    selectedAttributeList: [],\r\n    attributeValidationErrors: [],\r\n\r\n    productAssignmentExpandedRows: [],\r\n    wagonDetailPlanAttributeMetaDataList: [],\r\n\r\n    meterCodeOptions: [],\r\n    meterCodeSearchOptions: [],\r\n    tankCodeOptions: [],\r\n    tankCodeSearchOptions: [],\r\n    wagonCodeOptions: [],\r\n    clusterCodeOptions: [],\r\n    clusterBCUOptions: {},\r\n    BCUCodeOptions: [],\r\n    loadingArmCodeOptions: [],\r\n    compartmentManualEntrySaveEnabled: false,\r\n    recordWeightSaveEnabled: false,\r\n\r\n    FPAttributeMetaDataList: [],\r\n    BPAttributeMetaDataList: [],\r\n    additiveAttributeMetaDataList: [],\r\n    manualEntrySelectedAttributeList: [],\r\n    manualEntryAttributeValidationErrorList: [],\r\n    auditTrailAttributeMetaDataList: [],\r\n\r\n    carrierCodeOptions: [],\r\n    trailerCodeOptions: [],\r\n    railWagonAssignmentData: {\r\n      CarrierCompanyCode: \"\",\r\n      TrailerCode: \"\",\r\n    },\r\n    modRailWagonList: [],\r\n    selectedRailWagons: [],\r\n    railWagonAssignmentSaveEnabled: false,\r\n    productAssignmentSaveEnabled: false,\r\n    loadSpotAssignmentSaveEnabled: false,\r\n    railWagonBatchPlanList: [],\r\n    modRailWagonBatchPlanList: [],\r\n    spurCodeOptions: [],\r\n    loadSpotClusterCodeOptions: [],\r\n    loadSpotBCUCodeOptions: [],\r\n\r\n    selectedAssociations: [],\r\n    railRouteData: {\r\n      DestinationCode: \"\",\r\n      DepartureTime: \"\",\r\n    },\r\n    isOpenSubPage: false,\r\n    saveEnabled: false,\r\n    compartmentSaveEnabled: false,\r\n    tabActiveIndex: 0,\r\n    manualEntryTabActiveIndex: 0,\r\n    loadingDetailsHideColumnList: [],\r\n    modalData: {\r\n      forceCompleteCompartment: {\r\n        isOpen: false,\r\n        data: {\r\n          trailerCode: \"\",\r\n        },\r\n      },\r\n      printAuditTrail: {\r\n        isOpen: false,\r\n      },\r\n    },\r\n    contractData: [],\r\n    railDispatchKPIList: [],\r\n    maxNumberOfCompartments: 60,\r\n    showAuthenticationLayout: false,\r\n    showWagonAssignmentAuthenticationLayout: false,\r\n    showProductAssignmentAuthenticationLayout: false,\r\n    showLoadSpotAssignmentAuthenticationLayout: false,\r\n    showManualEntryAuthenticationLayout: false,\r\n    tempRailDispatch: {},\r\n    tempLoadingInfo: {},\r\n    isShowMultipleSpurs:false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getUOMs();\r\n      this.getRailRouteCodes();\r\n      this.getRailWagonCategory();\r\n      this.getFinishedProductCodes();\r\n      this.getCustomerDestinations();\r\n      this.getTankCode(this.props.selectedShareholder);\r\n      this.getMeterCode();\r\n      this.getRailBayAndBcuList();\r\n      this.getRailLoadSpotDevices(\"\", \"SPUR\");\r\n      this.getCarrierCompanyCodes(\"\");\r\n      this.getWeightBridgeData();\r\n      this.getContractCodes(this.props.selectedShareholder);\r\n      this.getAttributes(() => this.getRailDispatch(this.props.selectedRow));\r\n      this.getMaxCompartments();\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite:Error occurred on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (nextProps.subPageName !== this.props.subPageName) {\r\n        this.handleOpenSubPage(nextProps.subPageName);\r\n      } else if (\r\n        (this.state.railDispatch.DispatchCode !== \"\" &&\r\n          nextProps.selectedRow.Common_Code === undefined) ||\r\n        nextProps.selectedRow.ViewRailDispatchDetails_ShipmentStatus !==\r\n        this.props.selectedRow.ViewRailDispatchDetails_ShipmentStatus\r\n      ) {\r\n        this.getRailDispatch(nextProps.selectedRow, true);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite:Error occurred on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(callBack) {\r\n    const obj = [\r\n      railDispatchPlanAttributeEntity,\r\n      railDispatchItemAttributeEntity,\r\n      railDispatchStatusChangeAttributeEntity,\r\n      railDispatchWagonAttributeEntity,\r\n      railDispatchWagonDetailPlanAttributeEntity,\r\n      railDispatchWagonWeightBridgeAttributeEntity,\r\n      railDispatchWagonCompAttributeEntity,\r\n      railLoadingDetailsFPAttributeEntity,\r\n      railLoadingDetailsBPAttributeEntity,\r\n      railLoadingDetailsAdditiveAttributeEntity,\r\n      MARINEDISPATCHSTATUSTIME,\r\n    ];\r\n    axios(\r\n      RestAPIs.GetAttributesMetaData,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.RAILDISPATCHPLAN\r\n              ),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.RAILDISPATCHPLAN\r\n                ),\r\n              compartmentAttributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.RAILDISPATCHITEM\r\n              ),\r\n              wagonDetailPlanAttributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.RAILDISPATCHWAGONDETAILPLAN\r\n              ),\r\n              FPAttributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.RAILLOADINGDETAILSFP\r\n              ),\r\n              BPAttributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.RAILLOADINGDETAILSBP\r\n              ),\r\n              additiveAttributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.RAILLOADINGDETAILSADDITIVE\r\n              ),\r\n              auditTrailAttributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.MARINEDISPATCHSTATUSTIME\r\n              ),\r\n            },\r\n            () => callBack()\r\n          );\r\n        } else {\r\n          console.log(\"Failed to get Attributes\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getAttributes: \", error);\r\n      });\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals == null) {\r\n        selectedTerminals = [];\r\n      }\r\n      const attributesTerminalsList = [];\r\n\r\n      const attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      let selectedAttributeList = lodash.cloneDeep(\r\n        this.state.selectedAttributeList\r\n      );\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      const modRailDispatch = lodash.cloneDeep(this.state.modRailDispatch);\r\n\r\n      for (let terminal of selectedTerminals) {\r\n        const existItem = selectedAttributeList.find((selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        });\r\n\r\n        if (existItem === undefined) {\r\n          for (let item of attributeMetaDataList) {\r\n            if (item.TerminalCode === terminal) {\r\n              const attributeValue = modRailDispatch.Attributes.find(\r\n                (attribute) => {\r\n                  return attribute.TerminalCode === terminal;\r\n                }\r\n              );\r\n              if (attributeValue !== undefined) {\r\n                item.attributeMetaDataList.forEach((attributeMetaData) => {\r\n                  const valueAttribute =\r\n                    attributeValue.ListOfAttributeData.find((data) => {\r\n                      return data.AttributeCode === attributeMetaData.Code;\r\n                    });\r\n                  if (valueAttribute !== undefined) {\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                  }\r\n                });\r\n              }\r\n              attributesTerminalsList.push(item);\r\n            }\r\n          }\r\n        } else {\r\n          attributesTerminalsList.push(existItem);\r\n        }\r\n      }\r\n\r\n      selectedAttributeList = Utilities.attributesConvertoDecimal(\r\n        attributesTerminalsList\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        const existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          for (let key in attributeValidation.attributeValidationErrors) {\r\n            attributeValidation.attributeValidationErrors[key] = \"\";\r\n          }\r\n        }\r\n      });\r\n\r\n      this.formCompartmentAttributes(selectedTerminals);\r\n      this.formProductAssignmentAttributes(selectedTerminals);\r\n\r\n      this.setState({ selectedAttributeList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      const attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (Array.isArray(attributeMetaDataList) && attributeMetaDataList.length > 0) {\r\n        this.terminalSelectionChange([attributeMetaDataList[0].TerminalCode]);\r\n      } else {\r\n        const compAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.compartmentAttributeMetaDataList\r\n        );\r\n        if (Array.isArray(compAttributeMetaDataList) && compAttributeMetaDataList.length > 0) {\r\n          this.formCompartmentAttributes([\r\n            compAttributeMetaDataList[0].TerminalCode,\r\n          ]);\r\n        }\r\n\r\n        const wagonDetailPlanAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.wagonDetailPlanAttributeMetaDataList\r\n        );\r\n        if (Array.isArray(wagonDetailPlanAttributeMetaDataList) && wagonDetailPlanAttributeMetaDataList.length > 0) {\r\n          this.formProductAssignmentAttributes([\r\n            wagonDetailPlanAttributeMetaDataList[0].TerminalCode,\r\n          ]);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  formCompartmentAttributes(selectedTerminals) {\r\n    try {\r\n      const attributes = this.state.compartmentAttributeMetaDataList.filter(\r\n        (attTerminal) => {\r\n          return selectedTerminals.some((selTerminal) => {\r\n            return attTerminal.TerminalCode === selTerminal;\r\n          });\r\n        }\r\n      );\r\n      const modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n      let compAttributes = [];\r\n      attributes.forEach((item) => {\r\n        item.attributeMetaDataList.forEach((attribute) => {\r\n          compAttributes.push({\r\n            AttributeCode: attribute.Code,\r\n            AttributeName: attribute.DisplayName,\r\n            AttributeValue: attribute.DefaultValue,\r\n            TerminalCode: attribute.TerminalCode,\r\n            IsMandatory: attribute.IsMandatory,\r\n            DataType: attribute.DataType,\r\n            IsReadonly: attribute.IsReadonly,\r\n            MinValue: attribute.MinValue,\r\n            MaxValue: attribute.MaxValue,\r\n            ValidationFormat: attribute.ValidationFormat,\r\n            compSequenceNo: \"\",\r\n          });\r\n        });\r\n      });\r\n      modAssociations.forEach((comp) => {\r\n        let attributesForNewComp = lodash.cloneDeep(compAttributes);\r\n        if (\r\n          comp.SeqNumber === null &&\r\n          (comp.AttributesForUI === undefined || comp.AttributesForUI === null)\r\n        ) {\r\n          comp.AttributesForUI = [];\r\n          attributesForNewComp.forEach((assignedAttributes) => {\r\n            assignedAttributes.compSequenceNo = comp.SeqNumber;\r\n            comp.AttributesForUI.push(assignedAttributes);\r\n          });\r\n        } else {\r\n          if (\r\n            comp.AttributesForUI !== undefined &&\r\n            comp.AttributesForUI !== null\r\n          ) {\r\n            comp.AttributesForUI = comp.AttributesForUI.filter(\r\n              (attTerminal) => {\r\n                return selectedTerminals.some((selTerminal) => {\r\n                  return attTerminal.TerminalCode === selTerminal;\r\n                });\r\n              }\r\n            );\r\n\r\n            attributesForNewComp = attributesForNewComp.filter(\r\n              (attTerminal) => {\r\n                return !comp.AttributesForUI.some((selTerminal) => {\r\n                  return attTerminal.TerminalCode === selTerminal.TerminalCode;\r\n                });\r\n              }\r\n            );\r\n          } else {\r\n            comp.AttributesForUI = [];\r\n          }\r\n\r\n          const tempCompAttributes = lodash.cloneDeep(attributesForNewComp);\r\n          if (\r\n            comp.Attributes !== undefined &&\r\n            comp.Attributes !== null &&\r\n            Array.isArray(comp.Attributes) &&\r\n            comp.Attributes.length > 0\r\n          ) {\r\n            const selectedTerminalAttributes = comp.Attributes.filter(\r\n              (attTerminal) => {\r\n                return selectedTerminals.some((selTerminal) => {\r\n                  return attTerminal.TerminalCode === selTerminal;\r\n                });\r\n              }\r\n            );\r\n            selectedTerminalAttributes.forEach((att) => {\r\n              att.ListOfAttributeData.forEach((attData) => {\r\n                const tempAttIndex = tempCompAttributes.findIndex((item) => {\r\n                  return (\r\n                    item.TerminalCode === att.TerminalCode &&\r\n                    item.AttributeCode === attData.AttributeCode\r\n                  );\r\n                });\r\n                if (tempAttIndex >= 0) {\r\n                  tempCompAttributes[tempAttIndex].AttributeValue =\r\n                    attData.AttributeValue;\r\n                }\r\n              });\r\n            });\r\n            tempCompAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo = comp.SeqNumber;\r\n              comp.AttributesForUI.push(assignedAttributes);\r\n            });\r\n          } else {\r\n            attributesForNewComp.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo = comp.SeqNumber;\r\n              comp.AttributesForUI.push(assignedAttributes);\r\n            });\r\n          }\r\n        }\r\n        this.toggleExpand(comp, true, true);\r\n        comp.AttributesForUI = Utilities.compartmentAttributesConvertoDecimal(\r\n          comp.AttributesForUI\r\n        );\r\n        comp.AttributesforUI = Utilities.addSeqNumberToListObject(\r\n          comp.AttributesforUI\r\n        );\r\n      });\r\n      this.setState({ modAssociations });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error in forming Compartment Attributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  formProductAssignmentAttributes(selectedTerminals) {\r\n    try {\r\n      const attributes = this.state.wagonDetailPlanAttributeMetaDataList.filter(\r\n        (attTerminal) => {\r\n          return selectedTerminals.some((selTerminal) => {\r\n            return attTerminal.TerminalCode === selTerminal;\r\n          });\r\n        }\r\n      );\r\n      const modRailWagonList = lodash.cloneDeep(this.state.modRailWagonList);\r\n      let compAttributes = [];\r\n      attributes.forEach((item) => {\r\n        item.attributeMetaDataList.forEach((attribute) => {\r\n          compAttributes.push({\r\n            AttributeCode: attribute.Code,\r\n            AttributeName: attribute.DisplayName,\r\n            AttributeValue: attribute.DefaultValue,\r\n            TerminalCode: attribute.TerminalCode,\r\n            IsMandatory: attribute.IsMandatory,\r\n            DataType: attribute.DataType,\r\n            IsReadonly: attribute.IsReadonly,\r\n            MinValue: attribute.MinValue,\r\n            MaxValue: attribute.MaxValue,\r\n            ValidationFormat: attribute.ValidationFormat,\r\n            compSequenceNo: \"\",\r\n          });\r\n        });\r\n      });\r\n      modRailWagonList.forEach((comp) => {\r\n        let attributesForNewComp = lodash.cloneDeep(compAttributes);\r\n        if (\r\n          comp.SequenceNo === null &&\r\n          (comp.AttributesForUI === undefined || comp.AttributesForUI === null)\r\n        ) {\r\n          comp.AttributesForUI = [];\r\n          attributesForNewComp.forEach((assignedAttributes) => {\r\n            assignedAttributes.compSequenceNo = comp.SequenceNo;\r\n            comp.AttributesForUI.push(assignedAttributes);\r\n          });\r\n        } else {\r\n          if (\r\n            comp.AttributesForUI !== undefined &&\r\n            comp.AttributesForUI !== null\r\n          ) {\r\n            comp.AttributesForUI = comp.AttributesForUI.filter(\r\n              (attTerminal) => {\r\n                return selectedTerminals.some((selTerminal) => {\r\n                  return attTerminal.TerminalCode === selTerminal;\r\n                });\r\n              }\r\n            );\r\n\r\n            attributesForNewComp = attributesForNewComp.filter(\r\n              (attTerminal) => {\r\n                return !comp.AttributesForUI.some((selTerminal) => {\r\n                  return attTerminal.TerminalCode === selTerminal.TerminalCode;\r\n                });\r\n              }\r\n            );\r\n          } else {\r\n            comp.AttributesForUI = [];\r\n          }\r\n\r\n          const tempCompAttributes = lodash.cloneDeep(attributesForNewComp);\r\n          if (\r\n            comp.Attributes !== undefined &&\r\n            comp.Attributes !== null &&\r\n            Array.isArray(comp.Attributes) &&\r\n            comp.Attributes.length > 0\r\n          ) {\r\n            const selectedTerminalAttributes = comp.Attributes.filter(\r\n              (attTerminal) => {\r\n                return selectedTerminals.some((selTerminal) => {\r\n                  return attTerminal.TerminalCode === selTerminal;\r\n                });\r\n              }\r\n            );\r\n            selectedTerminalAttributes.forEach((att) => {\r\n              att.ListOfAttributeData.forEach((attData) => {\r\n                const tempAttIndex = tempCompAttributes.findIndex((item) => {\r\n                  return (\r\n                    item.TerminalCode === att.TerminalCode &&\r\n                    item.AttributeCode === attData.AttributeCode\r\n                  );\r\n                });\r\n                if (tempAttIndex >= 0) {\r\n                  tempCompAttributes[tempAttIndex].AttributeValue =\r\n                    attData.AttributeValue;\r\n                }\r\n              });\r\n            });\r\n            tempCompAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo = comp.SequenceNo;\r\n              comp.AttributesForUI.push(assignedAttributes);\r\n            });\r\n          } else {\r\n            attributesForNewComp.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo = comp.SequenceNo;\r\n              comp.AttributesForUI.push(assignedAttributes);\r\n            });\r\n          }\r\n        }\r\n        this.toggleExpand(comp, true, true);\r\n        comp.AttributesForUI = Utilities.compartmentAttributesConvertoDecimal(\r\n          comp.AttributesForUI\r\n        );\r\n        comp.AttributesforUI = Utilities.addSeqNumberToListObject(\r\n          comp.AttributesforUI\r\n        );\r\n      });\r\n      this.setState({ modRailWagonList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error in forming Compartment Attributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  fillAttributeDetails(modRailDispatch, attributeList) {\r\n    try {\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modRailDispatch.Attributes = [];\r\n      attributeList.forEach((comp) => {\r\n        const attribute = {\r\n          ListOfAttributeData: [],\r\n        };\r\n        attribute.TerminalCode = comp.TerminalCode;\r\n        comp.attributeMetaDataList.forEach((det) => {\r\n          attribute.ListOfAttributeData.push({\r\n            AttributeCode: det.Code,\r\n            AttributeValue: det.DefaultValue,\r\n          });\r\n        });\r\n        modRailDispatch.Attributes.push(attribute);\r\n      });\r\n      return modRailDispatch;\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getShareholders() {\r\n    return Utilities.transferListtoOptions(\r\n      this.props.userDetails.EntityResult.ShareholderList\r\n    );\r\n  }\r\n\r\n  getTransportationType() {\r\n    let transportationType = Constants.TransportationType.RAIL;\r\n    const { genericProps } = this.props;\r\n    if (\r\n      genericProps !== undefined &&\r\n      genericProps.transportationType !== undefined\r\n    ) {\r\n      transportationType = genericProps.transportationType;\r\n    }\r\n    return transportationType;\r\n  }\r\n\r\n  getUOMs() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            if (\r\n              Array.isArray(result.EntityResult.VOLUME) &&\r\n              Array.isArray(result.EntityResult.MASS)\r\n            ) {\r\n              const quantityUOMList = [];\r\n              result.EntityResult.VOLUME.forEach((UOM) => {\r\n                quantityUOMList.push(UOM);\r\n              });\r\n              result.EntityResult.MASS.forEach((UOM) => {\r\n                quantityUOMList.push(UOM);\r\n              });\r\n              this.setState({\r\n                quantityUOMOptions:\r\n                  Utilities.transferListtoOptions(quantityUOMList),\r\n              });\r\n            }\r\n            if (Array.isArray(result.EntityResult.DENSITY)) {\r\n              const densityUOMList = [];\r\n              result.EntityResult.DENSITY.forEach((UOM) => {\r\n                densityUOMList.push(UOM);\r\n              });\r\n              this.setState({\r\n                densityUOMOptions:\r\n                  Utilities.transferListtoOptions(densityUOMList),\r\n              });\r\n            }\r\n            if (Array.isArray(result.EntityResult.TEMPERATURE)) {\r\n              const temperatureUOMList = [];\r\n              result.EntityResult.TEMPERATURE.forEach((UOM) => {\r\n                temperatureUOMList.push(UOM);\r\n              });\r\n              this.setState({\r\n                temperatureUOMOptions:\r\n                  Utilities.transferListtoOptions(temperatureUOMList),\r\n              });\r\n            }\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetUOMList: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in GetUOMList: \", error);\r\n      });\r\n  }\r\n\r\n  getRailRouteCodes() {\r\n    axios(\r\n      RestAPIs.GetRailRouteCodes,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            const routeCodeOptions = lodash.cloneDeep(\r\n              this.state.routeCodeOptions\r\n            );\r\n            result.EntityResult.forEach((railRouteCode) => {\r\n              routeCodeOptions.push({\r\n                text: railRouteCode,\r\n                value: railRouteCode,\r\n              });\r\n            });\r\n            let routeCodeSearchOptions = lodash.cloneDeep(routeCodeOptions);\r\n            if (\r\n              routeCodeSearchOptions.length > Constants.filteredOptionsCount\r\n            ) {\r\n              routeCodeSearchOptions = routeCodeSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({ routeCodeOptions, routeCodeSearchOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getRailRouteCodes: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getRailRouteCodes: \", error);\r\n      });\r\n  }\r\n\r\n  getRailWagonCategory() {\r\n    axios(\r\n      RestAPIs.GetRailWagonCategory,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let railWagonCategoryOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ railWagonCategoryOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getRailWagonCategory:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getRailWagonCategory:\", error);\r\n      });\r\n  }\r\n\r\n  getRailWagonCategoryDetails(railWagonCategoryCode, productType, callBack) {\r\n    axios(\r\n      RestAPIs.GetRailWagonCategoryDetails +\r\n      \"?RailWagonCategoryCode=\" +\r\n      railWagonCategoryCode +\r\n      \"&ProductType=\" +\r\n      productType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          callBack(result.EntityResult);\r\n        } else {\r\n          console.log(\"Error in getRailWagonCategory: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getRailWagonCategory: \", error);\r\n      });\r\n  }\r\n\r\n  getRailWagon(trailerCode, carrierCode, shareholderCode, callBack) {\r\n    const obj = {\r\n      ShareHolderCode: shareholderCode,\r\n      keyDataCode: KeyCodes.trailerCode,\r\n      KeyCodes: [\r\n        {\r\n          key: KeyCodes.trailerCode,\r\n          value: trailerCode,\r\n        },\r\n        {\r\n          key: KeyCodes.transportationType,\r\n          value: Constants.TransportationType.RAIL,\r\n        },\r\n        {\r\n          key: KeyCodes.carrierCode,\r\n          value: carrierCode,\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailWagon,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          callBack(result.EntityResult);\r\n        } else {\r\n          console.log(\"Error in GetRailWagon:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting railWagon:\", error);\r\n      });\r\n  }\r\n\r\n  getFinishedProductCodes() {\r\n    axios(\r\n      RestAPIs.GetFinishedProductListForShareholder +\r\n      \"?ShareholderCode=\" +\r\n      \"&TransportationType=\" +\r\n      Constants.TransportationType.RAIL,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            const finishedProductOptions = result.EntityResult;\r\n            this.setState({ finishedProductOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetFinishedProductCodes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while GetFinishedProductCodes List:\", error);\r\n      });\r\n  }\r\n\r\n  getCustomerDestinations() {\r\n    axios(\r\n      RestAPIs.GetCustomerDestinations +\r\n      \"?ShareholderCode=\" +\r\n      \"&TransportationType=\" +\r\n      Constants.TransportationType.RAIL,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (Array.isArray(result.EntityResult)) {\r\n            const customerDestinationOptions = {};\r\n            result.EntityResult.forEach((entity) => {\r\n              customerDestinationOptions[entity.ShareholderCode] =\r\n                entity.CustomerDestinationsList;\r\n            });\r\n            this.setState({ customerDestinationOptions });\r\n          } else {\r\n            console.log(\"CustomerDestinations not identified for shareholder\");\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Customer List:\", error);\r\n      });\r\n  }\r\n\r\n  getTankCode(shareholder) {\r\n    axios(\r\n      RestAPIs.GetTanks + \"?ShareholderCode=\" + shareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            const tankCodeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            let tankCodeSearchOptions = lodash.cloneDeep(tankCodeOptions);\r\n            if (tankCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n              tankCodeSearchOptions = tankCodeSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({\r\n              tankCodeOptions,\r\n              tankCodeSearchOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getTankCode:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getTankCode:\", error);\r\n      });\r\n  }\r\n\r\n  getMeterCode() {\r\n    axios(\r\n      RestAPIs.GetMeters,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            const meterCodeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            let meterCodeSearchOptions = lodash.cloneDeep(meterCodeOptions);\r\n            if (\r\n              meterCodeSearchOptions.length > Constants.filteredOptionsCount\r\n            ) {\r\n              meterCodeSearchOptions = meterCodeSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({\r\n              meterCodeOptions,\r\n              meterCodeSearchOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getMeterCode:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getMeterCode:\", error);\r\n      });\r\n  }\r\n\r\n  getFinishedProduct(finishedProductCode, shareHolderCode, callback) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.finishedProductCode,\r\n        value: finishedProductCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shareHolderCode,\r\n      keyDataCode: KeyCodes.finishedProductCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetFinishedProduct,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess) {\r\n          callback(result.EntityResult);\r\n        } else {\r\n          console.log(\"Error in getFinishedProduct:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Finished Product:\", error);\r\n      });\r\n  }\r\n\r\n  getRailBayAndBcuList() {\r\n    axios(\r\n      RestAPIs.GetRailBayAndBcuList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          const clusterBCUOptions = {};\r\n          const clusterCodeList = [];\r\n          if (\r\n            Array.isArray(result.EntityResult.Table) &&\r\n            result.EntityResult.Table.length > 0\r\n          ) {\r\n            for (let cluster of result.EntityResult.Table) {\r\n              clusterBCUOptions[cluster.Code] = [];\r\n              clusterCodeList.push(cluster.Code);\r\n            }\r\n          }\r\n          if (\r\n            Array.isArray(result.EntityResult.Table1) &&\r\n            result.EntityResult.Table1.length > 0\r\n          ) {\r\n            for (let BCU of result.EntityResult.Table1) {\r\n              if(clusterBCUOptions[BCU.locationCode]!==undefined)\r\n              clusterBCUOptions[BCU.locationCode].push(BCU.Code);\r\n            }\r\n          }\r\n          this.setState({\r\n            clusterBCUOptions,\r\n            clusterCodeOptions:\r\n              Utilities.transferListtoOptions(clusterCodeList),\r\n          });\r\n        } else {\r\n          console.log(\"Error in getRailBayAndBcuList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getRailBayAndBcuList:\", error);\r\n      });\r\n  }\r\n\r\n  getLoadingArms(BCUCode, callback) {\r\n    axios(\r\n      RestAPIs.GetLoadingArms + \"?bcuCode=\" + BCUCode,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          callback(result.EntityResult);\r\n        } else {\r\n          console.log(\"Error in getLoadingArms:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getLoadingArms:\", error);\r\n      });\r\n  }\r\n\r\n  getRailLoadSpot(EntityCode, EntityType, callBack) {\r\n    axios(\r\n      RestAPIs.GetRailLoadSpot +\r\n      \"?EntityCode=\" +\r\n      EntityCode +\r\n      \"&EntityType=\" +\r\n      EntityType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          callBack(result.EntityResult);\r\n        } else {\r\n          console.log(\"Error in getRailLoadSpot: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getRailLoadSpot: \", error);\r\n      });\r\n  }\r\n\r\n  getRailLoadSpotDevices(ParentEntityCode, EntityType) {\r\n    axios(\r\n      RestAPIs.GetRailLoadSpotDevices +\r\n      \"?ParentEntityCode=\" +\r\n      ParentEntityCode +\r\n      \"&EntityType=\" +\r\n      EntityType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true && Array.isArray(result.EntityResult)) {\r\n          if (EntityType === \"SPUR\") {\r\n            this.setState({\r\n              spurCodeOptions: Utilities.transferListtoOptions(\r\n                result.EntityResult\r\n              ),\r\n            });\r\n          } else if (EntityType === \"CLUSTER\") {\r\n            this.setState({\r\n              loadSpotClusterCodeOptions: Utilities.transferListtoOptions(\r\n                result.EntityResult\r\n              ),\r\n            });\r\n          } else if (EntityType === \"BCU\") {\r\n            this.setState({\r\n              loadSpotBCUCodeOptions: Utilities.transferListtoOptions(\r\n                result.EntityResult\r\n              ),\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getRailLoadSpotDevices: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getRailLoadSpotDevices: \", error);\r\n      });\r\n  }\r\n\r\n  getCarrierCompanyCodes(shareholderCode) {\r\n    axios(\r\n      RestAPIs.GetCarrierCodes +\r\n      \"?ShareholderCode=\" +\r\n      shareholderCode +\r\n      \"&TransportationType=\" +\r\n      Constants.TransportationType.RAIL,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            this.setState({\r\n              carrierCodeOptions: Utilities.transferListtoOptions(\r\n                result.EntityResult\r\n              ),\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getCarrierCompanyCodes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Carrier List:\", error);\r\n      });\r\n  }\r\n\r\n  getTrailerCodes(carrierCode) {\r\n    axios(\r\n      RestAPIs.GetRailWagonCodes +\r\n      \"?CarrierCompanyCode=\" +\r\n      carrierCode +\r\n      \"&TransportationType=\" +\r\n      Constants.TransportationType.RAIL,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult.RailWagonList)\r\n          ) {\r\n            this.setState({\r\n              trailerCodeOptions: Utilities.transferListtoOptions(\r\n                result.EntityResult.RailWagonList\r\n              ),\r\n            });\r\n          } else {\r\n            this.setState({ trailerCodeOptions: [] });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getTrailerCodes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getTrailerCodes: \", error);\r\n      });\r\n  }\r\n\r\n  getWeightBridgeData() {\r\n    axios(\r\n      RestAPIs.GetWeightBridgeData +\r\n      \"?TransportationType=\" +\r\n      Constants.TransportationType.RAIL,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult.Table !== undefined &&\r\n            Array.isArray(result.EntityResult.Table)\r\n          ) {\r\n            const weightBridgeList = [];\r\n            const weightBridgeSetting = {};\r\n            for (let item of result.EntityResult.Table) {\r\n              weightBridgeList.push(item.Code);\r\n              weightBridgeSetting[item.Code] = item;\r\n            }\r\n            this.setState({\r\n              weightBridgeOptions:\r\n                Utilities.transferListtoOptions(weightBridgeList),\r\n              weightBridgeSetting,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              weightBridgeOptions: [],\r\n              weightBridgeSetting: {},\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getWeightBridgeData: \", result.ErrorList);\r\n          this.setState({\r\n            weightBridgeOptions: [],\r\n            weightBridgeSetting: {},\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getWeightBridgeData: \", error);\r\n      });\r\n  }\r\n\r\n  getRailDispatchWeighBridgeData(railDispatch, callBack) {\r\n    const keyCode = [\r\n      {\r\n        key: \"TransactionType\",\r\n        value: \"Dispatch\",\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: Constants.TransportationType.RAIL,\r\n      },\r\n      {\r\n        key: \"DispatchReceiptCode\",\r\n        value: railDispatch.DispatchCode,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.railReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailMarineDispatchReceiptWeighBridgeData,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (\r\n          result.IsSuccess === true &&\r\n          result.EntityResult !== null &&\r\n          Array.isArray(result.EntityResult.Table)\r\n        ) {\r\n          this.setState({\r\n            weightBridgeData: result.EntityResult.Table,\r\n            modWeightBridgeData: lodash.cloneDeep(result.EntityResult.Table),\r\n          });\r\n          this.setWagonDetailsFromDispatch(\r\n            railDispatch,\r\n            result.EntityResult.Table,\r\n            callBack\r\n          );\r\n        } else {\r\n          this.setState({\r\n            weightBridgeData: [],\r\n            modWeightBridgeData: [],\r\n          });\r\n          this.setWagonDetailsFromDispatch(railDispatch, [], callBack);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          weightBridgeData: [],\r\n          modWeightBridgeData: [],\r\n        });\r\n        console.log(\r\n          \"Error while getting GetRailMarineDispatchReceiptWeighBridgeData:\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getWagonHseInspectionStatus(dispatchCode, shareholder) {\r\n    axios(\r\n      RestAPIs.GetWagonHseInspectionStatus +\r\n      \"?TransactionType=Dispatch\" +\r\n      \"&DispatchReceiptCode=\" +\r\n      dispatchCode +\r\n      \"&ShareholderCode=\" +\r\n      shareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (\r\n          result.IsSuccess === true ||\r\n          result.EntityResult !== null ||\r\n          Array.isArray(result.EntityResult.Table)\r\n        ) {\r\n          const modWagonDetails = lodash.cloneDeep(this.state.modWagonDetails);\r\n          for (let item of result.EntityResult.Table) {\r\n            for (let wagonDetail of modWagonDetails) {\r\n              if (wagonDetail.TrailerCode === item.Code) {\r\n                wagonDetail.HSEInspectionStatus = item.HseInspectionStatus;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          this.setState({ modWagonDetails });\r\n        } else {\r\n          console.log(\r\n            \"Error in getWagonHseInspectionStatus: \",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getWagonHseInspectionStatus: \", error);\r\n      });\r\n  }\r\n\r\n  getContractCodes(shareholder) {\r\n    axios(\r\n      RestAPIs.GetContractCodes +\r\n      \"?ShareholderCode=\" +\r\n      shareholder +\r\n      \"&TransportationType=\" +\r\n      Constants.TransportationType.RAIL,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true || Array.isArray(result.EntityResult)) {\r\n          this.setState({\r\n            contractCodeOptions: Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            ),\r\n          });\r\n        } else {\r\n          console.log(\"Error in getContractCodes: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getContractCodes: \", error);\r\n      });\r\n  }\r\n\r\n  getRailDispatch(selectedRow, isUpdateOperation = false) {\r\n    const transportationType = this.getTransportationType();\r\n    emptyRailDispatch.TransportationType = transportationType;\r\n    const emptyLoadingDataInfo = {\r\n      CommonInfo: lodash.cloneDeep(emptyRailMarineTransactionCommonInfo),\r\n      TransactionFPinfo: lodash.cloneDeep(\r\n        emptyRailMarineTransactionProductInfo\r\n      ),\r\n      ArrTransactionBP: [],\r\n      ArrTransactionAdditive: [],\r\n      IsLocalLoaded: false,\r\n    };\r\n\r\n    emptyRailDispatch.QuantityUOM =\r\n      this.props.userDetails.EntityResult.PageAttibutes.DefaultQtyUOMForTransactionUI.RAIL;\r\n\r\n    if (selectedRow.Common_Code === undefined) {\r\n      if (this.props.shipmentSource !== undefined) {\r\n        emptyRailDispatch.CreatedFromEntity = this.props.shipmentSource;\r\n      } else emptyRailDispatch.CreatedFromEntity = 0;\r\n      let modAssociations = [];\r\n      if (\r\n        this.props.shipmentSource !== undefined &&\r\n        !this.props.shipmentSourceFromSummary\r\n      ) {\r\n        modAssociations = this.getDispatchCompartmentDetails();\r\n      }\r\n      if (\r\n        this.props.shipmentSource !== undefined &&\r\n        this.props.shipmentSourceFromSummary\r\n      )\r\n        this.getCompartmentFromOtherSource(this.props.selectedSourceCode);\r\n\r\n      this.setState(\r\n        {\r\n          railDispatch: lodash.cloneDeep(emptyRailDispatch),\r\n          modRailDispatch: lodash.cloneDeep(emptyRailDispatch),\r\n          modAssociations: modAssociations,\r\n          loadingDataInfo: lodash.cloneDeep(emptyLoadingDataInfo),\r\n          isReadyToRender: true,\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnRailDispatch\r\n          ),\r\n          compartmentSaveEnabled: false,\r\n          railRouteData: {\r\n            DestinationCode: \"\",\r\n            DepartureTime: \"\",\r\n          },\r\n          expandedWagonRows: [],\r\n          tabActiveIndex: 0,\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode === false) {\r\n            this.localNodeAttribute();\r\n          }\r\n          if (this.state.isOpenSubPage) {\r\n            this.handleSubPageBackOnClick();\r\n          }\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    const keyCode = [\r\n      {\r\n        key: KeyCodes.railDispatchCode,\r\n        value: selectedRow.Common_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: transportationType,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.railDispatchCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailDispatch,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (isUpdateOperation) {\r\n            this.props.onUpdateStatusOperation(result.EntityResult);\r\n          }\r\n          emptyLoadingDataInfo.CommonInfo.LoadingType = Utilities.getKeyByValue(\r\n            Constants.LoadingDetailsType,\r\n            1\r\n          );\r\n          emptyLoadingDataInfo.CommonInfo.TransactionType = \"DISPATCH\";\r\n          emptyLoadingDataInfo.CommonInfo.TransportationType =\r\n            Constants.TransportationType.RAIL;\r\n          emptyLoadingDataInfo.CommonInfo.DispatchCode =\r\n            result.EntityResult.DispatchCode;\r\n          emptyLoadingDataInfo.CommonInfo.IsBonded =\r\n            result.EntityResult.IsBonded;\r\n          // this.props.saveAcutalTerminalCode(\r\n          //   result.EntityResult.ActualTerminalCode\r\n          // );\r\n          this.getRailDispatchWeighBridgeData(result.EntityResult, () => {\r\n            this.getWagonHseInspectionStatus(\r\n              selectedRow.Common_Code,\r\n              this.props.selectedShareholder\r\n            );\r\n            this.setState(\r\n              {\r\n                isReadyToRender: this.props.subPageName === \"\",\r\n                railDispatch: result.EntityResult,\r\n                modRailDispatch: lodash.cloneDeep(result.EntityResult),\r\n                modAssociations: this.getAssociationsFromDispatch(\r\n                  result.EntityResult\r\n                ),\r\n                loadingDataInfo: lodash.cloneDeep(emptyLoadingDataInfo),\r\n                saveEnabled:\r\n                  (Utilities.isInFunction(\r\n                    this.props.userDetails.EntityResult.FunctionsList,\r\n                    functionGroups.modify,\r\n                    fnRailDispatch\r\n                  ) &&\r\n                    result.EntityResult.DispatchStatus ===\r\n                    Constants.Shipment_Status.READY) ||\r\n                  this.props.currentAccess.ViewRailDispatch_Update,\r\n                compartmentSaveEnabled: this.checkCompartmentSaveEnabled(\r\n                  result.EntityResult.DispatchCompartmentPlanList\r\n                ),\r\n                expandedWagonRows: [],\r\n                tabActiveIndex: this.props.isDisplayDetails\r\n                  ? 1\r\n                  : this.state.tabActiveIndex,\r\n              },\r\n              () => {\r\n                this.getKPIList(result.EntityResult.DispatchCode)\r\n                if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                  this.terminalSelectionChange(\r\n                    result.EntityResult.TerminalCodes\r\n                  );\r\n                } else {\r\n                  this.localNodeAttribute();\r\n                }\r\n                if (this.props.subPageName === \"\") {\r\n                  this.getRailRoute(result.EntityResult.RouteCode);\r\n                } else {\r\n                  this.handleOpenSubPage(this.props.subPageName, true);\r\n                }\r\n              }\r\n            );\r\n          });\r\n        } else {\r\n          this.setState({\r\n            railDispatch: lodash.cloneDeep(emptyRailDispatch),\r\n            modRailDispatch: lodash.cloneDeep(emptyRailDispatch),\r\n            loadingDataInfo: lodash.cloneDeep(emptyLoadingDataInfo),\r\n            isReadyToRender: true,\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnRailDispatch\r\n            ),\r\n          });\r\n          console.log(\"Error in railDispatch: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting railDispatch: \", error);\r\n      });\r\n  }\r\n\r\n  getDispatchCompartmentDetails() {\r\n    let dispatchAssociations = [];\r\n    if (\r\n      this.props.shipmentSource !== undefined &&\r\n      !this.props.shipmentSourceFromSummary\r\n    ) {\r\n      let cusCode = this.props.shipmentSourceDetails.CustomerCode;\r\n      if (Array.isArray(this.props.shipmentSourceCompartmentItems)) {\r\n        for (\r\n          let i = 0;\r\n          i < this.props.shipmentSourceCompartmentItems.length;\r\n          i++\r\n        ) {\r\n          let dispatchCompartment = {};\r\n          let item = this.props.shipmentSourceCompartmentItems[i];\r\n          if (item.RemainingQuantity !== null && item.RemainingQuantity > 0) {\r\n            dispatchCompartment = {\r\n              PlannedQuantity:\r\n                item.RemainingQuantity !== null && item.RemainingQuantity !== \"\"\r\n                  ? item.RemainingQuantity.toLocaleString()\r\n                  : null,\r\n              UOM: item.QuantityUOM,\r\n              ContractCode: this.props.shipmentSourceDetails.ContractCode,\r\n              CustomerCode: cusCode,\r\n              DestinationCode: item.DestinationCode,\r\n              FinishedProductCode: item.FinishedProductCode,\r\n              ShareholderCode: this.props.selectedShareholder,\r\n              PlannedNoOfRailWagons: null,\r\n            };\r\n            dispatchAssociations.push(dispatchCompartment);\r\n          }\r\n        }\r\n        dispatchAssociations =\r\n          Utilities.addSeqNumberToListObject(dispatchAssociations);\r\n      }\r\n    } else if (\r\n      this.props.shipmentSource !== undefined &&\r\n      this.props.shipmentSourceFromSummary\r\n    ) {\r\n      let contractData = lodash.cloneDeep(this.state.contractData);\r\n      if (Array.isArray(contractData)) {\r\n        contractData.forEach((data) => {\r\n          let cusCode = data.CustomerCode;\r\n          for (let i = 0; i < data.ContractItems.length; i++) {\r\n            let dispatchCompartment = {};\r\n            let item = data.ContractItems[i];\r\n            if (item.RemainingQuantity !== null && item.RemainingQuantity > 0) {\r\n              dispatchCompartment = {\r\n                PlannedQuantity:\r\n                  item.RemainingQuantity !== null &&\r\n                    item.RemainingQuantity !== \"\"\r\n                    ? item.RemainingQuantity.toLocaleString()\r\n                    : null,\r\n                UOM: item.QuantityUOM,\r\n                ContractCode: data.ContractCode,\r\n                CustomerCode: cusCode,\r\n                DestinationCode: item.DestinationCode,\r\n                FinishedProductCode: item.FinishedProductCode,\r\n                ShareholderCode: this.props.selectedShareholder,\r\n                PlannedNoOfRailWagons: null,\r\n              };\r\n              dispatchAssociations.push(dispatchCompartment);\r\n            }\r\n          }\r\n        });\r\n        dispatchAssociations =\r\n          Utilities.addSeqNumberToListObject(dispatchAssociations);\r\n        this.setState({ modAssociations: dispatchAssociations });\r\n      }\r\n    }\r\n    return dispatchAssociations;\r\n  }\r\n\r\n  getCompartmentFromOtherSource(items) {\r\n    var obj = [];\r\n    var shCode = this.props.selectedShareholder;\r\n    items.forEach((code) => {\r\n      var keyData = {\r\n        keyDataCode: 0,\r\n        ShareHolderCode: shCode,\r\n        KeyCodes: [{ Key: KeyCodes.contractCode, Value: code }],\r\n      };\r\n      obj.push(keyData);\r\n    });\r\n\r\n    axios(\r\n      RestAPIs.GetContractList,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    ).then((response) => {\r\n      let result = response.data;\r\n      if (result.IsSuccess === true) {\r\n        this.setState({ contractData: result.EntityResult }, () => {\r\n          this.getDispatchCompartmentDetails();\r\n        });\r\n      } else {\r\n        this.setState({ contractData: [] });\r\n      }\r\n    });\r\n  }\r\n\r\n  checkManualEntryEnabled(wagonDetails) {\r\n    for (let item of wagonDetails) {\r\n      if (\r\n        item.DispatchCompartmentStatus ===\r\n        Constants.ShipmentCompartmentStatus.EMPTY ||\r\n        item.DispatchCompartmentStatus ===\r\n        Constants.ShipmentCompartmentStatus.PART_FILLED ||\r\n        item.DispatchCompartmentStatus ===\r\n        Constants.ShipmentCompartmentStatus.INTERRUPTED\r\n      ) {\r\n        return item.TrailerCode;\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  checkCompartmentSaveEnabled(compartmentPlanList) {\r\n    if (compartmentPlanList === null) {\r\n      return false;\r\n    }\r\n    for (let item of compartmentPlanList) {\r\n      const adjustedQtyEnable = !(\r\n        this.props.currentAccess.ViewRailDispatch_EditAccess === false ||\r\n        item.DispatchCompartmentStatus ===\r\n        Constants.ShipmentCompartmentStatus.LOADING ||\r\n        item.DispatchCompartmentStatus ===\r\n        Constants.ShipmentCompartmentStatus.FORCE_COMPLETED ||\r\n        item.DispatchCompartmentStatus ===\r\n        Constants.ShipmentCompartmentStatus.COMPLETED ||\r\n        item.DispatchCompartmentStatus ===\r\n        Constants.ShipmentCompartmentStatus.OVER_FILLED ||\r\n        this.props.currentAccess.ViewRailDispatch_DisableAdjustPlanQty ||\r\n        item.FinishedProductCode === null ||\r\n        item.FinishedProductCode === \"\"\r\n      );\r\n      const forceCompleteEnable = !(\r\n        this.props.currentAccess.ViewRailDispatch_EditAccess === false ||\r\n        item.DispatchCompartmentStatus ===\r\n        Constants.ShipmentCompartmentStatus.LOADING ||\r\n        item.DispatchCompartmentStatus ===\r\n        Constants.ShipmentCompartmentStatus.FORCE_COMPLETED ||\r\n        item.DispatchCompartmentStatus ===\r\n        Constants.ShipmentCompartmentStatus.COMPLETED ||\r\n        item.DispatchCompartmentStatus ===\r\n        Constants.ShipmentCompartmentStatus.OVER_FILLED ||\r\n        this.props.currentAccess.ViewRailDispatch_DisableWagonForceClose ||\r\n        item.FinishedProductCode === null ||\r\n        item.FinishedProductCode === \"\"\r\n      );\r\n      if (adjustedQtyEnable && forceCompleteEnable) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getRailRoute(routeCode) {\r\n    const transportationType = this.getTransportationType();\r\n    const keyCode = [\r\n      {\r\n        key: KeyCodes.railRouteCode,\r\n        value: routeCode,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: transportationType,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.railRouteCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailRoute,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            const railRouteData = lodash.cloneDeep(this.state.railRouteData);\r\n            railRouteData.DestinationCode = result.EntityResult.DestinationCode;\r\n            railRouteData.DepartureTime = new Date(\r\n              result.EntityResult.DepartureTime\r\n            ).toLocaleTimeString();\r\n            this.setState({ railRouteData });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetRailRoute:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting railRoute:\", error);\r\n      });\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modRailDispatch = lodash.cloneDeep(this.state.modRailDispatch);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n\r\n      modRailDispatch[propertyName] = data;\r\n      if (propertyName === \"Active\") {\r\n        if (data !== this.state.railDispatch.Active) {\r\n          modRailDispatch.Remarks = \"\";\r\n        }\r\n        // this.handleActiveStatusChange(data);\r\n      } else if (propertyName === \"RouteCode\") {\r\n        this.getRailRoute(data);\r\n      }\r\n      this.setState({ modRailDispatch });\r\n      if (railDispatchValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          railDispatchValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n      if (propertyName === \"TerminalCodes\") {\r\n        this.terminalSelectionChange(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite:Error occurred on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      const modRailDispatch = lodash.cloneDeep(this.state.modRailDispatch);\r\n      validationErrors[propertyName] = error;\r\n      modRailDispatch[propertyName] = value;\r\n      this.setState({ validationErrors, modRailDispatch });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    const modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n\r\n    modAssociations[cellData.rowIndex][cellData.field] = newVal;\r\n\r\n    if (cellData.field === \"ShareholderCode\") {\r\n      modAssociations[cellData.rowIndex].FinishedProductCode = \"\";\r\n      modAssociations[cellData.rowIndex].CustomerCode = \"\";\r\n      modAssociations[cellData.rowIndex].DestinationCode = \"\";\r\n    } else if (cellData.field === \"CustomerCode\") {\r\n      const customerDestinationOptions = lodash.cloneDeep(\r\n        this.state.customerDestinationOptions\r\n      );\r\n      if (\r\n        customerDestinationOptions[\r\n        modAssociations[cellData.rowIndex].ShareholderCode\r\n        ] !== undefined &&\r\n        customerDestinationOptions[\r\n        modAssociations[cellData.rowIndex].ShareholderCode\r\n        ] !== null\r\n      ) {\r\n        const customerDestinationList =\r\n          customerDestinationOptions[\r\n          modAssociations[cellData.rowIndex].ShareholderCode\r\n          ];\r\n        if (\r\n          customerDestinationList[newVal] !== undefined &&\r\n          Array.isArray(customerDestinationList[newVal]) &&\r\n          customerDestinationList[newVal].length === 1\r\n        ) {\r\n          modAssociations[cellData.rowIndex].DestinationCode =\r\n            customerDestinationList[newVal][0];\r\n        } else {\r\n          modAssociations[cellData.rowIndex].DestinationCode = \"\";\r\n        }\r\n      }\r\n    } else if (\r\n      (cellData.field === \"FinishedProductCode\" ||\r\n        cellData.field === \"RailWagonCategory\") &&\r\n      modAssociations[cellData.rowIndex].FinishedProductCode !== null &&\r\n      modAssociations[cellData.rowIndex].RailWagonCategory !== null\r\n    ) {\r\n      this.getFinishedProduct(\r\n        modAssociations[cellData.rowIndex].FinishedProductCode,\r\n        modAssociations[cellData.rowIndex].ShareholderCode,\r\n        (entityResult) => {\r\n          this.getRailWagonCategoryDetails(\r\n            modAssociations[cellData.rowIndex].RailWagonCategory,\r\n            entityResult.ProductType,\r\n            (entityResult) => {\r\n              modAssociations[cellData.rowIndex].PlannedQuantity = parseFloat(\r\n                entityResult.MaxLoadableWeight\r\n              );\r\n              this.setState({ modAssociations });\r\n            }\r\n          );\r\n        }\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.setState({ modAssociations });\r\n  };\r\n\r\n  handleWagonCellDataEditOld = (newVal, fieldName, rowData) => {\r\n    const modWagonDetails = lodash.cloneDeep(this.state.modWagonDetails);\r\n    const expandedWagonRows = lodash.cloneDeep(this.state.expandedWagonRows);\r\n    let isSave = \"\";\r\n    if (fieldName === \"ForceComplete\" && newVal === true) {\r\n      const modalData = lodash.cloneDeep(this.state.modalData);\r\n      modalData.forceCompleteCompartment.isOpen = true;\r\n      modalData.forceCompleteCompartment.data.trailerCode = rowData.TrailerCode;\r\n      isSave = true;\r\n      this.setState({ modalData });\r\n      //return;\r\n    } else {\r\n      isSave = false;\r\n    }\r\n\r\n    for (let item of modWagonDetails) {\r\n      if (item.TrailerCode === rowData.TrailerCode) {\r\n        item[fieldName] = newVal;\r\n        if (isSave !== \"\") {\r\n          item.isSave = isSave;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    for (let item of expandedWagonRows) {\r\n      if (item.TrailerCode === rowData.TrailerCode) {\r\n        item[fieldName] = newVal;\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.setState({ modWagonDetails, expandedWagonRows });\r\n  };\r\n\r\n  handleWagonCellDataEdit = (newVal, cellData) => {\r\n    const modWagonDetails = lodash.cloneDeep(this.state.modWagonDetails);\r\n    const expandedWagonRows = lodash.cloneDeep(this.state.expandedWagonRows);\r\n    let isSave = \"\";\r\n    if (cellData.field === \"ForceComplete\" && newVal === true) {\r\n      const modalData = lodash.cloneDeep(this.state.modalData);\r\n      modalData.forceCompleteCompartment.isOpen = true;\r\n      modalData.forceCompleteCompartment.data.trailerCode =\r\n        cellData.rowData.TrailerCode;\r\n      isSave = true;\r\n      this.setState({ modalData });\r\n      //return;\r\n    } else {\r\n      isSave = false;\r\n    }\r\n\r\n    for (let item of modWagonDetails) {\r\n      if (item.TrailerCode === cellData.rowData.TrailerCode) {\r\n        item[cellData.field] = newVal;\r\n        if (isSave !== \"\") {\r\n          item.isSave = isSave;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    for (let item of expandedWagonRows) {\r\n      if (item.TrailerCode === cellData.rowData.TrailerCode) {\r\n        item[cellData.field] = newVal;\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.setState({ modWagonDetails, expandedWagonRows });\r\n  };\r\n\r\n  handleForceCompleteCompartment = () => {\r\n    const modWagonDetails = lodash.cloneDeep(this.state.modWagonDetails);\r\n    const expandedWagonRows = lodash.cloneDeep(this.state.expandedWagonRows);\r\n    const modalData = lodash.cloneDeep(this.state.modalData);\r\n\r\n    for (let item of modWagonDetails) {\r\n      if (\r\n        item.TrailerCode === modalData.forceCompleteCompartment.data.trailerCode\r\n      ) {\r\n        item.ForceComplete = true;\r\n        break;\r\n      }\r\n    }\r\n    for (let item of expandedWagonRows) {\r\n      if (\r\n        item.TrailerCode === modalData.forceCompleteCompartment.data.trailerCode\r\n      ) {\r\n        item.ForceComplete = true;\r\n        break;\r\n      }\r\n    }\r\n    modalData.forceCompleteCompartment.isOpen = false;\r\n\r\n    this.setState({ modWagonDetails, expandedWagonRows, modalData });\r\n  };\r\n\r\n  handleAssociationSelectionChange = (e) => {\r\n    this.setState({ selectedAssociations: e });\r\n  };\r\n\r\n  handleAddAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        const modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n        const newComp = {\r\n          LoadedQuantity: null,\r\n          LoadedQuantityUOM: null,\r\n          DispatchCode: null,\r\n          ShareholderCode: null,\r\n          CustomerCode: null,\r\n          ContractCode: null,\r\n          DestinationCode: null,\r\n          FinishedProductCode: null,\r\n          RailWagonCategory: null,\r\n          PlannedNoOfRailWagons: null,\r\n          PlannedQuantity: 0,\r\n          AdjustedPlanQuantity: null,\r\n          QuantityUOM: null,\r\n          AssociatedOrderItems: null,\r\n          AssociatedContractItems: null,\r\n          Attributes: [],\r\n        };\r\n        newComp.SeqNumber = Utilities.getMaxSeqNumberfromListObject(\r\n          this.state.modAssociations\r\n        );\r\n        newComp.ShareholderCode = this.props.selectedShareholder;\r\n        modAssociations.push(newComp);\r\n\r\n        this.setState(\r\n          {\r\n            modAssociations,\r\n            selectedAssociations: [],\r\n          },\r\n          () => {\r\n            if (\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode === false\r\n            ) {\r\n              const attributeMetaDataList = lodash.cloneDeep(\r\n                this.state.compartmentAttributeMetaDataList\r\n              );\r\n              if (attributeMetaDataList.length > 0)\r\n                this.formCompartmentAttributes([\r\n                  attributeMetaDataList[0].TerminalCode,\r\n                ]);\r\n            } else {\r\n              this.formCompartmentAttributes(\r\n                this.state.modRailDispatch.TerminalCodes\r\n              );\r\n            }\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.log(\r\n          \"RailDispatchDetailsComposite:Error occurred on handleAddAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDeleteAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedAssociations != null &&\r\n          this.state.selectedAssociations.length > 0\r\n        ) {\r\n          if (this.state.modAssociations.length > 0) {\r\n            let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n\r\n            this.state.selectedAssociations.forEach((obj, index) => {\r\n              modAssociations = modAssociations.filter((com, cindex) => {\r\n                return com.SeqNumber !== obj.SeqNumber;\r\n              });\r\n            });\r\n\r\n            this.setState({ modAssociations });\r\n          }\r\n        }\r\n\r\n        this.setState({ selectedAssociations: [] });\r\n      } catch (error) {\r\n        console.log(\r\n          \"RailDispatchDetailsComposite:Error occurred on handleDeleteAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      const terminalCodes = lodash.cloneDeep(this.props.terminalCodes);\r\n      const modRailDispatch = lodash.cloneDeep(this.state.modRailDispatch);\r\n      if (checked) modRailDispatch.TerminalCodes = [...terminalCodes];\r\n      else modRailDispatch.TerminalCodes = [];\r\n      this.terminalSelectionChange(modRailDispatch.TerminalCodes);\r\n      this.setState({ modRailDispatch });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite:Error occurred on handleAllTerminalsChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateSave(modRailDispatch, attributeList) {\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n\r\n    Object.keys(railDispatchValidationDef).forEach(function (key) {\r\n      if (modRailDispatch[key] !== undefined) {\r\n        validationErrors[key] = Utilities.validateField(\r\n          railDispatchValidationDef[key],\r\n          modRailDispatch[key]\r\n        );\r\n      }\r\n    });\r\n\r\n    if (modRailDispatch.Active !== this.state.railDispatch.Active) {\r\n      if (modRailDispatch.Remarks === null || modRailDispatch.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"OriginTerminal_RemarksRequired\";\r\n      } else {\r\n        validationErrors[\"Remarks\"] = \"\";\r\n      }\r\n    }\r\n\r\n    const attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n\r\n    let returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    if (returnValue) {\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    } else {\r\n      return returnValue;\r\n    }\r\n\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    if (\r\n      Array.isArray(modRailDispatch.DispatchItemPlanList) &&\r\n      modRailDispatch.DispatchItemPlanList.length > 0\r\n    ) {\r\n      const railDispatchCompartmentDefMod = lodash.cloneDeep(\r\n        railDispatchCompartmentDef\r\n      );\r\n\r\n      modRailDispatch.DispatchItemPlanList.forEach((railDispatchComp) => {\r\n        if (\r\n          modRailDispatch.CreatedFromEntity === Constants.shipmentFrom.Contract\r\n        ) {\r\n          let err = \"\";\r\n          if (\r\n            Array.isArray(railDispatchComp.AssociatedContractItems) &&\r\n            railDispatchComp.AssociatedContractItems.length > 0\r\n          ) {\r\n            const shipOrder = railDispatchComp.AssociatedContractItems[0];\r\n            if (\r\n              shipOrder === null ||\r\n              shipOrder.ContractCode === undefined ||\r\n              shipOrder.ContractCode === null ||\r\n              shipOrder.ContractCode === \"\"\r\n            ) {\r\n              err = \"Contract_Code_Empty\";\r\n            }\r\n          } else {\r\n            err = \"Contract_Code_Empty\";\r\n          }\r\n          if (err !== \"\") {\r\n            notification.messageResultDetails.push({\r\n              keyFields: [\r\n                \"RailDispatchPlanDetail_DispatchCode\",\r\n                \"RailDispatchPlanDetail_ContractCode\",\r\n              ],\r\n              keyValues: [\r\n                modRailDispatch.DispatchCode,\r\n                railDispatchComp.ContractCode,\r\n              ],\r\n              isSuccess: false,\r\n              errorMessage: err,\r\n            });\r\n          }\r\n        }\r\n\r\n        railDispatchCompartmentDefMod.forEach((col) => {\r\n          let err = \"\";\r\n          if (\r\n            col.field === \"PlannedQuantity\" &&\r\n            this.props.railLookUpData.PlanType === \"2\"\r\n          )\r\n            return;\r\n          if (col.validator !== undefined) {\r\n            err = Utilities.validateField(\r\n              col.validator,\r\n              railDispatchComp[col.field]\r\n            );\r\n          }\r\n          if (err !== \"\") {\r\n            notification.messageResultDetails.push({\r\n              keyFields: [\r\n                \"RailDispatchPlanDetail_DispatchCode\",\r\n                col.displayName,\r\n              ],\r\n              keyValues: [\r\n                modRailDispatch.DispatchCode,\r\n                railDispatchComp[col.field],\r\n              ],\r\n              isSuccess: false,\r\n              errorMessage: err,\r\n            });\r\n          }\r\n        });\r\n\r\n        let updatedAttributes = [];\r\n        if (\r\n          railDispatchComp.AttributesForUI !== null &&\r\n          railDispatchComp.AttributesForUI !== undefined\r\n        ) {\r\n          updatedAttributes = railDispatchComp.AttributesForUI.filter(\r\n            (uIAttributes) => {\r\n              return railDispatchComp.Attributes.some((selAttribute) => {\r\n                const isPresent =\r\n                  selAttribute.ListOfAttributeData.findIndex(\r\n                    (item) => item.AttributeCode === uIAttributes.AttributeCode\r\n                  ) >= 0\r\n                    ? true\r\n                    : false;\r\n                return (\r\n                  uIAttributes.TerminalCode === selAttribute.TerminalCode &&\r\n                  isPresent\r\n                );\r\n              });\r\n            }\r\n          );\r\n        }\r\n\r\n        updatedAttributes.forEach((item) => {\r\n          const errMsg = Utilities.valiateAttributeField(\r\n            item,\r\n            item.AttributeValue\r\n          );\r\n          if (errMsg !== \"\") {\r\n            if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n              notification.messageResultDetails.push({\r\n                keyFields: [\r\n                  \"CompAttributeComp\",\r\n                  \"CompAttributeTerminal\",\r\n                  item.AttributeName,\r\n                ],\r\n                keyValues: [\r\n                  railDispatchComp.SeqNumber,\r\n                  item.TerminalCode,\r\n                  item.AttributeValue,\r\n                ],\r\n                isSuccess: false,\r\n                errorMessage: errMsg,\r\n              });\r\n            } else {\r\n              notification.messageResultDetails.push({\r\n                keyFields: [\"CompAttributeComp\", item.AttributeName],\r\n                keyValues: [railDispatchComp.SeqNumber, item.AttributeValue],\r\n                isSuccess: false,\r\n                errorMessage: errMsg,\r\n              });\r\n            }\r\n          }\r\n        });\r\n        this.toggleExpand(railDispatchComp, true, true);\r\n\r\n        delete railDispatchComp.AttributesForUI;\r\n        delete railDispatchComp.SeqNumber;\r\n      });\r\n    } else {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [],\r\n        keyValues: [],\r\n        isSuccess: false,\r\n        errorMessage: \"ERRORMSG_RAILDISPATCH_PLAN_EMPTY\",\r\n      });\r\n    }\r\n\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(modRailDispatch, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  saveRailDispatch = () => {\r\n    this.handleAuthenticationClose();\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempRailDispatch = lodash.cloneDeep(this.state.tempRailDispatch);\r\n\r\n      this.state.railDispatch.DispatchCode === \"\"\r\n      ? this.createRailDispatch(tempRailDispatch)\r\n      : this.updateRailDispatch(tempRailDispatch);\r\n    } catch (error) {\r\n      console.log(\"RailShipComposite : Error in addUpdateRailDispatch\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n    //  this.setState({ saveEnabled: false });\r\n      let modRailDispatch = lodash.cloneDeep(this.state.modRailDispatch);\r\n      modRailDispatch.DispatchItemPlanList =\r\n        this.getCompartmentsFromAssociations(this.state.modAssociations);\r\n\r\n      const attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.selectedAttributeList\r\n      );\r\n      if (this.validateSave(modRailDispatch, attributeList)) {\r\n        modRailDispatch = this.fillAttributeDetails(\r\n          modRailDispatch,\r\n          attributeList\r\n        );\r\n        modRailDispatch.DispatchItemPlanList.forEach((compart) => {\r\n          compart.PlannedNoOfRailWagons =\r\n            compart.PlannedNoOfRailWagons === null\r\n              ? null\r\n              : Utilities.convertStringtoDecimal(compart.PlannedNoOfRailWagons);\r\n          compart.PlannedQuantity = Utilities.convertStringtoDecimal(\r\n            compart.PlannedQuantity\r\n          );\r\n          compart.AdjustedPlanQuantity = Utilities.convertStringtoDecimal(\r\n            compart.PlannedQuantity\r\n          );\r\n          if (\r\n            compart.AssociatedContractItems !== null &&\r\n            compart.AssociatedContractItems !== undefined &&\r\n            compart.AssociatedContractItems.length > 0\r\n          ) {\r\n            if (Array.isArray(compart.AssociatedContractItems)) {\r\n              compart.AssociatedContractItems.forEach((contract) => {\r\n                contract.ContractItemQuantity =\r\n                  compart.PlannedQuantity !== null &&\r\n                    compart.PlannedQuantity !== \"\"\r\n                    ? Utilities.convertStringtoDecimal(compart.PlannedQuantity)\r\n                    : null;\r\n                contract.PlannedNoOfRailWagons = compart.PlannedNoOfRailWagons;\r\n              });\r\n            }\r\n          }\r\n          if (\r\n            compart.AttributesForUI !== undefined &&\r\n            compart.AttributesForUI != null\r\n          ) {\r\n            compart.AttributesForUI =\r\n              Utilities.compartmentAttributesDatatypeConversion(\r\n                compart.AttributesForUI\r\n              );\r\n          }\r\n          if (\r\n            compart.Attributes !== undefined &&\r\n            compart.Attributes != null &&\r\n            compart.Attributes.length > 0\r\n          ) {\r\n            compart.Attributes =\r\n              Utilities.compartmentAttributesDatatypeConversion(\r\n                compart.Attributes\r\n              );\r\n          }\r\n        });\r\n       \r\n        let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempRailDispatch = lodash.cloneDeep(modRailDispatch);\r\n      this.setState({ showAuthenticationLayout, tempRailDispatch }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.saveRailDispatch();\r\n        }\r\n    });\r\n    \r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      const railDispatch = lodash.cloneDeep(this.state.railDispatch);\r\n\r\n      if (railDispatch.DispatchStatus !== \"READY\") {\r\n        this.getRailDispatch({ Common_Code: railDispatch.DispatchCode }, true);\r\n        return;\r\n      }\r\n\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n\r\n      if (railDispatch.RouteCode) {\r\n        this.setState(\r\n          {\r\n            modRailDispatch: railDispatch,\r\n            modAssociations: this.getAssociationsFromDispatch(railDispatch),\r\n            validationErrors,\r\n          },\r\n          () => {\r\n            if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n              this.terminalSelectionChange(railDispatch.TerminalCodes);\r\n              this.handleResetAttributeValidationError();\r\n            } else {\r\n              this.localNodeAttribute();\r\n              this.handleResetAttributeValidationError();\r\n            }\r\n          }\r\n        );\r\n        this.getRailRoute(railDispatch.RouteCode);\r\n      } else {\r\n        this.setState(\r\n          {\r\n            modRailDispatch: railDispatch,\r\n            modAssociations: this.getAssociationsFromDispatch(railDispatch),\r\n            validationErrors,\r\n            railRouteData: {\r\n              DestinationCode: \"\",\r\n              DepartureTime: \"\",\r\n            },\r\n          },\r\n          () => {\r\n            if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n              this.terminalSelectionChange(railDispatch.TerminalCodes);\r\n              this.handleResetAttributeValidationError();\r\n            } else {\r\n              this.localNodeAttribute();\r\n              this.handleResetAttributeValidationError();\r\n            }\r\n          }\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(attributeMetaDataList),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleResetAttributeValidationError\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  toggleExpand = (data, open, isTerminalAdded = false) => {\r\n    let expandedRows = lodash.cloneDeep(this.state.expandedRows);\r\n    const expandedRowIndex = expandedRows.findIndex(\r\n      (item) => item.SeqNumber === data.SeqNumber\r\n    );\r\n    if (open) {\r\n      if (isTerminalAdded && expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n        expandedRows.push(data);\r\n      } else if (expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n      }\r\n    } else {\r\n      if (expandedRowIndex >= 0) {\r\n        expandedRows = expandedRows.filter(\r\n          (x) => x.Code !== data.Code && x.SeqNumber !== data.SeqNumber\r\n        );\r\n      } else expandedRows.push(data);\r\n    }\r\n    this.setState({ expandedRows });\r\n  };\r\n\r\n  toggleWagonExpand = (data, open) => {\r\n    let expandedWagonRows = lodash.cloneDeep(this.state.expandedWagonRows);\r\n    let expandedRowIndex = expandedWagonRows.findIndex(\r\n      (item) => item.TrailerCode === data.TrailerCode\r\n    );\r\n    if (open) {\r\n      expandedWagonRows.splice(expandedRowIndex, 1);\r\n    } else {\r\n      expandedWagonRows.push(data);\r\n    }\r\n    this.setState({ expandedWagonRows });\r\n  };\r\n\r\n  createRailDispatch(modRailDispatch) {\r\n    const keyCode = [\r\n      {\r\n        key: KeyCodes.railDispatchCode,\r\n        value: modRailDispatch.DispatchCode,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.railDispatchCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modRailDispatch,\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n          keyValues: [modRailDispatch.DispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.CreateRailDispatch,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getRailDispatch(\r\n            { Common_Code: modRailDispatch.DispatchCode },\r\n            true\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: true,\r\n          });\r\n        }\r\n        this.props.onSaved(this.state.modRailDispatch, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnRailDispatch\r\n          ),\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modRailDispatch, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateRailDispatch(modRailDispatch) {\r\n    const keyCode = [\r\n      {\r\n        key: KeyCodes.railDispatchCode,\r\n        value: modRailDispatch.DispatchCode,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.railDispatchCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modRailDispatch,\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n          keyValues: [modRailDispatch.DispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.UpdateRailDispatch,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getRailDispatch({ Common_Code: modRailDispatch.DispatchCode });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: true,\r\n          });\r\n          //console.log(\"Error in CreateRailDispatch:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modRailDispatch, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnRailDispatch\r\n          ),\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modRailDispatch, \"modify\", notification);\r\n      });\r\n  }\r\n\r\n  updateRailDispatchCompartmentInfo(dispatchCompartmentDataList) {\r\n    const keyCode = [\r\n      {\r\n        key: \"DispatchCode\",\r\n        value: this.state.modRailDispatch.DispatchCode,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: \"DispatchCode\",\r\n      KeyCodes: keyCode,\r\n      Entity: dispatchCompartmentDataList,\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n          keyValues: [this.state.modRailDispatch.DispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.UpdateRailDispatchCompartInfo,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getRailDispatch(\r\n            { Common_Code: this.state.modRailDispatch.DispatchCode },\r\n            true\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: true, // TODO\r\n          });\r\n          //console.log(\"Error in CreateRailDispatch:\", result.ErrorList);\r\n        }\r\n        this.props.onNotify(notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: true, // TODO\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onNotify(notification);\r\n      });\r\n  }\r\n\r\n  getAssociationsFromDispatch(railDispatch) {\r\n    let dispatchAssociations = [];\r\n    if (Array.isArray(railDispatch.DispatchItemPlanList)) {\r\n      railDispatch.DispatchItemPlanList.forEach((dispatchCompartment) => {\r\n        dispatchAssociations.push({\r\n          LoadedQuantity: dispatchCompartment.LoadedQuantity,\r\n          LoadedQuantityUOM: dispatchCompartment.LoadedQuantityUOM,\r\n          DispatchCode: dispatchCompartment.DispatchCode,\r\n          ShareholderCode: dispatchCompartment.ShareholderCode,\r\n          CustomerCode: dispatchCompartment.CustomerCode,\r\n          DestinationCode: dispatchCompartment.DestinationCode,\r\n          FinishedProductCode: dispatchCompartment.FinishedProductCode,\r\n          RailWagonCategory: dispatchCompartment.RailWagonCategory,\r\n          PlannedNoOfRailWagons: dispatchCompartment.PlannedNoOfRailWagons,\r\n          PlannedQuantity:\r\n            dispatchCompartment.PlannedQuantity !== null &&\r\n              dispatchCompartment.PlannedQuantity !== \"\"\r\n              ? dispatchCompartment.PlannedQuantity.toLocaleString()\r\n              : null,\r\n          AdjustedPlanQuantity:\r\n            dispatchCompartment.AdjustedPlanQuantity !== null &&\r\n              dispatchCompartment.AdjustedPlanQuantity !== \"\"\r\n              ? dispatchCompartment.AdjustedPlanQuantity.toLocaleString()\r\n              : null,\r\n          QuantityUOM: dispatchCompartment.QuantityUOM,\r\n          ContractCode:\r\n            dispatchCompartment.AssociatedContractItems != null\r\n              ? dispatchCompartment.AssociatedContractItems[0].ContractCode\r\n              : null,\r\n          AssociatedOrderItems: dispatchCompartment.AssociatedOrderItems,\r\n          AssociatedContractItems: dispatchCompartment.AssociatedContractItems,\r\n          Attributes: dispatchCompartment.Attributes,\r\n        });\r\n      });\r\n    }\r\n    dispatchAssociations =\r\n      Utilities.addSeqNumberToListObject(dispatchAssociations);\r\n    return dispatchAssociations;\r\n  }\r\n\r\n  getCompartmentsFromAssociations(modAssociations) {\r\n    const dispatchCompartments = [];\r\n    if (Array.isArray(modAssociations)) {\r\n      modAssociations.forEach((modAssociation) => {\r\n        if (\r\n          !(\r\n            modAssociation.FinishedProductCode === null ||\r\n            modAssociation.FinishedProductCode === \"\"\r\n          ) ||\r\n          !(\r\n            modAssociation.CustomerCode === null ||\r\n            modAssociation.CustomerCode === \"\"\r\n          ) ||\r\n          !(\r\n            modAssociation.DestinationCode === null ||\r\n            modAssociation.DestinationCode === \"\"\r\n          )\r\n        ) {\r\n          let selectedTerminals = [];\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            selectedTerminals = lodash.cloneDeep(\r\n              this.state.modRailDispatch.TerminalCodes\r\n            );\r\n            if (selectedTerminals == null) {\r\n              selectedTerminals = [];\r\n            }\r\n          } else {\r\n            const compAttributeMetaDataList = lodash.cloneDeep(\r\n              this.state.compartmentAttributeMetaDataList\r\n            );\r\n            if (compAttributeMetaDataList.length > 0) {\r\n              selectedTerminals = [compAttributeMetaDataList[0].TerminalCode];\r\n            }\r\n          }\r\n          let terminalAttributes = [];\r\n          modAssociation.Attributes = [];\r\n          selectedTerminals.forEach((terminal) => {\r\n            if (\r\n              modAssociation.AttributesForUI !== null &&\r\n              modAssociation.AttributesForUI !== undefined\r\n            ) {\r\n              terminalAttributes = modAssociation.AttributesForUI.filter(\r\n                (attTerminal) => {\r\n                  return attTerminal.TerminalCode === terminal;\r\n                }\r\n              );\r\n            }\r\n\r\n            const attribute = {\r\n              ListOfAttributeData: [],\r\n            };\r\n\r\n            attribute.TerminalCode = terminal;\r\n            terminalAttributes.forEach((termAtt) => {\r\n              if (termAtt.AttributeValue !== \"\" || termAtt.IsMandatory === true)\r\n                attribute.ListOfAttributeData.push({\r\n                  AttributeCode: termAtt.AttributeCode,\r\n                  AttributeValue: termAtt.AttributeValue,\r\n                });\r\n            });\r\n            if (\r\n              attribute.ListOfAttributeData !== null &&\r\n              attribute.ListOfAttributeData !== undefined &&\r\n              attribute.ListOfAttributeData.length > 0\r\n            ) {\r\n              modAssociation.Attributes.push(attribute);\r\n            }\r\n          });\r\n\r\n          dispatchCompartments.push({\r\n            LoadedQuantity: modAssociation.LoadedQuantity,\r\n            LoadedQuantityUOM: modAssociation.LoadedQuantityUOM,\r\n            DispatchCode: this.state.modRailDispatch.DispatchCode,\r\n            ShareholderCode: modAssociation.ShareholderCode,\r\n            CustomerCode: modAssociation.CustomerCode,\r\n            DestinationCode: modAssociation.DestinationCode,\r\n            FinishedProductCode: modAssociation.FinishedProductCode,\r\n            RailWagonCategory: modAssociation.RailWagonCategory,\r\n            PlannedNoOfRailWagons: modAssociation.PlannedNoOfRailWagons,\r\n            PlannedQuantity: modAssociation.PlannedQuantity,\r\n            AdjustedPlanQuantity: modAssociation.PlannedQuantity,\r\n            QuantityUOM: this.state.modRailDispatch.QuantityUOM,\r\n            AssociatedContractItems:\r\n              modAssociation.ContractCode === null\r\n                ? null\r\n                : [\r\n                  {\r\n                    ContractCode: modAssociation.ContractCode,\r\n                    ShareholderCode: modAssociation.ShareholderCode,\r\n                    ContractItemQuantity:\r\n                      modAssociation.PlannedQuantity !== null &&\r\n                        modAssociation.PlannedQuantity !== \"\"\r\n                        ? modAssociation.PlannedQuantity\r\n                        : null,\r\n                    QuantityUOM: this.state.modRailDispatch.QuantityUOM,\r\n                    FinishedProductCode: modAssociation.FinishedProductCode,\r\n                    Destination: modAssociation.DestinationCode,\r\n                    RailWagonCategory: modAssociation.RailWagonCategory,\r\n                    PlannedNoOfRailWagons:\r\n                      modAssociation.PlannedNoOfRailWagons,\r\n                  },\r\n                ],\r\n            AssociatedOrderItems: modAssociation.AssociatedOrderItems,\r\n            Attributes: modAssociation.Attributes,\r\n            AttributesForUI: modAssociation.AttributesForUI,\r\n            // SeqNumber: modAssociation.SeqNumber\r\n          });\r\n        }\r\n      });\r\n    }\r\n    return dispatchCompartments;\r\n  }\r\n\r\n  setWagonDetailsFromDispatch(railDispatch, weightBridgeDataList, callBack) {\r\n    const modWagonDetails = [];\r\n    const wagonCodeList = [];\r\n    if (Array.isArray(railDispatch.DispatchCompartmentPlanList)) {\r\n      railDispatch.DispatchCompartmentPlanList.forEach((item) => {\r\n        if (\r\n          item.DispatchCompartmentStatus ===\r\n          Constants.ShipmentCompartmentStatus.EMPTY ||\r\n          item.DispatchCompartmentStatus ===\r\n          Constants.ShipmentCompartmentStatus.PART_FILLED ||\r\n          item.DispatchCompartmentStatus ===\r\n          Constants.ShipmentCompartmentStatus.INTERRUPTED\r\n        ) {\r\n          wagonCodeList.push(item.TrailerCode);\r\n        }\r\n        let weightBridgeData;\r\n        for (let weightBridgeDataItem of weightBridgeDataList) {\r\n          if (weightBridgeDataItem.WagonCode === item.TrailerCode) {\r\n            weightBridgeData = weightBridgeDataItem;\r\n            break;\r\n          }\r\n        }\r\n        const wagonDetail = {\r\n          TrailerCode: item.TrailerCode,\r\n          CarrierCompanyCode: item.CarrierCompanyCode,\r\n          FinishedProductCode: item.FinishedProductCode,\r\n          DispatchCompartmentStatus: item.DispatchCompartmentStatus,\r\n          PlannedQuantity:\r\n            item.PlannedQuantity !== null && item.PlannedQuantity !== \"\"\r\n              ? item.PlannedQuantity.toLocaleString() +\r\n              (item.PlanQuantityUOM ? \" \" + item.PlanQuantityUOM : \"\")\r\n              : \"\",\r\n          RevisedQuantity:\r\n            item.AdjustedPlanQuantity !== null &&\r\n              item.AdjustedPlanQuantity !== \"\"\r\n              ? item.AdjustedPlanQuantity.toLocaleString() +\r\n              (item.PlanQuantityUOM ? \" \" + item.PlanQuantityUOM : \"\")\r\n              : \"\",\r\n          LoadedQuantity:\r\n            item.LoadedQuantity !== null && item.LoadedQuantity !== \"\"\r\n              ? item.LoadedQuantity.toLocaleString() +\r\n              (item.LoadedQuantityUOM ? \" \" + item.LoadedQuantityUOM : \"\")\r\n              : \"\",\r\n          ReturnQuantity:\r\n            item.ReturnQuantity !== null && item.ReturnQuantity !== \"\"\r\n              ? item.ReturnQuantity.toLocaleString() +\r\n              (item.PlanQuantityUOM ? \" \" + item.PlanQuantityUOM : \"\")\r\n              : \"\",\r\n          TareWeight: \"\",\r\n          LadenWeight: \"\",\r\n          DiffWeight: \"\",\r\n          HSEInspectionStatus: \"\",\r\n          AdjustedQty: \"\",\r\n          ForceComplete: false,\r\n        };\r\n        if (weightBridgeData !== undefined) {\r\n          let tareWeightFlag = false;\r\n          let ladenWeightFlag = false;\r\n          if (\r\n            weightBridgeData.TareWeightInDispatchReceiptUOM !== \"\" &&\r\n            weightBridgeData.TareWeightInDispatchReceiptUOM !== null\r\n          ) {\r\n            tareWeightFlag = true;\r\n            wagonDetail.TareWeight =\r\n              Math.round(\r\n                weightBridgeData.TareWeightInDispatchReceiptUOM\r\n              ).toLocaleString() +\r\n              \" \" +\r\n              weightBridgeData.DispatchReceiptUOM;\r\n          }\r\n          if (\r\n            weightBridgeData.LadenWeightInDispatchReceiptUOM !== \"\" &&\r\n            weightBridgeData.LadenWeightInDispatchReceiptUOM !== null\r\n          ) {\r\n            ladenWeightFlag = true;\r\n            wagonDetail.LadenWeight =\r\n              Math.round(\r\n                weightBridgeData.LadenWeightInDispatchReceiptUOM\r\n              ).toLocaleString() +\r\n              \" \" +\r\n              weightBridgeData.DispatchReceiptUOM;\r\n          }\r\n\r\n          if (tareWeightFlag && ladenWeightFlag) {\r\n            wagonDetail.DiffWeight =\r\n              Math.round(\r\n                weightBridgeData.LadenWeightInDispatchReceiptUOM -\r\n                weightBridgeData.TareWeightInDispatchReceiptUOM\r\n              ).toLocaleString() +\r\n              \" \" +\r\n              weightBridgeData.DispatchReceiptUOM;\r\n          } else if (!tareWeightFlag && ladenWeightFlag) {\r\n            wagonDetail.DiffWeight = wagonDetail.LadenWeight;\r\n          } else if (tareWeightFlag && !ladenWeightFlag) {\r\n            if (\r\n              Math.round(weightBridgeData.TareWeightInDispatchReceiptUOM) === 0\r\n            ) {\r\n              wagonDetail.DiffWeight = wagonDetail.TareWeight;\r\n            } else {\r\n              wagonDetail.DiffWeight = \"-\" + wagonDetail.TareWeight;\r\n            }\r\n          }\r\n        }\r\n        modWagonDetails.push(wagonDetail);\r\n      });\r\n    }\r\n    this.setState(\r\n      {\r\n        modWagonDetails,\r\n        wagonCodeOptions: Utilities.transferListtoOptions(wagonCodeList),\r\n      },\r\n      () => callBack()\r\n    );\r\n  }\r\n\r\n  handleCompartmentSave = () => {\r\n    try {\r\n      this.setState({ compartmentSaveEnabled: false });\r\n      const dispatchCompDataList = [];\r\n      for (let item of this.state.modWagonDetails) {\r\n        if (\r\n          item.isSave === true ||\r\n          (item.AdjustedQty !== null &&\r\n            item.AdjustedQty !== undefined &&\r\n            item.AdjustedQty !== \"\")\r\n        ) {\r\n          dispatchCompDataList.push({\r\n            TrailerCode: item.TrailerCode,\r\n            CarrierCompanyCode: item.CarrierCompanyCode,\r\n            AdjustedQuantity: item.AdjustedQty,\r\n            ForceCompleted: item.ForceComplete,\r\n          });\r\n        }\r\n      }\r\n      if (this.validateCompartmentSave(dispatchCompDataList)) {\r\n        this.updateRailDispatchCompartInfo(dispatchCompDataList);\r\n      } else {\r\n        this.setState({ compartmentSaveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleCompartmentSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateCompartmentSave(dispatchCompDataList) {\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n    let hasAdjustments = false;\r\n    const railDispatchCompartmentAdjustmentDefMod = lodash.cloneDeep(\r\n      railDispatchCompartmentAdjustmentDef\r\n    );\r\n    for (let item of dispatchCompDataList) {\r\n      if (item.AdjustedQuantity !== \"\") {\r\n        hasAdjustments = true;\r\n        const error = Utilities.validateField(\r\n          railDispatchCompartmentAdjustmentDefMod.validator,\r\n          item.AdjustedQuantity\r\n        );\r\n        if (error !== \"\") {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [\r\n              \"RailDispatchPlanDetail_DispatchCode\",\r\n              railDispatchCompartmentAdjustmentDefMod.displayName,\r\n            ],\r\n            keyValues: [\r\n              this.state.modRailDispatch.DispatchCode,\r\n              item.AdjustedQuantity,\r\n            ],\r\n            isSuccess: false,\r\n            errorMessage: error,\r\n          });\r\n        }\r\n      }\r\n      if (item.ForceCompleted === true) {\r\n        hasAdjustments = true;\r\n      }\r\n    }\r\n    if (!hasAdjustments) {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n        keyValues: [this.state.modRailDispatch.DispatchCode],\r\n        isSuccess: false,\r\n        errorMessage: \"ViewRailDispatchList_NoAdjustments\",\r\n      });\r\n    }\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onNotify(notification);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  updateRailDispatchCompartInfo(dispatchCompDataList) {\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: \"DispatchCode\",\r\n      KeyCodes: [\r\n        {\r\n          key: \"DispatchCode\",\r\n          value: this.state.modRailDispatch.DispatchCode,\r\n        },\r\n      ],\r\n      Entity: dispatchCompDataList,\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n          keyValues: [this.state.modRailDispatch.DispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.UpdateRailDispatchCompartInfo,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getRailDispatch({\r\n            Common_Code: this.state.modRailDispatch.DispatchCode,\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            compartmentSaveEnabled: true,\r\n          });\r\n          console.log(\r\n            \"Error in updateRailDispatchCompartInfo: \",\r\n            result.ErrorList\r\n          );\r\n        }\r\n        this.props.onNotify(notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          compartmentSaveEnabled: true,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onNotify(notification);\r\n      });\r\n  }\r\n\r\n  handleRouteSearchChange = (routeCode) => {\r\n    try {\r\n      let routeCodeSearchOptions = this.state.routeCodeOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(routeCode.toLowerCase())\r\n      );\r\n\r\n      if (routeCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n        routeCodeSearchOptions = routeCodeSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        routeCodeSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleRouteSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getRouteCodeSearchOptions() {\r\n    let routeCodeSearchOptions = lodash.cloneDeep(\r\n      this.state.routeCodeSearchOptions\r\n    );\r\n    let modRouteCode = this.state.modRailDispatch.RouteCode;\r\n    if (\r\n      modRouteCode !== null &&\r\n      modRouteCode !== \"\" &&\r\n      modRouteCode !== undefined\r\n    ) {\r\n      let selectedRouteCode = routeCodeSearchOptions.find(\r\n        (element) => element.value.toLowerCase() === modRouteCode.toLowerCase()\r\n      );\r\n      if (selectedRouteCode === undefined) {\r\n        routeCodeSearchOptions.push({\r\n          text: modRouteCode,\r\n          value: modRouteCode,\r\n        });\r\n      }\r\n    }\r\n    return routeCodeSearchOptions;\r\n  }\r\n\r\n  handleManualDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      const manualEntryValidationDict = lodash.cloneDeep(\r\n        this.state.manualEntryValidationDict\r\n      );\r\n      const modLoadingDataInfo = lodash.cloneDeep(\r\n        this.state.modLoadingDataInfo\r\n      );\r\n      manualEntryValidationDict.common[propertyName] = error;\r\n      modLoadingDataInfo.TransactionFPinfo[propertyName] = value;\r\n      this.setState({ manualEntryValidationDict, modLoadingDataInfo });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleTankSearchChange = (tankCode) => {\r\n    try {\r\n      let tankCodeSearchOptions = this.state.tankCodeOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(tankCode.toLowerCase())\r\n      );\r\n\r\n      if (tankCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n        tankCodeSearchOptions = tankCodeSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        tankCodeSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleRouteSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getTankCodeSearchOptions() {\r\n    let tankCodeSearchOptions = lodash.cloneDeep(\r\n      this.state.tankCodeSearchOptions\r\n    );\r\n    let modTankCode = \"\"; //this.state.modLeakageManualEntry.TankCode;\r\n    if (\r\n      modTankCode !== null &&\r\n      modTankCode !== \"\" &&\r\n      modTankCode !== undefined\r\n    ) {\r\n      let selectedTankCode = tankCodeSearchOptions.find(\r\n        (element) => element.value.toLowerCase() === modTankCode.toLowerCase()\r\n      );\r\n      if (selectedTankCode === undefined) {\r\n        tankCodeSearchOptions.push({\r\n          text: modTankCode,\r\n          value: modTankCode,\r\n        });\r\n      }\r\n    }\r\n    return tankCodeSearchOptions;\r\n  }\r\n\r\n  handleMeterSearchChange = (meterCode) => {\r\n    try {\r\n      let meterCodeSearchOptions = this.state.meterCodeOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(meterCode.toLowerCase())\r\n      );\r\n\r\n      if (meterCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n        meterCodeSearchOptions = meterCodeSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        meterCodeSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleMeterSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getMeterCodeSearchOptions() {\r\n    let meterCodeSearchOptions = lodash.cloneDeep(\r\n      this.state.meterCodeSearchOptions\r\n    );\r\n    let modMeterCode = \"\"; //this.state.modLeakageManualEntry.MeterCode;\r\n    if (\r\n      modMeterCode !== null &&\r\n      modMeterCode !== \"\" &&\r\n      modMeterCode !== undefined\r\n    ) {\r\n      let selectedMeterCode = meterCodeSearchOptions.find(\r\n        (element) => element.value.toLowerCase() === modMeterCode.toLowerCase()\r\n      );\r\n      if (selectedMeterCode === undefined) {\r\n        meterCodeSearchOptions.push({\r\n          text: modMeterCode,\r\n          value: modMeterCode,\r\n        });\r\n      }\r\n    }\r\n    return meterCodeSearchOptions;\r\n  }\r\n\r\n  handleAttributeCellDataEdit = (attribute, value) => {\r\n    try {\r\n      attribute.DefaultValue = value;\r\n\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attribute, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleAttributeCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCompAttributeCellDataEdit = (compAttribute, value) => {\r\n    const modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n    let compIndex = modAssociations.findIndex(\r\n      (item) => item.SeqNumber === compAttribute.rowData.compSequenceNo\r\n    );\r\n    if (compIndex >= 0) {\r\n      modAssociations[compIndex].AttributesForUI[\r\n        // compAttribute.rowIndex\r\n        compAttribute.rowData.compSequenceNo - 1\r\n      ].AttributeValue = value;\r\n    }\r\n    this.setState({ modAssociations });\r\n    if (compIndex >= 0) {\r\n      this.toggleExpand(modAssociations[compIndex], true, true);\r\n    }\r\n  };\r\n\r\n  handleOpenSubPage(subPageName, setReadyToRender = false) {\r\n    if (subPageName === \"RailDispatchViewAuditTrailDetails\") {\r\n      this.getAuditTrail(setReadyToRender);\r\n    } else if (subPageName === \"RailDispatchViewLoadingDetailsDetails\") {\r\n      this.handleViewLoadingDetails(setReadyToRender);\r\n    } else if (subPageName === \"RailDispatchCompartmentManualEntryDetails\") {\r\n      this.handleManualEntry(setReadyToRender);\r\n    } else if (subPageName === \"RailDispatchRailWagonAssignmentDetails\") {\r\n      this.handleOpenRailWagonAssignment(setReadyToRender);\r\n    } else if (subPageName === \"RailDispatchProductAssignmentDetails\") {\r\n      this.handleOpenProductAssignment(setReadyToRender);\r\n    } else if (subPageName === \"RailDispatchLoadSpotAssignmentDetails\") {\r\n      this.handleOpenLoadSpotAssignment(setReadyToRender);\r\n    } else if (subPageName === \"RailDispatchRecordWeightDetails\") {\r\n      this.handleOpenRecordWeight(setReadyToRender);\r\n    }\r\n  }\r\n\r\n  handleSubPageBackOnClick = () => {\r\n    try {\r\n      this.setState({ isOpenSubPage: false });\r\n      this.props.onSubPageBack();\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleSubPageBackOnClick\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleTabChange = (activeIndex) => {\r\n    try {\r\n      this.setState({ tabActiveIndex: activeIndex });\r\n      if (activeIndex === 0) {\r\n        this.setState({\r\n          saveEnabled:\r\n            Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnRailDispatch\r\n            ) && this.state.modRailDispatch.DispatchStatus === \"READY\",\r\n        });\r\n      }\r\n      if (activeIndex === 1) {\r\n        this.setState({\r\n          compartmentSaveEnabled: this.checkCompartmentSaveEnabled(\r\n            this.state.modWagonDetails\r\n          ),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleTabChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleModalDataChange = (modalData) => {\r\n    this.setState({ modalData });\r\n  };\r\n\r\n  // Manual Entry\r\n\r\n  handleManualEntry = (setReadyToRender = false) => {\r\n    try {\r\n      const notification = {\r\n        messageType: \"critical\",\r\n        message: \"CompartmentManualEntry_OpenStatus\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n            keyValues: [this.state.modRailDispatch.DispatchCode],\r\n            isSuccess: false,\r\n            errorMessage: \"WagonStatusForManualEntryInvalid\",\r\n          },\r\n        ],\r\n      };\r\n      if (this.state.modWagonDetails.length > 0) {\r\n        const trailerCode = this.checkManualEntryEnabled(\r\n          this.state.modWagonDetails\r\n        );\r\n        if (trailerCode === \"\" && !this.state.isOpenSubPage) {\r\n          this.props.onNotify(notification);\r\n          this.props.onSubPageBack();\r\n        } else {\r\n          this.preprocessManualEntryData(trailerCode, (saveEnabled) => {\r\n            if (setReadyToRender) {\r\n              this.setState(\r\n                {\r\n                  isOpenSubPage: true,\r\n                  compartmentManualEntrySaveEnabled:\r\n                    trailerCode !== \"\" && saveEnabled,\r\n                  isReadyToRender: true,\r\n                  manualEntryTabActiveIndex: 0,\r\n                },\r\n                () => this.props.onSetRightPaneDisplay(false)\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  isOpenSubPage: true,\r\n                  compartmentManualEntrySaveEnabled:\r\n                    trailerCode !== \"\" && saveEnabled,\r\n                  manualEntryTabActiveIndex: 0,\r\n                },\r\n                () => this.props.onSetRightPaneDisplay(false)\r\n              );\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        this.handleSubPageBackOnClick();\r\n        this.props.onNotify(notification);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleManualEntry\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  preprocessManualEntryData(trailerCode, callback = () => { }) {\r\n    let compartmentPlan = null;\r\n    let compartmentDetailPlan = null;\r\n    if (trailerCode !== \"\") {\r\n      for (let item of this.state.modRailDispatch.DispatchCompartmentPlanList) {\r\n        if (item.TrailerCode === trailerCode) {\r\n          compartmentPlan = item;\r\n          break;\r\n        }\r\n      }\r\n      for (let item of this.state.modRailDispatch\r\n        .DispatchCompartmentDetailPlanList) {\r\n        if (item.TrailerCode === trailerCode) {\r\n          compartmentDetailPlan = item;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (compartmentPlan !== null && compartmentDetailPlan !== null) {\r\n      if (!compartmentPlan.FinishedProductCode) {\r\n        const notification = {\r\n          messageType: \"critical\",\r\n          message: \"ViewRailDispatchManualEntry_status\",\r\n          messageResultDetails: [\r\n            {\r\n              keyFields: [\"Rail_Receipt_Wagon\"],\r\n              keyValues: [trailerCode],\r\n              isSuccess: false,\r\n              errorMessage: \"RailDispatchManualEntry_ProductNotAssigned\",\r\n            },\r\n          ],\r\n        };\r\n        this.props.onNotify(notification);\r\n        const loadingDataInfo = lodash.cloneDeep(this.state.loadingDataInfo);\r\n        const [\r\n          manualEntrySelectedAttributeList,\r\n          manualEntryAttributeValidationErrorList,\r\n        ] = this.initialManualEntrySelectedAttribute(loadingDataInfo);\r\n        this.setState({\r\n          loadingDataInfo,\r\n          modLoadingDataInfo: lodash.cloneDeep(loadingDataInfo),\r\n          manualEntryValidationDict:\r\n            this.initialManualEntryValidationErrors(loadingDataInfo),\r\n          manualEntrySelectedAttributeList,\r\n          manualEntryAttributeValidationErrorList,\r\n        });\r\n        callback(false);\r\n        return;\r\n      }\r\n\r\n      const loadingDataInfo = lodash.cloneDeep(this.state.loadingDataInfo);\r\n      loadingDataInfo.CommonInfo.TrailerCode = trailerCode;\r\n      loadingDataInfo.CommonInfo.CarrierCode =\r\n        compartmentPlan.CarrierCompanyCode;\r\n      loadingDataInfo.TransactionFPinfo.FinishedProductCode =\r\n        compartmentPlan.FinishedProductCode;\r\n      loadingDataInfo.TransactionFPinfo.QuantityUOM =\r\n        this.state.modRailDispatch.QuantityUOM;\r\n      loadingDataInfo.TransactionFPinfo.StartTime = new Date();\r\n      loadingDataInfo.TransactionFPinfo.EndTime = new Date();\r\n\r\n\r\n      this.getFinishedProduct(\r\n        compartmentPlan.FinishedProductCode,\r\n        compartmentPlan.ShareholderCode,\r\n        (entityResult) => {\r\n          loadingDataInfo.ArrTransactionBP = [];\r\n          loadingDataInfo.ArrTransactionAdditive = [];\r\n          if (\r\n            Array.isArray(entityResult.FinishedProductItems) &&\r\n            entityResult.FinishedProductItems.length > 0\r\n          ) {\r\n            for (let item of entityResult.FinishedProductItems) {\r\n              const productInfo = lodash.cloneDeep(\r\n                emptyRailMarineTransactionProductInfo\r\n              );\r\n              productInfo.FinishedProductCode = item.FinishedProductCode;\r\n              productInfo.BaseProductCode = item.BaseProductCode;\r\n              productInfo.AdditiveProductCode = item.AdditiveCode;\r\n              if (item.AdditiveCode !== null && item.AdditiveCode !== \"\") {\r\n                loadingDataInfo.ArrTransactionAdditive.push(productInfo);\r\n              } else {\r\n                loadingDataInfo.ArrTransactionBP.push(productInfo);\r\n              }\r\n            }\r\n          }\r\n\r\n          const [\r\n            manualEntrySelectedAttributeList,\r\n            manualEntryAttributeValidationErrorList,\r\n          ] = this.initialManualEntrySelectedAttribute(loadingDataInfo);\r\n          this.setState({\r\n            loadingDataInfo,\r\n            modLoadingDataInfo: lodash.cloneDeep(loadingDataInfo),\r\n            manualEntryValidationDict:\r\n              this.initialManualEntryValidationErrors(loadingDataInfo),\r\n            manualEntrySelectedAttributeList,\r\n            manualEntryAttributeValidationErrorList,\r\n          });\r\n          callback(true);\r\n        }\r\n      );\r\n    } else {\r\n      const loadingDataInfo = lodash.cloneDeep(this.state.loadingDataInfo);\r\n      const [\r\n        manualEntrySelectedAttributeList,\r\n        manualEntryAttributeValidationErrorList,\r\n      ] = this.initialManualEntrySelectedAttribute(loadingDataInfo);\r\n      this.setState({\r\n        loadingDataInfo,\r\n        modLoadingDataInfo: lodash.cloneDeep(loadingDataInfo),\r\n        manualEntrySelectedAttributeList,\r\n        manualEntryAttributeValidationErrorList,\r\n      });\r\n      callback(false);\r\n    }\r\n  }\r\n\r\n  getDefaultUOMs(bcuCode) {\r\n\r\n\r\n\r\n    let densityUOM = '';\r\n    let temperatureUOM = ''\r\n\r\n    if (bcuCode === '' || bcuCode === undefined)\r\n      return;\r\n\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.bcuCode,\r\n          value: bcuCode,\r\n        }\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.bcuCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetBCUDevice,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n\r\n          let bcu = result.EntityResult\r\n\r\n          temperatureUOM = bcu.TemperatureUOM;\r\n          densityUOM = bcu.DensityUOM;\r\n\r\n          let modLoadingDataInfo = lodash.cloneDeep(this.state.modLoadingDataInfo);\r\n          modLoadingDataInfo.TransactionFPinfo.TemperatureUOM = temperatureUOM;\r\n          modLoadingDataInfo.TransactionFPinfo.ProductDensityUOM = densityUOM;\r\n\r\n          modLoadingDataInfo.ArrTransactionAdditive.map(item => { item.TemperatureUOM = temperatureUOM; item.ProductDensityUOM = densityUOM; })\r\n          modLoadingDataInfo.ArrTransactionBP.map(item => { item.TemperatureUOM = temperatureUOM; item.ProductDensityUOM = densityUOM; })\r\n\r\n          this.setState({ modLoadingDataInfo });\r\n\r\n\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentManualEntryDetailsComposite:Error while getting getBCUDeviceDetails\"\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  GetMetersForLA(bcuCode, loadingArmCode) {\r\n\r\n\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.siteViewType,\r\n          value: Constants.siteViewType.RAIL_BCUVIEW,\r\n        },\r\n        {\r\n          key: KeyCodes.bcuCode,\r\n          value: bcuCode,\r\n        },\r\n        {\r\n          key: KeyCodes.terminalCode,\r\n          value: this.state.modRailDispatch.ActualTerminalCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.siteViewType,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetBCUViewTree,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            Array.isArray(result.EntityResult) &&\r\n            result.EntityResult.length > 0\r\n          ) {\r\n\r\n            let loadingArm = result.EntityResult[0].AssociatedArmsList.find(larm => larm.Code === loadingArmCode);\r\n            if (loadingArm !== null) {\r\n              let modLoadingDataInfo = lodash.cloneDeep(this.state.modLoadingDataInfo);\r\n\r\n              let mainLineMeters = [];\r\n              let additiveMeters = [];\r\n              mainLineMeters = loadingArm.AssociatedMeterList.find(meter => meter.MeterLineType === \"MAINLINE\");\r\n              additiveMeters = loadingArm.AssociatedMeterList.find(meter => meter.MeterLineType === \"ADDITIVE\");\r\n              let bpMeterCode = '';\r\n              let additiveMeterCode = '';\r\n              if (mainLineMeters.MeterList.length === 1) {\r\n                bpMeterCode = mainLineMeters.MeterList[0].Code;\r\n              }\r\n              if (additiveMeters.MeterList.length === 1) {\r\n                additiveMeterCode = additiveMeters.MeterList[0].Code;\r\n              }\r\n\r\n\r\n              if (bpMeterCode !== '') {\r\n\r\n                modLoadingDataInfo.ArrTransactionBP.map(item => { item.MeterCode = bpMeterCode; })\r\n\r\n              }\r\n\r\n              if (additiveMeterCode !== '') {\r\n                modLoadingDataInfo.ArrTransactionAdditive.map(item => { item.MeterCode = additiveMeterCode; })\r\n              }\r\n\r\n              this.setState({ modLoadingDataInfo });\r\n\r\n            }\r\n\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"SiteTreeView:Error occured in GetMetersForLA\", error);\r\n    }\r\n  }\r\n\r\n  initialManualEntrySelectedAttribute(loadingDataInfo) {\r\n    let selectedFPAttributeList = [];\r\n    let selectedBPAttributeList = [];\r\n    let selectedAdditiveAttributeList = [];\r\n\r\n    if (this.state.FPAttributeMetaDataList[0] !== undefined) {\r\n      selectedFPAttributeList = Utilities.attributesConvertoDecimal([\r\n        lodash.cloneDeep(this.state.FPAttributeMetaDataList[0]),\r\n      ]);\r\n    }\r\n    if (this.state.BPAttributeMetaDataList[0] !== undefined) {\r\n      selectedBPAttributeList = Utilities.attributesConvertoDecimal([\r\n        lodash.cloneDeep(this.state.BPAttributeMetaDataList[0]),\r\n      ]);\r\n    }\r\n    if (this.state.additiveAttributeMetaDataList[0] !== undefined) {\r\n      selectedAdditiveAttributeList = Utilities.attributesConvertoDecimal([\r\n        lodash.cloneDeep(this.state.additiveAttributeMetaDataList[0]),\r\n      ]);\r\n    }\r\n\r\n    const manualEntrySelectedAttributeList = [selectedFPAttributeList];\r\n    const manualEntryAttributeValidationErrorList = [\r\n      Utilities.getAttributeInitialValidationErrors(\r\n        this.state.FPAttributeMetaDataList\r\n      ),\r\n    ];\r\n    for (let i = 0; i < loadingDataInfo.ArrTransactionBP.length; i++) {\r\n      manualEntrySelectedAttributeList.push(\r\n        lodash.cloneDeep(selectedBPAttributeList)\r\n      );\r\n      manualEntryAttributeValidationErrorList.push(\r\n        Utilities.getAttributeInitialValidationErrors(\r\n          this.state.BPAttributeMetaDataList\r\n        )\r\n      );\r\n    }\r\n    for (let i = 0; i < loadingDataInfo.ArrTransactionAdditive.length; i++) {\r\n      manualEntrySelectedAttributeList.push(\r\n        lodash.cloneDeep(selectedAdditiveAttributeList)\r\n      );\r\n      manualEntryAttributeValidationErrorList.push(\r\n        Utilities.getAttributeInitialValidationErrors(\r\n          this.state.additiveAttributeMetaDataList\r\n        )\r\n      );\r\n    }\r\n\r\n    return [\r\n      manualEntrySelectedAttributeList,\r\n      manualEntryAttributeValidationErrorList,\r\n    ];\r\n  }\r\n\r\n  initialManualEntryValidationErrors(loadingDataInfo) {\r\n    const commonValidation = {};\r\n    const productValidation = {};\r\n    for (let key in railDispatchCompartmentManualEntryValidationDef) {\r\n      if (key === \"BayCode\" || key === \"BCUCode\" || key === \"LoadingArm\") {\r\n        continue;\r\n      } else if (\r\n        key === \"TransactionID\" ||\r\n        key === \"StartTime\" ||\r\n        key === \"EndTime\" ||\r\n        key === \"Remarks\"\r\n      ) {\r\n        commonValidation[key] = \"\";\r\n      } else {\r\n        productValidation[key] = \"\";\r\n      }\r\n    }\r\n    const manualEntryValidationDict = {\r\n      bayCode: \"\",\r\n      BCUCode: \"\",\r\n      LoadingArm: \"\",\r\n      common: commonValidation,\r\n      product: [productValidation],\r\n    };\r\n    for (let i = 0; i < loadingDataInfo.ArrTransactionBP.length; i++) {\r\n      manualEntryValidationDict.product.push(\r\n        lodash.cloneDeep(productValidation)\r\n      );\r\n    }\r\n    for (let i = 0; i < loadingDataInfo.ArrTransactionAdditive.length; i++) {\r\n      manualEntryValidationDict.product.push(\r\n        lodash.cloneDeep(productValidation)\r\n      );\r\n    }\r\n    return manualEntryValidationDict;\r\n  }\r\n\r\n  handleManualEntryTabChange = (activeIndex) => {\r\n    try {\r\n      this.setState({ manualEntryTabActiveIndex: activeIndex });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleManualEntryTabChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCompartmentManualEntryChange = (\r\n    propertyName,\r\n    data,\r\n    dataPosition = {},\r\n    errorPosition = {}\r\n  ) => {\r\n    try {\r\n      if (propertyName === \"TrailerCode\") {\r\n        this.preprocessManualEntryData(data, () => {\r\n          this.setState({ compartmentManualEntrySaveEnabled: true });\r\n        });\r\n        return;\r\n      }\r\n\r\n      const modLoadingDataInfo = lodash.cloneDeep(\r\n        this.state.modLoadingDataInfo\r\n      );\r\n      const manualEntryValidationDict = lodash.cloneDeep(\r\n        this.state.manualEntryValidationDict\r\n      );\r\n\r\n      if (dataPosition.type !== undefined) {\r\n        if (dataPosition.index !== undefined) {\r\n          modLoadingDataInfo[dataPosition.type][dataPosition.index][\r\n            propertyName\r\n          ] = data;\r\n        } else {\r\n          modLoadingDataInfo[dataPosition.type][propertyName] = data;\r\n        }\r\n      } else {\r\n        modLoadingDataInfo.CommonInfo[propertyName] = data;\r\n      }\r\n\r\n      if (errorPosition.category !== undefined) {\r\n        if (errorPosition.category === \"common\") {\r\n          if (\r\n            railDispatchCompartmentManualEntryValidationDef[propertyName] !==\r\n            undefined\r\n          ) {\r\n            manualEntryValidationDict.common[propertyName] =\r\n              Utilities.validateField(\r\n                railDispatchCompartmentManualEntryValidationDef[propertyName],\r\n                data\r\n              );\r\n            this.setState({ manualEntryValidationDict });\r\n          }\r\n        } else if (errorPosition.category === \"product\") {\r\n          if (\r\n            railDispatchCompartmentManualEntryValidationDef[propertyName] !==\r\n            undefined\r\n          ) {\r\n            manualEntryValidationDict.product[errorPosition.index][\r\n              propertyName\r\n            ] = Utilities.validateField(\r\n              railDispatchCompartmentManualEntryValidationDef[propertyName],\r\n              data\r\n            );\r\n            this.setState({ manualEntryValidationDict });\r\n          }\r\n        }\r\n      }\r\n\r\n      let triggerToGetLoadingArmCode = false;\r\n      if (propertyName === \"BayCode\") {\r\n        manualEntryValidationDict.bayCode = Utilities.validateField(\r\n          railDispatchCompartmentManualEntryValidationDef.BayCode,\r\n          data\r\n        );\r\n        let bcuCodeList = Utilities.transferListtoOptions(\r\n          this.state.clusterBCUOptions[data]\r\n        )\r\n        this.setState({\r\n          manualEntryValidationDict,\r\n          BCUCodeOptions: bcuCodeList,\r\n        });\r\n\r\n        if (bcuCodeList.length === 1) {\r\n          triggerToGetLoadingArmCode = true;\r\n          modLoadingDataInfo.CommonInfo.BCUCode = this.state.clusterBCUOptions[data][0];\r\n\r\n          this.getDefaultUOMs(modLoadingDataInfo.CommonInfo.BCUCode);\r\n        }\r\n      } else if (propertyName === \"BCUCode\") {\r\n        this.getDefaultUOMs(modLoadingDataInfo.CommonInfo.BCUCode);\r\n        triggerToGetLoadingArmCode = true;\r\n      }\r\n\r\n      this.setState({ modLoadingDataInfo });\r\n\r\n      if (triggerToGetLoadingArmCode) {\r\n        this.getLoadingArms(\r\n          modLoadingDataInfo.CommonInfo.BCUCode,\r\n          (entityResult) => {\r\n            const loadingArmCodeList = [];\r\n            if (Array.isArray(entityResult)) {\r\n              for (let item of entityResult) {\r\n                loadingArmCodeList.push(item);\r\n              }\r\n              if (loadingArmCodeList.length === 1) {\r\n                modLoadingDataInfo.TransactionFPinfo.ArmCode =\r\n                  loadingArmCodeList[0];\r\n                this.GetMetersForLA(modLoadingDataInfo.CommonInfo.BCUCode, loadingArmCodeList[0]);\r\n                this.setState({ modLoadingDataInfo });\r\n              }\r\n            }\r\n            this.setState({\r\n              loadingArmCodeOptions:\r\n                Utilities.transferListtoOptions(loadingArmCodeList),\r\n            });\r\n          }\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleCompartmentManualEntryChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleManualEntryDateTextChange = (\r\n    propertyName,\r\n    value,\r\n    error,\r\n    dataPosition\r\n  ) => {\r\n    try {\r\n      const manualEntryValidationDict = lodash.cloneDeep(\r\n        this.state.manualEntryValidationDict\r\n      );\r\n      const modLoadingDataInfo = lodash.cloneDeep(\r\n        this.state.modLoadingDataInfo\r\n      );\r\n      manualEntryValidationDict.common[propertyName] = error;\r\n      modLoadingDataInfo[dataPosition.type][propertyName] = value;\r\n      this.setState({ manualEntryValidationDict, modLoadingDataInfo });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleManualEntryDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleManualEntryAttributeCellDataEdit = (attribute, value, index) => {\r\n    try {\r\n      attribute.DefaultValue = value;\r\n      const manualEntryAttributeValidationErrorList = lodash.cloneDeep(\r\n        this.state.manualEntryAttributeValidationErrorList\r\n      );\r\n      manualEntryAttributeValidationErrorList[index].forEach(\r\n        (attributeValidation) => {\r\n          if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n            attributeValidation.attributeValidationErrors[attribute.Code] =\r\n              Utilities.valiateAttributeField(attribute, value);\r\n          }\r\n        }\r\n      );\r\n      this.setState({ manualEntryAttributeValidationErrorList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleManualEntryAttributeCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCompartmentManualEntryReset = () => {\r\n    try {\r\n      const loadingDataInfo = lodash.cloneDeep(this.state.loadingDataInfo);\r\n      const [\r\n        manualEntrySelectedAttributeList,\r\n        manualEntryAttributeValidationErrorList,\r\n      ] = this.initialManualEntrySelectedAttribute(loadingDataInfo);\r\n      this.setState({\r\n        modLoadingDataInfo: loadingDataInfo,\r\n        manualEntryValidationDict:\r\n          this.initialManualEntryValidationErrors(loadingDataInfo),\r\n        manualEntrySelectedAttributeList,\r\n        manualEntryAttributeValidationErrorList,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite:Error occurred on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCompartmentManualEntrySave = () => {\r\n    try {\r\n     // this.setState({ compartmentManualEntrySaveEnabled: false });\r\n      const modLoadingDataInfo = lodash.cloneDeep(\r\n        this.state.modLoadingDataInfo\r\n      );\r\n\r\n      if (this.validateManualEntry(modLoadingDataInfo)) {\r\n        modLoadingDataInfo.TransactionFPinfo.GrossQuantity =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.GrossQuantity\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.NetQuantity =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.NetQuantity\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.Temperature =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.Temperature\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.ProductDensity =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.ProductDensity\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.StartTotalizer =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.StartTotalizer\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.EndTotalizer =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.EndTotalizer\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.NetStartTotalizer =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.NetStartTotalizer\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.NetEndTotalizer =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.NetEndTotalizer\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.CalculatedGross =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.CalculatedGross\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.CalculatedNet =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.CalculatedNet\r\n          );\r\n        for (let index in modLoadingDataInfo.ArrTransactionBP) {\r\n          modLoadingDataInfo.ArrTransactionBP[index].StartTime =\r\n            modLoadingDataInfo.TransactionFPinfo.StartTime;\r\n          modLoadingDataInfo.ArrTransactionBP[index].EndTime =\r\n            modLoadingDataInfo.TransactionFPinfo.EndTime;\r\n          modLoadingDataInfo.ArrTransactionBP[index].ArmCode =\r\n            modLoadingDataInfo.TransactionFPinfo.ArmCode;\r\n          modLoadingDataInfo.ArrTransactionBP[index].QuantityUOM =\r\n            modLoadingDataInfo.TransactionFPinfo.QuantityUOM;\r\n          modLoadingDataInfo.ArrTransactionBP[index].TransactionID =\r\n            modLoadingDataInfo.TransactionFPinfo.TransactionID;\r\n          modLoadingDataInfo.ArrTransactionBP[index].FinishedProductCode =\r\n            modLoadingDataInfo.TransactionFPinfo.FinishedProductCode;\r\n\r\n          modLoadingDataInfo.ArrTransactionBP[index].GrossQuantity =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].GrossQuantity\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].NetQuantity =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].NetQuantity\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].Temperature =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].Temperature\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].ProductDensity =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].ProductDensity\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].StartTotalizer =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].StartTotalizer\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].EndTotalizer =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].EndTotalizer\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].NetStartTotalizer =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].NetStartTotalizer\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].NetEndTotalizer =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].NetEndTotalizer\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].CalculatedGross =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].CalculatedGross\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].CalculatedNet =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].CalculatedNet\r\n            );\r\n        }\r\n        for (let index in modLoadingDataInfo.ArrTransactionAdditive) {\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].StartTime =\r\n            modLoadingDataInfo.TransactionFPinfo.StartTime;\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].EndTime =\r\n            modLoadingDataInfo.TransactionFPinfo.EndTime;\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].ArmCode =\r\n            modLoadingDataInfo.TransactionFPinfo.ArmCode;\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].QuantityUOM =\r\n            modLoadingDataInfo.TransactionFPinfo.QuantityUOM;\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].TransactionID =\r\n            modLoadingDataInfo.TransactionFPinfo.TransactionID;\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].FinishedProductCode =\r\n            modLoadingDataInfo.TransactionFPinfo.FinishedProductCode;\r\n\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].GrossQuantity =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].GrossQuantity\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].NetQuantity =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].NetQuantity\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].Temperature =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].Temperature\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].ProductDensity =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].ProductDensity\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].StartTotalizer =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].StartTotalizer\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].EndTotalizer =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].EndTotalizer\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].NetStartTotalizer =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].NetStartTotalizer\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].NetEndTotalizer =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].NetEndTotalizer\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].CalculatedGross =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].CalculatedGross\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].CalculatedNet =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].CalculatedNet\r\n            );\r\n        }\r\n        this.fillManualEntryAttributeDetails(modLoadingDataInfo);\r\n        let tempLoadingInfo = lodash.cloneDeep(modLoadingDataInfo);\r\n        \r\n        let showManualEntryAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n          \r\n      this.setState({ showManualEntryAuthenticationLayout, tempLoadingInfo }, () => {\r\n        if (showManualEntryAuthenticationLayout === false) {\r\n          this.addLoadingDetails();\r\n          }\r\n        });\r\n\r\n       \r\n      } else {\r\n        this.setState({ compartmentManualEntrySaveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite:Error occurred on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  \r\n  addLoadingDetails = () => {\r\n    try {\r\n      this.handleAuthenticationClose();\r\n      this.setState({ compartmentManualEntrySaveEnabled: false });\r\n      let tempLoadingInfo = lodash.cloneDeep(this.state.tempLoadingInfo);\r\n      this.saveManualEntry(tempLoadingInfo);\r\n    } catch (error) {\r\n      console.log(\"Rail Loading DetailsComposite : Error in save Rail Loading details\");\r\n    }\r\n  };\r\n\r\n  validateManualEntry(modLoadingDataInfo) {\r\n    const manualEntryValidationDict = lodash.cloneDeep(\r\n      this.state.manualEntryValidationDict\r\n    );\r\n    let validateFlag = true;\r\n\r\n    manualEntryValidationDict.bayCode = Utilities.validateField(\r\n      railDispatchCompartmentManualEntryValidationDef.BayCode,\r\n      modLoadingDataInfo.CommonInfo.BayCode\r\n    );\r\n\r\n    manualEntryValidationDict.BCUCode = Utilities.validateField(\r\n      railDispatchCompartmentManualEntryValidationDef.BCUCode,\r\n      modLoadingDataInfo.CommonInfo.BCUCode\r\n    );\r\n\r\n    manualEntryValidationDict.LoadingArm = Utilities.validateField(\r\n      railDispatchCompartmentManualEntryValidationDef.LoadingArm,\r\n      modLoadingDataInfo.TransactionFPinfo.ArmCode\r\n    );\r\n\r\n\r\n    if (manualEntryValidationDict.bayCode !== \"\") {\r\n      validateFlag = false;\r\n    }\r\n\r\n    if (manualEntryValidationDict.BCUCode !== \"\") {\r\n      validateFlag = false;\r\n    }\r\n\r\n    if (manualEntryValidationDict.LoadingArm !== \"\") {\r\n      validateFlag = false;\r\n    }\r\n\r\n    for (let key in manualEntryValidationDict.common) {\r\n      manualEntryValidationDict.common[key] = Utilities.validateField(\r\n        railDispatchCompartmentManualEntryValidationDef[key],\r\n        modLoadingDataInfo.TransactionFPinfo[key]\r\n      );\r\n      if (manualEntryValidationDict.common[key] !== \"\") {\r\n        validateFlag = false;\r\n      }\r\n    }\r\n\r\n    if (\r\n      modLoadingDataInfo.TransactionFPinfo.StartTime >=\r\n      modLoadingDataInfo.TransactionFPinfo.EndTime\r\n    ) {\r\n      manualEntryValidationDict.common[\"StartTime\"] =\r\n        \"MarineDispatchManualEntry_ErrorLoadTime\";\r\n\r\n      validateFlag = false;\r\n    }\r\n\r\n\r\n    let tabIndex;\r\n    let index = 0;\r\n    for (let key in manualEntryValidationDict.product[index]) {\r\n      manualEntryValidationDict.product[index][key] = Utilities.validateField(\r\n        railDispatchCompartmentManualEntryValidationDef[key],\r\n        modLoadingDataInfo.TransactionFPinfo[key]\r\n      );\r\n      if (manualEntryValidationDict.product[index][key] !== \"\") {\r\n        validateFlag = false;\r\n        if (tabIndex === undefined) {\r\n          tabIndex = index;\r\n        }\r\n      }\r\n    }\r\n    for (let item of modLoadingDataInfo.ArrTransactionBP) {\r\n      index += 1;\r\n      for (let key in manualEntryValidationDict.product[index]) {\r\n        manualEntryValidationDict.product[index][key] = Utilities.validateField(\r\n          railDispatchCompartmentManualEntryValidationDef[key],\r\n          item[key]\r\n        );\r\n        if (manualEntryValidationDict.product[index][key] !== \"\") {\r\n          validateFlag = false;\r\n          if (tabIndex === undefined) {\r\n            tabIndex = index;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (let item of modLoadingDataInfo.ArrTransactionAdditive) {\r\n      index += 1;\r\n      for (let key in manualEntryValidationDict.product[index]) {\r\n        manualEntryValidationDict.product[index][key] = Utilities.validateField(\r\n          railDispatchCompartmentManualEntryValidationDef[key],\r\n          item[key]\r\n        );\r\n        if (manualEntryValidationDict.product[index][key] !== \"\") {\r\n          validateFlag = false;\r\n          if (tabIndex === undefined) {\r\n            tabIndex = index;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const manualEntrySelectedAttributeList = lodash.cloneDeep(\r\n      this.state.manualEntrySelectedAttributeList\r\n    );\r\n    const manualEntryAttributeValidationErrorList = lodash.cloneDeep(\r\n      this.state.manualEntryAttributeValidationErrorList\r\n    );\r\n    for (let i = 0; i < manualEntrySelectedAttributeList.length; i++) {\r\n      for (let attribute of manualEntrySelectedAttributeList[i]) {\r\n        for (let attributeValidation of manualEntryAttributeValidationErrorList[\r\n          i\r\n        ]) {\r\n          if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n            for (let attributeMetaData of attribute.attributeMetaDataList) {\r\n              let errorMsg = Utilities.valiateAttributeField(\r\n                attributeMetaData,\r\n                attributeMetaData.DefaultValue\r\n              );\r\n              if (errorMsg !== \"\") {\r\n                validateFlag = false;\r\n                if (tabIndex === undefined) {\r\n                  tabIndex = i;\r\n                }\r\n              }\r\n              attributeValidation.attributeValidationErrors[\r\n                attributeMetaData.Code\r\n              ] = errorMsg;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (tabIndex !== undefined) {\r\n      this.handleManualEntryTabChange(tabIndex);\r\n    }\r\n    this.setState({\r\n      manualEntryValidationDict,\r\n      manualEntryAttributeValidationErrorList,\r\n    });\r\n\r\n    return validateFlag;\r\n  }\r\n\r\n  fillManualEntryAttributeDetails(modLoadingDataInfo) {\r\n    const manualEntrySelectedAttributeList = lodash.cloneDeep(\r\n      this.state.manualEntrySelectedAttributeList\r\n    );\r\n\r\n    const fillItem = (item, rowAttributeList) => {\r\n      const attributeList =\r\n        Utilities.attributesDatatypeConversion(rowAttributeList);\r\n      item.Attributes = [];\r\n      attributeList.forEach((comp) => {\r\n        const attribute = {\r\n          ListOfAttributeData: [],\r\n        };\r\n        attribute.TerminalCode = comp.TerminalCode;\r\n        comp.attributeMetaDataList.forEach((det) => {\r\n          attribute.ListOfAttributeData.push({\r\n            AttributeCode: det.Code,\r\n            AttributeValue: det.DefaultValue,\r\n          });\r\n        });\r\n        item.Attributes.push(attribute);\r\n      });\r\n    };\r\n\r\n    let index = 0;\r\n    fillItem(\r\n      modLoadingDataInfo.TransactionFPinfo,\r\n      manualEntrySelectedAttributeList[index]\r\n    );\r\n    for (let BPItem of modLoadingDataInfo.ArrTransactionBP) {\r\n      index += 1;\r\n      fillItem(BPItem, manualEntrySelectedAttributeList[index]);\r\n    }\r\n    for (let additiveItem of modLoadingDataInfo.ArrTransactionAdditive) {\r\n      index += 1;\r\n      fillItem(additiveItem, manualEntrySelectedAttributeList[index]);\r\n    }\r\n  }\r\n\r\n  saveManualEntry(modLoadingDataInfo) {\r\n    const keyCode = [\r\n      {\r\n        key: KeyCodes.railDispatchCode,\r\n        value: modLoadingDataInfo.CommonInfo.DispatchCode,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.railDispatchCode,\r\n      KeyCodes: keyCode,\r\n      Entity: [modLoadingDataInfo],\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewRailDispatchManualEntry_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n          keyValues: [modLoadingDataInfo.CommonInfo.DispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.RailDispatchManualEntry,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          // this.getRailDispatch({\r\n          //   Common_Code: modLoadingDataInfo.CommonInfo.DispatchCode,\r\n          // });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in saveManualEntry: \", result.ErrorList);\r\n        }\r\n        this.setState({ compartmentManualEntrySaveEnabled: true });\r\n        this.props.onNotify(notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ compartmentManualEntrySaveEnabled: true });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onNotify(notification);\r\n      });\r\n  }\r\n\r\n  // View Audit Trail\r\n\r\n  handleViewAuditTrail = () => {\r\n    try {\r\n      this.getAuditTrail();\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleViewAuditTrail\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getAuditTrail(setReadyToRender = false) {\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      KeyCodes: [\r\n        {\r\n          key: \"DispatchCode\",\r\n          value: this.state.modRailDispatch.DispatchCode,\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailDispatchAuditTrail,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          for (let i = 0; i < result.EntityResult.length; i++) {\r\n            result.EntityResult[i].UpdatedTime = new Date(\r\n              result.EntityResult[i].UpdatedTime\r\n            ).toLocaleString();\r\n            result.EntityResult[i].DispatchStatusInNumber =\r\n              Constants.ShipmentStatus[result.EntityResult[i].DispatchStatus];\r\n          }\r\n          let attributeMetaDataList = lodash.cloneDeep(\r\n            this.state.auditTrailAttributeMetaDataList\r\n          );\r\n          for (let i = 0; i < result.EntityResult.length; i++) {\r\n            result.EntityResult[i].AttributesforUI =\r\n              this.formReadonlyCompAttributes(\r\n                result.EntityResult[i].Attributes,\r\n                attributeMetaDataList\r\n              );\r\n          }\r\n          if (setReadyToRender) {\r\n            this.setState(\r\n              {\r\n                isOpenSubPage: true,\r\n                auditTrailList: result.EntityResult,\r\n                isReadyToRender: true,\r\n              },\r\n              () => this.props.onSetRightPaneDisplay(false)\r\n            );\r\n          } else {\r\n            this.setState(\r\n              {\r\n                isOpenSubPage: true,\r\n                auditTrailList: result.EntityResult,\r\n              },\r\n              () => this.props.onSetRightPaneDisplay(false)\r\n            );\r\n          }\r\n        } else {\r\n          console.log(\"Error in getAuditTrail: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getAuditTrail: \", error);\r\n      });\r\n  }\r\n\r\n  formReadonlyCompAttributes(attributes, attributeMetaDataList) {\r\n    let compAttributes = [];\r\n    if (\r\n      attributeMetaDataList !== null &&\r\n      attributeMetaDataList !== undefined &&\r\n      attributeMetaDataList.length > 0\r\n    ) {\r\n      attributeMetaDataList.forEach((att) => {\r\n        att.attributeMetaDataList.forEach((attribute) => {\r\n          //if (attribute.TerminalCode)\r\n          compAttributes.push({\r\n            AttributeCode: attribute.Code,\r\n            AttributeName: attribute.DisplayName\r\n              ? attribute.DisplayName\r\n              : attribute.Code,\r\n            AttributeValue: attribute.DefaultValue,\r\n            TerminalCode: attribute.TerminalCode,\r\n            IsMandatory: attribute.IsMandatory,\r\n            DataType: attribute.DataType,\r\n            IsReadonly: attribute.IsReadonly,\r\n            MinValue: attribute.MinValue,\r\n            MaxValue: attribute.MaxValue,\r\n            ValidationFormat: attribute.ValidationFormat,\r\n            compSequenceNo: \"\",\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    if (\r\n      attributes !== null &&\r\n      attributes !== undefined &&\r\n      attributes.length > 0\r\n    ) {\r\n      attributes.forEach((att) => {\r\n        compAttributes.forEach((compAtt) => {\r\n          if (compAtt.TerminalCode === att.TerminalCode) {\r\n            att.ListOfAttributeData.forEach((selAtt) => {\r\n              if (compAtt.AttributeCode === selAtt.AttributeCode)\r\n                compAtt.AttributeValue = selAtt.AttributeValue;\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    return compAttributes;\r\n  }\r\n\r\n  handleOpenPrintAuditTrailPreview = () => {\r\n    const modalData = lodash.cloneDeep(this.state.modalData);\r\n    modalData.printAuditTrail.isOpen = true;\r\n    this.setState({ modalData });\r\n  };\r\n\r\n  handlePrintAuditTrail = (title) => {\r\n    let el = window.document.getElementById(\"printTable\").innerHTML;\r\n    const iframe = window.document.createElement(\"iframe\");\r\n    let doc = null;\r\n    window.document.body.appendChild(iframe);\r\n    doc = iframe.contentWindow.document;\r\n    const str1 = el.substring(0, el.indexOf(\"<table\") + 6);\r\n    const str2 = el.substring(el.indexOf(\"<table\") + 6, el.length);\r\n    const str3 = title;\r\n    el = str3 + str1 + ' border=\"1\" cellspacing=\"0\"' + str2;\r\n    el = el.replace('<tfoot class=\"p-datatable-tfoot\">', \"\");\r\n    el = el.replace(\r\n      '<tr><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td></tr>',\r\n      \"\"\r\n    );\r\n    doc.write(el);\r\n    doc.close();\r\n    iframe.contentWindow.focus();\r\n    iframe.contentWindow.print();\r\n    setTimeout(() => {\r\n      window.document.body.removeChild(iframe);\r\n    }, 2000);\r\n    const modalData = lodash.cloneDeep(this.state.modalData);\r\n    modalData.printAuditTrail.isOpen = false;\r\n    this.setState({ modalData });\r\n  };\r\n\r\n  // View Loading Details\r\n\r\n  handleViewLoadingDetails = (setReadyToRender = false) => {\r\n    try {\r\n      this.props.getLookUpData(\"ViewRailDispatch\", (entityResult) => {\r\n        const configFieldsString =\r\n          entityResult.ViewRailLoadingDetailsFields1 +\r\n          Constants.delimiter +\r\n          entityResult.ViewRailLoadingDetailsFields2;\r\n        const configFieldsList = configFieldsString.split(Constants.delimiter);\r\n        const loadingDetailsHideColumnList = [];\r\n        for (let item of configFieldsList) {\r\n          const itemList = item.split(\":\");\r\n          if (itemList.length === 2 && itemList[1] === \"0\") {\r\n            loadingDetailsHideColumnList.push(itemList[0]);\r\n          }\r\n        }\r\n        this.setState({ loadingDetailsHideColumnList });\r\n        this.getLoadingDetails(setReadyToRender);\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleViewLoadingDetails\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getLoadingDetails(setReadyToRender = false) {\r\n    const obj = {\r\n      DispatchCode: this.state.modRailDispatch.DispatchCode,\r\n      TMWebApiRequest: {\r\n        ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n        KeyCodes: [\r\n          {\r\n            key: \"RailDispatchCode\",\r\n            value: this.state.modRailDispatch.DispatchCode,\r\n          },\r\n        ],\r\n      },\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailDispatchLoadingDetails,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          for (let i = 0; i < result.EntityResult.Table.length; i++) {\r\n            result.EntityResult.Table[i].ProductCode =\r\n              result.EntityResult.Table[i].ProductCode.replace(/&nbsp;/g, \" \");\r\n          }\r\n          if (setReadyToRender) {\r\n            this.setState(\r\n              {\r\n                isOpenSubPage: true,\r\n                loadingDetailsList: result.EntityResult.Table,\r\n                isReadyToRender: true,\r\n              },\r\n              () => this.props.onSetRightPaneDisplay(false)\r\n            );\r\n          } else {\r\n            this.setState(\r\n              {\r\n                isOpenSubPage: true,\r\n                loadingDetailsList: result.EntityResult.Table,\r\n              },\r\n              () => this.props.onSetRightPaneDisplay(false)\r\n            );\r\n          }\r\n        } else {\r\n          console.log(\"Error in getLoadingDetails: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getLoadingDetails: \", error);\r\n      });\r\n  }\r\n\r\n  // Rail Wagon Assignment\r\n\r\n  handleOpenRailWagonAssignment = (setReadyToRender = false) => {\r\n    try {\r\n      this.initialRailWagonAssignmentList();\r\n      if (setReadyToRender) {\r\n        this.setState(\r\n          {\r\n            isOpenSubPage: true,\r\n            isReadyToRender: true,\r\n            railWagonAssignmentSaveEnabled: true,\r\n          },\r\n          () => this.props.onSetRightPaneDisplay(false)\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            isOpenSubPage: true,\r\n            railWagonAssignmentSaveEnabled: true,\r\n          },\r\n          () => this.props.onSetRightPaneDisplay(false)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleOpenRailWagonAssignment\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  initialRailWagonAssignmentList() {\r\n    const railWagonAssignmentData = {\r\n      CarrierCompanyCode: \"\",\r\n      TrailerCode: \"\",\r\n    };\r\n    if (\r\n      Array.isArray(\r\n        this.state.modRailDispatch.DispatchCompartmentDetailPlanList\r\n      )\r\n    ) {\r\n      const modRailWagonList = [];\r\n      for (let item of this.state.modRailDispatch\r\n        .DispatchCompartmentDetailPlanList) {\r\n        modRailWagonList.push({\r\n          SequenceNo: modRailWagonList.length + 1,\r\n          AssociatedOrderItems: \"\",\r\n          CompartmentSeqNoInVehicle: \"\",\r\n          QuantityUOM: \"\",\r\n          Quantity: \"\",\r\n          TrailerCode: item.TrailerCode,\r\n          CarrierCompanyCode: item.CarrierCompanyCode,\r\n          CompartmentCode: \"\",\r\n          ShareholderCode: \"\",\r\n          FinishedProductCode: \"\",\r\n          CustomerCode: \"\",\r\n          DestinationCode: \"\",\r\n          DispatchCode: \"\",\r\n          AssociatedContractItems: [],\r\n          Attributes: [],\r\n        });\r\n      }\r\n      this.setState({\r\n        railWagonAssignmentData,\r\n        modRailWagonList,\r\n        trailerCodeOptions: [],\r\n        selectedRailWagons: [],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        railWagonAssignmentData,\r\n        modRailWagonList: [],\r\n        trailerCodeOptions: [],\r\n        selectedRailWagons: [],\r\n      });\r\n    }\r\n  }\r\n\r\n  handleRailWagonAssignmentChange = (propertyName, data) => {\r\n    const railWagonAssignmentData = lodash.cloneDeep(\r\n      this.state.railWagonAssignmentData\r\n    );\r\n    railWagonAssignmentData[propertyName] = data;\r\n    if (propertyName === \"CarrierCompanyCode\") {\r\n      this.getTrailerCodes(data);\r\n    } else if (propertyName === \"TrailerCode\") {\r\n    }\r\n    this.setState({ railWagonAssignmentData });\r\n  };\r\n\r\n  handleRailWagonSelectionChange = (selectedRailWagons) => {\r\n    this.setState({ selectedRailWagons });\r\n  };\r\n\r\n  handleRailWagonAssignmentAdd = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        const notification = {\r\n          messageType: \"critical\",\r\n          message: \"ShipmentCompDetail_SavedStatus\",\r\n          messageResultDetails: [],\r\n        };\r\n\r\n        if (this.state.railWagonAssignmentData.CarrierCompanyCode === \"\") {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [],\r\n            keyValues: [],\r\n            isSuccess: false,\r\n            errorMessage: \"RailDispatchWagonAssignment_CarrierEmpty\",\r\n          });\r\n          this.props.onNotify(notification);\r\n          return;\r\n        } else if (this.state.railWagonAssignmentData.TrailerCode === \"\") {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [],\r\n            keyValues: [],\r\n            isSuccess: false,\r\n            errorMessage: \"RailDispatchWagonAssignment_RailWagonEmpty\",\r\n          });\r\n          this.props.onNotify(notification);\r\n          return;\r\n        }\r\n\r\n        const obj = {\r\n          DispatchCode: this.state.modRailDispatch.DispatchCode,\r\n          WagonCode: this.state.railWagonAssignmentData.TrailerCode,\r\n          CarrierCode: this.state.railWagonAssignmentData.CarrierCompanyCode,\r\n          TMWebApiRequest: {\r\n            ShareHolderCode:\r\n              this.props.userDetails.EntityResult.PrimaryShareholder,\r\n            KeyCodes: [\r\n              {\r\n                key: \"RailDispatchCode\",\r\n                value: this.state.modRailDispatch.DispatchCode,\r\n              },\r\n            ],\r\n          },\r\n        };\r\n        notification.messageResultDetails.push({\r\n          keyFields: [\"ViewRailLoadingDetails_RailWagonCode\"],\r\n          keyValues: [this.state.railWagonAssignmentData.TrailerCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        });\r\n        axios(\r\n          RestAPIs.RailDispatchValidateWagonToAssign,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            const result = response.data;\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\";\r\n            notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n            if (result.IsSuccess === true) {\r\n              const railWagonAssignmentData = lodash.cloneDeep(\r\n                this.state.railWagonAssignmentData\r\n              );\r\n              const modRailWagonList = lodash.cloneDeep(\r\n                this.state.modRailWagonList\r\n              );\r\n              const newComp = {\r\n                SequenceNo: modRailWagonList.length + 1,\r\n                AssociatedOrderItems: \"\",\r\n                CompartmentSeqNoInVehicle: \"\",\r\n                QuantityUOM: \"\",\r\n                Quantity: \"\",\r\n                TrailerCode: railWagonAssignmentData.TrailerCode,\r\n                CarrierCompanyCode: railWagonAssignmentData.CarrierCompanyCode,\r\n                CompartmentCode: \"\",\r\n                ShareholderCode: \"\",\r\n                FinishedProductCode: \"\",\r\n                CustomerCode: \"\",\r\n                DestinationCode: \"\",\r\n                DispatchCode: this.state.modRailDispatch.DispatchCode,\r\n                AssociatedContractItems: [],\r\n                Attributes: [],\r\n              };\r\n              modRailWagonList.push(newComp);\r\n              railWagonAssignmentData.TrailerCode = \"\";\r\n\r\n              this.setState({\r\n                modRailWagonList,\r\n                selectedRailWagons: [],\r\n                railWagonAssignmentData,\r\n              });\r\n            } else {\r\n              console.log(\r\n                \"Error in RailDispatchValidateWagonToAssign: \",\r\n                result.ErrorList\r\n              );\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n              this.props.onNotify(notification);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\r\n              \"Error while RailDispatchValidateWagonToAssign: \",\r\n              error\r\n            );\r\n            notification.messageResultDetails[0].errorMessage = error;\r\n            this.props.onNotify(notification);\r\n          });\r\n      } catch (error) {\r\n        console.log(\r\n          \"RailDispatchDetailsComposite: Error occurred on handleRailWagonAssignmentAdd\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleRailWagonAssignmentDelete = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (this.state.selectedRailWagons.length > 0) {\r\n          if (this.state.modRailWagonList.length > 0) {\r\n            let modRailWagonList = lodash.cloneDeep(\r\n              this.state.modRailWagonList\r\n            );\r\n\r\n            this.state.selectedRailWagons.forEach((obj, index) => {\r\n              modRailWagonList = modRailWagonList.filter((item, cindex) => {\r\n                return item.SequenceNo !== obj.SequenceNo;\r\n              });\r\n            });\r\n\r\n            for (let index = 0; index < modRailWagonList.length; index++) {\r\n              modRailWagonList[index].SequenceNo = index + 1;\r\n            }\r\n\r\n            this.setState({ modRailWagonList });\r\n          }\r\n        }\r\n        this.setState({ selectedRailWagons: [] });\r\n      } catch (error) {\r\n        console.log(\r\n          \"RailDispatchDetailsComposite: Error occurred on handleRailWagonAssignmentDelete\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleRailWagonAssignmentMove = (isMoveUp) => {\r\n    try {\r\n      if (\r\n        this.state.modRailWagonList.length > 0 &&\r\n        this.state.selectedRailWagons.length === 1\r\n      ) {\r\n        const modRailWagonList = lodash.cloneDeep(this.state.modRailWagonList);\r\n        let index;\r\n        for (index = 0; index < modRailWagonList.length; index++) {\r\n          if (\r\n            modRailWagonList[index].SequenceNo ===\r\n            this.state.selectedRailWagons[0].SequenceNo\r\n          ) {\r\n            break;\r\n          }\r\n        }\r\n        if (isMoveUp) {\r\n          if (index === 0) {\r\n            return;\r\n          }\r\n          const temp = modRailWagonList[index - 1].TrailerCode;\r\n          modRailWagonList[index - 1].TrailerCode =\r\n            modRailWagonList[index].TrailerCode;\r\n          modRailWagonList[index].TrailerCode = temp;\r\n          this.setState({\r\n            modRailWagonList,\r\n            selectedRailWagons: [lodash.cloneDeep(modRailWagonList[index - 1])],\r\n          });\r\n        } else {\r\n          if (index === modRailWagonList.length - 1) {\r\n            return;\r\n          }\r\n          const temp = modRailWagonList[index + 1].TrailerCode;\r\n          modRailWagonList[index + 1].TrailerCode =\r\n            modRailWagonList[index].TrailerCode;\r\n          modRailWagonList[index].TrailerCode = temp;\r\n          this.setState({\r\n            modRailWagonList,\r\n            selectedRailWagons: [lodash.cloneDeep(modRailWagonList[index + 1])],\r\n          });\r\n        }\r\n      } else {\r\n        const notification = {\r\n          messageType: \"critical\",\r\n          message: \"ShipmentCompDetail_SavedStatus\",\r\n          messageResultDetails: [\r\n            {\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: \"ERRMSG_RAILWAGONSEQUENCE\",\r\n            },\r\n          ],\r\n        };\r\n        this.props.onNotify(notification);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleRailWagonAssignmentMove\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleRailWagonAssignmentReverseSelect = () => {\r\n    try {\r\n      const newSelectedRailWagons = [];\r\n      for (let item of this.state.modRailWagonList) {\r\n        let searchFlag = false;\r\n        for (let selectedItem of this.state.selectedRailWagons) {\r\n          if (item.SequenceNo === selectedItem.SequenceNo) {\r\n            searchFlag = true;\r\n            break;\r\n          }\r\n        }\r\n        if (!searchFlag) {\r\n          newSelectedRailWagons.push(item);\r\n        }\r\n      }\r\n      this.setState({ selectedRailWagons: newSelectedRailWagons });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleRailWagonAssignmentReverseSelect\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleRailWagonAssignReset = () => {\r\n    try {\r\n      this.initialRailWagonAssignmentList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleRailWagonAssignReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleRailWagonAssignSave = () => {\r\n    try {\r\n      const modRailDispatch = lodash.cloneDeep(this.state.modRailDispatch);\r\n      modRailDispatch.DispatchCompartmentDetailPlanList =\r\n        this.getCompartmentsFromRailWagonList(this.state.modRailWagonList);\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"ViewRailDispatch_WagonAssign_status\",\r\n        messageResultDetails: [],\r\n      };\r\n      if (this.state.maxNumberOfCompartments < this.state.modRailWagonList.length) {\r\n        notification.messageResultDetails.push({\r\n          keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n          keyValues: [modRailDispatch.DispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"Wagon_limit_Exceeded\",\r\n        });\r\n        this.props.onNotify(notification);\r\n      }\r\n      else {\r\n        \r\n        let showWagonAssignmentAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n        let tempRailDispatch = lodash.cloneDeep(modRailDispatch);\r\n        this.setState({ showWagonAssignmentAuthenticationLayout, tempRailDispatch }, () => {\r\n          if (showWagonAssignmentAuthenticationLayout === false) {\r\n            this.railWagonSave();\r\n          }\r\n      });\r\n        \r\n       \r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleRailWagonAssignSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n  railWagonSave= () => {\r\n    this.handleAuthenticationClose();\r\n    const modRailDispatch = lodash.cloneDeep(this.state.tempRailDispatch);\r\n    \r\n    this.setState({ railWagonAssignmentSaveEnabled: false });\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.railDispatchCode,\r\n      KeyCodes: [\r\n        {\r\n          key: KeyCodes.railDispatchCode,\r\n          value: modRailDispatch.DispatchCode,\r\n        },\r\n      ],\r\n      Entity: modRailDispatch,\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewRailDispatch_WagonAssign_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n          keyValues: [modRailDispatch.DispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateRailDispatchPlanWithWagon,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getRailDispatch(\r\n            { Common_Code: modRailDispatch.DispatchCode },\r\n            true\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            railWagonAssignmentSaveEnabled: true,\r\n          });\r\n          console.log(\r\n            \"Error in UpdateRailDispatchPlanWithWagon: \",\r\n            result.ErrorList\r\n          );\r\n        }\r\n        this.props.onNotify(notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          railWagonAssignmentSaveEnabled: true,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onNotify(notification);\r\n      });\r\n  }\r\n\r\n  getCompartmentsFromRailWagonList(railWagonList) {\r\n    const compartmentList = [];\r\n    for (let item of railWagonList) {\r\n      if (item.AttributesForUI !== undefined && item.AttributesForUI != null) {\r\n        item.AttributesForUI =\r\n          Utilities.compartmentAttributesDatatypeConversion(\r\n            item.AttributesForUI\r\n          );\r\n      }\r\n      let selectedTerminals = [];\r\n      if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n        selectedTerminals = lodash.cloneDeep(\r\n          this.state.modRailDispatch.TerminalCodes\r\n        );\r\n        if (selectedTerminals == null) {\r\n          selectedTerminals = [];\r\n        }\r\n      } else {\r\n        const wagonDetailPlanAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.compartmentAttributeMetaDataList\r\n        );\r\n        if (wagonDetailPlanAttributeMetaDataList.length > 0) {\r\n          selectedTerminals = [\r\n            wagonDetailPlanAttributeMetaDataList[0].TerminalCode,\r\n          ];\r\n        }\r\n      }\r\n      let terminalAttributes = [];\r\n      item.Attributes = [];\r\n      selectedTerminals.forEach((terminal) => {\r\n        if (\r\n          item.AttributesForUI !== null &&\r\n          item.AttributesForUI !== undefined\r\n        ) {\r\n          terminalAttributes = item.AttributesForUI.filter((attTerminal) => {\r\n            return attTerminal.TerminalCode === terminal;\r\n          });\r\n        }\r\n\r\n        const attribute = {\r\n          ListOfAttributeData: [],\r\n        };\r\n\r\n        attribute.TerminalCode = terminal;\r\n        terminalAttributes.forEach((termAtt) => {\r\n          if (termAtt.AttributeValue !== \"\" || termAtt.IsMandatory === true)\r\n            attribute.ListOfAttributeData.push({\r\n              AttributeCode: termAtt.AttributeCode,\r\n              AttributeValue: termAtt.AttributeValue,\r\n            });\r\n        });\r\n        if (\r\n          attribute.ListOfAttributeData !== null &&\r\n          attribute.ListOfAttributeData !== undefined &&\r\n          attribute.ListOfAttributeData.length > 0\r\n        ) {\r\n          item.Attributes.push(attribute);\r\n        }\r\n      });\r\n\r\n      compartmentList.push({\r\n        AssociatedContractItems:\r\n          item.ContractCode === null\r\n            ? null\r\n            : [\r\n              {\r\n                ContractCode: item.ContractCode,\r\n                ShareholderCode: item.ShareholderCode,\r\n                ContractItemQuantity:\r\n                  item.Quantity !== null && item.Quantity !== \"\"\r\n                    ? Utilities.convertStringtoDecimal(item.Quantity)\r\n                    : null,\r\n                QuantityUOM: this.state.modRailDispatch.QuantityUOM,\r\n                FinishedProductCode: item.FinishedProductCode,\r\n                Destination: item.DestinationCode,\r\n              },\r\n            ],\r\n        AssociatedOrderItems: item.AssociatedOrderItems,\r\n        Attributes: item.Attributes,\r\n        AttributesForUI: item.AttributesForUI,\r\n        CarrierCompanyCode: item.CarrierCompanyCode,\r\n        CompartmentCode: item.CompartmentCode,\r\n        CompartmentSeqNoInVehicle: item.CompartmentSeqNoInVehicle,\r\n        CustomerCode: item.CustomerCode,\r\n        DestinationCode: item.DestinationCode,\r\n        DispatchCode: item.DispatchCode,\r\n        FinishedProductCode: item.FinishedProductCode,\r\n        Quantity: Utilities.convertStringtoDecimal(item.Quantity),\r\n        QuantityUOM: item.QuantityUOM,\r\n        SequenceNo: item.SequenceNo,\r\n        ShareholderCode: item.ShareholderCode,\r\n        TrailerCode: item.TrailerCode,\r\n      });\r\n    }\r\n    return compartmentList;\r\n  }\r\n\r\n  // Product Assignment\r\n\r\n  handleOpenProductAssignment = (setReadyToRender = false) => {\r\n    try {\r\n      this.initialProductAssignmentList(() => {\r\n        if (setReadyToRender) {\r\n          this.setState(\r\n            {\r\n              isOpenSubPage: true,\r\n              isReadyToRender: true,\r\n              productAssignmentExpandedRows: [],\r\n            },\r\n            () => this.props.onSetRightPaneDisplay(false)\r\n          );\r\n        } else {\r\n          this.setState(\r\n            {\r\n              isOpenSubPage: true,\r\n              productAssignmentExpandedRows: [],\r\n            },\r\n            () => this.props.onSetRightPaneDisplay(false)\r\n          );\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleOpenProductAssignment\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  initialProductAssignmentList(callBack = () => { }) {\r\n    const keyCode = [\r\n      {\r\n        key: KeyCodes.railDispatchCode,\r\n        value: this.state.modRailDispatch.DispatchCode,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: Constants.TransportationType.RAIL,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.railDispatchCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailPartialDispatchData,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            Array.isArray(result.EntityResult.DispatchCompartmentDetailPlanList)\r\n          ) {\r\n            const modRailWagonList = [];\r\n            for (let item of result.EntityResult\r\n              .DispatchCompartmentDetailPlanList) {\r\n              modRailWagonList.push({\r\n                SequenceNo: item.SequenceNo,\r\n                AssociatedOrderItems: item.AssociatedOrderItems,\r\n                CompartmentSeqNoInVehicle: item.CompartmentSeqNoInVehicle,\r\n                QuantityUOM: item.QuantityUOM,\r\n                Quantity: item.Quantity,\r\n                TrailerCode: item.TrailerCode,\r\n                CarrierCompanyCode: item.CarrierCompanyCode,\r\n                CompartmentCode: item.CompartmentCode,\r\n                ShareholderCode: item.ShareholderCode,\r\n                FinishedProductCode: item.FinishedProductCode,\r\n                CustomerCode: item.CustomerCode,\r\n                DestinationCode: item.DestinationCode,\r\n                DispatchCode: item.DispatchCode,\r\n                AssociatedContractItems: item.AssociatedContractItems,\r\n                Attributes: item.Attributes,\r\n                ContractCode:\r\n                  item.AssociatedContractItems != null\r\n                    ? item.AssociatedContractItems[0].ContractCode\r\n                    : null,\r\n              });\r\n            }\r\n            this.setState(\r\n              {\r\n                modRailWagonList,\r\n                productAssignmentSaveEnabled: modRailWagonList.length > 0,\r\n              },\r\n              () =>\r\n                this.getProductAssignmentQuantity(modRailWagonList, callBack)\r\n            );\r\n          } else {\r\n            this.setState({\r\n              modRailWagonList: [],\r\n              productAssignmentSaveEnabled: false,\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error while getting initialProductAssignmentList: \",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getProductAssignmentQuantity = (\r\n    modRailWagonList,\r\n    callBack,\r\n    currentIndex = 0\r\n  ) => {\r\n    /*if (currentIndex < modRailWagonList.length) {\r\n      if (!modRailWagonList[currentIndex].Quantity) {\r\n        this.getRailWagon(\r\n          modRailWagonList[currentIndex].TrailerCode,\r\n          modRailWagonList[currentIndex].CarrierCompanyCode,\r\n          modRailWagonList[currentIndex].ShareHolderCode,\r\n          (entityResult) => {\r\n            modRailWagonList[currentIndex].Quantity =\r\n              entityResult.MaxLoadableVolume;\r\n            this.getProductAssignmentQuantity(\r\n              modRailWagonList,\r\n              callBack,\r\n              currentIndex + 1\r\n            );\r\n          }\r\n        );\r\n      } else {\r\n        this.getProductAssignmentQuantity(\r\n          modRailWagonList,\r\n          callBack,\r\n          currentIndex + 1\r\n        );\r\n      }\r\n    } else {\r\n      this.setState({ modRailWagonList }, () => {\r\n        if (this.props.userDetails.EntityResult.IsEnterpriseNode === false) {\r\n          const attributeMetaDataList = lodash.cloneDeep(\r\n            this.state.wagonDetailPlanAttributeMetaDataList\r\n          );\r\n          if (attributeMetaDataList.length > 0)\r\n            this.formProductAssignmentAttributes([\r\n              attributeMetaDataList[0].TerminalCode,\r\n            ]);\r\n        } else {\r\n          this.formProductAssignmentAttributes(\r\n            this.state.modRailDispatch.TerminalCodes\r\n          );\r\n        }\r\n        callBack();\r\n      });\r\n    }*/\r\n    this.setState({ modRailWagonList }, () => {\r\n      if (this.props.userDetails.EntityResult.IsEnterpriseNode === false) {\r\n        const attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.wagonDetailPlanAttributeMetaDataList\r\n        );\r\n        if (attributeMetaDataList.length > 0)\r\n          this.formProductAssignmentAttributes([\r\n            attributeMetaDataList[0].TerminalCode,\r\n          ]);\r\n      } else {\r\n        this.formProductAssignmentAttributes(\r\n          this.state.modRailDispatch.TerminalCodes\r\n        );\r\n      }\r\n      callBack();\r\n    });\r\n  };\r\n\r\n  handleProductAssignmentCellDataEdit = (newVal, cellData) => {\r\n    const modRailWagonList = lodash.cloneDeep(this.state.modRailWagonList);\r\n\r\n    modRailWagonList[cellData.rowIndex][cellData.field] = newVal;\r\n\r\n    if (cellData.field === \"ShareholderCode\") {\r\n      modRailWagonList[cellData.rowIndex][\"FinishedProductCode\"] = \"\";\r\n      modRailWagonList[cellData.rowIndex][\"CustomerCode\"] = \"\";\r\n      modRailWagonList[cellData.rowIndex][\"DestinationCode\"] = \"\";\r\n    } else if (cellData.field === \"CustomerCode\") {\r\n      const customerDestinationOptions = lodash.cloneDeep(\r\n        this.state.customerDestinationOptions\r\n      );\r\n      if (\r\n        customerDestinationOptions[\r\n        modRailWagonList[cellData.rowIndex][\"ShareholderCode\"]\r\n        ] !== undefined &&\r\n        customerDestinationOptions[\r\n        modRailWagonList[cellData.rowIndex][\"ShareholderCode\"]\r\n        ] !== null\r\n      ) {\r\n        const customerDestinationList =\r\n          customerDestinationOptions[\r\n          modRailWagonList[cellData.rowIndex][\"ShareholderCode\"]\r\n          ];\r\n        if (\r\n          customerDestinationList[newVal] !== undefined &&\r\n          Array.isArray(customerDestinationList[newVal]) &&\r\n          customerDestinationList[newVal].length === 1\r\n        ) {\r\n          modRailWagonList[cellData.rowIndex][\"DestinationCode\"] =\r\n            customerDestinationList[newVal][0];\r\n        } else {\r\n          modRailWagonList[cellData.rowIndex][\"DestinationCode\"] = \"\";\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({ modRailWagonList });\r\n  };\r\n\r\n  productAssignmentToggleExpand = (data, open, isTerminalAdded = false) => {\r\n    let productAssignmentExpandedRows = lodash.cloneDeep(\r\n      this.state.productAssignmentExpandedRows\r\n    );\r\n    const expandedRowIndex = productAssignmentExpandedRows.findIndex(\r\n      (item) => item.SequenceNo === data.SequenceNo\r\n    );\r\n    if (open) {\r\n      if (isTerminalAdded && expandedRowIndex >= 0) {\r\n        productAssignmentExpandedRows.splice(expandedRowIndex, 1);\r\n        productAssignmentExpandedRows.push(data);\r\n      } else if (expandedRowIndex >= 0) {\r\n        productAssignmentExpandedRows.splice(expandedRowIndex, 1);\r\n      }\r\n    } else {\r\n      if (expandedRowIndex >= 0) {\r\n        productAssignmentExpandedRows = productAssignmentExpandedRows.filter(\r\n          (x) =>\r\n            x.TrailerCode !== data.TrailerCode &&\r\n            x.SequenceNo !== data.SequenceNo\r\n        );\r\n      } else productAssignmentExpandedRows.push(data);\r\n    }\r\n    this.setState({ productAssignmentExpandedRows });\r\n  };\r\n\r\n  handleProductAssignmentAttributeCellDataEdit = (compAttribute, value) => {\r\n    const modRailWagonList = lodash.cloneDeep(this.state.modRailWagonList);\r\n    let compIndex = modRailWagonList.findIndex(\r\n      (item) => item.SequenceNo === compAttribute.rowData.compSequenceNo\r\n    );\r\n    if (compIndex >= 0) {\r\n      modRailWagonList[compIndex].AttributesForUI[\r\n        // compAttribute.rowIndex\r\n        compAttribute.rowData.compSequenceNo - 1\r\n      ].AttributeValue = value;\r\n    }\r\n    this.setState({ modRailWagonList });\r\n    if (compIndex >= 0) {\r\n      this.productAssignmentToggleExpand(\r\n        modRailWagonList[compIndex],\r\n        true,\r\n        true\r\n      );\r\n    }\r\n  };\r\n\r\n  handleProductAssignReset = () => {\r\n    try {\r\n      this.initialProductAssignmentList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleProductAssignReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleProductAssignSave = () => {\r\n    try {\r\n    //  this.setState({ productAssignmentSaveEnabled: false });\r\n      const modRailDispatch = lodash.cloneDeep(this.state.modRailDispatch);\r\n      modRailDispatch.DispatchCompartmentDetailPlanList =\r\n        this.getCompartmentsFromRailWagonList(this.state.modRailWagonList);\r\n      if (\r\n        this.validateProductAssignSave(\r\n          modRailDispatch.DispatchCompartmentDetailPlanList\r\n        )\r\n      ) {\r\n       \r\n        let showProductAssignmentAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n        let tempRailDispatch = lodash.cloneDeep(modRailDispatch);\r\n        this.setState({ showProductAssignmentAuthenticationLayout, tempRailDispatch }, () => {\r\n          if (showProductAssignmentAuthenticationLayout === false) {\r\n            this.productAssignmentSave();\r\n          }\r\n      });\r\n\r\n      } else {\r\n        this.setState({ productAssignmentSaveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleProductAssignSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  productAssignmentSave= () => {\r\n    this.handleAuthenticationClose();\r\n    this.setState({ productAssignmentSaveEnabled: false });\r\n    const modRailDispatch = lodash.cloneDeep(this.state.tempRailDispatch);\r\n\r\n    const obj = {\r\n      ShareHolderCode:\r\n        this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.railDispatchCode,\r\n      KeyCodes: [\r\n        {\r\n          key: KeyCodes.railDispatchCode,\r\n          value: modRailDispatch.DispatchCode,\r\n        },\r\n      ],\r\n      Entity: modRailDispatch,\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewRailDispatch_ProductAssignment_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n          keyValues: [modRailDispatch.DispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateRailDispatchProductAssignment,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess\r\n          ? \"success\"\r\n          : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getRailDispatch(\r\n            { Common_Code: modRailDispatch.DispatchCode },\r\n            true\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            productAssignmentSaveEnabled: true,\r\n          });\r\n          console.log(\r\n            \"Error in UpdateRailDispatchPlanWithWagon: \",\r\n            result.ErrorList\r\n          );\r\n        }\r\n        this.props.onNotify(notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          productAssignmentSaveEnabled: true,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onNotify(notification);\r\n      });\r\n\r\n  }\r\n  validateProductAssignSave(modRailWagonList) {\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewRailDispatch_ProductAssignment_status\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    const railDispatchCompartmentDefMod = lodash.cloneDeep(\r\n      railDispatchCompartmentDef\r\n    );\r\n\r\n\r\n\r\n    for (let modRailWagon of modRailWagonList) {\r\n      railDispatchCompartmentDefMod.forEach((col) => {\r\n        if (col.field === \"PlannedQuantity\") {\r\n          col.field = \"Quantity\";\r\n        }\r\n        let error = \"\";\r\n        if (col.validator !== undefined) {\r\n          error = Utilities.validateField(\r\n            col.validator,\r\n            modRailWagon[col.field]\r\n          );\r\n        }\r\n        if (error !== \"\") {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [\"RailDispatchPlanDetail_DispatchCode\", col.displayName],\r\n            keyValues: [\r\n              this.state.modRailDispatch.DispatchCode,\r\n              modRailWagon[col.field],\r\n            ],\r\n            isSuccess: false,\r\n            errorMessage: error,\r\n          });\r\n        }\r\n      });\r\n\r\n      let updatedAttributes = [];\r\n      if (\r\n        modRailWagon.AttributesForUI !== null &&\r\n        modRailWagon.AttributesForUI !== undefined\r\n      ) {\r\n        updatedAttributes = modRailWagon.AttributesForUI.filter(\r\n          (uIAttributes) => {\r\n            return modRailWagon.Attributes.some((selAttribute) => {\r\n              const isPresent =\r\n                selAttribute.ListOfAttributeData.findIndex(\r\n                  (item) => item.AttributeCode === uIAttributes.AttributeCode\r\n                ) >= 0\r\n                  ? true\r\n                  : false;\r\n              return (\r\n                uIAttributes.TerminalCode === selAttribute.TerminalCode &&\r\n                isPresent\r\n              );\r\n            });\r\n          }\r\n        );\r\n      }\r\n\r\n      updatedAttributes.forEach((item) => {\r\n        const errMsg = Utilities.valiateAttributeField(\r\n          item,\r\n          item.AttributeValue\r\n        );\r\n        if (errMsg !== \"\") {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            notification.messageResultDetails.push({\r\n              keyFields: [\r\n                \"CompAttributeComp\",\r\n                \"CompAttributeTerminal\",\r\n                item.AttributeName,\r\n              ],\r\n              keyValues: [\r\n                modRailWagon.SequenceNo,\r\n                item.TerminalCode,\r\n                item.AttributeValue,\r\n              ],\r\n              isSuccess: false,\r\n              errorMessage: errMsg,\r\n            });\r\n          } else {\r\n            notification.messageResultDetails.push({\r\n              keyFields: [\"CompAttributeComp\", item.AttributeName],\r\n              keyValues: [modRailWagon.SequenceNo, item.AttributeValue],\r\n              isSuccess: false,\r\n              errorMessage: errMsg,\r\n            });\r\n          }\r\n        }\r\n      });\r\n      this.toggleExpand(modRailWagon, true, true);\r\n\r\n      delete modRailWagon.AttributesForUI;\r\n    }\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onNotify(notification);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // Load Sport Assignment\r\n\r\n  handleOpenLoadSpotAssignment = (setReadyToRender = false) => {\r\n    try {\r\n      this.initialLoadSpotAssignmentList(() => {\r\n        if (setReadyToRender) {\r\n          this.setState(\r\n            {\r\n              isOpenSubPage: true,\r\n              isReadyToRender: true,\r\n            },\r\n            () => this.props.onSetRightPaneDisplay(false)\r\n          );\r\n        } else {\r\n          this.setState(\r\n            {\r\n              isOpenSubPage: true,\r\n            },\r\n            () => this.props.onSetRightPaneDisplay(false)\r\n          );\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleOpenLoadSpotAssignment\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  initialLoadSpotAssignmentList(callback = () => { }) {\r\n    const obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      KeyCodes: [\r\n        {\r\n          key: \"DispatchCode\",\r\n          value: this.state.modRailDispatch.DispatchCode,\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailDispatchBatchPlanDetails,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true && Array.isArray(result.EntityResult)) {\r\n          for (let item of result.EntityResult) {\r\n            item.ReturnQuantityUOM = this.state.modRailDispatch.QuantityUOM;\r\n            if (item.SpurCode !== undefined && item.SpurCode !== \"\" && item.SpurCode !== null) {\r\n              this.getRailLoadSpotDevices(item.SpurCode, \"CLUSTER\");\r\n              this.getRailLoadSpotDevices(item.ClusterCode, \"BCU\");\r\n            }\r\n          }\r\n          this.setState({\r\n            railWagonBatchPlanList: result.EntityResult,\r\n            modRailWagonBatchPlanList: lodash.cloneDeep(result.EntityResult),\r\n            loadSpotAssignmentSaveEnabled: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            railWagonBatchPlanList: [],\r\n            modRailWagonBatchPlanList: [],\r\n            loadSpotAssignmentSaveEnabled: false,\r\n          });\r\n          console.log(\r\n            \"Error in GetRailDispatchBatchPlanDetails: \",\r\n            result.ErrorList\r\n          );\r\n        }\r\n        callback();\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          railWagonBatchPlanList: [],\r\n          modRailWagonBatchPlanList: [],\r\n          loadSpotAssignmentSaveEnabled: false,\r\n        });\r\n        console.log(\r\n          \"Error while getting GetRailDispatchBatchPlanDetails: \",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  handleLoadSpotAssignmentCellDataEdit = (newVal, cellData) => {\r\n    const modRailWagonBatchPlanList = lodash.cloneDeep(\r\n      this.state.modRailWagonBatchPlanList\r\n    );\r\n\r\n    modRailWagonBatchPlanList[cellData.rowIndex][cellData.field] = newVal;\r\n\r\n    if (cellData.field === \"SpurCode\") {\r\n      this.getRailLoadSpotDevices(newVal, \"CLUSTER\");\r\n      this.getRailLoadSpot(newVal, \"SPUR\", (entityResult) => {\r\n        modRailWagonBatchPlanList[cellData.rowIndex].ClusterCode =\r\n          entityResult.ClusterCode;\r\n        modRailWagonBatchPlanList[cellData.rowIndex].BCUCode =\r\n          entityResult.BCUCode;\r\n        modRailWagonBatchPlanList[cellData.rowIndex].ArmNoInBCU =\r\n          entityResult.ArmNoInBCU;\r\n        this.getRailLoadSpotDevices(entityResult.ClusterCode, \"BCU\");\r\n        this.setState({ modRailWagonBatchPlanList });\r\n      });\r\n      return;\r\n    } else if (cellData.field === \"ClusterCode\") {\r\n      this.getRailLoadSpotDevices(newVal, \"BCU\");\r\n    }\r\n\r\n    this.setState({ modRailWagonBatchPlanList });\r\n  };\r\n\r\n  handleLoadSpotAssignmentAssignWagon = (railWagonBatchPlan) => {\r\n    try {\r\n      if (railWagonBatchPlan.AllowAuthorize) {\r\n        const obj = {\r\n          ShareHolderCode:\r\n            this.props.userDetails.EntityResult.PrimaryShareholder,\r\n          keyDataCode: KeyCodes.railDispatchCode,\r\n          KeyCodes: [\r\n            {\r\n              key: KeyCodes.railDispatchCode,\r\n              value: this.state.modRailDispatch.DispatchCode,\r\n            },\r\n          ],\r\n          Entity: railWagonBatchPlan,\r\n        };\r\n        const notification = {\r\n          messageType: \"critical\",\r\n          message: \"ShipmentCompDetail_SavedStatus\",\r\n          messageResultDetails: [\r\n            {\r\n              keyFields: [\"Rail_Receipt_Wagon\"],\r\n              keyValues: [railWagonBatchPlan.RailWagonCode],\r\n              isSuccess: false,\r\n              errorMessage: \"\",\r\n            },\r\n          ],\r\n        };\r\n        axios(\r\n          RestAPIs.RailDispatchAuthorizeRailWagonPlan,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            const result = response.data;\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\";\r\n            notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n            if (result.IsSuccess === true) {\r\n              this.initialLoadSpotAssignmentList();\r\n            } else {\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n              console.log(\r\n                \"Error in handleLoadSpotAssignmentAssignWagon: \",\r\n                result.ErrorList\r\n              );\r\n            }\r\n            this.props.onNotify(notification);\r\n          })\r\n          .catch((error) => {\r\n            notification.messageResultDetails[0].errorMessage = error;\r\n            this.props.onNotify(notification);\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleLoadSpotAssignmentAssignWagon\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleLoadSpotAssignReset = () => {\r\n    this.setState({\r\n      modRailWagonBatchPlanList: lodash.cloneDeep(\r\n        this.state.railWagonBatchPlanList\r\n      ),\r\n    });\r\n  };\r\n\r\n  handleLoadSpotAssignSave = () => {\r\n    try {\r\n    //  this.setState({ loadSpotAssignmentSaveEnabled: false });\r\n      const modRailWagonBatchPlanList = lodash.cloneDeep(\r\n        this.state.modRailWagonBatchPlanList\r\n      );\r\n       \r\n      if (this.validateLoadSpotAssignSave(modRailWagonBatchPlanList)) {\r\n       \r\n        let differentSpurs= false;\r\n        modRailWagonBatchPlanList.forEach(function(item){\r\n          let resArr  = modRailWagonBatchPlanList.filter(x => x.SpurCode != item.SpurCode);\r\n          if(resArr.length>0)\r\n          {\r\n            differentSpurs= true;\r\n          }\r\n           \r\n        });\r\n        \r\n     if(differentSpurs)\r\n     {\r\n      this.setState({ isShowMultipleSpurs: true });\r\n     }\r\n     else\r\n     {\r\n        this.saveLoadSpotAfterConfirm()\r\n     }\r\n\r\n      } else {\r\n        this.setState({ loadSpotAssignmentSaveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleLoadSpotAssignSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  saveLoadSpotAfterConfirm  = () => {\r\n    \r\n    this.setState({ isShowMultipleSpurs: false });\r\n\r\n    let showLoadSpotAssignmentAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n    \r\n    this.setState({ showLoadSpotAssignmentAuthenticationLayout }, () => {\r\n      if (showLoadSpotAssignmentAuthenticationLayout === false) {\r\n        this.railLoadSpotSave();\r\n      }\r\n  });\r\n  }\r\n\r\n  railLoadSpotSave= () => {\r\n\r\n    this.handleAuthenticationClose();\r\n    this.setState({ loadSpotAssignmentSaveEnabled: false });\r\n     \r\n    const modRailWagonBatchPlanList = lodash.cloneDeep(\r\n      this.state.modRailWagonBatchPlanList\r\n    );\r\n   \r\n        \r\n    const obj = {\r\n      ShareHolderCode:\r\n        this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.railDispatchCode,\r\n      KeyCodes: [\r\n        {\r\n          key: KeyCodes.railDispatchCode,\r\n          value: this.state.modRailDispatch.DispatchCode,\r\n        },\r\n      ],\r\n      Entity: modRailWagonBatchPlanList,\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewRailDispatch_LoadSportAssignment_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n          keyValues: [this.state.modRailDispatch.DispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateRailDispatchBatchPlan,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess\r\n          ? \"success\"\r\n          : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          // this.initialLoadSpotAssignmentList();\r\n          this.getRailDispatch({\r\n            Common_Code: this.state.modRailDispatch.DispatchCode,\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            loadSpotAssignmentSaveEnabled: true,\r\n          });\r\n          console.log(\r\n            \"Error in handleLoadSpotAssignSave: \",\r\n            result.ErrorList\r\n          );\r\n        }\r\n        this.props.onNotify(notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          loadSpotAssignmentSaveEnabled: true,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onNotify(notification);\r\n      });\r\n  }\r\n\r\n  validateLoadSpotAssignSave(modRailWagonBatchPlanList) {\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewRailDispatch_LoadSportAssignment_status\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    const railDispatchLoadSpotAssignmentDefMod = lodash.cloneDeep(\r\n      railDispatchLoadSpotAssignmentDef\r\n    );\r\n    for (let item of modRailWagonBatchPlanList) {\r\n      railDispatchLoadSpotAssignmentDefMod.forEach((col) => {\r\n        let error = \"\";\r\n        if (col.validator !== undefined) {\r\n          error = Utilities.validateField(col.validator, item[col.field]);\r\n        }\r\n        if (error !== \"\") {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [\"RailDispatchPlanDetail_DispatchCode\", col.displayName],\r\n            keyValues: [\r\n              this.state.modRailDispatch.DispatchCode,\r\n              item[col.field],\r\n            ],\r\n            isSuccess: false,\r\n            errorMessage: error,\r\n          });\r\n        }\r\n      });\r\n    }\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onNotify(notification);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // Record Weight\r\n\r\n  handleOpenRecordWeight = (setReadyToRender = false) => {\r\n    try {\r\n      if (setReadyToRender) {\r\n        this.setState(\r\n          {\r\n            isOpenSubPage: true,\r\n            isReadyToRender: true,\r\n            recordWeightSaveEnabled: true,\r\n          },\r\n          () => this.props.onSetRightPaneDisplay(false)\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            isOpenSubPage: true,\r\n            recordWeightSaveEnabled: true,\r\n          },\r\n          () => this.props.onSetRightPaneDisplay(false)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleOpenRecordWeight\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleRecordWeightCellDataEdit = (newVal, cellData) => {\r\n    const modWeightBridgeData = lodash.cloneDeep(\r\n      this.state.modWeightBridgeData\r\n    );\r\n\r\n    modWeightBridgeData[cellData.rowIndex][cellData.field] = newVal;\r\n\r\n    if (cellData.field === \"TareWeightWeightBridgeCode\") {\r\n      modWeightBridgeData[cellData.rowIndex].TareWeightUOM =\r\n        this.state.weightBridgeSetting[newVal].WeightUOM;\r\n    } else if (cellData.field === \"LadenWeightWeightBridgeCode\") {\r\n      modWeightBridgeData[cellData.rowIndex].LadenWeightUOM =\r\n        this.state.weightBridgeSetting[newVal].WeightUOM;\r\n    }\r\n\r\n    this.setState({ modWeightBridgeData });\r\n  };\r\n\r\n  handleRecordWeightReset = () => {\r\n    this.setState({\r\n      modWeightBridgeData: lodash.cloneDeep(this.state.weightBridgeData),\r\n    });\r\n  };\r\n\r\n  handleRecordWeightSave = () => {\r\n    try {\r\n      this.setState({ recordWeightSaveEnabled: false });\r\n      const modWeightBridgeData = lodash.cloneDeep(\r\n        this.state.modWeightBridgeData\r\n      );\r\n      for (let item of modWeightBridgeData) {\r\n        if (item.TareWeight !== null) {\r\n          item.TareWeight = Utilities.convertStringtoDecimal(item.TareWeight);\r\n        }\r\n        if (item.LadenWeight !== null) {\r\n          item.LadenWeight = Utilities.convertStringtoDecimal(item.LadenWeight);\r\n        }\r\n      }\r\n      if (this.validateRecordWeightSave(modWeightBridgeData)) {\r\n        const dispatchTrailerWeighBridgeInfoList = [];\r\n        const currentTime = new Date();\r\n        let sequenceNo = 1;\r\n        for (let item of modWeightBridgeData) {\r\n          if (item.TareWeight !== null && item.TareWeight > 0) {\r\n            dispatchTrailerWeighBridgeInfoList.push({\r\n              DispatchCode: this.state.modRailDispatch.DispatchCode,\r\n              TrailerCode: item.WagonCode,\r\n              MeasuredWeight: item.TareWeight,\r\n              WeighedTime: currentTime,\r\n              IsTareWeight: true,\r\n              IsOperatorOverWritable: item.TareWeightOperatorOverWritten,\r\n              WeighbridgeCode: item.TareWeightWeightBridgeCode,\r\n              WeightUOM: item.TareWeightUOM,\r\n              ShareholderCode: this.props.selectedShareholder,\r\n              IsWeighInOnly: false,\r\n              Remarks: \"\",\r\n              SequenceNo: sequenceNo,\r\n              Attributes: [],\r\n              FinishedProductCode: item.FinishedProductCode,\r\n              CarrierCompanyCode: item.CarrierCompanyCode,\r\n              TransportationType: Constants.TransportationType.RAIL,\r\n              StartTime: item.StartTime,\r\n              EndTime: item.EndTime\r\n            });\r\n            sequenceNo += 1;\r\n          }\r\n          if (item.LadenWeight !== null && item.LadenWeight > 0) {\r\n            dispatchTrailerWeighBridgeInfoList.push({\r\n              DispatchCode: this.state.modRailDispatch.DispatchCode,\r\n              TrailerCode: item.WagonCode,\r\n              MeasuredWeight: item.LadenWeight,\r\n              WeighedTime: currentTime,\r\n              IsTareWeight: false,\r\n              IsOperatorOverWritable: item.LadenWeightOperatorOverWritten,\r\n              WeighbridgeCode: item.LadenWeightWeightBridgeCode,\r\n              WeightUOM: item.LadenWeightUOM,\r\n              ShareholderCode: this.props.selectedShareholder,\r\n              IsWeighInOnly: false,\r\n              Remarks: \"\",\r\n              SequenceNo: sequenceNo,\r\n              Attributes: [],\r\n              FinishedProductCode: item.FinishedProductCode,\r\n              CarrierCompanyCode: item.CarrierCompanyCode,\r\n              TransportationType: Constants.TransportationType.RAIL,\r\n              StartTime: item.StartTime,\r\n              EndTime: item.EndTime\r\n            });\r\n            sequenceNo += 1;\r\n          }\r\n        }\r\n        const obj = {\r\n          ShareHolderCode:\r\n            this.props.userDetails.EntityResult.PrimaryShareholder,\r\n          keyDataCode: KeyCodes.railDispatchCode,\r\n          KeyCodes: [\r\n            {\r\n              key: KeyCodes.railDispatchCode,\r\n              value: this.state.modRailDispatch.DispatchCode,\r\n            },\r\n          ],\r\n          Entity: dispatchTrailerWeighBridgeInfoList,\r\n        };\r\n        const notification = {\r\n          messageType: \"critical\",\r\n          message: \"ShipmentCompDetail_SavedStatus\",\r\n          messageResultDetails: [\r\n            {\r\n              keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n              keyValues: [this.state.modRailDispatch.DispatchCode],\r\n              isSuccess: false,\r\n              errorMessage: \"\",\r\n            },\r\n          ],\r\n        };\r\n        axios(\r\n          RestAPIs.RailDispatchRecordWeight,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            const result = response.data;\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\";\r\n            notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n            if (result.IsSuccess === true) {\r\n              this.getRailDispatch({\r\n                Common_Code: this.state.modRailDispatch.DispatchCode,\r\n              });\r\n            } else {\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n              this.setState({\r\n                recordWeightSaveEnabled: true,\r\n              });\r\n              console.log(\r\n                \"Error in UpdateRailDispatchPlanWithWagon: \",\r\n                result.ErrorList\r\n              );\r\n            }\r\n            this.props.onNotify(notification);\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              recordWeightSaveEnabled: true,\r\n            });\r\n            notification.messageResultDetails[0].errorMessage = error;\r\n            this.props.onNotify(notification);\r\n          });\r\n      } else {\r\n        this.setState({ recordWeightSaveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleRecordWeightSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateRecordWeightSave(modWeightBridgeData) {\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n    let weightCheckFlag = false;\r\n    for (let item of modWeightBridgeData) {\r\n      if (item.TareWeight !== null && item.TareWeight !== \"\") {\r\n        weightCheckFlag = true;\r\n        if (\r\n          item.TareWeightWeightBridgeCode === null ||\r\n          item.TareWeightWeightBridgeCode === \"\"\r\n        ) {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [\"Rail_Wagon_Code\"],\r\n            keyValues: [item.WagonCode],\r\n            isSuccess: false,\r\n            errorMessage: \"ViewShipment_WBMandatory\",\r\n          });\r\n        }\r\n      }\r\n      if (item.LadenWeight !== null && item.LadenWeight !== \"\") {\r\n        weightCheckFlag = true;\r\n        if (\r\n          item.LadenWeightWeightBridgeCode === null ||\r\n          item.LadenWeightWeightBridgeCode === \"\"\r\n        ) {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [\"Rail_Wagon_Code\"],\r\n            keyValues: [item.WagonCode],\r\n            isSuccess: false,\r\n            errorMessage: \"ViewShipment_WBMandatory\",\r\n          });\r\n        }\r\n      }\r\n\r\n      if (\r\n        item.StartTime >=\r\n        item.EndTime\r\n      ) {\r\n        notification.messageResultDetails.push({\r\n          keyFields: [\"Rail_Wagon_Code\"],\r\n          keyValues: [item.WagonCode],\r\n          isSuccess: false,\r\n          errorMessage: \"MarineDispatchManualEntry_ErrorLoadTime\",\r\n        });\r\n\r\n      }\r\n    }\r\n    if (!weightCheckFlag) {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [\"RailDispatchPlanDetail_DispatchCode\"],\r\n        keyValues: [this.state.modRailDispatch.DispatchCode],\r\n        isSuccess: false,\r\n        errorMessage: \"ERRMSG_RAIL_DISPATCH_WAGON_WEIGHBRIDGE_INFO_EMPTY\",\r\n      });\r\n    }\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onNotify(notification);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  getKPIList(railDispatchCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    )\r\n    if (KPIView === true) {\r\n\r\n      let objKPIRequestData = {\r\n        PageName: kpiRailShipmentDetails,\r\n        TransportationType: Constants.TransportationType.RAIL,\r\n        InputParameters: [{ key: \"ShipmentCode\", value: railDispatchCode }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ railDispatchKPIList: result.EntityResult.ListKPIDetails });\r\n          } else {\r\n            this.setState({ railDispatchKPIList: [] });\r\n            console.log(\"Error in pipeline KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting PipelineDispatch KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n  getMaxCompartments() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=VirtualPreset\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (!isNaN(parseInt(result.EntityResult[\"RailMaximumNumberOfWagonsPerTrain \"]))) {\r\n            this.setState({ maxNumberOfCompartments: parseInt(result.EntityResult[\"RailMaximumNumberOfWagonsPerTrain \"]) })\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting RailDispatchDetailsComposite getMaxCompartments:\", error);\r\n    }\r\n  }\r\n  // Render\r\n\r\n  \r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n      showWagonAssignmentAuthenticationLayout: false,\r\n      showProductAssignmentAuthenticationLayout: false,\r\n      showLoadSpotAssignmentAuthenticationLayout : false,\r\n      showManualEntryAuthenticationLayout : false,\r\n    });\r\n  };\r\n\r\n\r\n  getFunctionGroupName() {\r\n    if(this.state.showAuthenticationLayout  || this.state.showWagonAssignmentAuthenticationLayout )\r\n      return fnRailDispatch\r\n      else if(this.state.showProductAssignmentAuthenticationLayout)\r\n      return fnRailDispatchProductAssignment\r\n      else if(this.state.showLoadSpotAssignmentAuthenticationLayout)\r\n      return fnRailDispatchLoadSpotAssignment\r\n      else if(this.state.showManualEntryAuthenticationLayout)\r\n      return fnViewRailLoadingDetails\r\n    \r\n   };\r\n\r\n   getDeleteorEditMode() {\r\n    if(this.state.showAuthenticationLayout || this.state.showWagonAssignmentAuthenticationLayout)\r\n  return this.state.railDispatch.DispatchCode  === \"\"\r\n    ? functionGroups.add\r\n    : functionGroups.modify\r\n    else if(this.state.showManualEntryAuthenticationLayout)\r\n      return functionGroups.add;\r\n    else\r\n      return functionGroups.modify;\r\n   };\r\n\r\n   handleOperation()  {\r\n  \r\n    if(this.state.showAuthenticationLayout)\r\n      return this.saveRailDispatch\r\n    else if(this.state.showWagonAssignmentAuthenticationLayout)\r\n      return this.railWagonSave\r\n    else if(this.state.showProductAssignmentAuthenticationLayout)\r\n      return this.productAssignmentSave\r\n    else if(this.state.showLoadSpotAssignmentAuthenticationLayout)\r\n      return this.railLoadSpotSave\r\n    else if(this.state.showManualEntryAuthenticationLayout)\r\n      return this.addLoadingDetails\r\n   \r\n };\r\n\r\n showPasswordCheckPopupModal()\r\n {\r\n return this.state.showAuthenticationLayout \r\n            || this.state.showWagonAssignmentAuthenticationLayout \r\n            || this.state.showProductAssignmentAuthenticationLayout\r\n            || this.state.showLoadSpotAssignmentAuthenticationLayout\r\n            || this.state.showManualEntryAuthenticationLayout\r\n            ? (\r\n          <UserAuthenticationLayout\r\n          Username={this.props.userDetails.EntityResult.UserName}\r\n          functionName={this.getDeleteorEditMode()}\r\n          functionGroup={this.getFunctionGroupName()}\r\n          handleClose={this.handleAuthenticationClose}\r\n          handleOperation={this.handleOperation()}\r\n            ></UserAuthenticationLayout>\r\n          ) : null\r\n }\r\n \r\n \r\n\r\n  render() {\r\n     \r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"RailDispatchPlanList_DateLastModified\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modRailDispatch.UpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modRailDispatch.UpdatedTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"RailDispatchPlanDetail_LastActiveTime\",\r\n        fieldValue:\r\n          this.state.modRailDispatch.LastActiveTime !== undefined &&\r\n            this.state.modRailDispatch.LastActiveTime !== null\r\n            ? new Date(\r\n              this.state.modRailDispatch.LastActiveTime\r\n            ).toLocaleDateString() +\r\n            \" \" +\r\n            new Date(\r\n              this.state.modRailDispatch.LastActiveTime\r\n            ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"RailDispatchPlanDetail_CreateTime\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modRailDispatch.CreatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modRailDispatch.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    const shipmentFrom = [];\r\n    Object.keys(Constants.shipmentFrom).forEach((element) => {\r\n      if (element === \"None\" || element === \"Contract\")\r\n        shipmentFrom.push({\r\n          text: element,\r\n          value: Constants.shipmentFrom[element],\r\n        });\r\n    });\r\n    const modalData = this.state.modalData;\r\n    const isDispatchSave = this.state.tabActiveIndex === 0;\r\n\r\n    if (!this.state.isReadyToRender) {\r\n      return <LoadingPage message=\"Loading\"></LoadingPage>;\r\n    } else {\r\n      if (!this.state.isOpenSubPage) {\r\n        return (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <TMDetailsHeader\r\n                entityCode={this.state.railDispatch.DispatchCode}\r\n                newEntityName=\"RailDispatchPlanDetail_NewRailDispatch\"\r\n                popUpContents={popUpContents}\r\n              />\r\n            </ErrorBoundary>\r\n            <TMDetailsKPILayout KPIList={this.state.railDispatchKPIList}> </TMDetailsKPILayout>\r\n            <ErrorBoundary>\r\n              <RailDispatchDetails\r\n                railDispatch={this.state.railDispatch}\r\n                modRailDispatch={this.state.modRailDispatch}\r\n                modAssociations={this.state.modAssociations}\r\n                modWagonDetails={this.state.modWagonDetails}\r\n                validationErrors={this.state.validationErrors}\r\n                selectedAssociations={this.state.selectedAssociations}\r\n                listOptions={{\r\n                  shareholders: this.state.shareholders,\r\n                  terminalCodes: this.props.terminalCodes,\r\n                  quantityUOMs: this.state.quantityUOMOptions,\r\n                  routeCodes: this.getRouteCodeSearchOptions(),\r\n                  railWagonCategories: this.state.railWagonCategoryOptions,\r\n                  contractCodes: this.state.contractCodeOptions,\r\n                  createdFromEntities: shipmentFrom,\r\n                  finishedProducts: this.state.finishedProductOptions,\r\n                  customerDestinations: this.state.customerDestinationOptions,\r\n                }}\r\n                attributeValidationErrors={this.state.attributeValidationErrors}\r\n                onAttributeCellDataEdit={this.handleAttributeCellDataEdit}\r\n                onCompAttributeCellDataEdit={\r\n                  this.handleCompAttributeCellDataEdit\r\n                }\r\n                selectedAttributeList={this.state.selectedAttributeList}\r\n                toggleExpand={this.toggleExpand}\r\n                expandedRows={this.state.expandedRows}\r\n                tabActiveIndex={this.state.tabActiveIndex}\r\n                railRouteData={this.state.railRouteData}\r\n                onFieldChange={this.handleChange}\r\n                onDateTextChange={this.handleDateTextChange}\r\n                onAllTerminalsChange={this.handleAllTerminalsChange}\r\n                onAssociationSelectionChange={\r\n                  this.handleAssociationSelectionChange\r\n                }\r\n                onCellDataEdit={this.handleCellDataEdit}\r\n                onWagonCellDataEdit={this.handleWagonCellDataEdit}\r\n                onAddAssociation={this.handleAddAssociation}\r\n                onDeleteAssociation={this.handleDeleteAssociation}\r\n                onRouteSearchChange={this.handleRouteSearchChange}\r\n                toggleWagonExpand={this.toggleWagonExpand}\r\n                expandedWagonRows={this.state.expandedWagonRows}\r\n                onTabChange={this.handleTabChange}\r\n                currentAccess={this.props.currentAccess}\r\n                isEnterpriseNode={\r\n                  this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                }\r\n                compartmentDetailsPageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                enableHSEInspection={this.props.enableHSEInspection}\r\n                railLookUpData={this.props.railLookUpData}\r\n                WagonDetailTab={\r\n                  this.state.railDispatch.DispatchCode === \"\" ||\r\n                    this.state.railDispatch.DispatchCode === null ||\r\n                    this.state.railDispatch.DispatchCode === undefined\r\n                    ? []\r\n                    : [\"\"]\r\n                }\r\n                shipmentSource={this.props.shipmentSource}\r\n              />\r\n            </ErrorBoundary>\r\n\r\n            <ErrorBoundary>\r\n              <TMDetailsUserActions\r\n                handleBack={this.props.onBack}\r\n                handleSave={\r\n                  isDispatchSave ? this.handleSave : this.handleCompartmentSave\r\n                }\r\n                handleReset={this.handleReset}\r\n                saveEnabled={\r\n                  isDispatchSave\r\n                    ? this.state.saveEnabled\r\n                    : this.state.compartmentSaveEnabled\r\n                }\r\n              />\r\n            </ErrorBoundary>\r\n            {this.showPasswordCheckPopupModal()}\r\n            <ErrorBoundary>\r\n              <TranslationConsumer>\r\n                {(t) => (\r\n                  <>\r\n                    <Modal\r\n                      size=\"mini\"\r\n                      open={\r\n                        this.state.modalData.forceCompleteCompartment.isOpen\r\n                      }\r\n                      closeOnDimmerClick={false}\r\n                    >\r\n                      <Modal.Content>\r\n                        <p>{t(\"ForceToComplete\")}</p>\r\n                      </Modal.Content>\r\n                      <Modal.Footer>\r\n                        <Button\r\n                          content={t(\"AccessCardInfo_Ok\")}\r\n                          onClick={this.handleForceCompleteCompartment}\r\n                        />\r\n                        <Button\r\n                          content={t(\"AccessCardInfo_Cancel\")}\r\n                          onClick={() => {\r\n                            modalData.forceCompleteCompartment.isOpen = false;\r\n                            this.setState({ modalData });\r\n                          }}\r\n                        />\r\n                      </Modal.Footer>\r\n                    </Modal>\r\n                  </>\r\n                )}\r\n              </TranslationConsumer>\r\n            </ErrorBoundary>\r\n          </div>\r\n        );\r\n      } else {\r\n        if (\r\n          this.props.subPageName === \"RailDispatchCompartmentManualEntryDetails\"\r\n        ) {\r\n          return (\r\n            <div>\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <TMDetailsHeader\r\n                      newEntityName={\r\n                        this.state.modRailDispatch.DispatchCode +\r\n                        \" - \" +\r\n                        t(\"ManualEntry\")\r\n                      }\r\n                    />\r\n                  )}\r\n                </TranslationConsumer>\r\n              </ErrorBoundary>\r\n              {\r\n              this.showPasswordCheckPopupModal()\r\n              }\r\n              <ErrorBoundary>\r\n                <RailDispatchCompartmentManualEntryDetails\r\n                  modLoadingDataInfo={this.state.modLoadingDataInfo}\r\n                  validationErrors={this.state.manualEntryValidationDict}\r\n                  listOptions={{\r\n                    wagonCodes: this.state.wagonCodeOptions,\r\n                    clusterCodes: this.state.clusterCodeOptions,\r\n                    BCUCodes: this.state.BCUCodeOptions,\r\n                    loadingArmCodes: this.state.loadingArmCodeOptions,\r\n                    quantityUOMs: this.state.quantityUOMOptions,\r\n                    densityUOMs: this.state.densityUOMOptions,\r\n                    temperatureUOMs: this.state.temperatureUOMOptions,\r\n                    tankCodes: this.getTankCodeSearchOptions(),\r\n                    meterCodes: this.getMeterCodeSearchOptions(),\r\n                  }}\r\n                  selectedAttributeList={\r\n                    this.state.manualEntrySelectedAttributeList\r\n                  }\r\n                  attributeValidationErrorList={\r\n                    this.state.manualEntryAttributeValidationErrorList\r\n                  }\r\n                  onAttributeCellDataEdit={\r\n                    this.handleManualEntryAttributeCellDataEdit\r\n                  }\r\n                  onFieldChange={this.handleCompartmentManualEntryChange}\r\n                  onDateTextChange={this.handleManualDateTextChange}\r\n                  //onDateTextChange={this.handleManualEntryDateTextChange}\r\n                  onTankSearchChange={this.handleTankSearchChange}\r\n                  onMeterSearchChange={this.handleMeterSearchChange}\r\n                  onTabChange={this.handleManualEntryTabChange}\r\n                  tabActiveIndex={this.state.manualEntryTabActiveIndex}\r\n                />\r\n              </ErrorBoundary>\r\n\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <div className=\"row\">\r\n                      <div className=\"col col-lg-4\">\r\n                        <Button\r\n                          className=\"backButton\"\r\n                          onClick={this.handleSubPageBackOnClick}\r\n                          content={t(\"Back\")}\r\n                        />\r\n                      </div>\r\n                      <div\r\n                        className=\"col col-lg-8\"\r\n                        style={{ textAlign: \"right\" }}\r\n                      >\r\n                        <Button\r\n                          content={t(\"LookUpData_btnReset\")}\r\n                          className=\"cancelButton\"\r\n                          onClick={this.handleCompartmentManualEntryReset}\r\n                        />\r\n                        <Button\r\n                          content={t(\"Save\")}\r\n                          onClick={this.handleCompartmentManualEntrySave}\r\n                          disabled={\r\n                            !this.state.compartmentManualEntrySaveEnabled\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </TranslationConsumer>\r\n              </ErrorBoundary>\r\n            </div>\r\n          );\r\n        } else if (\r\n          this.props.subPageName === \"RailDispatchViewAuditTrailDetails\"\r\n        ) {\r\n          return (\r\n            <div>\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <TMDetailsHeader\r\n                      newEntityName={\r\n                        this.state.modRailDispatch.DispatchCode +\r\n                        \" - \" +\r\n                        t(\"ViewRailDispatchList_ViewAuditTrail\")\r\n                      }\r\n                    />\r\n                  )}\r\n                </TranslationConsumer>\r\n              </ErrorBoundary>\r\n\r\n              <ErrorBoundary>\r\n                <RailDispatchViewAuditTrailDetails\r\n                  modRailDispatch={this.state.modRailDispatch}\r\n                  auditTrailList={this.state.auditTrailList}\r\n                  modalData={this.state.modalData}\r\n                  onModalDataChange={this.handleModalDataChange}\r\n                  onPrint={this.handlePrintAuditTrail}\r\n                  Attributes={\r\n                    this.state.auditTrailList !== undefined &&\r\n                      this.state.auditTrailList.length > 0\r\n                      ? this.state.auditTrailList[0].AttributesforUI\r\n                      : []\r\n                  }\r\n                />\r\n              </ErrorBoundary>\r\n\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <div className=\"row\">\r\n                      <div className=\"col col-lg-4\">\r\n                        <Button\r\n                          className=\"backButton\"\r\n                          onClick={this.handleSubPageBackOnClick}\r\n                          content={t(\"Back\")}\r\n                        />\r\n                      </div>\r\n                      <div\r\n                        className=\"col col-lg-8\"\r\n                        style={{ textAlign: \"right\" }}\r\n                      >\r\n                        <Button\r\n                          content={t(\"ViewAuditTrail_PrintAuditTrail\")}\r\n                          onClick={this.handleOpenPrintAuditTrailPreview}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </TranslationConsumer>\r\n              </ErrorBoundary>\r\n            </div>\r\n          );\r\n        } else if (\r\n          this.props.subPageName === \"RailDispatchViewLoadingDetailsDetails\"\r\n        ) {\r\n          return (\r\n            <div>\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <TMDetailsHeader\r\n                      newEntityName={\r\n                        this.state.modRailDispatch.DispatchCode +\r\n                        \" - \" +\r\n                        t(\"ViewRailDispatchList_ViewTransactions\")\r\n                      }\r\n                    />\r\n                  )}\r\n                </TranslationConsumer>\r\n              </ErrorBoundary>\r\n\r\n              <ErrorBoundary>\r\n                <RailDispatchViewLoadingDetailsDetails\r\n                  loadingDetailsList={this.state.loadingDetailsList}\r\n                  hideColumnList={this.state.loadingDetailsHideColumnList}\r\n                />\r\n              </ErrorBoundary>\r\n\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <div className=\"row\">\r\n                      <div className=\"col col-lg-4\">\r\n                        <Button\r\n                          className=\"backButton\"\r\n                          onClick={this.handleSubPageBackOnClick}\r\n                          content={t(\"Back\")}\r\n                        />\r\n                      </div>\r\n                      <div\r\n                        className=\"col col-lg-8\"\r\n                        style={{ textAlign: \"right\" }}\r\n                      ></div>\r\n                    </div>\r\n                  )}\r\n                </TranslationConsumer>\r\n              </ErrorBoundary>\r\n            </div>\r\n          );\r\n        } else if (\r\n          this.props.subPageName === \"RailDispatchRailWagonAssignmentDetails\"\r\n        ) {\r\n          return (\r\n            <div>\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <TMDetailsHeader\r\n                      newEntityName={\r\n                        this.state.modRailDispatch.DispatchCode +\r\n                        \" - \" +\r\n                        t(\"RailDispatchList_WagonAssignment\")\r\n                      }\r\n                    />\r\n                  )}\r\n                </TranslationConsumer>\r\n              </ErrorBoundary>\r\n              {\r\n              this.showPasswordCheckPopupModal()\r\n              }\r\n              <ErrorBoundary>\r\n                <RailDispatchRailWagonAssignmentDetails\r\n                  listOptions={{\r\n                    carrierCodes: this.state.carrierCodeOptions,\r\n                    trailerCodes: this.state.trailerCodeOptions,\r\n                  }}\r\n                  modRailWagonList={this.state.modRailWagonList}\r\n                  data={this.state.railWagonAssignmentData}\r\n                  onFieldChange={this.handleRailWagonAssignmentChange}\r\n                  selectedRow={this.state.selectedRailWagons}\r\n                  onSelectionChange={this.handleRailWagonSelectionChange}\r\n                  onAssignWagon={this.handleRailWagonAssignmentAdd}\r\n                  onDeleteWagon={this.handleRailWagonAssignmentDelete}\r\n                  onMoveWagon={this.handleRailWagonAssignmentMove}\r\n                  onReverseSelect={this.handleRailWagonAssignmentReverseSelect}\r\n                />\r\n              </ErrorBoundary>\r\n\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <div className=\"row\">\r\n                      <div className=\"col col-lg-4\">\r\n                        <Button\r\n                          className=\"backButton\"\r\n                          onClick={this.handleSubPageBackOnClick}\r\n                          content={t(\"Back\")}\r\n                        />\r\n                      </div>\r\n                      <div\r\n                        className=\"col col-lg-8\"\r\n                        style={{ textAlign: \"right\" }}\r\n                      >\r\n                        <Button\r\n                          content={t(\"LookUpData_btnReset\")}\r\n                          className=\"cancelButton\"\r\n                          onClick={this.handleRailWagonAssignReset}\r\n                        />\r\n                        <Button\r\n                          content={t(\"Save\")}\r\n                          onClick={this.handleRailWagonAssignSave}\r\n                          disabled={!this.state.railWagonAssignmentSaveEnabled}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </TranslationConsumer>\r\n              </ErrorBoundary>\r\n            </div>\r\n          );\r\n        } else if (\r\n          this.props.subPageName === \"RailDispatchProductAssignmentDetails\"\r\n        ) {\r\n          return (\r\n            <div>\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <TMDetailsHeader\r\n                      newEntityName={\r\n                        this.state.modRailDispatch.DispatchCode +\r\n                        \" - \" +\r\n                        t(\"RailDispatchList_ProductAssignment\")\r\n                      }\r\n                    />\r\n                  )}\r\n                </TranslationConsumer>\r\n              </ErrorBoundary>\r\n              {\r\n              this.showPasswordCheckPopupModal()\r\n              }\r\n              <ErrorBoundary>\r\n                <RailDispatchProductAssignmentDetails\r\n                  listOptions={{\r\n                    shareholderCodes: this.state.shareholders,\r\n                    contractCodes: this.state.contractCodeOptions,\r\n                    finishedProductCodes: this.state.finishedProductOptions,\r\n                    customerDestinations: this.state.customerDestinationOptions,\r\n                  }}\r\n                  modRailWagonList={this.state.modRailWagonList}\r\n                  onCellDataEdit={this.handleProductAssignmentCellDataEdit}\r\n                  createdFromEntity={\r\n                    this.state.modRailDispatch.CreatedFromEntity\r\n                  }\r\n                  expandedRows={this.state.productAssignmentExpandedRows}\r\n                  toggleExpand={this.productAssignmentToggleExpand}\r\n                  onCompAttributeCellDataEdit={\r\n                    this.handleProductAssignmentAttributeCellDataEdit\r\n                  }\r\n                  railLookUpData={this.props.railLookUpData}\r\n                />\r\n              </ErrorBoundary>\r\n\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <div className=\"row\">\r\n                      <div className=\"col col-lg-4\">\r\n                        <Button\r\n                          className=\"backButton\"\r\n                          onClick={this.handleSubPageBackOnClick}\r\n                          content={t(\"Back\")}\r\n                        />\r\n                      </div>\r\n                      <div\r\n                        className=\"col col-lg-8\"\r\n                        style={{ textAlign: \"right\" }}\r\n                      >\r\n                        <Button\r\n                          content={t(\"LookUpData_btnReset\")}\r\n                          className=\"cancelButton\"\r\n                          onClick={this.handleProductAssignReset}\r\n                        />\r\n                        <Button\r\n                          content={t(\"Save\")}\r\n                          onClick={this.handleProductAssignSave}\r\n                          disabled={!this.state.productAssignmentSaveEnabled}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </TranslationConsumer>\r\n              </ErrorBoundary>\r\n            </div>\r\n          );\r\n        } else if (\r\n          this.props.subPageName === \"RailDispatchLoadSpotAssignmentDetails\"\r\n        ) {\r\n          return (\r\n            <div>\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <TMDetailsHeader\r\n                      newEntityName={\r\n                        this.state.modRailDispatch.DispatchCode +\r\n                        \" - \" +\r\n                        t(\"RailDispatchList_LoadSpotAssignment\")\r\n                      }\r\n                    />\r\n                  )}\r\n                </TranslationConsumer>\r\n              </ErrorBoundary>\r\n              {\r\n              this.showPasswordCheckPopupModal()\r\n              }\r\n              <ErrorBoundary>\r\n                <RailDispatchLoadSpotAssignmentDetails\r\n                  listOptions={{\r\n                    spurCodes: this.state.spurCodeOptions,\r\n                    clusterCodes: this.state.loadSpotClusterCodeOptions,\r\n                    BCUCodes: this.state.loadSpotBCUCodeOptions,\r\n                  }}\r\n                  modRailWagonBatchPlanList={\r\n                    this.state.modRailWagonBatchPlanList\r\n                  }\r\n                  onCellDataEdit={this.handleLoadSpotAssignmentCellDataEdit}\r\n                  onAuthorize={this.handleLoadSpotAssignmentAssignWagon}\r\n                />\r\n              </ErrorBoundary>\r\n              <ErrorBoundary>\r\n              <CommonConfirmModal isOpen={this.state.isShowMultipleSpurs} confirmMessage=\"Confirm_LoadSpot\"\r\n                  handleNo={() => { this.setState({ isShowMultipleSpurs:false });\r\n                }} handleYes={() => this.saveLoadSpotAfterConfirm()}></CommonConfirmModal>\r\n                </ErrorBoundary>\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <div className=\"row\">\r\n                      <div className=\"col col-lg-4\">\r\n                        <Button\r\n                          className=\"backButton\"\r\n                          onClick={this.handleSubPageBackOnClick}\r\n                          content={t(\"Back\")}\r\n                        />\r\n                      </div>\r\n                      <div\r\n                        className=\"col col-lg-8\"\r\n                        style={{ textAlign: \"right\" }}\r\n                      >\r\n                        <Button\r\n                          content={t(\"LookUpData_btnReset\")}\r\n                          className=\"cancelButton\"\r\n                          onClick={this.handleLoadSpotAssignReset}\r\n                        />\r\n                        <Button\r\n                          content={t(\"Save\")}\r\n                          onClick={this.handleLoadSpotAssignSave}\r\n                          disabled={!this.state.loadSpotAssignmentSaveEnabled}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </TranslationConsumer>\r\n              </ErrorBoundary>\r\n            </div>\r\n          );\r\n        } else if (\r\n          this.props.subPageName === \"RailDispatchRecordWeightDetails\"\r\n        ) {\r\n          return (\r\n            <div>\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <TMDetailsHeader\r\n                      newEntityName={\r\n                        this.state.modRailDispatch.DispatchCode +\r\n                        \" - \" +\r\n                        t(\"ViewRailDispatch_RecordWeight\")\r\n                      }\r\n                    />\r\n                  )}\r\n                </TranslationConsumer>\r\n              </ErrorBoundary>\r\n\r\n              <ErrorBoundary>\r\n                <RailDispatchRecordWeightDetails\r\n                  listOptions={{\r\n                    weightBridges: this.state.weightBridgeOptions,\r\n                  }}\r\n                  modWeightBridgeData={this.state.modWeightBridgeData}\r\n                  onCellDataEdit={this.handleRecordWeightCellDataEdit}\r\n                  onDateTextChange={this.handleDateTextChange}\r\n                />\r\n              </ErrorBoundary>\r\n\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <div className=\"row\">\r\n                      <div className=\"col col-lg-4\">\r\n                        <Button\r\n                          className=\"backButton\"\r\n                          onClick={this.handleSubPageBackOnClick}\r\n                          content={t(\"Back\")}\r\n                        />\r\n                      </div>\r\n                      <div\r\n                        className=\"col col-lg-8\"\r\n                        style={{ textAlign: \"right\" }}\r\n                      >\r\n                        <Button\r\n                          content={t(\"LookUpData_btnReset\")}\r\n                          className=\"cancelButton\"\r\n                          onClick={this.handleRecordWeightReset}\r\n                        />\r\n                        <Button\r\n                          content={t(\"Save\")}\r\n                          onClick={this.handleRecordWeightSave}\r\n                          disabled={!this.state.recordWeightSaveEnabled}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </TranslationConsumer>\r\n              </ErrorBoundary>\r\n            </div>\r\n          );\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    userActions: bindActionCreators(getUserDetails, dispatch),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RailDispatchDetailsComposite);\r\n\r\nRailDispatchDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { Icon, Modal, Button } from '@scuf/common';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorBoundary from '../../ErrorBoundary';\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport \"../../../CSS/styles.css\"\r\n\r\nconst CommonConfirmModal = (props) => {\r\n  return (\r\n    <ErrorBoundary>\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div id=\"confirmModal\">\r\n            <Modal open={props.isOpen} size=\"large\">\r\n              <Modal.Content>\r\n                <div style={{ textAlign: \"center\", fontSize: \"20px\" }}>\r\n                  <div>\r\n                    <b>{t(props.confirmMessage)}</b>\r\n                  </div>\r\n                  <div style={{ marginTop: \"50px\" }}>\r\n                    <Button\r\n                      type=\"secondary\"\r\n                      content={t(\"COMMON_NO\")}\r\n                      onClick={() => props.handleNo()}\r\n                    />\r\n                    <Button\r\n                      type=\"primary\"\r\n                      content={t(\"COMMON_YES\")}\r\n                      onClick={() => props.handleYes()}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Modal.Content>\r\n            </Modal>\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n    </ErrorBoundary >\r\n  )\r\n}\r\n\r\nCommonConfirmModal.propTypes = {\r\n  confirmMessage: PropTypes.string,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  handleYes: PropTypes.func,\r\n  handleNo: PropTypes.func\r\n}\r\n\r\nCommonConfirmModal.defaultProps = {\r\n  isOpen: false\r\n}\r\n\r\nexport default CommonConfirmModal;"],"names":["RailDispatchDetails","_ref","railDispatch","modRailDispatch","modAssociations","modWagonDetails","validationErrors","listOptions","attributeValidationErrors","onAttributeCellDataEdit","onCompAttributeCellDataEdit","selectedAttributeList","expandedRows","toggleExpand","railRouteData","selectedAssociations","tabActiveIndex","onFieldChange","onDateTextChange","onAllTerminalsChange","onAssociationSelectionChange","onCellDataEdit","onWagonCellDataEdit","onAddAssociation","onDeleteAssociation","onRouteSearchChange","onTabChange","toggleWagonExpand","expandedWagonRows","currentAccess","isEnterpriseNode","compartmentDetailsPageSize","enableHSEInspection","railLookUpData","WagonDetailTab","shipmentSource","t","useTranslation","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","handleCustomEditDropDown","cellData","dropDownOptions","_jsx","Select","className","value","rowIndex","field","fluid","options","onChange","indicator","reserveSpace","search","noResultsMessage","handleCustomEditTextBox","Input","decimalDisplayValues","toLocaleString","handleIsRequiredCompAttributes","data","rowData","IsMandatory","_jsxs","children","AttributeName","DisableEnableControl","ViewRailDispatch_Update","DispatchStatus","Constants","READY","expanderTemplate","open","findIndex","item","SeqNumber","onClick","Icon","root","name","handleAttributeType","attribute","DataType","toLowerCase","STRING","INT","AttributeValue","disabled","IsReadonly","FLOAT","LONG","DOUBLE","undefined","BOOL","Checkbox","checked","toString","DATETIME","DatePicker","Date","showYearSelector","error","console","log","rowExpansionTemplate","Array","isArray","AttributesForUI","length","DataTable","rows","Column","header","editable","renderer","AttributesforUI","Pagination","expanderWagonTemplate","TrailerCode","DispatchCompartmentStatus","FORCE_COMPLETED","ForceComplete","wagonRowExpansionTemplate","compData","push","onEdit","TranslationConsumer","DispatchCode","label","Description","placeholder","RouteCode","getOptionsWithSelect","routeCodes","onSearch","ScheduledDate","type","displayFormat","getCurrentDateFormat","disablePast","onTextChange","minuteStep","DestinationCode","parseInt","createdFromEntities","CreatedFromEntity","QuantityUOM","multiple","quantityUOMs","DepartureTime","Active","text","Remarks","_Fragment","AssociatedTerminals","terminalList","terminalCodes","selectedTerminal","TerminalCodes","onCheckChange","ActualTerminalCode","map","attire","ErrorBoundary","Accordion","Content","title","AttributeDetails","attributeMetaDataList","handleCellDataEdit","Tab","activeIndex","Pane","size","scrollable","scrollHeight","selectionMode","selection","onSelectionChange","handleIsRequiredCompartmentCell","editFieldType","customEditRenderer","shareholders","contractCodes","finishedProductOptions","finishedProducts","ShareholderCode","forEach","productCode","handleProductEditDropDown","customerOptions","customerDestinations","Object","keys","customer","handleCustomerEditDropDown","destinationOptions","CustomerCode","destination","handleDestinationEditDropDown","PlanType","railWagonCategories","initialWidth","index","Utilities","ViewRailDispatch_EditAccess","LOADING","COMPLETED","OVER_FILLED","ViewRailDispatch_DisableAdjustPlanQty","FinishedProductCode","AdjustedQty","inputInDataTable","handleForceComplete","isEnable","forceCompleteEnable","ViewRailDispatch_DisableWagonForceClose","RailDispatchCompartmentManualEntryDetails","modLoadingDataInfo","attributeValidationErrorList","onTankSearchChange","onMeterSearchChange","generateTabPane","listIndex","isAdditive","errorIndex","dataKeyName","ArrTransactionAdditive","AdditiveProductCode","BaseProductCode","ArrTransactionBP","GrossQuantity","category","product","NetQuantity","Temperature","TemperatureUOM","temperatureUOMs","ProductDensity","ProductDensityUOM","densityUOMs","MeterCode","meterCodes","TankCode","tankCodes","StartTotalizer","EndTotalizer","NetStartTotalizer","NetEndTotalizer","CalculatedGross","CalculatedNet","CalculatedValueUOM","tabPaneList","CommonInfo","CarrierCode","wagonCodes","BayCode","clusterCodes","bayCode","BCUCode","BCUCodes","TransactionFPinfo","ArmCode","LoadingArm","loadingArmCodes","TransactionID","common","StartTime","disableFuture","EndTime","defaultProps","genericProps","transportationType","RailDispatchViewAuditTrailDetails","auditTrailList","modalData","onModalDataChange","Attributes","onPrint","filter","att","toLocaleDateString","formatter","engine","cls","fontSize","val","wjChart","itemsSource","chartType","bindingX","palette","style","width","minWidth","height","position","wjProperty","majorUnit","max","min","itemFormatter","axisLine","binding","id","Modal","printAuditTrail","isOpen","closeOnDimmerClick","Footer","Button","content","modModalData","lodash","RailDispatchViewLoadingDetailsDetails","loadingDetailsList","hideColumnList","columnDisplaySetting","CompartmentSeqNoInVehicle","Density","EndWeightInAir","EndWeightInVacuum","GeneralTMUserID","IsBonded","IsBonded1","Mass","Netendtotalizer","Netstarttotalizer","OfficerID","PresetQuantity","Pressure","ProductCategoryType","ProductCode","ReferenceDensity","StartWeightInAir","WeighInAir","WeightInVacuum","resetQuantity","convertNumberWithUOM","quantityString","quantityList","split","parseFloat","changeNoSpaceNumber","e","resizableColumns","toLocaleTimeString","celldata","NetEndtoTalizer","WeightInAir","color","wjcCore","RailDispatchRailWagonAssignmentDetails","modRailWagonList","selectedRow","onAssignWagon","onDeleteWagon","onMoveWagon","onReverseSelect","wagonOptionsFilter","newOptions","trailerCodes","optionItem","CarrierCompanyCode","carrierCodes","RailDispatchProductAssignmentDetails","createdFromEntity","SequenceNo","shareholderCodes","finishedProductCodes","RailDispatchLoadSpotAssignmentDetails","modRailWagonBatchPlanList","onAuthorize","buttonInDataTable","spurCodes","RailDispatchRecordWeightDetails","modWeightBridgeData","handleCustomEditDateSelect","dateDisplayValues","handleReceiptEdiCheckbox","textAlign","weightBridges","RailDispatchDetailsComposite","Component","constructor","_this","arguments","this","state","emptyRailDispatch","loadingDataInfo","dispatchStatusChangeList","weightBridgeData","railDispatchValidationDef","manualEntryValidationDict","isReadyToRender","getShareholders","railWagonCategoryOptions","contractCodeOptions","quantityUOMOptions","densityUOMOptions","temperatureUOMOptions","routeCodeOptions","routeCodeSearchOptions","customerDestinationOptions","weightBridgeOptions","weightBridgeSetting","compartmentAttributeMetaDataList","productAssignmentExpandedRows","wagonDetailPlanAttributeMetaDataList","meterCodeOptions","meterCodeSearchOptions","tankCodeOptions","tankCodeSearchOptions","wagonCodeOptions","clusterCodeOptions","clusterBCUOptions","BCUCodeOptions","loadingArmCodeOptions","compartmentManualEntrySaveEnabled","recordWeightSaveEnabled","FPAttributeMetaDataList","BPAttributeMetaDataList","additiveAttributeMetaDataList","manualEntrySelectedAttributeList","manualEntryAttributeValidationErrorList","auditTrailAttributeMetaDataList","carrierCodeOptions","trailerCodeOptions","railWagonAssignmentData","selectedRailWagons","railWagonAssignmentSaveEnabled","productAssignmentSaveEnabled","loadSpotAssignmentSaveEnabled","railWagonBatchPlanList","spurCodeOptions","loadSpotClusterCodeOptions","loadSpotBCUCodeOptions","isOpenSubPage","saveEnabled","compartmentSaveEnabled","manualEntryTabActiveIndex","loadingDetailsHideColumnList","forceCompleteCompartment","trailerCode","contractData","railDispatchKPIList","maxNumberOfCompartments","showAuthenticationLayout","showWagonAssignmentAuthenticationLayout","showProductAssignmentAuthenticationLayout","showLoadSpotAssignmentAuthenticationLayout","showManualEntryAuthenticationLayout","tempRailDispatch","tempLoadingInfo","isShowMultipleSpurs","handleChange","propertyName","getRailRoute","setState","terminalSelectionChange","handleDateTextChange","newVal","customerDestinationList","RailWagonCategory","getFinishedProduct","entityResult","getRailWagonCategoryDetails","ProductType","PlannedQuantity","MaxLoadableWeight","handleWagonCellDataEditOld","fieldName","isSave","handleWagonCellDataEdit","handleForceCompleteCompartment","handleAssociationSelectionChange","handleAddAssociation","props","userDetails","EntityResult","IsArchived","newComp","LoadedQuantity","LoadedQuantityUOM","ContractCode","PlannedNoOfRailWagons","AdjustedPlanQuantity","AssociatedOrderItems","AssociatedContractItems","selectedShareholder","IsEnterpriseNode","formCompartmentAttributes","handleDeleteAssociation","obj","com","cindex","handleAllTerminalsChange","saveRailDispatch","handleAuthenticationClose","createRailDispatch","updateRailDispatch","handleSave","DispatchItemPlanList","getCompartmentsFromAssociations","attributeList","validateSave","fillAttributeDetails","compart","contract","ContractItemQuantity","IsWebPortalUser","handleReset","getRailDispatch","Common_Code","key","getAssociationsFromDispatch","handleResetAttributeValidationError","localNodeAttribute","isTerminalAdded","expandedRowIndex","splice","x","Code","handleCompartmentSave","dispatchCompDataList","AdjustedQuantity","ForceCompleted","validateCompartmentSave","updateRailDispatchCompartInfo","handleRouteSearchChange","routeCode","includes","slice","handleManualDateTextChange","handleTankSearchChange","tankCode","handleMeterSearchChange","meterCode","handleAttributeCellDataEdit","DefaultValue","handleCompAttributeCellDataEdit","compAttribute","compIndex","compSequenceNo","handleSubPageBackOnClick","onSubPageBack","handleTabChange","FunctionsList","functionGroups","modify","fnRailDispatch","checkCompartmentSaveEnabled","handleModalDataChange","handleManualEntry","setReadyToRender","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","checkManualEntryEnabled","preprocessManualEntryData","onSetRightPaneDisplay","onNotify","handleManualEntryTabChange","handleCompartmentManualEntryChange","dataPosition","errorPosition","railDispatchCompartmentManualEntryValidationDef","triggerToGetLoadingArmCode","bcuCodeList","getDefaultUOMs","getLoadingArms","loadingArmCodeList","GetMetersForLA","handleManualEntryDateTextChange","handleManualEntryAttributeCellDataEdit","handleCompartmentManualEntryReset","initialManualEntrySelectedAttribute","initialManualEntryValidationErrors","handleCompartmentManualEntrySave","validateManualEntry","fillManualEntryAttributeDetails","addLoadingDetails","saveManualEntry","handleViewAuditTrail","getAuditTrail","handleOpenPrintAuditTrailPreview","handlePrintAuditTrail","el","window","document","getElementById","innerHTML","iframe","createElement","doc","body","appendChild","contentWindow","str1","substring","indexOf","str2","replace","write","close","focus","print","setTimeout","removeChild","handleViewLoadingDetails","getLookUpData","configFieldsList","ViewRailLoadingDetailsFields1","ViewRailLoadingDetailsFields2","itemList","getLoadingDetails","handleOpenRailWagonAssignment","initialRailWagonAssignmentList","handleRailWagonAssignmentChange","getTrailerCodes","handleRailWagonSelectionChange","handleRailWagonAssignmentAdd","WagonCode","TMWebApiRequest","ShareHolderCode","PrimaryShareholder","KeyCodes","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","Quantity","CompartmentCode","ErrorList","catch","handleRailWagonAssignmentDelete","handleRailWagonAssignmentMove","isMoveUp","temp","handleRailWagonAssignmentReverseSelect","newSelectedRailWagons","searchFlag","selectedItem","handleRailWagonAssignReset","handleRailWagonAssignSave","DispatchCompartmentDetailPlanList","getCompartmentsFromRailWagonList","railWagonSave","keyDataCode","Entity","handleOpenProductAssignment","initialProductAssignmentList","getProductAssignmentQuantity","callBack","formProductAssignmentAttributes","handleProductAssignmentCellDataEdit","productAssignmentToggleExpand","handleProductAssignmentAttributeCellDataEdit","handleProductAssignReset","handleProductAssignSave","validateProductAssignSave","productAssignmentSave","handleOpenLoadSpotAssignment","initialLoadSpotAssignmentList","handleLoadSpotAssignmentCellDataEdit","getRailLoadSpotDevices","getRailLoadSpot","ClusterCode","ArmNoInBCU","handleLoadSpotAssignmentAssignWagon","railWagonBatchPlan","AllowAuthorize","RailWagonCode","handleLoadSpotAssignReset","handleLoadSpotAssignSave","validateLoadSpotAssignSave","differentSpurs","SpurCode","saveLoadSpotAfterConfirm","railLoadSpotSave","handleOpenRecordWeight","handleRecordWeightCellDataEdit","TareWeightUOM","WeightUOM","LadenWeightUOM","handleRecordWeightReset","handleRecordWeightSave","TareWeight","LadenWeight","validateRecordWeightSave","dispatchTrailerWeighBridgeInfoList","currentTime","sequenceNo","MeasuredWeight","WeighedTime","IsTareWeight","IsOperatorOverWritable","TareWeightOperatorOverWritten","WeighbridgeCode","TareWeightWeightBridgeCode","IsWeighInOnly","TransportationType","RAIL","LadenWeightOperatorOverWritten","LadenWeightWeightBridgeCode","componentDidMount","getUOMs","getRailRouteCodes","getRailWagonCategory","getFinishedProductCodes","getCustomerDestinations","getTankCode","getMeterCode","getRailBayAndBcuList","getCarrierCompanyCodes","getWeightBridgeData","getContractCodes","getAttributes","getMaxCompartments","componentWillReceiveProps","nextProps","subPageName","handleOpenSubPage","ViewRailDispatchDetails_ShipmentStatus","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","MARINEDISPATCHSTATUSTIME","RAILDISPATCHPLAN","RAILDISPATCHITEM","RAILDISPATCHWAGONDETAILPLAN","RAILLOADINGDETAILSFP","RAILLOADINGDETAILSBP","RAILLOADINGDETAILSADDITIVE","selectedTerminals","attributesTerminalsList","existItem","attributeValue","attributeMetaData","valueAttribute","ListOfAttributeData","AttributeCode","compAttributeMetaDataList","attributes","attTerminal","some","selTerminal","compAttributes","DisplayName","MinValue","MaxValue","ValidationFormat","comp","attributesForNewComp","tempCompAttributes","attData","tempAttIndex","assignedAttributes","det","ShareholderList","getTransportationType","VOLUME","MASS","quantityUOMList","UOM","DENSITY","densityUOMList","TEMPERATURE","temperatureUOMList","railRouteCode","railWagonCategoryCode","productType","getRailWagon","carrierCode","shareholderCode","entity","CustomerDestinationsList","shareholder","finishedProductCode","shareHolderCode","callback","keyCode","clusterCodeList","Table","cluster","Table1","BCU","locationCode","EntityCode","EntityType","ParentEntityCode","RailWagonList","weightBridgeList","getRailDispatchWeighBridgeData","setWagonDetailsFromDispatch","getWagonHseInspectionStatus","dispatchCode","wagonDetail","HSEInspectionStatus","HseInspectionStatus","isUpdateOperation","emptyLoadingDataInfo","emptyRailMarineTransactionCommonInfo","emptyRailMarineTransactionProductInfo","IsLocalLoaded","PageAttibutes","DefaultQtyUOMForTransactionUI","shipmentSourceFromSummary","getDispatchCompartmentDetails","getCompartmentFromOtherSource","selectedSourceCode","add","onUpdateStatusOperation","LoadingType","TransactionType","DispatchCompartmentPlanList","isDisplayDetails","getKPIList","dispatchAssociations","cusCode","i","ContractItems","dispatchCompartment","RemainingQuantity","shipmentSourceDetails","shipmentSourceCompartmentItems","items","shCode","code","keyData","Key","Value","wagonDetails","EMPTY","PART_FILLED","INTERRUPTED","compartmentPlanList","adjustedQtyEnable","returnValue","values","every","railDispatchCompartmentDefMod","railDispatchCompartmentDef","railDispatchComp","Contract","err","shipOrder","col","validator","displayName","updatedAttributes","uIAttributes","selAttribute","isPresent","errMsg","onSaved","updateRailDispatchCompartmentInfo","dispatchCompartmentDataList","dispatchCompartments","modAssociation","terminalAttributes","termAtt","Destination","weightBridgeDataList","wagonCodeList","weightBridgeDataItem","PlanQuantityUOM","RevisedQuantity","ReturnQuantity","DiffWeight","tareWeightFlag","ladenWeightFlag","TareWeightInDispatchReceiptUOM","Math","round","DispatchReceiptUOM","LadenWeightInDispatchReceiptUOM","hasAdjustments","railDispatchCompartmentAdjustmentDefMod","railDispatchCompartmentAdjustmentDef","getRouteCodeSearchOptions","modRouteCode","element","getTankCodeSearchOptions","getMeterCodeSearchOptions","compartmentPlan","compartmentDetailPlan","FinishedProductItems","productInfo","AdditiveCode","bcuCode","densityUOM","temperatureUOM","bcu","DensityUOM","loadingArmCode","RAIL_BCUVIEW","loadingArm","AssociatedArmsList","larm","mainLineMeters","additiveMeters","AssociatedMeterList","meter","MeterLineType","bpMeterCode","additiveMeterCode","MeterList","selectedFPAttributeList","selectedBPAttributeList","selectedAdditiveAttributeList","commonValidation","productValidation","tabIndex","validateFlag","errorMsg","fillItem","rowAttributeList","BPItem","additiveItem","UpdatedTime","DispatchStatusInNumber","formReadonlyCompAttributes","compAtt","selAtt","railWagonList","compartmentList","modRailWagon","ReturnQuantityUOM","railDispatchLoadSpotAssignmentDefMod","railDispatchLoadSpotAssignmentDef","weightCheckFlag","railDispatchCode","view","fnKPIInformation","objKPIRequestData","PageName","kpiRailShipmentDetails","InputParameters","ListKPIDetails","isNaN","getFunctionGroupName","fnRailDispatchProductAssignment","fnRailDispatchLoadSpotAssignment","fnViewRailLoadingDetails","getDeleteorEditMode","handleOperation","showPasswordCheckPopupModal","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleClose","render","popUpContents","fieldValue","LastActiveTime","CreatedTime","shipmentFrom","isDispatchSave","TMDetailsHeader","newEntityName","CommonConfirmModal","confirmMessage","handleNo","handleYes","entityCode","TMDetailsKPILayout","KPIList","WebPortalListPageSize","TMDetailsUserActions","handleBack","onBack","LoadingPage","connect","getUserDetails","TokenAuth","dispatch","userActions","bindActionCreators","marginTop"],"sourceRoot":""}