{"version":3,"file":"static/js/2547.c1001359.chunk.js","mappings":"0LAaO,SAASA,EAAsBC,GAQlC,IARmC,aACrCC,EAAY,WACZC,EAAU,gBACVC,EAAe,YACfC,EAAW,iBACXC,EAAgB,MAChBC,EAAK,yBACLC,GACDP,EACC,MAAOQ,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GA+B3C,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,oBAAmB,CAAAF,SAChBG,IACAF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKJ,UAClBD,EAAAA,EAAAA,MAAA,OAAKK,UAAU,sBAAsBC,MAAO,CAAEC,UAAW,SAAUN,SAAA,EACjEC,EAAAA,EAAAA,KAACM,EAAAA,OAAM,CACLC,QAASL,EAAE,qBACXC,WAAgC,IAArBX,IAAiD,IAApBF,EAA2B,iBAAmB,eACtFkB,UAAWlB,IAAyC,IAArBE,EAC/BiB,QAASA,KACPb,GAAa,EAAK,KAGtBI,EAAAA,EAAAA,KAACM,EAAAA,OAAM,CACLC,QAASL,EAAE,QACXM,UAAWjB,IAAqC,IAArBC,EAC3BiB,QAASpB,YA7CnBW,EAAAA,EAAAA,KAACC,EAAAA,oBAAmB,CAAAF,SAChBG,IACAJ,EAAAA,EAAAA,MAACY,EAAAA,MAAK,CAACC,KAAMhB,EAAWiB,KAAK,QAAOb,SAAA,EAClCC,EAAAA,EAAAA,KAACU,EAAAA,MAAMG,QAAO,CAAAd,UACZC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAIG,EAAE,yBAGVJ,EAAAA,EAAAA,MAACY,EAAAA,MAAMI,OAAM,CAAAf,SAAA,EACXC,EAAAA,EAAAA,KAACM,EAAAA,OAAM,CACLS,KAAK,YACLR,QAASL,EAAE,UACXO,QAASA,IAAMb,GAAa,MAE9BI,EAAAA,EAAAA,KAACM,EAAAA,OAAM,CACLS,KAAK,UACLR,QAASL,EAAE,8BACXO,QAASA,KACPb,GAAa,GACbR,GAAc,cA0ChC,CA1EAF,EAAuB8B,aAAe,CAAEzB,aAAa,EAAMD,iBAAiB,E,iFCSrE,SAAS2B,EAAe9B,GAAgD,IAA/C,WAAE+B,EAAU,cAAEC,EAAa,cAAEC,GAAejC,EAC1E,OACEa,EAAAA,EAAAA,KAACC,EAAAA,oBAAmB,CAAAF,SAChBG,IACAF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kBAAiBJ,UAC9BD,EAAAA,EAAAA,MAAA,OAAKK,UAAU,oBAAmBJ,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,4BAA2BJ,UACxCC,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAAEiB,OAAQ,QAAUlB,UAAU,cAAaJ,SACtC,KAAfmB,QAAoCI,IAAfJ,EAClBhB,EAAEiB,GACFD,MAGQ,KAAfA,QACcI,IAAfJ,GACAE,EAAcG,OAAS,GACrBvB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kBAAiBJ,UAC9BC,EAAAA,EAAAA,KAACwB,EAAAA,MAAK,CACJC,SACE3B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGG,EAAEkB,EAAc,GAAGM,WAAa,IAAI,IACpC,IAAMN,EAAc,GAAGO,YACxB3B,EAAAA,EAAAA,KAAC4B,EAAAA,KAAI,CACHxB,MAAO,CAAEyB,WAAY,QACrBC,KAAK,SACLC,KAAK,aACLnB,KAAK,aAIXoB,SAAS,cACTjC,UAEAC,EAAAA,EAAAA,KAACiC,EAAAA,KAAI,CAAC9B,UAAU,qBAAoBJ,SACjCqB,EAAcc,KAAK3B,IAClBT,EAAAA,EAAAA,MAACmC,EAAAA,KAAKpB,QAAO,CAEXV,UAAU,gCAA+BJ,SAAA,CAExCG,EAAEK,EAAQmB,WAAa,IAAI,IAAE,IAAMnB,EAAQoB,aAHxC,6BAUd,SAOd,CA3DAV,EAAgBD,aAAe,CAC7BE,WAAY,GACZC,cAAe,GACfC,cAAe,IA0DjB,S,sGCrEO,SAASe,EAAgBhD,GAI5B,IAJ6B,sBAC7BiD,EAAqB,mBACrBC,EAAkB,0BAClBC,GACHnD,EACG,MAAMoD,EAA4BC,IAC9B,GAA+B,eAA3BA,EAAUC,aAEV,OADAC,EAA6BF,EAAU,IAAIG,MACpC,IAAIA,KAEX,IAAIC,EAAQJ,EAAUC,aAAaI,MAAM,KACzC,OAAO,IAAIF,KAAKC,EAAM,GAAGA,EAAM,GAAG,EAAEA,EAAM,GAC9C,EAEEF,EAA+BA,CAACF,EAAWM,KAC7C,IAAIC,EAAU,IAAIJ,KAAKG,GACvBA,EAAQC,EAAQC,cAAgB,KAAO,KAAOD,EAAQE,WAAa,IAAIC,OAAO,GAAK,KAAO,IAAMH,EAAQI,WAAWD,OAAO,GAC1Hb,EAAmBG,EAAUM,EAAM,EAEvC,OACI9C,EAAAA,EAAAA,KAACC,EAAAA,oBAAmB,CAAAF,SACdG,IACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKJ,UAChBC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kCAAiCJ,UAC5CC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKJ,SAEZqC,EAAsBF,KAAKM,GACvBA,EAAUY,SAASC,gBAAkBC,EAAAA,GAAmBC,OAAOF,gBAAyC,IAAxBb,EAAUgB,WACtFxD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2BAA0BJ,UACrCC,EAAAA,EAAAA,KAACyD,EAAAA,MAAK,CACFC,OAAK,EACLC,MAAOzD,EAAEsC,EAAUoB,aACnBd,MAAkC,OAA3BN,EAAUC,aAAwB,GAAKD,EAAUC,aACxDoB,WAAqC,IAA1BrB,EAAUsB,YAAuB,WAAa,KACzDtD,UAAmC,IAAzBgC,EAAUuB,WACpBC,SAAWlB,GAAUT,EAAmBG,EAAWM,GACnDmB,MAAO/D,EAAEoC,EAA0BE,EAAU0B,OAC7CC,cAAc,MAEZ3B,EAAUY,SAASC,gBAAkBC,EAAAA,GAAmBc,IAAIf,eAAiBb,EAAUY,SAASC,gBAAkBC,EAAAA,GAAmBe,KAAKhB,gBAA0C,IAAxBb,EAAUgB,UAezKhB,EAAUY,SAASC,gBAAkBC,EAAAA,GAAmBgB,MAAMjB,eAAiBb,EAAUY,SAASC,gBAAkBC,EAAAA,GAAmBiB,OAAOlB,gBAA0C,IAAxBb,EAAUgB,UAgBzKhB,EAAUY,SAASC,gBAAkBC,EAAAA,GAAmBkB,KAAKnB,gBAAyC,IAAxBb,EAAUgB,WACpFxD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2BAA0BJ,UACrCC,EAAAA,EAAAA,KAACyE,EAAAA,SAAQ,CAACtE,UAAU,sCAChBwD,MAAOzD,EAAEsC,EAAUoB,aACnBc,QAAoC,OAA3BlC,EAAUC,aAAwB,GAAyD,SAApDD,EAAUC,aAAakC,WAAWtB,cAClF7C,UAAmC,IAAzBgC,EAAUuB,WACpBC,SAAWlB,GAAUT,EAAmBG,EAAWM,OAIzDN,EAAUY,SAASC,gBAAkBC,EAAAA,GAAmBsB,SAASvB,gBAAyC,IAAxBb,EAAUgB,WAE1FxD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2BAA0BJ,UACrCC,EAAAA,EAAAA,KAAC6E,EAAAA,WAAU,CACPnB,OAAK,EACLZ,MAAmC,OAA3BN,EAAUC,cAAoD,KAA3BD,EAAUC,aAAuB,GACtEF,EAAyBC,GAE/BmB,MAAOzD,EAAEsC,EAAUoB,aACnBkB,eAAeC,EAAAA,EAAAA,MACfC,iBAAiB,OACjBnB,WAAqC,IAA1BrB,EAAUsB,YAAuB,WAAa,KACzDtD,UAAmC,IAAzBgC,EAAUuB,WACpBC,SAAWlB,GACPJ,EAA6BF,EAAWM,GAE5CmC,aAAenC,IACXJ,EAA6BF,EAAWM,EAAM,EAElDmB,MAAO/D,EAAEoC,EAA0BE,EAAU0B,OAC7CC,cAAc,MAEb,MA/CjBnE,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2BAA0BJ,UACrCC,EAAAA,EAAAA,KAACyD,EAAAA,MAAK,CACFC,OAAK,EACLC,MAAOzD,EAAEsC,EAAUoB,aACnBd,MAEgC,OAA3BN,EAAUC,cAAoD,KAA3BD,EAAUC,aAAuB,GAAMD,EAAUC,aAAcyC,iBAEvGrB,WAAqC,IAA1BrB,EAAUsB,YAAuB,WAAa,KACzDtD,UAAmC,IAAzBgC,EAAUuB,WACpBC,SAAWlB,GAAUT,EAAmBG,EAAWM,GACnDmB,MAAO/D,EAAEoC,EAA0BE,EAAU0B,OAC7CC,cAAc,OA3B1BnE,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2BAA0BJ,UACrCC,EAAAA,EAAAA,KAACyD,EAAAA,MAAK,CACFC,OAAK,EACLC,MAAOzD,EAAEsC,EAAUoB,aACnBd,MAAkC,OAA3BN,EAAUC,aAAwB,GAAKD,EAAUC,aAExDoB,WAAqC,IAA1BrB,EAAUsB,YAAuB,WAAa,KACzDtD,UAAmC,IAAzBgC,EAAUuB,WACpBC,SAAWlB,GAAUT,EAAmBG,EAAWM,GACnDmB,MAAO/D,EAAEoC,EAA0BE,EAAU0B,OAC7CC,cAAc,eA6DlE,C,mjCCtHO,MAAMgB,EAAwB,SACxBC,EAAyB,iBACzBC,EAA6B,cAC7BC,EAA6B,cAC7BC,EAAyB,UACzBC,EAA6B,qBAC7BC,EAA0B,WAC1BC,EAA0B,WAC1BC,EAA6B,cAC7BC,EAAiC,kBACjCC,EAAsB,OACtBC,EAAwB,gBACxBC,EAAmC,4BACnCC,EAA0B,WAC1BC,EAAyB,UACzBC,EAAgC,iBAChCC,EAAgC,iBAChCC,EAAqB,MACrBC,EAA4B,aAC5BC,EAA4B,aAC5BC,EAAmC,oBACnCC,EAAuB,QACvBC,EAA0B,WAC1BC,EAAqC,sBACrCC,EAAgD,iCAChDC,EAAiC,kBACjCC,EAA4C,6BAC5CC,EAAiC,kBACjCC,EAAoC,qBACpCC,EAAgC,iBAChCC,EAAoC,kCACpCC,EAA2B,YAC3BC,EAA4B,aAC5BC,EAAqB,MACrBC,EAA6B,kBAE7BC,EAAgC,6BAEhCC,EAA0C,yBAC1CC,EAA0C,yBAC1CC,EAA2C,+BAI3CC,EAAkC,mBAClCC,EAAkC,mBAClCC,EAA0C,2BAC1CC,EAAmC,oBACnCC,EAA6C,8BAC7CC,EAA+C,+BAC/CC,EAAuC,+BACvCC,EAAsC,uBACtCC,EAAsC,uBACtCC,EAA4C,6BAC5CC,EAA+B,gBAC/BC,EAA8B,8BAC9BC,GAA6B,6BAC7BC,GAAqC,yBACrCC,GAA8C,+BAC9CC,GAAwC,yBAExCC,GAAmC,iCACnCC,GAAoC,2BACpCC,GAAoC,2BACpCC,GAA4B,aAG5BC,GAA0C,mBAC1CC,GAA0C,mBAC1CC,GAA2C,yBAC3CC,GAA0B,0BAC1BC,GAA2B,2BAC3BC,GAAyB,UACzBC,GAAsC,wBAEtCC,GAAuB,QACvBC,GAA2B,YAC3BC,GAA0B,WAC1BC,GAA8B,gBAC9BC,GAAmC,mCACnCC,GAAyB,wBACzBC,GAA6B,cAC7BC,GAAqB,MAErBC,GAAuB,sBACvBC,GAAyB,wBACzBC,GAAgC,iBAChCC,GAA4B,aAC5BC,GAAwB,kBACxBC,GAAuB,uBACvBC,GAAsB,sBAEtBC,GAAyB,yBACzBC,GAAwB,wBAExBC,GAAkC,mBAClCC,GAAsC,uBACtCC,GAA4C,6BAC5CC,GAA2C,4BAC3CC,GAA+B,gBAE/BC,GAAuC,wBAGvCC,GAAiD,kCACjDC,GAA8C,+BAC9CC,GAAiD,kCACjDC,GAAwD,yCACxDC,GAAkD,mCAClDC,GAAiD,kCACjDC,GAAgD,iCAChDC,GAA+C,gCAC/CC,GAAgD,iCAChDC,GAA6C,8BAC7CC,GAAgD,iCAChDC,GAAuD,wCACvDC,GAAiD,kCACjDC,GAAgD,iCAChDC,GAA+C,gCAC/CC,GAA8C,+BAE9CC,GAA2B,uBAE3BC,GAA6B,cAC7BC,GAA+B,gBAC/BC,GAA6B,cAI7BC,GAA+B,e,6GC9HrC,SAASC,EAAqBC,EAAYC,GAC/C,GAAIC,MAAMC,QAAQH,GAAa,CAIA,IAHTA,EAAWI,QAC5BC,GAAWA,EAAOC,OAASL,IAEZ5K,QAChB2K,EAAWO,QAAQ,CACjB3J,MAAO,KACP0J,KAAML,GAEZ,CACA,OAAOD,CACT,CAEO,SAASnH,IACd,IAAI2H,EAAWC,OAAOC,UAAUC,cAAgBF,OAAOC,UAAUF,SAMjE,OALAI,IAAAA,OAAcJ,GACGI,IAAAA,aAEOC,eAAe,IAGzC,CAGO,SAASC,EAAgCC,GAC9C,OACEnN,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAAKC,EAAAA,EAAAA,KAAA,QAAAD,SAAOkN,KAAYjN,EAAAA,EAAAA,KAAA,OAAKkN,MAAM,wDAEvC,C","sources":["Components/UIBase/Common/SiteDetailsUserActions.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nSiteDetailsUserActions.propTypes = {\r\n  handleDelete: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n  isDeleteEnabled: PropTypes.bool\r\n};\r\n\r\nSiteDetailsUserActions.defaultProps = { saveEnabled: true, isDeleteEnabled: false };\r\nexport function SiteDetailsUserActions({\r\n  handleDelete,\r\n  handleSave,\r\n  isDeleteEnabled,\r\n  saveEnabled,\r\n  isEnterpriseNode,\r\n  isBCU,\r\n  handleSkipLocalLoadFetch\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  function displayTMModalforDelete() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  handleDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12 pr-4 mt-2\" style={{ textAlign: \"right\" }}>\r\n              <Button\r\n                content={t(\"Loadingarm_Delete\")}\r\n                className={isEnterpriseNode === true || isDeleteEnabled !== true ? \"cancelENButton\" : \"cancelButton\"}\r\n                disabled={!isDeleteEnabled || (isEnterpriseNode === true ? true : false)}\r\n                onClick={() => {\r\n                  setModelOpen(true);\r\n                }}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled || (isEnterpriseNode === true ? true : false)}\r\n                onClick={handleSave}\r\n              ></Button>\r\n              {/* {\r\n                isBCU ? <Button\r\n                  content={t(\"DeviceInfo_SkipLocalLoadFetch\")}\r\n                  disabled={!saveEnabled || (isEnterpriseNode === true ? true : false)}\r\n                  onClick={handleSkipLocalLoadFetch}\r\n                ></Button> : null\r\n              } */}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n      {displayTMModalforDelete()}\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["SiteDetailsUserActions","_ref","handleDelete","handleSave","isDeleteEnabled","saveEnabled","isEnterpriseNode","isBCU","handleSkipLocalLoadFetch","modelOpen","setModelOpen","useState","_jsxs","children","_jsx","TranslationConsumer","t","className","style","textAlign","Button","content","disabled","onClick","Modal","open","size","Content","Footer","type","defaultProps","TMDetailsHeader","entityCode","newEntityName","popUpContents","margin","undefined","length","Popup","element","fieldName","fieldValue","Icon","marginLeft","root","name","position","List","map","AttributeDetails","selectedAttributeList","handleCellDataEdit","attributeValidationErrors","handleAttributeDateValue","attribute","DefaultValue","convertAttributeDatetoString","Date","chars","split","value","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","Constants","STRING","IsVisible","Input","fluid","label","DisplayName","indicator","IsMandatory","IsReadonly","onChange","error","Code","reserveSpace","INT","LONG","FLOAT","DOUBLE","BOOL","Checkbox","checked","toString","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","toLocaleString","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","getOptionsWithSelect","ddlOptions","selectOptionText","Array","isArray","filter","option","text","unshift","language","window","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","data","class"],"sourceRoot":""}