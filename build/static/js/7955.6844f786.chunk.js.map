{"version":3,"file":"static/js/7955.6844f786.chunk.js","mappings":"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","sources":["Components/UIBase/Common/HSEUserActions.jsx","Components/Composite/Common/HSEUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/Composite/Summary/HSEInspectionSummaryComposite.jsx","Components/Composite/Entity/HSEInspectionComposite.jsx","Components/UIBase/Common/TMTransactionFilters.jsx","JS/FunctionGroups.js","JS/KeyCodes.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nHSEUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    terminal: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  terminals: PropTypes.array.isRequired,\r\n  selectedTerminal: PropTypes.string.isRequired,\r\n  onTerminalChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nHSEUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, terminal: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  terminals: [],\r\n  selectedTerminal: \"\",\r\n  popUpContent: [],\r\n  terminalVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function HSEUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  terminals,\r\n  selectedTerminal,\r\n  onTerminalChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  terminalVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getTerminalDropdownOptions() {\r\n    return Utilities.transferListtoOptions(terminals);\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {terminalVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Terminal\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Terminal\")}\r\n                          value={selectedTerminal}\r\n                          disabled={!operationsVisibilty.terminal}\r\n                          options={getTerminalDropdownOptions()}\r\n                          onChange={(value) => onTerminalChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HSEUserActions } from \"../../UIBase/Common/HSEUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\n\r\nexport function HSEUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  terminals,\r\n  selectedTerminal,\r\n  onTerminalChange,\r\n  onDelete,\r\n  onAdd,\r\n  terminalVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <HSEUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      terminals={terminals}\r\n      selectedTerminal={selectedTerminal}\r\n      onTerminalChange={onTerminalChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      terminalVisible={terminalVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></HSEUserActions>\r\n  );\r\n}\r\n\r\n ","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { Icon, Popup, Card } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { getKeyByValue } from \"../../../JS/Utilities\";\r\n\r\nHSEInspectionSummaryPageInspection.propTypes = {\r\n  tableData: PropTypes.array.isRequired,\r\n  columnDetails: PropTypes.array.isRequired,\r\n  pageSize: PropTypes.number,\r\n  terminalsToShow: PropTypes.number,\r\n  onRowClick: PropTypes.func.isRequired,\r\n  fillPage: PropTypes.bool,\r\n};\r\n\r\nHSEInspectionSummaryPageInspection.defaultProps = {\r\n  pageSize: 10,\r\n  terminalsToShow: 2,\r\n  tableData: [],\r\n  columnDetails: [],\r\n  fillPage: true,\r\n};\r\n\r\nexport function HSEInspectionSummaryPageInspection({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  terminalsToShow,\r\n  onSelectionChange,\r\n  onRowClick,\r\n  fillPage\r\n}) {\r\n  function terminalPopOver(terminalCodes) {\r\n    if (terminalCodes.split(\",\").length > terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={<span>{terminalCodes.split(\",\").length}</span>}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return <span>{terminalCodes}</span>;\r\n    }\r\n  }\r\n\r\n  function displayValues(cellData, columnDetail) {\r\n    const { value, field } = cellData;\r\n    if (typeof value === \"boolean\" || field === \"Active\") {\r\n      if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n      else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n    } else if (value === \"\" || value === null || value === undefined) {\r\n      return value;\r\n    } else if (field === \"TerminalCodes\" && value !== null) {\r\n      return terminalPopOver(value);\r\n    } else if (field === \"OverAllHSEInspectionStatus\" || field === \"HseInspectionStatus\") {\r\n      if (value !== null) {\r\n        return getKeyByValue(Constants.HSEInspectionStatus, parseInt(value))\r\n      }\r\n    }\r\n\r\n    // var columnType = columnDetails.find(function (detail) {\r\n    //   if (detail.Name === field) {\r\n    //     return detail;\r\n    //   }\r\n    // });\r\n    else if (\r\n      columnDetail !== undefined &&\r\n      columnDetail !== null &&\r\n      columnDetail.DataType !== undefined &&\r\n      columnDetail.DataType === \"DateTime\"\r\n    ) {\r\n      return (\r\n        new Date(value).toLocaleDateString() +\r\n        \" \" +\r\n        new Date(value).toLocaleTimeString()\r\n      );\r\n    } else if (\r\n      columnDetail !== undefined &&\r\n      columnDetail !== null &&\r\n      columnDetail.DataType !== undefined &&\r\n      columnDetail.DataType === \"Date\"\r\n    ) {\r\n      return new Date(value).toLocaleDateString();\r\n    } else return value;\r\n  }\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className={fillPage === true ? \"projectMasterList\" : \"\"}>\r\n          <DataTable\r\n            data={tableData}\r\n            reorderableColumns={true}\r\n            resizableColumns={true}\r\n            onCellClick={(data) =>\r\n              onRowClick !== undefined ? onRowClick(data.rowData) : {}\r\n            }\r\n            // selectionMode={selectionMode}\r\n            // selection={selectedItems}\r\n            onSelectionChange={(e) => onSelectionChange(e)}\r\n            // search={true}\r\n            searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n            rows={pageSize}\r\n            scrollable={true}\r\n            scrollHeight=\"300px\"\r\n          >\r\n            <DataTable.ActionBar />\r\n            {columnDetails.map(function (columnDetail) {\r\n              return (\r\n                <DataTable.Column\r\n                  initialWidth={columnDetail.Width}\r\n                  key={columnDetail.Name}\r\n                  field={columnDetail.Name}\r\n                  header={t(columnDetail.Name)}\r\n                  sortable={true}\r\n                  renderer={(cellData) => displayValues(cellData, columnDetail)}\r\n                />\r\n              );\r\n            })}\r\n            {/* {tableData.length > 0\r\n            ? Object.keys(tableData[0]).map(function (key) {\r\n                return (\r\n                  <DataTable.Column\r\n                    initialWidth={getInitialWidth(key)}\r\n                    key={key}\r\n                    field={key}\r\n                    header={t(key)}\r\n                    sortable={true}\r\n                    renderer={displayValues}\r\n                  />\r\n                );\r\n              })\r\n            : \"\"} */}\r\n            {Array.isArray(tableData) && tableData.length > pageSize ? (\r\n              <DataTable.Pagination />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </DataTable>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}","import React, { Component } from \"react\";\r\nimport { HSEUserActionsComposite } from \"../Common/HSEUserActionsComposite\";\r\nimport { HSEInspectionSummaryPageInspection } from \"../Summary/HSEInspectionSummaryComposite\";\r\nimport HSEInspectionDetailsComposite from \"../Details/HSEInspectionDetailsComposite\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../../CSS/styles.css\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport { functionGroups, fnHSEInspection } from \"../../../JS/FunctionGroups\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { Tab } from \"@scuf/common\";\r\nimport lodash from \"lodash\";\r\nimport { TMTransactionFilters } from \"../../UIBase/Common/TMTransactionFilters\";\r\nimport \"../../../CSS/hseInspection.css\";\r\nimport Error from \"../../Error\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\n\r\nclass HSEInspectionComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    operationsVisibility: { add: false, delete: false, terminal: true },\r\n    inprogressList: {},\r\n    scheduledList: {},\r\n    historyList: {},\r\n    inprogressListLoaded: false,\r\n    scheduledListLoaded: false,\r\n    historyListLoaded: false,\r\n    selectedRow: {},\r\n    selectedTerminal:\"\",\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    dateError: \"\",\r\n    tabActiveIndex: 0,\r\n    lookUpData: null,\r\n    isEnable: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getTerminalList();\r\n     \r\n\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionComposite: Error occurred on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getTerminalList() {\r\n    try {\r\n     \r\n      let userShareholderList = [];\r\n      let secondaryShareholders=this.props.userDetails.EntityResult.SecondaryShareholders;\r\n  \r\n      userShareholderList.push(this.props.userDetails.EntityResult.PrimaryShareholder);\r\n      \r\n      if (Array.isArray(secondaryShareholders)) {\r\n        secondaryShareholders.forEach((sh) => {\r\n        userShareholderList.push(sh);\r\n      });\r\n    }\r\n\r\n      axios(\r\n        RestAPIs.GetTerminals,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          userShareholderList,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            Array.isArray(result.EntityResult) &&\r\n            result.EntityResult.length > 0\r\n          )\r\n            this.setState({ terminalOptions: result.EntityResult });\r\n          this.setState({ selectedTerminal: this.state.terminalOptions[0] });\r\n          this.getLookUpData();\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(\"SiteViewComposite:Error occured on getTerminalsList\", err);\r\n    }\r\n  }\r\n\r\n  getLookUpData() {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=HSEInspection\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let isEnable = true;\r\n          switch (this.props.activeItem.itemProps.transportationType) {\r\n            case Constants.TransportationType.ROAD:\r\n              if (result.EntityResult.EnableRoad === \"False\") {\r\n                isEnable = false;\r\n              }\r\n              break;\r\n            case Constants.TransportationType.MARINE:\r\n              if (result.EntityResult.EnableMarine === \"False\") {\r\n                isEnable = false;\r\n              }\r\n              break;\r\n            case Constants.TransportationType.RAIL:\r\n              if (result.EntityResult.EnableRail === \"False\") {\r\n                isEnable = false;\r\n              }\r\n              break;\r\n            case Constants.TransportationType.PIPELINE:\r\n              if (result.EntityResult.EnablePipeline === \"False\") {\r\n                isEnable = false;\r\n              }\r\n              break;\r\n            default:\r\n              isEnable = true;\r\n          }\r\n          this.setState({ lookUpData: result.EntityResult, isEnable });\r\n          if (isEnable) {\r\n            const operationsVisibility = lodash.cloneDeep(\r\n              this.state.operationsVisibility\r\n            );\r\n            operationsVisibility.add = Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              this.props.activeItem.itemProps.transportationType +\r\n                fnHSEInspection\r\n            ) && !this.isNodeEnterpriseOrWebortal();\r\n            this.setState({\r\n              operationsVisibility,\r\n              selectedShareholder:\r\n                this.props.userDetails.EntityResult.PrimaryShareholder,\r\n            });\r\n            this.getInprogressInspectionList();\r\n            this.getTransactionScheduledList();\r\n            this.getInspectionHistoryList();\r\n          }\r\n        } else {\r\n          console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"HSEInspectionDetailsComposite: Error occurred on getLookUpData\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  isNodeEnterpriseOrWebortal()\r\n  {\r\n    if (this.props.userDetails.EntityResult.IsEnterpriseNode || this.props.userDetails.EntityResult.IsWebPortalUser) {\r\n     return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getInprogressInspectionList() {\r\n    axios(\r\n      RestAPIs.GetInprogressInspectionList +\r\n        \"?TransportationType=\" +\r\n        this.props.activeItem.itemProps.transportationType +  \"&TerminalCode=\" + this.state.selectedTerminal,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            this.props.activeItem.itemProps.transportationType ===\r\n              Constants.TransportationType.MARINE &&\r\n            Array.isArray(result.EntityResult.Table)\r\n          ) {\r\n            for (let i = 0; i < result.EntityResult.Table.length; i++) {\r\n              result.EntityResult.Table[i].Vessel_Code =\r\n                result.EntityResult.Table[i].VehicleCode;\r\n              result.EntityResult.Table[i].Vessel_Type =\r\n                result.EntityResult.Table[i].VehicleType;\r\n            }\r\n          }\r\n          this.setState({\r\n            inprogressList: result.EntityResult,\r\n            inprogressListLoaded: true,\r\n          });\r\n        } else {\r\n          this.setState({ inprogressList: {}, inprogressListLoaded: true });\r\n          console.log(\r\n            \"Error in getInprogressInspectionList:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n        this.checkReadyToRender();\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ inprogressList: {}, inprogressListLoaded: true });\r\n        console.log(\"Error while getting InprogressInspection:\", error);\r\n        this.checkReadyToRender();\r\n      });\r\n  }\r\n\r\n  handleTerminalSelectionChange = (terminal) => {\r\n    try {\r\n      this.setState({\r\n        selectedTerminal: terminal,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        isReadyToRender: true,\r\n      });\r\n      this.getLookUpData();\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEConfigurationComposite:Error occured on handleTerminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getTransactionScheduledList() {\r\n    axios(\r\n      RestAPIs.GetTransactionScheduledList +\r\n        \"?TransportationType=\" +\r\n        this.props.activeItem.itemProps.transportationType +  \"&TerminalCode=\" + this.state.selectedTerminal,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            this.props.activeItem.itemProps.transportationType ===\r\n              Constants.TransportationType.MARINE &&\r\n            Array.isArray(result.EntityResult.Table)\r\n          ) {\r\n            for (let i = 0; i < result.EntityResult.Table.length; i++) {\r\n              result.EntityResult.Table[i].Vessel_Code =\r\n                result.EntityResult.Table[i].VehicleCode;\r\n              result.EntityResult.Table[i].Vessel_Type =\r\n                result.EntityResult.Table[i].VehicleType;\r\n            }\r\n          } else if (\r\n            this.props.activeItem.itemProps.transportationType ===\r\n              Constants.TransportationType.RAIL &&\r\n            Array.isArray(result.EntityResult.Table)\r\n          ) {\r\n            for (let i = 0; i < result.EntityResult.Table.length; i++) {\r\n              result.EntityResult.Table[i].HseInspectionStatus =\r\n                result.EntityResult.Table[i].OverAllHSEInspectionStatus;\r\n            }\r\n          } else if (\r\n            this.props.activeItem.itemProps.transportationType ===\r\n              Constants.TransportationType.PIPELINE &&\r\n            Array.isArray(result.EntityResult.Table)\r\n          ) {\r\n            for (let i = 0; i < result.EntityResult.Table.length; i++) {\r\n              result.EntityResult.Table[i].HseInspectionStatus =\r\n                result.EntityResult.Table[i].OverAllHSEInspectionStatus;\r\n            }\r\n          }\r\n          this.setState({\r\n            scheduledList: result.EntityResult,\r\n            scheduledListLoaded: true,\r\n          });\r\n        } else {\r\n          this.setState({ scheduledList: {}, scheduledListLoaded: true });\r\n          console.log(\r\n            \"Error in getInprogressInspectionList:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n        this.checkReadyToRender();\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ scheduledList: {}, scheduledListLoaded: true });\r\n        console.log(\"Error while getting InprogressInspection:\", error);\r\n        this.checkReadyToRender();\r\n      });\r\n  }\r\n\r\n  getInspectionHistoryList() {\r\n    let fromDate = new Date(this.state.fromDate);\r\n    let toDate = new Date(this.state.toDate);\r\n    fromDate.setHours(0, 0, 0);\r\n    toDate.setHours(23, 59, 59);\r\n    let obj = {\r\n      startRange: fromDate,\r\n      endRange: toDate,\r\n      TransportationType: this.props.activeItem.itemProps.transportationType,\r\n      TerminalCode:  this.state.selectedTerminal,\r\n    };\r\n    axios(\r\n      RestAPIs.GetHistoryInspectionList,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            this.props.activeItem.itemProps.transportationType ===\r\n              Constants.TransportationType.MARINE &&\r\n            Array.isArray(result.EntityResult.Table)\r\n          ) {\r\n            for (let i = 0; i < result.EntityResult.Table.length; i++) {\r\n              result.EntityResult.Table[i].Vessel_Code =\r\n                result.EntityResult.Table[i].VehicleCode;\r\n              result.EntityResult.Table[i].Vessel_Type =\r\n                result.EntityResult.Table[i].VehicleType;\r\n            }\r\n          }\r\n          this.setState({\r\n            historyList: result.EntityResult,\r\n            historyListLoaded: true,\r\n          });\r\n        } else {\r\n          this.setState({ historyList: {}, historyListLoaded: true });\r\n          console.log(\"Error in getInspectionHistoryList:\", result.ErrorList);\r\n        }\r\n        this.checkReadyToRender();\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ historyList: {}, historyListLoaded: true });\r\n        console.log(\"Error while getting InspectionHistoryList:\", error);\r\n        this.checkReadyToRender();\r\n      });\r\n  }\r\n\r\n  checkReadyToRender() {\r\n    if (\r\n      this.state.inprogressListLoaded &&\r\n      this.state.scheduledListLoaded &&\r\n      this.state.historyListLoaded\r\n    ) {\r\n      this.setState({ isReadyToRender: true });\r\n    }\r\n  }\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      const operationsVisibility = lodash.cloneDeep(\r\n        this.state.operationsVisibility\r\n      );\r\n      operationsVisibility.add = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: {},\r\n        operationsVisibility,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"HSEInspectionComposite: Error occurred on handleAdd\", error);\r\n    }\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      const operationsVisibility = lodash.cloneDeep(\r\n        this.state.operationsVisibility\r\n      );\r\n      operationsVisibility.terminal = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: item,\r\n        operationsVisibility,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"RailRouteComposite:Error occurred on handleRowClick\", error);\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      const operationsVisibility = lodash.cloneDeep(\r\n        this.state.operationsVisibility\r\n      );\r\n      operationsVisibility.terminal= true;\r\n      operationsVisibility.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        this.props.activeItem.itemProps.transportationType + fnHSEInspection\r\n      ) && !this.isNodeEnterpriseOrWebortal();\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        operationsVisibility,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getInprogressInspectionList();\r\n      this.getTransactionScheduledList();\r\n      this.getInspectionHistoryList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEConfigurationComposite: Error occurred on Back click\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  savedEvent = (notification) => {\r\n    try {\r\n      const operationsVisibility = lodash.cloneDeep(\r\n        this.state.operationsVisibility\r\n      );\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibility.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          this.props.activeItem.itemProps.transportationType +\r\n                fnHSEInspection\r\n        ) && !this.isNodeEnterpriseOrWebortal();\r\n        this.setState({ isDetailsModified: true, operationsVisibility });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionComposite: Error occurred on savedEvent\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDateTextChange = (value, error) => {\r\n    if (value === \"\")\r\n      this.setState({ dateError: \"\", toDate: \"\", fromDate: \"\" });\r\n    if (error !== null && error !== \"\")\r\n      this.setState({\r\n        dateError: \"Common_InvalidDate\",\r\n        toDate: \"\",\r\n        fromDate: \"\",\r\n      });\r\n    else {\r\n      this.setState({ dateError: \"\", toDate: value.to, fromDate: value.from });\r\n    }\r\n  };\r\n\r\n  handleRangeSelect = ({ to, from }) => {\r\n    if (to !== undefined) this.setState({ toDate: to });\r\n    if (from !== undefined) this.setState({ fromDate: from });\r\n  };\r\n\r\n  handleLoadOrders = () => {\r\n    let error = Utilities.validateDateRange(\r\n      this.state.toDate,\r\n      this.state.fromDate\r\n    );\r\n\r\n    if (error !== \"\") {\r\n      this.setState({ dateError: error });\r\n    } else {\r\n      this.setState({ dateError: \"\" });\r\n      this.getInspectionHistoryList();\r\n    }\r\n  };\r\n\r\n  handleTabChange = (activeIndex) => {\r\n    try {\r\n      this.setState({ tabActiveIndex: activeIndex });\r\n    } catch (error) {\r\n      console.log(\r\n        \"HSEInspectionComposite: Error occurred on handleTabChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let fillPage = true;\r\n    let loadingClass = \"globalLoader\";\r\n    if (\r\n      this.props.shipmentSource !== undefined &&\r\n      this.props.shipmentSource !== \"\" &&\r\n      this.props.shipmentSource !== null\r\n    ) {\r\n      fillPage = false;\r\n      loadingClass = \"nestedList\";\r\n    }\r\n    return (\r\n      <div>\r\n        {this.props.shipmentSource === undefined ||\r\n        this.props.shipmentSource === \"\" ||\r\n        this.props.shipmentSource === null ? (\r\n          <ErrorBoundary>\r\n            <HSEUserActionsComposite\r\n              operationsVisibilty={this.state.operationsVisibility}\r\n              breadcrumbItem={this.props.activeItem}\r\n              onAdd={this.handleAdd}\r\n              // onDelete={this.handleAdd}\r\n              terminalVisible={this.isNodeEnterpriseOrWebortal()}\r\n              terminals={this.state.terminalOptions}\r\n              selectedTerminal={this.state.selectedTerminal}\r\n              onTerminalChange={this.handleTerminalSelectionChange}\r\n              handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n            />\r\n          </ErrorBoundary>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {this.state.isDetails === true ? (\r\n          <ErrorBoundary>\r\n            <HSEInspectionDetailsComposite\r\n              Key=\"HSEInspectionDetails\"\r\n              transportationType={\r\n                this.props.activeItem.itemProps.transportationType\r\n              }\r\n              selectedRow={this.state.selectedRow}\r\n              onBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n              selectedTerminal={this.state.selectedTerminal}\r\n              selectedShareholder={this.state.selectedRow.Shareholder===null? this.state.selectedShareholder:this.state.selectedRow.Shareholder}\r\n              lookUpData={this.state.lookUpData}\r\n            />\r\n          </ErrorBoundary>\r\n        ) : (\r\n          <div>\r\n            {this.state.isReadyToRender ? (\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <div\r\n                      className={\r\n                        fillPage === true ? \"compositeTransactionList\" : \"\"\r\n                      }\r\n                    >\r\n                      <Tab\r\n                        activeIndex={this.state.tabActiveIndex}\r\n                        onTabChange={this.handleTabChange}\r\n                      >\r\n                        <Tab.Pane title={t(\"HSE_InProgress\")}>\r\n                          <HSEInspectionSummaryPageInspection\r\n                            tableData={this.state.inprogressList.Table}\r\n                            columnDetails={this.state.inprogressList.Column}\r\n                            pageSize={\r\n                              this.props.userDetails.EntityResult.PageAttibutes\r\n                                .WebPortalListPageSize\r\n                            }\r\n                            terminalsToShow={\r\n                              this.props.userDetails.EntityResult.PageAttibutes\r\n                                .NoOfTerminalsToShow\r\n                            }\r\n                            onRowClick={this.handleRowClick}\r\n                            fillPage={fillPage}\r\n                          />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane title={t(\"HSE_ArriveToday\")}>\r\n                          <HSEInspectionSummaryPageInspection\r\n                            tableData={this.state.scheduledList.Table}\r\n                            columnDetails={this.state.scheduledList.Column}\r\n                            pageSize={\r\n                              this.props.userDetails.EntityResult.PageAttibutes\r\n                                .WebPortalListPageSize\r\n                            }\r\n                            terminalsToShow={\r\n                              this.props.userDetails.EntityResult.PageAttibutes\r\n                                .NoOfTerminalsToShow\r\n                            }\r\n                            onRowClick={this.handleRowClick}\r\n                            fillPage={fillPage}\r\n                          />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane title={t(\"HSE_HistoryList\")}>\r\n                          <ErrorBoundary>\r\n                            <TMTransactionFilters\r\n                              dateRange={{\r\n                                from: this.state.fromDate,\r\n                                to: this.state.toDate,\r\n                              }}\r\n                              dateError={this.state.dateError}\r\n                              handleDateTextChange={this.handleDateTextChange}\r\n                              handleRangeSelect={this.handleRangeSelect}\r\n                              handleLoadOrders={this.handleLoadOrders}\r\n                              filterText=\"LoadInspection\"\r\n                            ></TMTransactionFilters>\r\n                          </ErrorBoundary>\r\n                          <HSEInspectionSummaryPageInspection\r\n                            tableData={this.state.historyList.Table}\r\n                            columnDetails={this.state.historyList.Column}\r\n                            pageSize={\r\n                              this.props.userDetails.EntityResult.PageAttibutes\r\n                                .WebPortalListPageSize\r\n                            }\r\n                            terminalsToShow={\r\n                              this.props.userDetails.EntityResult.PageAttibutes\r\n                                .NoOfTerminalsToShow\r\n                            }\r\n                            onRowClick={this.handleRowClick}\r\n                            fillPage={fillPage}\r\n                          />\r\n                        </Tab.Pane>\r\n                      </Tab>\r\n                    </div>\r\n                  )}\r\n                </TranslationConsumer>\r\n              </ErrorBoundary>\r\n            ) : (\r\n              <>\r\n                {this.state.isEnable ? (\r\n                  <LoadingPage\r\n                    loadingClass={loadingClass}\r\n                    message=\"\"\r\n                  ></LoadingPage>\r\n                ) : (\r\n                  <Error errorMessage=\"HSEInspectionDisabled\"></Error>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {this.props.shipmentSource === undefined ? (\r\n          <ErrorBoundary>\r\n            <ToastContainer\r\n              hideProgressBar={true}\r\n              closeOnClick={false}\r\n              closeButton={true}\r\n              newestOnTop={true}\r\n              position=\"bottom-right\"\r\n              toastClassName=\"toast-notification-wrap\"\r\n            />\r\n          </ErrorBoundary>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    userActions: bindActionCreators(getUserDetails, dispatch),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HSEInspectionComposite);\r\n\r\nHSEInspectionComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { DatePicker, Button } from \"@scuf/common\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function TMTransactionFilters({\r\n  handleDateTextChange,\r\n  handleRangeSelect,\r\n  handleLoadOrders,\r\n  dateError,\r\n  dateRange,\r\n  filterText,\r\n}) {\r\n  //console.log(dateError);\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"dateRangeContainer\">\r\n          <div className=\"dateRangeMargin\">\r\n            <DatePicker\r\n              type=\"daterange\"\r\n              closeOnSelection={true}\r\n              error={t(dateError)}\r\n              displayFormat={getCurrentDateFormat()}\r\n              //value={dateRange}\r\n              rangeValue={dateRange}\r\n              onTextChange={handleDateTextChange}\r\n              onRangeSelect={handleRangeSelect}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"dateSearch\">\r\n            <Button content={t(filterText)} onClick={handleLoadOrders} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";"],"names":["HSEUserActions","_ref","operationsVisibilty","breadcrumbItem","terminals","selectedTerminal","onTerminalChange","onDelete","onAdd","popUpContent","terminalVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","terminal","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","HSEUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","HSEInspectionSummaryPageInspection","tableData","columnDetails","pageSize","terminalsToShow","onSelectionChange","onRowClick","fillPage","displayValues","cellData","columnDetail","field","terminalCodes","split","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","getKeyByValue","Constants","parseInt","DataTable","reorderableColumns","resizableColumns","onCellClick","rowData","e","searchPlaceholder","rows","scrollable","scrollHeight","ActionBar","Column","initialWidth","Width","Name","header","sortable","renderer","Array","isArray","Pagination","HSEInspectionComposite","isDetails","isReadyToRender","operationsVisibility","inprogressList","scheduledList","historyList","inprogressListLoaded","scheduledListLoaded","historyListLoaded","selectedRow","fromDate","toDate","dateError","tabActiveIndex","lookUpData","isEnable","handleTerminalSelectionChange","selectedItems","getLookUpData","handleAdd","handleRowClick","handleBack","FunctionsList","functionGroups","activeItem","transportationType","fnHSEInspection","isNodeEnterpriseOrWebortal","getInprogressInspectionList","getTransactionScheduledList","getInspectionHistoryList","savedEvent","notification","messageType","isDetailsModified","toast","NotifyEvent","notificationMessage","autoClose","handleDateTextChange","to","from","handleRangeSelect","handleLoadOrders","handleTabChange","activeIndex","IsArchived","getTerminalList","userShareholderList","secondaryShareholders","SecondaryShareholders","push","PrimaryShareholder","forEach","sh","terminalOptions","err","ROAD","EnableRoad","MARINE","EnableMarine","RAIL","EnableRail","PIPELINE","EnablePipeline","selectedShareholder","IsEnterpriseNode","IsWebPortalUser","Table","i","Vessel_Code","VehicleCode","Vessel_Type","VehicleType","checkReadyToRender","HseInspectionStatus","OverAllHSEInspectionStatus","setHours","obj","startRange","endRange","TransportationType","TerminalCode","loadingClass","shipmentSource","HSEInspectionDetailsComposite","Key","onBack","onSaved","Shareholder","Tab","onTabChange","Pane","title","PageAttibutes","WebPortalListPageSize","NoOfTerminalsToShow","TMTransactionFilters","dateRange","filterText","LoadingPage","message","Error","errorMessage","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","dispatch","userActions","bindActionCreators","DatePicker","closeOnSelection","displayFormat","getCurrentDateFormat","rangeValue","onTextChange","onRangeSelect","view","modify","remove","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","shareholderCode","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","shipmentCode","orderCode","receiptCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","entityCode","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","bayCode","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","TransactionType","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks"],"sourceRoot":""}