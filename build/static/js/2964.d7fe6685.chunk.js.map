{"version":3,"file":"static/js/2964.d7fe6685.chunk.js","mappings":"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","sources":["Components/UIBase/Details/COAManagementDetails.jsx","Components/Composite/Details/COAManagementDetailsComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","Components/UIBase/Common/TMReportViewer.jsx","Components/UIBase/Details/ReportDetails.jsx","JS/AttributeEntity.js","JS/functionalUtilities.js"],"sourcesContent":["import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { Select, Input, Accordion } from \"@scuf/common\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\n\r\nCOAManagementDetails.propTypes = {\r\n  coaManagement: PropTypes.object.isRequired,\r\n  modCOAManagement: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    managementTankCodes: PropTypes.array,\r\n    managementTemplateCodes: PropTypes.array,\r\n    templateParameters: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onTankCodeChange: PropTypes.func.isRequired,\r\n  onTemplateCodeChange: PropTypes.func.isRequired,\r\n  onActiveStatusChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  pageSize: PropTypes.number,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n};\r\n\r\nCOAManagementDetails.defaultProps = {\r\n  isEnterpriseNode: false,\r\n  templateParameters: [],\r\n  managementTankCodes: [],\r\n  managementTemplateCodes: []\r\n};\r\n\r\n\r\n\r\nexport function COAManagementDetails({\r\n  coaManagement,\r\n  modCOAManagement,\r\n  validationErrors,\r\n  listOptions,\r\n  onFieldChange,\r\n  onTankCodeChange,\r\n  onTemplateCodeChange,\r\n  onActiveStatusChange,\r\n  isEnterpriseNode,\r\n  pageSize,\r\n  handleCellDataEdit,\r\n  modAttributeMetaDataList,\r\n  attributeValidationErrors,\r\n  onAttributeDataChange,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  const handleCustomEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={cellData.rowData[cellData.field]}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCOAManagement.COACode}\r\n                label={t(\"COAManagementCode\")}\r\n                indicator=\"required\"\r\n                disabled={coaManagement.COACode !== \"\"}\r\n                onChange={(data) => onFieldChange(\"COACode\", data)}\r\n                error={t(validationErrors.COACode)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={modCOAManagement.TankCode}\r\n                label={t(\"COAManagementTankCode\")}\r\n                indicator=\"required\"\r\n                options={Utilities.transferListtoOptions(listOptions.managementTankCodes)}\r\n                onChange={(data) => onTankCodeChange(data)}\r\n                error={t(validationErrors.TankCode)}\r\n                disabled={coaManagement.TankCode !== \"\"}\r\n                multiple={false}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={modCOAManagement.TemplateCode}\r\n                label={t(\"COAManagementTemplateCode\")}\r\n                indicator=\"required\"\r\n                options={Utilities.transferListtoOptions(listOptions.managementTemplateCodes)}\r\n                onChange={(data) => onTemplateCodeChange(data)}\r\n                error={t(validationErrors.TemplateCode)}\r\n                disabled={coaManagement.TemplateCode !== \"\"}\r\n                multiple={false}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                text={modCOAManagement.TemplateCode}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCOAManagement.BaseProductCode}\r\n                label={t(\"COAManagementBaseProductCode\")}\r\n                disabled={true}\r\n                onChange={(data) => onFieldChange(\"COAManagementBaseProductCode\", data)}\r\n                error={t(validationErrors.BaseProductCode)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCOAManagement.BaseProductName}\r\n                label={t(\"COAManagementBaseProductName\")}\r\n                disabled={true}\r\n                onChange={(data) => onFieldChange(\"COAManagementBaseProductName\", data)}\r\n                error={t(validationErrors.BaseProductName)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCOAManagement.LOTNumber}\r\n                label={t(\"COAManagementLOTNumber\")}\r\n                onChange={(data) => onFieldChange(\"LOTNumber\", data)}\r\n                error={t(validationErrors.LOTNumber)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n          </div>\r\n          {modAttributeMetaDataList.length > 0\r\n            ? modAttributeMetaDataList.map((attire) => (\r\n              <ErrorBoundary>\r\n                <Accordion>\r\n                  <Accordion.Content\r\n                    className=\"attributeAccordian\"\r\n                    title={\r\n                      t(\"Attributes_Header\")\r\n                    }\r\n                  >\r\n                    <AttributeDetails\r\n                      selectedAttributeList={attire.attributeMetaDataList}\r\n                      handleCellDataEdit={onAttributeDataChange}\r\n                      attributeValidationErrors={handleValidationErrorFilter(\r\n                        attributeValidationErrors,\r\n                        attire.TerminalCode\r\n                      )}\r\n                    ></AttributeDetails>\r\n                  </Accordion.Content>\r\n                </Accordion>\r\n              </ErrorBoundary>\r\n            ))\r\n            : null}\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-12 col-lg-12\">\r\n              <h4>{t(\"COAManagement_Configuration\")}</h4>\r\n              <div className=\"detailsTable\">\r\n                <DataTable\r\n                  data={listOptions.templateParameters}\r\n                  search={true}\r\n                  rows={pageSize}\r\n                  searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"ParameterName\"\r\n                    field=\"ParameterName\"\r\n                    header={t(\"COAManagementDetail_ParameterName\")}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"Specification\"\r\n                    field=\"Specification\"\r\n                    header={t(\"COAManagementDetail_Specification\")}\r\n                    editFieldType=\"text\"\r\n                    editable={true}\r\n                    customEditRenderer={(cellData) =>\r\n                      handleCustomEditTextBox(\r\n                        cellData\r\n                      )\r\n                    }\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"Method\"\r\n                    field=\"Method\"\r\n                    header={t(\"COAManagementDetail_Method\")}\r\n                    editFieldType=\"text\"\r\n                    editable={true}\r\n                    customEditRenderer={(cellData) =>\r\n                      handleCustomEditTextBox(\r\n                        cellData\r\n                      )\r\n                    }\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"Result\"\r\n                    field=\"Result\"\r\n                    header={t(\"COAManagementDetail_Result\")}\r\n                    editFieldType=\"text\"\r\n                    editable={true}\r\n                    customEditRenderer={(cellData) =>\r\n                      handleCustomEditTextBox(\r\n                        cellData\r\n                      )\r\n                    }\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"SortIndex\"\r\n                    field=\"SortIndex\"\r\n                    header={t(\"COAManagementDetail_SortIndex\")}\r\n                    editFieldType=\"text\"\r\n                    editable={true}\r\n                    customEditRenderer={(cellData) =>\r\n                      handleCustomEditTextBox(\r\n                        cellData\r\n                      )\r\n                    }\r\n                  ></DataTable.Column>\r\n                  {Array.isArray(listOptions.templateParameters) &&\r\n                    listOptions.templateParameters.length > pageSize ? (\r\n                    <DataTable.Pagination />) : (\"\")}\r\n                </DataTable>\r\n              </div>\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { COAManagementDetails } from \"../../UIBase/Details/COAManagementDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { coamanagementValidationDef } from \"../../../JS/ValidationDef\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { emptyCOATankManagement } from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { functionGroups, fnCOAManagement } from \"../../../JS/FunctionGroups\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nimport { coaManagementAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport { Button, Modal, FileDrop } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport ReportDetails from \"../../UIBase/Details/ReportDetails\";\r\n\r\nclass COAManagementDetailsComposite extends Component {\r\n  state = {\r\n    coaManagement: lodash.cloneDeep(emptyCOATankManagement),\r\n    modCOAManagement: lodash.cloneDeep(emptyCOATankManagement),\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      coamanagementValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    showAuthenticationLayout: false,\r\n    tempCOAManagement: {},\r\n    managementTankCodes: [],\r\n    managementTemplateCodes: [],\r\n    initialTemplateParameters: [],\r\n    templateParameters: [],\r\n    attributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    showReport: false,\r\n  };\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modAttributeMetaDataList = [];\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n      var modCOAManagement = lodash.cloneDeep(this.state.modCOAManagement);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        });\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.COAMANAGEMENT.forEach(function (\r\n            attributeMetaData\r\n          ) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue = modCOAManagement.Attributes.find(\r\n                (coaManagementAttribute) => {\r\n                  return coaManagementAttribute.TerminalCode === terminal;\r\n                }\r\n              );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modAttributeMetaDataList = [];\r\n      modAttributeMetaDataList = attributesTerminalsList;\r\n      modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modAttributeMetaDataList\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n\r\n      this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"coaManagementDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList.COAMANAGEMENT) &&\r\n        attributeMetaDataList.COAMANAGEMENT.length > 0\r\n      ) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.COAMANAGEMENT[0].TerminalCode,\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAMANAGEMENTDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors, modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.COAMANAGEMENT\r\n          ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  GetTemplateFromTank() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetTemplateFromTank,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            var list = result.EntityResult;\r\n            var tempManagementCodes = [];\r\n            list.forEach((item) => {\r\n              tempManagementCodes.push(item.Code);\r\n            });\r\n            this.setState({\r\n              managementFromManagement: tempManagementCodes,\r\n            });\r\n          } else {\r\n            console.log(\r\n              \"Error in getmanagementFromManagement:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Error while getting Management FromManagement List:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Management FromManagement List:\", error);\r\n    }\r\n  }\r\n\r\n  getManagementTankCodes() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetTanks + \"?ShareholderCode=\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (\r\n              result.EntityResult !== null &&\r\n              Array.isArray(result.EntityResult)\r\n            ) {\r\n              var list = result.EntityResult;\r\n              var tempTankCodes = [];\r\n              list.forEach((item) => {\r\n                tempTankCodes.push(item);\r\n              });\r\n              this.setState({\r\n                managementTankCodes: tempTankCodes,\r\n              });\r\n            }\r\n          } else {\r\n            console.log(\"Error in getManagementTankCodes:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Management TankCode List:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Management TankCode List:\", error);\r\n    }\r\n  }\r\n\r\n  handleTankCodeChange = (data) => {\r\n    try {\r\n      const modCOAManagement = lodash.cloneDeep(this.state.modCOAManagement);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modCOAManagement[\"TankCode\"] = data;\r\n      this.setState({ modCOAManagement });\r\n      if (coamanagementValidationDef[\"TankCode\"] !== undefined) {\r\n        validationErrors[\"TankCode\"] = Utilities.validateField(\r\n          coamanagementValidationDef[\"TankCode\"],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n\r\n      if (validationErrors[\"TankCode\"] != \"\") {\r\n        return;\r\n      }\r\n\r\n      axios(\r\n        RestAPIs.GetCOAManagementInfoFromTank + \"?TankCode=\" + data,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            var entity = result.EntityResult;\r\n            modCOAManagement.BaseProductCode = entity.BaseProductCode;\r\n            modCOAManagement.BaseProductName = entity.BaseProductName;\r\n            var tempTemplateCodes = entity.COATemplateCodes;\r\n            this.setState({\r\n              modCOAManagement,\r\n              managementTemplateCodes: tempTemplateCodes,\r\n            });\r\n          } else {\r\n            console.log(\r\n              \"Error in GetCOAManagementInfoFromTank:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while GetCOAManagementInfoFromTank:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while handleTankCodeChange:\", error);\r\n    }\r\n  };\r\n\r\n  handleTemplateCodeChange = (data) => {\r\n    try {\r\n      const modCOAManagement = lodash.cloneDeep(this.state.modCOAManagement);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modCOAManagement[\"TemplateCode\"] = data;\r\n      this.setState({ modCOAManagement });\r\n      if (coamanagementValidationDef[\"TemplateCode\"] !== undefined) {\r\n        validationErrors[\"TemplateCode\"] = Utilities.validateField(\r\n          coamanagementValidationDef[\"TemplateCode\"],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n\r\n      if (validationErrors[\"TemplateCode\"] != \"\") {\r\n        return;\r\n      }\r\n\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.coaTemplateCode,\r\n          value: data,\r\n        },\r\n      ];\r\n      var obj = {\r\n        keyDataCode: KeyCodes.coaTemplateCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.GetCOATemplateForManagement,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ isReadyToRender: false }, () => {\r\n              let details = result.EntityResult.COATemplateDetailsList;\r\n              var showParameters = [];\r\n              details.forEach((obj) => {\r\n                var tempObj = {\r\n                  ParameterName: obj.ParameterName,\r\n                  Specification: obj.Specification,\r\n                  Method: obj.Method,\r\n                  SortIndex: obj.SortIndex,\r\n                };\r\n                showParameters.push(tempObj);\r\n              });\r\n              this.setState({\r\n                templateParameters: showParameters,\r\n                initialTemplateParameters: showParameters,\r\n                isReadyToRender: true,\r\n              });\r\n            });\r\n          } else {\r\n            this.setState(\r\n              {\r\n                templateParameters: [],\r\n                initialTemplateParameters: [],\r\n                isReadyToRender: true,\r\n              },\r\n              () => {}\r\n            );\r\n            console.log(\r\n              \"Error in GetCOATemplateForManagement:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while GetCOATemplateForManagement:\", error, data);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while handleTemplateCodeChange:\", error);\r\n    }\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modCOAManagement = lodash.cloneDeep(this.state.modCOAManagement);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modCOAManagement[propertyName] = data;\r\n      this.setState({ modCOAManagement });\r\n      if (coamanagementValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          coamanagementValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAManagementDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.coaManagement.COACode !== \"\" &&\r\n        nextProps.selectedRow.COACode === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getCOAManagement(nextProps.selectedRow);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAManagementDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getAttributes(this.props.selectedRow);\r\n      //this.getCOAManagement(this.props.selectedRow);\r\n      this.getManagementTankCodes();\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAManagementDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(coaManagementRow) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [coaManagementAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.COAMANAGEMENT\r\n                ),\r\n            },\r\n            () => this.getCOAManagement(coaManagementRow)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  getCOAManagement(selectedRow) {\r\n    if (selectedRow.COACode === undefined) {\r\n      this.setState(\r\n        {\r\n          coaManagement: lodash.cloneDeep(emptyCOATankManagement),\r\n          modCOAManagement: lodash.cloneDeep(emptyCOATankManagement),\r\n          templateParameters: [],\r\n          //listOptions,\r\n          isReadyToRender: false,\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnCOAManagement\r\n          ),\r\n          modAttributeMetaDataList: [],\r\n        },\r\n        () => {\r\n          this.setState({ isReadyToRender: true });\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode === false)\r\n            this.localNodeAttribute();\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.coaManagementCode,\r\n        value: selectedRow.COACode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.coaManagementCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetCOAManagement,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let details =result.EntityResult.COAManagementDetailsList;\r\n          var AvailableManagementParameters = [];\r\n          details.forEach((obj) => {\r\n            var tempObj = {\r\n              ParameterName:\r\n                obj.ParameterName === undefined\r\n                  ? obj.AnalysisParameterName\r\n                  : obj.ParameterName,\r\n              Specification: obj.Specification,\r\n              Method: obj.Method,\r\n              SortIndex: obj.SortIndex,\r\n              Result: obj.Result,\r\n            };\r\n            AvailableManagementParameters.push(tempObj);\r\n          });\r\n\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              coaManagement: lodash.cloneDeep(result.EntityResult),\r\n              modCOAManagement: lodash.cloneDeep(result.EntityResult),\r\n              initialTemplateParameters: AvailableManagementParameters,\r\n              templateParameters: AvailableManagementParameters,\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnCOAManagement\r\n              ),\r\n            },\r\n            () => {\r\n              this.localNodeAttribute();\r\n            }\r\n          );\r\n          //this.InitialAvailibleParameters(this.state.coaManagement.COAManagementCode);\r\n        } else {\r\n          this.setState(\r\n            {\r\n              coaManagement: lodash.cloneDeep(emptyCOATankManagement),\r\n              modCOAManagement: lodash.cloneDeep(emptyCOATankManagement),\r\n              isReadyToRender: true,\r\n            },\r\n            () => {}\r\n          );\r\n          console.log(\"Error in getCOAManagement:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting coaManagement:\", error, selectedRow);\r\n      });\r\n  }\r\n\r\n  validateSave(attributeList) {\r\n    const { modCOAManagement } = this.state;\r\n    var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    Object.keys(coamanagementValidationDef).forEach(function (key) {\r\n      validationErrors[key] = Utilities.validateField(\r\n        coamanagementValidationDef[key],\r\n        modCOAManagement[key]\r\n      );\r\n    });\r\n\r\n    this.setState({ validationErrors });\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n    var returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  }\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  saveCOAManagement = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempCOAManagement = lodash.cloneDeep(this.state.tempCOAManagement);\r\n      let availableTems = lodash.cloneDeep(this.state.templateParameters);\r\n\r\n      tempCOAManagement.COAManagementDetailsList = [];\r\n      availableTems.forEach((obj) => {\r\n        var singleManagement = {\r\n          ParameterName: obj.ParameterName,\r\n          Specification: obj.Specification,\r\n          Method: obj.Method,\r\n          SortIndex: obj.SortIndex,\r\n          Result: obj.Result,\r\n          AnalysisParameterName: obj.ParameterName,\r\n        };\r\n        tempCOAManagement.COAManagementDetailsList.push(singleManagement);\r\n      });\r\n      tempCOAManagement.COATypeSortIndex = 1;\r\n      tempCOAManagement.COAType = \"GNS\";\r\n      tempCOAManagement.MFDTime = new Date();\r\n      if (\r\n        tempCOAManagement.Remarks === null ||\r\n        tempCOAManagement.Remarks === undefined\r\n      ) {\r\n        tempCOAManagement.Remarks = \"\";\r\n      }\r\n      if (\r\n        tempCOAManagement.TransactionCode === null ||\r\n        tempCOAManagement.TransactionCode === undefined\r\n      ) {\r\n        tempCOAManagement.TransactionCode = \"\";\r\n      }\r\n\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      tempCOAManagement.Attributes =\r\n        Utilities.fillAttributeDetails(attributeList);\r\n      this.state.coaManagement.COACode === \"\"\r\n        ? this.createCOAManagement(tempCOAManagement)\r\n        : this.updateCOAManagement(tempCOAManagement);\r\n    } catch (error) {\r\n      console.log(\"COAManagementDetailsComposite : Error in saveCOAManagement\");\r\n    }\r\n  };\r\n  handleSave = () => {\r\n    try {\r\n      let modCOAManagement = lodash.cloneDeep(this.state.modCOAManagement);\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      if (this.validateSave(attributeList)) {\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempCOAManagement = lodash.cloneDeep(modCOAManagement);\r\n        this.setState({ showAuthenticationLayout, tempCOAManagement }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveCOAManagement();\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAManagementDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  createCOAManagement(modCOAManagement) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.coaManagementCode,\r\n        value: modCOAManagement.COACode,\r\n      },\r\n    ];\r\n    modCOAManagement.COAManagementDetailsList =\r\n      modCOAManagement.COAManagementDetailsList;\r\n    var obj = {\r\n      keyDataCode: KeyCodes.coaManagementCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modCOAManagement,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"COAManagementDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"COACode\"],\r\n          keyValues: [modCOAManagement.COACode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateCOAManagement,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnCOAManagement\r\n              ),\r\n              showAuthenticationLayout: false,\r\n              modCOAManagement,\r\n            },\r\n            () => this.getCOAManagement({ COACode: modCOAManagement.COACode })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnCOAManagement\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in createCOAManagement:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modCOAManagement, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnCOAManagement\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modCOAManagement, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateCOAManagement(modCOAManagement) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.coaManagementCode,\r\n        value: modCOAManagement.COACode,\r\n      },\r\n    ];\r\n\r\n    if (modCOAManagement.FinishedProductCode == null) {\r\n      modCOAManagement.FinishedProductCode = \"\";\r\n    }\r\n    let obj = {\r\n      keyDataCode: KeyCodes.coaManagementCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modCOAManagement,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"COAManagementDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"COACode\"],\r\n          keyValues: [modCOAManagement.COACode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateCOAManagement,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnCOAManagement\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () => this.getCOAManagement({ COACode: modCOAManagement.COACode })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnCOAManagement\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in updateCOAManagement:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modCOAManagement, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modCOAManagement, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnCOAManagement\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      this.setState({ isReadyToRender: false }, () => {\r\n        const validationErrors = { ...this.state.validationErrors };\r\n        const coaManagement = lodash.cloneDeep(this.state.coaManagement);\r\n        Object.keys(validationErrors).forEach(function (key) {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState(\r\n          {\r\n            availableManagements: [],\r\n            associatedManagements: [],\r\n            selectedAvailableManagements: [],\r\n            selectedAssociatedManagements: [],\r\n            modCOAManagement: { ...coaManagement },\r\n            validationErrors,\r\n            modAttributeMetaDataList: [],\r\n            templateParameters:\r\n              coaManagement.TemplateCode !== \"\"\r\n                ? lodash.cloneDeep(this.state.initialTemplateParameters)\r\n                : [],\r\n            isReadyToRender: true,\r\n          },\r\n          () => {\r\n            if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n              this.handleResetAttributeValidationError();\r\n            } else {\r\n              this.localNodeAttribute();\r\n              this.handleResetAttributeValidationError();\r\n            }\r\n          }\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAManagementDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    try {\r\n      let clonetemplateParameters = lodash.cloneDeep(\r\n        this.state.templateParameters\r\n      );\r\n      var singleParameter = clonetemplateParameters.find(\r\n        (ele) => ele.ParameterName == cellData.rowData.ParameterName\r\n      );\r\n      singleParameter[cellData.field] = newVal;\r\n\r\n      this.setState({ templateParameters: clonetemplateParameters });\r\n    } catch (error) {\r\n      console.log(\":Error occured on handleCellDataEdit\", error);\r\n    }\r\n  };\r\n\r\n  handleModalBack = () => {\r\n    this.setState({ showReport: false });\r\n  };\r\n\r\n  renderModal() {\r\n    let path = null;\r\n    if (this.props.userDetails.EntityResult.IsArchived) {\r\n      path = \"TM/\" + Constants.TMReportArchive + \"/BaseCOAReport\";\r\n    } else {\r\n      path = \"TM/\" + Constants.TMReports + \"/BaseCOAReport\";\r\n    }\r\n    let paramValues = {\r\n      Culture: this.props.userDetails.EntityResult.UICulture,\r\n      COACode: this.state.modCOAManagement.COACode,\r\n    };\r\n    return (\r\n      <ReportDetails\r\n        showReport={this.state.showReport}\r\n        handleBack={this.handleModalBack}\r\n        handleModalClose={this.handleModalBack}\r\n        proxyServerHost={RestAPIs.WebAPIURL}\r\n        reportServiceHost={this.reportServiceURI}\r\n        filePath={path}\r\n        parameters={paramValues}\r\n      />\r\n    );\r\n  }\r\n\r\n  handleViewBaseCOAReport = () => {\r\n    if (this.reportServiceURI === undefined) {\r\n      axios(\r\n        RestAPIs.GetReportServiceURI,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        if (response.data.IsSuccess) {\r\n          this.reportServiceURI = response.data.EntityResult;\r\n          this.setState({ showReport: true });\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ showReport: true });\r\n    }\r\n  };\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modCOAManagement = lodash.cloneDeep(this.state.modCOAManagement);\r\n      modCOAManagement.IsActive = value;\r\n      this.setState({ modCOAManagement });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  render() {\r\n    const listOptions = {\r\n      managementTankCodes: this.state.managementTankCodes,\r\n      managementTemplateCodes: this.state.managementTemplateCodes,\r\n      templateParameters: this.state.templateParameters,\r\n    };\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"COAManagement_LastUpDt\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modCOAManagement.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modCOAManagement.LastUpdatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"COAManagement_LastUpdatedBy\",\r\n        fieldValue: this.state.modCOAManagement.LastUpdatedBy,\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.coaManagement.COACode}\r\n            newEntityName=\"COAManagement_Title\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n\r\n        <ErrorBoundary>\r\n          <COAManagementDetails\r\n            coaManagement={this.state.coaManagement}\r\n            modCOAManagement={this.state.modCOAManagement}\r\n            genericProps={this.props.genericProps}\r\n            validationErrors={this.state.validationErrors}\r\n            //listOptions={this.state.listOptions}\r\n            listOptions={listOptions}\r\n            onFieldChange={this.handleChange}\r\n            onTankCodeChange={this.handleTankCodeChange}\r\n            onTemplateCodeChange={this.handleTemplateCodeChange}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            pageSize={\r\n              this.props.userDetails.EntityResult.PageAttibutes\r\n                .WebPortalListPageSize\r\n            }\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            attributeMetaDataList={this.state.attributeMetaDataList}\r\n            onAttributeDataChange={this.handleAttributeDataChange}\r\n          ></COAManagementDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <div className=\"row userActionPosition\">\r\n                <div className=\"col col-2\">\r\n                  <Button\r\n                    className=\"backButton\"\r\n                    onClick={this.props.onBack}\r\n                    content={t(\"Back\")}\r\n                  ></Button>\r\n                </div>\r\n                <div className=\"col col-10\" style={{ textAlign: \"right\" }}>\r\n                  {this.state.coaManagement.COACode === \"\" ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <Button\r\n                      content={t(\"COAManagement_ViewBaseCOAReport\")}\r\n                      onClick={() => this.handleViewBaseCOAReport()}\r\n                    ></Button>\r\n                  )}\r\n                  <Button\r\n                    content={t(\"LookUpData_btnReset\")}\r\n                    className=\"cancelButton\"\r\n                    onClick={() => this.handleReset()}\r\n                  ></Button>\r\n                  <Button\r\n                    content={t(\"Save\")}\r\n                    disabled={!this.state.saveEnabled}\r\n                    onClick={() => this.handleSave()}\r\n                  ></Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </TranslationConsumer>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.coaManagement.COAManagementCode === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnCOAManagement}\r\n            handleOperation={this.saveCOAManagement}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n        {this.renderModal()}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(COAManagementDetailsComposite);\r\n\r\nCOAManagementDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  genericProps: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport * as WjCore from \"@grapecity/wijmo\";\r\nimport { ReportViewer } from \"@grapecity/wijmo.react.viewer\";\r\nimport * as wjViewer from \"@grapecity/wijmo.viewer\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { connect } from \"react-redux\";\r\n\r\nTMReportViewer.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\n\r\nTMReportViewer.defaultProps = {\r\n  parameters: {},\r\n};\r\n\r\nWjCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nfunction TMReportViewer({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  parameters,\r\n  filePath,\r\n  ...props\r\n}) {\r\n  //   const [proxyHost, setProxyHost] = useState(\r\n  //     \"http://localhost:8888/TMWebProxyAPI/\"\r\n  //   );\r\n  //   const [reportServiceHost, setReportServiceHost] = useState(\r\n  //     \"http://localhost:5632/\"\r\n  //   );\r\n  //   const [reportUrl, setReportUrl] = useState(proxyHost + \"api/report\");\r\n  //   const [filePath, setFilePath] = useState(\r\n  //     \"TM/\" + \"TMReports/\" + \"CarrierCompanyReport\"\r\n  //   );\r\n  const reportUrl = proxyServerHost + \"api/report\";\r\n  //const filePath = \"TM/\" + \"TMReports/\" + reportName;\r\n\r\n  const beforeXhrRequestSend = (s, event) => {\r\n    // use this event for Authorization purpose\r\n    const prevBeforeSend = event.settings.beforeSend;\r\n    event.settings.beforeSend = function (xhr) {\r\n      prevBeforeSend && prevBeforeSend(xhr);\r\n      //here you may add the params for XMLHttpRequest as required\r\n      if (!props.userDetails.EntityResult.IsWebPortalUser)\r\n        xhr.withCredentials = true;\r\n      if (xhr.URL_DEBUG.indexOf(\"parameters\") > -1) {\r\n        xhr.onreadystatechange = function () {\r\n          if (this.readyState === 4 && this.status === 200) {\r\n            var host = s.hostElement;\r\n            setTimeout(() => {\r\n              var splitter = host.querySelector(\".wj-viewer-splitter\");\r\n              var param = host\r\n                .querySelector(\".wj-viewer-tabsleft\")\r\n                .querySelectorAll(\"li\")[2];\r\n              if (!param.disabled) {\r\n                param.className = \"hidden\";\r\n                splitter.click();\r\n              }\r\n            }, 1000);\r\n          }\r\n        };\r\n      }\r\n    };\r\n  };\r\n  let header = {\r\n    Authorization: \"Bearer \" + props.tokenDetails.tokenInfo,\r\n  };\r\n\r\n  // let header = {\r\n  //   Authorization: \"Bearer \" + \"fiewjfjewifi\",\r\n  // };\r\n\r\n  const initViewer = (s, event) => {\r\n    wjViewer._ReportService.prototype.load = function (data) {\r\n      var _this = this;\r\n      var promise = new wjViewer._Promise();\r\n      if (!this._checkReportController(promise)) {\r\n        return promise;\r\n      }\r\n      this.httpRequest(this._getReportInstancesUrl(), {\r\n        method: \"POST\",\r\n        data: data,\r\n      }).then(\r\n        function (xhr) {\r\n          var v = wjViewer._parseReportExecutionInfo(xhr.responseText);\r\n          _this._instanceId = v.id;\r\n          _this._status = wjViewer._ExecutionStatus.loaded;\r\n          _this._outlinesLocation = v.outlinesLocation;\r\n          _this._statusLocation = v.statusLocation.replace(\r\n            reportServiceHost,\r\n            proxyServerHost\r\n          );\r\n          _this._pageSettingsLocation = v.pageSettingsLocation;\r\n          _this._featuresLocation = v.featuresLocation;\r\n          _this._parametersLocation = v.parametersLocation;\r\n          promise.resolve(v);\r\n        },\r\n        function (xhr) {\r\n          promise.reject(_this._getError(xhr));\r\n        }\r\n      );\r\n      return promise;\r\n    };\r\n  };\r\n\r\n  //console.log(props.userDetails.EntityResult.IsWebPortalUser, header);\r\n  return (\r\n    <div>\r\n      {props.userDetails.EntityResult.IsWebPortalUser ? (\r\n        <div>\r\n          <ReportViewer\r\n            requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <ReportViewer\r\n            //requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TMReportViewer);\r\n","import React from \"react\";\r\nimport { Modal, Button, Header } from \"@scuf/common\";\r\nimport TMReportViewer from \"../Common/TMReportViewer\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nReportDetails.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  filePath: PropTypes.string.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  showReport: PropTypes.bool.isRequired,\r\n  handleModalClose: PropTypes.func.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\nReportDetails.defaultProps = {\r\n  parameters: {},\r\n};\r\nexport default function ReportDetails({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  filePath,\r\n  handleBack,\r\n  showReport,\r\n  handleModalClose,\r\n  parameters,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <Modal\r\n      style={{ padding: \"0px\" }}\r\n      size=\"fullscreen\"\r\n      open={showReport}\r\n      // onClose={handleModalClose}\r\n    >\r\n      <div>\r\n        <Header title={t(\"Header_TerminalManager\")} menu={false} />\r\n        <TMReportViewer\r\n          proxyServerHost={proxyServerHost}\r\n          reportServiceHost={reportServiceHost}\r\n          filePath={filePath}\r\n          parameters={parameters}\r\n        />\r\n        <div style={{ marginTop: \"10px\", marginLeft: \"20px\" }}>\r\n          <Button\r\n            className=\"backButton\"\r\n            onClick={handleBack}\r\n            content={t(\"Report_Back\")}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["COAManagementDetails","_ref","coaManagement","modCOAManagement","validationErrors","listOptions","onFieldChange","onTankCodeChange","onTemplateCodeChange","onActiveStatusChange","isEnterpriseNode","pageSize","handleCellDataEdit","modAttributeMetaDataList","attributeValidationErrors","onAttributeDataChange","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","handleCustomEditTextBox","cellData","_jsx","Input","fluid","value","rowData","field","onChange","reserveSpace","TranslationConsumer","children","t","_jsxs","className","COACode","label","indicator","disabled","data","error","Select","placeholder","TankCode","options","Utilities","managementTankCodes","multiple","search","noResultsMessage","TemplateCode","managementTemplateCodes","text","BaseProductCode","BaseProductName","LOTNumber","length","map","attire","ErrorBoundary","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","DataTable","templateParameters","rows","searchPlaceholder","Column","header","editFieldType","editable","customEditRenderer","Array","isArray","Pagination","defaultProps","COAManagementDetailsComposite","Component","constructor","arguments","state","lodash","emptyCOATankManagement","coamanagementValidationDef","isReadyToRender","saveEnabled","showAuthenticationLayout","tempCOAManagement","initialTemplateParameters","showReport","handleAttributeDataChange","attribute","matchedAttributes","this","matchedAttributesList","filter","modattribute","Code","DefaultValue","forEach","setState","console","log","handleTankCodeChange","undefined","axios","RestAPIs","props","tokenDetails","tokenInfo","then","response","result","IsSuccess","entity","EntityResult","tempTemplateCodes","COATemplateCodes","ErrorList","catch","handleTemplateCodeChange","keyCode","key","KeyCodes","obj","keyDataCode","details","COATemplateDetailsList","showParameters","tempObj","ParameterName","Specification","Method","SortIndex","push","handleChange","propertyName","handleAuthenticationClose","saveCOAManagement","availableTems","COAManagementDetailsList","singleManagement","Result","AnalysisParameterName","COATypeSortIndex","COAType","MFDTime","Date","Remarks","TransactionCode","attributeList","Attributes","createCOAManagement","updateCOAManagement","handleSave","validateSave","userDetails","IsWebPortalUser","handleReset","Object","keys","availableManagements","associatedManagements","selectedAvailableManagements","selectedAssociatedManagements","IsEnterpriseNode","localNodeAttribute","handleResetAttributeValidationError","newVal","clonetemplateParameters","ele","handleModalBack","handleViewBaseCOAReport","reportServiceURI","handleActiveStatusChange","IsActive","terminalSelectionChange","selectedTerminals","attributesTerminalsList","existitem","COAMANAGEMENT","attributeMetaData","Attributevalue","coaManagementAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","GetTemplateFromTank","list","tempManagementCodes","item","managementFromManagement","getManagementTankCodes","tempTankCodes","componentWillReceiveProps","nextProps","selectedRow","getCOAManagement","componentDidMount","IsArchived","getAttributes","coaManagementRow","coaManagementAttributeEntity","AvailableManagementParameters","FunctionsList","functionGroups","modify","fnCOAManagement","add","returnValue","values","every","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","FinishedProductCode","renderModal","path","Constants","paramValues","Culture","UICulture","ReportDetails","handleBack","handleModalClose","proxyServerHost","reportServiceHost","filePath","parameters","render","popUpContents","fieldName","fieldValue","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","LastUpdatedBy","TMDetailsHeader","entityCode","newEntityName","genericProps","PageAttibutes","WebPortalListPageSize","Button","onClick","onBack","content","style","textAlign","UserAuthenticationLayout","Username","UserName","functionName","COAManagementCode","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","margin","Popup","element","Icon","marginLeft","root","name","size","position","List","TMDetailsUserActions","float","handleAttributeDateValue","convertAttributeDatetoString","chars","split","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","Checkbox","checked","toString","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","toLocaleString","TMReportViewer","reportUrl","beforeXhrRequestSend","s","event","prevBeforeSend","settings","beforeSend","xhr","withCredentials","URL_DEBUG","indexOf","onreadystatechange","readyState","status","host","hostElement","setTimeout","splitter","querySelector","param","querySelectorAll","click","Authorization","initViewer","wjViewer","prototype","load","_this","promise","_checkReportController","httpRequest","_getReportInstancesUrl","method","v","responseText","_instanceId","id","_status","loaded","_outlinesLocation","outlinesLocation","_statusLocation","statusLocation","replace","_pageSettingsLocation","pageSettingsLocation","_featuresLocation","featuresLocation","_parametersLocation","parametersLocation","resolve","reject","_getError","ReportViewer","requestHeaders","height","serviceUrl","initialized","beforeSendRequest","WjCore","useTranslation","Modal","padding","open","Header","menu","marginTop","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","getOptionsWithSelect","ddlOptions","selectOptionText","option","unshift","language","window","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}