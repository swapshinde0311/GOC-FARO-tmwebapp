{"version":3,"file":"static/js/4724.9710b72d.chunk.js","mappings":"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","sources":["Components/UIBase/Details/CustomerRecipeDetails.jsx","Components/Composite/Details/CustomerRecipeDetailsComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Select, Input } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\n\r\nCustomerRecipeDetails.propTypes = {\r\n  CustomerRecipe: PropTypes.object.isRequired,\r\n  modCustomerRecipe: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  Customers: PropTypes.array,\r\n  terminalCodes: PropTypes.array,\r\n  finishedProducts: PropTypes.array,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n  handleFinishedProductChange: PropTypes.func.isRequired,\r\n  handleActiveStatusChange: PropTypes.func.isRequired,\r\n};\r\n\r\nCustomerRecipeDetails.defaultProps = {\r\n  isEnterpriseNode: false,\r\n};\r\n\r\nexport function CustomerRecipeDetails({\r\n  CustomerRecipe,\r\n  modCustomerRecipe,\r\n  validationErrors,\r\n  onFieldChange,\r\n  isEnterpriseNode,\r\n  Customers,\r\n  terminalCodes,\r\n  finishedProducts,\r\n  handleCellDataEdit,\r\n  handleFinishedProductChange,\r\n  handleActiveStatusChange,\r\n  handleTerminalChange\r\n}) {\r\n  const handleCustomEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={\r\n          modCustomerRecipe.FinishedProduct.FinishedProductItems[\r\n            cellData.rowIndex\r\n          ][cellData.field]\r\n        }\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCustomerRecipe.Code}\r\n                label={t(\"CustomerRecipe_Code\")}\r\n                indicator=\"required\"\r\n                disabled={CustomerRecipe.Code !== \"\"}\r\n                onChange={(data) => onFieldChange(\"Code\", data)}\r\n                error={t(validationErrors.Code)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            {isEnterpriseNode ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder=\"Select\"\r\n                  value={modCustomerRecipe.TerminalCode}\r\n                  disabled={CustomerRecipe.TerminalCode !== \"\"}\r\n                  label={t(\"CustomerRecipe_AssociatedTerminal\")}\r\n                  indicator=\"required\"\r\n                  options={Utilities.transferListtoOptions(terminalCodes)}\r\n                  onChange={(data) => {\r\n                    onFieldChange(\"TerminalCode\", data);\r\n                    handleTerminalChange(data);\r\n                  }}\r\n                  error={t(validationErrors.TerminalCode)}\r\n                  multiple={false}\r\n                  reserveSpace={false}\r\n                  search={true}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={\r\n                  modCustomerRecipe.FinishedProduct !== undefined &&\r\n                  modCustomerRecipe.FinishedProduct !== null\r\n                    ? modCustomerRecipe.FinishedProduct.Code\r\n                    : \"\"\r\n                }\r\n                label={t(\"CustomerRecipe_FinishedProduct\")}\r\n                indicator=\"required\"\r\n                options={finishedProducts}\r\n                onChange={(data) => {\r\n                  onFieldChange(\"CustomerRecipefinishedProducts\", data);\r\n                  handleFinishedProductChange(data);\r\n                }}\r\n                disabled={CustomerRecipe.Code !== \"\"}\r\n                multiple={false}\r\n                reserveSpace={false}\r\n                search={true}\r\n                error={t(validationErrors.CustomerRecipefinishedProducts)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={modCustomerRecipe.CustomerCodes}\r\n                label={t(\"CustomerRecipe_AssociatedCustomers\")}\r\n                indicator=\"required\"\r\n                options={Customers}\r\n                onChange={(data) => onFieldChange(\"CustomerCodes\", data)}\r\n                multiple={true}\r\n                reserveSpace={false}\r\n                search={true}\r\n                error={t(validationErrors.CustomerCodes)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"CustomerRecipe_Status\")}\r\n                value={modCustomerRecipe.Status}\r\n                options={[\r\n                  { text: t(\"ViewShipment_Ok\"), value: true },\r\n                  { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                ]}\r\n                onChange={(data) => handleActiveStatusChange(data)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCustomerRecipe.Remarks}\r\n                label={t(\"CustomerRecipe_Remarks\")}\r\n                indicator={\r\n                  modCustomerRecipe.Status !== CustomerRecipe.Status\r\n                    ? \"required\"\r\n                    : \"\"\r\n                }\r\n                error={t(validationErrors.Remarks)}\r\n                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>            \r\n          </div>\r\n          <div className=\"row compartmentRow\">\r\n            <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n              <h4>{t(\"CustomerRecipe_AssociatedBaseProducts\")}</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"row marginRightZero tableScroll\">\r\n            <div className=\"col-12 detailsTable\">\r\n              <DataTable\r\n                data={\r\n                  modCustomerRecipe.FinishedProduct !== undefined &&\r\n                  modCustomerRecipe.FinishedProduct !== null &&\r\n                  modCustomerRecipe.FinishedProduct.FinishedProductItems !==\r\n                    undefined &&\r\n                  modCustomerRecipe.FinishedProduct.FinishedProductItems !==\r\n                    null\r\n                    ? modCustomerRecipe.FinishedProduct.FinishedProductItems\r\n                    : []\r\n                }\r\n                scrollable={true}\r\n                scrollHeight=\"320px\"\r\n              >\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"BaseProductCode\"\r\n                  renderer={(cellData) => {\r\n                    if (\r\n                      cellData.rowData.BaseProductCode !== null &&\r\n                      cellData.rowData.BaseProductCode !== undefined &&\r\n                      cellData.rowData.BaseProductCode !== \"\" &&\r\n                      cellData.rowData.Version !== 0\r\n                    ) {\r\n                      return cellData.rowData.BaseProductCode;\r\n                    } else {\r\n                      return cellData.rowData.AdditiveCode;\r\n                    }\r\n                  }}\r\n                  header={t(\"CustomerRecipe_BaseProductCode\")}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"IsAdditive\"\r\n                  header={t(\"CustomerRecipe_IsAdditive\")}\r\n                  renderer={(cellData) => {\r\n                    if (\r\n                      cellData.rowData.BaseProductCode !== null &&\r\n                      cellData.rowData.BaseProductCode !== undefined &&\r\n                      cellData.rowData.BaseProductCode !== \"\" &&\r\n                      cellData.rowData.Version !== 0\r\n                    ) {\r\n                      return \"N\";\r\n                    } else {\r\n                      return \"Y\";\r\n                    }\r\n                  }}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight colminWidth\"\r\n                  key=\"Quantity\"\r\n                  field=\"Quantity\"\r\n                  header={t(\"CustomerRecipe_AbsoluteNumber\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  // renderer={(cellData) => intDisplayValues(cellData)}\r\n                  customEditRenderer={handleCustomEditTextBox}\r\n                ></DataTable.Column>\r\n              </DataTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { CustomerRecipeDetails } from \"../../UIBase/Details/CustomerRecipeDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { CustomerRecipeValidationDef } from \"../../../JS/ValidationDef\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { emptyCustomerRecipe } from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { functionGroups, fnCustomerRecipe } from \"../../../JS/FunctionGroups\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nimport { CustomerRecipeAssociatedBPValidationDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport { toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\n\r\nclass CustomerRecipeDetailsComposite extends Component {\r\n  state = {\r\n    CustomerRecipe: lodash.cloneDeep(emptyCustomerRecipe), //{ ...emptyCustomerRecipe },\r\n    modCustomerRecipe: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      CustomerRecipeValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    customerKPIList: [],\r\n    Customers: [],\r\n    terminalCodes: this.props.userDetails.EntityResult.IsEnterpriseNode\r\n      ? this.getTerminalList()\r\n      : [],\r\n    finishedProducts: [],\r\n    showAuthenticationLayout: false,\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modCustomerRecipe = lodash.cloneDeep(this.state.modCustomerRecipe);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n\r\n      modCustomerRecipe[propertyName] = data;\r\n      this.setState({ modCustomerRecipe });\r\n      if (CustomerRecipeValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          CustomerRecipeValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n\r\n      if (CustomerRecipeValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          CustomerRecipeValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n\r\n      this.setState({ modCustomerRecipe, validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleTerminalChange = (value) => {\r\n    this.getFinishedProductList(value);\r\n    this.getcustomerList(value);\r\n  };\r\n\r\n  handleFinishedProductChange = (value) => {\r\n    try {\r\n      let modCustomerRecipe = lodash.cloneDeep(this.state.modCustomerRecipe);\r\n      modCustomerRecipe.FinishedProduct.Code = value;\r\n      this.getFinishedProduct(value, this.props.selectedShareholder);\r\n      this.setState({ modCustomerRecipe });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modCustomerRecipe = lodash.cloneDeep(this.state.modCustomerRecipe);\r\n      modCustomerRecipe.Status = value;\r\n      if (modCustomerRecipe.Status !== this.state.CustomerRecipe.Status)\r\n        modCustomerRecipe.Remarks = \"\";\r\n      this.setState({ modCustomerRecipe });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  getFinishedProduct(finishedProductCode, shareHolderCode) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.finishedProductCode,\r\n        value: finishedProductCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shareHolderCode,\r\n      keyDataCode: KeyCodes.finishedProductCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetFinishedProduct,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        const modCustomerRecipe = lodash.cloneDeep(\r\n          this.state.modCustomerRecipe\r\n        );\r\n        if (result.IsSuccess) {\r\n          if (\r\n            Array.isArray(result.EntityResult.FinishedProductItems) &&\r\n            result.EntityResult.FinishedProductItems.length > 0\r\n          ) {\r\n            modCustomerRecipe.FinishedProduct.FinishedProductItems =\r\n              result.EntityResult.FinishedProductItems;\r\n            this.setState({\r\n              modCustomerRecipe: modCustomerRecipe,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getFinishedProduct:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Finished Product:\", error);\r\n      });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.CustomerRecipe.Code !== \"\" &&\r\n        nextProps.selectedRow.CustomerRecipe_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getCustomerRecipe(nextProps.selectedRow);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getCustomerRecipe(this.props.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getTerminalList() {\r\n    return this.props.terminalList;\r\n  }\r\n\r\n  getFinishedProductList(terminalCode) {\r\n    this.setState({ finishedProducts: [] });\r\n    axios(\r\n      RestAPIs.GetFinishedProductCodes +\r\n        \"?ShareholderCode=\" +\r\n        this.props.selectedShareholder +\r\n        \"&TerminalCode=\" +\r\n        terminalCode,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    ).then((response) => {\r\n      var result = response.data;\r\n      if (result.IsSuccess === true) {\r\n        if (\r\n          Array.isArray(result.EntityResult) &&\r\n          result.EntityResult.length > 0\r\n        ) {\r\n          let finishedProductOptions = Utilities.transferListtoOptions(\r\n            result.EntityResult\r\n          );\r\n          this.setState({ finishedProducts: finishedProductOptions });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getcustomerList(terminalCode) {\r\n    this.setState({ Customers: [] });\r\n    axios(\r\n      RestAPIs.GetCustomerListForRole +\r\n        \"?ShareholderCode=\" +\r\n        this.props.selectedShareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        let isEnterprise = this.props.userDetails.EntityResult.IsEnterpriseNode;\r\n        if (result.IsSuccess === true) {\r\n          let Customercodes = [];\r\n          result.EntityResult.Table.forEach((ele) => {\r\n            if (isEnterprise && ele.TerminalCodes.indexOf(terminalCode) > -1) {\r\n              Customercodes.push(ele.Common_Code);\r\n            } else if (!isEnterprise) {\r\n              Customercodes.push(ele.Common_Code);\r\n            }\r\n          });\r\n\r\n          let Customers = Utilities.transferListtoOptions(Customercodes);\r\n\r\n          this.setState({ Customers, isReadyToRender: true });\r\n        } else {\r\n          this.setState({ Customers: [], isReadyToRender: true });\r\n          console.log(\"Error in GetCustomerListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ Customers: [], isReadyToRender: true });\r\n        console.log(\"Error while getting Customer List:\", error);\r\n      });\r\n  }\r\n\r\n  initialFPAndCustomer(terminalCode) {\r\n    this.getFinishedProductList(terminalCode);\r\n    this.getcustomerList(terminalCode);\r\n  }\r\n\r\n  getCustomerRecipe(selectedRow) {\r\n    let TerminalCode = this.props.userDetails.EntityResult.IsEnterpriseNode\r\n      ? selectedRow.TerminalCode\r\n      : this.props.userDetails.EntityResult.TerminalCode;\r\n    emptyCustomerRecipe.ShareholderCode = this.props.selectedShareholder;\r\n\r\n    if (selectedRow.CustomerRecipe_Code === undefined) {\r\n      if (!this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n        this.initialFPAndCustomer(TerminalCode);\r\n      }\r\n      this.setState({\r\n        CustomerRecipe: lodash.cloneDeep(emptyCustomerRecipe),\r\n        modCustomerRecipe: lodash.cloneDeep(emptyCustomerRecipe),\r\n        isReadyToRender: true,\r\n        customerKPIList: [],\r\n        saveEnabled: Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnCustomerRecipe\r\n        ),\r\n      });\r\n      return;\r\n    }\r\n\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.CustomerRecipeCode,\r\n        value: selectedRow.CustomerRecipe_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.terminalCode,\r\n        value: TerminalCode,\r\n      },\r\n      {\r\n        key: KeyCodes.finishedProductCode,\r\n        value: selectedRow.FinishedProduct_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.CustomerRecipeCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetCustomerRecipe,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let results = lodash.cloneDeep(result.EntityResult);\r\n          this.initialFPAndCustomer(results.TerminalCode);\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            CustomerRecipe: results,\r\n            modCustomerRecipe: results,\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnCustomerRecipe\r\n            ),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            CustomerRecipe: lodash.cloneDeep(emptyCustomerRecipe),\r\n            modCustomerRecipe: lodash.cloneDeep(emptyCustomerRecipe),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetCustomer:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Customer:\", error, selectedRow);\r\n      });\r\n  }\r\n\r\n  validateSave(modCustomerRecipe) {\r\n    var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    Object.keys(CustomerRecipeValidationDef).forEach(function (key) {\r\n      validationErrors[key] = Utilities.validateField(\r\n        CustomerRecipeValidationDef[key],\r\n        modCustomerRecipe[key]\r\n      );\r\n    });\r\n\r\n    if (modCustomerRecipe.Status !== this.state.CustomerRecipe.Status) {\r\n      if (\r\n        modCustomerRecipe.Remarks === null ||\r\n        modCustomerRecipe.Remarks === \"\"\r\n      ) {\r\n        validationErrors[\"Remarks\"] = \"OriginTerminal_RemarksRequired\";\r\n      }\r\n    }\r\n\r\n    if (\r\n      modCustomerRecipe.FinishedProduct.Code === \"\" ||\r\n      modCustomerRecipe.FinishedProduct.Code === undefined ||\r\n      modCustomerRecipe.FinishedProduct.Code === null\r\n    ) {\r\n      validationErrors.CustomerRecipefinishedProducts =\r\n        \"CustomerRecipeDetails_reqFinishedProduct\";\r\n    } else {\r\n      validationErrors.CustomerRecipefinishedProducts = \"\";\r\n    }\r\n\r\n    if (!this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n      validationErrors.TerminalCode = \"\";\r\n    }\r\n\r\n    var returnValue = true;\r\n    returnValue = Object.values(validationErrors).every(function (value) {\r\n      return value === \"\";\r\n    });\r\n    this.setState({ validationErrors });\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"CUSTOMERRECIPE_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    if (modCustomerRecipe.FinishedProduct.FinishedProductItems.length > 0) {\r\n      modCustomerRecipe.FinishedProduct.FinishedProductItems.forEach((com) => {\r\n        let err = \"\";\r\n\r\n        if (\r\n          CustomerRecipeAssociatedBPValidationDef[0].validator !== undefined\r\n        ) {\r\n          err = Utilities.validateField(\r\n            CustomerRecipeAssociatedBPValidationDef[0].validator,\r\n            com[\"Quantity\"]\r\n          );\r\n        }\r\n\r\n        if (err !== \"\") {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [CustomerRecipeAssociatedBPValidationDef[0].displayName],\r\n            keyValues: [com[CustomerRecipeAssociatedBPValidationDef[0].field]],\r\n            isSuccess: false,\r\n            errorMessage: err,\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    if (notification.messageResultDetails.length > 0) {\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  saveCustomerRecipe = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let CustomerRecipe = lodash.cloneDeep(this.state.CustomerRecipe);\r\n      let modCustomerRecipe = lodash.cloneDeep(this.state.modCustomerRecipe);\r\n      CustomerRecipe.Code === \"\"\r\n        ? this.createCustomerRecipe(modCustomerRecipe)\r\n        : this.updateCustomerRecipe(modCustomerRecipe);\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeDetailsComposite : Error in saveCustomerRecipe\"\r\n      );\r\n    }\r\n  };\r\n  handleSave = () => {\r\n    try {\r\n      let modCustomerRecipe = lodash.cloneDeep(this.state.modCustomerRecipe);\r\n      if (this.validateSave(modCustomerRecipe)) {\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        this.setState({ showAuthenticationLayout }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveCustomerRecipe();\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  convertStringtoDecimal(modFinishedProduct) {\r\n    try {\r\n      if (\r\n        modFinishedProduct.Density !== null &&\r\n        modFinishedProduct.Density !== \"\"\r\n      ) {\r\n        modFinishedProduct.Density = Utilities.convertStringtoDecimal(\r\n          modFinishedProduct.Density\r\n        );\r\n      }\r\n      if (\r\n        modFinishedProduct.ToleranceQuantity !== null &&\r\n        modFinishedProduct.ToleranceQuantity !== \"\"\r\n      ) {\r\n        modFinishedProduct.ToleranceQuantity = Utilities.convertStringtoDecimal(\r\n          modFinishedProduct.ToleranceQuantity\r\n        );\r\n      }\r\n      if (\r\n        modFinishedProduct.ToleranceQuantityForMarine !== null &&\r\n        modFinishedProduct.ToleranceQuantityForMarine !== \"\"\r\n      ) {\r\n        modFinishedProduct.ToleranceQuantityForMarine =\r\n          Utilities.convertStringtoDecimal(\r\n            modFinishedProduct.ToleranceQuantityForMarine\r\n          );\r\n      }\r\n      if (\r\n        modFinishedProduct.ToleranceQuantityForPipeline !== null &&\r\n        modFinishedProduct.ToleranceQuantityForPipeline !== \"\"\r\n      ) {\r\n        modFinishedProduct.ToleranceQuantityForPipeline =\r\n          Utilities.convertStringtoDecimal(\r\n            modFinishedProduct.ToleranceQuantityForPipeline\r\n          );\r\n      }\r\n      if (\r\n        modFinishedProduct.ToleranceQuantityForRail !== null &&\r\n        modFinishedProduct.ToleranceQuantityForRail !== \"\"\r\n      ) {\r\n        modFinishedProduct.ToleranceQuantityForRail =\r\n          Utilities.convertStringtoDecimal(\r\n            modFinishedProduct.ToleranceQuantityForRail\r\n          );\r\n      }\r\n\r\n      if (this.state.hazardousEnabled) {\r\n        if (\r\n          modFinishedProduct.SFLPercent !== null &&\r\n          modFinishedProduct.SFLPercent !== \"\"\r\n        ) {\r\n          modFinishedProduct.SFLPercent = Utilities.convertStringtoDecimal(\r\n            modFinishedProduct.SFLPercent\r\n          );\r\n        }\r\n      }\r\n      return modFinishedProduct;\r\n    } catch (err) {\r\n      console.log(\"convertStringtoDecimal error finishedProduct details\", err);\r\n    }\r\n  }\r\n\r\n  createCustomerRecipe(modCustomerRecipe) {\r\n    modCustomerRecipe.FinishedProduct = this.convertStringtoDecimal(\r\n      modCustomerRecipe.FinishedProduct\r\n    );\r\n\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.CustomerRecipeCode,\r\n        value: modCustomerRecipe.Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.CustomerRecipeCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modCustomerRecipe,\r\n    };\r\n\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"CustomerRecipeDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"CustomerRecipe_Code\"],\r\n          keyValues: [modCustomerRecipe.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateCustomerRecipe,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnCustomerRecipe\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () =>\r\n              this.getCustomerRecipe({\r\n                CustomerRecipe_Code: modCustomerRecipe.Code,\r\n                FinishedProduct_Code: modCustomerRecipe.FinishedProduct.Code,\r\n                TerminalCode: modCustomerRecipe.TerminalCode,\r\n              })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnCustomerRecipe\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in CreateCustomer:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modCustomerRecipe, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnCustomerRecipe\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modCustomerRecipe, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateCustomerRecipe(modCustomerRecipe) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.CustomerRecipeCode,\r\n        value: modCustomerRecipe.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.CustomerRecipeCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modCustomerRecipe,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"CustomerRecipeDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"CustomerRecipe_Code\"],\r\n          keyValues: [modCustomerRecipe.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateCustomerRecipe,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnCustomerRecipe\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () =>\r\n              this.getCustomerRecipe({\r\n                CustomerRecipe_Code: modCustomerRecipe.Code,\r\n                FinishedProduct_Code: modCustomerRecipe.FinishedProduct.Code,\r\n                TerminalCode: modCustomerRecipe.TerminalCode,\r\n              })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnCustomerRecipe\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in UpdateCustomerRecipe:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modCustomerRecipe, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modCustomerRecipe, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnCustomerRecipe\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      const CustomerRecipe = lodash.cloneDeep(this.state.CustomerRecipe);\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState({\r\n        modCustomerRecipe: { ...CustomerRecipe },\r\n        validationErrors,\r\n      });\r\n      if (this.state.CustomerRecipe.Code === \"\") {\r\n        var terminalCodes = [...this.state.terminalCodes];\r\n        terminalCodes = [];\r\n        this.setState({ terminalCodes });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerRecipeDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    let modCustomerRecipe = lodash.cloneDeep(this.state.modCustomerRecipe);\r\n    modCustomerRecipe.FinishedProduct.FinishedProductItems[cellData.rowIndex][\r\n      cellData.field\r\n    ] = newVal;\r\n    this.setState({ modCustomerRecipe });\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"Cust_LastUpDt\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modCustomerRecipe.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modCustomerRecipe.LastUpdatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"Cust_CreateDt\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modCustomerRecipe.CreatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modCustomerRecipe.CreatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.CustomerRecipe.Code}\r\n            newEntityName=\"CustomerRecipe_Title\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n\r\n        <ErrorBoundary>\r\n          <CustomerRecipeDetails\r\n            CustomerRecipe={this.state.CustomerRecipe}\r\n            modCustomerRecipe={this.state.modCustomerRecipe}\r\n            validationErrors={this.state.validationErrors}\r\n            Customers={this.state.Customers}\r\n            terminalCodes={this.state.terminalCodes}\r\n            finishedProducts={this.state.finishedProducts}\r\n            onFieldChange={this.handleChange}\r\n            handleFinishedProductChange={this.handleFinishedProductChange}\r\n            handleActiveStatusChange={this.handleActiveStatusChange}\r\n            handleTerminalChange={this.handleTerminalChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n          ></CustomerRecipeDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.CustomerRecipe.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnCustomerRecipe}\r\n            handleOperation={this.saveCustomerRecipe}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CustomerRecipeDetailsComposite);\r\n\r\nCustomerRecipeDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  genericProps: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n"],"names":["CustomerRecipeDetails","_ref","CustomerRecipe","modCustomerRecipe","validationErrors","onFieldChange","isEnterpriseNode","Customers","terminalCodes","finishedProducts","handleCellDataEdit","handleFinishedProductChange","handleActiveStatusChange","handleTerminalChange","handleCustomEditTextBox","cellData","_jsx","Input","fluid","value","FinishedProduct","FinishedProductItems","rowIndex","field","onChange","reserveSpace","TranslationConsumer","children","t","_jsxs","className","Code","label","indicator","disabled","data","error","Select","placeholder","TerminalCode","options","Utilities","multiple","search","noResultsMessage","undefined","CustomerRecipefinishedProducts","CustomerCodes","Status","text","Remarks","DataTable","scrollable","scrollHeight","Column","renderer","rowData","BaseProductCode","Version","AdditiveCode","header","editFieldType","editable","customEditRenderer","defaultProps","CustomerRecipeDetailsComposite","Component","constructor","arguments","state","lodash","emptyCustomerRecipe","CustomerRecipeValidationDef","isReadyToRender","saveEnabled","customerKPIList","this","props","userDetails","EntityResult","IsEnterpriseNode","getTerminalList","showAuthenticationLayout","handleChange","propertyName","setState","console","log","getFinishedProductList","getcustomerList","getFinishedProduct","selectedShareholder","saveCustomerRecipe","createCustomerRecipe","updateCustomerRecipe","handleSave","validateSave","IsWebPortalUser","handleReset","Object","keys","forEach","key","newVal","handleAuthenticationClose","finishedProductCode","shareHolderCode","keyCode","KeyCodes","obj","ShareHolderCode","keyDataCode","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","Array","isArray","length","ErrorList","catch","componentWillReceiveProps","nextProps","selectedRow","CustomerRecipe_Code","getCustomerRecipe","componentDidMount","IsArchived","terminalList","terminalCode","finishedProductOptions","isEnterprise","Customercodes","Table","ele","TerminalCodes","indexOf","push","Common_Code","initialFPAndCustomer","ShareholderCode","FunctionsList","functionGroups","add","fnCustomerRecipe","FinishedProduct_Code","results","modify","returnValue","values","every","notification","messageType","message","messageResultDetails","com","err","CustomerRecipeAssociatedBPValidationDef","validator","keyFields","displayName","keyValues","isSuccess","errorMessage","toast","ErrorBoundary","NotifyEvent","notificationMessage","autoClose","convertStringtoDecimal","modFinishedProduct","Density","ToleranceQuantity","ToleranceQuantityForMarine","ToleranceQuantityForPipeline","ToleranceQuantityForRail","hazardousEnabled","SFLPercent","Entity","onSaved","render","popUpContents","fieldName","fieldValue","Date","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","CreatedTime","TMDetailsHeader","entityCode","newEntityName","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","style","margin","Popup","element","Icon","marginLeft","root","name","size","position","List","map","content","Content","Button","onClick","float"],"sourceRoot":""}