{"version":3,"file":"static/js/5745.9907adaa.chunk.js","mappings":"4QAiDO,SAASA,EAAkBC,GAmB9B,IAnB+B,YACjCC,EAAW,eACXC,EAAc,iBACdC,EAAgB,YAChBC,EAAW,cACXC,EAAa,iBACbC,EAAgB,qBAChBC,EAAoB,qBACpBC,EAAoB,iBACpBC,EAAgB,6BAChBC,EAA4B,SAC5BC,EAAQ,sBACRC,EAAqB,8BACrBC,EAA6B,yBAC7BC,EAAwB,mBACxBC,EAAkB,yBAClBC,EAAwB,0BACxBC,EAAyB,sBACzBC,GACDlB,EACC,MAAMmB,EAA8BA,CAACF,EAA2BG,KAC9D,IAAIC,EAAsB,GAM1B,OALAA,EAAsBJ,EAA0BK,MAC7CC,GACQA,EAAkBC,eAAiBJ,IAGvCC,EAAoBJ,yBAAyB,EAEhDQ,EAA2BC,IAE7BC,EAAAA,EAAAA,KAACC,EAAAA,MAAK,CACJC,OAAK,EACLC,MAAOJ,EAASK,QAAQL,EAASM,OACjCC,SAAWH,GAAUf,EAAmBe,EAAOJ,GAC/CQ,cAAc,IAKpB,OACEP,EAAAA,EAAAA,KAACQ,EAAAA,oBAAmB,CAAAC,SAChBC,IACAC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBH,SAAA,EAC/BE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAMC,MAAO,CAAC,cAAc,WAAWJ,SAAA,EACpDT,EAAAA,EAAAA,KAAA,OAAKY,UAAU,2BAA0BH,UACvCT,EAAAA,EAAAA,KAACC,EAAAA,MAAK,CACJC,OAAK,EACLC,MAAO5B,EAAeuC,gBACtBC,MAAOL,EAAE,mBACTM,UAAU,WACVC,SAA0C,KAAhC3C,EAAYwC,gBACtBR,SAAWY,GAASxC,EAAc,kBAAmBwC,GACrDC,MAAOT,EAAElC,EAAiBsC,iBAC1BP,cAAc,OAGlBP,EAAAA,EAAAA,KAAA,OAAKY,UAAU,2BAA0BH,UACvCT,EAAAA,EAAAA,KAACoB,EAAAA,OAAM,CACLlB,OAAK,EACLmB,YAAY,SACZlB,MAAO5B,EAAe+C,SACtBP,MAAOL,EAAE,uBACTM,UAAU,WACVO,QAASC,EAAAA,GAAgC/C,EAAYgD,mBACrDnB,SAAWY,GAASvC,EAAiBuC,GACrCC,MAAOT,EAAElC,EAAiB8C,UAC1BL,SAAmC,OAAzB3C,EAAYgD,SACtBI,UAAU,EACVnB,cAAc,EACdoB,QAAQ,EACRC,iBAAkBlB,EAAE,yBAGxBV,EAAAA,EAAAA,KAAA,OAAKY,UAAU,2BAA0BH,UACvCT,EAAAA,EAAAA,KAACC,EAAAA,MAAK,CACJC,OAAK,EACLC,MAAO5B,EAAesD,gBACtBd,MAAOL,EAAE,8BACTO,UAAU,EACVV,cAAc,OAGlBP,EAAAA,EAAAA,KAAA,OAAKY,UAAU,2BAA0BH,UACvCT,EAAAA,EAAAA,KAACoB,EAAAA,OAAM,CACLlB,OAAK,EACLmB,YAAY,SACZlB,MAAO5B,EAAeuD,QACtBf,MAAOL,EAAE,sBACTM,UAAU,WACVO,QAASC,EAAAA,GAAgC/C,EAAYsD,iBACrDzB,SAAWY,GAASxC,EAAc,UAAWwC,GAC7CC,MAAOT,EAAElC,EAAiBsD,SAC1Bb,SAAkC,OAAxB3C,EAAYwD,QACtBJ,UAAU,EACVnB,cAAc,EACdoB,QAAQ,EACRC,iBAAkBlB,EAAE,yBAGxBV,EAAAA,EAAAA,KAAA,OAAKY,UAAU,2BAA0BH,UACvCT,EAAAA,EAAAA,KAACoB,EAAAA,OAAM,CACLlB,OAAK,EACLmB,YAAY,SACZlB,MAAO5B,EAAeyD,aACtBjB,MAAOL,EAAE,mBACTa,SAASU,EAAAA,EAAAA,IACPT,EAAAA,GAAgC/C,EAAYyD,sBAC5CxB,EAAE,kBAEJJ,SAAWY,GAAStC,EAAqBsC,GACzCD,UAAU,EACVS,UAAU,EACVnB,cAAc,EACdoB,QAAQ,EACRC,iBAAkBlB,EAAE,yBAGxBV,EAAAA,EAAAA,KAAA,OAAKY,UAAU,2BAA0BH,UACvCT,EAAAA,EAAAA,KAACoB,EAAAA,OAAM,CACLlB,OAAK,EACLmB,YAAY,SACZN,MAAOL,EAAE,wBACTP,MAAO5B,EAAe4D,SACtBZ,QAAS,CACP,CAAEa,KAAM1B,EAAE,mBAAoBP,OAAO,GACrC,CAAEiC,KAAM1B,EAAE,+BAAgCP,OAAO,IAEnDG,SAAWY,GAASrC,EAAqBqC,QAG7ClB,EAAAA,EAAAA,KAAA,OAAKY,UAAU,2BAA0BH,UACvCT,EAAAA,EAAAA,KAACC,EAAAA,MAAK,CACJC,OAAK,EACLC,MAAkC,OAA3B5B,EAAe8D,QAAmB,GAAK9D,EAAe8D,QAC7DtB,MAAOL,EAAE,uBACTJ,SAAWY,GAASxC,EAAc,UAAWwC,GAC7CF,UACEzC,EAAe4D,WAAa7D,EAAY6D,SAAW,WAAa,GAElEhB,MAAOT,EAAElC,EAAiB6D,SAC1B9B,cAAc,SAInBlB,EAAyBiD,OAAS,EAC/BjD,EAAyBkD,KAAKC,IAC9BxC,EAAAA,EAAAA,KAACyC,EAAAA,EAAa,CAAAhC,UACZT,EAAAA,EAAAA,KAAC0C,EAAAA,UAAS,CAAAjC,UACRT,EAAAA,EAAAA,KAAC0C,EAAAA,UAAUC,QAAO,CAChB/B,UAAU,qBACVgC,MACGlC,EAAE,qBACJD,UAEDT,EAAAA,EAAAA,KAAC6C,EAAAA,EAAgB,CACfC,sBAAuBN,EAAOO,sBAC9B3D,mBAAoBG,EACpBD,0BAA2BE,EACzBF,EACAkD,EAAO3C,wBAOjB,MACJc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAMC,MAAO,CAAC,cAAc,WAAWJ,SAAA,EACpDE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BH,SAAA,EACvCT,EAAAA,EAAAA,KAAA,MAAAS,SAAKC,EAAE,gCACPV,EAAAA,EAAAA,KAAA,OAAKY,UAAU,eAAcH,UAC3BE,EAAAA,EAAAA,MAACqC,EAAAA,GAAS,CACR9B,KAAMzC,EAAYwE,mBAClBtB,QAAQ,EACRuB,cAAc,WACdC,UAAW1E,EAAY2E,2BACvBC,kBAAmBtE,EACnBuE,KAAMtE,EACNuE,kBAAmB7C,EAAE,iCAAiCD,SAAA,EACtDT,EAAAA,EAAAA,KAACgD,EAAAA,GAAUQ,OAAM,CACf5C,UAAU,gBAEVP,MAAM,gBACNoD,OAAQ/C,EAAE,mCACVgD,cAAc,QAHV,kBAKN1D,EAAAA,EAAAA,KAACgD,EAAAA,GAAUQ,OAAM,CACf5C,UAAU,gBAEVP,MAAM,gBACNoD,OAAQ/C,EAAE,mCACVgD,cAAc,OACdC,UAAU,EACVC,mBAAqB7D,GACnBD,EACEC,IAPA,kBAWNC,EAAAA,EAAAA,KAACgD,EAAAA,GAAUQ,OAAM,CACf5C,UAAU,gBAEVP,MAAM,SACNoD,OAAQ/C,EAAE,4BACVgD,cAAc,OACdC,UAAU,EACVC,mBAAqB7D,GACnBD,EACEC,IAPA,WAWNC,EAAAA,EAAAA,KAACgD,EAAAA,GAAUQ,OAAM,CACf5C,UAAU,gBAEVP,MAAM,YACNoD,OAAQ/C,EAAE,+BACVgD,cAAc,OACdC,UAAU,EACVC,mBAAqB7D,GACnBD,EACEC,IAPA,aAWJ8D,MAAMC,QAAQrF,EAAYwE,qBAC1BxE,EAAYwE,mBAAmBX,OAAStD,GACxCgB,EAAAA,EAAAA,KAACgD,EAAAA,GAAUe,WAAU,IAErB,YAORpD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BH,SAAA,EACvCT,EAAAA,EAAAA,KAAA,UAASA,EAAAA,EAAAA,KAAA,UACTW,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEmD,UAAW,UAAWvD,SAAA,EAClCT,EAAAA,EAAAA,KAACiE,EAAAA,OAAM,CACLC,KAAK,UACLC,MAAMnE,EAAAA,EAAAA,KAACoE,EAAAA,KAAI,CAACC,KAAK,cAAcC,KAAK,WACpCC,QAAQ,GACRC,aAAa,QACbC,QAASxF,EACTgC,WAAUxC,EAAYwE,mBAAmBX,OAAS,MAClDtC,EAAAA,EAAAA,KAAA,UAASA,EAAAA,EAAAA,KAAA,UAEXA,EAAAA,EAAAA,KAACiE,EAAAA,OAAM,CACLC,KAAK,UACLC,MAAMnE,EAAAA,EAAAA,KAACoE,EAAAA,KAAI,CAACC,KAAK,aAAaC,KAAK,WACnCC,QAAQ,GACRC,aAAa,QACbC,QAAStF,EACT8B,WAAUxC,EAAYiG,oBAAoBpC,OAAS,YAMzD3B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BH,SAAA,EACvCT,EAAAA,EAAAA,KAAA,MAAAS,SAAKC,EAAE,mDACPV,EAAAA,EAAAA,KAAA,OAAKY,UAAU,eAAcH,UAC3BE,EAAAA,EAAAA,MAACqC,EAAAA,GAAS,CACR9B,KAAMzC,EAAYiG,oBAClB/C,QAAQ,EACRuB,cAAc,WACdC,UAAW1E,EAAYkG,4BACvBtB,kBAAmBnE,EACnBoE,KAAMtE,EACNuE,kBAAmB7C,EAAE,iCAAiCD,SAAA,EACtDT,EAAAA,EAAAA,KAACgD,EAAAA,GAAUQ,OAAM,CACf5C,UAAU,gBAEVP,MAAM,gBACNoD,OAAQ/C,EAAE,2CAFN,iBAILmD,MAAMC,QAAQrF,EAAYiG,sBACxBjG,EAAYiG,oBAAoBpC,OAAStD,GAC1CgB,EAAAA,EAAAA,KAACgD,EAAAA,GAAUe,WAAU,IAAQ,YAKrC/D,EAAAA,EAAAA,KAAA,iBASZ,CAhTA5B,EAAmBwG,aAAe,CAChC9F,kBAAkB,EAClBmE,mBAAoB,GACpBG,2BAA4B,GAC5BsB,oBAAqB,GACrBC,4BAA6B,I,+KCxB/B,MAAME,UAAoCC,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KAClDC,MAAQ,CACN3G,YAAa4G,IAAAA,UAAiBC,EAAAA,IAC9B5G,eAAgB,CAAC,EACjBC,iBAAkBgD,EAAAA,GAChB4D,EAAAA,IAEFC,iBAAiB,EACjBC,aAAa,EACbC,0BAA0B,EAC1BC,gBAAiB,CAAC,EAClB/D,kBAAmB,GACnBgE,yBAA0B,GAC1B1D,gBAAiB,CAAC,MAAO,OAAQ,YACjCG,qBAAsB,GACtBwD,uBAAwB,GACxBzC,mBAAoB,GACpBG,2BAA4B,GAC5BsB,oBAAqB,GACrBC,4BAA6B,GAC7B5B,sBAAuB,GACvB1D,yBAA0B,GAC1BC,0BAA2B,GAC3BqG,cAAe,IACf,KAoGFC,0BAA4B,CAACC,EAAW1F,KACtC,IACE,IAAI2F,EAAoB,GACpBzG,EAA2B6F,IAAAA,UAC7Ba,KAAKd,MAAM5F,0BAET2G,EAAwB3G,EAAyB4G,QAClDC,GAAiBA,EAAarG,eAAiBgG,EAAUhG,eAG1DmG,EAAsB1D,OAAS,GAC/BuB,MAAMC,QAAQkC,EAAsB,GAAGjD,yBAEvC+C,EACEE,EAAsB,GAAGjD,sBAAsBkD,QAC5CC,GAAiBA,EAAaC,OAASN,EAAUM,QAGpDL,EAAkBxD,OAAS,IAC7BwD,EAAkB,GAAGM,aAAejG,GAEtC,MAAMb,EAA4B4F,IAAAA,UAChCa,KAAKd,MAAM3F,2BAGbA,EAA0B+G,SAAS3G,IACjCA,EAAoBJ,0BAA0BuG,EAAUM,MACtD3E,EAAAA,GAAgCqE,EAAW1F,EAAM,IAErD4F,KAAKO,SAAS,CAAEhH,4BAA2BD,4BAC7C,CAAE,MAAO8B,GACPoF,QAAQC,IACN,8DACArF,EAEJ,GACA,KA4FFsF,qBAAwBvF,IACtB,IACE,MAAM3C,EAAiB2G,IAAAA,UAAiBa,KAAKd,MAAM1G,gBAC7CC,EAAmB0G,IAAAA,UAAiBa,KAAKd,MAAMzG,kBAWrD,GAVAD,EAAyB,SAAI2C,EAC7B6E,KAAKO,SAAS,CAAE/H,wBAC6BmI,IAAzCtB,EAAAA,GAAmC,WACrC5G,EAA2B,SAAIgD,EAAAA,GAC7B4D,EAAAA,GAAmC,SACnClE,GAEF6E,KAAKO,SAAS,CAAE9H,sBAGkB,IAAhCA,EAA2B,SAC7B,OAGF,IAAImI,EAAU,CACZ,CACEC,IAAKC,EAAAA,GACL1G,MAAOe,GAET,CACE0F,IAAKC,EAAAA,GACL1G,MAAO4F,KAAKe,MAAMC,YAAYC,aAAanH,eAG3CoH,EAAM,CACRC,YAAaL,EAAAA,GACbA,SAAUF,GAGZQ,IACEC,EAAAA,IACA5F,EAAAA,GACEyF,EACAlB,KAAKe,MAAMO,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAStG,KACtB,GAAIuG,EAAOC,UAAW,CACpB,IAAIC,EAASF,EAAOT,aAEpBzI,EAAesD,gBAAkB8F,EAAO9F,gBACxCkE,KAAKO,SAAS,CAAE/H,kBAClB,KAEDqJ,OAAOzG,IACNoF,QAAQC,IACN,qDACArF,EACD,GAEP,CAAE,MAAOA,GACPoF,QAAQC,IACN,oEACArF,EAEJ,GACA,KACF0G,yBAA4B3G,IAC1B,IACE,MAAM3C,EAAiB2G,IAAAA,UAAiBa,KAAKd,MAAM1G,gBAC7CC,EAAmB0G,IAAAA,UAAiBa,KAAKd,MAAMzG,kBAIrD,GAHAD,EAA6B,aAAI2C,EACjC6E,KAAKO,SAAS,CAAE/H,mBAEJ,MAAR2C,EASF,OARA3C,EAAeyD,aAAe,UAC9B+D,KAAKO,SAAS,CACZrD,mBAAoB,GACpB1E,iBACAC,mBACA6G,iBAAiB,EACjBX,oBAAqBQ,IAAAA,UAAiBa,KAAKd,MAAMU,iBAIrD,IAAIgB,EAAU,CACZ,CACEC,IAAKC,EAAAA,GACL1G,MAAOe,IAGP+F,EAAM,CACRC,YAAaL,EAAAA,GACbA,SAAUF,GAGZQ,IACEC,EAAAA,IACA5F,EAAAA,GACEyF,EACAlB,KAAKe,MAAMO,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAStG,MACG,IAArBuG,EAAOC,UACT3B,KAAKO,SAAS,CAAEjB,iBAAiB,IAAS,KACxC,IAAIyC,EAAUL,EAAOT,aAAae,uBAClC,IAAIC,EAA8B,GAClCF,EAAQzB,SAASY,IACf,IAAIgB,EAAU,CACZC,cAAejB,EAAIiB,cACnBC,cAAelB,EAAIkB,cACnBC,OAAQnB,EAAImB,OACZC,UAAWpB,EAAIoB,WAEjBL,EAA4BM,KAAKL,EAAQ,IAG3C,IAAIM,EADgBrD,IAAAA,UAAiBa,KAAKd,MAAMU,eACVM,QACnCuC,IACER,EAA4BS,MAC1BC,GAAQA,EAAIR,gBAAkBM,EAAKN,kBAG1CnC,KAAKO,SAAS,CACZrD,mBAAoB+E,EACpBtC,uBAAwBsC,EACxBtD,oBAAqB6D,EACrBlD,iBAAiB,GACjB,KAGJU,KAAKO,SACH,CACEhI,YAAa4G,IAAAA,UAAiBC,EAAAA,IAC9B5G,eAAgB2G,IAAAA,UAAiBC,EAAAA,IACjCE,iBAAiB,IAEnB,SAEFkB,QAAQC,IAAI,2BAA4BiB,EAAOkB,WACjD,IAEDf,OAAOzG,IACNoF,QAAQC,IAAI,mCAAoCrF,EAAOD,EAAK,GAElE,CAAE,MAAOC,GACPoF,QAAQC,IACN,wEACArF,EAEJ,GACA,KACFyH,aAAe,CAACC,EAAc3H,KAC5B,IACE,MAAM3C,EAAiB2G,IAAAA,UAAiBa,KAAKd,MAAM1G,gBAC7CC,EAAmB0G,IAAAA,UAAiBa,KAAKd,MAAMzG,kBACrDD,EAAesK,GAAgB3H,EAC/B6E,KAAKO,SAAS,CAAE/H,wBAC+BmI,IAA3CtB,EAAAA,GAAyByD,KAC3BrK,EAAiBqK,GAAgBrH,EAAAA,GAC/B4D,EAAAA,GAAyByD,GACzB3H,GAEF6E,KAAKO,SAAS,CAAE9H,qBAEpB,CAAE,MAAO2C,GACPoF,QAAQC,IACN,4DACArF,EAEJ,GACA,KA0NF2H,iCAAoCC,IAClChD,KAAKO,SAAS,CAAElD,2BAA4B2F,GAAI,EAChD,KAEFC,kCAAqCD,IACnChD,KAAKO,SAAS,CAAE3B,4BAA6BoE,GAAI,EACjD,KAEFE,0BAA4B,KAC1B,IACElD,KAAKO,SAAS,CAAEjB,iBAAiB,IAAS,KACxC,MAAMjC,EAA6B8B,IAAAA,UACjCa,KAAKd,MAAM7B,4BAEb,IAAIH,EAAqBiC,IAAAA,UACvBa,KAAKd,MAAMhC,oBAETyB,EAAsBQ,IAAAA,UACxBa,KAAKd,MAAMP,qBAEbtB,EAA2BiD,SAASY,IAClCvC,EAAoB4D,KAAKrB,GACzBhE,EAAqBA,EAAmBgD,QAAQiD,GACvCA,EAAIhB,gBAAkBjB,EAAIiB,eACjC,IAEJnC,KAAKO,SAAS,CACZ5B,sBACAtB,2BAA4B,GAC5BH,qBACAoC,iBAAiB,GACjB,GAEN,CAAE,MAAOlE,GACPoF,QAAQC,IACN,2EACArF,EAEJ,GACA,KAEFgI,6BAA+B,KAC7B,IACEpD,KAAKO,SAAS,CAAEjB,iBAAiB,IAAS,KACxC,MAAMV,EAA8BO,IAAAA,UAClCa,KAAKd,MAAMN,6BAEb,IAAI1B,EAAqBiC,IAAAA,UACvBa,KAAKd,MAAMhC,oBAETyB,EAAsBQ,IAAAA,UACxBa,KAAKd,MAAMP,qBAEbC,EAA4B0B,SAASY,IACnChE,EAAmBqF,KAAKrB,GACxBvC,EAAsBA,EAAoBuB,QAAQiD,GACzCA,EAAIhB,gBAAkBjB,EAAIiB,eACjC,IAEJnC,KAAKO,SAAS,CACZ5B,sBACAC,4BAA6B,GAC7B1B,qBACAoC,iBAAiB,GACjB,GAEN,CAAE,MAAOlE,GACPoF,QAAQC,IACN,8EACArF,EAEJ,GACA,KA4DFiI,0BAA4B,KAC1BrD,KAAKO,SAAS,CACZf,0BAA0B,GAC1B,EACF,KAEF8D,gBAAkB,KAChB,IACEtD,KAAKO,SAAS,CAAEhB,aAAa,IAC7B,IAAIE,EAAkBN,IAAAA,UAAiBa,KAAKd,MAAMO,iBAC9C8D,EAAgBpE,IAAAA,UAAiBa,KAAKd,MAAMhC,oBAEhDuC,EAAgBuC,uBAAyB,GACzCuB,EAAcjD,SAASY,IACrB,IAAIsC,EAAiB,CACnBrB,cAAejB,EAAIiB,cACnBC,cAAelB,EAAIkB,cACnBC,OAAQnB,EAAImB,OACZC,UAAWpB,EAAIoB,WAEjB7C,EAAgBuC,uBAAuBO,KAAKiB,EAAe,IAG7D/D,EAAgBW,KAAOX,EAAgB1E,gBACvC,IAAI0I,EAAgBhI,EAAAA,GAClBuE,KAAKd,MAAM5F,0BAEbmK,EAAgBhI,EAAAA,GAAuCgI,GACvDhE,EAAgBiE,WACdjI,EAAAA,GAA+BgI,GAEU,KAA3CzD,KAAKd,MAAM3G,YAAYwC,gBACnBiF,KAAK2D,kBAAkBlE,GACvBO,KAAK4D,kBAAkBnE,EAC7B,CAAE,MAAOrE,GACPoF,QAAQC,IAAI,yDACd,GACA,KACFoD,WAAa,KACX,IACE,IAAIrL,EAAiB2G,IAAAA,UAAiBa,KAAKd,MAAM1G,gBAC7CiL,EAAgBhI,EAAAA,GAClBuE,KAAKd,MAAM5F,0BAEb,GAAI0G,KAAK8D,aAAaL,GAAgB,CACpC,IAAIjE,GACsD,IAAxDQ,KAAKe,MAAMC,YAAYC,aAAa8C,gBAGlCtE,EAAkBN,IAAAA,UAAiB3G,GACvCwH,KAAKO,SAAS,CAAEf,2BAA0BC,oBAAmB,MAC1B,IAA7BD,GACFQ,KAAKsD,iBACP,GAEJ,MACEtD,KAAKO,SAAS,CAAEhB,aAAa,GAEjC,CAAE,MAAOnE,GACPoF,QAAQC,IACN,0DACArF,EAEJ,GACA,KAiLF4I,YAAc,KACZ,IACE,MAAMvL,EAAmB,IAAKuH,KAAKd,MAAMzG,kBACnCF,EAAc4G,IAAAA,UAAiBa,KAAKd,MAAM3G,aAC1C0L,EAAwB9E,IAAAA,UAC5Ba,KAAKd,MAAMU,eAKb,GAHAsE,OAAOC,KAAK1L,GAAkB6H,SAAQ,SAAUO,GAC9CpI,EAAiBoI,GAAO,EAC1B,IAC+C,KAA3Cb,KAAKd,MAAM3G,YAAYwC,gBACzBiF,KAAKO,SACH,CACErD,mBAAoB,GACpByB,oBAAqBsF,EACrB5G,2BAA4B,GAC5BuB,4BAA6B,GAC7BpG,eAAgB,IAAKD,GACrBE,mBACAa,yBAA0B,GAC1BgG,iBAAiB,IAEnB,KACMU,KAAKe,MAAMC,YAAYC,aAAamD,kBAGtCpE,KAAKqE,qBAFLrE,KAAKsE,sCAKPtE,KAAKO,SAAS,CAAEjB,iBAAiB,GAAO,QAGvC,CACL,MAAMiF,EAAyBpF,IAAAA,UAC7Ba,KAAKd,MAAMS,wBAEb,IAAI6C,EAAoByB,EAAsB/D,QAC3CuC,IACE8B,EAAuB7B,MACrBC,GAAQA,EAAIR,gBAAkBM,EAAKN,kBAG1CnC,KAAKO,SACH,CACElD,2BAA4B,GAC5BuB,4BAA6B,GAC7BpG,eAAgB,IAAKD,GACrBE,mBACAa,yBAA0B,GAC1B4D,mBAAoBqH,EACpB5F,oBAAqB6D,EACrBlD,iBAAiB,IAEnB,KACMU,KAAKe,MAAMC,YAAYC,aAAamD,kBAGtCpE,KAAKqE,qBAFLrE,KAAKsE,sCAKPtE,KAAKO,SAAS,CAAEjB,iBAAiB,GAAO,GAG9C,CACF,CAAE,MAAOlE,GACPoF,QAAQC,IACN,2DACArF,EAEJ,GACA,KAEF/B,mBAAqB,CAACmL,EAAQxK,KAC5B,IACE,IAAIyK,EAAyBtF,IAAAA,UAC3Ba,KAAKd,MAAMhC,oBAESuH,EAAuB7K,MAC1C+I,GAAQA,EAAIR,gBAAkBnI,EAASK,QAAQ8H,gBAElCnI,EAASM,OAASkK,EAClCxE,KAAKO,SAAS,CAAErD,mBAAoBuH,GACtC,CAAE,MAAOrJ,GACPoF,QAAQC,IAAI,uCAAwCrF,EACtD,GACA,KAEFsJ,yBAA4BtK,IAC1B,IACE,IAAI5B,EAAiB2G,IAAAA,UAAiBa,KAAKd,MAAM1G,gBACjDA,EAAe4D,SAAWhC,EACtB5B,EAAe4D,WAAa4D,KAAKd,MAAM3G,YAAY6D,WACrD5D,EAAe8D,QAAU,IAC3B0D,KAAKO,SAAS,CAAE/H,kBAClB,CAAE,MAAO4C,GACPoF,QAAQC,IAAIrF,EACd,EACA,CA1jCFiJ,kBAAAA,GACE,IACE,IAAIrH,EAAwBmC,IAAAA,UAC1Ba,KAAKd,MAAMlC,uBAGXc,MAAMC,QAAQf,EAAsB2H,cACpC3H,EAAsB2H,YAAYpI,OAAS,GAE3CyD,KAAK4E,wBAAwB,CAC3B5H,EAAsB2H,YAAY,GAAG7K,cAG3C,CAAE,MAAOsB,GACPoF,QAAQC,IACN,kEACArF,EAEJ,CACF,CAEAwJ,uBAAAA,CAAwBC,GACtB,IACE,IAAIC,EAA0B,GAC9B,IAAI9H,EAAwB,GACxB1D,EAA2B,GAC/B0D,EAAwBmC,IAAAA,UACtBa,KAAKd,MAAMlC,uBAEb1D,EAA2B6F,IAAAA,UACzBa,KAAKd,MAAM5F,0BAEb,MAAMC,EAA4B4F,IAAAA,UAChCa,KAAKd,MAAM3F,2BAEb,IAAIf,EAAiB2G,IAAAA,UAAiBa,KAAKd,MAAM1G,gBAEjDqM,EAAkBvE,SAAS5G,IACzB,IAAIqL,EAAYzL,EAAyBM,MAAMC,GACtCA,EAAkBC,eAAiBJ,SAG1BiH,IAAdoE,EACF/H,EAAsB2H,YAAYrE,SAAQ,SACxC0E,GAEA,GAAIA,EAAkBlL,eAAiBJ,EAAU,CAC/C,IAAIuL,EAAiBzM,EAAekL,WAAW9J,MAC5CsL,GACQA,EAAqBpL,eAAiBJ,SAG1BiH,IAAnBsE,GACFD,EAAkBhI,sBAAsBsD,SAAQ,SAC9C0E,GAEA,IAAIG,EAAiBF,EAAeG,oBAAoBxL,MACrDyL,GACQA,EAAEC,gBAAkBN,EAAkB5E,YAG1BO,IAAnBwE,IACFH,EAAkB3E,aAChB8E,EAAeI,eACrB,IAEFT,EAAwBvC,KAAKyC,EAC/B,CACF,IAEAF,EAAwBvC,KAAKwC,EAC/B,IAEFzL,EAA2B,GAC3BA,EAA2BwL,EAC3BxL,EAA2BmC,EAAAA,GACzBnC,GAEFC,EAA0B+G,SAAS3G,SAIXgH,IAHFkE,EAAkBjL,MAAMiL,GACnClL,EAAoBG,eAAiB+K,KAG5CX,OAAOC,KAAKxK,EAAoBJ,2BAA2B+G,SACxDO,GAASlH,EAAoBJ,0BAA0BsH,GAAO,IAEnE,IAGFb,KAAKO,SAAS,CAAEjH,2BAA0BC,6BAC5C,CAAE,MAAO6B,GACPoF,QAAQC,IACN,uEACArF,EAEJ,CACF,CAwCAkJ,mCAAAA,GACE,IACE,IAAItH,EAAwBmC,IAAAA,UAC1Ba,KAAKd,MAAMlC,uBAEbgD,KAAKO,SAAS,CACZhH,0BACEkC,EAAAA,GACEuB,EAAsBzE,cAG9B,CAAE,MAAO6C,GACPoF,QAAQC,IACN,8DACArF,EAEJ,CACF,CAEAoK,uBAAAA,GACE,IACEpE,IACEC,EAAAA,IACA5F,EAAAA,GACEuE,KAAKe,MAAMO,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAStG,KACtB,IAAyB,IAArBuG,EAAOC,UAAoB,CAC7B,IAAI8D,EAAO/D,EAAOT,aACdyE,EAAkBvG,IAAAA,UACpBa,KAAKd,MAAMP,qBAETgH,EAAoB,GACxBF,EAAKnF,SAASmC,IACZkD,EAAkBpD,KAAKE,EAAKrC,KAAK,IAEnCJ,KAAKO,SAAS,CACZpE,qBAAsBwJ,EACtBhH,oBAAqB+G,GAEzB,MACElF,QAAQC,IAAI,oCAAqCiB,EAAOkB,UAC1D,IAEDf,OAAOzG,IACNoF,QAAQC,IAAI,kDAAmDrF,EAAM,GAE3E,CAAE,MAAOA,GACPoF,QAAQC,IAAI,kDAAmDrF,EACjE,CACF,CAEAwK,oBAAAA,GACE,IACExE,IACEC,EAAAA,IAAoB,oBACpB5F,EAAAA,GACEuE,KAAKe,MAAMO,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAStG,KACtB,IAAyB,IAArBuG,EAAOC,WACT,GAC0B,OAAxBD,EAAOT,cACPnD,MAAMC,QAAQ2D,EAAOT,cACrB,CACA,IAAIwE,EAAO/D,EAAOT,aACd4E,EAAgB,GACpBJ,EAAKnF,SAASmC,IACZoD,EAActD,KAAKE,EAAK,IAE1BzC,KAAKO,SAAS,CACZ7E,kBAAmBmK,GAEvB,OAEArF,QAAQC,IAAI,wBAAyBiB,EAAOkB,UAC9C,IAEDf,OAAOzG,IACNoF,QAAQC,IAAI,wBAAyBrF,EAAM,GAEjD,CAAE,MAAOA,GACPoF,QAAQC,IAAI,wBAAyBrF,EACvC,CACF,CA4KA0K,yBAAAA,CAA0BC,GACxB,IAEoC,KAAhC/F,KAAKd,MAAM3G,YAAYyN,WACerF,IAAtCoF,EAAUE,YAAYC,aACtBlG,KAAKe,MAAMO,aAAaC,YAAcwE,EAAUzE,aAAaC,WAE7DvB,KAAKmG,eAAeJ,EAAUE,YAElC,CAAE,MAAO7K,GACPoF,QAAQC,IACN,yEACArF,EAEJ,CACF,CAEAgL,iBAAAA,GACE,IACE3K,EAAAA,GAAqBuE,KAAKe,MAAMC,YAAYC,aAAaoF,YACzDrG,KAAKsG,mBACLtG,KAAK4F,uBACL5F,KAAKwF,0BACLxF,KAAKuG,cAAcvG,KAAKe,MAAMkF,YAChC,CAAE,MAAO7K,GACPoF,QAAQC,IACN,iEACArF,EAEJ,CACF,CAEAkL,gBAAAA,GACE,IACE,IACIpF,EAAM,CACRC,YAAaL,EAAAA,GACbA,SAHY,IAMdM,IACEC,EAAAA,IACA5F,EAAAA,GACEyF,EACAlB,KAAKe,MAAMO,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAStG,KACtB,IAAyB,IAArBuG,EAAOC,UAAoB,CAC7B,IAAII,EAAUL,EAAOT,aACrB,IAAIuF,EAAa,GACjBzE,EAAQzB,SAASY,IACf,IAAIgB,EAAU,CACZC,cAAejB,EAAIiB,cACnBC,cAAelB,EAAIkB,cACnBC,OAAQnB,EAAImB,OACZC,UAAWpB,EAAIoB,WAEjBkE,EAAWjE,KAAKL,EAAQ,IAE1BlC,KAAKO,SAAS,CAAEX,cAAe4G,GACjC,MACExG,KAAKO,SAAS,CACZX,cAAe,KAEjBY,QAAQC,IAAI,6BAA8BiB,EAAOkB,UACnD,IAEDf,OAAOzG,IACNoF,QAAQC,IAAI,gCAAiCrF,EAAM,GAEzD,CAAE,MAAOA,GACPoF,QAAQC,IAAI,gCAAiCrF,EAC/C,CACF,CAEAmL,aAAAA,CAAcE,GACZ,IACErF,IACEC,EAAAA,IACA5F,EAAAA,GACE,CAACiL,EAAAA,IACD1G,KAAKe,MAAMO,aAAaC,YAE1BC,MAAMC,IACN,IAAIC,EAASD,EAAStG,KACtB,IAAyB,IAArBuG,EAAOC,UAAoB,CAC7B,IAAI+D,EAAkBvG,IAAAA,UACpBa,KAAKd,MAAMP,qBAEbqB,KAAKO,SACH,CACEvD,sBAAuBmC,IAAAA,UAAiBuC,EAAOT,cAC/C1H,0BACEkC,EAAAA,GACEiG,EAAOT,aAAa0D,aAExBhG,oBAAqB+G,IAEvB,IAAM1F,KAAKmG,eAAeM,IAE9B,MACEjG,QAAQC,IAAI,0BACd,GAEJ,CAAE,MAAOrF,GACPoF,QAAQC,IAAI,6BAA8BrF,EAC5C,CACF,CAEA+K,cAAAA,CAAeF,GACb,IACE,QAAoCtF,IAAhCsF,EAAYlL,gBAsBd,YArBAiF,KAAKO,SAAS,CAAEjB,iBAAiB,IAAS,KACxCU,KAAKO,SACH,CACEhI,YAAa4G,IAAAA,UAAiBC,EAAAA,IAC9B5G,eAAgB2G,IAAAA,UAAiBC,EAAAA,IACjCE,iBAAiB,EACjBC,YAAa9D,EAAAA,GACXuE,KAAKe,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAeC,IACfC,EAAAA,IAEF5J,mBAAoB,GACpB5D,yBAA0B,GAC1BqF,oBAAqBQ,IAAAA,UAAiBa,KAAKd,MAAMU,iBAEnD,KACEI,KAAKqE,oBAAoB,GAE5B,IAKL,IAAIzD,EAAU,CACZ,CACEC,IAAKC,EAAAA,GACL1G,MAAO6L,EAAYlL,kBAGnBmG,EAAM,CACRC,YAAaL,EAAAA,GACbA,SAAUF,GAGZQ,IACEC,EAAAA,IACA5F,EAAAA,GACEyF,EACAlB,KAAKe,MAAMO,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAStG,KACtB,IAAyB,IAArBuG,EAAOC,UAAoB,CAC7B,IAAII,EAAUL,EAAOT,aAAae,uBAElC,IAAIC,EAA8B,GAClCF,EAAQzB,SAASY,IACf,IAAIgB,EAAU,CACZC,cAAejB,EAAIiB,cACnBC,cAAelB,EAAIkB,cACnBC,OAAQnB,EAAImB,OACZC,UAAWpB,EAAIoB,WAEjBL,EAA4BM,KAAKL,EAAQ,IAE3CR,EAAOT,aAAalG,gBAAkB2G,EAAOT,aAAab,KAE1D,IAAIoC,EADgBrD,IAAAA,UAAiBa,KAAKd,MAAMU,eACVM,QACnCuC,IACER,EAA4BS,MAC1BC,GAAQA,EAAIR,gBAAkBM,EAAKN,kBAG1CnC,KAAKO,SACH,CACEjB,iBAAiB,EACjB/G,YAAa4G,IAAAA,UAAiBuC,EAAOT,cACrCzI,eAAgB2G,IAAAA,UAAiBuC,EAAOT,cACxC/D,mBAAoB+E,EACpBtC,uBAAwBsC,EACxBtD,oBAAqB6D,EACrBjD,YAAa9D,EAAAA,GACXuE,KAAKe,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAeG,OACfD,EAAAA,MAGJ,KACE9G,KAAKqE,oBAAoB,GAG/B,MACErE,KAAKO,SACH,CACEhI,YAAa4G,IAAAA,UAAiBC,EAAAA,IAC9B5G,eAAgB2G,IAAAA,UAAiBC,EAAAA,IACjCE,iBAAiB,IAEnB,SAEFkB,QAAQC,IAAI,2BAA4BiB,EAAOkB,UACjD,IAEDf,OAAOzG,IACNoF,QAAQC,IAAI,mCAAoCrF,EAAO6K,EAAY,GAEzE,CAAE,MAAO7K,GACPoF,QAAQC,IAAI,mCAAoCrF,EAAO6K,EACzD,CACF,CA4EAnC,YAAAA,CAAaL,GACX,IACE,MAAM,eAAEjL,GAAmBwH,KAAKd,MAChC,IAAIzG,EAAmB0G,IAAAA,UAAiBa,KAAKd,MAAMzG,kBACnDyL,OAAOC,KAAK9E,EAAAA,IAA0BiB,SAAQ,SAAUO,GACtDpI,EAAiBoI,GAAOpF,EAAAA,GACtB4D,EAAAA,GAAyBwB,GACzBrI,EAAeqI,GAEnB,IAEIrI,EAAe4D,WAAa4D,KAAKd,MAAM3G,YAAY6D,WACtB,OAA3B5D,EAAe8D,SAA+C,KAA3B9D,EAAe8D,UACpD7D,EAA0B,QAAI,wBAIlCuH,KAAKO,SAAS,CAAE9H,qBAEhB,IAAIc,EAA4B4F,IAAAA,UAC9Ba,KAAKd,MAAM3F,2BAEbkK,EAAcnD,SAASR,IACrBvG,EAA0B+G,SAAS3G,IACjCmG,EAAU9C,sBAAsBsD,SAAS0E,IACvCrL,EAAoBJ,0BAClByL,EAAkB5E,MAChB3E,EAAAA,GACFuJ,EACAA,EAAkB3E,aACnB,GACD,GACF,IAEJL,KAAKO,SAAS,CAAE9H,mBAAkBc,8BAClC,IAAIyN,GAAc,EAkBlB,OAjBAzN,EAA0B+G,SAAS+E,IACjC,IAAI2B,EAOF,OAAOA,EANPA,EAAc9C,OAAO+C,OAAO5B,EAAE9L,2BAA2B2N,OACvD,SAAU9M,GACR,MAAiB,KAAVA,CACT,GAIJ,IAGE4M,IACFA,EAAc9C,OAAO+C,OAAOxO,GAAkByO,OAAM,SAAU9M,GAC5D,MAAiB,KAAVA,CACT,KAEK4M,CACT,CAAE,MAAO5L,GACPoF,QAAQC,IAAI,sDACd,CACF,CAmEAkD,iBAAAA,CAAkBnL,GAChB,IACE,IAAIoI,EAAU,CACZ,CACEC,IAAKC,EAAAA,GACL1G,MAAO5B,EAAeuC,kBAGtBmG,EAAM,CACRC,YAAaL,EAAAA,GACbA,SAAUF,EACVuG,OAAQ3O,GAEN4O,EAAe,CACjBC,YAAa,WACbC,QAAS,iCACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,mBACZC,UAAW,CAACjP,EAAeuC,iBAC3B2M,WAAW,EACXC,aAAc,MAIpBvG,IACEC,EAAAA,IACA5F,EAAAA,GACEyF,EACAlB,KAAKe,MAAMO,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAStG,KACtBiM,EAAaC,YAAc3F,EAAOC,UAAY,UAAY,WAC1DyF,EAAaG,qBAAqB,GAAGG,UAAYhG,EAAOC,WAC/B,IAArBD,EAAOC,UACT3B,KAAKO,SACH,CACEhB,YAAa9D,EAAAA,GACXuE,KAAKe,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAeG,OACfD,EAAAA,IAEFtH,0BAA0B,IAE5B,IACEQ,KAAKmG,eAAe,CAClBpL,gBAAiBvC,EAAeuC,qBAItCqM,EAAaG,qBAAqB,GAAGI,aACnCjG,EAAOkB,UAAU,GACnB5C,KAAKO,SAAS,CACZhB,YAAa9D,EAAAA,GACXuE,KAAKe,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAeC,IACfC,EAAAA,IAEFtH,0BAA0B,IAE5BgB,QAAQC,IAAI,8BAA+BiB,EAAOkB,YAEpD5C,KAAKe,MAAM6G,QAAQpP,EAAgB,MAAO4O,EAAa,IAExDvF,OAAOzG,IACN4E,KAAKO,SAAS,CACZhB,YAAa9D,EAAAA,GACXuE,KAAKe,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAeC,IACfC,EAAAA,IAEFtH,0BAA0B,IAE5B4H,EAAaG,qBAAqB,GAAGI,aAAevM,EACpD4E,KAAKe,MAAM6G,QAAQpP,EAAgB,MAAO4O,EAAa,GAE7D,CAAE,MAAOhM,GACPoF,QAAQC,IAAI,6BACd,CACF,CAEAmD,iBAAAA,CAAkBpL,GAChB,IACE,IAAIoI,EAAU,CACZ,CACEC,IAAKC,EAAAA,GACL1G,MAAO5B,EAAeuC,kBAIM,MAA5BvC,EAAeqP,YACjBrP,EAAeqP,UAAY,IAEO,MAAhCrP,EAAesP,gBACjBtP,EAAesP,cAAgB,IAEjC,IAAI5G,EAAM,CACRC,YAAaL,EAAAA,GACbA,SAAUF,EACVuG,OAAQ3O,GAGN4O,EAAe,CACjBC,YAAa,WACbC,QAAS,iCACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,mBACZC,UAAW,CAACjP,EAAeuC,iBAC3B2M,WAAW,EACXC,aAAc,MAKpBvG,IACEC,EAAAA,IACA5F,EAAAA,GACEyF,EACAlB,KAAKe,MAAMO,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAStG,KACtBiM,EAAaC,YAAc3F,EAAOC,UAAY,UAAY,WAC1DyF,EAAaG,qBAAqB,GAAGG,UAAYhG,EAAOC,WAC/B,IAArBD,EAAOC,UACT3B,KAAKO,SACH,CACEhB,YAAa9D,EAAAA,GACXuE,KAAKe,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAeG,OACfD,EAAAA,IAEFtH,0BAA0B,IAE5B,IACEQ,KAAKmG,eAAe,CAClBpL,gBAAiBvC,EAAeuC,qBAItCqM,EAAaG,qBAAqB,GAAGI,aACnCjG,EAAOkB,UAAU,GACnB5C,KAAKO,SAAS,CACZhB,YAAa9D,EAAAA,GACXuE,KAAKe,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAeG,OACfD,EAAAA,IAEFtH,0BAA0B,IAE5BgB,QAAQC,IAAI,8BAA+BiB,EAAOkB,YAEpD5C,KAAKe,MAAM6G,QAAQpP,EAAgB,SAAU4O,EAAa,IAE3DvF,OAAOzG,IACNgM,EAAaG,qBAAqB,GAAGI,aAAevM,EACpD4E,KAAKe,MAAM6G,QAAQpP,EAAgB,SAAU4O,GAC7CpH,KAAKO,SAAS,CACZhB,YAAa9D,EAAAA,GACXuE,KAAKe,MAAMC,YAAYC,aAAa0F,cACpCC,EAAAA,EAAeG,OACfD,EAAAA,IAEFtH,0BAA0B,GAC1B,GAER,CAAE,MAAOpE,GACPoF,QAAQC,IAAI,8BACd,CACF,CAoGAsH,MAAAA,GACE,MAAMrP,EAAc,CAClBgD,kBAAmBsE,KAAKd,MAAMxD,kBAC9BgE,yBAA0BM,KAAKd,MAAMQ,yBACrC1D,gBAAiBgE,KAAKd,MAAMlD,gBAC5BG,qBAAsB6D,KAAKd,MAAM/C,qBACjCe,mBAAoB8C,KAAKd,MAAMhC,mBAC/BG,2BAA4B2C,KAAKd,MAAM7B,2BACvCsB,oBAAqBqB,KAAKd,MAAMP,oBAChCC,4BAA6BoB,KAAKd,MAAMN,6BAEpCoJ,EAAgB,CACpB,CACEC,UAAW,uBACXC,WACE,IAAIC,KACFnI,KAAKd,MAAM1G,eAAe4P,iBAC1BC,qBACF,IACA,IAAIF,KACFnI,KAAKd,MAAM1G,eAAe4P,iBAC1BE,sBAEN,CACEL,UAAW,4BACXC,WAAYlI,KAAKd,MAAM1G,eAAesP,gBAG1C,OAAO9H,KAAKd,MAAMI,iBAChB1E,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACET,EAAAA,EAAAA,KAACyC,EAAAA,EAAa,CAAAhC,UACZT,EAAAA,EAAAA,KAACsO,EAAAA,EAAe,CACdC,WAAYxI,KAAKd,MAAM3G,YAAYwC,gBACnC0N,cAAc,oBACdT,cAAeA,OAInB/N,EAAAA,EAAAA,KAACyC,EAAAA,EAAa,CAAAhC,UACZT,EAAAA,EAAAA,KAAC5B,EAAkB,CACjBE,YAAayH,KAAKd,MAAM3G,YACxBC,eAAgBwH,KAAKd,MAAM1G,eAC3BC,iBAAkBuH,KAAKd,MAAMzG,iBAC7BC,YAAaA,EACbC,cAAeqH,KAAK6C,aACpBjK,iBAAkBoH,KAAKU,qBACvB7H,qBAAsBmH,KAAK8B,yBAC3BhJ,qBAAsBkH,KAAK0E,yBAC3B3L,iBACEiH,KAAKe,MAAMC,YAAYC,aAAamD,iBAEtCpL,6BAA8BgH,KAAK+C,iCACnC9J,SACE+G,KAAKe,MAAMC,YAAYC,aAAayH,cACjCC,sBAELzP,sBAAuB8G,KAAKkD,0BAC5B/J,8BACE6G,KAAKiD,kCAEP7J,yBAA0B4G,KAAKoD,6BAC/B/J,mBAAoB2G,KAAK3G,mBACzBE,0BAA2ByG,KAAKd,MAAM3F,0BACtCD,yBAA0B0G,KAAKd,MAAM5F,yBACrC0D,sBAAuBgD,KAAKd,MAAMlC,sBAClCxD,sBAAuBwG,KAAKH,0BAC5BlB,oBAAqBqB,KAAKd,MAAMP,yBAGpC1E,EAAAA,EAAAA,KAACyC,EAAAA,EAAa,CAAAhC,UACZT,EAAAA,EAAAA,KAAC2O,EAAAA,EAAoB,CACnBC,WAAY7I,KAAKe,MAAM+H,OACvBjF,WAAY7D,KAAK6D,WACjBG,YAAahE,KAAKgE,YAClBzE,YAAaS,KAAKd,MAAMK,gBAG3BS,KAAKd,MAAMM,0BACVvF,EAAAA,EAAAA,KAAC8O,EAAAA,EAAwB,CACvBC,SAAUhJ,KAAKe,MAAMC,YAAYC,aAAagI,SAC9CC,aAC6C,KAA3ClJ,KAAKd,MAAM3G,YAAYwC,gBACnB6L,EAAAA,EAAeC,IACfD,EAAAA,EAAeG,OAErBoC,cAAerC,EAAAA,GACfsC,gBAAiBpJ,KAAKsD,gBACtB+F,YAAarJ,KAAKqD,4BAElB,SAGNpJ,EAAAA,EAAAA,KAACqP,EAAAA,EAAW,CAAChC,QAAQ,WAEzB,EAEF,MAOA,GAAeiC,EAAAA,EAAAA,KAPUrK,IAChB,CACL8B,YAAa9B,EAAMsK,eAAexI,YAClCM,aAAcpC,EAAMsK,eAAeC,aAIvC,CAAwC3K,E,iFC3rCjC,SAASyJ,EAAejQ,GAAgD,IAA/C,WAAEkQ,EAAU,cAAEC,EAAa,cAAET,GAAe1P,EAC1E,OACE2B,EAAAA,EAAAA,KAACQ,EAAAA,oBAAmB,CAAAC,SAChBC,IACAV,EAAAA,EAAAA,KAAA,OAAKY,UAAU,kBAAiBH,UAC9BE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBH,SAAA,EAChCT,EAAAA,EAAAA,KAAA,OAAKY,UAAU,4BAA2BH,UACxCT,EAAAA,EAAAA,KAAA,QAAMa,MAAO,CAAE4O,OAAQ,QAAU7O,UAAU,cAAaH,SACtC,KAAf8N,QAAoC7H,IAAf6H,EAClB7N,EAAE8N,GACFD,MAGQ,KAAfA,QACc7H,IAAf6H,GACAR,EAAczL,OAAS,GACrBtC,EAAAA,EAAAA,KAAA,OAAKY,UAAU,kBAAiBH,UAC9BT,EAAAA,EAAAA,KAAC0P,EAAAA,MAAK,CACJC,SACEhP,EAAAA,EAAAA,MAAA,OAAAF,SAAA,CACGC,EAAEqN,EAAc,GAAGC,WAAa,IAAI,IACpC,IAAMD,EAAc,GAAGE,YACxBjO,EAAAA,EAAAA,KAACoE,EAAAA,KAAI,CACHvD,MAAO,CAAE+O,WAAY,QACrBtL,KAAK,SACLD,KAAK,aACLwL,KAAK,aAIXC,SAAS,cACTrP,UAEAT,EAAAA,EAAAA,KAAC+P,EAAAA,KAAI,CAACnP,UAAU,qBAAoBH,SACjCsN,EAAcxL,KAAKgC,IAClB5D,EAAAA,EAAAA,MAACoP,EAAAA,KAAKpN,QAAO,CAEX/B,UAAU,gCAA+BH,SAAA,CAExCC,EAAE6D,EAAQyJ,WAAa,IAAI,IAAE,IAAMzJ,EAAQ0J,aAHxC,6BAUd,SAOd,CA3DAK,EAAgB1J,aAAe,CAC7B2J,WAAY,GACZC,cAAe,GACfT,cAAe,IA0DjB,S,gFCjEO,SAASY,EAAoBtQ,GAKhC,IALiC,WACnCuQ,EAAU,WACVhF,EAAU,YACVG,EAAW,YACXzE,GACDjH,EACC,OACE2B,EAAAA,EAAAA,KAACQ,EAAAA,oBAAmB,CAAAC,SAChBC,IACAC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBH,SAAA,EACrCT,EAAAA,EAAAA,KAAA,OAAKY,UAAU,2BAA0BH,UACvCT,EAAAA,EAAAA,KAACiE,EAAAA,OAAM,CACLrD,UAAU,aACV6D,QAASmK,EACTrK,QAAS7D,EAAE,aAGfV,EAAAA,EAAAA,KAAA,OAAKY,UAAU,2BAA0BH,UACvCE,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEmP,MAAO,SAAUvP,SAAA,EAC7BT,EAAAA,EAAAA,KAACiE,EAAAA,OAAM,CACLM,QAAS7D,EAAE,uBACXE,UAAU,eACV6D,QAASsF,KAEX/J,EAAAA,EAAAA,KAACiE,EAAAA,OAAM,CACLM,QAAS7D,EAAE,QACXO,UAAWqE,EACXb,QAASmF,aAWzB,CAvCA+E,EAAqB/J,aAAe,CAAEU,aAAa,E,sGCH5C,SAASzC,EAAgBxE,GAI5B,IAJ6B,sBAC7ByE,EAAqB,mBACrB1D,EAAkB,0BAClBE,GACHjB,EACG,MAAM4R,EAA4BpK,IAC9B,GAA+B,eAA3BA,EAAUO,aAEV,OADA8J,EAA6BrK,EAAU,IAAIqI,MACpC,IAAIA,KAEX,IAAIiC,EAAQtK,EAAUO,aAAagK,MAAM,KACzC,OAAO,IAAIlC,KAAKiC,EAAM,GAAGA,EAAM,GAAG,EAAEA,EAAM,GAC9C,EAEED,EAA+BA,CAACrK,EAAW1F,KAC7C,IAAIkQ,EAAU,IAAInC,KAAK/N,GACvBA,EAAQkQ,EAAQC,cAAgB,KAAO,KAAOD,EAAQE,WAAa,IAAIC,OAAO,GAAK,KAAO,IAAMH,EAAQI,WAAWD,OAAO,GAC1HpR,EAAmByG,EAAU1F,EAAM,EAEvC,OACIH,EAAAA,EAAAA,KAACQ,EAAAA,oBAAmB,CAAAC,SACdC,IACEV,EAAAA,EAAAA,KAAA,OAAKY,UAAU,MAAKH,UAChBT,EAAAA,EAAAA,KAAA,OAAKY,UAAU,kCAAiCH,UAC5CT,EAAAA,EAAAA,KAAA,OAAKY,UAAU,MAAKH,SAEZqC,EAAsBP,KAAKsD,GACvBA,EAAU6K,SAASC,gBAAkBC,EAAAA,GAAmBC,OAAOF,gBAAyC,IAAxB9K,EAAUiL,WACtF9Q,EAAAA,EAAAA,KAAA,OAAKY,UAAU,2BAA0BH,UACrCT,EAAAA,EAAAA,KAACC,EAAAA,MAAK,CACFC,OAAK,EACLa,MAAOL,EAAEmF,EAAUkL,aACnB5Q,MAAkC,OAA3B0F,EAAUO,aAAwB,GAAKP,EAAUO,aACxDpF,WAAqC,IAA1B6E,EAAUmL,YAAuB,WAAa,KACzD/P,UAAmC,IAAzB4E,EAAUoL,WACpB3Q,SAAWH,GAAUf,EAAmByG,EAAW1F,GACnDgB,MAAOT,EAAEpB,EAA0BuG,EAAUM,OAC7C5F,cAAc,MAEZsF,EAAU6K,SAASC,gBAAkBC,EAAAA,GAAmBM,IAAIP,eAAiB9K,EAAU6K,SAASC,gBAAkBC,EAAAA,GAAmBO,KAAKR,gBAA0C,IAAxB9K,EAAUiL,UAezKjL,EAAU6K,SAASC,gBAAkBC,EAAAA,GAAmBQ,MAAMT,eAAiB9K,EAAU6K,SAASC,gBAAkBC,EAAAA,GAAmBS,OAAOV,gBAA0C,IAAxB9K,EAAUiL,UAgBzKjL,EAAU6K,SAASC,gBAAkBC,EAAAA,GAAmBU,KAAKX,gBAAyC,IAAxB9K,EAAUiL,WACpF9Q,EAAAA,EAAAA,KAAA,OAAKY,UAAU,2BAA0BH,UACrCT,EAAAA,EAAAA,KAACuR,EAAAA,SAAQ,CAAC3Q,UAAU,sCAChBG,MAAOL,EAAEmF,EAAUkL,aACnBS,QAAoC,OAA3B3L,EAAUO,aAAwB,GAAyD,SAApDP,EAAUO,aAAaqL,WAAWd,cAClF1P,UAAmC,IAAzB4E,EAAUoL,WACpB3Q,SAAWH,GAAUf,EAAmByG,EAAW1F,OAIzD0F,EAAU6K,SAASC,gBAAkBC,EAAAA,GAAmBc,SAASf,gBAAyC,IAAxB9K,EAAUiL,WAE1F9Q,EAAAA,EAAAA,KAAA,OAAKY,UAAU,2BAA0BH,UACrCT,EAAAA,EAAAA,KAAC2R,EAAAA,WAAU,CACPzR,OAAK,EACLC,MAAmC,OAA3B0F,EAAUO,cAAoD,KAA3BP,EAAUO,aAAuB,GACtE6J,EAAyBpK,GAE/B9E,MAAOL,EAAEmF,EAAUkL,aACnBa,eAAeC,EAAAA,EAAAA,MACfC,iBAAiB,OACjB9Q,WAAqC,IAA1B6E,EAAUmL,YAAuB,WAAa,KACzD/P,UAAmC,IAAzB4E,EAAUoL,WACpB3Q,SAAWH,GACP+P,EAA6BrK,EAAW1F,GAE5C4R,aAAe5R,IACX+P,EAA6BrK,EAAW1F,EAAM,EAElDgB,MAAOT,EAAEpB,EAA0BuG,EAAUM,OAC7C5F,cAAc,MAEb,MA/CjBP,EAAAA,EAAAA,KAAA,OAAKY,UAAU,2BAA0BH,UACrCT,EAAAA,EAAAA,KAACC,EAAAA,MAAK,CACFC,OAAK,EACLa,MAAOL,EAAEmF,EAAUkL,aACnB5Q,MAEgC,OAA3B0F,EAAUO,cAAoD,KAA3BP,EAAUO,aAAuB,GAAMP,EAAUO,aAAc4L,iBAEvGhR,WAAqC,IAA1B6E,EAAUmL,YAAuB,WAAa,KACzD/P,UAAmC,IAAzB4E,EAAUoL,WACpB3Q,SAAWH,GAAUf,EAAmByG,EAAW1F,GACnDgB,MAAOT,EAAEpB,EAA0BuG,EAAUM,OAC7C5F,cAAc,OA3B1BP,EAAAA,EAAAA,KAAA,OAAKY,UAAU,2BAA0BH,UACrCT,EAAAA,EAAAA,KAACC,EAAAA,MAAK,CACFC,OAAK,EACLa,MAAOL,EAAEmF,EAAUkL,aACnB5Q,MAAkC,OAA3B0F,EAAUO,aAAwB,GAAKP,EAAUO,aAExDpF,WAAqC,IAA1B6E,EAAUmL,YAAuB,WAAa,KACzD/P,UAAmC,IAAzB4E,EAAUoL,WACpB3Q,SAAWH,GAAUf,EAAmByG,EAAW1F,GACnDgB,MAAOT,EAAEpB,EAA0BuG,EAAUM,OAC7C5F,cAAc,eA6DlE,C,mjCCtHO,MAAM0R,EAAwB,SACxBC,EAAyB,iBACzBC,EAA6B,cAC7BC,EAA6B,cAC7BC,EAAyB,UACzBC,EAA6B,qBAC7BC,EAA0B,WAC1BC,EAA0B,WAC1BC,EAA6B,cAC7BC,EAAiC,kBACjCC,EAAsB,OACtBC,EAAwB,gBACxBC,EAAmC,4BACnCC,EAA0B,WAC1BC,EAAyB,UACzBC,EAAgC,iBAChCC,EAAgC,iBAChCC,EAAqB,MACrBC,EAA4B,aAC5BC,EAA4B,aAC5BC,EAAmC,oBACnCC,EAAuB,QACvBC,EAA0B,WAC1BC,EAAqC,sBACrCC,EAAgD,iCAChDC,EAAiC,kBACjCC,EAA4C,6BAC5CC,EAAiC,kBACjCC,EAAoC,qBACpCC,EAAgC,iBAChCC,EAAoC,kCACpCC,EAA2B,YAC3BC,EAA4B,aAC5BC,EAAqB,MACrBC,EAA6B,kBAE7BC,EAAgC,6BAEhCC,EAA0C,yBAC1CC,EAA0C,yBAC1CC,EAA2C,+BAI3CC,EAAkC,mBAClCC,EAAkC,mBAClCC,EAA0C,2BAC1CC,EAAmC,oBACnCC,EAA6C,8BAC7CC,EAA+C,+BAC/CC,EAAuC,+BACvCC,EAAsC,uBACtCC,EAAsC,uBACtCC,EAA4C,6BAC5CC,EAA+B,gBAC/BC,EAA8B,8BAC9BC,GAA6B,6BAC7BC,GAAqC,yBACrCC,GAA8C,+BAC9CC,GAAwC,yBAExCC,GAAmC,iCACnCC,GAAoC,2BACpCC,GAAoC,2BACpCC,GAA4B,aAG5BC,GAA0C,mBAC1CC,GAA0C,mBAC1CC,GAA2C,yBAC3CC,GAA0B,0BAC1BC,GAA2B,2BAC3BC,GAAyB,UACzBC,GAAsC,wBAEtCC,GAAuB,QACvBC,GAA2B,YAC3BC,GAA0B,WAC1BC,GAA8B,gBAC9BC,GAAmC,mCACnCC,GAAyB,wBACzBC,GAA6B,cAC7BC,GAAqB,MAErBC,GAAuB,sBACvBC,GAAyB,wBACzBC,GAAgC,iBAChCC,GAA4B,aAC5BC,GAAwB,kBACxBC,GAAuB,uBACvBC,GAAsB,sBAEtBC,GAAyB,yBACzBC,GAAwB,wBAExBC,GAAkC,mBAClCC,GAAsC,uBACtCC,GAA4C,6BAC5CC,GAA2C,4BAC3CC,GAA+B,gBAE/BC,GAAuC,wBAGvCC,GAAiD,kCACjDC,GAA8C,+BAC9CC,GAAiD,kCACjDC,GAAwD,yCACxDC,GAAkD,mCAClDC,GAAiD,kCACjDC,GAAgD,iCAChDC,GAA+C,gCAC/CC,GAAgD,iCAChDC,GAA6C,8BAC7CC,GAAgD,iCAChDC,GAAuD,wCACvDC,GAAiD,kCACjDC,GAAgD,iCAChDC,GAA+C,gCAC/CC,GAA8C,+BAE9CC,GAA2B,uBAE3BjM,GAA6B,cAC7BkM,GAA+B,gBAC/BC,GAA6B,cAI7BC,GAA+B,e,6GC9HrC,SAAS5W,EAAqB6W,EAAYC,GAC/C,GAAIlV,MAAMC,QAAQgV,GAAa,CAIA,IAHTA,EAAW7S,QAC5B+S,GAAWA,EAAO5W,OAAS2W,IAEZzW,QAChBwW,EAAWG,QAAQ,CACjB9Y,MAAO,KACPiC,KAAM2W,GAEZ,CACA,OAAOD,CACT,CAEO,SAASjH,IACd,IAAIqH,EAAWC,OAAOC,UAAUC,cAAgBF,OAAOC,UAAUF,SAMjE,OALAI,IAAAA,OAAcJ,GACGI,IAAAA,aAEOC,eAAe,IAGzC,CAGO,SAASC,EAAgCtY,GAC9C,OACEP,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EAAKT,EAAAA,EAAAA,KAAA,QAAAS,SAAOS,KAAYlB,EAAAA,EAAAA,KAAA,OAAKyZ,MAAM,wDAEvC,C","sources":["Components/UIBase/Details/COATemplateDetails.jsx","Components/Composite/Details/COATemplateDetailsComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/functionalUtilities.js"],"sourcesContent":["import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { Select, Input, Button, Icon, Accordion } from \"@scuf/common\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport {\r\n  getOptionsWithSelect,\r\n} from \"../../../JS/functionalUtilities\";\r\n\r\nCOATemplateDetails.propTypes = {\r\n  coaTemplate: PropTypes.object.isRequired,\r\n  modCOATemplate: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    templateTankCodes: PropTypes.array,\r\n    templateBaseProductCodes: PropTypes.array,\r\n    templateUseType: PropTypes.array,\r\n    templateFromTemplate: PropTypes.array,\r\n    availableTemplates: PropTypes.array,\r\n    selectedAvailableTemplates: PropTypes.array,\r\n    associatedTemplates: PropTypes.array,\r\n    selectedAssociatedTemplates: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onTankCodeChange: PropTypes.func.isRequired,\r\n  onFromTemplateChange: PropTypes.func.isRequired,\r\n  onActiveStatusChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  onAvailableTemplateSelection: PropTypes.func.isRequired,\r\n  pageSize: PropTypes.number,\r\n  onTemplateAssociation: PropTypes.func.isRequired,\r\n  onAssociatedTemplateSelection: PropTypes.func.isRequired,\r\n  onTemplateDisassociation: PropTypes.func.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n};\r\n\r\nCOATemplateDetails.defaultProps = {\r\n  isEnterpriseNode: false,\r\n  availableTemplates: [],\r\n  selectedAvailableTemplates: [],\r\n  associatedTemplates: [],\r\n  selectedAssociatedTemplates: []\r\n};\r\n\r\n\r\n\r\nexport function COATemplateDetails({\r\n  coaTemplate,\r\n  modCOATemplate,\r\n  validationErrors,\r\n  listOptions,\r\n  onFieldChange,\r\n  onTankCodeChange,\r\n  onFromTemplateChange,\r\n  onActiveStatusChange,\r\n  isEnterpriseNode,\r\n  onAvailableTemplateSelection,\r\n  pageSize,\r\n  onTemplateAssociation,\r\n  onAssociatedTemplateSelection,\r\n  onTemplateDisassociation,\r\n  handleCellDataEdit,\r\n  modAttributeMetaDataList,\r\n  attributeValidationErrors,\r\n  onAttributeDataChange,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n  const handleCustomEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={cellData.rowData[cellData.field]}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\" style={{\"align-items\":\"initial\"}}>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCOATemplate.COATemplateCode}\r\n                label={t(\"COATemplateCode\")}\r\n                indicator=\"required\"\r\n                disabled={coaTemplate.COATemplateCode !== \"\"}\r\n                onChange={(data) => onFieldChange(\"COATemplateCode\", data)}\r\n                error={t(validationErrors.COATemplateCode)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={modCOATemplate.TankCode}\r\n                label={t(\"COATemplateTankCode\")}\r\n                indicator=\"required\"\r\n                options={Utilities.transferListtoOptions(listOptions.templateTankCodes)}\r\n                onChange={(data) => onTankCodeChange(data)}\r\n                error={t(validationErrors.TankCode)}\r\n                disabled={coaTemplate.TankCode !== null}\r\n                multiple={false}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCOATemplate.BaseProductCode}\r\n                label={t(\"COATemplateBaseProductCode\")}\r\n                disabled={true}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={modCOATemplate.UseType}\r\n                label={t(\"COATemplateUseType\")}\r\n                indicator=\"required\"\r\n                options={Utilities.transferListtoOptions(listOptions.templateUseType)}\r\n                onChange={(data) => onFieldChange(\"UseType\", data)}\r\n                error={t(validationErrors.UseType)}\r\n                disabled={coaTemplate.UseType !== null}\r\n                multiple={false}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={modCOATemplate.FromTemplate}\r\n                label={t(\"COAFromTemplate\")}\r\n                options={getOptionsWithSelect(\r\n                  Utilities.transferListtoOptions(listOptions.templateFromTemplate),\r\n                  t(\"Common_Select\")\r\n                )}\r\n                onChange={(data) => onFromTemplateChange(data)}\r\n                disabled={false}\r\n                multiple={false}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"COATemplate_IsActive\")}\r\n                value={modCOATemplate.IsActive}\r\n                options={[\r\n                  { text: t(\"ViewShipment_Ok\"), value: true },\r\n                  { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                ]}\r\n                onChange={(data) => onActiveStatusChange(data)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCOATemplate.Remarks === null ? \"\" : modCOATemplate.Remarks}\r\n                label={t(\"COATemplate_Remarks\")}\r\n                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                indicator={\r\n                  modCOATemplate.IsActive !== coaTemplate.IsActive ? \"required\" : \"\"\r\n                }\r\n                error={t(validationErrors.Remarks)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n          </div>\r\n          {modAttributeMetaDataList.length > 0\r\n            ? modAttributeMetaDataList.map((attire) => (\r\n              <ErrorBoundary>\r\n                <Accordion>\r\n                  <Accordion.Content\r\n                    className=\"attributeAccordian\"\r\n                    title={\r\n                       t(\"Attributes_Header\")\r\n                    }\r\n                  >\r\n                    <AttributeDetails\r\n                      selectedAttributeList={attire.attributeMetaDataList}\r\n                      handleCellDataEdit={onAttributeDataChange}\r\n                      attributeValidationErrors={handleValidationErrorFilter(\r\n                        attributeValidationErrors,\r\n                        attire.TerminalCode\r\n                      )}\r\n                    ></AttributeDetails>\r\n                  </Accordion.Content>\r\n                </Accordion>\r\n              </ErrorBoundary>\r\n            ))\r\n            : null}\r\n          <div className=\"row\" style={{\"align-items\":\"initial\"}}>\r\n            <div className=\"col-12 col-md-5 col-lg-7\">\r\n              <h4>{t(\"COATemplate_Configuration\")}</h4>\r\n              <div className=\"detailsTable\">\r\n                <DataTable\r\n                  data={listOptions.availableTemplates}\r\n                  search={true}\r\n                  selectionMode=\"multiple\"\r\n                  selection={listOptions.selectedAvailableTemplates}\r\n                  onSelectionChange={onAvailableTemplateSelection}\r\n                  rows={pageSize}\r\n                  searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"ParameterName\"\r\n                    field=\"ParameterName\"\r\n                    header={t(\"COATemplateDetail_ParameterName\")}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"Specification\"\r\n                    field=\"Specification\"\r\n                    header={t(\"COATemplateDetail_Specification\")}\r\n                    editFieldType=\"text\"\r\n                    editable={true}\r\n                    customEditRenderer={(cellData) =>\r\n                      handleCustomEditTextBox(\r\n                        cellData\r\n                      )\r\n                    }\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"Method\"\r\n                    field=\"Method\"\r\n                    header={t(\"COATemplateDetail_Method\")}\r\n                    editFieldType=\"text\"\r\n                    editable={true}\r\n                    customEditRenderer={(cellData) =>\r\n                      handleCustomEditTextBox(\r\n                        cellData\r\n                      )\r\n                    }\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"SortIndex\"\r\n                    field=\"SortIndex\"\r\n                    header={t(\"COATemplateDetail_SortIndex\")}\r\n                    editFieldType=\"text\"\r\n                    editable={true}\r\n                    customEditRenderer={(cellData) =>\r\n                      handleCustomEditTextBox(\r\n                        cellData\r\n                      )\r\n                    }\r\n                  ></DataTable.Column>\r\n                  {(Array.isArray(listOptions.availableTemplates) &&\r\n                    listOptions.availableTemplates.length > pageSize) ? (\r\n                    <DataTable.Pagination />\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                  }\r\n                </DataTable>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-2 col-lg-2\">\r\n              <br></br><br></br>\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  icon={<Icon name=\"caret-right\" root=\"common\" />}\r\n                  content=\"\"\r\n                  iconPosition=\"right\"\r\n                  onClick={onTemplateAssociation}\r\n                  disabled={listOptions.availableTemplates.length > 0 ? false : true}\r\n                /><br></br><br></br>\r\n\r\n                <Button\r\n                  type=\"primary\"\r\n                  icon={<Icon name=\"caret-left\" root=\"common\" />}\r\n                  content=\"\"\r\n                  iconPosition=\"right\"\r\n                  onClick={onTemplateDisassociation}\r\n                  disabled={listOptions.associatedTemplates.length > 0 ? false : true}\r\n                />\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-5 col-lg-3\">\r\n              <h4>{t(\"COATemplate_Configuration_AvailableParameter\")}</h4>\r\n              <div className=\"detailsTable\">\r\n                <DataTable\r\n                  data={listOptions.associatedTemplates}\r\n                  search={true}\r\n                  selectionMode=\"multiple\"\r\n                  selection={listOptions.selectedAssociatedTemplates}\r\n                  onSelectionChange={onAssociatedTemplateSelection}\r\n                  rows={pageSize}\r\n                  searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"ParameterName\"\r\n                    field=\"ParameterName\"\r\n                    header={t(\"COATemplateDetail_DisableParameterName\")}\r\n                  ></DataTable.Column>\r\n                  {Array.isArray(listOptions.associatedTemplates) &&\r\n                    (listOptions.associatedTemplates.length > pageSize) ? (\r\n                    <DataTable.Pagination />) : (\"\")}\r\n                </DataTable>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { COATemplateDetails } from \"../../UIBase/Details/COATemplateDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { coatemplateValidationDef } from \"../../../JS/ValidationDef\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { emptyCOATemplate } from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { functionGroups, fnCOATemplate } from \"../../../JS/FunctionGroups\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nimport { coaTemplateAttributeEntity } from \"../../../JS/AttributeEntity\";\r\n\r\nclass COATemplateDetailsComposite extends Component {\r\n  state = {\r\n    coaTemplate: lodash.cloneDeep(emptyCOATemplate),\r\n    modCOATemplate: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      coatemplateValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    showAuthenticationLayout: false,\r\n    tempCOATemplate: {},\r\n    templateTankCodes: [],\r\n    templateBaseProductCodes: [],\r\n    templateUseType: [\"ALL\", \"TANK\", \"CUSTOMER\"],\r\n    templateFromTemplate: [],\r\n    initavailableTemplates: [],\r\n    availableTemplates: [],\r\n    selectedAvailableTemplates: [],\r\n    associatedTemplates: [],\r\n    selectedAssociatedTemplates: [],\r\n    attributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    allParameters: [],\r\n  };\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList.COATEMPLATE) &&\r\n        attributeMetaDataList.COATEMPLATE.length > 0\r\n      ) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.COATEMPLATE[0].TerminalCode,\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COATEMPLATEDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modAttributeMetaDataList = [];\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n      var modCOATemplate = lodash.cloneDeep(this.state.modCOATemplate);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        });\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.COATEMPLATE.forEach(function (\r\n            attributeMetaData\r\n          ) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue = modCOATemplate.Attributes.find(\r\n                (coaTemplateAttribute) => {\r\n                  return coaTemplateAttribute.TerminalCode === terminal;\r\n                }\r\n              );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modAttributeMetaDataList = [];\r\n      modAttributeMetaDataList = attributesTerminalsList;\r\n      modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modAttributeMetaDataList\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n\r\n      this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"coaTemplateDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        attributeValidation.attributeValidationErrors[attribute.Code] =\r\n          Utilities.valiateAttributeField(attribute, value);\r\n      });\r\n      this.setState({ attributeValidationErrors, modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"DetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.coaTemplate\r\n          ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  GetTemplateFromTemplate() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetTemplateFromTemplate,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            var list = result.EntityResult;\r\n            var cloneAssociated = lodash.cloneDeep(\r\n              this.state.associatedTemplates\r\n            );\r\n            var tempTemplateCodes = [];\r\n            list.forEach((item) => {\r\n              tempTemplateCodes.push(item.Code);\r\n            });\r\n            this.setState({\r\n              templateFromTemplate: tempTemplateCodes,\r\n              associatedTemplates: cloneAssociated,\r\n            });\r\n          } else {\r\n            console.log(\"Error in gettemplateFromTemplate:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Template FromTemplate List:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Template FromTemplate List:\", error);\r\n    }\r\n  }\r\n\r\n  getTemplateTankCodes() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetTanks + \"?ShareholderCode=\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (\r\n              result.EntityResult !== null &&\r\n              Array.isArray(result.EntityResult)\r\n            ) {\r\n              var list = result.EntityResult;\r\n              var tempTankCodes = [];\r\n              list.forEach((item) => {\r\n                tempTankCodes.push(item);\r\n              });\r\n              this.setState({\r\n                templateTankCodes: tempTankCodes,\r\n              });\r\n            }\r\n          } else {\r\n            console.log(\"Error in getTankCode:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error in getTankCode:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in getTankCode:\", error);\r\n    }\r\n  }\r\n\r\n  handleTankCodeChange = (data) => {\r\n    try {\r\n      const modCOATemplate = lodash.cloneDeep(this.state.modCOATemplate);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modCOATemplate[\"TankCode\"] = data;\r\n      this.setState({ modCOATemplate });\r\n      if (coatemplateValidationDef[\"TankCode\"] !== undefined) {\r\n        validationErrors[\"TankCode\"] = Utilities.validateField(\r\n          coatemplateValidationDef[\"TankCode\"],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n\r\n      if (validationErrors[\"TankCode\"] != \"\") {\r\n        return;\r\n      }\r\n\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.tankCode,\r\n          value: data,\r\n        },\r\n        {\r\n          key: KeyCodes.terminalCode,\r\n          value: this.props.userDetails.EntityResult.TerminalCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        keyDataCode: KeyCodes.tankCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.GetTank,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let result = response.data;\r\n          if (result.IsSuccess) {\r\n            let entity = result.EntityResult;\r\n\r\n            modCOATemplate.BaseProductCode = entity.BaseProductCode;\r\n            this.setState({ modCOATemplate });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"COATemplateDetails : Error while getting Tank Code\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"COATemplateDetailsComposite:Error occured on handleTankCodeChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleFromTemplateChange = (data) => {\r\n    try {\r\n      const modCOATemplate = lodash.cloneDeep(this.state.modCOATemplate);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modCOATemplate[\"FromTemplate\"] = data;\r\n      this.setState({ modCOATemplate });\r\n\r\n      if (data == null) {\r\n        modCOATemplate.FromTemplate = null;\r\n        this.setState({\r\n          availableTemplates: [],\r\n          modCOATemplate,\r\n          validationErrors,\r\n          isReadyToRender: true,\r\n          associatedTemplates: lodash.cloneDeep(this.state.allParameters),\r\n        });\r\n        return;\r\n      }\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.coaTemplateCode,\r\n          value: data,\r\n        },\r\n      ];\r\n      var obj = {\r\n        keyDataCode: KeyCodes.coaTemplateCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.GetCOATemplate,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ isReadyToRender: false }, () => {\r\n              let details = result.EntityResult.COATemplateDetailsList;\r\n              var AvailableTemplateParameters = [];\r\n              details.forEach((obj) => {\r\n                var tempObj = {\r\n                  ParameterName: obj.ParameterName,\r\n                  Specification: obj.Specification,\r\n                  Method: obj.Method,\r\n                  SortIndex: obj.SortIndex,\r\n                };\r\n                AvailableTemplateParameters.push(tempObj);\r\n              });\r\n              var allParameters = lodash.cloneDeep(this.state.allParameters);\r\n              let remaingParameters = allParameters.filter(\r\n                (item) =>\r\n                  !AvailableTemplateParameters.some(\r\n                    (ele) => ele.ParameterName === item.ParameterName\r\n                  )\r\n              );\r\n              this.setState({\r\n                availableTemplates: AvailableTemplateParameters,\r\n                initavailableTemplates: AvailableTemplateParameters,\r\n                associatedTemplates: remaingParameters,\r\n                isReadyToRender: true,\r\n              });\r\n            });\r\n          } else {\r\n            this.setState(\r\n              {\r\n                coaTemplate: lodash.cloneDeep(emptyCOATemplate),\r\n                modCOATemplate: lodash.cloneDeep(emptyCOATemplate),\r\n                isReadyToRender: true,\r\n              },\r\n              () => {}\r\n            );\r\n            console.log(\"Error in getCOATemplate:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting coaTemplate:\", error, data);\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"COATemplateDetailsComposite:Error occured on handleFromTemplateChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modCOATemplate = lodash.cloneDeep(this.state.modCOATemplate);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modCOATemplate[propertyName] = data;\r\n      this.setState({ modCOATemplate });\r\n      if (coatemplateValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          coatemplateValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COATemplateDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.coaTemplate.Name !== \"\" &&\r\n        nextProps.selectedRow.Common_Name === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getCOATemplate(nextProps.selectedRow);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COATemplateDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getAllParameters();\r\n      this.getTemplateTankCodes();\r\n      this.GetTemplateFromTemplate();\r\n      this.getAttributes(this.props.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"COATemplateDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAllParameters() {\r\n    try {\r\n      var keyCode = [];\r\n      var obj = {\r\n        keyDataCode: KeyCodes.coaTemplateCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.GetAllParameters,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let details = result.EntityResult;\r\n            var tempResult = [];\r\n            details.forEach((obj) => {\r\n              var tempObj = {\r\n                ParameterName: obj.ParameterName,\r\n                Specification: obj.Specification,\r\n                Method: obj.Method,\r\n                SortIndex: obj.SortIndex,\r\n              };\r\n              tempResult.push(tempObj);\r\n            });\r\n            this.setState({ allParameters: tempResult });\r\n          } else {\r\n            this.setState({\r\n              allParameters: [],\r\n            });\r\n            console.log(\"Error in GetAllParameters:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while GetAllParameters:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while GetAllParameters:\", error);\r\n    }\r\n  }\r\n\r\n  getAttributes(coaTemplateRow) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [coaTemplateAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var cloneAssociated = lodash.cloneDeep(\r\n            this.state.associatedTemplates\r\n          );\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.COATEMPLATE\r\n                ),\r\n              associatedTemplates: cloneAssociated,\r\n            },\r\n            () => this.getCOATemplate(coaTemplateRow)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  getCOATemplate(selectedRow) {\r\n    try {\r\n      if (selectedRow.COATemplateCode === undefined) {\r\n        this.setState({ isReadyToRender: false }, () => {\r\n          this.setState(\r\n            {\r\n              coaTemplate: lodash.cloneDeep(emptyCOATemplate),\r\n              modCOATemplate: lodash.cloneDeep(emptyCOATemplate),\r\n              isReadyToRender: true,\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.add,\r\n                fnCOATemplate\r\n              ),\r\n              availableTemplates: [],\r\n              modAttributeMetaDataList: [],\r\n              associatedTemplates: lodash.cloneDeep(this.state.allParameters),\r\n            },\r\n            () => {\r\n              this.localNodeAttribute();\r\n            }\r\n          );\r\n        });\r\n\r\n        return;\r\n      }\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.coaTemplateCode,\r\n          value: selectedRow.COATemplateCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        keyDataCode: KeyCodes.coaTemplateCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.GetCOATemplate,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let details = result.EntityResult.COATemplateDetailsList;\r\n            //AvailableTemplateParameters means associated parameters in COATemplate\r\n            var AvailableTemplateParameters = [];\r\n            details.forEach((obj) => {\r\n              var tempObj = {\r\n                ParameterName: obj.ParameterName,\r\n                Specification: obj.Specification,\r\n                Method: obj.Method,\r\n                SortIndex: obj.SortIndex,\r\n              };\r\n              AvailableTemplateParameters.push(tempObj);\r\n            });\r\n            result.EntityResult.COATemplateCode = result.EntityResult.Code;\r\n            var allParameters = lodash.cloneDeep(this.state.allParameters);\r\n            let remaingParameters = allParameters.filter(\r\n              (item) =>\r\n                !AvailableTemplateParameters.some(\r\n                  (ele) => ele.ParameterName === item.ParameterName\r\n                )\r\n            );\r\n            this.setState(\r\n              {\r\n                isReadyToRender: true,\r\n                coaTemplate: lodash.cloneDeep(result.EntityResult),\r\n                modCOATemplate: lodash.cloneDeep(result.EntityResult),\r\n                availableTemplates: AvailableTemplateParameters,\r\n                initavailableTemplates: AvailableTemplateParameters,\r\n                associatedTemplates: remaingParameters,\r\n                saveEnabled: Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnCOATemplate\r\n                ),\r\n              },\r\n              () => {\r\n                this.localNodeAttribute();\r\n              }\r\n            );\r\n          } else {\r\n            this.setState(\r\n              {\r\n                coaTemplate: lodash.cloneDeep(emptyCOATemplate),\r\n                modCOATemplate: lodash.cloneDeep(emptyCOATemplate),\r\n                isReadyToRender: true,\r\n              },\r\n              () => {}\r\n            );\r\n            console.log(\"Error in getCOATemplate:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting coaTemplate:\", error, selectedRow);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while getting coaTemplate:\", error, selectedRow);\r\n    }\r\n  }\r\n\r\n  handleAvailableTemplateSelection = (e) => {\r\n    this.setState({ selectedAvailableTemplates: e });\r\n  };\r\n\r\n  handleAssociatedTemplateSelection = (e) => {\r\n    this.setState({ selectedAssociatedTemplates: e });\r\n  };\r\n\r\n  handleTemplateAssociation = () => {\r\n    try {\r\n      this.setState({ isReadyToRender: false }, () => {\r\n        const selectedAvailableTemplates = lodash.cloneDeep(\r\n          this.state.selectedAvailableTemplates\r\n        );\r\n        let availableTemplates = lodash.cloneDeep(\r\n          this.state.availableTemplates\r\n        );\r\n        let associatedTemplates = lodash.cloneDeep(\r\n          this.state.associatedTemplates\r\n        );\r\n        selectedAvailableTemplates.forEach((obj) => {\r\n          associatedTemplates.push(obj);\r\n          availableTemplates = availableTemplates.filter((com) => {\r\n            return com.ParameterName !== obj.ParameterName;\r\n          });\r\n        });\r\n        this.setState({\r\n          associatedTemplates,\r\n          selectedAvailableTemplates: [],\r\n          availableTemplates,\r\n          isReadyToRender: true,\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ProcessConfigDetailsComposite:Error occured on handleTemplateAssociation\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleTemplateDisassociation = () => {\r\n    try {\r\n      this.setState({ isReadyToRender: false }, () => {\r\n        const selectedAssociatedTemplates = lodash.cloneDeep(\r\n          this.state.selectedAssociatedTemplates\r\n        );\r\n        let availableTemplates = lodash.cloneDeep(\r\n          this.state.availableTemplates\r\n        );\r\n        let associatedTemplates = lodash.cloneDeep(\r\n          this.state.associatedTemplates\r\n        );\r\n        selectedAssociatedTemplates.forEach((obj) => {\r\n          availableTemplates.push(obj);\r\n          associatedTemplates = associatedTemplates.filter((com) => {\r\n            return com.ParameterName !== obj.ParameterName;\r\n          });\r\n        });\r\n        this.setState({\r\n          associatedTemplates,\r\n          selectedAssociatedTemplates: [],\r\n          availableTemplates,\r\n          isReadyToRender: true,\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ProcessConfigDetailsComposite:Error occured on handleTemplateDisassociation\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateSave(attributeList) {\r\n    try {\r\n      const { modCOATemplate } = this.state;\r\n      var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      Object.keys(coatemplateValidationDef).forEach(function (key) {\r\n        validationErrors[key] = Utilities.validateField(\r\n          coatemplateValidationDef[key],\r\n          modCOATemplate[key]\r\n        );\r\n      });\r\n\r\n      if (modCOATemplate.IsActive !== this.state.coaTemplate.IsActive) {\r\n        if (modCOATemplate.Remarks === null || modCOATemplate.Remarks === \"\") {\r\n          validationErrors[\"Remarks\"] = \"COA_RemarksRequired\";\r\n        }\r\n      }\r\n\r\n      this.setState({ validationErrors });\r\n\r\n      var attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n      attributeList.forEach((attribute) => {\r\n        attributeValidationErrors.forEach((attributeValidation) => {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        });\r\n      });\r\n      this.setState({ validationErrors, attributeValidationErrors });\r\n      var returnValue = true;\r\n      attributeValidationErrors.forEach((x) => {\r\n        if (returnValue) {\r\n          returnValue = Object.values(x.attributeValidationErrors).every(\r\n            function (value) {\r\n              return value === \"\";\r\n            }\r\n          );\r\n        } else {\r\n          return returnValue;\r\n        }\r\n      });\r\n\r\n      if (returnValue)\r\n        returnValue = Object.values(validationErrors).every(function (value) {\r\n          return value === \"\";\r\n        });\r\n\r\n      return returnValue;\r\n    } catch (error) {\r\n      console.log(\"COATemplateDetailsComposite : Error in validateSave\");\r\n    }\r\n  }\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  saveCOATemplate = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempCOATemplate = lodash.cloneDeep(this.state.tempCOATemplate);\r\n      let availableTems = lodash.cloneDeep(this.state.availableTemplates);\r\n\r\n      tempCOATemplate.COATemplateDetailsList = [];\r\n      availableTems.forEach((obj) => {\r\n        var singleTemplate = {\r\n          ParameterName: obj.ParameterName,\r\n          Specification: obj.Specification,\r\n          Method: obj.Method,\r\n          SortIndex: obj.SortIndex,\r\n        };\r\n        tempCOATemplate.COATemplateDetailsList.push(singleTemplate);\r\n      });\r\n\r\n      tempCOATemplate.Code = tempCOATemplate.COATemplateCode;\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      tempCOATemplate.Attributes =\r\n        Utilities.fillAttributeDetails(attributeList);\r\n\r\n      this.state.coaTemplate.COATemplateCode === \"\"\r\n        ? this.createCOATemplate(tempCOATemplate)\r\n        : this.updateCOATemplate(tempCOATemplate);\r\n    } catch (error) {\r\n      console.log(\"COATemplateDetailsComposite : Error in saveCOATemplate\");\r\n    }\r\n  };\r\n  handleSave = () => {\r\n    try {\r\n      let modCOATemplate = lodash.cloneDeep(this.state.modCOATemplate);\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      if (this.validateSave(attributeList)) {\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempCOATemplate = lodash.cloneDeep(modCOATemplate);\r\n        this.setState({ showAuthenticationLayout, tempCOATemplate }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveCOATemplate();\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COATemplateDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  createCOATemplate(modCOATemplate) {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.coaTemplateCode,\r\n          value: modCOATemplate.COATemplateCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        keyDataCode: KeyCodes.coaTemplateCode,\r\n        KeyCodes: keyCode,\r\n        Entity: modCOATemplate,\r\n      };\r\n      var notification = {\r\n        messageType: \"critical\",\r\n        message: \"COATemplateDetails_SavedStatus\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"COATemplateCode\"],\r\n            keyValues: [modCOATemplate.COATemplateCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.CreateCOATemplate,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          if (result.IsSuccess === true) {\r\n            this.setState(\r\n              {\r\n                saveEnabled: Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnCOATemplate\r\n                ),\r\n                showAuthenticationLayout: false,\r\n              },\r\n              () =>\r\n                this.getCOATemplate({\r\n                  COATemplateCode: modCOATemplate.COATemplateCode,\r\n                })\r\n            );\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            this.setState({\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.add,\r\n                fnCOATemplate\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            });\r\n            console.log(\"Error in createCOATemplate:\", result.ErrorList);\r\n          }\r\n          this.props.onSaved(modCOATemplate, \"add\", notification);\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnCOATemplate\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          this.props.onSaved(modCOATemplate, \"add\", notification);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in createCOATemplate\");\r\n    }\r\n  }\r\n\r\n  updateCOATemplate(modCOATemplate) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.coaTemplateCode,\r\n          value: modCOATemplate.COATemplateCode,\r\n        },\r\n      ];\r\n\r\n      if (modCOATemplate.CreatedBy == null) {\r\n        modCOATemplate.CreatedBy = \"\";\r\n      }\r\n      if (modCOATemplate.LastUpdatedBy == null) {\r\n        modCOATemplate.LastUpdatedBy = \"\";\r\n      }\r\n      let obj = {\r\n        keyDataCode: KeyCodes.coaTemplateCode,\r\n        KeyCodes: keyCode,\r\n        Entity: modCOATemplate,\r\n      };\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"COATemplateDetails_SavedStatus\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"COATemplateCode\"],\r\n            keyValues: [modCOATemplate.COATemplateCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.UpdateCOATemplate,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          if (result.IsSuccess === true) {\r\n            this.setState(\r\n              {\r\n                saveEnabled: Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnCOATemplate\r\n                ),\r\n                showAuthenticationLayout: false,\r\n              },\r\n              () =>\r\n                this.getCOATemplate({\r\n                  COATemplateCode: modCOATemplate.COATemplateCode,\r\n                })\r\n            );\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            this.setState({\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnCOATemplate\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            });\r\n            console.log(\"Error in updateCOATemplate:\", result.ErrorList);\r\n          }\r\n          this.props.onSaved(modCOATemplate, \"update\", notification);\r\n        })\r\n        .catch((error) => {\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          this.props.onSaved(modCOATemplate, \"modify\", notification);\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnCOATemplate\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in updateCOATemplate:\");\r\n    }\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      const coaTemplate = lodash.cloneDeep(this.state.coaTemplate);\r\n      const allAvailableTemplates = lodash.cloneDeep(\r\n        this.state.allParameters\r\n      );\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      if (this.state.coaTemplate.COATemplateCode === \"\") {\r\n        this.setState(\r\n          {\r\n            availableTemplates: [],\r\n            associatedTemplates: allAvailableTemplates,\r\n            selectedAvailableTemplates: [],\r\n            selectedAssociatedTemplates: [],\r\n            modCOATemplate: { ...coaTemplate },\r\n            validationErrors,\r\n            modAttributeMetaDataList: [],\r\n            isReadyToRender: false,\r\n          },\r\n          () => {\r\n            if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n              this.handleResetAttributeValidationError();\r\n            } else {\r\n              this.localNodeAttribute();\r\n              this.handleResetAttributeValidationError();\r\n            }\r\n            this.setState({ isReadyToRender: true });\r\n          }\r\n        );\r\n      } else {       \r\n        const initAvailableTemplates = lodash.cloneDeep(\r\n          this.state.initavailableTemplates\r\n        );\r\n        let remaingParameters = allAvailableTemplates.filter(\r\n          (item) =>\r\n            !initAvailableTemplates.some(\r\n              (ele) => ele.ParameterName === item.ParameterName\r\n            )\r\n        );\r\n        this.setState(\r\n          {\r\n            selectedAvailableTemplates: [],\r\n            selectedAssociatedTemplates: [],\r\n            modCOATemplate: { ...coaTemplate },\r\n            validationErrors,\r\n            modAttributeMetaDataList: [],\r\n            availableTemplates: initAvailableTemplates,\r\n            associatedTemplates: remaingParameters,\r\n            isReadyToRender: false,\r\n          },\r\n          () => {\r\n            if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n              this.handleResetAttributeValidationError();\r\n            } else {\r\n              this.localNodeAttribute();\r\n              this.handleResetAttributeValidationError();\r\n            }\r\n            this.setState({ isReadyToRender: true });\r\n          }\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COATemplateDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    try {\r\n      let modeTemplateParameters = lodash.cloneDeep(\r\n        this.state.availableTemplates\r\n      );\r\n      var singleParameter = modeTemplateParameters.find(\r\n        (ele) => ele.ParameterName === cellData.rowData.ParameterName\r\n      );\r\n      singleParameter[cellData.field] = newVal;\r\n      this.setState({ availableTemplates: modeTemplateParameters });\r\n    } catch (error) {\r\n      console.log(\":Error occured on handleCellDataEdit\", error);\r\n    }\r\n  };\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modCOATemplate = lodash.cloneDeep(this.state.modCOATemplate);\r\n      modCOATemplate.IsActive = value;\r\n      if (modCOATemplate.IsActive !== this.state.coaTemplate.IsActive)\r\n        modCOATemplate.Remarks = \"\";\r\n      this.setState({ modCOATemplate });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  render() {\r\n    const listOptions = {\r\n      templateTankCodes: this.state.templateTankCodes,\r\n      templateBaseProductCodes: this.state.templateBaseProductCodes,\r\n      templateUseType: this.state.templateUseType,\r\n      templateFromTemplate: this.state.templateFromTemplate,\r\n      availableTemplates: this.state.availableTemplates,\r\n      selectedAvailableTemplates: this.state.selectedAvailableTemplates,\r\n      associatedTemplates: this.state.associatedTemplates,\r\n      selectedAssociatedTemplates: this.state.selectedAssociatedTemplates,\r\n    };\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"COATemplate_LastUpDt\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modCOATemplate.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modCOATemplate.LastUpdatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"COATemplate_LastUpdatedBy\",\r\n        fieldValue: this.state.modCOATemplate.LastUpdatedBy,\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.coaTemplate.COATemplateCode}\r\n            newEntityName=\"COATemplate_Title\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n\r\n        <ErrorBoundary>\r\n          <COATemplateDetails\r\n            coaTemplate={this.state.coaTemplate}\r\n            modCOATemplate={this.state.modCOATemplate}\r\n            validationErrors={this.state.validationErrors}\r\n            listOptions={listOptions}\r\n            onFieldChange={this.handleChange}\r\n            onTankCodeChange={this.handleTankCodeChange}\r\n            onFromTemplateChange={this.handleFromTemplateChange}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            onAvailableTemplateSelection={this.handleAvailableTemplateSelection}\r\n            pageSize={\r\n              this.props.userDetails.EntityResult.PageAttibutes\r\n                .WebPortalListPageSize\r\n            }\r\n            onTemplateAssociation={this.handleTemplateAssociation}\r\n            onAssociatedTemplateSelection={\r\n              this.handleAssociatedTemplateSelection\r\n            }\r\n            onTemplateDisassociation={this.handleTemplateDisassociation}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            attributeMetaDataList={this.state.attributeMetaDataList}\r\n            onAttributeDataChange={this.handleAttributeDataChange}\r\n            associatedTemplates={this.state.associatedTemplates}\r\n          ></COATemplateDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.coaTemplate.COATemplateCode === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnCOATemplate}\r\n            handleOperation={this.saveCOATemplate}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(COATemplateDetailsComposite);\r\n\r\nCOATemplateDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["COATemplateDetails","_ref","coaTemplate","modCOATemplate","validationErrors","listOptions","onFieldChange","onTankCodeChange","onFromTemplateChange","onActiveStatusChange","isEnterpriseNode","onAvailableTemplateSelection","pageSize","onTemplateAssociation","onAssociatedTemplateSelection","onTemplateDisassociation","handleCellDataEdit","modAttributeMetaDataList","attributeValidationErrors","onAttributeDataChange","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","handleCustomEditTextBox","cellData","_jsx","Input","fluid","value","rowData","field","onChange","reserveSpace","TranslationConsumer","children","t","_jsxs","className","style","COATemplateCode","label","indicator","disabled","data","error","Select","placeholder","TankCode","options","Utilities","templateTankCodes","multiple","search","noResultsMessage","BaseProductCode","UseType","templateUseType","FromTemplate","getOptionsWithSelect","templateFromTemplate","IsActive","text","Remarks","length","map","attire","ErrorBoundary","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","DataTable","availableTemplates","selectionMode","selection","selectedAvailableTemplates","onSelectionChange","rows","searchPlaceholder","Column","header","editFieldType","editable","customEditRenderer","Array","isArray","Pagination","textAlign","Button","type","icon","Icon","name","root","content","iconPosition","onClick","associatedTemplates","selectedAssociatedTemplates","defaultProps","COATemplateDetailsComposite","Component","constructor","arguments","state","lodash","emptyCOATemplate","coatemplateValidationDef","isReadyToRender","saveEnabled","showAuthenticationLayout","tempCOATemplate","templateBaseProductCodes","initavailableTemplates","allParameters","handleAttributeDataChange","attribute","matchedAttributes","this","matchedAttributesList","filter","modattribute","Code","DefaultValue","forEach","setState","console","log","handleTankCodeChange","undefined","keyCode","key","KeyCodes","props","userDetails","EntityResult","obj","keyDataCode","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","entity","catch","handleFromTemplateChange","details","COATemplateDetailsList","AvailableTemplateParameters","tempObj","ParameterName","Specification","Method","SortIndex","push","remaingParameters","item","some","ele","ErrorList","handleChange","propertyName","handleAvailableTemplateSelection","e","handleAssociatedTemplateSelection","handleTemplateAssociation","com","handleTemplateDisassociation","handleAuthenticationClose","saveCOATemplate","availableTems","singleTemplate","attributeList","Attributes","createCOATemplate","updateCOATemplate","handleSave","validateSave","IsWebPortalUser","handleReset","allAvailableTemplates","Object","keys","IsEnterpriseNode","localNodeAttribute","handleResetAttributeValidationError","initAvailableTemplates","newVal","modeTemplateParameters","handleActiveStatusChange","COATEMPLATE","terminalSelectionChange","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","coaTemplateAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","GetTemplateFromTemplate","list","cloneAssociated","tempTemplateCodes","getTemplateTankCodes","tempTankCodes","componentWillReceiveProps","nextProps","Name","selectedRow","Common_Name","getCOATemplate","componentDidMount","IsArchived","getAllParameters","getAttributes","tempResult","coaTemplateRow","coaTemplateAttributeEntity","FunctionsList","functionGroups","add","fnCOATemplate","modify","returnValue","values","every","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","CreatedBy","LastUpdatedBy","render","popUpContents","fieldName","fieldValue","Date","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","TMDetailsHeader","entityCode","newEntityName","PageAttibutes","WebPortalListPageSize","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","margin","Popup","element","marginLeft","size","position","List","float","handleAttributeDateValue","convertAttributeDatetoString","chars","split","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","Constants","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","Checkbox","checked","toString","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","toLocaleString","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","ddlOptions","selectOptionText","option","unshift","language","window","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}