{"version":3,"file":"static/js/2683.a3d8346e.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Common/WijmoGrid.jsx","Components/Composite/Common/WijmoGridComposite.jsx","Components/Composite/Summary/TruckReceiptSummaryComposite.jsx","Components/Composite/Entity/TruckReceiptComposite.jsx","Components/UIBase/Common/TMTransactionFilters.jsx","Components/UIBase/Common/TMReportViewer.jsx","Components/UIBase/Details/ReportDetails.jsx","JS/FunctionGroups.js","JS/KeyCodes.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as wjCore from \"@grapecity/wijmo\";\r\nimport * as wjGrid from \"@grapecity/wijmo.grid\";\r\nimport {\r\n  FlexGrid,\r\n  FlexGridColumn,\r\n  FlexGridCellTemplate,\r\n} from \"@grapecity/wijmo.react.grid\";\r\nimport { FlexGridFilter } from \"@grapecity/wijmo.react.grid.filter\";\r\nimport { Operator } from \"@grapecity/wijmo.grid.filter\";\r\nimport { FlexGridSearch } from \"@grapecity/wijmo.react.grid.search\";\r\nimport { CollectionView } from \"@grapecity/wijmo\";\r\nimport { CollectionViewNavigator, ListBox } from \"@grapecity/wijmo.react.input\";\r\nimport { Selector } from \"@grapecity/wijmo.grid.selector\";\r\nimport { HeadersVisibility } from \"@grapecity/wijmo.grid\";\r\nimport { showPopup, hidePopup, PopupPosition } from \"@grapecity/wijmo\";\r\nimport * as wjcGridXlsx from \"@grapecity/wijmo.grid.xlsx\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport { GroupPanel } from \"@grapecity/wijmo.react.grid.grouppanel\";\r\nimport { Button, Card, Popup } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as loadash from \"lodash\";\r\nimport \"@grapecity/wijmo.touch\";\r\n\r\nconst WijmoGrid = (props) => {\r\n  const [flex, setFlex] = useState(null);\r\n  const [translator] = useTranslation();\r\n  const _getData = (pageLength) => {\r\n    return new CollectionView(props.sourceData, {\r\n      pageSize: pageLength,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState(_getData(props.rowsPerPage));\r\n  const theGrid = React.createRef();\r\n  const theSearch = React.createRef();\r\n  const gridFilter = React.createRef();\r\n  const pagingComponent = React.createRef();\r\n  const colPicker = React.useRef();\r\n\r\n  // to keep track of selected rows\r\n  const selectedRows = React.useRef(props.selectionRequired ? [] : null);\r\n\r\n  // to initialize grid checkbox selection\r\n  let selector = null;\r\n\r\n  //Initialize grid\r\n  const gridInitialized = (grid) => {\r\n    try {\r\n      // localize grid filter\r\n      customizeFilterConditions();\r\n\r\n      if (props.onRowClick) {\r\n        // add row click event handler\r\n        grid.addEventListener(grid.hostElement, \"click\", (e) => {\r\n          let ht = grid.hitTest(e);\r\n          // condition to check if cell is not a grouped cell and a data cell\r\n          if (\r\n            ht.target.closest(\".wj-cell\") &&\r\n            ![...ht.target.closest(\".wj-cell\").classList].includes(\r\n              \"wj-group\"\r\n            ) &&\r\n            ht.cellType === wjGrid.CellType.Cell\r\n          ) {\r\n            // fetch row data\r\n            const rowData = grid.rows[ht.row].dataItem;\r\n            props.onRowClick(rowData);\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      grid.select(-1, -1);\r\n\r\n      setFlex(grid);\r\n      if (props.selectionRequired) {\r\n        // enable checkbox selection\r\n        selector = new Selector(grid, {\r\n          itemChecked: (s, e) => {\r\n            // if only single checkbox selection is required\r\n            if (props.singleSelection) {\r\n              grid.rows\r\n                .filter((row) => {\r\n                  return (\r\n                    row.isSelected &&\r\n                    selectedRows.current.filter((item) =>\r\n                      loadash.isEqual(item, row.dataItem)\r\n                    ).length === 1\r\n                  );\r\n                })\r\n                .forEach((row) => {\r\n                  row.isSelected = false;\r\n                });\r\n            }\r\n\r\n            // pass row data as parameter to checkbox selection handler\r\n            props.onSelectionHandle(\r\n              grid.rows\r\n                .filter((r) => r.isSelected)\r\n                .map((selectedRow) => selectedRow.dataItem)\r\n            );\r\n          },\r\n          // if only single checkbox selection is required\r\n          showCheckAll: !props.singleSelection,\r\n        });\r\n\r\n        let theGrid = selector.column.grid;\r\n        selector.column = theGrid.rowHeaders.columns[0];\r\n        theGrid.headersVisibility = HeadersVisibility.All;\r\n        theGrid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in gridInitialized: \" + error);\r\n    }\r\n  };\r\n\r\n  //Update grid when data changes\r\n  useEffect(() => {\r\n    try {\r\n      if (theGrid != null) {\r\n        //Connect search to the grid\r\n        let grid = theGrid.current.control;\r\n        let search = theSearch.current.control;\r\n        search.grid = grid;\r\n      }\r\n\r\n      setData(_getData(props.rowsPerPage));\r\n    } catch (error) {\r\n      console.log(\"Error in grid update:\", error);\r\n    }\r\n  }, [props.sourceData]);\r\n\r\n  // Pre-select grid rows based on selectedItems props\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && props.selectionRequired) {\r\n        // clear the selectedRows array\r\n        selectedRows.current.length = 0;\r\n        // add selectedItems array items to selectedRows\r\n        selectedRows.current.push(...props.selectedItems);\r\n\r\n        flex.rows.forEach((row) => {\r\n          if (\r\n            props.selectedItems.filter((item) =>\r\n              loadash.isEqual(item, row.dataItem)\r\n            ).length === 1\r\n          ) {\r\n            // checks the row checkbox\r\n            row.isSelected = true;\r\n          } else {\r\n            // unchecks the row checkbox\r\n            row.isSelected = false;\r\n          }\r\n        });\r\n\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in pre-selecting rows:\", error);\r\n    }\r\n  }, [props.selectedItems]);\r\n\r\n  //Load the state of grid\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(props.parentComponent + \"GridState\") &&\r\n        localStorage.getItem(props.parentComponent + \"GridState\") !== \"null\" &&\r\n        flex\r\n      ) {\r\n        // restore grid settings\r\n        let gridState = JSON.parse(\r\n          localStorage.getItem(props.parentComponent + \"GridState\")\r\n        );\r\n        let newFlex = flex;\r\n\r\n        // restore column picker settings\r\n        newFlex.columns.forEach((col) => {\r\n          let matchedCol = gridState.columns.filter(\r\n            (colSetting) => colSetting.binding === col.binding\r\n          );\r\n          col.visible =\r\n            matchedCol.length > 0 ? matchedCol[0].visible : col.visible;\r\n        });\r\n\r\n        // restore filter settings\r\n        gridFilter.current.control.filterDefinition =\r\n          gridState.filterDefinition;\r\n\r\n        // restore sort settings\r\n        newFlex.collectionView.deferUpdate(() => {\r\n          newFlex.collectionView.sortDescriptions.clear();\r\n          for (let i = 0; i < gridState.sortDescriptions.length; i++) {\r\n            let sortDesc = gridState.sortDescriptions[i];\r\n            newFlex.collectionView.sortDescriptions.push(\r\n              new wjCore.SortDescription(sortDesc.property, sortDesc.ascending)\r\n            );\r\n          }\r\n        });\r\n\r\n        // restore grouping settings\r\n        for (let i = 0; i < gridState.groupDescriptions.length; i++) {\r\n          newFlex.collectionView.groupDescriptions.push(\r\n            new wjCore.PropertyGroupDescription(gridState.groupDescriptions[i])\r\n          );\r\n          newFlex.columns.filter(\r\n            (col) => col.binding === gridState.groupDescriptions[i]\r\n          )[0].visible = false;\r\n        }\r\n\r\n        if (\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") &&\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") !== \"null\"\r\n        ) {\r\n          let gridSessionState = JSON.parse(\r\n            sessionStorage.getItem(props.parentComponent + \"GridState\")\r\n          );\r\n          // restore paging settings\r\n          newFlex.collectionView.moveToPage(\r\n            newFlex.collectionView.pageCount - 1 >= gridSessionState.pageIndex\r\n              ? gridSessionState.pageIndex\r\n              : newFlex.collectionView.pageCount - 1\r\n          );\r\n\r\n          // restore search settings\r\n          if (theSearch) {\r\n            theSearch.current.control.text = gridSessionState.searchText;\r\n          }\r\n        }\r\n\r\n        setFlex(newFlex);\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in restoring local storage settings: \", error);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set Column Picker Properties\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && colPicker.current && props.columnPickerRequired) {\r\n        colPicker.current.itemsSource = flex.columns;\r\n        colPicker.current.checkedMemberPath = \"visible\";\r\n        colPicker.current.displayMemberPath = \"header\";\r\n        colPicker.current.lostFocus.addHandler(() => {\r\n          hidePopup(colPicker.current.hostElement);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in initializing column picker properties:\", error);\r\n    }\r\n  }, [colPicker.current]);\r\n\r\n  useEffect(() => {\r\n    // remove column picker pop-up on component unmount\r\n    return () => {\r\n      if (props.columnPickerRequired && colPicker.current) {\r\n        hidePopup(colPicker.current.hostElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // export grid data to excel\r\n  const exportExcel = () => {\r\n    try {\r\n      let gridFlex = flex;\r\n      //to download all rows from all pages\r\n      gridFlex.itemsSource.pageSize = props.sourceData.length;\r\n      setFlex(gridFlex);\r\n      wjcGridXlsx.FlexGridXlsxConverter.saveAsync(\r\n        flex,\r\n        {\r\n          includeColumnHeaders: true,\r\n          includeCellStyles: false,\r\n          formatItem: null,\r\n        },\r\n        props.exportFileName\r\n      );\r\n\r\n      //to restore paging\r\n      gridFlex.itemsSource.pageSize = props.rowsPerPage;\r\n      setFlex(gridFlex);\r\n    } catch (error) {\r\n      console.log(\"Error in export grid to excel:\", error);\r\n    }\r\n  };\r\n\r\n  const terminalPopOver = (terminalCodes) => {\r\n    if (terminalCodes.split(\",\").length > props.terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={terminalCodes.split(\",\").length}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return terminalCodes;\r\n    }\r\n  };\r\n\r\n  const displayValues = (value, columnDetail) => {\r\n    if (columnDetail !== undefined && columnDetail !== null) {\r\n      if (typeof value === \"boolean\" || columnDetail.Name === \"Active\") {\r\n        if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n        else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n      } else if (value === \"\" || value === null || value === undefined) {\r\n        return value;\r\n      } else if (\r\n        (columnDetail.Name === \"TerminalCodes\" ||\r\n          columnDetail.PopOver === \"1\") &&\r\n        value !== null\r\n      ) {\r\n        return terminalPopOver(value);\r\n      }\r\n      // var columnType = columnDetails.find(function (detail) {\r\n      //   if (detail.Name === field) {\r\n      //     return detail;\r\n      //   }\r\n      // });\r\n      else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"DateTime\"\r\n      ) {\r\n        return (\r\n          new Date(value).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(value).toLocaleTimeString()\r\n        );\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Date\"\r\n      ) {\r\n        return new Date(value).toLocaleDateString();\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Time\"\r\n      ) {\r\n        return new Date(value).toLocaleTimeString();\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  //Initialize Column Picker\r\n  const initializedPicker = (picker) => {\r\n    if (props.columnPickerRequired) {\r\n      colPicker.current = picker;\r\n    }\r\n  };\r\n\r\n  // Column Picker Handler\r\n  const colPickerClickHandler = (event) => {\r\n    try {\r\n      let host = colPicker.current.hostElement;\r\n      if (!host.offsetHeight) {\r\n        showPopup(host, event.target, PopupPosition.Below, true, false);\r\n        colPicker.current.focus();\r\n      } else {\r\n        hidePopup(host, true, true);\r\n        flex.focus();\r\n      }\r\n\r\n      colPicker.current.focus();\r\n      event.preventDefault();\r\n    } catch (error) {\r\n      console.log(\"Error in Column Picker click event:\", error);\r\n    }\r\n  };\r\n\r\n  const saveGridState = () => {\r\n    try {\r\n      if (flex && gridFilter.current) {\r\n        // grid column, filter, sort and grouping settings\r\n        let gridState = {\r\n          columns: flex.columns.map((col) => {\r\n            return {\r\n              binding: col.binding,\r\n              visible: col.visible,\r\n            };\r\n          }),\r\n          filterDefinition: gridFilter.current.control.filterDefinition,\r\n          sortDescriptions: flex.collectionView.sortDescriptions.map(\r\n            (sortDesc) => {\r\n              return {\r\n                property: sortDesc.property,\r\n                ascending: sortDesc.ascending,\r\n              };\r\n            }\r\n          ),\r\n          groupDescriptions: flex.collectionView.groupDescriptions.map(\r\n            (group) => {\r\n              if (group.propertyName) {\r\n                return group.propertyName;\r\n              }\r\n\r\n              return null;\r\n            }\r\n          ),\r\n        };\r\n\r\n        // add class to grouped checkbox div element\r\n        if (\r\n          flex.collectionView.groupDescriptions &&\r\n          flex.collectionView.groupDescriptions.length > 0\r\n        ) {\r\n          let groupedCheckboxes = [\r\n            ...document.getElementsByClassName(\"wj-column-selector-group\"),\r\n          ];\r\n          groupedCheckboxes.forEach((chkbx) => {\r\n            chkbx.parentNode.parentNode.classList.add(\"wj-grouped-checkbox\");\r\n          });\r\n        }\r\n\r\n        // grid paging and search settings\r\n        let sessionState = {\r\n          pageIndex: flex.collectionView.pageIndex,\r\n          searchText: theSearch.current.control.text,\r\n        };\r\n\r\n        localStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(gridState)\r\n        );\r\n        sessionStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(sessionState)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in saving grid state\");\r\n    }\r\n  };\r\n\r\n  // customize grid filter text and dropdowns\r\n  const customizeFilterConditions = () => {\r\n    // localize the FlexGrid filter\r\n    let filter = wjCore.culture.FlexGridFilter,\r\n      operator = Operator;\r\n    wjCore.culture.FlexGridFilter.header = translator(\"WijmoGridFilterHeader\");\r\n    wjCore.culture.FlexGridFilter.ascending =\r\n      \"\\u2191 \" + translator(\"WijmoGridFilterAscending\");\r\n    wjCore.culture.FlexGridFilter.descending =\r\n      \"\\u2193 \" + translator(\"WijmoGridFilterDescending\");\r\n    wjCore.culture.FlexGridFilter.apply = translator(\"RoleAdminEdit_Apply\");\r\n    wjCore.culture.FlexGridFilter.clear = translator(\"OrderCreate_btnClear\");\r\n    wjCore.culture.FlexGridFilter.conditions = translator(\r\n      \"WijmoGridFilterCondition\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.values = translator(\"WijmoGridFilterValue\");\r\n    wjCore.culture.FlexGridFilter.search = translator(\r\n      \"LoadingDetailsView_SearchGrid\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.selectAll = translator(\r\n      \"WijmoGridFilterSelectAll\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.and = translator(\"WijmoGridFilterAnd\");\r\n    wjCore.culture.FlexGridFilter.or = translator(\"WijmoGridFilterOr\");\r\n    wjCore.culture.FlexGridFilter.cancel = translator(\"AccessCardInfo_Cancel\");\r\n    // wjCore.culture.FlexGridFilter.null = 'test';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.and = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.asc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dialog = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dsc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.edit = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op2 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.or = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.search = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val2 = '';\r\n\r\n    // localize FlexGrid filter operators\r\n    filter.stringOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterBeginsWith\"), op: operator.BW },\r\n      { name: translator(\"WijmoGridFilterEndsWith\"), op: operator.EW },\r\n      { name: translator(\"WijmoGridFilterContains\"), op: operator.CT },\r\n      { name: translator(\"WijmoGridFilterDoesNotContain\"), op: operator.NC },\r\n    ];\r\n    filter.numberOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterGreaterThan\"), op: operator.GT },\r\n      { name: translator(\"WijmoGridFilterLessThan\"), op: operator.LT },\r\n      {\r\n        name: translator(\"WijmoGridFilterGreaterThanOrEqual\"),\r\n        op: operator.GE,\r\n      },\r\n      { name: translator(\"WijmoGridFilterLessThanOrEqual\"), op: operator.LE },\r\n    ];\r\n    filter.dateOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterDateEarlierThan\"), op: operator.LT },\r\n      { name: translator(\"WijmoGridFilterDateLaterThan\"), op: operator.GT },\r\n    ];\r\n    filter.booleanOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n    ];\r\n  };\r\n\r\n  // set column width based on screen size\r\n  const getWidth = (columnDetails) => {\r\n    try {\r\n      const screenWidth = window.screen.width;\r\n      if (screenWidth < 1024) {\r\n        if (columnDetails.WidthPx && columnDetails.WidthPx !== \"\")\r\n          return parseInt(columnDetails.WidthPx);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in width:\", error);\r\n    }\r\n\r\n    return columnDetails.WidthPercentage.includes(\"*\")\r\n      ? columnDetails.WidthPercentage\r\n      : parseInt(columnDetails.WidthPercentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pl-1\">\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <React.Fragment>\r\n              <div className=\"row pl-0\">\r\n                <div className=\"col-10 col-sm-12 col-md-5 col-lg-6\">\r\n                  <FlexGridSearch\r\n                    class=\"ui single-input\"\r\n                    ref={theSearch}\r\n                    placeholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-10 col-sm-12 col-md-7 col-lg-6\">\r\n                  <div style={{ float: \"right\" }}>\r\n                    {props.columnPickerRequired ? (\r\n                      <Button\r\n                        id=\"colPicker\"\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        onClick={(event) => colPickerClickHandler(event)}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridColumnPicker\")}\r\n                        </div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          <Icon\r\n                            name=\"caret-down\"\r\n                            className=\"btnIcon\"\r\n                            size=\"small\"\r\n                          />\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.exportRequired ? (\r\n                      <Button\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        className=\"mt-3 mt-md-0\"\r\n                        onClick={exportExcel}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridExport\")}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            className=\"icon-Xls\"\r\n                            style={{\r\n                              fontSize: \"17px\",\r\n                              position: \"absolute\",\r\n                              top: \"3px\",\r\n                            }}\r\n                          ></span>\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tableScroll\">\r\n                {props.columnGroupingRequired ? (\r\n                  <GroupPanel\r\n                    className=\"group-panel\"\r\n                    grid={flex}\r\n                    placeholder={t(\"WijmoGridGroupPanelPlaceholder\")}\r\n                  />\r\n                ) : null}\r\n                <ErrorBoundary>\r\n                  <FlexGrid\r\n                    ref={theGrid}\r\n                    autoGenerateColumns={false}\r\n                    alternatingRowStep={0}\r\n                    autoRowHeights={true}\r\n                    headersVisibility=\"Column\"\r\n                    itemsSource={data}\r\n                    selectionMode={wjCore.asEnum(\"None\", wjGrid.SelectionMode)}\r\n                    initialized={gridInitialized}\r\n                    virtualizationThreshold={[0, 10000]}\r\n                    onUpdatedView={saveGridState}\r\n                  >\r\n                    <FlexGridFilter ref={gridFilter} />\r\n                    {props.columns.map((column) => {\r\n                      return (\r\n                        <FlexGridColumn\r\n                          header={t(column.Name)}\r\n                          key={column.Name}\r\n                          binding={column.Name}\r\n                          width={getWidth(column)}\r\n                          minWidth={100}\r\n                          isReadOnly={true}\r\n                          wordWrap={true}\r\n                          align=\"left\"\r\n                        >\r\n                          <FlexGridCellTemplate\r\n                            cellType=\"Cell\"\r\n                            template={(context) => {\r\n                              return (\r\n                                <span\r\n                                  style={\r\n                                    props.conditionalRowStyleCheck == null ||\r\n                                    !props.conditionalRowStyleCheck(\r\n                                      context.item\r\n                                    )\r\n                                      ? null\r\n                                      : { ...props.conditionalRowStyles }\r\n                                  }\r\n                                >\r\n                                  {displayValues(\r\n                                    context.item[column.Name],\r\n                                    column\r\n                                  )}\r\n                                </span>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FlexGridColumn>\r\n                      );\r\n                    })}\r\n                  </FlexGrid>\r\n                </ErrorBoundary>\r\n                {props.columnPickerRequired ? (\r\n                  <div className=\"column-picker-div\">\r\n                    <ListBox\r\n                      className=\"column-picker\"\r\n                      initialized={(picker) => initializedPicker(picker)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"row\">\r\n                <CollectionViewNavigator\r\n                  ref={pagingComponent}\r\n                  className=\"ml-auto mr-auto mt-3\"\r\n                  headerFormat={t(\"WijmoGridPagingTemplate\")}\r\n                  byPage={true}\r\n                  cv={data}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nWijmoGrid.propTypes = {\r\n  sourceData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  exportRequired: PropTypes.bool.isRequired,\r\n  exportFileName: PropTypes.string,\r\n  selectionRequired: PropTypes.bool,\r\n  columnPickerRequired: PropTypes.bool,\r\n  columnGroupingRequired: PropTypes.bool,\r\n  conditionalRowStyleCheck: PropTypes.func,\r\n  conditionalRowStyles: PropTypes.object,\r\n  rowsPerPage: PropTypes.number,\r\n  onSelectionHandle: PropTypes.func,\r\n  parentComponent: PropTypes.string.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  terminalsToShow: PropTypes.number,\r\n  singleSelection: PropTypes.bool,\r\n  selectedItems: PropTypes.array,\r\n};\r\n\r\nWijmoGrid.defaultProps = {\r\n  sourceData: [],\r\n  columns: [],\r\n  exportRequired: true,\r\n  exportFileName: \"Grid.xlsx\",\r\n  selectionRequired: false,\r\n  columnPickerRequired: false,\r\n  columnGroupingRequired: false,\r\n  rowsPerPage: 10,\r\n  terminalsToShow: 2,\r\n  singleSelection: false,\r\n  selectedItems: [],\r\n};\r\n\r\nexport default WijmoGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WijmoGrid from '../../UIBase/Common/WijmoGrid';\r\n\r\nconst WijmoGridComposite = (props) => {\r\n    return (\r\n        <WijmoGrid\r\n            sourceData={props.data}\r\n            columns={props.columns}\r\n            exportRequired={props.exportRequired}\r\n            exportFileName={props.exportFileName}\r\n            columnPickerRequired={props.columnPickerRequired}\r\n            selectionRequired={props.selectionRequired}\r\n            columnGroupingRequired={props.columnGroupingRequired}\r\n            conditionalRowStyleCheck={props.conditionalRowStyleCheck}\r\n            conditionalRowStyles={props.conditionalRowStyles}\r\n            rowsPerPage={props.rowsPerPage}\r\n            onSelectionHandle={props.onSelectionHandle}\r\n            onRowClick={props.onRowClick}\r\n            parentComponent={props.parentComponent}\r\n            terminalsToShow={props.terminalsToShow}\r\n            singleSelection={props.singleSelection}\r\n            selectedItems={props.selectedItems}\r\n        />\r\n    )\r\n}\r\n\r\nWijmoGridComposite.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n    exportRequired: PropTypes.bool.isRequired,\r\n    exportFileName: PropTypes.string,\r\n    selectionRequired: PropTypes.bool,\r\n    columnPickerRequired: PropTypes.bool,\r\n    columnGroupingRequired: PropTypes.bool,\r\n    conditionalRowStyleCheck: PropTypes.func,\r\n    conditionalRowStyles: PropTypes.object,\r\n    rowsPerPage: PropTypes.number,\r\n    onSelectionHandle: PropTypes.func,\r\n    parentComponent: PropTypes.string.isRequired,\r\n    onRowClick: PropTypes.func,\r\n    terminalsToShow: PropTypes.number,\r\n    singleSelection: PropTypes.bool,\r\n    selectedItems: PropTypes.array\r\n}\r\n\r\nexport default WijmoGridComposite;","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTruckReceiptSummaryPageComposite.propTypes = {\r\n  tableData: PropTypes.array.isRequired,\r\n  columnDetails: PropTypes.array.isRequired,\r\n  pageSize: PropTypes.number,\r\n  exportRequired:PropTypes.bool,\r\n  exportFileName:PropTypes.string,\r\n  columnPickerRequired:PropTypes.bool,\r\n  columnGroupingRequired:PropTypes.bool,\r\n  selectionRequired:PropTypes.bool,\r\n  terminalsToShow: PropTypes.number,\r\n  selectedItems: PropTypes.array.isRequired,\r\n  onSelectionChange: PropTypes.func.isRequired,\r\n  onRowClick: PropTypes.func.isRequired,\r\n  parentComponent:PropTypes.string,\r\n};\r\n\r\nTruckReceiptSummaryPageComposite.defaultProps = {\r\n  pageSize: 10,\r\n  terminalsToShow: 2,\r\n  tableData: [],\r\n  columnDetails: [],\r\n  selectedItems: [],\r\n};\r\n\r\nexport function TruckReceiptSummaryPageComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  selectionRequired,\r\n  terminalsToShow,\r\n  selectedItems,\r\n  onSelectionChange,\r\n  onRowClick,\r\n  parentComponent,\r\n}) {\r\n  return (\r\n    <WijmoGridComposite\r\n      data={tableData}\r\n      columns={columnDetails}\r\n      rowsPerPage={pageSize}\r\n      exportRequired={exportRequired}\r\n      exportFileName={exportFileName}\r\n      columnPickerRequired={columnPickerRequired}\r\n      columnGroupingRequired={columnGroupingRequired}\r\n      selectionRequired={selectionRequired}\r\n      selectedItems={selectedItems}\r\n      onSelectionHandle={onSelectionChange}\r\n      onRowClick={onRowClick}\r\n      parentComponent={parentComponent}\r\n      terminalsToShow={terminalsToShow}\r\n    ></WijmoGridComposite>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  functionGroups,\r\n  fnTruckReceipt,\r\n  fnKPIInformation,\r\n  fnCloseReceipt,\r\n  fnViewReceiptStatus,\r\n  fnPrintBOD,\r\n  fnPrintRAN,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { TruckReceiptSummaryPageComposite } from \"../Summary/TruckReceiptSummaryComposite\";\r\nimport TruckReceiptDetailsComposite from \"../Details/TruckReceiptDetailsComposite\";\r\nimport TruckReceiptSealDetailsComposite from \"../Details/TruckReceiptSealDetailsComposite\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TMTransactionFilters } from \"../../UIBase/Common/TMTransactionFilters\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport TransactionSummaryOperations from \"../Common/TransactionSummaryOperations\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport lodash from \"lodash\";\r\nimport ReportDetails from \"../../UIBase/Details/ReportDetails\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport TruckReceiptManualEntryDetailsComposite from \"../Details/TruckReceiptManualEntryDetailsComposite\";\r\nimport { TruckReceiptViewAuditTrailDetails } from \"../../UIBase/Details/TruckReceiptViewAuditTrailsDetails\";\r\nimport { TruckReceiptViewUnLoadingDetails } from \"../../UIBase/Details/TruckReceiptViewUnLoadingDetails\";\r\nimport { Modal, Button, Select, Checkbox, Input } from \"@scuf/common\";\r\nimport { kpiTruckReceiptList } from \"../../../JS/KPIPageName\";\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\n\r\nclass TruckReceiptComposite extends Component {\r\n  state = {\r\n    receipt: {},\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: true, delete: false, shareholder: true },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    selectedShareholder:\r\n      this.props.selectedShareholder === undefined ||\r\n      this.props.selectedShareholder === null ||\r\n      this.props.selectedShareholder === \"\"\r\n        ? this.props.userDetails.EntityResult.PrimaryShareholder\r\n        : this.props.selectedShareholder,\r\n    data: {},\r\n    terminalCodes: [],\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    dateError: \"\",\r\n    currentReceiptStatus: [],\r\n    shipmentNextOperations: [],\r\n    receiptType: \"\",\r\n    isManualEntry: false,\r\n    isViewAuditTrail: false,\r\n    modAuditTrailList: [],\r\n    auditTrailList: [],\r\n    isViewUnloading: false,\r\n    ModViewUnloadDetails: [],\r\n    isRecordWeight: false,\r\n    recordWeightList: [],\r\n    weighBridgeCode: \"\",\r\n    scadaValue: \"\",\r\n    allowOutofRangeTW: false,\r\n    expandedRows: [],\r\n    showReport: false,\r\n    truckReceiptKPIList: [],\r\n    drawerStatus: false,\r\n    isCloseReceipt: false,\r\n    reasonForClosure: \"\",\r\n    activityInfo: [],\r\n    isSealCompartments: false,\r\n    sealCompartments: [],\r\n    showDeleteAuthenticationLayout: false,\r\n    showAuthorizeToUnLoadAuthenticationLayout: false,\r\n    showAllowToUnLoadAuthenticationLayout: false,\r\n    showCloseReceiptAuthenticationLayout: false,\r\n    showViewBODAuthenticationLayout: false,\r\n    showPrintBODAuthenticationLayout: false,\r\n    showRANAuthenticationLayout: false,\r\n    isAllocateBay: false,\r\n    bayData: [],\r\n    selectBay: [],\r\n    isDeAllocateBay: false,\r\n    ReceiptBay: \"\",\r\n  };\r\n\r\n  componentName = \"TruckReceiptComponent\";\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.shareholder = false;\r\n\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: {},\r\n        operationsVisibilty,\r\n        isViewAuditTrail: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"TruckReceiptComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n\r\n  GetReceiptActivityInfo() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetReceiptActivityInfo,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ activityInfo: response.data.EntityResult });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting receipt activityInfo:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in GetReceiptActivityInfo:\", error);\r\n    }\r\n  }\r\n\r\n  handleBack = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnTruckReceipt\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.shareholder = true;\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n        isManualEntry: false,\r\n        drawerStatus: false,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getTruckReceiptList(this.state.selectedShareholder);\r\n      this.getKPIList(this.state.selectedShareholder);\r\n    } catch (error) {\r\n      console.log(\"TruckReceiptComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n  toggleExpand = (data, open) => {\r\n    let expandedRows = this.state.expandedRows;\r\n    let expandedRowIndex = expandedRows.findIndex(\r\n      (item) => item.SeqNumber === data.SeqNumber\r\n    );\r\n    if (open) {\r\n      expandedRows.splice(expandedRowIndex, 1);\r\n    } else {\r\n      expandedRows.push(data);\r\n    }\r\n    this.setState({ expandedRows });\r\n  };\r\n  handleDelete = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n      var deleteReceiptKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        var shCode = this.state.selectedShareholder;\r\n        var ReceiptCode = this.state.selectedItems[i][\"Common_Code\"];\r\n        var keyData = {\r\n          keyDataCode: 0,\r\n          ShareHolderCode: shCode,\r\n          KeyCodes: [{ Key: KeyCodes.receiptCode, Value: ReceiptCode }],\r\n        };\r\n        deleteReceiptKeys.push(keyData);\r\n      }\r\n      axios(\r\n        RestAPIs.DeleteReceipt,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteReceiptKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          var isRefreshDataRequire = result.isSuccess;\r\n\r\n          if (\r\n            result.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            var failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n          var notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"Receipt_DeletionStatus\",\r\n            [\"ReceiptCode\"]\r\n          );\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({ isReadyToRender: false });\r\n            this.handleAuthenticationClose();\r\n            this.getTruckReceiptList(this.state.selectedShareholder);\r\n            this.getKPIList(this.state.selectedShareholder);\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n            });\r\n          } else {\r\n            operationsVisibilty.delete = true;\r\n            this.setState({ operationsVisibilty });\r\n            this.handleAuthenticationClose();\r\n          }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0)\r\n              messageResult.keyFields[0] = \"Receipt_Code\";\r\n          });\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error occured while deleting:\" + error);\r\n          var { operationsVisibilty } = { ...this.state };\r\n          operationsVisibilty.delete = true;\r\n          this.setState({ operationsVisibilty });\r\n          this.handleAuthenticationClose();\r\n        });\r\n    } catch (error) {\r\n      console.log(\"TankComposite:Error occured on handleDelet\", error);\r\n    }\r\n  };\r\n  handleRowClick = (item) => {\r\n    try {\r\n      let { operationsVisibilty, activityInfo } = { ...this.state };\r\n      let receiptDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n            Constants.ReceiptActivityInfo.RECEIPT_ENABLE_DELETE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      if (receiptDeleteInfo === undefined || receiptDeleteInfo.length === 0)\r\n        var receiptDeleteStates = [];\r\n      else receiptDeleteStates = receiptDeleteInfo[0].ReceiptStates;\r\n\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnTruckReceipt\r\n      );\r\n      operationsVisibilty.delete = this.props.userDetails.EntityResult\r\n        .IsWebPortalUser\r\n        ? false\r\n        : receiptDeleteStates.indexOf(item.Common_Status.toUpperCase()) > -1 &&\r\n          Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.remove,\r\n            fnTruckReceipt\r\n          );\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: item,\r\n        selectedItems: [item],\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckReceiptComposite:Error occured on handleRowClick\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getReceipt(receiptRow) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.receiptCode,\r\n        value: receiptRow.Common_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.state.selectedShareholder,\r\n      keyDataCode: KeyCodes.receiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetReceipt,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              receipt: result.EntityResult,\r\n            },\r\n            () => {\r\n              this.getReciptStatuses(receiptRow);\r\n              // this.GetViewAllReceiptCustomData(receiptRow)\r\n              this.GetBayByTrnsaction(\r\n                result.EntityResult.ReceiptCode,\r\n                \"RECEIPT\",\r\n                result.EntityResult.ShareholderCode,\r\n                () => {\r\n                  this.getReciptsStatusOperations(result.EntityResult);\r\n                }\r\n              );\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting receipt:\", error, receiptRow);\r\n      });\r\n  }\r\n  handleSelection = (items) => {\r\n    try {\r\n      var { operationsVisibilty, drawerStatus, activityInfo } = {\r\n        ...this.state,\r\n      };\r\n      let receiptDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n            Constants.ReceiptActivityInfo.RECEIPT_ENABLE_DELETE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      if (receiptDeleteInfo === undefined || receiptDeleteInfo.length === 0)\r\n        var receiptDeleteStates = [];\r\n      else receiptDeleteStates = receiptDeleteInfo[0].ReceiptStates;\r\n\r\n      let isReady =\r\n        items.findIndex(\r\n          (x) => receiptDeleteStates.indexOf(x.Common_Status.toUpperCase()) < 0\r\n        ) >= 0\r\n          ? false\r\n          : true;\r\n      operationsVisibilty.delete =\r\n        isReady &&\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnTruckReceipt\r\n        );\r\n      if (\r\n        items.length === 1\r\n        // this.props.userDetails.EntityResult.IsEnterpriseNode === false\r\n      ) {\r\n        this.getReceipt(items[0]);\r\n        if (items.length !== 1) {\r\n          drawerStatus = true;\r\n        } else {\r\n          drawerStatus = false;\r\n        }\r\n        this.setState({ isOperation: true, drawerStatus });\r\n      }\r\n      this.setState({ selectedItems: items, operationsVisibilty });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckReceiptComposite:Error occured on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      let { operationsVisibilty, activityInfo } = { ...this.state };\r\n      let receiptDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n            Constants.ReceiptActivityInfo.RECEIPT_ENABLE_DELETE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      if (receiptDeleteInfo === undefined || receiptDeleteInfo.length === 0)\r\n        var receiptDeleteStates = [];\r\n      else receiptDeleteStates = receiptDeleteInfo[0].ReceiptStates;\r\n\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnTruckReceipt\r\n        );\r\n        operationsVisibilty.delete = this.props.userDetails.EntityResult\r\n          .IsWebPortalUser\r\n          ? false\r\n          : receiptDeleteStates.indexOf(data.ReceiptStatus.toUpperCase()) >\r\n              -1 &&\r\n            Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.remove,\r\n              fnTruckReceipt\r\n            );\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            Common_Code: data.ReceiptCode,\r\n            Common_Shareholder: data.ShareholderCode,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"TruckReceiptComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  getTruckReceiptList(shareholder) {\r\n    this.setState({ isReadyToRender: false });\r\n    let fromDate = new Date(this.state.fromDate);\r\n    let toDate = new Date(this.state.toDate);\r\n    fromDate.setHours(0, 0, 0);\r\n    toDate.setHours(23, 59, 59);\r\n\r\n    let obj = {\r\n      ShareholderCode: shareholder,\r\n      startRange: fromDate,\r\n      endRange: toDate,\r\n    };\r\n    // axios(\r\n    //     RestAPIs.GetReceiptListForRole + shareholder\r\n    //     + \"&startRange=\" + fromDate.toLocaleString()\r\n    //     + \"&endRange=\" + toDate.toLocaleString(),\r\n    //     Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    // )\r\n    axios(\r\n      RestAPIs.GetReceiptListForRole,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            { data: result.EntityResult, isReadyToRender: true },\r\n            () => {\r\n              if (\r\n                this.state.isOperation === true &&\r\n                this.state.selectedItems.length === 1\r\n              ) {\r\n                let selectedItem = this.state.selectedItems[0];\r\n                var updatedselectedItem = result.EntityResult.Table.filter(\r\n                  function (item) {\r\n                    return item.Common_Code === selectedItem.Common_Code;\r\n                  }\r\n                );\r\n\r\n                let { operationsVisibilty, activityInfo } = { ...this.state };\r\n                let receiptDeleteInfo = activityInfo.filter((item) => {\r\n                  return (\r\n                    item.ActivityCode ===\r\n                      Constants.ReceiptActivityInfo.RECEIPT_ENABLE_DELETE &&\r\n                    item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n                  );\r\n                });\r\n\r\n                if (\r\n                  receiptDeleteInfo === undefined ||\r\n                  receiptDeleteInfo.length === 0\r\n                )\r\n                  var receiptDeleteStates = [];\r\n                else receiptDeleteStates = receiptDeleteInfo[0].ReceiptStates;\r\n\r\n                operationsVisibilty.delete = this.props.userDetails.EntityResult\r\n                  .IsWebPortalUser\r\n                  ? false\r\n                  : receiptDeleteStates.indexOf(\r\n                      updatedselectedItem[0].Common_Status.toUpperCase()\r\n                    ) > -1 &&\r\n                    Utilities.isInFunction(\r\n                      this.props.userDetails.EntityResult.FunctionsList,\r\n                      functionGroups.remove,\r\n                      fnTruckReceipt\r\n                    );\r\n                this.setState({\r\n                  selectedItems: updatedselectedItem,\r\n                  operationsVisibilty,\r\n                });\r\n                this.getReceipt(updatedselectedItem[0]);\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error in GetReceiptListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: [], isReadyToRender: true });\r\n        console.log(\"Error while getting Truck Receipt List:\", error);\r\n      });\r\n  }\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      //let { operationsVisibilty } = { ...this.state };\r\n      // operationsVisibilty.delete = false;\r\n      this.setState({\r\n        selectedShareholder: shareholder,\r\n        isReadyToRender: false,\r\n        selectedItems: [],\r\n        //operationsVisibilty,\r\n      });\r\n      this.getTruckReceiptList(shareholder);\r\n      this.getTerminalsList(shareholder);\r\n      this.getKPIList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckReceiptComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  getReciptsStatusOperations(receiptItem) {\r\n    try {\r\n      var receiptStatus = receiptItem.ReceiptStatus;\r\n      var isVolumneBased = receiptItem.IsVolumeBased;\r\n      var selectedShareholder = this.state.selectedShareholder;\r\n      axios(\r\n        RestAPIs.GetReceiptOperations +\r\n          \"?receiptStatus=\" +\r\n          receiptStatus +\r\n          \"&IsVolumneBased=\" +\r\n          isVolumneBased +\r\n          \"&shareholder=\" +\r\n          selectedShareholder,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (\r\n            result.EntityResult.ViewAllocateBay_DeallocateBay === true &&\r\n            this.state.ReceiptBay !== null &&\r\n            this.state.ReceiptBay !== undefined &&\r\n            this.state.ReceiptBay !== \"\"\r\n          ) {\r\n            result.EntityResult.ViewAllocateBay_DeallocateBay = true;\r\n          } else if (\r\n            result.EntityResult.ViewAllocateBay_DeallocateBay === true &&\r\n            (this.state.ReceiptBay === null ||\r\n              this.state.ReceiptBay === undefined ||\r\n              this.state.ReceiptBay === \"\")\r\n          ) {\r\n            result.EntityResult.ViewAllocateBay_DeallocateBay = false;\r\n          }\r\n          let nextOperations = [];\r\n          Object.keys(result.EntityResult).forEach((operation) => {\r\n            if (result.EntityResult[operation]) nextOperations.push(operation);\r\n          });\r\n\r\n          this.setState({ shipmentNextOperations: nextOperations });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting getReceiptStatusOperations:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.GetReceiptActivityInfo();\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnTruckReceipt\r\n      );\r\n      this.setState({\r\n        operationsVisibilty,\r\n      });\r\n      this.getTruckReceiptList(this.state.selectedShareholder);\r\n      this.getTerminalsList(this.state.selectedShareholder);\r\n      this.getKPIList(this.state.selectedShareholder);\r\n      // this.GetViewAllReceiptCustomData();\r\n      // this.CheckReceiptDeleteAllowed();\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckReceiptComposite:Error occured on ComponentDidMount\",\r\n        error\r\n      );\r\n    }\r\n    // clear session storage on window refresh event\r\n    window.addEventListener(\"beforeunload\", this.clearStorage);\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    // clear session storage\r\n    this.clearStorage();\r\n\r\n    // remove event listener\r\n    window.removeEventListener(\"beforeunload\", this.clearStorage);\r\n  };\r\n\r\n  clearStorage = () => {\r\n    sessionStorage.removeItem(this.componentName + \"GridState\");\r\n  };\r\n\r\n  getTerminalsList(shareholder) {\r\n    try {\r\n      if (shareholder !== null && shareholder !== \"\") {\r\n        axios(\r\n          RestAPIs.GetTerminals,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            [shareholder],\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ terminalCodes: response.data.EntityResult });\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ terminalCodes: [] });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckReceiptComposite:Error occured on getTerminalsList\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  //Get KPI for Truck Receipt\r\n  getKPIList(shareholder) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      var notification = {\r\n        message: \"\",\r\n        messageType: \"critical\",\r\n        messageResultDetails: [],\r\n      };\r\n      let objKPIRequestData = {\r\n        PageName: kpiTruckReceiptList,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder }],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              truckReceiptKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ truckReceiptKPIList: [] });\r\n            console.log(\"Error in truck Receipt KPIList:\", result.ErrorList);\r\n            notification.messageResultDetails.push({\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: result.ErrorList[0],\r\n            });\r\n          }\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting truck Receipt KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n  handleRangeSelect = ({ to, from }) => {\r\n    if (to !== undefined) this.setState({ toDate: to });\r\n    if (from !== undefined) this.setState({ fromDate: from });\r\n  };\r\n  handleDateTextChange = (value, error) => {\r\n    if (value === \"\")\r\n      this.setState({ dateError: \"\", toDate: \"\", fromDate: \"\" });\r\n    if (error !== null && error !== \"\")\r\n      this.setState({\r\n        dateError: \"Common_InvalidDate\",\r\n        toDate: \"\",\r\n        fromDate: \"\",\r\n      });\r\n    else {\r\n      this.setState({ dateError: \"\", toDate: value.to, fromDate: value.from });\r\n    }\r\n  };\r\n  handleLoadReceipts = () => {\r\n    let error = Utilities.validateDateRange(\r\n      this.state.toDate,\r\n      this.state.fromDate\r\n    );\r\n\r\n    if (error !== \"\") {\r\n      this.setState({ dateError: error });\r\n    } else {\r\n      this.setState({ dateError: \"\" });\r\n      this.getTruckReceiptList(this.state.selectedShareholder);\r\n    }\r\n  };\r\n  onBack = () => {\r\n    let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n    this.setState({\r\n      isManualEntry: false,\r\n      isViewAuditTrail: false,\r\n      isDetails: false,\r\n      operationsVisibilty,\r\n      isViewUnloading: false,\r\n      isReadyToRender: false,\r\n    });\r\n    this.getTruckReceiptList(this.state.selectedShareholder);\r\n  };\r\n  getReciptStatuses(receiptRow) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetReceiptAllStatuses +\r\n          \"?shareholderCode=\" +\r\n          this.state.selectedShareholder +\r\n          \"&receiptCode=\" +\r\n          receiptRow.Common_Code,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          this.setState({\r\n            currentReceiptStatus: result.EntityResult,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting getReceiptStatuses:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  handleAuthorizeToUnLoad(receiptItem, shCode, token, callback) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptStatus,\r\n        value: receiptItem.ReceiptStatus,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptCode,\r\n        value: receiptItem.ReceiptCode,\r\n      },\r\n      {\r\n        key: KeyCodes.driverCode,\r\n        value: receiptItem.DriverCode,\r\n      },\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: receiptItem.VehicleCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.receiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.ReceiptAuthorizeToUnload,\r\n      Utilities.getAuthenticationObjectforPost(obj, token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while AuthorizeToLoad:\", error);\r\n      });\r\n  }\r\n  handleAllowToLoad(receiptItem, shCode, token, callback) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptStatus,\r\n        value: receiptItem.ReceiptStatus,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptCode,\r\n        value: receiptItem.ReceiptCode,\r\n      },\r\n      {\r\n        key: KeyCodes.driverCode,\r\n        value: receiptItem.DriverCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.receiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.ReceiptAllowToUnLoad,\r\n      Utilities.getAuthenticationObjectforPost(obj, token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while AllowToLoad:\", error);\r\n      });\r\n  }\r\n  handleViewAuditTrail(receiptItem, shCode, token, callback) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptStatus,\r\n        value: receiptItem.ReceiptStatus,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptCode,\r\n        value: receiptItem.ReceiptCode,\r\n      },\r\n      {\r\n        key: KeyCodes.driverCode,\r\n        value: receiptItem.DriverCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.receiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetTruckReceiptAuditTrailList,\r\n      Utilities.getAuthenticationObjectforPost(obj, token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting handleViewAuditTrail:\", error);\r\n      });\r\n  }\r\n  handleViewUnLoading(receiptItem, shCode, token, callback) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptStatus,\r\n        value: receiptItem.ReceiptStatus,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptCode,\r\n        value: receiptItem.ReceiptCode,\r\n      },\r\n      {\r\n        key: KeyCodes.driverCode,\r\n        value: receiptItem.DriverCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.receiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.ViewReceiptUnloading,\r\n      Utilities.getAuthenticationObjectforPost(obj, token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while AllowToLoad:\", error);\r\n      });\r\n  }\r\n  handleCloseReceipttModal = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isCloseReceipt} size=\"mini\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h3>\r\n                  {t(\"Receipt_ForceCloseHeader\") +\r\n                    \" : \" +\r\n                    this.state.receipt.ReceiptCode}\r\n                </h3>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <div className=\"col col-lg-12\">\r\n                  <Input\r\n                    fluid\r\n                    value={this.state.reasonForClosure}\r\n                    label={t(\"ViewReceipt_Reason\")}\r\n                    reserveSpace={false}\r\n                    onChange={(value) => {\r\n                      this.setState({ reasonForClosure: value });\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"AccessCardInfo_Ok\")}\r\n                onClick={() => {\r\n                  if (this.state.reasonForClosure === \"\") {\r\n                    let notification = {\r\n                      messageType: \"critical\",\r\n                      message: \"ViewReceipt_CloseSuccess\",\r\n                      messageResultDetails: [\r\n                        {\r\n                          keyFields: [\"ReceiptCode\"],\r\n                          keyValues: [this.state.receipt.ReceiptCode],\r\n                          isSuccess: false,\r\n                          errorMessage: \"Enter_Receipt_ReasonForCloseure\",\r\n                        },\r\n                      ],\r\n                    };\r\n\r\n                    toast(\r\n                      <ErrorBoundary>\r\n                        <NotifyEvent\r\n                          notificationMessage={notification}\r\n                        ></NotifyEvent>\r\n                      </ErrorBoundary>,\r\n                      {\r\n                        autoClose:\r\n                          notification.messageType === \"success\"\r\n                            ? 10000\r\n                            : false,\r\n                      }\r\n                    );\r\n                  } else\r\n                    this.setState({ isCloseReceipt: false }, () => {\r\n                      this.closeReceipt();\r\n                    });\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  this.setState({\r\n                    isCloseReceipt: false,\r\n                    reasonForClosure: \"\",\r\n                  });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  closeReceipt = () => {\r\n    let showCloseReceiptAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showCloseReceiptAuthenticationLayout }, () => {\r\n      if (showCloseReceiptAuthenticationLayout === false) {\r\n        this.handleReceiptClose();\r\n      }\r\n    });\r\n  };\r\n\r\n  handleReceiptClose = () => {\r\n    this.handleAuthenticationClose();\r\n    try {\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"ViewReceipt_CloseSuccess\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"ReceiptCode\"],\r\n            keyValues: [this.state.receipt.ReceiptCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.shareholderCode,\r\n          value: this.state.selectedShareholder,\r\n        },\r\n        {\r\n          key: KeyCodes.receiptStatus,\r\n          value: this.state.receipt.ReceiptStatus,\r\n        },\r\n        {\r\n          key: KeyCodes.receiptCode,\r\n          value: this.state.receipt.ReceiptCode,\r\n        },\r\n        {\r\n          key: KeyCodes.driverCode,\r\n          value: this.state.receipt.DriverCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: this.state.selectedShareholder,\r\n        keyDataCode: KeyCodes.receiptCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.ReceiptClose,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          if (result.IsSuccess === true) {\r\n            this.getTruckReceiptList(this.state.selectedShareholder);\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n          }\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while ReceiptClose:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while closing the Receipt:\", error);\r\n    }\r\n  };\r\n  getRecordWeight = (receiptItem, shCode, token, callback) => {\r\n    axios(\r\n      RestAPIs.GetWeighBridgeForReceipt,\r\n      Utilities.getAuthenticationObjectforGet(token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            isRecordWeight: true,\r\n            recordWeightList: result.EntityResult,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while AllowToLoad:\", error);\r\n      });\r\n  };\r\n\r\n  RecordLadenWeight = () => {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.weighBridgeCode,\r\n          value: this.state.weighBridgeCode,\r\n        },\r\n        {\r\n          key: KeyCodes.weight,\r\n          value: this.state.scadaValue,\r\n        },\r\n        {\r\n          key: KeyCodes.vehicleCode,\r\n          value: this.state.receipt.VehicleCode,\r\n        },\r\n        {\r\n          key: KeyCodes.receiptCode,\r\n          value: this.state.receipt.ReceiptCode,\r\n        },\r\n        {\r\n          key: KeyCodes.outOfToleranceAllowed,\r\n          value: this.state.allowOutofRangeTW,\r\n        },\r\n      ];\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"ViewReceiptList_RecordWeight\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"ReceiptCode\"],\r\n            keyValues: [this.state.receipt.ReceiptCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      var obj = {\r\n        ShareHolderCode: this.state.selectedShareholder,\r\n        keyDataCode: KeyCodes.weighBridgeCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.ReceiptRecordLadenWeight,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          notification.messageType = response.data.IsSuccess\r\n            ? \"success\"\r\n            : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess =\r\n            response.data.IsSuccess;\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ isRecordWeight: false }, () => {\r\n              this.getTruckReceiptList(this.state.selectedShareholder);\r\n            });\r\n          }\r\n          notification.messageResultDetails[0].errorMessage =\r\n            response.data.ErrorList[0];\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while recording laden weight:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in GetScadaValue\");\r\n    }\r\n  };\r\n  RecordTareWeight = () => {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.weighBridgeCode,\r\n          value: this.state.weighBridgeCode,\r\n        },\r\n        {\r\n          key: KeyCodes.weight,\r\n          value: this.state.scadaValue,\r\n        },\r\n        {\r\n          key: KeyCodes.vehicleCode,\r\n          value: this.state.receipt.VehicleCode,\r\n        },\r\n        {\r\n          key: KeyCodes.receiptCode,\r\n          value: this.state.receipt.ReceiptCode,\r\n        },\r\n      ];\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"ViewReceiptList_RecordWeight\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"ReceiptCode\"],\r\n            keyValues: [this.state.receipt.ReceiptCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      var obj = {\r\n        ShareHolderCode: this.state.selectedShareholder,\r\n        keyDataCode: KeyCodes.weighBridgeCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.ReceiptRecordTareWeight,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          notification.messageType = response.data.IsSuccess\r\n            ? \"success\"\r\n            : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess =\r\n            response.data.IsSuccess;\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ isRecordWeight: false }, () => {\r\n              this.getTruckReceiptList(this.state.selectedShareholder);\r\n            });\r\n          }\r\n          notification.messageResultDetails[0].errorMessage =\r\n            response.data.ErrorList[0];\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while recording tare weight:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in GetScadaValue\");\r\n    }\r\n  };\r\n  getScadaValue = () => {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.weighBridgeCode,\r\n          value: this.state.weighBridgeCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.weighBridgeCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.ReadWBScadaValue,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let notification = {\r\n            messageType: \"critical\",\r\n            message: \"ViewAllShipment_Record_Weight\",\r\n            messageResultDetails: [\r\n              {\r\n                keyFields: [\"ReceiptCode\"],\r\n                keyValues: [this.state.receipt.ReceiptCode],\r\n                isSuccess: false,\r\n                errorMessage: \"\",\r\n              },\r\n            ],\r\n          };\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ scadaValue: response.data.EntityResult });\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              response.data.ErrorList[0];\r\n\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting weigh brdige Scada value:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in GetScadaValue\");\r\n    }\r\n  };\r\n  handleAllowOutOfRangeTW = (cellData) => {\r\n    this.setState({ allowOutofRangeTW: cellData });\r\n  };\r\n  setWeighBridgeValue = (cellData) => {\r\n    this.setState({ weighBridgeCode: cellData });\r\n  };\r\n\r\n  handleSealNoInput = (data) => {\r\n    let cellInfo = data.rowData;\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={cellInfo.SealNo}\r\n        disabled={false}\r\n        onChange={(celldata) => {\r\n          let sealCompartments = lodash.cloneDeep(this.state.sealCompartments);\r\n\r\n          let index = sealCompartments.findIndex((comp) => {\r\n            return (\r\n              comp.CompartmentSeqNoInVehicle ===\r\n              cellInfo.CompartmentSeqNoInVehicle\r\n            );\r\n          });\r\n\r\n          if (index >= 0) {\r\n            sealCompartments[index].SealNo = celldata;\r\n          }\r\n\r\n          this.setState({ sealCompartments });\r\n        }}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  handleSealCompartments(receiptCode, shCode, token, callback) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptCode,\r\n        value: receiptCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.shipmentCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetSealCompartmentsforReceipt,\r\n      Utilities.getAuthenticationObjectforPost(obj, token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while GetSealCompartmentsforReceipt:\", error);\r\n      });\r\n  }\r\n\r\n  handleSealClose = () => {\r\n    this.setState({\r\n      isSealCompartments: false,\r\n      sealCompartments: [],\r\n    });\r\n  };\r\n\r\n  handleRecordWeight = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isRecordWeight} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h3>\r\n                  {t(\"ViewReceipt_RecordWeightReceipt\") +\r\n                    \" : \" +\r\n                    this.state.receipt.ReceiptCode}\r\n                </h3>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <div className=\"col col-lg-9\">\r\n                  <Select\r\n                    fluid\r\n                    placeholder={t(\"ViewReceipt_WBMandatory\")}\r\n                    label={t(\"ViewReceipt_WeighBridgeCode\")}\r\n                    value={this.state.weighBridgeCode}\r\n                    options={Utilities.transferListtoOptions(\r\n                      this.state.recordWeightList\r\n                    )}\r\n                    //onChange={(cellData) => this.setWeighBridgeValue(cellData)}\r\n                    onChange={(cellData) => {\r\n                      this.setState({ weighBridgeCode: cellData }, () =>\r\n                        this.getScadaValue()\r\n                      );\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"shipmentRecordWeightButtonDiv\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    size=\"small\"\r\n                    content={t(\"ViewReceipt_ReadWeight\")}\r\n                    className=\"shipmentRecordWeightButton\"\r\n                    onClick={() => this.getScadaValue()}\r\n                    disabled={\r\n                      this.state.weighBridgeCode === null ||\r\n                      this.state.weighBridgeCode === \"\" ||\r\n                      this.state.weighBridgeCode === undefined\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <div className=\"col col-lg-12\">\r\n                  <Input\r\n                    fluid\r\n                    value={this.state.scadaValue}\r\n                    label={t(\"ViewReceipt_Weight\")}\r\n                    reserveSpace={false}\r\n                    disabled={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <div className=\"col col-lg-12\">\r\n                  <Checkbox\r\n                    className=\"LabelEnabled\"\r\n                    label={t(\"ViewReceipt_AllowOutOfTolerance\")}\r\n                    checked={this.state.allowOutofRangeTW}\r\n                    onChange={(cellData) =>\r\n                      this.handleAllowOutOfRangeTW(cellData)\r\n                    }\r\n                    disabled={false}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"ViewReceipt_RecordTareWeight\")}\r\n                className=\"shipmentRecordWeightOtherbuttons\"\r\n                onClick={() => this.RecordTareWeight()}\r\n                disabled={\r\n                  this.state.scadaValue === null ||\r\n                  this.state.scadaValue === \"\" ||\r\n                  this.state.scadaValue === undefined\r\n                    ? true\r\n                    : false\r\n                }\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"ViewReceipt_RecordLadenWeight\")}\r\n                className=\"shipmentRecordWeightOtherbuttons\"\r\n                onClick={() => this.RecordLadenWeight()}\r\n                disabled={\r\n                  this.state.scadaValue === null ||\r\n                  this.state.scadaValue === \"\" ||\r\n                  this.state.scadaValue === undefined\r\n                    ? true\r\n                    : false\r\n                }\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Cancel\")}\r\n                className=\"shipmentRecordWeightOtherbuttons\"\r\n                onClick={() => {\r\n                  this.setState({ isRecordWeight: false });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n  handlePrintRAN = (receiptItem, shCode, token, callback) => {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptStatus,\r\n        value: receiptItem.ReceiptStatus,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptCode,\r\n        value: receiptItem.ReceiptCode,\r\n      },\r\n      {\r\n        key: KeyCodes.driverCode,\r\n        value: receiptItem.DriverCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.receiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.ReceiptPrintRAN,\r\n      Utilities.getAuthenticationObjectforPost(obj, token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while AllowToLoad:\", error);\r\n      });\r\n  };\r\n  handlePrintBOD = (receiptItem, shCode, token, callback) => {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptStatus,\r\n        value: receiptItem.ReceiptStatus,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptCode,\r\n        value: receiptItem.ReceiptCode,\r\n      },\r\n      {\r\n        key: KeyCodes.driverCode,\r\n        value: receiptItem.DriverCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.receiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.ReceiptPrintBOD,\r\n      Utilities.getAuthenticationObjectforPost(obj, token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while AllowToLoad:\", error);\r\n      });\r\n  };\r\n  handleSendBOD = (receiptItem, shCode, token, callback) => {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptStatus,\r\n        value: receiptItem.ReceiptStatus,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptCode,\r\n        value: receiptItem.ReceiptCode,\r\n      },\r\n      {\r\n        key: KeyCodes.driverCode,\r\n        value: receiptItem.DriverCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.receiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.ReceiptSendBOD,\r\n      Utilities.getAuthenticationObjectforPost(obj, token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while AllowToLoad:\", error);\r\n      });\r\n  };\r\n  handleBSIOutbound = (receiptItem, shCode, token, callback) => {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shCode,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptStatus,\r\n        value: receiptItem.ReceiptStatus,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptCode,\r\n        value: receiptItem.ReceiptCode,\r\n      },\r\n      {\r\n        key: KeyCodes.driverCode,\r\n        value: receiptItem.DriverCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shCode,\r\n      keyDataCode: KeyCodes.receiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.ReceiptBSIOutboundRegenerate,\r\n      Utilities.getAuthenticationObjectforPost(obj, token)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        callback(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while AllowToLoad:\", error);\r\n      });\r\n  };\r\n\r\n  handleModalBack = () => {\r\n    this.setState({ showReport: false });\r\n  };\r\n  renderModal() {\r\n    let path = null;\r\n    if (this.props.userDetails.EntityResult.IsArchived) {\r\n      path = \"TM/\" + Constants.TMReportArchive + \"/\" + \"TMBOD\";\r\n    } else {\r\n      path = \"TM/\" + Constants.TMReports + \"/\" + \"TMBOD\";\r\n    }\r\n    let paramValues = {\r\n      Culture: this.props.userDetails.EntityResult.UICulture,\r\n      Shareholder: this.state.selectedShareholder,\r\n      ReceiptCode:\r\n        this.state.selectedItems.length === 1\r\n          ? this.state.selectedItems[0].Common_Code\r\n          : this.state.selectedRow.Common_Code,\r\n    };\r\n\r\n    return (\r\n      <ReportDetails\r\n        showReport={this.state.showReport}\r\n        handleBack={this.handleModalBack}\r\n        handleModalClose={this.handleModalBack}\r\n        // proxyServerHost=\"http://epksr5115dit:3625/TMWebAPI/\"\r\n        proxyServerHost={RestAPIs.WebAPIURL}\r\n        reportServiceHost={this.reportServiceURI}\r\n        filePath={path}\r\n        parameters={paramValues}\r\n      />\r\n    );\r\n  }\r\n\r\n  handleViewBOD = () => {\r\n    this.handleAuthenticationClose();\r\n    if (this.reportServiceURI === undefined) {\r\n      axios(\r\n        RestAPIs.GetReportServiceURI,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        if (response.data.IsSuccess) {\r\n          this.reportServiceURI = response.data.EntityResult;\r\n          this.setState({ showReport: true });\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ showReport: true });\r\n    }\r\n  };\r\n\r\n  authorizeToUnLoadOnClick = () => {\r\n    let showAuthorizeToUnLoadAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showAuthorizeToUnLoadAuthenticationLayout }, () => {\r\n      if (showAuthorizeToUnLoadAuthenticationLayout === false) {\r\n        this.authorizeToUnLoad();\r\n      }\r\n    });\r\n  };\r\n\r\n  authorizeToUnLoad = () => {\r\n    this.handleAuthenticationClose();\r\n\r\n    let receipt = lodash.cloneDeep(this.state.receipt);\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewReceipt_AuthorizeUnLoad_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ReceiptDetail_ReceiptNumber\"],\r\n          keyValues: [receipt.ReceiptCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.handleAuthorizeToUnLoad(\r\n      lodash.cloneDeep(this.state.receipt),\r\n      this.state.selectedShareholder,\r\n      this.props.tokenDetails.tokenInfo,\r\n      (result) => {\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getTruckReceiptList(this.state.selectedShareholder);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  allowToUnLoadOnClick = () => {\r\n    let showAllowToUnLoadAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showAllowToUnLoadAuthenticationLayout }, () => {\r\n      if (showAllowToUnLoadAuthenticationLayout === false) {\r\n        this.allowToUnLoad();\r\n      }\r\n    });\r\n  };\r\n\r\n  allowToUnLoad = () => {\r\n    this.handleAuthenticationClose();\r\n\r\n    let receipt = lodash.cloneDeep(this.state.receipt);\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewReceipt_AllowUnLoad_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ReceiptDetail_ReceiptNumber\"],\r\n          keyValues: [receipt.ReceiptCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.handleAllowToLoad(\r\n      lodash.cloneDeep(this.state.receipt),\r\n      this.state.selectedShareholder,\r\n      this.props.tokenDetails.tokenInfo,\r\n      (result) => {\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getTruckReceiptList(this.state.selectedShareholder);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  printRANClick = () => {\r\n    let showRANAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showRANAuthenticationLayout }, () => {\r\n      if (showRANAuthenticationLayout === false) {\r\n        this.printRAN();\r\n      }\r\n    });\r\n  };\r\n\r\n  printRAN = () => {\r\n    this.handleAuthenticationClose();\r\n\r\n    let receipt = lodash.cloneDeep(this.state.receipt);\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewReceiptStatus_PrintRAN_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ReceiptDetail_ReceiptNumber\"],\r\n          keyValues: [receipt.ReceiptCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.handlePrintRAN(\r\n      lodash.cloneDeep(this.state.receipt),\r\n      this.state.selectedShareholder,\r\n      this.props.tokenDetails.tokenInfo,\r\n      (result) => {\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getTruckReceiptList(this.state.selectedShareholder);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  viewBOD = () => {\r\n    this.handleViewBOD();\r\n    this.handleAuthenticationClose();\r\n  };\r\n\r\n  printBODClick = () => {\r\n    let showPrintBODAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showPrintBODAuthenticationLayout }, () => {\r\n      if (showPrintBODAuthenticationLayout === false) {\r\n        this.printBOD();\r\n      }\r\n    });\r\n  };\r\n\r\n  printBOD = () => {\r\n    this.handleAuthenticationClose();\r\n    let receipt = lodash.cloneDeep(this.state.receipt);\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewReceiptStatus_PrintBOD_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ReceiptDetail_ReceiptNumber\"],\r\n          keyValues: [receipt.ReceiptCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.handlePrintBOD(\r\n      lodash.cloneDeep(this.state.receipt),\r\n      this.state.selectedShareholder,\r\n      this.props.tokenDetails.tokenInfo,\r\n      (result) => {\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getTruckReceiptList(this.state.selectedShareholder);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  handleOperationClick = (operation) => {\r\n    let receipt = lodash.cloneDeep(this.state.receipt);\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: operation + \"_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ReceiptDetail_ReceiptNumber\"],\r\n          keyValues: [receipt.ReceiptCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    switch (operation) {\r\n      case Constants.ViewAllTruckReceiptOperations.ViewReceipt_AuthorizeUnLoad:\r\n        this.authorizeToUnLoadOnClick();\r\n        break;\r\n      case Constants.ViewAllTruckReceiptOperations.ViewReceipt_AllowUnLoad:\r\n        this.allowToUnLoadOnClick();\r\n        break;\r\n      case Constants.ViewAllTruckReceiptOperations.ViewReceipt_ManualEntry:\r\n        this.setState({ isManualEntry: true });\r\n        break;\r\n      case Constants.ViewAllTruckReceiptOperations.ViewReceipt_RecordWeight:\r\n        this.getRecordWeight(\r\n          lodash.cloneDeep(this.state.receipt),\r\n          this.state.selectedShareholder,\r\n          this.props.tokenDetails.tokenInfo,\r\n          (result) => {\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\";\r\n            notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n            if (result.IsSuccess === true) {\r\n              this.handleRecordWeight();\r\n            } else {\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n            }\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        );\r\n        //  this.setState({isRecordWeight:true}, this.handleRecordWeight);\r\n        break;\r\n      case Constants.ViewAllTruckReceiptOperations.ViewReceipt_CloseReceipt:\r\n        this.setState({ isCloseReceipt: true });\r\n\r\n        break;\r\n      case Constants.ViewAllTruckReceiptOperations.ViewReceipt_PrintRAN:\r\n        this.printRANClick();\r\n        break;\r\n      case Constants.ViewAllTruckReceiptOperations.ViewReceipt_ViewUnloading:\r\n        this.handleViewUnLoading(\r\n          lodash.cloneDeep(this.state.receipt),\r\n          this.state.selectedShareholder,\r\n          this.props.tokenDetails.tokenInfo,\r\n          (result) => {\r\n            if (result.IsSuccess === true) {\r\n              let ModViewUnloadDetails = result.EntityResult;\r\n\r\n              if (\r\n                ModViewUnloadDetails !== null &&\r\n                ModViewUnloadDetails.Table !== null &&\r\n                ModViewUnloadDetails.Table.length > 0\r\n              ) {\r\n                let count = 0;\r\n                ModViewUnloadDetails.Table.forEach((item) => {\r\n                  item.seqNo = count;\r\n                  item.endtime =\r\n                    new Date(item.endtime).toLocaleDateString() +\r\n                    \" \" +\r\n                    new Date(item.endtime).toLocaleTimeString();\r\n                  item.starttime =\r\n                    new Date(item.starttime).toLocaleDateString() +\r\n                    \" \" +\r\n                    new Date(item.starttime).toLocaleTimeString();\r\n                  count++;\r\n                  item.grossquantity = item.grossquantity.split(\".\").join(\".\");\r\n                  item.netquantity = item.netquantity.split(\".\").join(\".\");\r\n                });\r\n              }\r\n              var { operationsVisibilty } = { ...this.state };\r\n              operationsVisibilty.add = false;\r\n              operationsVisibilty.delete = false;\r\n              this.setState({\r\n                operationsVisibilty,\r\n                ModViewUnloadDetails: result.EntityResult.Table,\r\n                isViewUnloading: true,\r\n              });\r\n              console.log(\"viewunloading\", this.state.ModViewUnloadDetails);\r\n            } else {\r\n              notification.messageType = result.IsSuccess\r\n                ? \"success\"\r\n                : \"critical\";\r\n              notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n              toast(\r\n                <ErrorBoundary>\r\n                  <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n                </ErrorBoundary>,\r\n                {\r\n                  autoClose:\r\n                    notification.messageType === \"success\" ? 10000 : false,\r\n                }\r\n              );\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case Constants.ViewAllTruckReceiptOperations.ViewReceipt_PrintBOD:\r\n        this.printBODClick();\r\n        break;\r\n      case Constants.ViewAllTruckReceiptOperations.ViewReceipt_ViewBOD:\r\n        let showViewBODAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n\r\n        this.setState({ showViewBODAuthenticationLayout }, () => {\r\n          if (showViewBODAuthenticationLayout === false) {\r\n            this.viewBOD();\r\n          }\r\n        });\r\n\r\n        break;\r\n      case Constants.ViewAllTruckReceiptOperations.ViewReceipt_SendBOD:\r\n        this.handleSendBOD(\r\n          lodash.cloneDeep(this.state.receipt),\r\n          this.state.selectedShareholder,\r\n          this.props.tokenDetails.tokenInfo,\r\n          (result) => {\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\";\r\n            notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n            if (result.IsSuccess === true) {\r\n              this.getTruckReceiptList(this.state.selectedShareholder);\r\n            } else {\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n            }\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        );\r\n        break;\r\n      case Constants.ViewAllTruckReceiptOperations.ViewReceipt_ViewAuditTrail:\r\n        this.handleViewAuditTrail(\r\n          lodash.cloneDeep(this.state.receipt),\r\n          this.state.selectedShareholder,\r\n          this.props.tokenDetails.tokenInfo,\r\n          (result) => {\r\n            if (result.IsSuccess === true) {\r\n              let modAuditTrailList = result.EntityResult;\r\n              for (let i = 0; i < modAuditTrailList.length; i++) {\r\n                let receiptStatus = modAuditTrailList[i].ReceiptStatus;\r\n                if (receiptStatus === Constants.Receipt_Status.AUTO_UNLOADED) {\r\n                  receiptStatus = Constants.ReceiptStatus.AUTO_UNLOADED;\r\n                } else if (\r\n                  receiptStatus === Constants.Receipt_Status.CHECKED_IN\r\n                ) {\r\n                  receiptStatus = Constants.ReceiptStatus.CHECKED_IN;\r\n                } else if (receiptStatus === Constants.Receipt_Status.CLOSED) {\r\n                  receiptStatus = Constants.ReceiptStatus.CLOSED;\r\n                } else if (\r\n                  receiptStatus === Constants.Receipt_Status.INTERRUPTED\r\n                ) {\r\n                  receiptStatus = Constants.ReceiptStatus.INTERRUPTED;\r\n                } else if (\r\n                  receiptStatus === Constants.Receipt_Status.UNLOADING\r\n                ) {\r\n                  receiptStatus = Constants.ReceiptStatus.UNLOADING;\r\n                } else if (\r\n                  receiptStatus === Constants.Receipt_Status.MANUALLY_UNLOADED\r\n                ) {\r\n                  receiptStatus = Constants.ReceiptStatus.MANUALLY_UNLOADED;\r\n                } else if (\r\n                  receiptStatus === Constants.Receipt_Status.PARTIALLY_UNLOADED\r\n                ) {\r\n                  receiptStatus = Constants.ReceiptStatus.PARTIALLY_UNLOADED;\r\n                } else if (receiptStatus === Constants.Receipt_Status.QUEUED) {\r\n                  receiptStatus = Constants.ReceiptStatus.QUEUED;\r\n                } else if (receiptStatus === Constants.Receipt_Status.READY) {\r\n                  receiptStatus = Constants.ReceiptStatus.READY;\r\n                } else if (\r\n                  receiptStatus === Constants.Receipt_Status.DE_QUEUED\r\n                ) {\r\n                  receiptStatus = Constants.ReceiptStatus.DE_QUEUED;\r\n                } else if (\r\n                  receiptStatus === Constants.Receipt_Status.WEIGHED_IN\r\n                ) {\r\n                  receiptStatus = Constants.ReceiptStatus.WEIGHED_IN;\r\n                } else if (\r\n                  receiptStatus === Constants.Receipt_Status.WEIGHED_OUT\r\n                ) {\r\n                  receiptStatus = Constants.ReceiptStatus.WEIGHED_OUT;\r\n                } else if (\r\n                  receiptStatus === Constants.Receipt_Status.ASSIGNED\r\n                ) {\r\n                  receiptStatus = Constants.ReceiptStatus.ASSIGNED;\r\n                } else if (\r\n                  receiptStatus === Constants.Receipt_Status.CANCELLED\r\n                ) {\r\n                  receiptStatus = Constants.ReceiptStatus.CANCELLED;\r\n                } else if (receiptStatus === Constants.Receipt_Status.EXPIRED) {\r\n                  receiptStatus = Constants.ReceiptStatus.EXPIRED;\r\n                } else if (\r\n                  receiptStatus === Constants.Receipt_Status.REJECTED\r\n                ) {\r\n                  receiptStatus = Constants.ReceiptStatus.REJECTED;\r\n                } else {\r\n                  receiptStatus = Constants.ReceiptStatus.USER_DEFINED;\r\n                }\r\n                modAuditTrailList[i].Receipt_Status = receiptStatus;\r\n                modAuditTrailList[i].UpdatedTime =\r\n                  new Date(\r\n                    modAuditTrailList[i].UpdatedTime\r\n                  ).toLocaleDateString() +\r\n                  \" \" +\r\n                  new Date(\r\n                    modAuditTrailList[i].UpdatedTime\r\n                  ).toLocaleTimeString();\r\n              }\r\n              var { operationsVisibilty } = { ...this.state };\r\n              operationsVisibilty.add = false;\r\n              operationsVisibilty.delete = false;\r\n              this.setState({\r\n                operationsVisibilty,\r\n                auditTrailList: result.EntityResult,\r\n                modAuditTrailList: modAuditTrailList,\r\n                isViewAuditTrail: true,\r\n              });\r\n            } else {\r\n              notification.messageType = result.IsSuccess\r\n                ? \"success\"\r\n                : \"critical\";\r\n              notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n              toast(\r\n                <ErrorBoundary>\r\n                  <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n                </ErrorBoundary>,\r\n                {\r\n                  autoClose:\r\n                    notification.messageType === \"success\" ? 10000 : false,\r\n                }\r\n              );\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case Constants.ViewAllTruckReceiptOperations.viewReceipt_BSIOutbound:\r\n        this.handleBSIOutbound(\r\n          lodash.cloneDeep(this.state.receipt),\r\n          this.state.selectedShareholder,\r\n          this.props.tokenDetails.tokenInfo,\r\n          (result) => {\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\";\r\n            notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n            if (result.IsSuccess === true) {\r\n              this.getTruckReceiptList(this.state.selectedShareholder);\r\n            } else {\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n            }\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        );\r\n        break;\r\n      case Constants.ViewAllTruckReceiptOperations.viewReceipt_SealCompartments:\r\n        this.handleSealCompartments(\r\n          this.state.receipt.ReceiptCode,\r\n          this.state.selectedShareholder,\r\n          this.props.tokenDetails.tokenInfo,\r\n          (result) => {\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\";\r\n            notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n            if (result.IsSuccess === true) {\r\n              this.setState({\r\n                isSealCompartments: true,\r\n                sealCompartments: result.EntityResult,\r\n              });\r\n            } else {\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n              toast(\r\n                <ErrorBoundary>\r\n                  <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n                </ErrorBoundary>,\r\n                {\r\n                  autoClose:\r\n                    notification.messageType === \"success\" ? 10000 : false,\r\n                }\r\n              );\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case \"ViewAllocateBay_AllocateBay\":\r\n        this.getBays();\r\n        break;\r\n      case \"ViewAllocateBay_DeallocateBay\":\r\n        this.setState({\r\n          isDeAllocateBay: true,\r\n        });\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  getBays = () => {\r\n    let receipt = lodash.cloneDeep(this.state.receipt);\r\n    let products = [];\r\n    receipt.ReceiptCompartmentsInfo.forEach((element) => {\r\n      products.push(element.FinishedProductCode);\r\n    });\r\n\r\n    const obj = {\r\n      ShareHolderCode: this.state.selectedShareholder,\r\n      KeyCodes: [\r\n        {\r\n          key: \"TransactionType\",\r\n          value: \"RECEIPT\",\r\n        },\r\n        {\r\n          key: \"TransportationType\",\r\n          value: \"ROAD\",\r\n        },\r\n        {\r\n          key: \"TerminalCode\",\r\n          value: this.state.receipt.ActualTerminalCode,\r\n        },\r\n        {\r\n          key: \"FinishedProductCode\",\r\n          value: products.toString(),\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetAllValidBays,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let bayAllocation = result.EntityResult;\r\n          bayAllocation.forEach((element) => {\r\n            element.SupportedProducts.forEach((ele) => {\r\n              if (\r\n                element.AssociatedProduct === \"\" ||\r\n                element.AssociatedProduct === undefined\r\n              ) {\r\n                element.AssociatedProduct = ele.Code;\r\n              } else {\r\n                element.AssociatedProduct += \",\" + ele.Code;\r\n              }\r\n            });\r\n          });\r\n\r\n          this.setState({\r\n            bayData: bayAllocation,\r\n            isAllocateBay: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            bayData: [],\r\n            isAllocateBay: true,\r\n          });\r\n          console.log(\"Error in getBays:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ bayData: [], isReadyToRender: true });\r\n        console.log(\"Error while getBays:\", error);\r\n      });\r\n  };\r\n\r\n  handleDrawer = () => {\r\n    var drawerStatus = lodash.cloneDeep(this.state.drawerStatus);\r\n    this.setState({\r\n      drawerStatus: !drawerStatus,\r\n    });\r\n  };\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showDeleteAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showDeleteAuthenticationLayout });\r\n      if (showDeleteAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Receipt Composite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showDeleteAuthenticationLayout: false,\r\n      showAuthorizeToUnLoadAuthenticationLayout: false,\r\n      showAllowToUnLoadAuthenticationLayout: false,\r\n      showCloseReceiptAuthenticationLayout: false,\r\n      showViewBODAuthenticationLayout: false,\r\n      showPrintBODAuthenticationLayout: false,\r\n      showRANAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  getFunctionGroupName() {\r\n    if (this.state.showDeleteAuthenticationLayout) return fnTruckReceipt;\r\n    else if (this.state.showCloseReceiptAuthenticationLayout)\r\n      return fnCloseReceipt;\r\n    else if (\r\n      this.state.showAllowToUnLoadAuthenticationLayout ||\r\n      this.state.showAuthorizeToUnLoadAuthenticationLayout\r\n    )\r\n      return fnViewReceiptStatus;\r\n    else if (\r\n      this.state.showViewBODAuthenticationLayout ||\r\n      this.state.showPrintBODAuthenticationLayout\r\n    )\r\n      return fnPrintBOD;\r\n    else if (this.state.showRANAuthenticationLayout) return fnPrintRAN;\r\n  }\r\n\r\n  getDeleteorEditMode() {\r\n    if (this.state.showDeleteAuthenticationLayout) return functionGroups.remove;\r\n    else return functionGroups.modify;\r\n  }\r\n\r\n  confirmAllocateBay = () => {\r\n    let bayData = lodash.cloneDeep(this.state.bayData);\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isAllocateBay} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h3>\r\n                  {t(\"ViewAllocateBay_AllocateBay\")} -{\" \"}\r\n                  {this.state.receipt.ReceiptCode}\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-12 detailsTable\">\r\n                <DataTable\r\n                  className=\"iconblock\"\r\n                  data={bayData}\r\n                  selection={this.state.selectBay}\r\n                  selectionMode=\"single\"\r\n                  showHeader={true}\r\n                  onSelectionChange={(e) => this.setState({ selectBay: e })}\r\n                  rows={\r\n                    this.props.userDetails.EntityResult.PageAttibutes\r\n                      .WebPortalListPageSize\r\n                  }\r\n                  resizableColumns={true}\r\n                >\r\n                  {/* <DataTable.ActionBar /> */}\r\n                  <DataTable.Column\r\n                    className=\"compColHeight compColmiddle\"\r\n                    field={\"BayCode\"}\r\n                    header={t(\"ViewAllocateBay_BayCode\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight compColmiddle\"\r\n                    field={\"AssociatedProduct\"}\r\n                    header={t(\"ViewAllocateBay_FinishProduct\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight compColmiddle\"\r\n                    field=\"CurrentQueue\"\r\n                    header={t(\"ViewAllocateBay_CurrentQueue\")}\r\n                    editable={false}\r\n                  />\r\n                  <DataTable.Column\r\n                    className=\"compColHeight compColmiddle\"\r\n                    field=\"MaximumQueue\"\r\n                    header={t(\"ViewAllocateBay_MaximumQueue\")}\r\n                    editable={false}\r\n                  />\r\n                  {Array.isArray(bayData) &&\r\n                  bayData.length >\r\n                    this.props.userDetails.EntityResult.PageAttibutes\r\n                      .WebPortalListPageSize ? (\r\n                    <DataTable.Pagination />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </DataTable>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"MarineEOD_Close\")}\r\n                className=\"cancelButton\"\r\n                onClick={() => this.setState({ isAllocateBay: false })}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"ViewAllocateBay_Allocate\")}\r\n                onClick={() => {\r\n                  if (\r\n                    this.state.selectBay === null ||\r\n                    this.state.selectBay === undefined ||\r\n                    this.state.selectBay.length === 0\r\n                  ) {\r\n                    let notification = {\r\n                      messageType: \"critical\",\r\n                      message: \"ViewAllocateBay_Allocate\",\r\n                      messageResultDetails: [\r\n                        {\r\n                          keyFields: [\"BayCode\"],\r\n                          keyValues: [],\r\n                          isSuccess: false,\r\n                          errorMessage: \"ViewAllocateBay_bayrequired\",\r\n                        },\r\n                      ],\r\n                    };\r\n\r\n                    toast(\r\n                      <ErrorBoundary>\r\n                        <NotifyEvent\r\n                          notificationMessage={notification}\r\n                        ></NotifyEvent>\r\n                      </ErrorBoundary>,\r\n                      {\r\n                        autoClose:\r\n                          notification.messageType === \"success\"\r\n                            ? 10000\r\n                            : false,\r\n                      }\r\n                    );\r\n                  } else {\r\n                    this.AllocateBay(\r\n                      this.state.receipt.ReceiptCode,\r\n                      this.state.selectBay[0].BayCode,\r\n                      \"RECEIPT\"\r\n                    );\r\n                  }\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  confirmDeAllocateBay = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isDeAllocateBay} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h5>\r\n                  {t(\"ViewAllocateBay_ConfirmDeallocateBay\", [\r\n                    this.state.ReceiptBay,\r\n                    \"Receipt\",\r\n                  ])}\r\n                </h5>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"cancelButton\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  this.setState({ isDeAllocateBay: false });\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"ViewAllocateBay_Deallocate\")}\r\n                onClick={() => {\r\n                  this.setState({ isDeAllocateBay: false }, () => {\r\n                    this.DeAllocateBay(\r\n                      this.state.receipt.ReceiptCode,\r\n                      \"RECEIPT\",\r\n                      this.state.ReceiptBay\r\n                    );\r\n                  });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  GetBayByTrnsaction(TrnsactionCode, TrnsactionType, shareholder, CallBack) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: TrnsactionCode,\r\n      },\r\n      {\r\n        key: KeyCodes.TransactionType,\r\n        value: TrnsactionType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shareholder,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetBayAllocatedInfoByTransaction,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      ),\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess) {\r\n          this.setState(\r\n            {\r\n              ReceiptBay: result.EntityResult.BayCode,\r\n            },\r\n            CallBack\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while GetBayByTrnsaction:\", error);\r\n      });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {*} shipmentCode\r\n   * @param {*} bayCode\r\n   * @param {*} entityType ：shipment or receipt\r\n   */\r\n  AllocateBay(shipmentCode, bayCode, entityType) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentCode,\r\n      },\r\n      {\r\n        key: KeyCodes.bayCode,\r\n        value: bayCode,\r\n      },\r\n      {\r\n        key: KeyCodes.entityType,\r\n        value: entityType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.state.selectedShareholder,\r\n      keyDataCode: KeyCodes.receiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"BayAllocation_SaveStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"BayCode\"],\r\n          keyValues: [bayCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.AllocateBay,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getTruckReceiptList(this.state.selectedShareholder);\r\n          this.setState({ isAllocateBay: false });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ResultDataList[0].ErrorList[0];\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while AllocateBay:\", error);\r\n      });\r\n  }\r\n\r\n  DeAllocateBay(shipmentCode, entityType, bayCode) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: shipmentCode,\r\n      },\r\n      {\r\n        key: KeyCodes.entityType,\r\n        value: entityType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.state.selectedShareholder,\r\n      KeyCodes: keyCode,\r\n    };\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"BayDeAllocation_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"BayCode\"],\r\n          keyValues: [bayCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.DeallocateShipment,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.getTruckReceiptList(this.state.selectedShareholder);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while DeAllocateBay:\", error);\r\n      });\r\n  }\r\n\r\n  handleOperation() {\r\n    if (this.state.showDeleteAuthenticationLayout) return this.handleDelete;\r\n    else if (this.state.showAuthorizeToUnLoadAuthenticationLayout)\r\n      return this.authorizeToUnLoad;\r\n    else if (this.state.showAllowToUnLoadAuthenticationLayout)\r\n      return this.allowToUnLoad;\r\n    else if (this.state.showCloseReceiptAuthenticationLayout)\r\n      return this.handleReceiptClose;\r\n    else if (this.state.showRANAuthenticationLayout) return this.printRAN;\r\n    else if (this.state.showViewBODAuthenticationLayout) return this.viewBOD;\r\n    else if (this.state.showPrintBODAuthenticationLayout) return this.printBOD;\r\n  }\r\n\r\n  render() {\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"DriverInfo_LastUpdated\",\r\n        fieldValue:\r\n          new Date(this.state.receipt.LastUpdatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.receipt.LastUpdatedTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_LastActive\",\r\n        fieldValue:\r\n          this.state.receipt.LastActiveTime !== undefined &&\r\n          this.state.receipt.LastActiveTime !== null\r\n            ? new Date(this.state.receipt.LastActiveTime).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(this.state.receipt.LastActiveTime).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_CreatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.receipt.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.receipt.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    let fillPage = true;\r\n    let reciptSelected = this.state.selectedItems.length === 1;\r\n\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            breadcrumbItem={this.props.activeItem}\r\n            shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n            selectedShareholder={this.state.selectedShareholder}\r\n            onShareholderChange={this.handleShareholderSelectionChange}\r\n            onAdd={this.handleAdd}\r\n            onDelete={this.authenticateDelete}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isDetails ? (\r\n          <ErrorBoundary>\r\n            <TruckReceiptDetailsComposite\r\n              key=\"TruckReceiptDetails\"\r\n              selectedRow={this.state.selectedRow}\r\n              selectedShareholder={this.state.selectedShareholder}\r\n              terminalCodes={this.state.terminalCodes}\r\n              onBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n              ReceiptType={this.state.receiptType}\r\n              handleAuthorizeToUnLoad={this.handleAuthorizeToUnLoad}\r\n              handleAllowToLoad={this.handleAllowToLoad}\r\n              handleViewAuditTrail={this.handleViewAuditTrail}\r\n              handleViewUnLoading={this.handleViewUnLoading}\r\n              handleReceiptClose={this.handleReceiptClose}\r\n              handleRecordWeight={this.handleRecordWeight}\r\n              getRecordWeight={this.getRecordWeight}\r\n              handlePrintRAN={this.handlePrintRAN}\r\n              handlePrintBOD={this.handlePrintBOD}\r\n              handleBSIOutbound={this.handleBSIOutbound}\r\n              handleSendBOD={this.handleSendBOD}\r\n              handleViewBOD={this.handleViewBOD}\r\n            ></TruckReceiptDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : (\r\n          <div>\r\n            {this.state.isViewUnloading ? (\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <TMDetailsHeader\r\n                      newEntityName=\"ViewReceiptList_ViewTransactions\"\r\n                      popUpContents={popUpContents}\r\n                    ></TMDetailsHeader>\r\n                  )}\r\n                </TranslationConsumer>\r\n\r\n                <TruckReceiptViewUnLoadingDetails\r\n                  ModViewUnloadDetails={this.state.ModViewUnloadDetails}\r\n                  handleBack={this.onBack}\r\n                  expandedRows={this.state.expandedRows}\r\n                  toggleExpand={this.toggleExpand}\r\n                ></TruckReceiptViewUnLoadingDetails>\r\n              </ErrorBoundary>\r\n            ) : this.state.isViewAuditTrail ? (\r\n              <ErrorBoundary>\r\n                <TruckReceiptViewAuditTrailDetails\r\n                  ReceiptCode={this.state.selectedItems[0].Common_Code}\r\n                  selectedRow={this.state.selectedRow}\r\n                  auditTrailList={this.state.auditTrailList}\r\n                  modAuditTrailList={this.state.modAuditTrailList}\r\n                  handleBack={this.onBack}\r\n                ></TruckReceiptViewAuditTrailDetails>\r\n              </ErrorBoundary>\r\n            ) : this.state.isManualEntry ? (\r\n              <ErrorBoundary>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <TMDetailsHeader\r\n                      entityCode={\r\n                        this.state.isManualEntry\r\n                          ? this.state.receipt.ReceiptCode +\r\n                            \" - \" +\r\n                            t(\"LoadingDetailsEntry_Title\")\r\n                          : this.state.receipt.ReceiptCode\r\n                      }\r\n                      newEntityName=\"Receipt_NewReceiptByCompartment\"\r\n                      popUpContents={popUpContents}\r\n                    ></TMDetailsHeader>\r\n                  )}\r\n                </TranslationConsumer>\r\n                <TruckReceiptManualEntryDetailsComposite\r\n                  receipt={this.state.receipt}\r\n                  handleBack={this.onBack}\r\n                  selectedShareholder={this.state.selectedShareholder}\r\n                ></TruckReceiptManualEntryDetailsComposite>\r\n              </ErrorBoundary>\r\n            ) : (\r\n              <div>\r\n                <ErrorBoundary>\r\n                  <div className=\"kpiSummaryContainer\">\r\n                    <KPIDashboardLayout\r\n                      kpiList={this.state.truckReceiptKPIList}\r\n                      pageName=\"TruckReceipt\"\r\n                    ></KPIDashboardLayout>\r\n                  </div>\r\n                </ErrorBoundary>\r\n                <div\r\n                  className={\r\n                    reciptSelected\r\n                      ? !this.state.drawerStatus\r\n                        ? \"showShipmentStatusRightPane\"\r\n                        : \"drawerClose\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  <ErrorBoundary>\r\n                    <TMTransactionFilters\r\n                      dateRange={{\r\n                        from: this.state.fromDate,\r\n                        to: this.state.toDate,\r\n                      }}\r\n                      dateError={this.state.dateError}\r\n                      handleDateTextChange={this.handleDateTextChange}\r\n                      handleRangeSelect={this.handleRangeSelect}\r\n                      handleLoadOrders={this.handleLoadReceipts}\r\n                      filterText=\"LoadReceipts\"\r\n                    ></TMTransactionFilters>\r\n                  </ErrorBoundary>\r\n                  {this.state.isReadyToRender ? (\r\n                    <ErrorBoundary>\r\n                      <div\r\n                        className={\r\n                          fillPage === true ? \"compositeTransactionList\" : \"\"\r\n                        }\r\n                      >\r\n                        <TruckReceiptSummaryPageComposite\r\n                          tableData={this.state.data.Table}\r\n                          columnDetails={this.state.data.Column}\r\n                          pageSize={\r\n                            this.props.userDetails.EntityResult.PageAttibutes\r\n                              .WebPortalListPageSize\r\n                          }\r\n                          exportRequired={true}\r\n                          exportFileName=\"TruckReceiptList\"\r\n                          columnPickerRequired={true}\r\n                          terminalsToShow={\r\n                            this.props.userDetails.EntityResult.PageAttibutes\r\n                              .NoOfTerminalsToShow\r\n                          }\r\n                          selectedItems={this.state.selectedItems}\r\n                          selectionRequired={true}\r\n                          columnGroupingRequired={true}\r\n                          onSelectionChange={this.handleSelection}\r\n                          onRowClick={this.handleRowClick}\r\n                          parentComponent={this.componentName}\r\n                        ></TruckReceiptSummaryPageComposite>\r\n                      </div>\r\n                    </ErrorBoundary>\r\n                  ) : (\r\n                    <LoadingPage message=\"Loading\"></LoadingPage>\r\n                  )}\r\n                </div>\r\n                {reciptSelected ? (\r\n                  <div\r\n                    className={\r\n                      this.state.drawerStatus ? \"marineStatusLeftPane\" : \"\"\r\n                    }\r\n                  >\r\n                    <TransactionSummaryOperations\r\n                      selectedItem={this.state.selectedItems}\r\n                      shipmentNextOperations={this.state.shipmentNextOperations}\r\n                      handleDetailsPageClick={this.handleRowClick}\r\n                      handleOperationButtonClick={this.handleOperationClick}\r\n                      currentStatuses={this.state.currentReceiptStatus}\r\n                      handleDrawer={this.handleDrawer}\r\n                      isDetails={false}\r\n                      isEnterpriseNode={\r\n                        this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                      }\r\n                      webPortalAllowedOperations={[\r\n                        \"ViewReceipt_ViewUnloading\",\r\n                        \"ViewReceipt_ViewBOD\",\r\n                        \"ViewReceipt_ViewAuditTrail\",\r\n                      ]}\r\n                      isWebPortalUser={\r\n                        this.props.userDetails.EntityResult.IsWebPortalUser\r\n                      }\r\n                      unAllowedOperations={[\r\n                        \"ViewReceipt_ManualEntry\",\r\n                        \"ViewReceipt_AuthorizeUnLoad\",\r\n                        \"ViewReceipt_AllowUnLoad\",\r\n                        \"ViewAllocateBay_AllocateBay\",\r\n                        \"ViewAllocateBay_DeallocateBay\",\r\n                        \"ViewReceipt_PrintRAN\",\r\n                        \"ViewReceipt_RecordWeight\",\r\n                        \"ViewReceipt_PrintBOD\",\r\n                        \"ViewReceipt_SendBOD\",\r\n                      ]}\r\n                      title={\"ViewAllReceipt_Details\"}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        {Object.keys(this.state.selectedRow).length > 0 ||\r\n        this.state.selectedItems.length === 1\r\n          ? this.renderModal()\r\n          : \"\"}\r\n        {this.state.showDeleteAuthenticationLayout ||\r\n        this.state.showAllowToUnLoadAuthenticationLayout ||\r\n        this.state.showAuthorizeToUnLoadAuthenticationLayout ||\r\n        this.state.showCloseReceiptAuthenticationLayout ||\r\n        this.state.showViewBODAuthenticationLayout ||\r\n        this.state.showPrintBODAuthenticationLayout ||\r\n        this.state.showRANAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={this.getDeleteorEditMode()}\r\n            functionGroup={this.getFunctionGroupName()}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleOperation()}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n        {this.props.shipmentSource === undefined ? (\r\n          <ErrorBoundary>\r\n            <ToastContainer\r\n              hideProgressBar={true}\r\n              closeOnClick={false}\r\n              closeButton={true}\r\n              newestOnTop={true}\r\n              position=\"bottom-right\"\r\n              toastClassName=\"toast-notification-wrap\"\r\n            />\r\n          </ErrorBoundary>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {this.state.isSealCompartments ? (\r\n          <ErrorBoundary>\r\n            <TruckReceiptSealDetailsComposite\r\n              transactionCode={this.state.receipt.ReceiptCode}\r\n              selectedShareholder={this.state.selectedShareholder}\r\n              sealCompartments={this.state.sealCompartments}\r\n              handleSealClose={this.handleSealClose}\r\n            ></TruckReceiptSealDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : null}\r\n        {this.state.isRecordWeight ? this.handleRecordWeight() : null}\r\n        {this.state.isCloseReceipt ? this.handleCloseReceipttModal() : null}\r\n        {this.state.isAllocateBay ? this.confirmAllocateBay() : null}\r\n        {this.state.isDeAllocateBay ? this.confirmDeAllocateBay() : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\nTruckReceiptComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n  selectedRow: PropTypes.object.isRequired,\r\n  selectedShareholder: PropTypes.string,\r\n};\r\nexport default connect(mapStateToProps)(TruckReceiptComposite);\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { DatePicker, Button } from \"@scuf/common\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function TMTransactionFilters({\r\n  handleDateTextChange,\r\n  handleRangeSelect,\r\n  handleLoadOrders,\r\n  dateError,\r\n  dateRange,\r\n  filterText,\r\n}) {\r\n  //console.log(dateError);\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"dateRangeContainer\">\r\n          <div className=\"dateRangeMargin\">\r\n            <DatePicker\r\n              type=\"daterange\"\r\n              closeOnSelection={true}\r\n              error={t(dateError)}\r\n              displayFormat={getCurrentDateFormat()}\r\n              //value={dateRange}\r\n              rangeValue={dateRange}\r\n              onTextChange={handleDateTextChange}\r\n              onRangeSelect={handleRangeSelect}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"dateSearch\">\r\n            <Button content={t(filterText)} onClick={handleLoadOrders} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as WjCore from \"@grapecity/wijmo\";\r\nimport { ReportViewer } from \"@grapecity/wijmo.react.viewer\";\r\nimport * as wjViewer from \"@grapecity/wijmo.viewer\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { connect } from \"react-redux\";\r\n\r\nTMReportViewer.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\n\r\nTMReportViewer.defaultProps = {\r\n  parameters: {},\r\n};\r\n\r\nWjCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nfunction TMReportViewer({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  parameters,\r\n  filePath,\r\n  ...props\r\n}) {\r\n  //   const [proxyHost, setProxyHost] = useState(\r\n  //     \"http://localhost:8888/TMWebProxyAPI/\"\r\n  //   );\r\n  //   const [reportServiceHost, setReportServiceHost] = useState(\r\n  //     \"http://localhost:5632/\"\r\n  //   );\r\n  //   const [reportUrl, setReportUrl] = useState(proxyHost + \"api/report\");\r\n  //   const [filePath, setFilePath] = useState(\r\n  //     \"TM/\" + \"TMReports/\" + \"CarrierCompanyReport\"\r\n  //   );\r\n  const reportUrl = proxyServerHost + \"api/report\";\r\n  //const filePath = \"TM/\" + \"TMReports/\" + reportName;\r\n\r\n  const beforeXhrRequestSend = (s, event) => {\r\n    // use this event for Authorization purpose\r\n    const prevBeforeSend = event.settings.beforeSend;\r\n    event.settings.beforeSend = function (xhr) {\r\n      prevBeforeSend && prevBeforeSend(xhr);\r\n      //here you may add the params for XMLHttpRequest as required\r\n      if (!props.userDetails.EntityResult.IsWebPortalUser)\r\n        xhr.withCredentials = true;\r\n      if (xhr.URL_DEBUG.indexOf(\"parameters\") > -1) {\r\n        xhr.onreadystatechange = function () {\r\n          if (this.readyState === 4 && this.status === 200) {\r\n            var host = s.hostElement;\r\n            setTimeout(() => {\r\n              var splitter = host.querySelector(\".wj-viewer-splitter\");\r\n              var param = host\r\n                .querySelector(\".wj-viewer-tabsleft\")\r\n                .querySelectorAll(\"li\")[2];\r\n              if (!param.disabled) {\r\n                param.className = \"hidden\";\r\n                splitter.click();\r\n              }\r\n            }, 1000);\r\n          }\r\n        };\r\n      }\r\n    };\r\n  };\r\n  let header = {\r\n    Authorization: \"Bearer \" + props.tokenDetails.tokenInfo,\r\n  };\r\n\r\n  // let header = {\r\n  //   Authorization: \"Bearer \" + \"fiewjfjewifi\",\r\n  // };\r\n\r\n  const initViewer = (s, event) => {\r\n    wjViewer._ReportService.prototype.load = function (data) {\r\n      var _this = this;\r\n      var promise = new wjViewer._Promise();\r\n      if (!this._checkReportController(promise)) {\r\n        return promise;\r\n      }\r\n      this.httpRequest(this._getReportInstancesUrl(), {\r\n        method: \"POST\",\r\n        data: data,\r\n      }).then(\r\n        function (xhr) {\r\n          var v = wjViewer._parseReportExecutionInfo(xhr.responseText);\r\n          _this._instanceId = v.id;\r\n          _this._status = wjViewer._ExecutionStatus.loaded;\r\n          _this._outlinesLocation = v.outlinesLocation;\r\n          _this._statusLocation = v.statusLocation.replace(\r\n            reportServiceHost,\r\n            proxyServerHost\r\n          );\r\n          _this._pageSettingsLocation = v.pageSettingsLocation;\r\n          _this._featuresLocation = v.featuresLocation;\r\n          _this._parametersLocation = v.parametersLocation;\r\n          promise.resolve(v);\r\n        },\r\n        function (xhr) {\r\n          promise.reject(_this._getError(xhr));\r\n        }\r\n      );\r\n      return promise;\r\n    };\r\n  };\r\n\r\n  //console.log(props.userDetails.EntityResult.IsWebPortalUser, header);\r\n  return (\r\n    <div>\r\n      {props.userDetails.EntityResult.IsWebPortalUser ? (\r\n        <div>\r\n          <ReportViewer\r\n            requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <ReportViewer\r\n            //requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TMReportViewer);\r\n","import React from \"react\";\r\nimport { Modal, Button, Header } from \"@scuf/common\";\r\nimport TMReportViewer from \"../Common/TMReportViewer\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nReportDetails.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  filePath: PropTypes.string.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  showReport: PropTypes.bool.isRequired,\r\n  handleModalClose: PropTypes.func.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\nReportDetails.defaultProps = {\r\n  parameters: {},\r\n};\r\nexport default function ReportDetails({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  filePath,\r\n  handleBack,\r\n  showReport,\r\n  handleModalClose,\r\n  parameters,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <Modal\r\n      style={{ padding: \"0px\" }}\r\n      size=\"fullscreen\"\r\n      open={showReport}\r\n      // onClose={handleModalClose}\r\n    >\r\n      <div>\r\n        <Header title={t(\"Header_TerminalManager\")} menu={false} />\r\n        <TMReportViewer\r\n          proxyServerHost={proxyServerHost}\r\n          reportServiceHost={reportServiceHost}\r\n          filePath={filePath}\r\n          parameters={parameters}\r\n        />\r\n        <div style={{ marginTop: \"10px\", marginLeft: \"20px\" }}>\r\n          <Button\r\n            className=\"backButton\"\r\n            onClick={handleBack}\r\n            content={t(\"Report_Back\")}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","WijmoGrid","flex","setFlex","translator","useTranslation","_getData","pageLength","CollectionView","sourceData","pageSize","setData","rowsPerPage","theGrid","React","theSearch","gridFilter","pagingComponent","colPicker","selectedRows","selectionRequired","selector","gridInitialized","grid","customizeFilterConditions","onRowClick","addEventListener","hostElement","e","ht","hitTest","target","closest","classList","includes","cellType","wjGrid","Cell","rowData","rows","row","dataItem","selectionMode","wjCore","select","Selector","itemChecked","s","singleSelection","filter","isSelected","current","loadash","forEach","onSelectionHandle","r","selectedRow","showCheckAll","column","rowHeaders","columns","headersVisibility","HeadersVisibility","All","useEffect","control","push","selectedItems","refresh","localStorage","getItem","parentComponent","gridState","JSON","parse","newFlex","col","matchedCol","colSetting","binding","visible","filterDefinition","collectionView","deferUpdate","sortDescriptions","clear","i","sortDesc","property","ascending","groupDescriptions","sessionStorage","gridSessionState","moveToPage","pageCount","pageIndex","text","searchText","columnPickerRequired","itemsSource","checkedMemberPath","displayMemberPath","lostFocus","addHandler","hidePopup","exportExcel","gridFlex","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","exportFileName","displayValues","columnDetail","Name","PopOver","terminalCodes","split","terminalsToShow","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","saveGridState","group","document","getElementsByClassName","chkbx","parentNode","sessionState","setItem","stringify","FlexGridFilter","operator","Operator","header","descending","apply","conditions","search","selectAll","and","or","cancel","stringOperators","op","EQ","NE","BW","EW","CT","NC","numberOperators","GT","LT","GE","LE","dateOperators","booleanOperators","getWidth","columnDetails","window","screen","width","WidthPx","parseInt","WidthPercentage","FlexGridSearch","class","ref","id","actionType","event","host","offsetHeight","focus","showPopup","PopupPosition","Below","preventDefault","colPickerClickHandler","exportRequired","fontSize","top","columnGroupingRequired","GroupPanel","FlexGrid","autoGenerateColumns","alternatingRowStep","autoRowHeights","initialized","virtualizationThreshold","onUpdatedView","FlexGridColumn","minWidth","isReadOnly","wordWrap","align","FlexGridCellTemplate","template","context","conditionalRowStyleCheck","conditionalRowStyles","ListBox","picker","initializedPicker","CollectionViewNavigator","headerFormat","byPage","cv","TruckReceiptSummaryPageComposite","tableData","onSelectionChange","WijmoGridComposite","TruckReceiptComposite","receipt","isDetails","isReadyToRender","isDetailsModified","PrimaryShareholder","fromDate","toDate","dateError","currentReceiptStatus","shipmentNextOperations","receiptType","isManualEntry","isViewAuditTrail","modAuditTrailList","auditTrailList","isViewUnloading","ModViewUnloadDetails","isRecordWeight","recordWeightList","weighBridgeCode","scadaValue","allowOutofRangeTW","expandedRows","showReport","truckReceiptKPIList","drawerStatus","isCloseReceipt","reasonForClosure","activityInfo","isSealCompartments","sealCompartments","showDeleteAuthenticationLayout","showAuthorizeToUnLoadAuthenticationLayout","showAllowToUnLoadAuthenticationLayout","showCloseReceiptAuthenticationLayout","showViewBODAuthenticationLayout","showPrintBODAuthenticationLayout","showRANAuthenticationLayout","isAllocateBay","bayData","selectBay","isDeAllocateBay","ReceiptBay","componentName","handleAdd","handleBack","FunctionsList","functionGroups","fnTruckReceipt","getTruckReceiptList","getKPIList","toggleExpand","expandedRowIndex","findIndex","SeqNumber","splice","handleDelete","deleteReceiptKeys","shCode","ReceiptCode","keyData","keyDataCode","ShareHolderCode","KeyCodes","Key","Value","isRefreshDataRequire","isSuccess","ResultDataList","res","notification","handleAuthenticationClose","messageResultDetails","messageResult","keyFields","toast","NotifyEvent","notificationMessage","autoClose","messageType","handleRowClick","receiptDeleteInfo","ActivityCode","Constants","RECEIPT_ENABLE_DELETE","ActionTypeCode","CHECK","receiptDeleteStates","ReceiptStates","IsWebPortalUser","indexOf","Common_Status","toUpperCase","remove","handleSelection","items","isReady","x","getReceipt","isOperation","savedEvent","saveType","ReceiptStatus","Common_Code","Common_Shareholder","ShareholderCode","handleShareholderSelectionChange","getTerminalsList","componentWillUnmount","clearStorage","removeEventListener","removeItem","handleRangeSelect","to","from","handleDateTextChange","handleLoadReceipts","onBack","handleCloseReceipttModal","message","keyValues","errorMessage","closeReceipt","handleReceiptClose","keyCode","DriverCode","obj","getRecordWeight","receiptItem","token","callback","RecordLadenWeight","VehicleCode","RecordTareWeight","getScadaValue","handleAllowOutOfRangeTW","cellData","setWeighBridgeValue","handleSealNoInput","cellInfo","SealNo","celldata","index","comp","CompartmentSeqNoInVehicle","handleSealClose","handleRecordWeight","Checkbox","checked","handlePrintRAN","handlePrintBOD","handleSendBOD","handleBSIOutbound","handleModalBack","handleViewBOD","reportServiceURI","authorizeToUnLoadOnClick","authorizeToUnLoad","handleAuthorizeToUnLoad","allowToUnLoadOnClick","allowToUnLoad","handleAllowToLoad","printRANClick","printRAN","viewBOD","printBODClick","printBOD","handleOperationClick","operation","ViewReceipt_AuthorizeUnLoad","ViewReceipt_AllowUnLoad","ViewReceipt_ManualEntry","ViewReceipt_RecordWeight","ViewReceipt_CloseReceipt","ViewReceipt_PrintRAN","ViewReceipt_ViewUnloading","handleViewUnLoading","Table","count","seqNo","endtime","starttime","grossquantity","join","netquantity","ViewReceipt_PrintBOD","ViewReceipt_ViewBOD","ViewReceipt_SendBOD","ViewReceipt_ViewAuditTrail","handleViewAuditTrail","receiptStatus","AUTO_UNLOADED","CHECKED_IN","CLOSED","INTERRUPTED","UNLOADING","MANUALLY_UNLOADED","PARTIALLY_UNLOADED","QUEUED","READY","DE_QUEUED","WEIGHED_IN","WEIGHED_OUT","ASSIGNED","CANCELLED","EXPIRED","REJECTED","USER_DEFINED","Receipt_Status","UpdatedTime","viewReceipt_BSIOutbound","viewReceipt_SealCompartments","handleSealCompartments","getBays","products","ReceiptCompartmentsInfo","FinishedProductCode","ActualTerminalCode","bayAllocation","SupportedProducts","ele","AssociatedProduct","Code","handleDrawer","authenticateDelete","confirmAllocateBay","DataTable","selection","showHeader","PageAttibutes","WebPortalListPageSize","resizableColumns","Column","field","editable","Array","isArray","Pagination","AllocateBay","BayCode","confirmDeAllocateBay","DeAllocateBay","GetReceiptActivityInfo","receiptRow","getReciptStatuses","GetBayByTrnsaction","getReciptsStatusOperations","setHours","startRange","endRange","selectedItem","updatedselectedItem","isVolumneBased","IsVolumeBased","ViewAllocateBay_DeallocateBay","nextOperations","keys","IsArchived","view","fnKPIInformation","objKPIRequestData","PageName","kpiTruckReceiptList","InputParameters","ListKPIDetails","receiptCode","renderModal","path","paramValues","Culture","UICulture","Shareholder","ReportDetails","handleModalClose","proxyServerHost","reportServiceHost","filePath","parameters","getFunctionGroupName","fnCloseReceipt","fnViewReceiptStatus","fnPrintBOD","fnPrintRAN","getDeleteorEditMode","modify","TrnsactionCode","TrnsactionType","CallBack","shipmentCode","bayCode","entityType","popUpContents","LastUpdatedTime","LastActiveTime","CreatedTime","reciptSelected","activeItem","ShareholderList","TruckReceiptDetailsComposite","onSaved","ReceiptType","TMDetailsHeader","newEntityName","TruckReceiptViewUnLoadingDetails","TruckReceiptViewAuditTrailDetails","entityCode","TruckReceiptManualEntryDetailsComposite","KPIDashboardLayout","kpiList","pageName","TMTransactionFilters","dateRange","handleLoadOrders","filterText","NoOfTerminalsToShow","LoadingPage","TransactionSummaryOperations","handleDetailsPageClick","handleOperationButtonClick","currentStatuses","isEnterpriseNode","IsEnterpriseNode","webPortalAllowedOperations","isWebPortalUser","unAllowedOperations","title","UserName","shipmentSource","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","TruckReceiptSealDetailsComposite","transactionCode","DatePicker","closeOnSelection","displayFormat","getCurrentDateFormat","rangeValue","onTextChange","onRangeSelect","TMReportViewer","reportUrl","beforeXhrRequestSend","prevBeforeSend","settings","beforeSend","xhr","withCredentials","URL_DEBUG","onreadystatechange","readyState","status","setTimeout","splitter","querySelector","param","querySelectorAll","click","Authorization","initViewer","wjViewer","prototype","load","_this","promise","_checkReportController","httpRequest","_getReportInstancesUrl","method","v","responseText","_instanceId","_status","loaded","_outlinesLocation","outlinesLocation","_statusLocation","statusLocation","replace","_pageSettingsLocation","pageSettingsLocation","_featuresLocation","featuresLocation","_parametersLocation","parametersLocation","resolve","reject","_getError","ReportViewer","requestHeaders","height","serviceUrl","beforeSendRequest","WjCore","menu","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnCloseShipment","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","transportationType","shareholderCode","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","orderCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","cardReaderCode","accessCardCode","bcuCode","deuCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","TransactionType","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks"],"sourceRoot":""}