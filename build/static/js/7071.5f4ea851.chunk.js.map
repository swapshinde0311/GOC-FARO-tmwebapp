{"version":3,"file":"static/js/7071.5f4ea851.chunk.js","mappings":"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","sources":["Components/UIBase/Details/COACustomerDetails.jsx","Components/Composite/Details/COACustomerDetailsComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/functionalUtilities.js"],"sourcesContent":["import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { Select, Input, Button, Icon, Accordion } from \"@scuf/common\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { getOptionsWithSelect } from \"../../../JS/functionalUtilities\";\r\n\r\nCOACustomerDetails.propTypes = {\r\n  coaCustomer: PropTypes.object.isRequired,\r\n  modCOACustomer: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    availableCustomerParameters: PropTypes.array,\r\n    selectedAvailableCustomerParameters: PropTypes.array,\r\n    associatedCustomerParameters: PropTypes.array,\r\n    selectedAssociatedCustomerParameters: PropTypes.array,\r\n    customerCodes: PropTypes.array,\r\n    finishedProductCodes: PropTypes.array,\r\n    baseProductCodes: PropTypes.array,\r\n    templateCodes: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onFinishedProductCodeChange: PropTypes.func.isRequired,\r\n  onBaseProductCodeChange: PropTypes.func.isRequired,\r\n  onTemplateProductCodeChange: PropTypes.func.isRequired,\r\n  onAvailableCustomerParameterSelection: PropTypes.func.isRequired,\r\n  pageSize: PropTypes.number,\r\n  onCustomerParameterAssociation: PropTypes.func.isRequired,\r\n  onAssociatedCustomerParameterSelection: PropTypes.func.isRequired,\r\n  onCustomerParameterDisassociation: PropTypes.func.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n};\r\nexport function COACustomerDetails({\r\n  coaCustomer,\r\n  modCOACustomer,\r\n  validationErrors,\r\n  listOptions,\r\n  onFieldChange,\r\n  onFinishedProductCodeChange,\r\n  onBaseProductCodeChange,\r\n  onTemplateProductCodeChange,\r\n  onAvailableCustomerParameterSelection,\r\n  pageSize,\r\n  onCustomerParameterAssociation,\r\n  onAssociatedCustomerParameterSelection,\r\n  onCustomerParameterDisassociation,\r\n  handleCellDataEdit,\r\n  modAttributeMetaDataList,\r\n  attributeValidationErrors,\r\n  onAttributeDataChange,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n  const handleCustomEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={cellData.rowData[cellData.field]}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\" style={{\"align-items\":\"initial\"}}>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={modCOACustomer.CustomerCode}\r\n                label={t(\"COACustomerCode\")}\r\n                indicator=\"required\"\r\n                options={listOptions.customerCodes}\r\n                onChange={(data) => onFieldChange(\"CustomerCode\", data)}\r\n                error={t(validationErrors.CustomerCode)}\r\n                disabled={coaCustomer.CustomerCode !== \"\"}\r\n                multiple={false}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={modCOACustomer.FinishedProductCode}\r\n                label={t(\"COACustomerFPCode\")}\r\n                indicator=\"required\"\r\n                options={listOptions.finishedProductCodes}\r\n                onChange={(data) => onFinishedProductCodeChange(data)}\r\n                error={t(validationErrors.FinishedProductCode)}\r\n                disabled={coaCustomer.FinishedProductCode !== \"\"}\r\n                multiple={false}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={modCOACustomer.BaseProductCode}\r\n                label={t(\"COACustomerBPCode\")}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.baseProductCodes,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                onChange={(data) => onBaseProductCodeChange(data)}\r\n                error={t(validationErrors.BaseProductCode)}\r\n                disabled={false}\r\n                multiple={false}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                text={modCOACustomer.BaseProductCode}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={modCOACustomer.TemplateCode}\r\n                label={t(\"COACustomerTemplateCode\")}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.templateCodes,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                onChange={(data) => onTemplateProductCodeChange(data)}\r\n                error={t(validationErrors.TemplateCode)}\r\n                disabled={false}\r\n                multiple={false}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                text={modCOACustomer.TemplateCode}\r\n              />\r\n            </div>\r\n          </div>\r\n          {modAttributeMetaDataList.length > 0\r\n            ? modAttributeMetaDataList.map((attire) => (\r\n                <ErrorBoundary>\r\n                  <Accordion>\r\n                    <Accordion.Content\r\n                      className=\"attributeAccordian\"\r\n                      title={t(\"Attributes_Header\")}\r\n                    >\r\n                      <AttributeDetails\r\n                        selectedAttributeList={attire.attributeMetaDataList}\r\n                        handleCellDataEdit={onAttributeDataChange}\r\n                        attributeValidationErrors={handleValidationErrorFilter(\r\n                          attributeValidationErrors,\r\n                          attire.TerminalCode\r\n                        )}\r\n                      ></AttributeDetails>\r\n                    </Accordion.Content>\r\n                  </Accordion>\r\n                </ErrorBoundary>\r\n              ))\r\n            : null}\r\n          <div className=\"row\" style={{\"align-items\":\"initial\"}}>\r\n            <div className=\"col-12 col-md-5 col-lg-7\">\r\n              <h4>{t(\"COACustomer_Configuration\")}</h4>\r\n              <div className=\"detailsTable\">\r\n                <DataTable\r\n                  data={listOptions.availableCustomerParameters}\r\n                  search={true}\r\n                  selectionMode=\"multiple\"\r\n                  selection={listOptions.selectedAvailableCustomerParameters}\r\n                  onSelectionChange={onAvailableCustomerParameterSelection}\r\n                  rows={pageSize}\r\n                  searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                >\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"ParameterName\"\r\n                    field=\"ParameterName\"\r\n                    header={t(\"COACustomerDetail_ParameterName\")}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"Specification\"\r\n                    field=\"Specification\"\r\n                    header={t(\"COACustomerDetail_Specification\")}\r\n                    editFieldType=\"text\"\r\n                    editable={true}\r\n                    customEditRenderer={(cellData) =>\r\n                      handleCustomEditTextBox(cellData)\r\n                    }\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"Method\"\r\n                    field=\"Method\"\r\n                    header={t(\"COACustomerDetail_Method\")}\r\n                    editFieldType=\"text\"\r\n                    editable={true}\r\n                    customEditRenderer={(cellData) =>\r\n                      handleCustomEditTextBox(cellData)\r\n                    }\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"SortIndex\"\r\n                    field=\"SortIndex\"\r\n                    header={t(\"COACustomerDetail_SortIndex\")}\r\n                    editFieldType=\"text\"\r\n                    editable={true}\r\n                    customEditRenderer={(cellData) =>\r\n                      handleCustomEditTextBox(cellData)\r\n                    }\r\n                  ></DataTable.Column>\r\n                  {Array.isArray(listOptions.availableCustomerParameters) &&\r\n                  listOptions.availableCustomerParameters.length > pageSize ? (\r\n                    <DataTable.Pagination />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </DataTable>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-2 col-lg-2\">\r\n              <br></br>\r\n              <br></br>\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  icon={<Icon name=\"caret-right\" root=\"common\" />}\r\n                  content=\"\"\r\n                  iconPosition=\"right\"\r\n                  onClick={onCustomerParameterAssociation}\r\n                  disabled={\r\n                    listOptions.availableCustomerParameters.length > 0\r\n                      ? false\r\n                      : true\r\n                  }\r\n                />\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <Button\r\n                  type=\"primary\"\r\n                  icon={<Icon name=\"caret-left\" root=\"common\" />}\r\n                  content=\"\"\r\n                  iconPosition=\"right\"\r\n                  onClick={onCustomerParameterDisassociation}\r\n                  disabled={\r\n                    listOptions.associatedCustomerParameters.length > 0\r\n                      ? false\r\n                      : true\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-5 col-lg-3\">\r\n              <h4>{t(\"COACustomer_Configuration_AvailableParameter\")}</h4>\r\n              <div className=\"detailsTable\">\r\n                <DataTable\r\n                  data={listOptions.associatedCustomerParameters}\r\n                  search={true}\r\n                  selectionMode=\"multiple\"\r\n                  selection={listOptions.selectedAssociatedCustomerParameters}\r\n                  onSelectionChange={onAssociatedCustomerParameterSelection}\r\n                  rows={pageSize}\r\n                  searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                >\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"ParameterName\"\r\n                    field=\"ParameterName\"\r\n                    header={t(\"COACustomerDetail_DisableParameterName\")}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  {Array.isArray(listOptions.associatedCustomerParameters) &&\r\n                  listOptions.associatedCustomerParameters.length > pageSize ? (\r\n                    <DataTable.Pagination />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </DataTable>\r\n              </div>\r\n            </div>\r\n\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { COACustomerDetails } from \"../../UIBase/Details/COACustomerDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { coacustomerValidationDef } from \"../../../JS/ValidationDef\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { emptyCOACustomer } from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { functionGroups, fnCOACustomer } from \"../../../JS/FunctionGroups\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nimport { coaCustomerAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\n\r\nclass COACustomerDetailsComposite extends Component {\r\n  state = {\r\n    coaCustomer: lodash.cloneDeep(emptyCOACustomer),\r\n    modCOACustomer: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      coacustomerValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    showAuthenticationLayout: false,\r\n    tempCOACustomer: {},\r\n    initavailableCustomerParameters: [],\r\n    availableCustomerParameters: [],\r\n    selectedAvailableCustomerParameters: [],\r\n    associatedCustomerParameters: [],\r\n    selectedAssociatedCustomerParameters: [],\r\n    customerCodes: [],\r\n    finishedProductCodes: [],\r\n    baseProductCodes: [],\r\n    templateCodes: [],\r\n    attributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    allCustomerParameters: [],\r\n    allFinishedProducts: [],\r\n  };\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modAttributeMetaDataList = [];\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n      var modCOACustomer = lodash.cloneDeep(this.state.modCOACustomer);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        });\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.COACUSTOMER.forEach(function (\r\n            attributeMetaData\r\n          ) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue = modCOACustomer.Attributes.find(\r\n                (coaCustomerAttribute) => {\r\n                  return coaCustomerAttribute.TerminalCode === terminal;\r\n                }\r\n              );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modAttributeMetaDataList = [];\r\n      modAttributeMetaDataList = attributesTerminalsList;\r\n      modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modAttributeMetaDataList\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n\r\n      this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"coaCustomerDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList.COACUSTOMER) &&\r\n        attributeMetaDataList.COACUSTOMER.length > 0\r\n      ) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.COACUSTOMER[0].TerminalCode,\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COACustomerDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors, modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.COACUSTOMER\r\n          ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  getAllFinishedProducts() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAllFinishedProducts +\r\n          \"?ShareholderCode=\" +\r\n          this.props.selectedShareholder,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (Array.isArray(result.EntityResult)) {\r\n              let shareholderCustomers = result.EntityResult.filter(\r\n                (shareholderCust) =>\r\n                  shareholderCust.ShareholderCode ===\r\n                  this.props.selectedShareholder //shareholder\r\n              );\r\n              if (shareholderCustomers.length > 0) {\r\n                let allFinishedProducts =\r\n                  shareholderCustomers[0].FinishedProductBaseProductsList;\r\n                let finishedProductCodes = Object.keys(allFinishedProducts);\r\n                finishedProductCodes =\r\n                  Utilities.transferListtoOptions(finishedProductCodes);\r\n                this.setState(\r\n                  {\r\n                    allFinishedProducts,\r\n                    finishedProductCodes: finishedProductCodes,\r\n                  },\r\n                  () => this.getAllParameters()\r\n                );\r\n              } else {\r\n                console.log(\"no finishedProduct identified for shareholder\");\r\n              }\r\n            } else {\r\n              console.log(\"finishedProduct not identified for shareholder\");\r\n            }\r\n          } else {\r\n            this.setState({ customerCodes: [] });\r\n            console.log(\"Error in getAllFinishedProducts:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ customerCodes: [] });\r\n          console.log(\"Error while getAllFinishedProducts List:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while getCOACustomerCode List:\", error);\r\n    }\r\n  }\r\n\r\n  GetTemplateofBaseProduct(baseProductCode) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetTemplateofBaseProduct +\r\n          \"?BaseProductCode=\" +\r\n          baseProductCode,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            var list = result.EntityResult;\r\n            var tempTemplateCodes = [];\r\n            list.forEach((item) => {\r\n              tempTemplateCodes.push(item.Code);\r\n            });\r\n            this.setState({\r\n              templateCodes: Utilities.transferListtoOptions(tempTemplateCodes),\r\n              isReadyToRender: true,\r\n            });\r\n          } else {\r\n            this.setState({ templateCodes: [], isReadyToRender: true });\r\n            console.log(\"Error in GetTemplateofBaseProduct:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ templateCodes: [], isReadyToRender: true });\r\n          console.log(\"Error while GetTemplateofBaseProduct:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while GetTemplateofBaseProduct:\", error);\r\n    }\r\n  }\r\n\r\n  getAllParameters = () => {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.coaTemplateCode,\r\n          value: \"\",\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.coaTemplateCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.GetAllParameters,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let details = result.EntityResult;\r\n            var rightParameters = [];\r\n            details.forEach((obj) => {\r\n              var tempObj = {\r\n                ParameterName: obj.ParameterName,\r\n                Specification: obj.Specification,\r\n                Method: obj.Method,\r\n                SortIndex: obj.SortIndex,\r\n              };\r\n              rightParameters.push(tempObj);\r\n            });\r\n            this.setState(\r\n              {\r\n                allCustomerParameters: rightParameters,\r\n              },\r\n              () => {\r\n                this.getAttributes(this.props.selectedRow);\r\n              }\r\n            );\r\n          } else {\r\n            this.setState(\r\n              {\r\n                allCustomerParameters: [],\r\n              },\r\n              () => {}\r\n            );\r\n            console.log(\"Error in getAllParameters:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getAllParameters:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while getAllParameters:\", error);\r\n    }\r\n  };\r\n\r\n  handleFinishedProductCodeChange = (data) => {\r\n    try {\r\n      const modCOACustomer = lodash.cloneDeep(this.state.modCOACustomer);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modCOACustomer[\"FinishedProductCode\"] = data;\r\n      modCOACustomer.BaseProductCode = \"\";\r\n      modCOACustomer.TemplateCode = \"\";\r\n      this.setState(\r\n        {\r\n          modCOACustomer,\r\n          templateCodes: [],\r\n          availableCustomerParameters: [],\r\n          selectedAvailableCustomerParameters: [],\r\n          associatedCustomerParameters: lodash.cloneDeep(\r\n            this.state.allCustomerParameters\r\n          ),\r\n          isReadyToRender: false,\r\n        },\r\n        () => {\r\n          this.setState({ isReadyToRender: true });\r\n        }\r\n      );\r\n      if (coacustomerValidationDef[\"FinishedProductCode\"] !== undefined) {\r\n        validationErrors[\"FinishedProductCode\"] = Utilities.validateField(\r\n          coacustomerValidationDef[\"FinishedProductCode\"],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n\r\n      if (validationErrors[\"FinishedProductCode\"] !== \"\") {\r\n        return;\r\n      }\r\n      let allFinishedProducts = this.state.allFinishedProducts;\r\n      if (allFinishedProducts !== undefined && allFinishedProducts !== null) {\r\n        if (\r\n          allFinishedProducts[data] !== undefined &&\r\n          allFinishedProducts[data] !== null\r\n        ) {\r\n          this.setState({\r\n            baseProductCodes: Utilities.transferListtoOptions(\r\n              allFinishedProducts[data]\r\n            ),\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in handleFinishedProductCodeChange:\", error);\r\n    }\r\n  };\r\n\r\n  handleBaseProductCodeChange = (data) => {\r\n    try {\r\n      const modCOACustomer = lodash.cloneDeep(this.state.modCOACustomer);\r\n      modCOACustomer[\"BaseProductCode\"] = data;\r\n      this.setState({ modCOACustomer, isReadyToRender: false }, () => {\r\n        if (data == null) {\r\n          modCOACustomer.TemplateCode = \"\";\r\n          this.setState({\r\n            templateCodes: [],\r\n            availableCustomerParameters: [],\r\n            associatedCustomerParameters: lodash.cloneDeep(\r\n              this.state.allCustomerParameters\r\n            ),\r\n            isReadyToRender: true,\r\n          });\r\n          return;\r\n        }\r\n        this.GetTemplateofBaseProduct(data);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error in handleBaseProductCodeChange:\", error);\r\n    }\r\n  };\r\n\r\n  handleTemplateProductCodeChange = (data) => {\r\n    try {\r\n      const modCOACustomer = lodash.cloneDeep(this.state.modCOACustomer);\r\n      modCOACustomer[\"TemplateCode\"] = data;\r\n      this.setState({ modCOACustomer, isReadyToRender: false }, () => {\r\n        if (data == null) {\r\n          this.setState({\r\n            availableCustomerParameters: [],\r\n            associatedCustomerParameters: lodash.cloneDeep(\r\n              this.state.allCustomerParameters\r\n            ),\r\n            isReadyToRender: true,\r\n          });\r\n          return;\r\n        }\r\n\r\n        var keyCode = [\r\n          {\r\n            key: KeyCodes.coaTemplateCode,\r\n            value: data,\r\n          },\r\n        ];\r\n        var obj = {\r\n          ShareHolderCode: this.props.selectedShareholder,\r\n          keyDataCode: KeyCodes.coaTemplateCode,\r\n          KeyCodes: keyCode,\r\n        };\r\n\r\n        // handle availableCustomerParameters\r\n        axios(\r\n          RestAPIs.GetCOATemplateForCustomer,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              let details = result.EntityResult.COATemplateDetailsList;\r\n              var showParameters = [];\r\n              details.forEach((obj) => {\r\n                var tempObj = {\r\n                  ParameterName: obj.ParameterName,\r\n                  Specification: obj.Specification,\r\n                  Method: obj.Method,\r\n                  SortIndex: obj.SortIndex,\r\n                };\r\n                showParameters.push(tempObj);\r\n              });\r\n              var allCustomerParameters = lodash.cloneDeep(\r\n                this.state.allCustomerParameters\r\n              );\r\n              let remainingParameters = allCustomerParameters.filter(\r\n                (item) =>\r\n                  !showParameters.some(\r\n                    (ele) => ele.ParameterName === item.ParameterName\r\n                  )\r\n              );\r\n              this.setState({\r\n                availableCustomerParameters: showParameters,\r\n                associatedCustomerParameters: remainingParameters,\r\n                isReadyToRender: true,\r\n              });\r\n            } else {\r\n              this.setState({\r\n                availableCustomerParameters: [],\r\n                isReadyToRender: true,\r\n              });\r\n              console.log(\r\n                \"Error in GetCOATemplateForCustomer:\",\r\n                result.ErrorList\r\n              );\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error while GetCOATemplateForCustomer:\", error, data);\r\n          });\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error in handleBaseProductCodeChange:\", error);\r\n    }\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modCOACustomer = lodash.cloneDeep(this.state.modCOACustomer);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modCOACustomer[propertyName] = data;\r\n      this.setState({ modCOACustomer });\r\n      if (coacustomerValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          coacustomerValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COACustomerDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.coaCustomer.Name !== \"\" &&\r\n        nextProps.selectedRow.Common_Name === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getCOACustomer(nextProps.selectedRow);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COACustomerDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getAllFinishedProducts();\r\n      this.getCOACustomerCode();\r\n    } catch (error) {\r\n      console.log(\r\n        \"COACustomerDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(coaCustomerRow) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [coaCustomerAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.COACUSTOMER\r\n                ),\r\n            },\r\n            () => this.getCOACustomer(coaCustomerRow)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  getCOACustomerCode() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetCustomerDestinations +\r\n          \"?TransportationType=ROAD\" +\r\n          \"&ShareholderCode=\" +\r\n          this.props.selectedShareholder,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (Array.isArray(result.EntityResult)) {\r\n              let shareholderCustomers = result.EntityResult.filter(\r\n                (shareholderCust) =>\r\n                  shareholderCust.ShareholderCode ===\r\n                  this.props.selectedShareholder\r\n              );\r\n              if (shareholderCustomers.length > 0) {\r\n                let customerDestinationOptions =\r\n                  shareholderCustomers[0].CustomerDestinationsList;\r\n                let customerCodes = [];\r\n                if (customerDestinationOptions !== null) {\r\n                  customerCodes = Object.keys(customerDestinationOptions);\r\n                  customerCodes =\r\n                    Utilities.transferListtoOptions(customerCodes);\r\n                }\r\n                this.setState({ customerCodes });\r\n              } else {\r\n                this.setState({ customerCodes: [] });\r\n                console.log(\r\n                  \"COACustomerDetailComposite:no customers identified for shareholder\"\r\n                );\r\n              }\r\n            } else {\r\n              this.setState({ customerCodes: [] });\r\n              console.log(\r\n                \"COACustomerDetailComposite:customerdestinations not identified for shareholder\"\r\n              );\r\n            }\r\n          } else {\r\n            this.setState({ customerCodes: [] });\r\n            console.log(\"Error in getCOACustomerCode:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ customerCodes: [] });\r\n          console.log(\"Error while getCOACustomerCode List:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while getCOACustomerCode List:\", error);\r\n    }\r\n  }\r\n  getCOACustomer(selectedRow) {\r\n    emptyCOACustomer.ShareholderCode = this.props.selectedShareholder;\r\n    if (\r\n      selectedRow.CustomerCode === undefined ||\r\n      selectedRow.CustomerCode === \"\"\r\n    ) {\r\n      this.setState(\r\n        {\r\n          coaCustomer: lodash.cloneDeep(emptyCOACustomer),\r\n          modCOACustomer: lodash.cloneDeep(emptyCOACustomer),\r\n          isReadyToRender: false,\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnCOACustomer\r\n          ),\r\n          availableCustomerParameters: [],\r\n          modAttributeMetaDataList: [],\r\n          associatedCustomerParameters: lodash.cloneDeep(\r\n            this.state.allCustomerParameters\r\n          ),\r\n        },\r\n        () => {\r\n          this.localNodeAttribute();\r\n          this.setState({ isReadyToRender: true });\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.customerCode,\r\n        value: selectedRow.CustomerCode,\r\n      },\r\n    ];\r\n    keyCode.push({\r\n      key: KeyCodes.finishedProductCode,\r\n      value: selectedRow.FinishedProductCode,\r\n    });\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.customerCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetCOACustomer,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let details = result.EntityResult.COACustomerDetailsList;\r\n          var AvailableCustomerParameters = [];\r\n          details.forEach((obj) => {\r\n            var tempObj = {\r\n              ParameterName: obj.AnalysisParameterName,\r\n              Specification: obj.Specification,\r\n              Method: obj.Method,\r\n              SortIndex: obj.SortIndex,\r\n            };\r\n            AvailableCustomerParameters.push(tempObj);\r\n          });\r\n          var allCustomerParameters = lodash.cloneDeep(\r\n            this.state.allCustomerParameters\r\n          );\r\n          let remainingParameters = allCustomerParameters.filter(\r\n            (item) =>\r\n              !AvailableCustomerParameters.some(\r\n                (ele) => ele.ParameterName === item.ParameterName\r\n              )\r\n          );\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              coaCustomer: lodash.cloneDeep(result.EntityResult),\r\n              modCOACustomer: lodash.cloneDeep(result.EntityResult),\r\n              availableCustomerParameters: AvailableCustomerParameters,\r\n              initavailableCustomerParameters: AvailableCustomerParameters,\r\n              associatedCustomerParameters: remainingParameters,\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnCOACustomer\r\n              ),\r\n            },\r\n            () => {\r\n              this.localNodeAttribute();\r\n            }\r\n          );\r\n          let finishedProductCode = this.state.coaCustomer.FinishedProductCode;\r\n          let allFinishedProducts = this.state.allFinishedProducts;\r\n          if (\r\n            allFinishedProducts !== undefined &&\r\n            allFinishedProducts !== null\r\n          ) {\r\n            if (\r\n              allFinishedProducts[finishedProductCode] !== undefined &&\r\n              allFinishedProducts[finishedProductCode] !== null\r\n            ) {\r\n              this.setState({\r\n                baseProductCodes: Utilities.transferListtoOptions(\r\n                  allFinishedProducts[finishedProductCode]\r\n                ),\r\n              });\r\n            }\r\n          }\r\n          this.GetTemplateofBaseProduct(this.state.coaCustomer.BaseProductCode);\r\n        } else {\r\n          this.setState(\r\n            {\r\n              coaCustomer: lodash.cloneDeep(emptyCOACustomer),\r\n              modCOACustomer: lodash.cloneDeep(emptyCOACustomer),\r\n              isReadyToRender: true,\r\n            },\r\n            () => {}\r\n          );\r\n          console.log(\"Error in getCOACustomer:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting coaCustomer:\", error, selectedRow);\r\n      });\r\n  }\r\n\r\n  handleAvailableCustomerSelection = (e) => {\r\n    this.setState({ selectedAvailableCustomerParameters: e });\r\n  };\r\n\r\n  handleAssociatedCustomerSelection = (e) => {\r\n    this.setState({ selectedAssociatedCustomerParameters: e });\r\n  };\r\n\r\n  handleCustomerAssociation = () => {\r\n    try {\r\n      const selectedAvailableCustomerParameters = lodash.cloneDeep(\r\n        this.state.selectedAvailableCustomerParameters\r\n      );\r\n      let availableCustomerParameters = lodash.cloneDeep(\r\n        this.state.availableCustomerParameters\r\n      );\r\n      let associatedCustomerParameters = lodash.cloneDeep(\r\n        this.state.associatedCustomerParameters\r\n      );\r\n      selectedAvailableCustomerParameters.forEach((obj) => {\r\n        associatedCustomerParameters.push(obj);\r\n        availableCustomerParameters = availableCustomerParameters.filter(\r\n          (com) => {\r\n            return com.ParameterName !== obj.ParameterName;\r\n          }\r\n        );\r\n      });\r\n      this.setState(\r\n        {\r\n          associatedCustomerParameters,\r\n          selectedAvailableCustomerParameters: [],\r\n          availableCustomerParameters,\r\n          isReadyToRender: false,\r\n        },\r\n        () => {\r\n          this.setState({ isReadyToRender: true });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"ProcessConfigDetailsComposite:Error occured on handleCustomerAssociation\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCustomerDisassociation = () => {\r\n    try {\r\n      const selectedAssociatedCustomerParameters = lodash.cloneDeep(\r\n        this.state.selectedAssociatedCustomerParameters\r\n      );\r\n      let availableCustomerParameters = lodash.cloneDeep(\r\n        this.state.availableCustomerParameters\r\n      );\r\n      let associatedCustomerParameters = lodash.cloneDeep(\r\n        this.state.associatedCustomerParameters\r\n      );\r\n      selectedAssociatedCustomerParameters.forEach((obj) => {\r\n        availableCustomerParameters.push(obj);\r\n        associatedCustomerParameters = associatedCustomerParameters.filter(\r\n          (com) => {\r\n            return com.ParameterName !== obj.ParameterName;\r\n          }\r\n        );\r\n      });\r\n      this.setState(\r\n        {\r\n          associatedCustomerParameters,\r\n          selectedAssociatedCustomerParameters: [],\r\n          availableCustomerParameters,\r\n          isReadyToRender: false,\r\n        },\r\n        () => {\r\n          this.setState({ isReadyToRender: true });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"ProcessConfigDetailsComposite:Error occured on handleCustomerDisassociation\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateSave(attributeList) {\r\n    const { modCOACustomer } = this.state;\r\n    var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    Object.keys(coacustomerValidationDef).forEach(function (key) {\r\n      validationErrors[key] = Utilities.validateField(\r\n        coacustomerValidationDef[key],\r\n        modCOACustomer[key]\r\n      );\r\n    });\r\n\r\n    this.setState({ validationErrors });\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n    var returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  }\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  saveCOACustomer = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempCOACustomer = lodash.cloneDeep(this.state.tempCOACustomer);\r\n      let availableTems = lodash.cloneDeep(\r\n        this.state.availableCustomerParameters\r\n      );\r\n\r\n      tempCOACustomer.COACustomerDetailsList = [];\r\n      availableTems.forEach((obj) => {\r\n        let singleCustomer = {\r\n          ParameterName: obj.ParameterName,\r\n          AnalysisParameterName: obj.ParameterName,\r\n          Specification: obj.Specification,\r\n          Method: obj.Method,\r\n          SortIndex: obj.SortIndex,\r\n          IsEnabled: true,\r\n          CreatedTime: new Date(),\r\n          LastUpdatedTime: new Date(),\r\n        };\r\n        tempCOACustomer.COACustomerDetailsList.push(singleCustomer);\r\n      });\r\n\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      tempCOACustomer.Attributes =\r\n        Utilities.fillAttributeDetails(attributeList);\r\n      tempCOACustomer.BaseProductCode =\r\n        tempCOACustomer.BaseProductCode === null\r\n          ? \"\"\r\n          : tempCOACustomer.BaseProductCode;\r\n      tempCOACustomer.TemplateCode =\r\n        tempCOACustomer.TemplateCode === null\r\n          ? \"\"\r\n          : tempCOACustomer.TemplateCode;\r\n      this.state.coaCustomer.CustomerCode === \"\"\r\n        ? this.createCOACustomer(tempCOACustomer)\r\n        : this.updateCOACustomer(tempCOACustomer);\r\n    } catch (error) {\r\n      console.log(\"COACustomerDetailsComposite : Error in saveCOACustomer\");\r\n    }\r\n  };\r\n  handleSave = () => {\r\n    try {\r\n      let modCOACustomer = lodash.cloneDeep(this.state.modCOACustomer);\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      if (this.validateSave(attributeList)) {\r\n        modCOACustomer = this.fillAttributeDetails(\r\n          modCOACustomer,\r\n          attributeList\r\n        );\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempCOACustomer = lodash.cloneDeep(modCOACustomer);\r\n        this.setState({ showAuthenticationLayout, tempCOACustomer }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveCOACustomer();\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COACustomerDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  fillAttributeDetails(modCOACustomer, attributeList) {\r\n    try {\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modCOACustomer.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n      return modCOACustomer;\r\n    } catch (error) {\r\n      console.log(\r\n        \"COACustomerDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  createCOACustomer(modCOACustomer) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.customerCode,\r\n        value: modCOACustomer.COACustomerCode,\r\n      },\r\n    ];\r\n\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.customerCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modCOACustomer,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"COACustomerDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"COACustomerCode\"],\r\n          keyValues: [modCOACustomer.CustomerCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateCOACustomer,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnCOACustomer\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () =>\r\n              this.getCOACustomer({\r\n                CustomerCode: modCOACustomer.CustomerCode,\r\n                FinishedProductCode: modCOACustomer.FinishedProductCode,\r\n              })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnCOACustomer\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in createCOACustomer:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modCOACustomer, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnCOACustomer\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modCOACustomer, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateCOACustomer(modCOACustomer) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.customerCode,\r\n        value: modCOACustomer.COACustomerCode,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.customerCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modCOACustomer,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"COACustomerDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"COACustomerCode\"],\r\n          keyValues: [modCOACustomer.CustomerCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.UpdateCOACustomer,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnCOACustomer\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () =>\r\n              this.getCOACustomer({\r\n                CustomerCode: modCOACustomer.CustomerCode,\r\n                FinishedProductCode: modCOACustomer.FinishedProductCode,\r\n              })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnCOACustomer\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in updateCOACustomer:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modCOACustomer, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modCOACustomer, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnCOACustomer\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      const coaCustomer = lodash.cloneDeep(this.state.coaCustomer);\r\n\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      if (\r\n        coaCustomer.CustomerCode === null ||\r\n        coaCustomer.CustomerCode === \"\"\r\n      ) {\r\n        this.setState(\r\n          {\r\n            availableCustomerParameters: [],\r\n            associatedCustomerParameters: lodash.cloneDeep(\r\n              this.state.allCustomerParameters\r\n            ),\r\n            selectedAvailableCustomerParameters: [],\r\n            selectedAssociatedCustomerParameters: [],\r\n            modCOACustomer: { ...coaCustomer },\r\n            validationErrors,\r\n            modAttributeMetaDataList: [],\r\n            isReadyToRender: false,\r\n          },\r\n          () => {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n            this.setState({ isReadyToRender: true });\r\n          }\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            availableCustomerParameters: lodash.cloneDeep(\r\n              this.state.initavailableCustomerParameters\r\n            ),\r\n            associatedCustomerParameters: lodash.cloneDeep(\r\n              this.state.allCustomerParameters\r\n            ),\r\n            selectedAvailableCustomerParameters: [],\r\n            selectedAssociatedCustomerParameters: [],\r\n            modCOACustomer: { ...coaCustomer },\r\n            validationErrors,\r\n            modAttributeMetaDataList: [],\r\n            isReadyToRender: false,\r\n          },\r\n          () => {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n            this.setState({ isReadyToRender: true });\r\n          }\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COACustomerDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    try {\r\n      let modeCustomerParameters = lodash.cloneDeep(\r\n        this.state.availableCustomerParameters\r\n      );\r\n      var singleParameter = modeCustomerParameters.find(\r\n        (ele) => ele.ParameterName === cellData.rowData.ParameterName\r\n      );\r\n      singleParameter[cellData.field] = newVal;\r\n\r\n      this.setState({ availableCustomerParameters: modeCustomerParameters });\r\n    } catch (error) {\r\n      console.log(\":Error occured on handleCellDataEdit\", error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      availableCustomerParameters: this.state.availableCustomerParameters,\r\n      selectedAvailableCustomerParameters:\r\n        this.state.selectedAvailableCustomerParameters,\r\n      associatedCustomerParameters: this.state.associatedCustomerParameters,\r\n      selectedAssociatedCustomerParameters:\r\n        this.state.selectedAssociatedCustomerParameters,\r\n      customerCodes: this.state.customerCodes,\r\n      finishedProductCodes: this.state.finishedProductCodes,\r\n      baseProductCodes: this.state.baseProductCodes,\r\n      templateCodes: this.state.templateCodes,\r\n    };\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"COACustomer_LastUpDt\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modCOACustomer.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modCOACustomer.LastUpdatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"COACustomer_LastUpdatedBy\",\r\n        fieldValue: this.state.modCOACustomer.LastUpdatedBy,\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <ErrorBoundary>\r\n              <TMDetailsHeader\r\n                entityCode={\r\n                  this.state.coaCustomer.CustomerCode === \"\"\r\n                    ? \"\"\r\n                    : t(\"COACustomer_Headline\")\r\n                }\r\n                newEntityName=\"COACustomer_Title\"\r\n                popUpContents={popUpContents}\r\n              ></TMDetailsHeader>\r\n            </ErrorBoundary>\r\n          )}\r\n        </TranslationConsumer>\r\n        <ErrorBoundary>\r\n          <COACustomerDetails\r\n            coaCustomer={this.state.coaCustomer}\r\n            modCOACustomer={this.state.modCOACustomer}\r\n            genericProps={this.props.genericProps}\r\n            validationErrors={this.state.validationErrors}\r\n            //listOptions={this.state.listOptions}\r\n            listOptions={listOptions}\r\n            onFieldChange={this.handleChange}\r\n            onFinishedProductCodeChange={this.handleFinishedProductCodeChange}\r\n            onBaseProductCodeChange={this.handleBaseProductCodeChange}\r\n            onTemplateProductCodeChange={this.handleTemplateProductCodeChange}\r\n            onAvailableCustomerParameterSelection={\r\n              this.handleAvailableCustomerSelection\r\n            }\r\n            pageSize={\r\n              this.props.userDetails.EntityResult.PageAttibutes\r\n                .WebPortalListPageSize\r\n            }\r\n            onCustomerParameterAssociation={this.handleCustomerAssociation}\r\n            onAssociatedCustomerParameterSelection={\r\n              this.handleAssociatedCustomerSelection\r\n            }\r\n            onCustomerParameterDisassociation={\r\n              this.handleCustomerDisassociation\r\n            }\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            onAttributeDataChange={this.handleAttributeDataChange}\r\n          ></COACustomerDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.coaCustomer.COACustomerCode === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnCOACustomer}\r\n            handleOperation={this.saveCOACustomer}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(COACustomerDetailsComposite);\r\n\r\nCOACustomerDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  genericProps: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["COACustomerDetails","_ref","coaCustomer","modCOACustomer","validationErrors","listOptions","onFieldChange","onFinishedProductCodeChange","onBaseProductCodeChange","onTemplateProductCodeChange","onAvailableCustomerParameterSelection","pageSize","onCustomerParameterAssociation","onAssociatedCustomerParameterSelection","onCustomerParameterDisassociation","handleCellDataEdit","modAttributeMetaDataList","attributeValidationErrors","onAttributeDataChange","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","handleCustomEditTextBox","cellData","_jsx","Input","fluid","value","rowData","field","onChange","reserveSpace","TranslationConsumer","children","t","_jsxs","className","style","Select","placeholder","CustomerCode","label","indicator","options","customerCodes","data","error","disabled","multiple","search","noResultsMessage","FinishedProductCode","finishedProductCodes","BaseProductCode","getOptionsWithSelect","baseProductCodes","text","TemplateCode","templateCodes","length","map","attire","ErrorBoundary","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","DataTable","availableCustomerParameters","selectionMode","selection","selectedAvailableCustomerParameters","onSelectionChange","rows","searchPlaceholder","Column","header","editFieldType","editable","customEditRenderer","Array","isArray","Pagination","textAlign","Button","type","icon","Icon","name","root","content","iconPosition","onClick","associatedCustomerParameters","selectedAssociatedCustomerParameters","COACustomerDetailsComposite","Component","constructor","arguments","state","lodash","emptyCOACustomer","Utilities","coacustomerValidationDef","isReadyToRender","saveEnabled","showAuthenticationLayout","tempCOACustomer","initavailableCustomerParameters","allCustomerParameters","allFinishedProducts","handleAttributeDataChange","attribute","matchedAttributes","this","matchedAttributesList","filter","modattribute","Code","DefaultValue","forEach","setState","console","log","getAllParameters","keyCode","key","KeyCodes","obj","ShareHolderCode","props","selectedShareholder","keyDataCode","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","details","EntityResult","rightParameters","tempObj","ParameterName","Specification","Method","SortIndex","push","getAttributes","selectedRow","ErrorList","catch","handleFinishedProductCodeChange","undefined","handleBaseProductCodeChange","GetTemplateofBaseProduct","handleTemplateProductCodeChange","COATemplateDetailsList","showParameters","remainingParameters","item","some","ele","handleChange","propertyName","handleAvailableCustomerSelection","e","handleAssociatedCustomerSelection","handleCustomerAssociation","com","handleCustomerDisassociation","handleAuthenticationClose","saveCOACustomer","availableTems","COACustomerDetailsList","singleCustomer","AnalysisParameterName","IsEnabled","CreatedTime","Date","LastUpdatedTime","attributeList","Attributes","createCOACustomer","updateCOACustomer","handleSave","validateSave","fillAttributeDetails","userDetails","IsWebPortalUser","handleReset","Object","keys","localNodeAttribute","handleResetAttributeValidationError","newVal","modeCustomerParameters","terminalSelectionChange","selectedTerminals","attributesTerminalsList","existitem","COACUSTOMER","attributeMetaData","Attributevalue","coaCustomerAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","getAllFinishedProducts","shareholderCustomers","shareholderCust","ShareholderCode","FinishedProductBaseProductsList","baseProductCode","list","tempTemplateCodes","componentWillReceiveProps","nextProps","Name","Common_Name","getCOACustomer","componentDidMount","IsArchived","getCOACustomerCode","coaCustomerRow","coaCustomerAttributeEntity","customerDestinationOptions","CustomerDestinationsList","AvailableCustomerParameters","FunctionsList","functionGroups","modify","fnCOACustomer","finishedProductCode","add","returnValue","values","every","COACustomerCode","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","render","popUpContents","fieldName","fieldValue","toLocaleDateString","toLocaleTimeString","LastUpdatedBy","TMDetailsHeader","entityCode","newEntityName","genericProps","PageAttibutes","WebPortalListPageSize","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","margin","Popup","element","marginLeft","size","position","List","defaultProps","float","handleAttributeDateValue","convertAttributeDatetoString","chars","split","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","Constants","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","Checkbox","checked","toString","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","toLocaleString","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaAssignmentAttributeEntity","ddlOptions","selectOptionText","option","unshift","language","window","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}