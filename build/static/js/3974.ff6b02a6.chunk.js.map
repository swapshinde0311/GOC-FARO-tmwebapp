{"version":3,"file":"static/js/3974.ff6b02a6.chunk.js","mappings":"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","sources":["Components/Composite/Common/TMDetailsKPILayout.jsx","Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Details/BayGroupDetails.jsx","Components/Composite/Details/BayGroupDetailsComposite.jsx","Components/Composite/Summary/BayGroupSummaryComposite.jsx","Components/Composite/Entity/BayGroupComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","JS/FunctionGroups.js","JS/KeyCodes.js","../node_modules/@grapecity/wijmo.react.base/es5-esm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nexport default function TMDetailsKPILayout({\r\n    KPIList,\r\n    pageName,\r\n    rowHeight,\r\n    widgetHeight,\r\n    isDraggable,\r\n    isResizable,\r\n    kpiDisplayTopBreakpoint\r\n}) {\r\n    const [KPIDisplays, setKPIDisplays] = useState(1);\r\n\r\n    const kpiDiv = React.useRef(null);\r\n\r\n    const hideKpis = () => {\r\n        let currentScrollPos = window.pageYOffset;\r\n        let KPIDisplay = KPIDisplays;\r\n\r\n        // hide kpis based on div position to top of the window \r\n        if (kpiDiv.current && kpiDiv.current.getBoundingClientRect().top < kpiDisplayTopBreakpoint) {\r\n            KPIDisplay = 0;\r\n        }\r\n        // show the kpis once at top of the screen\r\n        else if (currentScrollPos === 0) {\r\n            KPIDisplay = 1\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n        setKPIDisplays(KPIDisplay);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\") {\r\n            window.addEventListener(\"scroll\", hideKpis);\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // remove listener on unmount\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", hideKpis)\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={kpiDiv}>\r\n            {KPIDisplays === 1 ? <TranslationConsumer>\r\n                {(t) => (\r\n                    <div style={{ marginTop: \"6px\" }}>\r\n                        <ErrorBoundary>\r\n                            <KPIDashboardLayout\r\n                                kpiList={KPIList}\r\n                                isDraggable={isDraggable}\r\n                                isResizable={isResizable}\r\n                                rowHeight={rowHeight}\r\n                                widgetHeight={widgetHeight}\r\n                                pageName={pageName}\r\n                            ></KPIDashboardLayout>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n                )}\r\n            </TranslationConsumer> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nTMDetailsKPILayout.propTypes = {\r\n    kpiDisplayTopBreakpoint: PropTypes.number\r\n}\r\n\r\nTMDetailsKPILayout.defaultProps = {\r\n    kpiDisplayTopBreakpoint: 100\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Input,Icon } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\n\r\nBayGroupDetails.propTypes = {\r\n    bayGroup: PropTypes.object.isRequired,\r\n    modBayGroup: PropTypes.object.isRequired,\r\n    validationErrors: PropTypes.object.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    modAvailablebayList: PropTypes.object.isRequired,\r\n    handleBaySelectionChange: PropTypes.func.isRequired,\r\n    selectedbays:PropTypes.array.isRequired\r\n}\r\n\r\nBayGroupDetails.defaultProps = {\r\n    isEnterpriseNode: false,\r\n}\r\n\r\nexport default function BayGroupDetails({\r\n    bayGroup,\r\n    modBayGroup,\r\n    validationErrors,\r\n    onFieldChange,\r\n    modAvailablebayList,\r\n    handleBaySelectionChange,\r\n    selectedbays\r\n}) {\r\n    function displayValues(cellData) {\r\n        const { value, field } = cellData;\r\n        if (typeof value === \"boolean\" || field === \"Active\") {\r\n            if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n            else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n        }\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t, index) => (\r\n                <div className=\"detailsContainer\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                key={index}\r\n                                fluid\r\n                                value={modBayGroup.GroupName}\r\n                                indicator=\"required\"\r\n                                disabled={bayGroup.GroupName !==\"\"}\r\n                                onChange={(data) => onFieldChange(\"GroupName\", data)}\r\n                                label={t(\"BayGroupList_Name\")}\r\n                                error={t(validationErrors.GroupName)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                key={index}\r\n                                fluid\r\n                                value={modBayGroup.Description}\r\n                                onChange={(data) => onFieldChange(\"Description\", data)}\r\n                                label={t(\"BayGroupList_Description\")}\r\n                                error={t(validationErrors.Description)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                            <div className=\"col-12 bayGroupList tableScroll\">\r\n                                <span>{t(\"BayGroupDetails_AssociatedBays\")}</span>\r\n                        <div class=\"ui red circular empty label badge  circle-padding\" />\r\n                            <DataTable\r\n                            data={modAvailablebayList}\r\n                            selectionMode=\"multiple\"\r\n                              selection={selectedbays}\r\n                              onSelectionChange={handleBaySelectionChange}\r\n                            scrollable={true}\r\n                            scrollHeight=\"320px\"\r\n                                >\r\n                            <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            key=\"BayCode\"\r\n                            field=\"BayCode\"\r\n                            header={t(\"BayGroupList_BayCode\")}\r\n                             ></DataTable.Column>\r\n                               <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            key=\"Description\"\r\n                            field=\"Description\"\r\n                            header={t(\"BayGroupList_Description\")}\r\n                              ></DataTable.Column>\r\n                              <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            key=\"LoadingType\"\r\n                            field=\"LoadingType\"\r\n                            header={t(\"BayGroupList_LoadingType\")}\r\n                             ></DataTable.Column>\r\n                             <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            key=\"MaximumQueue\"\r\n                            field=\"MaximumQueue\"\r\n                            header={t(\"BayGroupList_MaximumQueue\")}\r\n                             ></DataTable.Column>\r\n                             <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            key=\"Active\"\r\n                            field=\"Active\"\r\n                            header={t(\"BayGroupList_Active\")}\r\n                            renderer={(cellData)=>displayValues(cellData)}\r\n                            ></DataTable.Column>\r\n                            </DataTable>\r\n                                </div>\r\n                            \r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    )\r\n}\r\n\r\n"," import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { emptyBayGroup } from \"../../../JS/DefaultEntities\";\r\nimport { bayGroupValidationDef } from \"../../../JS/ValidationDef\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport lodash from \"lodash\";\r\nimport { functionGroups, fnBayGroup, fnKPIInformation } from \"../../../JS/FunctionGroups\";\r\nimport  BayGroupDetails  from \"../../UIBase/Details/BayGroupDetails\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { KpiBayGroupDetail } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass BayGroupDetailsComposite extends Component {\r\n    state = {\r\n        bayGroup: {},\r\n        modBayGroup: {},\r\n        validationErrors: Utilities.getInitialValidationErrors(bayGroupValidationDef),\r\n        isReadyToRender: false,\r\n        saveEnabled: false,\r\n        lookUpData: null,\r\n        isEnable: true,\r\n        modAvailablebayList: [],\r\n        selectedbays: [],\r\n        checkedBays: [],\r\n        bayGroupKPIList:[],\r\n        tempBayGroup: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n            // this.getBayGroup(this.props.selectedRow);\r\n            this.GetBayList();\r\n        } catch (error) {\r\n            console.log(\r\n                \"BaygroupDetailsComposite:Error occured on componentDidMount\",\r\n                error\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        try {\r\n            if (\r\n                this.state.bayGroup.GroupName !== \"\" &&\r\n                nextProps.selectedRow.GroupName === undefined &&\r\n                this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n            ) {\r\n                this.getBayGroup(nextProps.selectedRow);\r\n                let validationErrors = { ...this.state.validationErrors };\r\n                Object.keys(validationErrors).forEach((key) => {\r\n                    validationErrors[key] = \"\";\r\n                });\r\n                this.setState({ validationErrors });\r\n            }\r\n        } catch (error) {\r\n            console.log(\r\n                \"baygroupDetailsComposite:Error occured on componentWillReceiveProps\",\r\n                error\r\n            );\r\n        }\r\n    }\r\n   \r\n    getBayGroup(bayGroupRow) {\r\n        try {\r\n            emptyBayGroup.BayList = this.state.modAvailablebayList;\r\n            if (bayGroupRow.GroupName === undefined) {\r\n                this.setState({\r\n                    bayGroup: lodash.cloneDeep(emptyBayGroup),\r\n                    modBayGroup: lodash.cloneDeep(emptyBayGroup),\r\n                    isReadyToRender: true,\r\n                    modAvailablebayList: lodash.cloneDeep(emptyBayGroup.BayList),\r\n                    checkedBays: [],\r\n                    selectedbays: [],\r\n                    bayGroupKPIList:[],\r\n                    saveEnabled: Utilities.isInFunction(\r\n                        this.props.userDetails.EntityResult.FunctionsList,\r\n                        functionGroups.add,\r\n                        fnBayGroup\r\n                    ),\r\n                });\r\n                return;\r\n            }\r\n            axios(\r\n                RestAPIs.GetBayGroup + \"?bayGroupName=\" +\r\n                bayGroupRow.GroupName,\r\n                Utilities.getAuthenticationObjectforGet(\r\n                    this.props.tokenDetails.tokenInfo\r\n                )\r\n            ).then((response) => {\r\n                var result = response.data;\r\n                if (result.IsSuccess === true && result.EntityResult.length > 0) {\r\n                    let checkedList = [];\r\n                      result.EntityResult[0].BayList.forEach((Bays) => {\r\n              var selectBay = this.state.modAvailablebayList.find(\r\n                (allBay) => {\r\n                  return allBay.BayCode === Bays.BayCode;\r\n                }\r\n              );\r\n              checkedList.push(selectBay);\r\n            });\r\n                    this.setState(\r\n                        {\r\n                            isReadyToRender: true,\r\n                            bayGroup: lodash.cloneDeep(result.EntityResult[0]),\r\n                            modBayGroup: lodash.cloneDeep(result.EntityResult[0]),\r\n                            selectedbays: checkedList,\r\n                            // selectedbays:lodash.cloneDeep(this.state.selectedbays),\r\n                            saveEnabled: Utilities.isInFunction(\r\n                                this.props.userDetails.EntityResult.FunctionsList,\r\n                                functionGroups.modify,\r\n                                fnBayGroup\r\n                            )\r\n                            \r\n                        }, () => this.getKPIList(this.props.selectedShareholder, result.EntityResult[0].bayGroupCode)\r\n                    );\r\n                } else {\r\n                    this.setState({\r\n                        bayGroup: lodash.cloneDeep(emptyBayGroup),\r\n                        modBayGroup: lodash.cloneDeep(emptyBayGroup),\r\n                        isReadyToRender: true,\r\n                        modAvailablebayList: lodash.cloneDeep(emptyBayGroup.BayList),\r\n                        selectedbays: [],\r\n\r\n                    });\r\n                    console.log(\"Error in getbaygroup:\", result.ErrorList);\r\n                }\r\n            })\r\n             }catch(error)  {\r\n                    console.log(\"Error while getbaygroup:\", error, bayGroupRow);\r\n                };\r\n        }\r\n\r\n    GetBayList() {\r\n        try {\r\n            axios(\r\n                RestAPIs.GetBayList,\r\n                Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n            )\r\n                .then((response) => {\r\n                    var result = response.data;\r\n                    if (result.IsSuccess === true) {\r\n                        if (\r\n                            Array.isArray(result.EntityResult.Table) &&\r\n                            result.EntityResult.Table.length >= 0\r\n                        )\r\n                            this.setState({ modAvailablebayList: result.EntityResult.Table },\r\n                                () => {\r\n                                    this.getBayGroup(this.props.selectedRow);\r\n                                });\r\n                    } else {\r\n                        this.setState({ modAvailablebayList: [] });\r\n                        console.log(\"Error in getbayList:\", result.ErrorList);\r\n                    }\r\n            \r\n                })\r\n                .catch((error) => {\r\n                    this.setState({ modAvailablebayList: [] });\r\n                    console.log(\"Error while getting getbayList:\", error);\r\n                });\r\n        }catch(error)  {\r\n                    console.log(\"Error while getbayList:\", error);\r\n                };\r\n  }\r\n    handleBaySelectionChange = (bays) => {\r\n        this.setState({ selectedbays: bays });\r\n  };\r\n    handleChange = (propertyName, data) => {\r\n        try {\r\n            const modBayGroup = lodash.cloneDeep(this.state.modBayGroup);\r\n            modBayGroup[propertyName] = data;\r\n            this.setState({ modBayGroup });\r\n\r\n            const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n            if (bayGroupValidationDef[propertyName] !== undefined) {\r\n                validationErrors[propertyName] = Utilities.validateField(\r\n                    bayGroupValidationDef[propertyName],\r\n                    data\r\n                );\r\n                this.setState({ validationErrors });\r\n            }\r\n        } catch (error) {\r\n            console.log(\r\n                \"BayGroupDetailsComposite:Error occured on handleChange\",\r\n                error\r\n            );\r\n        }\r\n    };\r\n\r\n    handleReset = () => {\r\n        try {\r\n            const { validationErrors } = { ...this.state };\r\n            const bayGroup = lodash.cloneDeep(this.state.bayGroup);\r\n            Object.keys(validationErrors).forEach(function (key) {\r\n                validationErrors[key] = \"\";\r\n            });\r\n            if (bayGroup.BayList.length > 0 && bayGroup.BayList !==\"\") {\r\n                let checkedBayList =[]\r\n                    bayGroup.BayList.forEach((Bays) => {\r\n                    var selectBay = this.state.modAvailablebayList.find(\r\n                        (allBay) => {\r\n                            return allBay.BayCode === Bays.BayCode;\r\n                        }\r\n                    );\r\n                    checkedBayList.push(selectBay);\r\n                })\r\n                this.setState({\r\n                    modBayGroup: { ...bayGroup },\r\n                    selectedbays: checkedBayList,\r\n                    validationErrors,\r\n                });\r\n               \r\n            }\r\n            else {\r\n                this.setState({\r\n                    modBayGroup: { ...bayGroup },\r\n                    validationErrors,\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(\"bayGroupDetailsComposite:Error occured on handleReset\", error);\r\n        }\r\n    };\r\n\r\n    saveBayGroup = () => {\r\n        try {\r\n          this.setState({ saveEnabled: false });\r\n          let tempBayGroup = lodash.cloneDeep(this.state.tempBayGroup);\r\n    \r\n          this.state.bayGroup.GroupName === \"\"\r\n                    ? this.CreateBayGroup(tempBayGroup)\r\n                    : this.updateBayGroup(tempBayGroup);\r\n    \r\n        } catch (error) {\r\n          console.log(\"BayGroupDetails Composite : Error in saveBayGroup\");\r\n        }\r\n      };\r\n\r\n    handleSave = () => {\r\n        try {\r\n            this.handleAuthenticationClose();\r\n            // let modBayGroup = this.fillDetails();\r\n             let modBayGroup = lodash.cloneDeep(this.state.modBayGroup);\r\n            modBayGroup.BayList=lodash.cloneDeep(this.state.selectedbays)\r\n             \r\n            if (this.validateSave(modBayGroup)) {\r\n               \r\n                let showAuthenticationLayout =\r\n                this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n                  ? true\r\n                  : false;\r\n              let tempBayGroup = lodash.cloneDeep(modBayGroup);\r\n              this.setState({ showAuthenticationLayout, tempBayGroup }, () => {\r\n                if (showAuthenticationLayout === false) {\r\n                  this.saveBayGroup();\r\n                }\r\n            });\r\n\r\n            } else this.setState({ saveEnabled: true });\r\n        }\r\n        catch (error) {\r\n            console.log(\"BayGroupDetailsComposite:Error occured on handleSave\", error);\r\n        }\r\n    };\r\n\r\n    // fillDetails() {\r\n    //     try {\r\n    //         let modBayGroup = lodash.cloneDeep(this.state.modBayGroup);\r\n    //         modBayGroup.BayList=lodash.cloneDeep(this.state.selectedbays)\r\n    //         this.setState({ modBayGroup });\r\n    //         return modBayGroup;\r\n    //     } catch (error) {\r\n    //         console.log(\"BayGroupDetailsComposite:Error occured on fillAttributeDetails\", error);\r\n    //     }\r\n    // }\r\n    validateSave(modBayGroup) {\r\n        try { \r\n        var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n        Object.keys(bayGroupValidationDef).forEach(function (key) {\r\n            validationErrors[key] = Utilities.validateField(\r\n                bayGroupValidationDef[key],\r\n                modBayGroup[key]\r\n            );\r\n        });\r\n        let notification = {\r\n            messageType: \"critical\",\r\n            message: [\"BayGroup_Saved_Status\"],\r\n            messageResultDetails: [],\r\n        };\r\n        if (modBayGroup.BayList.length === 0) {\r\n            notification.messageResultDetails.push({\r\n                keyFields: [\"Groupname\"],\r\n                keyValues: [modBayGroup.GroupName],\r\n                isSuccess: false,\r\n                errorMessage: \"BayGroup_PleaseSelectAtleastOneBay\",\r\n            });\r\n        }\r\n        this.setState({ validationErrors });\r\n        var returnValue = true;\r\n        if (returnValue)\r\n            returnValue = Object.values(validationErrors).every(function (value) {\r\n                return value === \"\";\r\n            });\r\n        if (notification.messageResultDetails.length > 0) {\r\n            this.props.onSaved(this.state.modBayGroup, \"update\", notification);\r\n            return false;\r\n        }\r\n        return returnValue;\r\n    } catch(error) {\r\n        console.log(\"Error while Validate Save\",error)\r\n    }\r\n    }\r\n    CreateBayGroup(modBayGroup) {\r\n        try {\r\n            this.handleAuthenticationClose();\r\n            let keyCode = [\r\n                {\r\n                    key: KeyCodes.bayGroup,\r\n                    value: modBayGroup.GroupName,\r\n                },\r\n            ];\r\n            let obj = {\r\n                keyDataCode: KeyCodes.bayGroup,\r\n                KeyCodes: keyCode,\r\n                Entity: modBayGroup,\r\n            };\r\n\r\n            let notification = {\r\n                messageType: \"critical\",\r\n                message: \"BayGroup_Saved_Status\",\r\n                messageResultDetails: [\r\n                    {\r\n                        keyFields: [\"BayGroupList_Name\"],\r\n                        keyValues: [modBayGroup.GroupName],\r\n                        isSuccess: false,\r\n                        errorMessage: \"\",\r\n                    },\r\n                ],\r\n            };\r\n\r\n            axios(\r\n                RestAPIs.CreateBayGroup,\r\n                Utilities.getAuthenticationObjectforPost(\r\n                    obj,\r\n                    this.props.tokenDetails.tokenInfo\r\n                )\r\n            ).then((response) => {\r\n                let result = response.data;\r\n                notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n                notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n                if (result.IsSuccess === true) {\r\n                    this.setState(\r\n                        {\r\n                            saveEnabled: Utilities.isInFunction(\r\n                                this.props.userDetails.EntityResult.FunctionsList,\r\n                                functionGroups.modify,\r\n                                fnBayGroup\r\n                            ),\r\n                        },\r\n                        () => this.getBayGroup({ GroupName: modBayGroup.GroupName })\r\n                    );\r\n                } else {\r\n                    notification.messageResultDetails[0].errorMessage =\r\n                        result.ErrorList[0];\r\n                    this.setState({\r\n                        saveEnabled: Utilities.isInFunction(\r\n                            this.props.userDetails.EntityResult.FunctionsList,\r\n                            functionGroups.add,\r\n                            fnBayGroup\r\n                        ),\r\n                    });\r\n                    console.log(\"Error in BayGroup:\", result.ErrorList);\r\n                }\r\n                this.props.onSaved(this.state.modBayGroup, \"add\", notification);\r\n            })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        saveEnabled: Utilities.isInFunction(\r\n                            this.props.userDetails.EntityResult.FunctionsList,\r\n                            functionGroups.add,\r\n                            fnBayGroup\r\n                        ),\r\n                    });\r\n                    notification.messageResultDetails[0].errorMessage = error;\r\n                    this.props.onSaved(this.state.modBayGroup, \"add\", notification);\r\n                });\r\n        } catch (error)\r\n        {\r\n            console.log(\"Error while createbaygroup\",error)\r\n        }\r\n    }\r\n    updateBayGroup(modBayGroup) {\r\n        try {\r\n            this.handleAuthenticationClose();\r\n            let keyCode = [\r\n                {\r\n                    key: KeyCodes.bayGroup,\r\n                    value: modBayGroup.GroupName\r\n                },\r\n            ];\r\n            let obj = {\r\n                keyDataCode: KeyCodes.bayGroup,\r\n                KeyCodes: keyCode,\r\n                Entity: modBayGroup,\r\n            };\r\n\r\n            let notification = {\r\n                messageType: \"critical\",\r\n                message: \"BayGroup_SavedSuccess\",\r\n                messageResultDetails: [\r\n                    {\r\n                        keyFields: [\"BayGroupList_Name\"],\r\n                        keyValues: [modBayGroup.GroupName],\r\n                        isSuccess: false,\r\n                        errorMessage: \"\",\r\n                    },\r\n                ],\r\n            };\r\n\r\n            axios(\r\n                RestAPIs.UpdateBayGroup,\r\n                Utilities.getAuthenticationObjectforPost(\r\n                    obj,\r\n                    this.props.tokenDetails.tokenInfo\r\n                )\r\n            ).then((response) => {\r\n                let result = response.data;\r\n                notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n                notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n                if (result.IsSuccess === true) {\r\n                    this.setState(\r\n                        {\r\n                            saveEnabled: Utilities.isInFunction(\r\n                                this.props.userDetails.EntityResult.FunctionsList,\r\n                                functionGroups.modify,\r\n                                fnBayGroup\r\n                            ),\r\n                        },\r\n                        () => this.getBayGroup({ GroupName: modBayGroup.GroupName })\r\n                    );\r\n                } else {\r\n                    notification.messageResultDetails[0].errorMessage =\r\n                        result.ErrorList[0];\r\n                    this.setState({\r\n                        saveEnabled: Utilities.isInFunction(\r\n                            this.props.userDetails.EntityResult.FunctionsList,\r\n                            functionGroups.modify,\r\n                            fnBayGroup\r\n                        ),\r\n                    });\r\n                    console.log(\"Error in update BayGroup:\", result.ErrorList);\r\n                }\r\n                this.props.onSaved(this.state.modBayGroup, \"update\", notification);\r\n            })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        saveEnabled: Utilities.isInFunction(\r\n                            this.props.userDetails.EntityResult.FunctionsList,\r\n                            functionGroups.modify,\r\n                            fnBayGroup\r\n                        ),\r\n                    });\r\n                    notification.messageResultDetails[0].errorMessage = error;\r\n                    this.props.onSaved(this.state.modBayGroup, \"modify\", notification);\r\n                });\r\n        } catch (error) {\r\n            console.log(\"Error while updatebaygroup\",error)\r\n        }\r\n    }\r\n    getKPIList(bayGroupCode) {\r\n        let KPIView = Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.view,\r\n            fnKPIInformation\r\n        );\r\n        if (KPIView === true) {\r\n            let objKPIRequestData = {\r\n                PageName: KpiBayGroupDetail,\r\n                InputParameters: [{ key: \"BayGroupCode\", value: bayGroupCode }],\r\n            };\r\n            axios(\r\n                RestAPIs.GetKPI,\r\n                Utilities.getAuthenticationObjectforPost(\r\n                    objKPIRequestData,\r\n                    this.props.tokenDetails.tokenInfo\r\n                )\r\n            )\r\n                .then((response) => {\r\n                    var result = response.data;\r\n                    if (result.IsSuccess === true) {\r\n                        this.setState({\r\n                            bayGroupKPIList: result.EntityResult.ListKPIDetails,\r\n                        });\r\n                    } else {\r\n                        this.setState({ bayGroupKPIList: [] });\r\n                        console.log(\"Error in baygroup KPIList:\", result.ErrorList);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error while getting baygroup KPIList:\", error);\r\n                });\r\n        }\r\n    }\r\n\r\n    handleAuthenticationClose = () => {\r\n        this.setState({\r\n          showAuthenticationLayout: false,\r\n        });\r\n      };\r\n\r\n    render() {\r\n        const popUpContents = [\r\n            {\r\n                fieldName: \"BayGroupList_LastUpdated\",\r\n                fieldValue:\r\n                    new Date(this.state.modBayGroup.LastUpdatedTime).toLocaleDateString() +\r\n                    \" \" +\r\n                    new Date(this.state.modBayGroup.LastUpdatedTime).toLocaleTimeString(),\r\n            },\r\n           \r\n            {\r\n                fieldName: \"BayGroupList_CreatedTime\",\r\n                fieldValue:\r\n                    new Date(this.state.modBayGroup.CreatedTime).toLocaleDateString() +\r\n                    \" \" +\r\n                    new Date(this.state.modBayGroup.CreatedTime).toLocaleTimeString(),\r\n            },\r\n        ];\r\n        return this.state.isReadyToRender ? (\r\n            <div>\r\n                <ErrorBoundary>\r\n                    <TMDetailsHeader\r\n                        entityCode={this.state.bayGroup.GroupName}\r\n                        newEntityName=\"BayGroupDetails_NewBayGroup\"\r\n                        popUpContents={popUpContents}\r\n                    ></TMDetailsHeader>\r\n                </ErrorBoundary>\r\n                <TMDetailsKPILayout KPIList={this.state.bayGroupKPIList}> </TMDetailsKPILayout>\r\n\r\n                <ErrorBoundary>\r\n                    <BayGroupDetails\r\n                    bayGroup={this.state.bayGroup}\r\n                        modBayGroup={this.state.modBayGroup}\r\n                        modAvailablebayList={this.state.modAvailablebayList}\r\n                        validationErrors={this.state.validationErrors}\r\n                        selectedbays={this.state.selectedbays}\r\n                        onFieldChange={this.handleChange}\r\n                        handleBaySelectionChange={this.handleBaySelectionChange}\r\n                        isEnterpriseNode={this.props.userDetails.EntityResult.IsEnterpriseNode}\r\n                    >\r\n                    </BayGroupDetails>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <TMDetailsUserActions\r\n                        handleBack={this.props.onBack}\r\n                        handleSave={this.handleSave}\r\n                        handleReset={this.handleReset}\r\n                        saveEnabled={this.state.saveEnabled}\r\n                    ></TMDetailsUserActions>\r\n                </ErrorBoundary>\r\n\r\n                {this.state.showAuthenticationLayout ? (\r\n                <UserAuthenticationLayout\r\n                    Username={this.props.userDetails.EntityResult.UserName}\r\n                    functionName={\r\n                        this.state.bayGroup.GroupName === \"\"\r\n                        ? functionGroups.add\r\n                        : functionGroups.modify\r\n                    }\r\n                    functionGroup={fnBayGroup}\r\n                    handleOperation={this.saveBayGroup}\r\n                    handleClose={this.handleAuthenticationClose}\r\n                ></UserAuthenticationLayout>\r\n                ) : null}\r\n            </div>\r\n        ) : (\r\n            <LoadingPage message=\"Loading\"></LoadingPage>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userDetails: state.getUserDetails.userDetails,\r\n        tokenDetails: state.getUserDetails.TokenAuth,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BayGroupDetailsComposite);\r\n\r\nBayGroupDetailsComposite.propTypes = {\r\n    selectedRow: PropTypes.object.isRequired,\r\n    terminalCodes: PropTypes.array.isRequired,\r\n    onBack: PropTypes.func.isRequired,\r\n    onSaved: PropTypes.func.isRequired,\r\n};\r\n\r\n           \r\n","import React from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nBayGroupSummaryComposite.propTypes = {\r\n  tableData: PropTypes.object.isRequired,\r\n  toggleExpand: PropTypes.func.isRequired,\r\n    expandedRows: PropTypes.array.isRequired,\r\n    selectedBay: PropTypes.array.isRequired,\r\n  selectedBays:PropTypes.array.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nexport function BayGroupSummaryComposite({\r\n  tableData,\r\n  pageSize,\r\n  selectedItems,\r\n  onSelectionChange,\r\n onRowClick,\r\n  expandedRows,\r\n    toggleExpand,\r\n}) {\r\n    const [t] = useTranslation();\r\n     const expanderTemplate = (data) => {\r\n    const open = expandedRows.findIndex(x => x.GroupName === data.rowData.GroupName) >= 0 ? true : false;\r\n    return (\r\n      <div onClick={() => toggleExpand(data.rowData, open)} className=\"compartmentIcon gridButtonFontColor\">\r\n        <span>{open ? t(\"Hide_AssociateBay(s)\") : t(\"View_AssociateBay(s)\")}</span>\r\n        {/* <Icon root=\"common\" name={open ? \"slidercontrols-minus\" : \"ellipsis-horizontal\"} className=\"margin_l10\" /> */}\r\n      </div>\r\n    );\r\n    };\r\n    function rowExpansionTemplate(data) {\r\n        let compData = []\r\n        compData.push(data)\r\n        return Array.isArray(data.BayList) &&\r\n            data.BayList.length > 0 ? (\r\n            <div className=\"ChildGridViewAllShipmentLoadingDetails secondarytable\">\r\n                <DataTable\r\n                    data={data.BayList}\r\n                >\r\n                     <DataTable.Column  \r\n                    className=\"compColHeight\"\r\n                    key=\"BayCode\"\r\n                    field=\"BayCode\"\r\n                    header={t(\"BayGroupList_AssociatedBays\")}\r\n                    ></DataTable.Column>\r\n                </DataTable>\r\n\r\n            </div>\r\n        ) : (\"\")\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n              <div  className= {\"projectMasterList\"} >\r\n                <DataTable\r\n                  data={tableData}\r\n                  selectionMode=\"multiple\"\r\n                  selectedItems={selectedItems}\r\n                    onSelectionChange={onSelectionChange}\r\n                    selection={selectedItems}\r\n                    // scrollable={true}\r\n                    // scrollHeight=\"320px\"\r\n                    search={true}\r\n                    expandedRows={expandedRows}\r\n                    \r\n                    rowExpansionTemplate={rowExpansionTemplate}\r\n                onCellClick={(data) =>\r\n              onRowClick !== undefined ? onRowClick(data) : {}\r\n            }\r\n                >\r\n                   <DataTable.ActionBar />\r\n                    <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n                    key=\"GroupName\"\r\n                    field=\"GroupName\"\r\n                    sortable={true}\r\n                    header={t(\"BayGroupList_Name\")}\r\n                    ></DataTable.Column>\r\n                     <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n                    key=\"Description\"\r\n                    field=\"Description\"\r\n                    header={t(\"BayGroupList_Description\")}\r\n                    ></DataTable.Column>\r\n                     <DataTable.Column\r\n                 className=\"compColHeight colminWidth\"\r\n                    key=\"CreatedTime\"\r\n                        field=\"CreatedTime\"\r\n                    header={t(\"BayGroupList_CreatedTime\")}\r\n                    ></DataTable.Column>\r\n                     <DataTable.Column\r\n                 className=\"compColHeight colminWidth\"\r\n                    key=\"LastUpdatedTime\"\r\n                    field=\"LastUpdatedTime\"\r\n                    header={t(\"BayGroupList_LastUpdated\")}\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      className=\"expandedColumn\"\r\n                      initialWidth=\"100px\"\r\n                      renderer={expanderTemplate}\r\n                    />\r\n                    {Array.isArray(tableData) && tableData.length > pageSize ? (\r\n              <DataTable.Pagination />\r\n                ) : (\r\n                    \"\"\r\n                    )}\r\n                </DataTable>\r\n                </div>\r\n                </div>\r\n    // <TMSummaryPageComposite\r\n    //   tableData={tableData}\r\n    //   columnDetails={columnDetails}\r\n    //   pageSize={pageSize}\r\n    //   terminalsToShow={terminalsToShow}\r\n    //   selectedItems={selectedItems}\r\n    //   onSelectionChange={onSelectionChange}\r\n    //   onRowClick={onRowClick}\r\n    // ></TMSummaryPageComposite>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { functionGroups, fnBayGroup, fnKPIInformation } from \"../../../JS/FunctionGroups\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { BayGroupSummaryComposite } from \"../Summary/BayGroupSummaryComposite\";\r\nimport BayGroupDetailsComposite from \"../Details/BayGroupDetailsComposite\";\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport { KpiBayGroupList } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass BayGroupComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: true, delete: false, shareholder: false },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    selectedBays: [],\r\n    data: {},\r\n    lookUpData: null,\r\n    isEnable: true,\r\n    expandedRows: [],\r\n    bayList: [],\r\n    bayGroupKPIList: [],\r\n    showAuthenticationLayout: false,\r\n  };\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.GetBayGroupList();\r\n      this.getKPIList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BayGroupComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: {},\r\n        data: {},\r\n        operationsVisibilty,\r\n        selectedBays: [],\r\n        selectedItems: [],\r\n      });\r\n    } catch (error) {\r\n      console.log(\"BayGroupComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnBayGroup\r\n        );\r\n        operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnBayGroup\r\n        );\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            GroupName: data.GroupName,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"BayGroupDetailsComposite:Error occured on savedEvent\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleBack = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnBayGroup\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        isReadyToRender: false,\r\n        expandedRows: [],\r\n      });\r\n      this.GetBayGroupList();\r\n    } catch (error) {\r\n      console.log(\"baygroupComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n  GetBayGroupList() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetBayGroupList,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let modBayGroup = result.EntityResult;\r\n            for (let i = 0; i < modBayGroup.length; i++) {\r\n              modBayGroup[i].CreatedTime =\r\n                new Date(modBayGroup[i].CreatedTime).toLocaleDateString() +\r\n                \" \" +\r\n                new Date(modBayGroup[i].CreatedTime).toLocaleTimeString();\r\n              modBayGroup[i].LastUpdatedTime =\r\n                new Date(modBayGroup[i].LastUpdatedTime).toLocaleDateString() +\r\n                \" \" +\r\n                new Date(modBayGroup[i].LastUpdatedTime).toLocaleTimeString();\r\n            }\r\n            var { operationsVisibilty } = { ...this.state };\r\n            operationsVisibilty.add = Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnBayGroup\r\n            );\r\n            this.setState({\r\n              data: result.EntityResult,\r\n              isReadyToRender: true,\r\n              operationsVisibilty,\r\n              modBayGroup: modBayGroup,\r\n            });\r\n          } else {\r\n            this.setState({ data: [], isReadyToRender: true });\r\n            console.log(\"Error in getbaygroupList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error while getting getbaygroupList:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in getbaygroupList \", error);\r\n    }\r\n  }\r\n  handleDelete = () => {\r\n    this.handleAuthenticationClose();\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n      var deleteBayKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        var GroupName = this.state.selectedItems[i];\r\n        deleteBayKeys.push(GroupName);\r\n      }\r\n      let obj = {\r\n        Entity: deleteBayKeys,\r\n      };\r\n      axios(\r\n        RestAPIs.DeleteBayGroup,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          var isRefreshDataRequire = result.IsSuccess;\r\n\r\n          if (\r\n            result.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            var failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n          var notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"BayGroup_DeleteSuccess\",\r\n            [\"BayGroupName\"]\r\n          );\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({ isReadyToRender: false });\r\n            this.GetBayGroupList();\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n              selectedBays: [],\r\n            });\r\n          } else {\r\n            operationsVisibilty.delete = true;\r\n            this.setState({ operationsVisibilty });\r\n          }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length >= 0)\r\n              messageResult.keyFields[0] = \"BayGroupList_Name\";\r\n          });\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error occured while deleting:\" + error);\r\n          var { operationsVisibilty } = { ...this.state };\r\n          operationsVisibilty.delete = true;\r\n          this.setState({ operationsVisibilty });\r\n        });\r\n    } catch (error) {\r\n      console.log(\"BayGroupComposite:Error occured on handleDelete\", error);\r\n    }\r\n  };\r\n  handleSelection = (items) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n\r\n      operationsVisibilty.delete =\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnBayGroup\r\n        );\r\n\r\n      this.setState({ selectedItems: items, operationsVisibilty });\r\n    } catch (error) {\r\n      console.log(\"BayGroupComposite:Error occured on handleSelection\", error);\r\n    }\r\n  };\r\n  handleRowClick = (item) => {\r\n    try {\r\n      if (item.field !== undefined) {\r\n        var { operationsVisibilty } = { ...this.state };\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnBayGroup\r\n        );\r\n        if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n          operationsVisibilty.delete = false;\r\n        } else {\r\n          operationsVisibilty.delete = Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.remove,\r\n            fnBayGroup\r\n          );\r\n        }\r\n        operationsVisibilty.shareholder = false;\r\n        this.setState({\r\n          isDetails: true,\r\n          selectedRow: item.rowData,\r\n          selectedItems: [item.rowData],\r\n          operationsVisibilty,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"BayGroupComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n  toggleExpand = (data, open) => {\r\n    try {\r\n      let expandedRows = this.state.expandedRows;\r\n      let expandedRowIndex = expandedRows.findIndex(\r\n        (item) => item.GroupName === data.GroupName\r\n      );\r\n      if (open) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n      } else {\r\n        expandedRows.push(data);\r\n      }\r\n      this.setState({ expandedRows });\r\n    } catch (error) {\r\n      console.log(\"Error in ToggleExpand\", error);\r\n    }\r\n  };\r\n  getKPIList() {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      var notification = {\r\n        message: \"\",\r\n        messageType: \"critical\",\r\n        messageResultDetails: [],\r\n      };\r\n      let objKPIRequestData = {\r\n        PageName: KpiBayGroupList,\r\n        InputParameters: [],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              bayGroupKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ bayGroupKPIList: [] });\r\n            console.log(\"Error in baygroup KPIList:\", result.ErrorList);\r\n            notification.messageResultDetails.push({\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: result.ErrorList[0],\r\n            });\r\n          }\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Captain KPIList:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showAuthenticationLayout });\r\n      if (showAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"BayGroupComposite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n  render() {\r\n    // const user = this.props.userDetails.EntityResult;\r\n    // let tmuiInstallType=TMUIInstallType.LIVE;\r\n\r\n    // if(user.IsArchived)\r\n    // tmuiInstallType=TMUIInstallType.ARCHIVE;\r\n\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            breadcrumbItem={this.props.activeItem}\r\n            onAdd={this.handleAdd}\r\n            onDelete={this.authenticateDelete}\r\n            shrVisible={false}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isDetails === true ? (\r\n          <ErrorBoundary>\r\n            <BayGroupDetailsComposite\r\n              key=\"BayGroupDetails\"\r\n              selectedRow={this.state.selectedRow}\r\n              onBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n            ></BayGroupDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isReadyToRender ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <KPIDashboardLayout\r\n                kpiList={this.state.bayGroupKPIList}\r\n                pageName=\"BayGroup\"\r\n              ></KPIDashboardLayout>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n              <BayGroupSummaryComposite\r\n                tableData={this.state.data}\r\n                pageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                terminalsToShow={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .NoOfTerminalsToShow\r\n                }\r\n                selectedItems={this.state.selectedItems}\r\n                selectedBays={this.state.selectedBays}\r\n                expandedRows={this.state.expandedRows}\r\n                toggleExpand={this.toggleExpand}\r\n                onRowClick={this.handleRowClick}\r\n                onSelectionChange={this.handleSelection}\r\n              ></BayGroupSummaryComposite>\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <LoadingPage message=\"Loading\"></LoadingPage>\r\n          </>\r\n        )}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n        {/* <ErrorBoundary>\r\n          <div className=\"detailsContainer\">\r\n            <object\r\n              className=\"tmuiPlaceHolder\"\r\n              type=\"text/html\"\r\n              width=\"100%\"\r\n              height=\"880px\"\r\n              //data=\"http://localhost/tmui/BayGroupList_x.aspx\"\r\n              data={\"/\"+ tmuiInstallType +\"/BayGroupList_x.aspx\"}\r\n            ></object>\r\n          </div>\r\n        </ErrorBoundary> */}\r\n          {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.remove}\r\n            functionGroup={fnBayGroup}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleDelete}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\nBayGroupComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n  selectedRow: PropTypes.object.isRequired,\r\n  selectedShareholder: PropTypes.string,\r\n};\r\nexport default connect(mapStateToProps)(BayGroupComposite);\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";","/*!\n    *\n    * Wijmo Library 5.20221.857\n    * http://wijmo.com/\n    *\n    * Copyright(c) GrapeCity, Inc.  All rights reserved.\n    *\n    * Licensed under the GrapeCity Commercial License.\n    * sales@wijmo.com\n    * wijmo.com/products/wijmo-5/license/\n    *\n    */\n\nvar __extends=this&&this.__extends||function(){var extendStatics=function(t,e){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};return function(t,e){extendStatics(t,e);function __(){this.constructor=t}t.prototype=null===e?Object.create(e):(__.prototype=e.prototype,new __)}}();import{Control,Event,isArray,addClass,removeClass,setCss,isFunction,isPrimitive,isObject,DateTime,isUndefined}from\"@grapecity/wijmo\";import*as React from\"react\";var ComponentBase=function(t){__extends(ComponentBase,t);function ComponentBase(e,n,o){var i=t.call(this,e)||this;i._objPropHash={};i._isMounted=!1;i._mountedCBs=[];i._hostRef=function(t){return i._hostRefValue=t};i._beforeRender=new Event;i._afterRender=new Event;i._beforeWillUnmount=new Event;i._afterWillUnmount=new Event;i._beforeDidUpdate=new Event;i._afterDidUpdate=new Event;ComponentBase._reactMajorVersion||(ComponentBase._reactMajorVersion=parseInt(React.version));i.props=e;i.controlType=n;for(var r=0,s=o&&o.objectProps||[];r<s.length;r++){var p=s[r];i._objPropHash[p]=!0}return i}ComponentBase.prototype.render=function(){this._onBeforeRender();var t=this._renderImpl();this._onAfterRender();return t};ComponentBase.prototype.componentDidMount=function(){var t=this;if(this._isChild()){var e=this.props[ComponentBase._propsParent];e&&e._mountedCB((function(){t._setParent(e)}))}else this._prepareControl();return this.control};ComponentBase.prototype.componentWillUnmount=function(){this._onBeforeWillUnmount();this._siblingInsertedEH&&this._getElement().removeEventListener(\"DOMNodeInserted\",this._siblingInsertedEH);var t=this.control;if(t)if(this._isChild()){var e=this._getParentProp();if(e){var n=this.parent.control[e];if(isArray(n)){var o=n.indexOf(t);o>-1&&n.splice(o,1)}}}else t instanceof Control&&setTimeout((function(){if(t.hostElement){t._orgOuter=null;t.dispose()}}));this._onAfterWillUnmount()};ComponentBase.prototype.shouldComponentUpdate=function(t){return!0};ComponentBase.prototype.componentDidUpdate=function(t){this._onBeforeDidUpdate();var e=this.control;this._copy(e,this.props,t);this._onAfterDidUpdate()};ComponentBase.prototype._mountedCB=function(t){this._isMounted?t():this._mountedCBs.push(t)};ComponentBase.prototype._renderImpl=function(){var t={};t[ComponentBase._propsParent]=this;var e=React.Children.map(this.props.children,(function(e){return e&&React.cloneElement(e,t)})),n={ref:this._hostRef};this._isChild()&&(n.style={display:\"none\"});return React.createElement(\"div\",n,e)};ComponentBase.prototype._onBeforeRender=function(t){this._beforeRender.raise(this,t)};ComponentBase.prototype._onAfterRender=function(t){this._afterRender.raise(this,t)};ComponentBase.prototype._onBeforeWillUnmount=function(t){this._beforeWillUnmount.raise(this,t)};ComponentBase.prototype._onAfterWillUnmount=function(t){this._afterWillUnmount.raise(this,t)};ComponentBase.prototype._onBeforeDidUpdate=function(t){this._beforeDidUpdate.raise(this,t)};ComponentBase.prototype._onAfterDidUpdate=function(t){this._afterDidUpdate.raise(this,t)};ComponentBase.prototype._createControl=function(){var t=this._isChild()?this._isParentInCtor()?this.parent.control:void 0:this._getElement();return new this.controlType(t)};ComponentBase.prototype._prepareControl=function(){var t=this._getElement(),e=this.props;t&&!this._isChild()&&ComponentBase._copyAttrs(t,e,Control._rxInputAtts);var n=this.control=this._createControl(),o=n instanceof Control,i=ComponentBase;if(!this._siblingId){null==this.constructor[i._typeSiblingIdProp]&&(this.constructor[i._typeSiblingIdProp]=++i._siblingDirId+\"\");this._siblingId=this.constructor[i._typeSiblingIdProp]}t.setAttribute(i._typeSiblingIdProp,this._siblingId);var r={};for(var s in e){var p=e[s];this._ignoreProp(s)||isUndefined(p)||(s in n?r[s]=p:this._setHostAttribute(t,s,p))}o?n.initialize(r):this._copy(n,r,null,!0);this._isMounted=!0;var a=this._mountedCBs;this._mountedCBs=[];for(var l=0,h=a;l<h.length;l++){(0,h[l])()}isFunction(e.initialized)&&e.initialized(n)};ComponentBase.prototype._initParent=function(){var t=this._getParentProp();if(t){var e=this.parent.control,n=e[t];if(isArray(n)){var o=this._getSiblingIndex();(o<0||o>=n.length)&&(o=n.length);n.splice(o,0,this.control);this._siblingInsertedEH=this._siblingInserted.bind(this);this._getElement().addEventListener(\"DOMNodeInserted\",this._siblingInsertedEH)}else e[t]=this.control}};ComponentBase.prototype._setParent=function(t){if(t!==this.parent){if(this.parent)throw\"Wijmo child component is already attached to a different parent.\";this.parent=t;this._prepareControl();this._initParent()}};ComponentBase.prototype._isChild=function(){return null!=this._parentProp||null!=this._parentInCtor};ComponentBase.prototype._isParentInCtor=function(){return!0===this._parentInCtor};ComponentBase.prototype._getParentProp=function(){return this.props.wjProperty||this._parentProp};ComponentBase.prototype._getSiblingIndex=function(){var t=this._getElement(),e=t.parentElement;if(!e)return-1;for(var n=e.childNodes,o=-1,i=this._siblingId,r=0;r<n.length;r++){var s=n[r];if(1==s.nodeType&&s.getAttribute(ComponentBase._typeSiblingIdProp)==i){++o;if(s===t)return o}}return-1};ComponentBase.prototype._siblingInserted=function(t){if(t.target===this._getElement()){var e=this._getSiblingIndex(),n=this.control,o=this.parent.control[this._getParentProp()],i=o.indexOf(n);if(e>=0&&i>=0&&e!==i){o.splice(i,1);e=Math.min(e,o.length);o.splice(e,0,n)}}};ComponentBase.prototype._copy=function(t,e,n,o){void 0===o&&(o=!1);if(t&&e){var i,r=t===this.control;for(var s in e)if(!this._ignoreProp(s)||!r){var p=e[s];if(s in t){if(this._isEvent(t,s))o&&isFunction(p)&&t[s].addHandler(p);else if(!n||!this._sameValue(n[s],p))if(null==p)t[s]=p;else if(isPrimitive(p)||isFunction(p)||this._objPropHash[s]&&t===(i||(i=this.control)))t[s]=p;else if(isArray(p)&&isArray(t[s])){var a=t[s],l=p;if(l.length==a.length)for(var h=0;h<l.length;h++)this._copy(a[h],l[h])}else isObject(p)&&this._copy(t[s],e[s])}else this._setHostAttribute(t.hostElement,s,e[s])}}};ComponentBase.prototype._setHostAttribute=function(t,e,n){if(t)switch(e){case\"className\":var o=this._appliedClassName;if(o!==n){removeClass(t,o);addClass(t,n);this._appliedClassName=n}break;case\"style\":setCss(t,n);break;default:null!=t[e]?t[e]=n:\"string\"==typeof n&&\"$\"!==e[0]&&t.setAttribute(e,n)}};ComponentBase.prototype._sameValue=function(t,e){return t==e||DateTime.equals(t,e)};ComponentBase.prototype._isEvent=function(t,e){var n=t&&t[e];return null!=n&&n instanceof Event};ComponentBase.prototype._getElement=function(){return this._hostRefValue};ComponentBase.prototype._ignoreProp=function(t){return\"children\"===t};ComponentBase._copyAttrs=function(t,e,n){if(t)for(var o in e)o.match(n)&&t.setAttribute(o,e[o])};ComponentBase.isInStrictMode=function(t){return!!(t.hasOwnProperty(\"_reactInternalFiber\")&&1&t._reactInternalFiber.mode)};ComponentBase._propsParent=\"$parent\";ComponentBase._typeSiblingIdProp=\"_wjSiblingIdProp\";ComponentBase._siblingDirId=0;return ComponentBase}(React.Component);export{ComponentBase};"],"names":["TMDetailsKPILayout","_ref","KPIList","pageName","rowHeight","widgetHeight","isDraggable","isResizable","kpiDisplayTopBreakpoint","KPIDisplays","setKPIDisplays","useState","kpiDiv","React","hideKpis","currentScrollPos","window","pageYOffset","KPIDisplay","current","getBoundingClientRect","top","useEffect","addEventListener","removeEventListener","_jsx","ref","children","TranslationConsumer","t","style","marginTop","ErrorBoundary","KPIDashboardLayout","kpiList","defaultProps","TMUserActions","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","alignItems","padding","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","BayGroupDetails","bayGroup","modBayGroup","modAvailablebayList","handleBaySelectionChange","selectedbays","index","GroupName","Description","class","DataTable","selectionMode","selection","onSelectionChange","scrollable","scrollHeight","Column","field","header","renderer","cellData","displayValues","isEnterpriseNode","BayGroupDetailsComposite","bayGroupValidationDef","isReadyToRender","saveEnabled","lookUpData","isEnable","checkedBays","bayGroupKPIList","tempBayGroup","bays","handleChange","handleReset","keys","forEach","BayList","checkedBayList","Bays","selectBay","find","allBay","BayCode","push","saveBayGroup","CreateBayGroup","updateBayGroup","handleSave","handleAuthenticationClose","validateSave","showAuthenticationLayout","IsWebPortalUser","IsArchived","GetBayList","componentWillReceiveProps","nextProps","selectedRow","getBayGroup","bayGroupRow","emptyBayGroup","FunctionsList","functionGroups","fnBayGroup","checkedList","modify","getKPIList","bayGroupCode","Array","isArray","Table","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","keyCode","KeyCodes","obj","keyDataCode","Entity","view","fnKPIInformation","objKPIRequestData","PageName","KpiBayGroupDetail","InputParameters","ListKPIDetails","popUpContents","Date","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","CreatedTime","TMDetailsHeader","entityCode","newEntityName","IsEnterpriseNode","TMDetailsUserActions","handleBack","onBack","UserName","LoadingPage","BayGroupSummaryComposite","tableData","pageSize","selectedItems","onRowClick","expandedRows","toggleExpand","useTranslation","search","rowExpansionTemplate","onCellClick","ActionBar","sortable","initialWidth","findIndex","x","rowData","Pagination","BayGroupComposite","isDetails","isDetailsModified","selectedBays","bayList","handleAdd","savedEvent","saveType","remove","toast","NotifyEvent","notificationMessage","autoClose","GetBayGroupList","handleDelete","deleteBayKeys","i","isRefreshDataRequire","ResultDataList","filter","res","messageResult","handleSelection","items","handleRowClick","expandedRowIndex","splice","authenticateDelete","KpiBayGroupList","activeItem","PageAttibutes","WebPortalListPageSize","terminalsToShow","NoOfTerminalsToShow","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","margin","List","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnLanguage","fnWebPortalUserMap","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","transportationType","shareholderCode","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","shipmentCode","orderCode","receiptCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","bayCode","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","TransactionType","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks","__extends","extendStatics","e","setPrototypeOf","__proto__","n","hasOwnProperty","__","prototype","create","ComponentBase","o","call","_objPropHash","_isMounted","_mountedCBs","_hostRef","_hostRefValue","_beforeRender","Event","_afterRender","_beforeWillUnmount","_afterWillUnmount","_beforeDidUpdate","_afterDidUpdate","_reactMajorVersion","parseInt","controlType","r","s","objectProps","p","_onBeforeRender","_renderImpl","_onAfterRender","_isChild","_propsParent","_mountedCB","_setParent","_prepareControl","control","componentWillUnmount","_onBeforeWillUnmount","_siblingInsertedEH","_getElement","_getParentProp","parent","indexOf","Control","setTimeout","hostElement","_orgOuter","dispose","_onAfterWillUnmount","shouldComponentUpdate","componentDidUpdate","_onBeforeDidUpdate","_copy","_onAfterDidUpdate","raise","_createControl","_isParentInCtor","_copyAttrs","_rxInputAtts","_siblingId","_typeSiblingIdProp","_siblingDirId","setAttribute","_ignoreProp","isUndefined","_setHostAttribute","initialize","a","l","h","isFunction","initialized","_initParent","_getSiblingIndex","_siblingInserted","bind","_parentProp","_parentInCtor","wjProperty","parentElement","childNodes","nodeType","getAttribute","target","Math","min","_isEvent","addHandler","_sameValue","isPrimitive","isObject","_appliedClassName","removeClass","addClass","setCss","DateTime","equals","match","isInStrictMode","_reactInternalFiber"],"sourceRoot":""}