{"version":3,"file":"static/js/7974.90a93c51.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Common/WijmoGrid.jsx","Components/Composite/Common/WijmoGridComposite.jsx","Components/UIBase/Details/EmailConfigurationDetails.jsx","Components/Composite/Details/EmailConfigurationDetailsComposite.jsx","Components/Composite/Summary/EmailConfigurationSummaryComposite.jsx","Components/Composite/Entity/EmailConfigurationComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","JS/FunctionGroups.js","JS/KeyCodes.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as wjCore from \"@grapecity/wijmo\";\r\nimport * as wjGrid from \"@grapecity/wijmo.grid\";\r\nimport {\r\n  FlexGrid,\r\n  FlexGridColumn,\r\n  FlexGridCellTemplate,\r\n} from \"@grapecity/wijmo.react.grid\";\r\nimport { FlexGridFilter } from \"@grapecity/wijmo.react.grid.filter\";\r\nimport { Operator } from \"@grapecity/wijmo.grid.filter\";\r\nimport { FlexGridSearch } from \"@grapecity/wijmo.react.grid.search\";\r\nimport { CollectionView } from \"@grapecity/wijmo\";\r\nimport { CollectionViewNavigator, ListBox } from \"@grapecity/wijmo.react.input\";\r\nimport { Selector } from \"@grapecity/wijmo.grid.selector\";\r\nimport { HeadersVisibility } from \"@grapecity/wijmo.grid\";\r\nimport { showPopup, hidePopup, PopupPosition } from \"@grapecity/wijmo\";\r\nimport * as wjcGridXlsx from \"@grapecity/wijmo.grid.xlsx\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport { GroupPanel } from \"@grapecity/wijmo.react.grid.grouppanel\";\r\nimport { Button, Card, Popup } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as loadash from \"lodash\";\r\nimport \"@grapecity/wijmo.touch\";\r\n\r\nconst WijmoGrid = (props) => {\r\n  const [flex, setFlex] = useState(null);\r\n  const [translator] = useTranslation();\r\n  const _getData = (pageLength) => {\r\n    return new CollectionView(props.sourceData, {\r\n      pageSize: pageLength,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState(_getData(props.rowsPerPage));\r\n  const theGrid = React.createRef();\r\n  const theSearch = React.createRef();\r\n  const gridFilter = React.createRef();\r\n  const pagingComponent = React.createRef();\r\n  const colPicker = React.useRef();\r\n\r\n  // to keep track of selected rows\r\n  const selectedRows = React.useRef(props.selectionRequired ? [] : null);\r\n\r\n  // to initialize grid checkbox selection\r\n  let selector = null;\r\n\r\n  //Initialize grid\r\n  const gridInitialized = (grid) => {\r\n    try {\r\n      // localize grid filter\r\n      customizeFilterConditions();\r\n\r\n      if (props.onRowClick) {\r\n        // add row click event handler\r\n        grid.addEventListener(grid.hostElement, \"click\", (e) => {\r\n          let ht = grid.hitTest(e);\r\n          // condition to check if cell is not a grouped cell and a data cell\r\n          if (\r\n            ht.target.closest(\".wj-cell\") &&\r\n            ![...ht.target.closest(\".wj-cell\").classList].includes(\r\n              \"wj-group\"\r\n            ) &&\r\n            ht.cellType === wjGrid.CellType.Cell\r\n          ) {\r\n            // fetch row data\r\n            const rowData = grid.rows[ht.row].dataItem;\r\n            props.onRowClick(rowData);\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      grid.select(-1, -1);\r\n\r\n      setFlex(grid);\r\n      if (props.selectionRequired) {\r\n        // enable checkbox selection\r\n        selector = new Selector(grid, {\r\n          itemChecked: (s, e) => {\r\n            // if only single checkbox selection is required\r\n            if (props.singleSelection) {\r\n              grid.rows\r\n                .filter((row) => {\r\n                  return (\r\n                    row.isSelected &&\r\n                    selectedRows.current.filter((item) =>\r\n                      loadash.isEqual(item, row.dataItem)\r\n                    ).length === 1\r\n                  );\r\n                })\r\n                .forEach((row) => {\r\n                  row.isSelected = false;\r\n                });\r\n            }\r\n\r\n            // pass row data as parameter to checkbox selection handler\r\n            props.onSelectionHandle(\r\n              grid.rows\r\n                .filter((r) => r.isSelected)\r\n                .map((selectedRow) => selectedRow.dataItem)\r\n            );\r\n          },\r\n          // if only single checkbox selection is required\r\n          showCheckAll: !props.singleSelection,\r\n        });\r\n\r\n        let theGrid = selector.column.grid;\r\n        selector.column = theGrid.rowHeaders.columns[0];\r\n        theGrid.headersVisibility = HeadersVisibility.All;\r\n        theGrid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in gridInitialized: \" + error);\r\n    }\r\n  };\r\n\r\n  //Update grid when data changes\r\n  useEffect(() => {\r\n    try {\r\n      if (theGrid != null) {\r\n        //Connect search to the grid\r\n        let grid = theGrid.current.control;\r\n        let search = theSearch.current.control;\r\n        search.grid = grid;\r\n      }\r\n\r\n      setData(_getData(props.rowsPerPage));\r\n    } catch (error) {\r\n      console.log(\"Error in grid update:\", error);\r\n    }\r\n  }, [props.sourceData]);\r\n\r\n  // Pre-select grid rows based on selectedItems props\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && props.selectionRequired) {\r\n        // clear the selectedRows array\r\n        selectedRows.current.length = 0;\r\n        // add selectedItems array items to selectedRows\r\n        selectedRows.current.push(...props.selectedItems);\r\n\r\n        flex.rows.forEach((row) => {\r\n          if (\r\n            props.selectedItems.filter((item) =>\r\n              loadash.isEqual(item, row.dataItem)\r\n            ).length === 1\r\n          ) {\r\n            // checks the row checkbox\r\n            row.isSelected = true;\r\n          } else {\r\n            // unchecks the row checkbox\r\n            row.isSelected = false;\r\n          }\r\n        });\r\n\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in pre-selecting rows:\", error);\r\n    }\r\n  }, [props.selectedItems]);\r\n\r\n  //Load the state of grid\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(props.parentComponent + \"GridState\") &&\r\n        localStorage.getItem(props.parentComponent + \"GridState\") !== \"null\" &&\r\n        flex\r\n      ) {\r\n        // restore grid settings\r\n        let gridState = JSON.parse(\r\n          localStorage.getItem(props.parentComponent + \"GridState\")\r\n        );\r\n        let newFlex = flex;\r\n\r\n        // restore column picker settings\r\n        newFlex.columns.forEach((col) => {\r\n          let matchedCol = gridState.columns.filter(\r\n            (colSetting) => colSetting.binding === col.binding\r\n          );\r\n          col.visible =\r\n            matchedCol.length > 0 ? matchedCol[0].visible : col.visible;\r\n        });\r\n\r\n        // restore filter settings\r\n        gridFilter.current.control.filterDefinition =\r\n          gridState.filterDefinition;\r\n\r\n        // restore sort settings\r\n        newFlex.collectionView.deferUpdate(() => {\r\n          newFlex.collectionView.sortDescriptions.clear();\r\n          for (let i = 0; i < gridState.sortDescriptions.length; i++) {\r\n            let sortDesc = gridState.sortDescriptions[i];\r\n            newFlex.collectionView.sortDescriptions.push(\r\n              new wjCore.SortDescription(sortDesc.property, sortDesc.ascending)\r\n            );\r\n          }\r\n        });\r\n\r\n        // restore grouping settings\r\n        for (let i = 0; i < gridState.groupDescriptions.length; i++) {\r\n          newFlex.collectionView.groupDescriptions.push(\r\n            new wjCore.PropertyGroupDescription(gridState.groupDescriptions[i])\r\n          );\r\n          newFlex.columns.filter(\r\n            (col) => col.binding === gridState.groupDescriptions[i]\r\n          )[0].visible = false;\r\n        }\r\n\r\n        if (\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") &&\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") !== \"null\"\r\n        ) {\r\n          let gridSessionState = JSON.parse(\r\n            sessionStorage.getItem(props.parentComponent + \"GridState\")\r\n          );\r\n          // restore paging settings\r\n          newFlex.collectionView.moveToPage(\r\n            newFlex.collectionView.pageCount - 1 >= gridSessionState.pageIndex\r\n              ? gridSessionState.pageIndex\r\n              : newFlex.collectionView.pageCount - 1\r\n          );\r\n\r\n          // restore search settings\r\n          if (theSearch) {\r\n            theSearch.current.control.text = gridSessionState.searchText;\r\n          }\r\n        }\r\n\r\n        setFlex(newFlex);\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in restoring local storage settings: \", error);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set Column Picker Properties\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && colPicker.current && props.columnPickerRequired) {\r\n        colPicker.current.itemsSource = flex.columns;\r\n        colPicker.current.checkedMemberPath = \"visible\";\r\n        colPicker.current.displayMemberPath = \"header\";\r\n        colPicker.current.lostFocus.addHandler(() => {\r\n          hidePopup(colPicker.current.hostElement);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in initializing column picker properties:\", error);\r\n    }\r\n  }, [colPicker.current]);\r\n\r\n  useEffect(() => {\r\n    // remove column picker pop-up on component unmount\r\n    return () => {\r\n      if (props.columnPickerRequired && colPicker.current) {\r\n        hidePopup(colPicker.current.hostElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // export grid data to excel\r\n  const exportExcel = () => {\r\n    try {\r\n      let gridFlex = flex;\r\n      //to download all rows from all pages\r\n      gridFlex.itemsSource.pageSize = props.sourceData.length;\r\n      setFlex(gridFlex);\r\n      wjcGridXlsx.FlexGridXlsxConverter.saveAsync(\r\n        flex,\r\n        {\r\n          includeColumnHeaders: true,\r\n          includeCellStyles: false,\r\n          formatItem: null,\r\n        },\r\n        props.exportFileName\r\n      );\r\n\r\n      //to restore paging\r\n      gridFlex.itemsSource.pageSize = props.rowsPerPage;\r\n      setFlex(gridFlex);\r\n    } catch (error) {\r\n      console.log(\"Error in export grid to excel:\", error);\r\n    }\r\n  };\r\n\r\n  const terminalPopOver = (terminalCodes) => {\r\n    if (terminalCodes.split(\",\").length > props.terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={terminalCodes.split(\",\").length}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return terminalCodes;\r\n    }\r\n  };\r\n\r\n  const displayValues = (value, columnDetail) => {\r\n    if (columnDetail !== undefined && columnDetail !== null) {\r\n      if (typeof value === \"boolean\" || columnDetail.Name === \"Active\") {\r\n        if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n        else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n      } else if (value === \"\" || value === null || value === undefined) {\r\n        return value;\r\n      } else if (\r\n        (columnDetail.Name === \"TerminalCodes\" ||\r\n          columnDetail.PopOver === \"1\") &&\r\n        value !== null\r\n      ) {\r\n        return terminalPopOver(value);\r\n      }\r\n      // var columnType = columnDetails.find(function (detail) {\r\n      //   if (detail.Name === field) {\r\n      //     return detail;\r\n      //   }\r\n      // });\r\n      else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"DateTime\"\r\n      ) {\r\n        return (\r\n          new Date(value).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(value).toLocaleTimeString()\r\n        );\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Date\"\r\n      ) {\r\n        return new Date(value).toLocaleDateString();\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Time\"\r\n      ) {\r\n        return new Date(value).toLocaleTimeString();\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  //Initialize Column Picker\r\n  const initializedPicker = (picker) => {\r\n    if (props.columnPickerRequired) {\r\n      colPicker.current = picker;\r\n    }\r\n  };\r\n\r\n  // Column Picker Handler\r\n  const colPickerClickHandler = (event) => {\r\n    try {\r\n      let host = colPicker.current.hostElement;\r\n      if (!host.offsetHeight) {\r\n        showPopup(host, event.target, PopupPosition.Below, true, false);\r\n        colPicker.current.focus();\r\n      } else {\r\n        hidePopup(host, true, true);\r\n        flex.focus();\r\n      }\r\n\r\n      colPicker.current.focus();\r\n      event.preventDefault();\r\n    } catch (error) {\r\n      console.log(\"Error in Column Picker click event:\", error);\r\n    }\r\n  };\r\n\r\n  const saveGridState = () => {\r\n    try {\r\n      if (flex && gridFilter.current) {\r\n        // grid column, filter, sort and grouping settings\r\n        let gridState = {\r\n          columns: flex.columns.map((col) => {\r\n            return {\r\n              binding: col.binding,\r\n              visible: col.visible,\r\n            };\r\n          }),\r\n          filterDefinition: gridFilter.current.control.filterDefinition,\r\n          sortDescriptions: flex.collectionView.sortDescriptions.map(\r\n            (sortDesc) => {\r\n              return {\r\n                property: sortDesc.property,\r\n                ascending: sortDesc.ascending,\r\n              };\r\n            }\r\n          ),\r\n          groupDescriptions: flex.collectionView.groupDescriptions.map(\r\n            (group) => {\r\n              if (group.propertyName) {\r\n                return group.propertyName;\r\n              }\r\n\r\n              return null;\r\n            }\r\n          ),\r\n        };\r\n\r\n        // add class to grouped checkbox div element\r\n        if (\r\n          flex.collectionView.groupDescriptions &&\r\n          flex.collectionView.groupDescriptions.length > 0\r\n        ) {\r\n          let groupedCheckboxes = [\r\n            ...document.getElementsByClassName(\"wj-column-selector-group\"),\r\n          ];\r\n          groupedCheckboxes.forEach((chkbx) => {\r\n            chkbx.parentNode.parentNode.classList.add(\"wj-grouped-checkbox\");\r\n          });\r\n        }\r\n\r\n        // grid paging and search settings\r\n        let sessionState = {\r\n          pageIndex: flex.collectionView.pageIndex,\r\n          searchText: theSearch.current.control.text,\r\n        };\r\n\r\n        localStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(gridState)\r\n        );\r\n        sessionStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(sessionState)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in saving grid state\");\r\n    }\r\n  };\r\n\r\n  // customize grid filter text and dropdowns\r\n  const customizeFilterConditions = () => {\r\n    // localize the FlexGrid filter\r\n    let filter = wjCore.culture.FlexGridFilter,\r\n      operator = Operator;\r\n    wjCore.culture.FlexGridFilter.header = translator(\"WijmoGridFilterHeader\");\r\n    wjCore.culture.FlexGridFilter.ascending =\r\n      \"\\u2191 \" + translator(\"WijmoGridFilterAscending\");\r\n    wjCore.culture.FlexGridFilter.descending =\r\n      \"\\u2193 \" + translator(\"WijmoGridFilterDescending\");\r\n    wjCore.culture.FlexGridFilter.apply = translator(\"RoleAdminEdit_Apply\");\r\n    wjCore.culture.FlexGridFilter.clear = translator(\"OrderCreate_btnClear\");\r\n    wjCore.culture.FlexGridFilter.conditions = translator(\r\n      \"WijmoGridFilterCondition\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.values = translator(\"WijmoGridFilterValue\");\r\n    wjCore.culture.FlexGridFilter.search = translator(\r\n      \"LoadingDetailsView_SearchGrid\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.selectAll = translator(\r\n      \"WijmoGridFilterSelectAll\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.and = translator(\"WijmoGridFilterAnd\");\r\n    wjCore.culture.FlexGridFilter.or = translator(\"WijmoGridFilterOr\");\r\n    wjCore.culture.FlexGridFilter.cancel = translator(\"AccessCardInfo_Cancel\");\r\n    // wjCore.culture.FlexGridFilter.null = 'test';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.and = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.asc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dialog = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dsc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.edit = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op2 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.or = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.search = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val2 = '';\r\n\r\n    // localize FlexGrid filter operators\r\n    filter.stringOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterBeginsWith\"), op: operator.BW },\r\n      { name: translator(\"WijmoGridFilterEndsWith\"), op: operator.EW },\r\n      { name: translator(\"WijmoGridFilterContains\"), op: operator.CT },\r\n      { name: translator(\"WijmoGridFilterDoesNotContain\"), op: operator.NC },\r\n    ];\r\n    filter.numberOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterGreaterThan\"), op: operator.GT },\r\n      { name: translator(\"WijmoGridFilterLessThan\"), op: operator.LT },\r\n      {\r\n        name: translator(\"WijmoGridFilterGreaterThanOrEqual\"),\r\n        op: operator.GE,\r\n      },\r\n      { name: translator(\"WijmoGridFilterLessThanOrEqual\"), op: operator.LE },\r\n    ];\r\n    filter.dateOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterDateEarlierThan\"), op: operator.LT },\r\n      { name: translator(\"WijmoGridFilterDateLaterThan\"), op: operator.GT },\r\n    ];\r\n    filter.booleanOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n    ];\r\n  };\r\n\r\n  // set column width based on screen size\r\n  const getWidth = (columnDetails) => {\r\n    try {\r\n      const screenWidth = window.screen.width;\r\n      if (screenWidth < 1024) {\r\n        if (columnDetails.WidthPx && columnDetails.WidthPx !== \"\")\r\n          return parseInt(columnDetails.WidthPx);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in width:\", error);\r\n    }\r\n\r\n    return columnDetails.WidthPercentage.includes(\"*\")\r\n      ? columnDetails.WidthPercentage\r\n      : parseInt(columnDetails.WidthPercentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pl-1\">\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <React.Fragment>\r\n              <div className=\"row pl-0\">\r\n                <div className=\"col-10 col-sm-12 col-md-5 col-lg-6\">\r\n                  <FlexGridSearch\r\n                    class=\"ui single-input\"\r\n                    ref={theSearch}\r\n                    placeholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-10 col-sm-12 col-md-7 col-lg-6\">\r\n                  <div style={{ float: \"right\" }}>\r\n                    {props.columnPickerRequired ? (\r\n                      <Button\r\n                        id=\"colPicker\"\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        onClick={(event) => colPickerClickHandler(event)}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridColumnPicker\")}\r\n                        </div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          <Icon\r\n                            name=\"caret-down\"\r\n                            className=\"btnIcon\"\r\n                            size=\"small\"\r\n                          />\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.exportRequired ? (\r\n                      <Button\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        className=\"mt-3 mt-md-0\"\r\n                        onClick={exportExcel}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridExport\")}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            className=\"icon-Xls\"\r\n                            style={{\r\n                              fontSize: \"17px\",\r\n                              position: \"absolute\",\r\n                              top: \"3px\",\r\n                            }}\r\n                          ></span>\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tableScroll\">\r\n                {props.columnGroupingRequired ? (\r\n                  <GroupPanel\r\n                    className=\"group-panel\"\r\n                    grid={flex}\r\n                    placeholder={t(\"WijmoGridGroupPanelPlaceholder\")}\r\n                  />\r\n                ) : null}\r\n                <ErrorBoundary>\r\n                  <FlexGrid\r\n                    ref={theGrid}\r\n                    autoGenerateColumns={false}\r\n                    alternatingRowStep={0}\r\n                    autoRowHeights={true}\r\n                    headersVisibility=\"Column\"\r\n                    itemsSource={data}\r\n                    selectionMode={wjCore.asEnum(\"None\", wjGrid.SelectionMode)}\r\n                    initialized={gridInitialized}\r\n                    virtualizationThreshold={[0, 10000]}\r\n                    onUpdatedView={saveGridState}\r\n                  >\r\n                    <FlexGridFilter ref={gridFilter} />\r\n                    {props.columns.map((column) => {\r\n                      return (\r\n                        <FlexGridColumn\r\n                          header={t(column.Name)}\r\n                          key={column.Name}\r\n                          binding={column.Name}\r\n                          width={getWidth(column)}\r\n                          minWidth={100}\r\n                          isReadOnly={true}\r\n                          wordWrap={true}\r\n                          align=\"left\"\r\n                        >\r\n                          <FlexGridCellTemplate\r\n                            cellType=\"Cell\"\r\n                            template={(context) => {\r\n                              return (\r\n                                <span\r\n                                  style={\r\n                                    props.conditionalRowStyleCheck == null ||\r\n                                    !props.conditionalRowStyleCheck(\r\n                                      context.item\r\n                                    )\r\n                                      ? null\r\n                                      : { ...props.conditionalRowStyles }\r\n                                  }\r\n                                >\r\n                                  {displayValues(\r\n                                    context.item[column.Name],\r\n                                    column\r\n                                  )}\r\n                                </span>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FlexGridColumn>\r\n                      );\r\n                    })}\r\n                  </FlexGrid>\r\n                </ErrorBoundary>\r\n                {props.columnPickerRequired ? (\r\n                  <div className=\"column-picker-div\">\r\n                    <ListBox\r\n                      className=\"column-picker\"\r\n                      initialized={(picker) => initializedPicker(picker)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"row\">\r\n                <CollectionViewNavigator\r\n                  ref={pagingComponent}\r\n                  className=\"ml-auto mr-auto mt-3\"\r\n                  headerFormat={t(\"WijmoGridPagingTemplate\")}\r\n                  byPage={true}\r\n                  cv={data}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nWijmoGrid.propTypes = {\r\n  sourceData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  exportRequired: PropTypes.bool.isRequired,\r\n  exportFileName: PropTypes.string,\r\n  selectionRequired: PropTypes.bool,\r\n  columnPickerRequired: PropTypes.bool,\r\n  columnGroupingRequired: PropTypes.bool,\r\n  conditionalRowStyleCheck: PropTypes.func,\r\n  conditionalRowStyles: PropTypes.object,\r\n  rowsPerPage: PropTypes.number,\r\n  onSelectionHandle: PropTypes.func,\r\n  parentComponent: PropTypes.string.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  terminalsToShow: PropTypes.number,\r\n  singleSelection: PropTypes.bool,\r\n  selectedItems: PropTypes.array,\r\n};\r\n\r\nWijmoGrid.defaultProps = {\r\n  sourceData: [],\r\n  columns: [],\r\n  exportRequired: true,\r\n  exportFileName: \"Grid.xlsx\",\r\n  selectionRequired: false,\r\n  columnPickerRequired: false,\r\n  columnGroupingRequired: false,\r\n  rowsPerPage: 10,\r\n  terminalsToShow: 2,\r\n  singleSelection: false,\r\n  selectedItems: [],\r\n};\r\n\r\nexport default WijmoGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WijmoGrid from '../../UIBase/Common/WijmoGrid';\r\n\r\nconst WijmoGridComposite = (props) => {\r\n    return (\r\n        <WijmoGrid\r\n            sourceData={props.data}\r\n            columns={props.columns}\r\n            exportRequired={props.exportRequired}\r\n            exportFileName={props.exportFileName}\r\n            columnPickerRequired={props.columnPickerRequired}\r\n            selectionRequired={props.selectionRequired}\r\n            columnGroupingRequired={props.columnGroupingRequired}\r\n            conditionalRowStyleCheck={props.conditionalRowStyleCheck}\r\n            conditionalRowStyles={props.conditionalRowStyles}\r\n            rowsPerPage={props.rowsPerPage}\r\n            onSelectionHandle={props.onSelectionHandle}\r\n            onRowClick={props.onRowClick}\r\n            parentComponent={props.parentComponent}\r\n            terminalsToShow={props.terminalsToShow}\r\n            singleSelection={props.singleSelection}\r\n            selectedItems={props.selectedItems}\r\n        />\r\n    )\r\n}\r\n\r\nWijmoGridComposite.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n    exportRequired: PropTypes.bool.isRequired,\r\n    exportFileName: PropTypes.string,\r\n    selectionRequired: PropTypes.bool,\r\n    columnPickerRequired: PropTypes.bool,\r\n    columnGroupingRequired: PropTypes.bool,\r\n    conditionalRowStyleCheck: PropTypes.func,\r\n    conditionalRowStyles: PropTypes.object,\r\n    rowsPerPage: PropTypes.number,\r\n    onSelectionHandle: PropTypes.func,\r\n    parentComponent: PropTypes.string.isRequired,\r\n    onRowClick: PropTypes.func,\r\n    terminalsToShow: PropTypes.number,\r\n    singleSelection: PropTypes.bool,\r\n    selectedItems: PropTypes.array\r\n}\r\n\r\nexport default WijmoGridComposite;","import React from \"react\";\r\nimport { Select, Input, Checkbox, Radio } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\n\r\n\r\nEmailConfigurationDetails.propTypes = {\r\n    emailConfig: PropTypes.object.isRequired,\r\n    modEmailConfig: PropTypes.object.isRequired,\r\n    validationErrors: PropTypes.object.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    onEntityTypeChange: PropTypes.func.isRequired,\r\n    handleCellDataEdit: PropTypes.func.isRequired,\r\n    onActiveStatusChange: PropTypes.func.isRequired,\r\n    listOptions: PropTypes.shape({\r\n        priority: PropTypes.array,\r\n        EntityTypeOptions: PropTypes.array,\r\n    }).isRequired,\r\n}\r\n\r\nEmailConfigurationDetails.defaultProps = {\r\n    listOptions: {\r\n        priority: [],\r\n        EntityTypeOptions: [],\r\n    }\r\n}\r\n\r\nexport function EmailConfigurationDetails({\r\n    emailConfig,\r\n    modEmailConfig,\r\n    validationErrors,\r\n    onFieldChange,\r\n    listOptions,\r\n    onEntityTypeChange,\r\n    handleCellDataEdit,\r\n    onActiveStatusChange\r\n}) {\r\n\r\n    const radioButton = (cellData) => {\r\n        var recipient = modEmailConfig.Recipients.filter(x => x.Recipient === cellData.rowData.Recipient)\r\n        return (\r\n            <div>\r\n                <Radio\r\n                    checked={cellData.field === \"To\" ? recipient[0].To :\r\n                        cellData.field === \"CC\" ? recipient[0].CC :\r\n                            cellData.field === \"BCC\" ? recipient[0].BCC : recipient[0].None}\r\n                    onChange={() => handleCellDataEdit(cellData)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"detailsContainer\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modEmailConfig.EmailMessageCode}\r\n                                indicator=\"required\"\r\n                                disabled={emailConfig.EmailMessageCode !== \"\"}\r\n                                onChange={(data) => onFieldChange(\"EmailMessageCode\", data)}\r\n                                label={t(\"EmailConfiguration_Code\")}\r\n                                error={t(validationErrors.EmailMessageCode)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(`EmailConfiguration_EntityType`)}\r\n                                value={modEmailConfig.EmailSMSEntityType}\r\n                                options={listOptions.EntityTypeOptions}\r\n                                onChange={(data) => {\r\n                                    onEntityTypeChange(data);\r\n                                }}\r\n                                indicator=\"required\"\r\n                                error={t(validationErrors.EmailSMSEntityType)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modEmailConfig.Subject}\r\n                                indicator=\"required\"\r\n                                onChange={(data) => onFieldChange(\"Subject\", data)}\r\n                                label={t(\"EmailConfiguration_Subject\")}\r\n                                error={t(validationErrors.Subject)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(`EmailConfiguration_Priority`)}\r\n                                value={modEmailConfig.Priority}\r\n                                options={listOptions.priority}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"Priority\", data);\r\n                                }}\r\n                                indicator=\"required\"\r\n                                error={t(validationErrors.Priority)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modEmailConfig.MessageText}\r\n                                indicator=\"required\"\r\n                                onChange={(data) => onFieldChange(\"MessageText\", data)}\r\n                                label={t(\"EmailConfiguration_EmailMessage\")}\r\n                                error={t(validationErrors.MessageText)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <div\r\n                                className=\"ui single-input fluid disabled\"\r\n                                style={{ width: \"30%\", float: \"left\" }}\r\n                            >\r\n                                <div class=\"ui input-label\">\r\n                                    <span className=\"input-label-message\">\r\n                                        {t(\"EmailConfiguration_Attachment\")}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"input-wrap\">\r\n                                    <Checkbox\r\n                                        fluid\r\n                                        checked={modEmailConfig.Attachment}\r\n                                        onChange={(data) => onFieldChange(\"Attachment\", data)}\r\n                                        value={modEmailConfig.Attachment}\r\n                                    />\r\n                                </div>\r\n                                </div>\r\n                    </div>\r\n\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(`EmailConfiguration_Status`)}\r\n                                value={modEmailConfig.Active}\r\n                                options={[\r\n                                    { text: t(\"ViewShipment_Ok\"), value: true },\r\n                                    { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                                ]}\r\n                                onChange={(data) => onActiveStatusChange(data)}\r\n                                error={t(validationErrors.Active)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modEmailConfig.Remarks}\r\n                                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                                label={t(\"EmailConfiguration_Remarks\")}\r\n                                error={t(validationErrors.Remarks)}\r\n                                indicator={modEmailConfig.Active !== emailConfig.Active ? \"required\" : \"\"}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={modEmailConfig.EmailSMSEntityType !== \"\" && modEmailConfig.EmailSMSEntityType !== undefined ? \"row\" : \"hidden\"}>\r\n                        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n                            <h4>{t(\"EmailConfiguration_RecipientList\")}</h4>\r\n                        </div>\r\n                        <div className=\"col-12 detailsTable\">\r\n                            <DataTable\r\n                                data={modEmailConfig.Recipients}\r\n                                onEdit={handleCellDataEdit}\r\n                            >\r\n                                <DataTable.Column\r\n                                    className=\"compColHeight\"\r\n                                    key=\"Recipient\"\r\n                                    field=\"Recipient\"\r\n                                    header={t(\"EmailConfiguration_Recipient\")}\r\n                                    editFieldType=\"text\"\r\n                                >\r\n                                </DataTable.Column>\r\n                                <DataTable.Column\r\n                                    className=\"compColHeight\"\r\n                                    key=\"To\"\r\n                                    field=\"To\"\r\n                                    header={t(\"EmailConfiguration_To\")}\r\n                                    renderer={radioButton}\r\n                                >\r\n                                </DataTable.Column>\r\n                                <DataTable.Column\r\n                                    className=\"compColHeight\"\r\n                                    key=\"CC\"\r\n                                    field=\"CC\"\r\n                                    header={t(\"EmailConfiguration_CC\")}\r\n                                    renderer={radioButton}\r\n                                >\r\n                                </DataTable.Column>\r\n                                <DataTable.Column\r\n                                    className=\"compColHeight\"\r\n                                    key=\"BCC\"\r\n                                    field=\"BCC\"\r\n                                    header={t(\"EmailConfiguration_BCC\")}\r\n                                    renderer={radioButton}\r\n                                >\r\n                                </DataTable.Column>\r\n                                <DataTable.Column\r\n                                    className=\"compColHeight\"\r\n                                    key=\"None\"\r\n                                    field=\"None\"\r\n                                    header={t(\"EmailConfiguration_None\")}\r\n                                    renderer={radioButton}\r\n                                >\r\n                                </DataTable.Column>\r\n                            </DataTable>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            )}\r\n        </TranslationConsumer>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { EmailConfigurationDetails } from \"../../UIBase/Details/EmailConfigurationDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { emptyEmailConfiguration } from \"../../../JS/DefaultEntities\";\r\nimport { emailConfigurationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport lodash from \"lodash\";\r\nimport {\r\n  functionGroups,\r\n  fnEmailConfiguration,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass EmailConfigurationDetailsComposite extends Component {\r\n  state = {\r\n    emailConfig: lodash.cloneDeep(emptyEmailConfiguration),\r\n    modEmailConfig: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      emailConfigurationValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    EmailEntityTypeRecipientOptions: {},\r\n    EntityTypeOptions: [],\r\n    showAuthenticationLayout: false,\r\n    tempEmailConfig: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.GetEmailEntityTypeList();\r\n      this.getEmailConfiguration(this.props.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  GetEmailEntityTypeList() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetEmailEntityTypeRecipientList,\r\n        Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (result.EntityResult !== null) {\r\n              let EntityTypeOptions = this.state.EntityTypeOptions;\r\n              EntityTypeOptions = Utilities.transferListtoOptions(\r\n                Object.keys(result.EntityResult)\r\n              );\r\n              this.setState({\r\n                EmailEntityTypeRecipientOptions: result.EntityResult,\r\n                EntityTypeOptions,\r\n              });\r\n            }\r\n          } else {\r\n            console.log(\"Error in GetEmailEntityTypeList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting GetEmailEntityTypeList:\", error);\r\n        });\r\n    } catch (err) {\r\n      console.log(\"Error in GetEmailEntityTypeList\",err)\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.emailConfig.EmailMessageCode !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getEmailConfiguration(nextProps.selectedRow);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getEmailConfiguration(mailConfigurationRow) {\r\n    try {\r\n      emptyEmailConfiguration.Priority = 2;\r\n      if (mailConfigurationRow.Common_Code === undefined) {\r\n        this.setState({\r\n          emailConfig: lodash.cloneDeep(emptyEmailConfiguration),\r\n          modEmailConfig: lodash.cloneDeep(emptyEmailConfiguration),\r\n          isReadyToRender: true,\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnEmailConfiguration\r\n          ),\r\n        });\r\n        return;\r\n      }\r\n\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.EmailConfigurationCode,\r\n          value: mailConfigurationRow.Common_Code,\r\n        },\r\n      ];\r\n      var obj = {\r\n        keyDataCode: KeyCodes.EmailConfigurationCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetEmailConfiguration,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState(\r\n              {\r\n                isReadyToRender: true,\r\n                emailConfig: lodash.cloneDeep(result.EntityResult),\r\n                modEmailConfig: lodash.cloneDeep(result.EntityResult),\r\n                saveEnabled: Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnEmailConfiguration\r\n                ),\r\n              },\r\n              () => this.bindRecipientList(result.EntityResult.EmailSMSEntityType)\r\n            );\r\n          } else {\r\n            this.setState({\r\n              emailConfig: lodash.cloneDeep(emptyEmailConfiguration),\r\n              modEmailConfig: lodash.cloneDeep(emptyEmailConfiguration),\r\n              isReadyToRender: true,\r\n            });\r\n            console.log(\"Error in getEmailConfiguration:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Error while getting EmailConfiguration:\",\r\n            error,\r\n            mailConfigurationRow\r\n          );\r\n        });\r\n    } catch (err) {\r\n      console.log(\"Error in getEmailConfiguration\",err)\r\n    }\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modEmailConfig = lodash.cloneDeep(this.state.modEmailConfig);\r\n      modEmailConfig[propertyName] = data;\r\n      this.setState({ modEmailConfig });\r\n\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (emailConfigurationValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          emailConfigurationValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleEntityTypeChange = (data) => {\r\n    try {\r\n      const modEmailConfig = lodash.cloneDeep(this.state.modEmailConfig);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modEmailConfig.EmailSMSEntityType = data;\r\n\r\n      validationErrors.EmailSMSEntityType = \"\";\r\n      this.setState({ modEmailConfig, validationErrors }, () =>\r\n        this.bindRecipientList(data)\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on handleEntityTypeChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  bindRecipientList(EntityType) {\r\n    try {\r\n      const modEmailConfig = lodash.cloneDeep(this.state.modEmailConfig);\r\n      const EmailEntityTypeRecipientOptions = lodash.cloneDeep(\r\n        this.state.EmailEntityTypeRecipientOptions\r\n      );\r\n      modEmailConfig.Recipients = [];\r\n      EmailEntityTypeRecipientOptions[EntityType].Value.forEach((item) => {\r\n        let newRecipient = {\r\n          Recipient: item,\r\n          To: modEmailConfig.RecipientListTo.indexOf(item) >= 0 ? true : false,\r\n          CC: modEmailConfig.RecipientListCC.indexOf(item) >= 0 ? true : false,\r\n          BCC:\r\n            modEmailConfig.RecipientListBCC.indexOf(item) >= 0 ? true : false,\r\n          None:\r\n            modEmailConfig.RecipientListTo.indexOf(item) >= 0 ||\r\n            modEmailConfig.RecipientListCC.indexOf(item) >= 0 ||\r\n            modEmailConfig.RecipientListBCC.indexOf(item) >= 0\r\n              ? false\r\n              : true,\r\n        };\r\n        modEmailConfig.Recipients.push(newRecipient);\r\n      });\r\n      this.setState({ modEmailConfig });\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on bindRecipientList\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCellDataEdit = (cellData) => {\r\n    try {\r\n      const modEmailConfig = lodash.cloneDeep(this.state.modEmailConfig);\r\n\r\n      Object.keys(modEmailConfig.Recipients[cellData.rowIndex]).forEach(function (\r\n        key\r\n      ) {\r\n        if (key !== \"Recipient\" && key !== cellData.field) {\r\n          modEmailConfig.Recipients[cellData.rowIndex][key] = false;\r\n        }\r\n      });\r\n      modEmailConfig.Recipients[cellData.rowIndex][cellData.field] = true;\r\n\r\n      this.setState({ modEmailConfig });\r\n    } catch (err) {\r\n      console.log(\"Error in handlecelldataedit\",err)\r\n    }\r\n  };\r\n\r\n  handleActiveStatusChange = (data) => {\r\n    try {\r\n      const modEmailConfig = lodash.cloneDeep(this.state.modEmailConfig);\r\n\r\n      modEmailConfig.Active = data;\r\n      if (modEmailConfig.Active !== this.state.emailConfig.Active)\r\n        modEmailConfig.Remarks = \"\";\r\n\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (modEmailConfig.Active === this.state.emailConfig.Active) {\r\n        if (modEmailConfig.Remarks === null || modEmailConfig.Remarks === \"\") {\r\n          validationErrors.Remarks = \"\";\r\n        }\r\n      }\r\n\r\n      this.setState({ modEmailConfig, validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on handleActiveStatusChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const { validationErrors } = { ...this.state };\r\n      const emailConfig = lodash.cloneDeep(this.state.emailConfig);\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState(\r\n        {\r\n          modEmailConfig: { ...emailConfig },\r\n          selectedCompRow: [],\r\n          validationErrors,\r\n        },\r\n        () => this.bindRecipientList(emailConfig.EmailSMSEntityType)\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  saveEmailConfig = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempEmailConfig = lodash.cloneDeep(this.state.tempEmailConfig);\r\n      this.state.emailConfig.EmailMessageCode === \"\"\r\n        ? this.createEmailConfiguration(tempEmailConfig)\r\n        : this.updateEmailConfiguration(tempEmailConfig);\r\n    } catch (error) {\r\n      console.log(\"EmailConfigDetailsComposite : Error in saveEmailConfig\");\r\n    }\r\n  };\r\n  handleSave = () => {\r\n    try {\r\n      let modEmailConfig = this.fillRecipientDetails();\r\n      // this.setState({ saveEnabled: false });\r\n      if (this.validateSave(modEmailConfig)) {\r\n        let tempEmailConfig = lodash.cloneDeep(modEmailConfig);\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        this.setState({ showAuthenticationLayout, tempEmailConfig }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveEmailConfig();\r\n          }\r\n        });\r\n      } else this.setState({ saveEnabled: true });\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateSave(modEmailConfig) {\r\n    try {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      Object.keys(emailConfigurationValidationDef).forEach(function (key) {\r\n        if (modEmailConfig[key] !== undefined)\r\n          validationErrors[key] = Utilities.validateField(\r\n            emailConfigurationValidationDef[key],\r\n            modEmailConfig[key]\r\n          );\r\n      });\r\n\r\n      if (modEmailConfig.Active !== this.state.emailConfig.Active) {\r\n        if (modEmailConfig.Remarks === null || modEmailConfig.Remarks === \"\") {\r\n          validationErrors[\"Remarks\"] = \"Vehicle_RemarksRequired\";\r\n        }\r\n      }\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"EmailConfiguration_AddUpdateSuccessMsg\",\r\n        messageResultDetails: [],\r\n      };\r\n\r\n      let ToRecipient = modEmailConfig.Recipients.filter((x) => x.To === true);\r\n\r\n      if (ToRecipient.length <= 0) {\r\n        notification.messageResultDetails.push({\r\n          keyFields: [\"EmailConfiguration_Code\"],\r\n          keyValues: [modEmailConfig.EmailMessageCode],\r\n          isSuccess: false,\r\n          errorMessage: \"EMAILMESSAGE_RECIPIENTTO_EMPTY_X\",\r\n        });\r\n      }\r\n\r\n      this.setState({ validationErrors });\r\n      let returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n      if (notification.messageResultDetails.length > 0) {\r\n        this.props.onSaved(this.state.modEmailConfig, \"update\", notification);\r\n        return false;\r\n      }\r\n      return returnValue;\r\n    } catch (error) {\r\n      console.log(\"Error is validatesave\",error)\r\n    }\r\n  }\r\n\r\n  fillRecipientDetails() {\r\n    try {\r\n      let modEmailConfig = lodash.cloneDeep(this.state.modEmailConfig);\r\n\r\n      modEmailConfig.RecipientListTo = \"\";\r\n      modEmailConfig.RecipientListCC = \"\";\r\n      modEmailConfig.RecipientListBCC = \"\";\r\n\r\n      modEmailConfig.Recipients.forEach((item) => {\r\n        if (item.To === true) {\r\n          modEmailConfig.RecipientListTo =\r\n            modEmailConfig.RecipientListTo + item.Recipient + \",\";\r\n        } else if (item.CC === true) {\r\n          modEmailConfig.RecipientListCC =\r\n            modEmailConfig.RecipientListCC + item.Recipient + \",\";\r\n        } else if (item.BCC === true) {\r\n          modEmailConfig.RecipientListBCC =\r\n            modEmailConfig.RecipientListBCC + item.Recipient + \",\";\r\n        }\r\n      });\r\n\r\n      modEmailConfig.RecipientListTo = modEmailConfig.RecipientListTo.slice(\r\n        0,\r\n        -1\r\n      );\r\n      modEmailConfig.RecipientListCC = modEmailConfig.RecipientListCC.slice(\r\n        0,\r\n        -1\r\n      );\r\n      modEmailConfig.RecipientListBCC = modEmailConfig.RecipientListBCC.slice(\r\n        0,\r\n        -1\r\n      );\r\n      return modEmailConfig;\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on fillRecipientDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  createEmailConfiguration(modEmailConfig) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.EmailConfigurationCode,\r\n          value: modEmailConfig.EmailMessageCode,\r\n        },\r\n      ];\r\n      let obj = {\r\n        keyDataCode: KeyCodes.EmailConfigurationCode,\r\n        KeyCodes: keyCode,\r\n        Entity: modEmailConfig,\r\n      };\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"EmailConfiguration_AddUpdateSuccessMsg\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"EmailConfiguration_Code\"],\r\n            keyValues: [modEmailConfig.EmailMessageCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.CreateEmailConfiguration,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          if (result.IsSuccess === true) {\r\n            this.setState(\r\n              {\r\n                saveEnabled: Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnEmailConfiguration\r\n                ),\r\n                showAuthenticationLayout: false,\r\n\r\n              },\r\n              () =>\r\n                this.getEmailConfiguration({\r\n                  Common_Code: modEmailConfig.EmailMessageCode,\r\n                })\r\n            );\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            this.setState({\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.add,\r\n                fnEmailConfiguration\r\n              ),\r\n              showAuthenticationLayout: false,\r\n\r\n            });\r\n            console.log(\"Error in createEmailConfiguration:\", result.ErrorList);\r\n          }\r\n          this.props.onSaved(this.state.modEmailConfig, \"add\", notification);\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnEmailConfiguration\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          this.props.onSaved(this.state.modEmailConfig, \"add\", notification);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in create emailconfiguration\",error)\r\n    }\r\n  }\r\n\r\n  updateEmailConfiguration(modEmailConfig) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.EmailConfigurationCode,\r\n          value: modEmailConfig.EmailMessageCode,\r\n        },\r\n      ];\r\n      let obj = {\r\n        keyDataCode: KeyCodes.EmailConfigurationCode,\r\n        KeyCodes: keyCode,\r\n        Entity: modEmailConfig,\r\n      };\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"EmailConfiguration_AddUpdateSuccessMsg\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"EmailConfiguration_Code\"],\r\n            keyValues: [modEmailConfig.EmailMessageCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.UpdateEmailConfiguration,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          if (result.IsSuccess === true) {\r\n            this.setState(\r\n              {\r\n                saveEnabled: Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnEmailConfiguration\r\n                ),\r\n                showAuthenticationLayout: false,\r\n\r\n              },\r\n              () =>\r\n                this.getEmailConfiguration({\r\n                  Common_Code: modEmailConfig.EmailMessageCode,\r\n                })\r\n            );\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            this.setState({\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnEmailConfiguration\r\n              ),\r\n              showAuthenticationLayout: false,\r\n\r\n            });\r\n            console.log(\"Error in createEmailConfiguration:\", result.ErrorList);\r\n          }\r\n          this.props.onSaved(this.state.modEmailConfig, \"update\", notification);\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnEmailConfiguration\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          this.props.onSaved(this.state.modEmailConfig, \"modify\", notification);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in updateemailConfiguration\",error)\r\n    }\r\n  }\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      priority: Constants.EmailPriority,\r\n      EntityTypeOptions: this.state.EntityTypeOptions,\r\n    };\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"EmailConfiguration_LastUpDt\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modEmailConfig.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modEmailConfig.LastUpdatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"EmailConfiguration_LastActiveTime\",\r\n        fieldValue:\r\n          this.state.modEmailConfig.LastActiveTime !== undefined &&\r\n          this.state.modEmailConfig.LastActiveTime !== null\r\n            ? new Date(\r\n                this.state.modEmailConfig.LastActiveTime\r\n              ).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(\r\n                this.state.modEmailConfig.LastActiveTime\r\n              ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"EmailConfiguration_CreateDt\",\r\n        fieldValue:\r\n          new Date(this.state.modEmailConfig.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modEmailConfig.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.emailConfig.EmailMessageCode}\r\n            newEntityName=\"EmailConfiguration_lHeader\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <EmailConfigurationDetails\r\n            emailConfig={this.state.emailConfig}\r\n            modEmailConfig={this.state.modEmailConfig}\r\n            listOptions={listOptions}\r\n            validationErrors={this.state.validationErrors}\r\n            onFieldChange={this.handleChange}\r\n            onEntityTypeChange={this.handleEntityTypeChange}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n          ></EmailConfigurationDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.emailConfig.EmailMessageCode === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnEmailConfiguration}\r\n            handleOperation={this.saveEmailConfig}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EmailConfigurationDetailsComposite);\r\n\r\nEmailConfigurationDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\n\r\nexport function EmailConfigurationSummaryComposite({\r\n    tableData,\r\n    columnDetails,\r\n    pageSize,\r\n    exportRequired,\r\n    exportFileName,\r\n    columnPickerRequired,\r\n    columnGroupingRequired,\r\n    //selectedItems,\r\n    selectionRequired,\r\n    onSelectionChange,\r\n    onRowClick,\r\n    parentComponent\r\n}) {\r\n    return (\r\n        <WijmoGridComposite\r\n            data={tableData}\r\n            columns={columnDetails}\r\n            rowsPerPage={pageSize}\r\n            exportRequired={exportRequired}\r\n            exportFileName={exportFileName}\r\n            columnPickerRequired={columnPickerRequired}\r\n            columnGroupingRequired={columnGroupingRequired}\r\n            selectionRequired={selectionRequired}\r\n            onSelectionHandle={onSelectionChange}\r\n            onRowClick={onRowClick}\r\n            parentComponent={parentComponent}\r\n        ></WijmoGridComposite>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { EmailConfigurationSummaryComposite } from \"../Summary/EmailConfigurationSummaryComposite\";\r\nimport EmailConfigurationDetailsComposite from \"../Details/EmailConfigurationDetailsComposite\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../../CSS/styles.css\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport {\r\n  functionGroups,\r\n  fnEmailConfiguration,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass EmailConfigurationComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    data: {},\r\n    showAuthenticationLayout: false,\r\n\r\n  };\r\n  componentName = \"EmailsList\";\r\n\r\n  componentDidMount() {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnEmailConfiguration\r\n      );\r\n      this.setState({\r\n        operationsVisibilty,\r\n        selectedShareholder:\r\n          this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      });\r\n      this.getEmailConfigurationList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getEmailConfigurationList() {\r\n    axios(\r\n      RestAPIs.GetEmailConfigurationListForRole,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ data: result.EntityResult, isReadyToRender: true });\r\n        } else {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error in getEmailConfigurationList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: [], isReadyToRender: true });\r\n        console.log(\"Error while getting EmailConfiguration List:\", error);\r\n      });\r\n  }\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: {},\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationComposite:Error occured on handleAdd\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      if (notification.messageType === \"success\") {\r\n         operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnEmailConfiguration\r\n        );\r\n\t      operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnEmailConfiguration\r\n        );\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            Common_Code: data.EmailMessageCode,\r\n            Common_Status: data.Active,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationComposite:Error occured on savedEvent\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnEmailConfiguration\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        isReadyToRender: false,\r\n      });\r\n      this.getEmailConfigurationList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationComposite:Error occured on Back click\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnEmailConfiguration\r\n      );\r\n      operationsVisibilty.delete = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.remove,\r\n        fnEmailConfiguration\r\n      );\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: item,\r\n        selectedItems: [item],\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationComposite:Error occured on Row click\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleSelection = (items) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n\r\n      operationsVisibilty.delete =\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnEmailConfiguration\r\n        );\r\n\r\n      this.setState({ selectedItems: items, operationsVisibilty });\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationComposite:Error occured on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showAuthenticationLayout });\r\n      if (showAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"EmailConfigurationComposite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n  handleDelete = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n      var deleteEmailMessageKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        var EmailMessageCode = this.state.selectedItems[i][\"Common_Code\"];\r\n        var keyData = {\r\n          KeyCodes: [\r\n            { Key: KeyCodes.EmailConfigurationCode, Value: EmailMessageCode },\r\n          ],\r\n        };\r\n        deleteEmailMessageKeys.push(keyData);\r\n      }\r\n      axios(\r\n        RestAPIs.DeleteEmailConfiguration,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteEmailMessageKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          var isRefreshDataRequire = result.isSuccess;\r\n\r\n          if (\r\n            result.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            var failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n          var notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"EmailConfiguration_DeleteSuccess\",\r\n            [\"EmailConfigurationCode\"]\r\n          );\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({\r\n              isReadyToRender: false,\r\n              showAuthenticationLayout: false,\r\n            });\r\n            this.getEmailConfigurationList();\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n              showAuthenticationLayout: false,\r\n            });\r\n          } else {\r\n            operationsVisibilty.delete = true;\r\n            this.setState({\r\n              operationsVisibilty,\r\n              showAuthenticationLayout: false,\r\n            });\r\n          }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0)\r\n              messageResult.keyFields[0] = \"EmailConfiguration_Code\";\r\n          });\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error occured while deleting:\" + error);\r\n          var { operationsVisibilty } = { ...this.state };\r\n          operationsVisibilty.delete = true;\r\n          this.setState({\r\n            operationsVisibilty,\r\n            showAuthenticationLayout: false,\r\n          });\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationComposite:Error occured on handleDelet\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            breadcrumbItem={this.props.activeItem}\r\n            shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n            selectedShareholder={\r\n              this.props.userDetails.EntityResult.PrimaryShareholder\r\n            }\r\n            onDelete={this.authenticateDelete}\r\n            onAdd={this.handleAdd}\r\n            shrVisible={false}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isDetails === true ? (\r\n          <ErrorBoundary>\r\n            <EmailConfigurationDetailsComposite\r\n              key=\"EmailConfigurationDetails\"\r\n              selectedRow={this.state.selectedRow}\r\n              onBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n            ></EmailConfigurationDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isReadyToRender ? (\r\n          <ErrorBoundary>\r\n            <EmailConfigurationSummaryComposite\r\n                tableData={this.state.data.Table}\r\n                columnDetails={this.state.data.Column}\r\n                pageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                exportRequired={true}\r\n                exportFileName=\"EmailsList\"\r\n                columnPickerRequired={true}\r\n\r\n                terminalsToShow={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .NoOfTerminalsToShow\r\n                }\r\n                selectionRequired={true}\r\n                columnGroupingRequired={true}\r\n\r\n                onRowClick={this.handleRowClick}\r\n                onSelectionChange={this.handleSelection}\r\n                parentComponent={this.componentName}\r\n            ></EmailConfigurationSummaryComposite>\r\n          </ErrorBoundary>\r\n        ) : (\r\n          <LoadingPage message=\"Loading\"></LoadingPage>\r\n        )}\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.remove}\r\n            functionGroup={fnEmailConfiguration}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleDelete}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EmailConfigurationComposite);\r\n\r\nEmailConfigurationComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","WijmoGrid","flex","setFlex","translator","useTranslation","_getData","pageLength","CollectionView","sourceData","pageSize","setData","rowsPerPage","theGrid","React","theSearch","gridFilter","pagingComponent","colPicker","selectedRows","selectionRequired","selector","gridInitialized","grid","customizeFilterConditions","onRowClick","addEventListener","hostElement","e","ht","hitTest","target","closest","classList","includes","cellType","wjGrid","Cell","rowData","rows","row","dataItem","selectionMode","wjCore","select","Selector","itemChecked","s","singleSelection","filter","isSelected","current","loadash","forEach","onSelectionHandle","r","selectedRow","showCheckAll","column","rowHeaders","columns","headersVisibility","HeadersVisibility","All","useEffect","control","push","selectedItems","refresh","localStorage","getItem","parentComponent","gridState","JSON","parse","newFlex","col","matchedCol","colSetting","binding","visible","filterDefinition","collectionView","deferUpdate","sortDescriptions","clear","i","sortDesc","property","ascending","groupDescriptions","sessionStorage","gridSessionState","moveToPage","pageCount","pageIndex","text","searchText","columnPickerRequired","itemsSource","checkedMemberPath","displayMemberPath","lostFocus","addHandler","hidePopup","exportExcel","gridFlex","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","exportFileName","displayValues","columnDetail","Name","PopOver","terminalCodes","split","terminalsToShow","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","saveGridState","group","document","getElementsByClassName","chkbx","parentNode","sessionState","setItem","stringify","FlexGridFilter","operator","Operator","header","descending","apply","conditions","search","selectAll","and","or","cancel","stringOperators","op","EQ","NE","BW","EW","CT","NC","numberOperators","GT","LT","GE","LE","dateOperators","booleanOperators","getWidth","columnDetails","window","screen","width","WidthPx","parseInt","WidthPercentage","FlexGridSearch","class","ref","id","actionType","event","host","offsetHeight","focus","showPopup","PopupPosition","Below","preventDefault","colPickerClickHandler","exportRequired","fontSize","top","columnGroupingRequired","GroupPanel","FlexGrid","autoGenerateColumns","alternatingRowStep","autoRowHeights","initialized","virtualizationThreshold","onUpdatedView","FlexGridColumn","minWidth","isReadOnly","wordWrap","align","FlexGridCellTemplate","template","context","conditionalRowStyleCheck","conditionalRowStyles","ListBox","picker","initializedPicker","CollectionViewNavigator","headerFormat","byPage","cv","EmailConfigurationDetails","emailConfig","modEmailConfig","listOptions","onEntityTypeChange","handleCellDataEdit","onActiveStatusChange","radioButton","cellData","recipient","Recipients","x","Recipient","Radio","checked","field","To","CC","BCC","None","EmailMessageCode","EmailSMSEntityType","EntityTypeOptions","noResultsMessage","Subject","Priority","priority","MessageText","Checkbox","Attachment","Active","Remarks","DataTable","onEdit","Column","editFieldType","renderer","EmailConfigurationDetailsComposite","emptyEmailConfiguration","emailConfigurationValidationDef","isReadyToRender","saveEnabled","EmailEntityTypeRecipientOptions","showAuthenticationLayout","tempEmailConfig","handleChange","handleEntityTypeChange","bindRecipientList","keys","rowIndex","err","handleActiveStatusChange","handleReset","selectedCompRow","saveEmailConfig","createEmailConfiguration","updateEmailConfiguration","handleSave","fillRecipientDetails","validateSave","IsWebPortalUser","handleAuthenticationClose","GetEmailEntityTypeList","getEmailConfiguration","componentWillReceiveProps","nextProps","Common_Code","mailConfigurationRow","FunctionsList","functionGroups","fnEmailConfiguration","keyCode","KeyCodes","obj","keyDataCode","modify","EntityType","Value","newRecipient","RecipientListTo","indexOf","RecipientListCC","RecipientListBCC","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","slice","Entity","Constants","popUpContents","LastUpdatedTime","LastActiveTime","CreatedTime","TMDetailsHeader","entityCode","newEntityName","TMDetailsUserActions","handleBack","onBack","UserName","LoadingPage","EmailConfigurationSummaryComposite","tableData","onSelectionChange","WijmoGridComposite","EmailConfigurationComposite","isDetails","isDetailsModified","componentName","handleAdd","savedEvent","saveType","remove","Common_Status","toast","NotifyEvent","notificationMessage","autoClose","getEmailConfigurationList","handleRowClick","handleSelection","items","authenticateDelete","handleDelete","deleteEmailMessageKeys","keyData","Key","isRefreshDataRequire","ResultDataList","res","messageResult","PrimaryShareholder","activeItem","ShareholderList","Table","PageAttibutes","WebPortalListPageSize","NoOfTerminalsToShow","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","margin","List","view","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","transportationType","shareholderCode","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","shipmentCode","orderCode","receiptCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","bayCode","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","TransactionType","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks"],"sourceRoot":""}