{"version":3,"file":"static/js/5372.d6389bba.chunk.js","mappings":"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","sources":["Components/UIBase/Details/MarineDispatchDetails.jsx","Components/Composite/Details/MarineDispatchDetailsComposite.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport {\r\n  DatePicker,\r\n  Input,\r\n  Select,\r\n  Icon,\r\n  Tab,\r\n  Checkbox,\r\n  Button,\r\n  Modal,\r\n  Accordion,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getOptionsWithSelect,\r\n  getCurrentDateFormat,\r\n  handleIsRequiredCompartmentCell,\r\n} from \"../../../JS/functionalUtilities\";\r\nimport {\r\n  MarineDispatchCompartmentDetailType,\r\n  Shipment_Status,\r\n} from \"../../../JS/Constants\";\r\nimport { AttributeDetails } from \"./AttributeDetails\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\n\r\nMarineDispatchDetails.propTypes = {\r\n  marineDispatch: PropTypes.object.isRequired,\r\n  modMarineDispatch: PropTypes.object.isRequired,\r\n  modAssociations: PropTypes.array.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    shareholders: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    shipmentUOM: PropTypes.array,\r\n    carrierCompany: PropTypes.array,\r\n    compSeqOptions: PropTypes.array,\r\n    vessels: PropTypes.array,\r\n    FinishedProducts: PropTypes.object,\r\n    customerDestinationOptions: PropTypes.object,\r\n    shareholderCustomers: PropTypes.array,\r\n  }).isRequired,\r\n\r\n  selectedAssociations: PropTypes.array.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  handleAssociationSelectionChange: PropTypes.func.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n  handleAddAssociation: PropTypes.func.isRequired,\r\n  handleDeleteAssociation: PropTypes.func.isRequired,\r\n  onVesselSearchChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  marineShipmentPlan: PropTypes.array.isRequired,\r\n  handleInputDataEdit: PropTypes.func.isRequired,\r\n  compartmentDetailsSave: PropTypes.func.isRequired,\r\n  operationsVisibilty: PropTypes.object.isRequired,\r\n  handleCellCheck: PropTypes.func.isRequired,\r\n  viewTab: PropTypes.number.isRequired,\r\n  selectedAttributeList: PropTypes.array.isRequired,\r\n  attributeValidationErrors: PropTypes.array.isRequired,\r\n  handleAttributeCellDataEdit: PropTypes.func.isRequired,\r\n  handleCompAttributeCellDataEdit: PropTypes.func.isRequired,\r\n  expandedRows: PropTypes.array.isRequired,\r\n  toggleExpand: PropTypes.func.isRequired,\r\n  expandedCellRows: PropTypes.array.isRequired,\r\n  modMarineCompartmentDetails: PropTypes.array.isRequired,\r\n  onCarrierSearchChange: PropTypes.func.isRequired,\r\n  isHSEInspectionEnable: PropTypes.bool.isRequired,\r\n  isBondShow: PropTypes.bool.isRequired,\r\n  onCarrierCompanyChange: PropTypes.func.isRequired,\r\n  isSlotbookinginUI: PropTypes.bool.isRequired,\r\n  updateEnableForConfigure: PropTypes.bool.isRequired,\r\n};\r\n\r\nMarineDispatchDetails.defaultProps = {\r\n  isEnterpriseNode: false,\r\n  isSlotbookinginUI: false,\r\n};\r\n\r\nexport function MarineDispatchDetails({\r\n  allocationDetails,\r\n  marineDispatch,\r\n  modMarineDispatch,\r\n  modAssociations,\r\n  modTankAssociations,\r\n  validationErrors,\r\n  listOptions,\r\n  selectedAssociations,\r\n  selectedTankAssociations,\r\n  onFieldChange,\r\n  onDateTextChange,\r\n  handleAssociationSelectionChange,\r\n  handleTankAssociationSelectionChange,\r\n  handleCellDataEdit,\r\n  handleTankCellDataEdit,\r\n  handleAddAssociation,\r\n  handleAddTankAssociation,\r\n  handleDeleteAssociation,\r\n  handleDeleteTankAssociation,\r\n  onVesselSearchChange,\r\n  isEnterpriseNode,\r\n  handleInputDataEdit,\r\n  operationsVisibilty,\r\n  handleCellCheck,\r\n  viewTab,\r\n  onTabChange,\r\n  handleAttributeCellDataEdit,\r\n  attributeValidationErrors,\r\n  selectedAttributeList,\r\n  handleCompAttributeCellDataEdit,\r\n  expandedRows,\r\n  toggleExpand,\r\n  expandedCellRows,\r\n  modMarineCompartmentDetails,\r\n  onCarrierSearchChange,\r\n  isHSEInspectionEnable,\r\n  isBondShow,\r\n  onCarrierCompanyChange,\r\n  compDetailsTab,\r\n  allocationTab,\r\n  isSlotbookinginUI,\r\n  updateEnableForConfigure,\r\n}) {\r\n  const [t] = useTranslation();\r\n  const [isBondNoShow, setBondNoShow] = useState(false);\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [modCellData, setModCellData] = useState({});\r\n\r\n  const handleCustomEditDropDown = (cellData, dropDownoptions) => {\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownoptions}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleTankPlanEditDropDown = (cellData, dropDownoptions) => {\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        value={modTankAssociations[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownoptions}\r\n        onChange={(value) => handleTankCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleTankCodeEditDropDown = (cellData) => {\r\n    return handleTankPlanEditDropDown(cellData, listOptions.tankCodeOptions);\r\n  };\r\n\r\n  const handleCustomEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleTankPlanEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={modTankAssociations[cellData.rowIndex][cellData.field]}\r\n        onChange={(value) => handleTankCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleCustomerEditDropDown = (cellData) => {\r\n    let customerOptions = [];\r\n    if (\r\n      listOptions.shareholderCustomers !== undefined &&\r\n      listOptions.shareholderCustomers !== null\r\n    ) {\r\n      let customers = listOptions.shareholderCustomers.filter(\r\n        (shareholderCust) =>\r\n          shareholderCust.ShareholderCode === cellData.rowData.ShareholderCode\r\n      );\r\n      if (\r\n        customers.length > 0 &&\r\n        customers[0].CustomerDestinationsList !== null\r\n      ) {\r\n        Object.keys(customers[0].CustomerDestinationsList).forEach((customer) =>\r\n          customerOptions.push({ text: customer, value: customer })\r\n        );\r\n      }\r\n    }\r\n    return handleCustomEditDropDown(cellData, customerOptions);\r\n  };\r\n\r\n  const handleBaseProductEditDropDown = (cellData) => {\r\n    let baseProductOptions = [];\r\n    if (\r\n      listOptions.baseProductDetails.ALLPROD !== undefined &&\r\n      listOptions.baseProductDetails.ALLPROD !== null\r\n    ) {\r\n      var baseProductDetails = listOptions.baseProductDetails.ALLPROD.concat(\r\n        listOptions.additiveDetails.ALLPROD\r\n      );\r\n    }\r\n    if (baseProductDetails !== undefined && baseProductDetails !== null) {\r\n      if (baseProductDetails.length > 0) {\r\n        Object.values(baseProductDetails).forEach((baseProduct) =>\r\n          baseProductOptions.push({ text: baseProduct, value: baseProduct })\r\n        );\r\n      }\r\n    }\r\n    return handleTankPlanEditDropDown(cellData, baseProductOptions);\r\n  };\r\n\r\n  const handleProductEditDropDown = (cellData) => {\r\n    let productOptions = [];\r\n    if (\r\n      listOptions.FinishedProducts !== undefined &&\r\n      listOptions.FinishedProducts !== null\r\n    ) {\r\n      if (\r\n        listOptions.FinishedProducts[cellData.rowData.ShareholderCode] !==\r\n        undefined &&\r\n        Array.isArray(\r\n          listOptions.FinishedProducts[cellData.rowData.ShareholderCode]\r\n        )\r\n      ) {\r\n        listOptions.FinishedProducts[cellData.rowData.ShareholderCode].forEach(\r\n          (productcode) =>\r\n            productOptions.push({ text: productcode, value: productcode })\r\n        );\r\n      }\r\n    }\r\n    return handleCustomEditDropDown(cellData, productOptions);\r\n  };\r\n\r\n  const handleTankProductEditDropDown = (cellData) => {\r\n    let productOptions = [];\r\n    if (\r\n      listOptions.FinishedProducts !== undefined &&\r\n      listOptions.FinishedProducts !== null\r\n    ) {\r\n      if (\r\n        listOptions.FinishedProducts[cellData.rowData.ShareholderCode] !==\r\n        undefined &&\r\n        Array.isArray(\r\n          listOptions.FinishedProducts[cellData.rowData.ShareholderCode]\r\n        )\r\n      ) {\r\n        listOptions.FinishedProducts[cellData.rowData.ShareholderCode].forEach(\r\n          (productcode) =>\r\n            productOptions.push({ text: productcode, value: productcode })\r\n        );\r\n      }\r\n    }\r\n    return handleTankPlanEditDropDown(cellData, productOptions);\r\n  };\r\n\r\n  const handleDestinationEditDropDown = (cellData) => {\r\n    let destinationOptions = [];\r\n    let customerDestinationOptions = [];\r\n    if (\r\n      listOptions.shareholderCustomers !== undefined &&\r\n      listOptions.shareholderCustomers !== null\r\n    ) {\r\n      let customers = listOptions.shareholderCustomers.filter(\r\n        (shareholderCust) =>\r\n          shareholderCust.ShareholderCode === cellData.rowData.ShareholderCode\r\n      );\r\n      if (\r\n        customers.length > 0 &&\r\n        customers[0].CustomerDestinationsList !== null\r\n      ) {\r\n        customerDestinationOptions = customers[0].CustomerDestinationsList;\r\n      }\r\n      if (\r\n        customerDestinationOptions[cellData.rowData.CustomerCode] !==\r\n        undefined &&\r\n        Array.isArray(customerDestinationOptions[cellData.rowData.CustomerCode])\r\n      ) {\r\n        customerDestinationOptions[cellData.rowData.CustomerCode].forEach(\r\n          (destination) =>\r\n            destinationOptions.push({ text: destination, value: destination })\r\n        );\r\n      }\r\n    }\r\n    return handleCustomEditDropDown(cellData, destinationOptions);\r\n  };\r\n\r\n  const decimalDisplayValues = (cellData) => {\r\n    const { value } = cellData;\r\n    try {\r\n      if (typeof value === \"number\") {\r\n        return value.toLocaleString();\r\n      } else {\r\n        return value;\r\n      }\r\n    } catch (error) {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  const handleQuantity = (e, UOM) => {\r\n    if (e !== null && e !== \"\") {\r\n      return e + UOM;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStatus = (e) => {\r\n    if (e === MarineDispatchCompartmentDetailType.EMPTY) {\r\n      return \"EMPTY\";\r\n    } else if (e === MarineDispatchCompartmentDetailType.LOADING) {\r\n      return \"LOADING\";\r\n    } else if (e === MarineDispatchCompartmentDetailType.PART_FILLED) {\r\n      return \"PART_FILLED\";\r\n    } else if (e === MarineDispatchCompartmentDetailType.OVER_FILLED) {\r\n      return \"OVER_FILLED\";\r\n    } else if (e === MarineDispatchCompartmentDetailType.FORCE_COMPLETED) {\r\n      return \"FORCE_COMPLETED\";\r\n    } else if (e === MarineDispatchCompartmentDetailType.COMPLETED) {\r\n      return \"COMPLETED\";\r\n    } else if (e === MarineDispatchCompartmentDetailType.INTERRUPTED) {\r\n      return \"INTERRUPTED\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  const handleAttributeType = (data) => {\r\n    const attribute = data.rowData;\r\n    try {\r\n      return attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.STRING.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.INT.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.FLOAT.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.LONG.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.DOUBLE.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.BOOL.toLowerCase() ? (\r\n        <Checkbox\r\n          checked={\r\n            attribute.AttributeValue.toString().toLowerCase() === \"true\"\r\n              ? true\r\n              : false\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n        ></Checkbox>\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.DATETIME.toLowerCase() ? (\r\n        <DatePicker\r\n          fluid\r\n          minuteStep=\"5\"\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n              attribute.AttributeValue === undefined ||\r\n              attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : new Date(attribute.AttributeValue)\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          showYearSelector=\"true\"\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : null;\r\n    } catch (error) {\r\n      console.log(\"TrailerDetails:Error occured on handleAttributeType\", error);\r\n    }\r\n  };\r\n\r\n  const handleIsRequiredCompAttributes = (data) => {\r\n    return data.rowData.IsMandatory ? (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n        <div className=\"ui red circular empty label badge  circle-padding\" />\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const changeBondNo = (checked) => {\r\n    setBondNoShow(checked);\r\n    this.props.onFieldChange(\"Bonded\");\r\n  };\r\n\r\n  const expanderTemplate = (data) => {\r\n    const open =\r\n      expandedRows.findIndex(\r\n        (x) =>\r\n          x.CompartmentSeqNoInVehicle === data.rowData.CompartmentSeqNoInVehicle\r\n      ) >= 0\r\n        ? true\r\n        : false;\r\n    return (\r\n      <div\r\n        onClick={() => toggleExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        <span>{open ? t(\"Hide_Attributes\") : t(\"View_Attributes\")}</span>\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"caret-up\" : \"caret-down\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  function rowExpansionTemplate(data) {\r\n    return Array.isArray(data.AttributesforUI) &&\r\n      data.AttributesforUI.length > 0 ? (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable data={data.AttributesforUI}>\r\n          {isEnterpriseNode ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"TerminalCode\"\r\n              field=\"TerminalCode\"\r\n              header={t(\"CompartmentTerminal\")}\r\n              editable={false}\r\n            ></DataTable.Column>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"AttributeName\"\r\n            header={t(\"CompartmentAttributeName\")}\r\n            renderer={handleIsRequiredCompAttributes}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            header={t(\"CompartmentAttributeValue\")}\r\n            renderer={handleAttributeType}\r\n          />\r\n        </DataTable>\r\n      </div>\r\n    ) : (\r\n      <div className=\"compartmentIcon\">\r\n        <div style={{ paddingRight: \"87%\" }}>\r\n          {t(\"CustomerInventory_NoRecordsFound\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const inputInDataTable = (rowData) => {\r\n    let rowIndex = modMarineCompartmentDetails.findIndex(\r\n      (item) =>\r\n        item.CompartmentSeqNoInVehicle === rowData.CompartmentSeqNoInVehicle\r\n    );\r\n    return (\r\n      <div>\r\n        {operationsVisibilty.adjustPlanIsDisable ||\r\n          (modMarineDispatch.DispatchStatus !== Shipment_Status.QUEUED &&\r\n            modMarineDispatch.DispatchStatus !==\r\n            Shipment_Status.PARTIALLY_LOADED &&\r\n            modMarineDispatch.DispatchStatus !== Shipment_Status.AUTO_LOADED &&\r\n            modMarineDispatch.DispatchStatus !== Shipment_Status.INTERRUPTED &&\r\n            modMarineDispatch.DispatchStatus !==\r\n            Shipment_Status.MANUALLY_LOADED) ||\r\n          rowData.DispatchCompartmentStatus === 1 ||\r\n          rowData.DispatchCompartmentStatus === 4 ||\r\n          rowData.DispatchCompartmentStatus === 5 ||\r\n          rowData.DispatchCompartmentStatus === 3 ||\r\n          isEnterpriseNode ? (\r\n          <Input fluid disabled={true} />\r\n        ) : (\r\n          <Input\r\n            fluid\r\n            disabled={false}\r\n            value={\r\n              modMarineCompartmentDetails[rowIndex].AdjustmentToPlannedQuantity\r\n            }\r\n            onChange={(value) => {\r\n              handleInputDataEdit(value, rowData);\r\n            }}\r\n            reserveSpace={false}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      // <Input\r\n      //   fluid\r\n      //   onChange={(value) => {\r\n      //     handleInputDataEdit(value, rowData);\r\n      //     setModSaveCompartmentDetails(false);\r\n      //   }}\r\n      //   type=\"number\"\r\n      //   disabled={\r\n      //     operationsVisibilty.adjustPlanIsDisable ||\r\n      //     modMarineDispatch.DispatchStatus !==\r\n      //       (Shipment_Status.PARTIALLY_LOADED ||\r\n      //         Shipment_Status.AUTO_LOADED ||\r\n      //         Shipment_Status.INTERRUPTED ||\r\n      //         Shipment_Status.MANUALLY_LOADED) ||\r\n      //     rowData.DispatchCompartmentStatus ===\r\n      //       ShipmentCompartmentStatus.LOADING ||\r\n      //     rowData.DispatchCompartmentStatus ===\r\n      //       ShipmentCompartmentStatus.FORCE_COMPLETED ||\r\n      //     rowData.DispatchCompartmentStatus ===\r\n      //       ShipmentCompartmentStatus.COMPLETED ||\r\n      //     rowData.DispatchCompartmentStatus ===\r\n      //       ShipmentCompartmentStatus.OVER_FILLED\r\n      //   }\r\n      //   reserveSpace={false}\r\n      // />\r\n    );\r\n  };\r\n\r\n  const checkBoxInDataTable = (cellData) => {\r\n    let isChecked = cellData.rowData.forceComplete;\r\n    modMarineCompartmentDetails.forEach((x) => {\r\n      if (\r\n        x.CompartmentSeqNoInVehicle ===\r\n        cellData.rowData.CompartmentSeqNoInVehicle\r\n      ) {\r\n        isChecked = x.forceComplete;\r\n      }\r\n    });\r\n    return (\r\n      <div>\r\n        {operationsVisibilty.forceCompleteIsDisable ||\r\n          (modMarineDispatch.DispatchStatus !== Shipment_Status.QUEUED &&\r\n            modMarineDispatch.DispatchStatus !==\r\n            Shipment_Status.PARTIALLY_LOADED &&\r\n            modMarineDispatch.DispatchStatus !== Shipment_Status.AUTO_LOADED &&\r\n            modMarineDispatch.DispatchStatus !== Shipment_Status.INTERRUPTED &&\r\n            modMarineDispatch.DispatchStatus !==\r\n            Shipment_Status.MANUALLY_LOADED) ||\r\n          cellData.rowData.DispatchCompartmentStatus === 1 ||\r\n          cellData.rowData.DispatchCompartmentStatus === 4 ||\r\n          cellData.rowData.DispatchCompartmentStatus === 5 ||\r\n          cellData.rowData.DispatchCompartmentStatus === 3 ||\r\n          isEnterpriseNode ? (\r\n          <Checkbox disabled={true} />\r\n        ) : (\r\n          <Checkbox\r\n            checked={isChecked}\r\n            disabled={false}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              if (!cellData.rowData.forceComplete) {\r\n                setModCellData(cellData);\r\n                setModelOpen(true);\r\n              } else {\r\n                handleCellCheck(cellData);\r\n              }\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const disPlayValue = (cellData) => {\r\n    try {\r\n      const field = cellData.rowData[cellData.field];\r\n      if (field === undefined || field === null || field === \"\") {\r\n        return \"\";\r\n      }\r\n      return (\r\n        new Date(field).toLocaleDateString() +\r\n        \" \" +\r\n        new Date(field).toLocaleTimeString()\r\n      );\r\n    } catch (error) {\r\n      const field = cellData.rowData[cellData.field];\r\n      console.log(\"error in disPlayValue\", error);\r\n      return new Date(field) + \" \" + new Date(field);\r\n    }\r\n  };\r\n\r\n  const disPlayQuantityValue = (cellData) => {\r\n    const field = cellData.rowData[cellData.field];\r\n    if (field === undefined || field === null || field === \"\") {\r\n      return \"\";\r\n    }\r\n    return field + \" \" + allocationDetails[0].uom;\r\n  };\r\n\r\n  function displayTMModalforInValidConfirm() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"ForceToComplete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Confirm\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  handleCellCheck(modCellData);\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n\r\n  const rowExpansionCellTemplate = (data) => {\r\n    let compData = [];\r\n    compData.push(data);\r\n    return (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable data={compData}>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            field=\"AdjustmentToPlannedQuantity\"\r\n            header={t(\"ViewShipment_AdjustmentToPlannedQuantity\")}\r\n            renderer={(cellData) => inputInDataTable(cellData.rowData)}\r\n          />\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            field=\"forceComplete\"\r\n            header={t(\"ViewShipment_ForceComplete\")}\r\n            renderer={(cellData) => checkBoxInDataTable(cellData)}\r\n          />\r\n        </DataTable>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modMarineDispatch.DispatchCode}\r\n                indicator=\"required\"\r\n                disabled={marineDispatch.DispatchCode !== \"\"}\r\n                onChange={(data) => onFieldChange(\"DispatchCode\", data)}\r\n                label={t(\"Marine_ShipmentCompDetail_ShipmentNumber\")}\r\n                error={t(validationErrors.DispatchCode)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                indicator=\"required\"\r\n                disabled={\r\n                  !(\r\n                    updateEnableForConfigure ||\r\n                    marineDispatch.DispatchCode === \"\"\r\n                  )\r\n                }\r\n                label={t(\"Marine_ShipmentCompDetail_CarrierCompany\")}\r\n                value={modMarineDispatch.CarrierCode}\r\n                options={listOptions.carrierCompany}\r\n                onChange={(data) => {\r\n                  onCarrierCompanyChange(data);\r\n                }}\r\n                error={t(validationErrors.CarrierCode)}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                onSearch={onCarrierSearchChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                indicator=\"required\"\r\n                disabled={\r\n                  !(\r\n                    updateEnableForConfigure ||\r\n                    marineDispatch.DispatchCode === \"\"\r\n                  )\r\n                }\r\n                label={t(\"Marine_ShipmentCompDetail_Vehicle\")}\r\n                value={modMarineDispatch.VesselCode}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.vessels,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                onChange={(data) => {\r\n                  onFieldChange(\"VesselCode\", data);\r\n                }}\r\n                error={t(validationErrors.VesselCode)}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                onSearch={onVesselSearchChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                minuteStep=\"5\"\r\n                value={\r\n                  modMarineDispatch.ScheduledDate === null\r\n                    ? \"\"\r\n                    : new Date(modMarineDispatch.ScheduledDate)\r\n                }\r\n                label={t(\"Marine_ShipmentCompDetail_ScheduledDate\")}\r\n                type=\"datetime\"\r\n                disablePast={false}\r\n                indicator=\"required\"\r\n                disabled={\r\n                  !(\r\n                    updateEnableForConfigure ||\r\n                    marineDispatch.DispatchCode === \"\"\r\n                  )\r\n                }\r\n                onChange={(data) => onFieldChange(\"ScheduledDate\", data)}\r\n                displayFormat={getCurrentDateFormat()}\r\n                error={t(validationErrors.ScheduledDate)}\r\n                onTextChange={(value, error) => {\r\n                  onDateTextChange(\"ScheduledDate\", value, error);\r\n                }}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modMarineDispatch.DispatchStatus}\r\n                onChange={(data) => onFieldChange(\"DispatchStatus\", data)}\r\n                label={t(\"Marine_ShipmentCompDetail_ShipmentStatus\")}\r\n                reserveSpace={false}\r\n                disabled={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"MarineDispatchManualEntry_LASelect\")}\r\n                label={t(\"Marine_ShipmentCompDetail_UOM\")}\r\n                value={modMarineDispatch.QuantityUOM}\r\n                multiple={false}\r\n                indicator=\"required\"\r\n                options={listOptions.shipmentUOM}\r\n                onChange={(data) => onFieldChange(\"QuantityUOM\", data)}\r\n                error={t(validationErrors.QuantityUOM)}\r\n                disabled={\r\n                  !(\r\n                    updateEnableForConfigure ||\r\n                    marineDispatch.DispatchCode === \"\"\r\n                  )\r\n                }\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modMarineDispatch.Description}\r\n                disabled={\r\n                  !(\r\n                    updateEnableForConfigure ||\r\n                    marineDispatch.DispatchCode === \"\"\r\n                  )\r\n                }\r\n                onChange={(data) => onFieldChange(\"Description\", data)}\r\n                label={t(\"CarrierDetails_Desc\")}\r\n                error={t(validationErrors.Description)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            {marineDispatch.DispatchCode !== \"\" && isSlotbookinginUI ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4 ddlSelectAll\">\r\n                <div className=\"ui single-input fluid disabled\">\r\n                  <div class=\"ui input-label\">\r\n                    <span className=\"input-label-message\">\r\n                      {t(\"ViewShipment_IsSlotBooked\")}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"input-wrap\">\r\n                    <label style={{ fontWeight: \"bold\" }}>\r\n                      {modMarineDispatch.SlotBooked ? \"Booked\" : \"Not Booked\"}\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {!(\r\n              updateEnableForConfigure && marineDispatch.DispatchCode === \"\"\r\n            ) &&\r\n              !isEnterpriseNode &&\r\n              isHSEInspectionEnable ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Input\r\n                  fluid\r\n                  value={modMarineDispatch.HSEInspectionStatus}\r\n                  label={t(\"Marine_ShipmentCompDetail_InspectionStatus\")}\r\n                  reserveSpace={false}\r\n                  disabled={true}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"FinishedProductInfo_Select\")}\r\n                label={t(\"Cust_Status\")}\r\n                value={modMarineDispatch.Active}\r\n                options={[\r\n                  { text: t(\"ViewShipment_Ok\"), value: true },\r\n                  { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                ]}\r\n                onChange={(data) => onFieldChange(\"Active\", data)}\r\n                disabled={\r\n                  !(\r\n                    updateEnableForConfigure ||\r\n                    marineDispatch.DispatchCode === \"\"\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modMarineDispatch.Remarks}\r\n                label={t(\"Cust_Remarks\")}\r\n                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                indicator={\r\n                  modMarineDispatch.Active !== marineDispatch.Active\r\n                    ? \"required\"\r\n                    : \"\"\r\n                }\r\n                error={t(validationErrors.Remarks)}\r\n                reserveSpace={false}\r\n                disabled={\r\n                  !(\r\n                    updateEnableForConfigure ||\r\n                    marineDispatch.DispatchCode === \"\"\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            {/*{isEnterpriseNode ? (*/}\r\n            {/*    <div className=\"col-12 col-md-6 col-lg-4\">*/}\r\n            {/*      <AssociatedTerminals*/}\r\n            {/*          terminalList={listOptions.terminalCodes}*/}\r\n            {/*          selectedTerminal={modMarineDispatch.TerminalCodes}*/}\r\n            {/*          error={validationErrors.TerminalCodes}*/}\r\n            {/*          onFieldChange={onFieldChange}*/}\r\n            {/*          onCheckChange={onAllTerminalsChange}*/}\r\n            {/*      ></AssociatedTerminals>*/}\r\n            {/*    </div>*/}\r\n            {/*) : (*/}\r\n            {/*    \"\"*/}\r\n            {/*)}*/}\r\n            {isEnterpriseNode ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder=\"Select\"\r\n                  indicator=\"required\"\r\n                  label={t(\"TerminalCodes\")}\r\n                  value={\r\n                    modMarineDispatch.TerminalCodes === null\r\n                      ? \"\"\r\n                      : modMarineDispatch.TerminalCodes.length === 0\r\n                        ? \"\"\r\n                        : modMarineDispatch.TerminalCodes[0]\r\n                  }\r\n                  disabled={\r\n                    !(\r\n                      updateEnableForConfigure ||\r\n                      marineDispatch.DispatchCode === \"\"\r\n                    )\r\n                  }\r\n                  options={getOptionsWithSelect(\r\n                    Utilities.transferListtoOptions(listOptions.terminalCodes),\r\n                    t(\"Common_Select\")\r\n                  )}\r\n                  onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n                  error={t(validationErrors.TerminalCodes)}\r\n                  reserveSpace={false}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {!(\r\n              updateEnableForConfigure && marineDispatch.DispatchCode === \"\"\r\n            ) && isEnterpriseNode ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Input\r\n                  fluid\r\n                  placeholder=\"\"\r\n                  label={t(\"Shipment_LoadedTerminal\")}\r\n                  value={marineDispatch.ActualTerminalCode}\r\n                  disabled={true}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {isBondShow ? (\r\n              <div\r\n                className=\"col-12 col-md-6 col-lg-4\"\r\n                style={{ paddingTop: \"25px\" }}\r\n              >\r\n                <Checkbox\r\n                  label={t(\"ViewShipmentStatus_ShipmentBond\")}\r\n                  checked={isBondNoShow || marineDispatch.BondNumber !== null}\r\n                  onChange={(checked) => changeBondNo(checked)}\r\n                  disabled={!updateEnableForConfigure}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {isBondShow &&\r\n              (isBondNoShow || marineDispatch.BondNumber !== null) ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Input\r\n                  fluid\r\n                  indicator=\"required\"\r\n                  label={t(\"Shipment_BondedNo\")}\r\n                  value={marineDispatch.BondNumber}\r\n                  error={t(validationErrors.BondNumber)}\r\n                  disabled={!updateEnableForConfigure}\r\n                  onChange={(data) => onFieldChange(\"BondNumber\", data)}\r\n                  reserveSpace={false}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          {selectedAttributeList.length > 0\r\n            ? selectedAttributeList.map((attire) => (\r\n              <ErrorBoundary>\r\n                <Accordion>\r\n                  <Accordion.Content\r\n                    className=\"attributeAccordian\"\r\n                    title={\r\n                      isEnterpriseNode\r\n                        ? attire.TerminalCode + \" - \" + t(\"Attributes_Header\")\r\n                        : t(\"Attributes_Header\")\r\n                    }\r\n                  >\r\n                    <AttributeDetails\r\n                      selectedAttributeList={attire.attributeMetaDataList}\r\n                      handleCellDataEdit={handleAttributeCellDataEdit}\r\n                      attributeValidationErrors={handleValidationErrorFilter(\r\n                        attributeValidationErrors,\r\n                        attire.TerminalCode\r\n                      )}\r\n                    ></AttributeDetails>\r\n                  </Accordion.Content>\r\n                </Accordion>\r\n              </ErrorBoundary>\r\n            ))\r\n            : null}\r\n          <div>\r\n            <Tab\r\n              defaultActiveIndex={viewTab}\r\n              onTabChange={onTabChange}\r\n              className=\"col-12\"\r\n            >\r\n              <Tab.Pane title={t(\"Shipment_Compartment_Planning_Tab_Header\")}>\r\n                <div className=\"row compartmentRow\">\r\n                  <div className=\"col col-md-12 col-lg-12 col-xl-12\">\r\n                    {updateEnableForConfigure ? (\r\n                      <div className=\"compartmentIconContainer\">\r\n                        <div\r\n                          onClick={handleAddAssociation}\r\n                          className=\"compartmentIcon\"\r\n                        >\r\n                          <div>\r\n                            <Icon\r\n                              root=\"common\"\r\n                              name=\"badge-plus\"\r\n                              size=\"medium\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"margin_l10\">\r\n                            <h5 className=\"font14\">\r\n                              {t(\"FinishedProductInfo_Add\")}\r\n                            </h5>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          onClick={handleDeleteAssociation}\r\n                          className=\"compartmentIcon margin_l30\"\r\n                        >\r\n                          <div>\r\n                            <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n                          </div>\r\n                          <div className=\"margin_l10\">\r\n                            <h5 className=\"font14\">{t(\"DestAdd_Delete\")}</h5>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"compartmentIconContainer\">\r\n                        <div className=\"compartmentIcon\">\r\n                          <div>\r\n                            <Icon\r\n                              root=\"common\"\r\n                              name=\"badge-plus\"\r\n                              size=\"medium\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"margin_l10\">\r\n                            <h5 className=\"font14\">\r\n                              {t(\"FinishedProductInfo_Add\")}\r\n                            </h5>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"compartmentIcon margin_l30\">\r\n                          <div>\r\n                            <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n                          </div>\r\n                          <div className=\"margin_l10\">\r\n                            <h5 className=\"font14\">{t(\"DestAdd_Delete\")}</h5>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row marginRightZero tableScroll\">\r\n                  <div className=\"col-12 detailsTable\">\r\n                    <DataTable\r\n                      data={modAssociations}\r\n                      selectionMode=\"multiple\"\r\n                      selection={selectedAssociations}\r\n                      onSelectionChange={handleAssociationSelectionChange}\r\n                      rowExpansionTemplate={rowExpansionTemplate}\r\n                      expandedRows={expandedRows}\r\n                    >\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"ShareholderCode\"\r\n                        field=\"ShareholderCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ShipmentCompDetail_Shareholder\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleCustomEditDropDown(\r\n                            celldata,\r\n                            listOptions.shareholders\r\n                          )\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"CompartmentSeqNoInVehicle\"\r\n                        field=\"CompartmentSeqNoInVehicle\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ShipmentCompDetail_CompSeqInVehicle\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleCustomEditDropDown(\r\n                            celldata,\r\n                            listOptions.compSeqOptions\r\n                          )\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"FinishedProductCode\"\r\n                        field=\"FinishedProductCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ShipmentCompDetail_ProductCode\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleProductEditDropDown(celldata)\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"CustomerCode\"\r\n                        field=\"CustomerCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ShipmentCompDetail_Customer\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleCustomerEditDropDown(celldata)\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"DestinationCode\"\r\n                        field=\"DestinationCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ShipmentCompDetail_Destination\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleDestinationEditDropDown(celldata)\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"Quantity\"\r\n                        field=\"Quantity\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ShipmentCompDetail_Quantity\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                        customEditRenderer={handleCustomEditTextBox}\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight\"\r\n                        initialWidth=\"170px\"\r\n                        renderer={expanderTemplate}\r\n                      />\r\n                    </DataTable>\r\n                  </div>\r\n                </div>\r\n              </Tab.Pane>\r\n              <Tab.Pane title={t(\"ShipmentTankPlanning\")}>\r\n                <div className=\"row compartmentRow\">\r\n                  <div className=\"col col-md-12 col-lg-12 col-xl-12\">\r\n                    {updateEnableForConfigure ? (\r\n                      <div className=\"compartmentIconContainer\">\r\n                        <div\r\n                          onClick={\r\n                            updateEnableForConfigure\r\n                              ? handleAddTankAssociation\r\n                              : \"\"\r\n                          }\r\n                          className=\"compartmentIcon\"\r\n                        >\r\n                          <div>\r\n                            <Icon\r\n                              root=\"common\"\r\n                              name=\"badge-plus\"\r\n                              size=\"medium\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"margin_l10\">\r\n                            <h5 className=\"font14\">\r\n                              {t(\"FinishedProductInfo_Add\")}\r\n                            </h5>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          onClick={\r\n                            updateEnableForConfigure\r\n                              ? handleDeleteTankAssociation\r\n                              : \"\"\r\n                          }\r\n                          className=\"compartmentIcon margin_l30\"\r\n                        >\r\n                          <div>\r\n                            <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n                          </div>\r\n                          <div className=\"margin_l10\">\r\n                            <h5 className=\"font14\">{t(\"DestAdd_Delete\")}</h5>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"compartmentIconContainer\">\r\n                        <div className=\"compartmentIcon\">\r\n                          <div>\r\n                            <Icon\r\n                              root=\"common\"\r\n                              name=\"badge-plus\"\r\n                              size=\"medium\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"margin_l10\">\r\n                            <h5 className=\"font14\">\r\n                              {t(\"FinishedProductInfo_Add\")}\r\n                            </h5>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"compartmentIcon margin_l30\">\r\n                          <div>\r\n                            <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n                          </div>\r\n                          <div className=\"margin_l10\">\r\n                            <h5 className=\"font14\">{t(\"DestAdd_Delete\")}</h5>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row marginRightZero tableScroll\">\r\n                  <div className=\"col-12 detailsTable\">\r\n                    <DataTable\r\n                      data={modTankAssociations}\r\n                      selectionMode=\"multiple\"\r\n                      selection={selectedTankAssociations}\r\n                      onSelectionChange={handleTankAssociationSelectionChange}\r\n                    >\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"ShareholderCode\"\r\n                        field=\"ShareholderCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ShipmentCompDetail_Shareholder\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleTankPlanEditDropDown(\r\n                            celldata,\r\n                            listOptions.shareholders\r\n                          )\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"CompartmentSeqNoInVehicle\"\r\n                        field=\"CompartmentSeqNoInVehicle\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ShipmentCompDetail_CompSeqInVehicle\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleTankPlanEditDropDown(\r\n                            celldata,\r\n                            listOptions.compSeqOptions\r\n                          )\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"FinishedProductCode\"\r\n                        field=\"FinishedProductCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ShipmentCompDetail_ProductCode\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleTankProductEditDropDown(celldata)\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"BaseProductCode\"\r\n                        field=\"BaseProductCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ShipmentCompDetail_BaseProduct\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleBaseProductEditDropDown(celldata)\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"TankCode\"\r\n                        field=\"TankCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ShipmentCompDetail_Tank\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleTankCodeEditDropDown(celldata)\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"PlannedQuantity\"\r\n                        field=\"PlannedQuantity\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ShipmentCompDetail_Quantity\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                        customEditRenderer={handleTankPlanEditTextBox}\r\n                      ></DataTable.Column>\r\n                    </DataTable>\r\n                  </div>\r\n                </div>\r\n              </Tab.Pane>\r\n              {compDetailsTab.map(() => {\r\n                return (\r\n                  <Tab.Pane\r\n                    title={t(\"ViewShipment_LoadingDetails_TopUpDecant\")}\r\n                    disabled={\r\n                      marineDispatch.DispatchCode === \"\" &&\r\n                      updateEnableForConfigure\r\n                    }\r\n                  >\r\n                    <div className=\"row marginRightZero tableScroll\">\r\n                      <div className=\"col-12 detailsTable\">\r\n                        <DataTable\r\n                          data={modMarineCompartmentDetails}\r\n                          rowExpansionTemplate={rowExpansionCellTemplate}\r\n                          expandedRows={expandedCellRows}\r\n                        >\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            field=\"CompartmentSeqNoInVehicle\"\r\n                            header={t(\"ViewMarineShipmentList_SeqNo\")}\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            field=\"FinishedProductCode\"\r\n                            header={t(\"ViewShipmentCompartment_Product\")}\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            field=\"DispatchCompartmentStatus\"\r\n                            header={t(\"ViewShipmentStatus_Status\")}\r\n                            renderer={(celldata) =>\r\n                              handleStatus(\r\n                                celldata.rowData.DispatchCompartmentStatus\r\n                              )\r\n                            }\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            field=\"PlannedQuantity\"\r\n                            header={t(\r\n                              \"ViewShipmentCompartment_PlannedQuantity\"\r\n                            )}\r\n                            renderer={(cellData) =>\r\n                              handleQuantity(\r\n                                cellData.rowData.PlannedQuantity,\r\n                                cellData.rowData.PlanQuantityUOM\r\n                              )\r\n                            }\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            field=\"AdjustedPlanQuantity\"\r\n                            header={t(\r\n                              \"ViewShipmentCompartment_AdjustedQuantity\"\r\n                            )}\r\n                            renderer={(cellData) =>\r\n                              handleQuantity(\r\n                                cellData.rowData.AdjustedPlanQuantity,\r\n                                cellData.rowData.PlanQuantityUOM\r\n                              )\r\n                            }\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            field=\"ReturnQuantity\"\r\n                            header={t(\"ViewMarineShipmentList_ReturnQuantity\")}\r\n                            renderer={(cellData) =>\r\n                              handleQuantity(\r\n                                cellData.rowData.ReturnQuantity,\r\n                                cellData.rowData.PlanQuantityUOM\r\n                              )\r\n                            }\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            field=\"LoadedQuantity\"\r\n                            header={t(\"ViewMarineShipmentList_LoadedQuantity\")}\r\n                            renderer={(cellData) =>\r\n                              handleQuantity(\r\n                                cellData.rowData.LoadedQuantity,\r\n                                cellData.rowData.PlanQuantityUOM\r\n                              )\r\n                            }\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            field=\"AdjustmentToPlannedQuantity\"\r\n                            header={t(\r\n                              \"ViewShipment_AdjustmentToPlannedQuantity\"\r\n                            )}\r\n                            renderer={(cellData) =>\r\n                              inputInDataTable(cellData.rowData)\r\n                            }\r\n                          />\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            field=\"forceComplete\"\r\n                            header={t(\"ViewShipment_ForceComplete\")}\r\n                            renderer={(cellData) =>\r\n                              checkBoxInDataTable(cellData)\r\n                            }\r\n                          />\r\n                        </DataTable>\r\n                      </div>\r\n                    </div>\r\n                  </Tab.Pane>\r\n                );\r\n              })}\r\n              {allocationTab.map(() => {\r\n                return (\r\n                  <Tab.Pane\r\n                    title={t(\"ViewMarineShipmentProductAllocation_Item\")}\r\n                    disabled={\r\n                      marineDispatch.DispatchCode === \"\" &&\r\n                      updateEnableForConfigure\r\n                    }\r\n                  >\r\n                    <div className=\"row marginRightZero tableScroll\">\r\n                      <div className=\"col-12 detailsTable\">\r\n                        <DataTable data={allocationDetails} scrollable={true}>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"EntityCode\"\r\n                            field=\"EntityCode\"\r\n                            header={t(\r\n                              \"MarineShipmentProductAllocationDetails_CustomerCode\"\r\n                            )}\r\n                            editable={false}\r\n                            editFieldType=\"text\"\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"productcode\"\r\n                            field=\"productcode\"\r\n                            header={t(\r\n                              \"MarineShipmentProductAllocationDetails_ProductCode\"\r\n                            )}\r\n                            editable={false}\r\n                            editFieldType=\"text\"\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            header={t(\r\n                              \"MarineShipmentProductAllocationDetails_AllocationType\"\r\n                            )}\r\n                            field=\"allocationtype\"\r\n                            key=\"allocationtype\"\r\n                            editable={false}\r\n                            editFieldType=\"text\"\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"allocationperiod\"\r\n                            field=\"allocationperiod\"\r\n                            header={t(\r\n                              \"MarineShipmentProductAllocationDetails_AllocationFrequency\"\r\n                            )}\r\n                            editable={false}\r\n                            editFieldType=\"text\"\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            header={t(\r\n                              \"MarineShipmentProductAllocationDetails_StartDate\"\r\n                            )}\r\n                            editable={false}\r\n                            key=\"startdate\"\r\n                            field=\"startdate\"\r\n                            editFieldType=\"text\"\r\n                            renderer={(cellData) => disPlayValue(cellData)}\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            header={t(\r\n                              \"MarineShipmentProductAllocationDetails_EndDate\"\r\n                            )}\r\n                            editable={false}\r\n                            key=\"enddate\"\r\n                            field=\"enddate\"\r\n                            editFieldType=\"text\"\r\n                            renderer={(cellData) => disPlayValue(cellData)}\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            header={t(\r\n                              \"MarineShipmentProductAllocationDetails_AllocatedQuantity\"\r\n                            )}\r\n                            editable={false}\r\n                            key=\"allocatedqty\"\r\n                            field=\"allocatedqty\"\r\n                            editFieldType=\"text\"\r\n                            renderer={(cellData) =>\r\n                              disPlayQuantityValue(cellData)\r\n                            }\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            header={t(\r\n                              \"MarineShipmentProductAllocationDetails_BlockedQuantity\"\r\n                            )}\r\n                            editable={false}\r\n                            key=\"blockedqty\"\r\n                            field=\"blockedqty\"\r\n                            editFieldType=\"text\"\r\n                            renderer={(cellData) =>\r\n                              disPlayQuantityValue(cellData)\r\n                            }\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            header={t(\r\n                              \"MarineShipmentProductAllocationDetails_LoadedQuantity\"\r\n                            )}\r\n                            editable={false}\r\n                            key=\"loadedqty\"\r\n                            field=\"loadedqty\"\r\n                            editFieldType=\"text\"\r\n                            renderer={(cellData) =>\r\n                              disPlayQuantityValue(cellData)\r\n                            }\r\n                          ></DataTable.Column>\r\n                        </DataTable>\r\n                      </div>\r\n                    </div>\r\n                  </Tab.Pane>\r\n                );\r\n              })}\r\n            </Tab>\r\n            {displayTMModalforInValidConfirm()}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { MarineDispatchDetails } from \"../../UIBase/Details/MarineDispatchDetails\";\r\nimport { marineDispatchValidationDef } from \"../../../JS/ValidationDef\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport {\r\n  emptyMarineDispatch,\r\n  emptyDispatchCompartmentPlan,\r\n  emptyDispatchCompartmentTanks,\r\n} from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport {\r\n  functionGroups,\r\n  fnMarineShipmentByCompartment,\r\n  fnMarineDispatch,\r\n  fnKPIInformation\r\n} from \"../../../JS/FunctionGroups\";\r\nimport { marineDispatchCompartDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport MarineDispatchManualEntryDetailsComposite from \"./MarineDispatchManualEntryDetailsComposite\";\r\nimport {\r\n  marineDispatchAttributeEntity,\r\n  marineDispatchCompAttributeEntity,\r\n} from \"../../../JS/AttributeEntity\";\r\nimport * as RestApis from \"../../../JS/RestApis\";\r\nimport { Shipment_Status } from \"../../../JS/Constants\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { kpiMarineShipmentDetails } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nclass MarineDispatchDetailsComposite extends Component {\r\n  state = {\r\n    marineDispatch: lodash.cloneDeep(emptyMarineDispatch),\r\n    modMarineDispatch: {},\r\n    baseProductDetails: {},\r\n    additiveDetails: {},\r\n    modAssociations: [],\r\n    modTankAssociations: [],\r\n    tempModTankAssociations: [],\r\n    modTankPlanAssociations: [],\r\n    vehicleDetails: { carrierCode: \"\", vehicleCompartments: [] },\r\n    modVehicleDetails: { carrierCode: \"\", vehicleCompartments: [] },\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      marineDispatchValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    isCompartmentDetails: false,\r\n    shareholders: this.getShareholders(),\r\n    terminalCodes: this.props.terminalCodes,\r\n    shipmentUOM: [],\r\n    Captains: [],\r\n    vessels: [],\r\n    vesselSearchOptions: [],\r\n    FinishedProducts: {},\r\n    customerDestinationOptions: {},\r\n    compSeqOptions: [],\r\n    shareholderCustomers: [],\r\n    tankCodeOptions: [],\r\n    associatedCompartments: [],\r\n    saveEnabled: false,\r\n    selectedAssociations: [],\r\n    selectedTankAssociations: [],\r\n    marineShipmentPlan: [],\r\n    marineCompartmentDetails: [],\r\n    modMarineCompartmentDetails: [],\r\n    attributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    compartmentAttributeMetaDataList: [],\r\n    selectedAttributeList: [],\r\n    attribute: [],\r\n    terminalOptions: [],\r\n    expandedRows: [],\r\n    operationsVisibilty: {\r\n      forceCompleteIsDisable: false,\r\n      adjustPlanIsDisable: false,\r\n    },\r\n    finishedProductItems: [],\r\n    length: 0,\r\n    isManualEntry: false,\r\n    expandedCellRows: [],\r\n    carrierOptions: [],\r\n    carrierShareholderMap: {},\r\n    carrierSearchOptions: [],\r\n    isHSEInspectionEnable: false,\r\n    isBondShow: false,\r\n    isNewDispatch: false,\r\n    productAllocationDetails: [],\r\n    marineDispatchKPIList: [],\r\n    showAuthenticationLayout: false,\r\n    tempMarineDispatch: {},\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modMarineDispatch = lodash.cloneDeep(this.state.modMarineDispatch);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (propertyName === \"TerminalCodes\") {\r\n        if (data === null) {\r\n          modMarineDispatch[propertyName] = [];\r\n        } else {\r\n          modMarineDispatch[propertyName][0] = data;\r\n        }\r\n        this.terminalSelectionChange([data]);\r\n        this.getTankListForRole(data);\r\n      } else {\r\n        modMarineDispatch[propertyName] = data;\r\n      }\r\n      if (propertyName === \"VesselCode\") {\r\n        if (data === null) {\r\n          this.setState({\r\n            modAssociations: [],\r\n            modTankAssociations: [],\r\n            modTankPlanAssociations: [],\r\n          });\r\n        } else {\r\n          this.getVessel(data, true);\r\n        }\r\n      }\r\n      if (propertyName === \"Active\") {\r\n        if (modMarineDispatch.Active !== this.state.marineDispatch.Active)\r\n          modMarineDispatch.Remarks = \"\";\r\n        modMarineDispatch[propertyName] = data;\r\n      }\r\n      if (propertyName === \"DispatchCode\") {\r\n        modMarineDispatch.DispatchCode = data;\r\n        if (this.state.modTankAssociations.length !== 0) {\r\n          this.state.modTankAssociations.forEach((modMarineDispatch) => {\r\n            modMarineDispatch.DispatchCode = data;\r\n          });\r\n        }\r\n      }\r\n      if (propertyName === \"BondNumber\") {\r\n        modMarineDispatch[propertyName] = data;\r\n      }\r\n      if (propertyName === \"ScheduledDate\") {\r\n        modMarineDispatch[propertyName] = data;\r\n      }\r\n      if (propertyName === \"DispatchStatus\") {\r\n        modMarineDispatch[propertyName] = data;\r\n      }\r\n      if (propertyName === \"QuantityUOM\") {\r\n        modMarineDispatch[propertyName] = data;\r\n      }\r\n      if (propertyName === \"Description\") {\r\n        modMarineDispatch[propertyName] = data;\r\n      }\r\n      if (propertyName === \"Active\") {\r\n        modMarineDispatch[propertyName] = data;\r\n      }\r\n      if (propertyName === \"Remarks\") {\r\n        modMarineDispatch[propertyName] = data;\r\n      }\r\n      if (propertyName === \"Bonded\") {\r\n        validationErrors[\"BondNumber\"] =\r\n          \"BONDED_NO_CANT_BE_EMPTY_FOR_BONDED_MARINE_DISPATCH_X\";\r\n      }\r\n      this.setState({ modMarineDispatch });\r\n      if (marineDispatchValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          marineDispatchValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAddAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.modAssociations.length <\r\n          this.state.modVehicleDetails.vehicleCompartments.length\r\n        ) {\r\n          let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n          let newAssociation = {\r\n            DispatchCode: null,\r\n            ShareholderCode: this.props.selectedShareholder,\r\n            CustomerCode: null,\r\n            DestinationCode: null,\r\n            FinishedProductCode: null,\r\n            CompartmentCode: null,\r\n            CarrierCompanyCode: null,\r\n            TrailerCode: null,\r\n            Quantity: null,\r\n            QuantityUOM: null,\r\n            SequenceNo: 0,\r\n            CompartmentSeqNoInVehicle: \"\",\r\n            AssociatedOrderItems: null,\r\n            AssociatedContractItems: null,\r\n            Attributes: [],\r\n          };\r\n          var maxnumber = 1;\r\n          modAssociations.forEach((object) => {\r\n            var seqNumber = object.SequenceNo;\r\n            if (\r\n              seqNumber !== null &&\r\n              seqNumber !== \"\" &&\r\n              seqNumber !== undefined\r\n            ) {\r\n              if (!isNaN(parseInt(seqNumber))) {\r\n                let val = parseInt(seqNumber);\r\n\r\n                if (val >= maxnumber) maxnumber = val + 1;\r\n              }\r\n            }\r\n          });\r\n          newAssociation.SequenceNo = maxnumber;\r\n          newAssociation.QuantityUOM = this.state.modMarineDispatch.QuantityUOM;\r\n          modAssociations.push(newAssociation);\r\n          this.setState(\r\n            {\r\n              modAssociations,\r\n              selectedAssociations: [],\r\n            },\r\n            () => {\r\n              if (\r\n                this.props.userDetails.EntityResult.IsEnterpriseNode === false\r\n              ) {\r\n                var attributeMetaDataList = lodash.cloneDeep(\r\n                  this.state.compartmentAttributeMetaDataList\r\n                );\r\n                if (attributeMetaDataList.length > 0) {\r\n                  this.formCompartmentAttributes([\r\n                    attributeMetaDataList[0].TerminalCode,\r\n                  ]);\r\n                }\r\n              } else {\r\n                this.formCompartmentAttributes(\r\n                  this.state.modMarineDispatch.TerminalCodes\r\n                );\r\n              }\r\n            }\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"MarineDispatchDetailsComposite:Error occured on handleAddAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleAddTankAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        let modTankAssociations = lodash.cloneDeep(\r\n          this.state.modTankAssociations\r\n        );\r\n        let newTankAssociation = lodash.cloneDeep(emptyDispatchCompartmentPlan);\r\n        var maxnumber = 1;\r\n        modTankAssociations.forEach((object) => {\r\n          var seqNumber = object.SequenceNo;\r\n          if (\r\n            seqNumber !== null &&\r\n            seqNumber !== \"\" &&\r\n            seqNumber !== undefined\r\n          ) {\r\n            if (!isNaN(parseInt(seqNumber))) {\r\n              let val = parseInt(seqNumber);\r\n\r\n              if (val >= maxnumber) maxnumber = val + 1;\r\n            }\r\n          }\r\n        });\r\n        newTankAssociation.SequenceNo = maxnumber;\r\n        newTankAssociation.PlanQuantityUOM =\r\n          this.state.modMarineDispatch.QuantityUOM;\r\n        modTankAssociations.push(newTankAssociation);\r\n        this.setState({\r\n          modTankPlanAssociations: modTankAssociations,\r\n          modTankAssociations,\r\n          selectedTankAssociations: [],\r\n        });\r\n      } catch (error) {\r\n        console.log(\r\n          \"MarineDispatchDetailsComposite:Error occured on handleAddAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDeleteAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedAssociations != null &&\r\n          this.state.selectedAssociations.length > 0\r\n        ) {\r\n          if (this.state.modAssociations.length > 0) {\r\n            let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n            let modTankPlanAssociations = lodash.cloneDeep(\r\n              this.state.modTankPlanAssociations\r\n            );\r\n\r\n            this.state.selectedAssociations.forEach((obj) => {\r\n              modAssociations = modAssociations.filter((association) => {\r\n                return association.SequenceNo !== obj.SequenceNo;\r\n              });\r\n              modTankPlanAssociations = modTankPlanAssociations.filter(\r\n                (tankAssociation) => {\r\n                  return (\r\n                    tankAssociation.CompartmentSeqNoInVehicle !==\r\n                    obj.CompartmentSeqNoInVehicle\r\n                  );\r\n                }\r\n              );\r\n            });\r\n\r\n            this.setState({\r\n              modAssociations,\r\n              modTankPlanAssociations,\r\n              modTankAssociations: modTankPlanAssociations,\r\n              selectedAssociations: [],\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"MarineDispatchDetailsComposite:Error occured on handleDeleteAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDeleteTankAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedTankAssociations != null &&\r\n          this.state.selectedTankAssociations.length > 0\r\n        ) {\r\n          if (this.state.modTankAssociations.length > 0) {\r\n            let modTankAssociations = lodash.cloneDeep(\r\n              this.state.modTankAssociations\r\n            );\r\n\r\n            this.state.selectedTankAssociations.forEach((obj, index) => {\r\n              modTankAssociations = modTankAssociations.filter(\r\n                (tankAssociation, cindex) => {\r\n                  return tankAssociation.SequenceNo !== obj.SequenceNo;\r\n                }\r\n              );\r\n            });\r\n\r\n            this.setState({\r\n              modTankPlanAssociations: modTankAssociations,\r\n              modTankAssociations,\r\n              selectedTankAssociations: [],\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"MarineDispatchDetailsComposite:Error occured on handleDeleteTankAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    try {\r\n      let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n      modAssociations[cellData.rowIndex][cellData.field] = newVal;\r\n      if (cellData.field === \"Quantity\") {\r\n        modAssociations[cellData.rowIndex][\"Quantity\"] =\r\n          newVal.toLocaleString();\r\n      }\r\n      if (\r\n        cellData.field === \"CustomerCode\" ||\r\n        cellData.field === \"FinishedProductCode\" ||\r\n        cellData.field === \"DestinationCode\"\r\n      ) {\r\n        this.getFinishedProduct(modAssociations, cellData);\r\n      }\r\n      if (cellData.field === \"ShareholderCode\") {\r\n        modAssociations[cellData.rowIndex][\"CustomerCode\"] = \"\";\r\n        modAssociations[cellData.rowIndex][\"FinishedProductCode\"] = \"\";\r\n        modAssociations[cellData.rowIndex][\"DestinationCode\"] = \"\";\r\n        let customers = this.state.shareholderCustomers.filter(\r\n          (shareholderCust) => shareholderCust.ShareholderCode === newVal\r\n        );\r\n        if (customers.length > 0) {\r\n          var customerDestinationOptions;\r\n          customerDestinationOptions = customers[0].CustomerDestinationsList;\r\n          this.setState({ customerDestinationOptions });\r\n        } else {\r\n          console.log(\"no customers identified for shareholder\");\r\n        }\r\n      } else if (cellData.field === \"CustomerCode\") {\r\n        let shareholderCustomer = this.state.shareholderCustomers.filter(\r\n          (shareholderCust) =>\r\n            shareholderCust.ShareholderCode === cellData.rowData.ShareholderCode\r\n        );\r\n        let customerDestinationOptions =\r\n          shareholderCustomer[0].CustomerDestinationsList;\r\n        if (\r\n          customerDestinationOptions !== undefined &&\r\n          customerDestinationOptions !== null\r\n        ) {\r\n          if (\r\n            customerDestinationOptions[newVal] !== undefined &&\r\n            Array.isArray(customerDestinationOptions[newVal]) &&\r\n            customerDestinationOptions[newVal].length === 1\r\n          ) {\r\n            modAssociations[cellData.rowIndex][\"DestinationCode\"] =\r\n              customerDestinationOptions[newVal][0];\r\n            this.getFinishedProduct(modAssociations, cellData);\r\n          } else {\r\n            modAssociations[cellData.rowIndex][\"DestinationCode\"] = \"\";\r\n          }\r\n        }\r\n      } else if (cellData.field === \"CompartmentSeqNoInVehicle\") {\r\n        let vehicleDetails = this.state.modVehicleDetails;\r\n        let vehicleCompartments = vehicleDetails.vehicleCompartments.filter(\r\n          (vc) => vc.vehCompSeq.toString() === newVal.toString()\r\n        );\r\n        if (vehicleCompartments.length > 0) {\r\n          modAssociations[cellData.rowIndex][\"Quantity\"] =\r\n            vehicleCompartments[0].SFL !== null &&\r\n              vehicleCompartments[0].SFL !== \"\"\r\n              ? vehicleCompartments[0].SFL.toLocaleString()\r\n              : null;\r\n          modAssociations[cellData.rowIndex][\"TrailerCode\"] =\r\n            vehicleCompartments[0].trailerCode;\r\n          modAssociations[cellData.rowIndex][\"CompartmentCode\"] =\r\n            vehicleCompartments[0].compCode;\r\n        }\r\n      }\r\n      this.setState({\r\n        modAssociations,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchDetailsComposite:Error occured on handleCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getFinishedProduct(modAssociations, cellData) {\r\n    var modTankPlanAssociations = lodash.cloneDeep(\r\n      this.state.modTankPlanAssociations\r\n    );\r\n    if (\r\n      modAssociations[cellData.rowIndex][\"CustomerCode\"] !== null &&\r\n      modAssociations[cellData.rowIndex][\"FinishedProductCode\"] !== null &&\r\n      modAssociations[cellData.rowIndex][\"DestinationCode\"] !== null &&\r\n      modAssociations[cellData.rowIndex][\"Quantity\"] !== null\r\n    ) {\r\n      modTankPlanAssociations = modTankPlanAssociations.filter(\r\n        (modTankPlanAssociation) => {\r\n          return (\r\n            modTankPlanAssociation.CompartmentSeqNoInVehicle !==\r\n            modAssociations[cellData.rowIndex].CompartmentSeqNoInVehicle\r\n          );\r\n        }\r\n      );\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.finishedProductCode,\r\n          value: modAssociations[cellData.rowIndex].FinishedProductCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: cellData.rowData.ShareholderCode,\r\n        keyDataCode: KeyCodes.finishedProductCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestApis.GetFinishedProduct,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (result.EntityResult.FinishedProductItems.length !== 0) {\r\n              var finishedProductItems =\r\n                result.EntityResult.FinishedProductItems;\r\n              var totalQuantity = 0;\r\n              for (let k = 0; k < finishedProductItems.length; k++) {\r\n                totalQuantity += finishedProductItems[k].Quantity;\r\n              }\r\n              for (let j = 0; j < finishedProductItems.length; j++) {\r\n                var tankAssociation = lodash.cloneDeep(\r\n                  emptyDispatchCompartmentPlan\r\n                );\r\n                var finishedProductCode = finishedProductItems[j];\r\n                tankAssociation.SequenceNo = this.state.length + j + 1;\r\n                tankAssociation.ShareholderCode =\r\n                  modAssociations[cellData.rowIndex].ShareholderCode;\r\n                tankAssociation.CompartmentCode =\r\n                  modAssociations[cellData.rowIndex].CompartmentCode;\r\n                tankAssociation.CompartmentSeqNoInVehicle =\r\n                  modAssociations[cellData.rowIndex].CompartmentSeqNoInVehicle;\r\n                tankAssociation.FinishedProductCode =\r\n                  modAssociations[cellData.rowIndex].FinishedProductCode;\r\n                tankAssociation.BaseProductCode =\r\n                  finishedProductCode.AdditiveCode === null\r\n                    ? finishedProductCode.BaseProductCode\r\n                    : finishedProductCode.AdditiveCode;\r\n                tankAssociation.PlannedQuantity = (\r\n                  (Utilities.convertStringtoDecimal(\r\n                    modAssociations[cellData.rowIndex].Quantity\r\n                  ) *\r\n                    finishedProductCode.Quantity) /\r\n                  totalQuantity\r\n                ).toLocaleString();\r\n                tankAssociation.PlanQuantityUOM =\r\n                  modAssociations[cellData.rowIndex].QuantityUOM;\r\n                tankAssociation.DispatchCode =\r\n                  this.state.modMarineDispatch.DispatchCode;\r\n                modTankPlanAssociations.push(tankAssociation);\r\n              }\r\n              this.setState({\r\n                length: this.state.length + finishedProductItems.length,\r\n              });\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error in getting finishedProduct\", error);\r\n        });\r\n    }\r\n    this.setState({\r\n      modTankPlanAssociations,\r\n    });\r\n  }\r\n\r\n  handleTankCellDataEdit = (newVal, cellData) => {\r\n    try {\r\n      let modTankAssociations = lodash.cloneDeep(\r\n        this.state.modTankAssociations\r\n      );\r\n      modTankAssociations[cellData.rowIndex][cellData.field] = newVal;\r\n      if (cellData.field === \"ShareholderCode\") {\r\n        modTankAssociations[cellData.rowIndex][\"FinishedProductCode\"] = \"\";\r\n        modTankAssociations[cellData.rowIndex][\"BaseProductCode\"] = \"\";\r\n        modTankAssociations[cellData.rowIndex][\"DestinationCode\"] = \"\";\r\n      } else if (cellData.field === \"CompartmentSeqNoInVehicle\") {\r\n        let vehicleDetails = this.state.modVehicleDetails;\r\n        let vehicleCompartments = vehicleDetails.vehicleCompartments.filter(\r\n          (vc) => vc.vehCompSeq.toString() === newVal.toString()\r\n        );\r\n        if (vehicleCompartments.length > 0) {\r\n          modTankAssociations[cellData.rowIndex][\"PlannedQuantity\"] =\r\n            vehicleCompartments[0].SFL !== null &&\r\n              vehicleCompartments[0].SFL !== \"\"\r\n              ? vehicleCompartments[0].SFL.toLocaleString()\r\n              : null;\r\n          modTankAssociations[cellData.rowIndex][\"TrailerCode\"] =\r\n            vehicleCompartments[0].trailerCode;\r\n          modTankAssociations[cellData.rowIndex][\"CompartmentCode\"] =\r\n            vehicleCompartments[0].compCode;\r\n        }\r\n      } else if (cellData.field === \"FinishedProductCode\") {\r\n        if (modTankAssociations[cellData.rowIndex][cellData.field] === \"\") {\r\n          modTankAssociations[cellData.rowIndex][\"BaseProductCode\"] = \"\";\r\n          modTankAssociations[cellData.rowIndex][\"TankCode\"] = \"\";\r\n        }\r\n      } else if (cellData.field === \"BaseProductCode\") {\r\n        let BPCodeTankCodeList = this.state.tankCodeOptions;\r\n        if (BPCodeTankCodeList !== undefined && BPCodeTankCodeList !== null) {\r\n          if (\r\n            BPCodeTankCodeList[newVal] !== undefined &&\r\n            Array.isArray(BPCodeTankCodeList[newVal]) &&\r\n            BPCodeTankCodeList[newVal].length === 1\r\n          ) {\r\n            modTankAssociations[cellData.rowIndex][\"tankCode\"] =\r\n              BPCodeTankCodeList[newVal][0];\r\n          } else {\r\n            modTankAssociations[cellData.rowIndex][\"tankCode\"] = \"\";\r\n          }\r\n        }\r\n      } else if (cellData.field === \"TankCode\") {\r\n        var dispatchCompartmentTanks = [];\r\n        var dispatchCompartmentTank = lodash.cloneDeep(\r\n          emptyDispatchCompartmentTanks\r\n        );\r\n        dispatchCompartmentTank.CompartmentCode =\r\n          modTankAssociations[cellData.rowIndex].CompartmentCode;\r\n        dispatchCompartmentTank.CompartmentSeqNoInVehicle =\r\n          modTankAssociations[cellData.rowIndex].CompartmentSeqNoInVehicle;\r\n        dispatchCompartmentTank.PlannedQuantity =\r\n          Utilities.convertStringtoDecimal(\r\n            modTankAssociations[cellData.rowIndex].PlannedQuantity\r\n          );\r\n        dispatchCompartmentTank.PlanQuantityUOM =\r\n          modTankAssociations[cellData.rowIndex].PlanQuantityUOM;\r\n        dispatchCompartmentTank.DispatchCode =\r\n          modTankAssociations[cellData.rowIndex].DispatchCode;\r\n        dispatchCompartmentTank.TankCode =\r\n          modTankAssociations[cellData.rowIndex].TankCode;\r\n        dispatchCompartmentTanks.push(dispatchCompartmentTank);\r\n        modTankAssociations[cellData.rowIndex][\"DispatchCompartmentTanks\"] =\r\n          dispatchCompartmentTanks;\r\n      } else if (cellData.field === \"PlannedQuantity\") {\r\n        if (\r\n          modTankAssociations[cellData.rowIndex][\"DispatchCompartmentTanks\"] !==\r\n          null &&\r\n          modTankAssociations[cellData.rowIndex][\"DispatchCompartmentTanks\"] !==\r\n          \"\" &&\r\n          modTankAssociations[cellData.rowIndex][\"DispatchCompartmentTanks\"]\r\n            .length !== 0\r\n        ) {\r\n          modTankAssociations[cellData.rowIndex][\r\n            \"DispatchCompartmentTanks\"\r\n          ][0].PlannedQuantity = Utilities.convertStringtoDecimal(\r\n            modTankAssociations[cellData.rowIndex].PlannedQuantity\r\n          );\r\n        }\r\n      }\r\n      this.setState({\r\n        modTankAssociations,\r\n        modTankPlanAssociations: modTankAssociations,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchDetailsComposite:Error occured on handleTankCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAssociationSelectionChange = (e) => {\r\n    this.setState({ selectedAssociations: e });\r\n  };\r\n\r\n  handleTankAssociationSelectionChange = (e) => {\r\n    this.setState({ selectedTankAssociations: e });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.marineDispatch.DispatchCode !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getMarineDispatch(nextProps.selectedRow.Common_Code, true);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getUoms() {\r\n    axios(\r\n      RestApis.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            var shipmentUOM = lodash.cloneDeep(this.state.shipmentUOM);\r\n            if (Array.isArray(result.EntityResult.VOLUME)) {\r\n              shipmentUOM = Utilities.transferListtoOptions(\r\n                result.EntityResult.VOLUME\r\n              );\r\n            }\r\n            if (Array.isArray(result.EntityResult.MASS)) {\r\n              let massUOMOptions = Utilities.transferListtoOptions(\r\n                result.EntityResult.MASS\r\n              );\r\n              massUOMOptions.forEach((massUOM) => shipmentUOM.push(massUOM));\r\n            }\r\n\r\n            this.setState({ shipmentUOM });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting GetUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getVessel(vehicleCode, vesselChanged) {\r\n    let modMarineDispatch = lodash.cloneDeep(this.state.modMarineDispatch);\r\n    let modVehicleDetails = lodash.cloneDeep(this.state.modVehicleDetails);\r\n    modMarineDispatch.VesselCode = vehicleCode;\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: vehicleCode,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: Constants.TransportationType.MARINE,\r\n      },\r\n      {\r\n        key: KeyCodes.carrierCode,\r\n        value: modMarineDispatch.CarrierCode,\r\n      },\r\n    ];\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetVessel,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            // modMarineDispatch.CarrierCode =\r\n            //   result.EntityResult.CarrierCompanyCode;\r\n            modVehicleDetails.carrierCode =\r\n              result.EntityResult.CarrierCompanyCode;\r\n            modVehicleDetails.vehicleCompartments =\r\n              this.getCompartmentDetailsFromVehicle(result.EntityResult);\r\n            let compSeqOptions = [];\r\n            modVehicleDetails.vehicleCompartments.forEach(\r\n              (vehicleCompartment) =>\r\n                compSeqOptions.push({\r\n                  text: vehicleCompartment.vehCompSeq.toString(),\r\n                  value: vehicleCompartment.vehCompSeq.toString(),\r\n                })\r\n            );\r\n\r\n            if (vesselChanged) {\r\n              this.setState({\r\n                modTankAssociations: [],\r\n              });\r\n              let modAssociations =\r\n                this.getShipmentCompartmentFromVehicleCompartment(\r\n                  modVehicleDetails.vehicleCompartments\r\n                );\r\n              if (\r\n                this.state.modMarineDispatch.QuantityUOM != null &&\r\n                this.state.modMarineDispatch.QuantityUOM !== \"\"\r\n              ) {\r\n                modAssociations.forEach((modAssociation) => {\r\n                  modAssociation.QuantityUOM =\r\n                    this.state.modMarineDispatch.QuantityUOM;\r\n                });\r\n              }\r\n              if (\r\n                this.state.modMarineDispatch.DispatchCode !== null &&\r\n                this.state.modMarineDispatch.DispatchCode !== \"\"\r\n              ) {\r\n                modAssociations.forEach((modAssociation) => {\r\n                  modAssociation.DispatchCode =\r\n                    this.state.modMarineDispatch.DispatchCode;\r\n                });\r\n              }\r\n              this.setState({ modAssociations }, () => {\r\n                var terminalCodes = lodash.cloneDeep(\r\n                  this.state.modMarineDispatch.TerminalCodes\r\n                );\r\n                if (\r\n                  this.props.userDetails.EntityResult.IsEnterpriseNode === false\r\n                ) {\r\n                  var attributeMetaDataList = lodash.cloneDeep(\r\n                    this.state.compartmentAttributeMetaDataList\r\n                  );\r\n                  if (attributeMetaDataList.length > 0)\r\n                    this.formCompartmentAttributes([\r\n                      attributeMetaDataList[0].TerminalCode,\r\n                    ]);\r\n                } else {\r\n                  if (terminalCodes !== undefined && terminalCodes !== null) {\r\n                    this.formCompartmentAttributes(terminalCodes);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            this.setState({\r\n              modMarineDispatch,\r\n              modVehicleDetails,\r\n              compSeqOptions,\r\n            });\r\n\r\n            if (\r\n              this.state.marineDispatch.VehicleCode ===\r\n              modMarineDispatch.VehicleCode\r\n            ) {\r\n              let vehicleDetails = lodash.cloneDeep(modVehicleDetails);\r\n              this.setState({ vehicleDetails });\r\n            }\r\n          }\r\n        } else {\r\n          this.setState({ modMarineDispatch });\r\n          console.log(\"Error in GetVehicle:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getVessel:\", error);\r\n      });\r\n  }\r\n\r\n  getCompartmentDetailsFromVehicle(vehicleInfo) {\r\n    let vehicleCompartments = [];\r\n    let seqNum = 1;\r\n\r\n    vehicleInfo.VehicleTrailers.forEach((vehicleTrailer) => {\r\n      if (Array.isArray(vehicleTrailer.Trailer.Compartments)) {\r\n        for (let i = 0; i < vehicleTrailer.Trailer.Compartments.length; i++) {\r\n          let trailerCompartment = vehicleTrailer.Trailer.Compartments[i];\r\n          let vehicleCompartment = {\r\n            compCode: trailerCompartment.Code,\r\n            vehCompSeq: seqNum,\r\n            trailerCode: trailerCompartment.TrailerCode,\r\n            trailerCompSeq: trailerCompartment.CompartmentSeqNoInTrailer,\r\n            SFL: trailerCompartment.Capacity,\r\n            UOM: trailerCompartment.UOM,\r\n          };\r\n          vehicleCompartments.push(vehicleCompartment);\r\n          seqNum = seqNum + 1;\r\n        }\r\n      }\r\n    });\r\n    return vehicleCompartments;\r\n  }\r\n\r\n  getShipmentCompartmentFromVehicleCompartment(vehicleCompartments) {\r\n    let shipmentCompartments = [];\r\n    try {\r\n      if (Array.isArray(vehicleCompartments)) {\r\n        for (let i = 0; i < vehicleCompartments.length; i++) {\r\n          let vehicleCompartment = vehicleCompartments[i];\r\n          let shipmentCompartment = {\r\n            AssociatedContractItems: null,\r\n            AssociatedOrderItems: null,\r\n            Attributes: [],\r\n            CarrierCompanyCode: null,\r\n            CompartmentCode: vehicleCompartment.compCode,\r\n            CompartmentSeqNoInVehicle: vehicleCompartment.vehCompSeq,\r\n            CustomerCode: null,\r\n            DestinationCode: null,\r\n            DispatchCode: null,\r\n            FinishedProductCode: null,\r\n            Quantity:\r\n              vehicleCompartment.SFL !== null && vehicleCompartment.SFL !== \"\"\r\n                ? vehicleCompartment.SFL.toLocaleString()\r\n                : null,\r\n            QuantityUOM: vehicleCompartment.UOM,\r\n            SequenceNo: vehicleCompartment.trailerCompSeq,\r\n            ShareholderCode: this.props.selectedShareholder,\r\n            TrailerCode: vehicleCompartment.trailerCode,\r\n            attributesForUI: this.state.modAssociations.attributesForUI,\r\n            TerminalCodes: this.state.modMarineDispatch.TerminalCodes,\r\n          };\r\n          shipmentCompartments.push(shipmentCompartment);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"error in getShipmentCompartmentFromVehicleCompartment\",\r\n        error\r\n      );\r\n    }\r\n\r\n    return shipmentCompartments;\r\n  }\r\n\r\n  getVehicleCodes() {\r\n    axios(\r\n      RestApis.GetVehicleCodes +\r\n      \"?Transportationtype=\" +\r\n      Constants.TransportationType.MARINE,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            var vessels = lodash.cloneDeep(this.state.vessels);\r\n            result.EntityResult.forEach((vessel) => {\r\n              vessels.push({\r\n                text: vessel,\r\n                value: vessel,\r\n              });\r\n            });\r\n            let vesselSearchOptions = lodash.cloneDeep(vessels);\r\n            if (vesselSearchOptions.length > Constants.filteredOptionsCount) {\r\n              vesselSearchOptions = vesselSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n\r\n            this.setState({ vessels, vesselSearchOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getVehicleCodes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Vessel List:\", error);\r\n      });\r\n  }\r\n\r\n  // GetCarrierCodes(shareholder) {\r\n  //   axios(\r\n  //     RestApis.GetCarrierCodes +\r\n  //       \"?ShareholderCode=\" +\r\n  //       shareholder +\r\n  //       \"&Transportationtype=\" +\r\n  //       Constants.TransportationType.MARINE,\r\n  //     Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n  //   )\r\n  //     .then((response) => {\r\n  //       var result = response.data;\r\n  //       if (result.IsSuccess === true) {\r\n  //         if (\r\n  //           result.EntityResult !== null &&\r\n  //           Array.isArray(result.EntityResult)\r\n  //         ) {\r\n  //           var carrierCompany = lodash.cloneDeep(this.state.carrierCompany);\r\n  //           result.EntityResult.forEach((carrier) => {\r\n  //             carrierCompany.push({\r\n  //               text: carrier,\r\n  //               value: carrier,\r\n  //             });\r\n  //           });\r\n  //           this.setState({ carrierCompany });\r\n  //         }\r\n  //       } else {\r\n  //         console.log(\"Error in GetCarrierListForRole:\", result.ErrorList);\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(\"Error while getting Carrier List:\", error);\r\n  //     });\r\n  // }\r\n\r\n  getFinishedProductCodes(shareholder) {\r\n    try {\r\n      axios(\r\n        RestApis.GetFinishedProductListForShareholder +\r\n        \"?ShareholderCode=\" +\r\n        shareholder +\r\n        \"&Transportationtype=\" +\r\n        Constants.TransportationType.MARINE,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (result.EntityResult !== null) {\r\n              var FinishedProducts = lodash.cloneDeep(\r\n                this.state.FinishedProducts\r\n              );\r\n              FinishedProducts = result.EntityResult;\r\n\r\n              this.setState({ FinishedProducts });\r\n            }\r\n          } else {\r\n            console.log(\"Error in GetFinishedProductCodes:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while GetFinishedProductCodes List:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"GetFinishedProductCodes:Error occured on GetFinishedProductCodes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getTankListForRole(code) {\r\n    var Shareholder = this.props.userDetails.EntityResult.PrimaryShareholder;\r\n    axios(\r\n      RestApis.GetTankListForRole + \"?ShareholderCode=\" + Shareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var tankCodeOptions = [];\r\n          var tanks = result.EntityResult.Table;\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            if (code === \"\") {\r\n              // for (let i = 0; i < tanks.length; i++) {\r\n              //   if (tankCodeOptions.hasOwnProperty(tanks[i].TankList_BaseProduct)) {\r\n              //     tankCodeOptions[tanks[i].TankList_BaseProduct].push(\r\n              //       tanks[i].Common_Code\r\n              //     );\r\n              //   } else {\r\n              //     var tankCodeOption = [];\r\n              //     tankCodeOption.push(tanks[i].Common_Code);\r\n              //     tankCodeOptions[tanks[i].TankList_BaseProduct] = tankCodeOption;\r\n              //   }\r\n              // }\r\n              for (let i = 0; i < tanks.length; i++) {\r\n                tankCodeOptions.push(tanks[i].Common_Code);\r\n              }\r\n            } else {\r\n              tanks = tanks.filter((tank) => {\r\n                return tank.TerminalCode === code;\r\n              });\r\n              // for (let i = 0; i < tanks.length; i++) {\r\n              //   if (tanks[i].TerminalCode === code) {\r\n              //     if (tankCodeOptions.hasOwnProperty(tanks[i].TankList_BaseProduct)) {\r\n              //       tankCodeOptions[tanks[i].TankList_BaseProduct].push(\r\n              //         tanks[i].Common_Code\r\n              //       );\r\n              //     } else {\r\n              //       var tankCodeOption = [];\r\n              //       tankCodeOption.push(tanks[i].Common_Code);\r\n              //       tankCodeOptions[tanks[i].TankList_BaseProduct] = tankCodeOption;\r\n              //     }\r\n              //   }\r\n              // }\r\n              for (let i = 0; i < tanks.length; i++) {\r\n                tankCodeOptions.push(tanks[i].Common_Code);\r\n              }\r\n            }\r\n          } else {\r\n            for (let i = 0; i < tanks.length; i++) {\r\n              tankCodeOptions.push(tanks[i].Common_Code);\r\n            }\r\n            // for (let i = 0; i < tanks.length; i++) {\r\n            //   if (tankCodeOptions.hasOwnProperty(tanks[i].TankList_BaseProduct)) {\r\n            //     tankCodeOptions[tanks[i].TankList_BaseProduct].push(\r\n            //       tanks[i].Common_Code\r\n            //     );\r\n            //   } else {\r\n            //     var tankCodeOption1 = [];\r\n            //     tankCodeOption1.push(tanks[i].Common_Code);\r\n            //     tankCodeOptions[tanks[i].TankList_BaseProduct] = tankCodeOption1;\r\n            //   }\r\n            // }\r\n          }\r\n          tankCodeOptions = Utilities.transferListtoOptions(tankCodeOptions);\r\n          this.setState({ tankCodeOptions });\r\n        } else {\r\n          this.setState({ tankCodeOptions: [] });\r\n          console.log(\"Error in getTankListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ tankCodeOptions: [] });\r\n        console.log(\"Error while getting TankListForRole:\", error);\r\n      });\r\n  }\r\n\r\n  getCustomerDestinations(shareholder) {\r\n    axios(\r\n      RestApis.GetCustomerDestinations +\r\n      \"?ShareholderCode=\" +\r\n      shareholder +\r\n      \"&TransportationType=\" +\r\n      Constants.TransportationType.MARINE,\r\n\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (Array.isArray(result.EntityResult)) {\r\n            let shareholderCustomers = result.EntityResult;\r\n            if (shareholderCustomers.length > 0) {\r\n              this.setState({ shareholderCustomers: result.EntityResult });\r\n            } else {\r\n              console.log(\"no customers identified for shareholder\");\r\n            }\r\n          } else {\r\n            console.log(\"customerdestinations not identified for shareholder\");\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Customer List:\", error);\r\n      });\r\n  }\r\n\r\n  getMarineDispatchProductAllocationDetails(selectedItems) {\r\n    var item = lodash.cloneDeep(selectedItems);\r\n    axios(\r\n      RestApis.GetMarineProductAllocationDetails +\r\n      \"?ShipmentCode=\" +\r\n      item.Common_Code +\r\n      \"&TransportationType=MARINE\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult === null) {\r\n            this.setState({\r\n              productAllocationDetails: [],\r\n              // isViewProductAllocation: true,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              productAllocationDetails: result.EntityResult.Table,\r\n              // isViewProductAllocation: true,\r\n            });\r\n          }\r\n        } else {\r\n          this.setState({ productAllocationDetails: [] });\r\n          // this.setState({ data: [], isReadyToRender: true });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ productAllocationDetails: [] });\r\n        // this.setState({ data: [], isReadyToRender: true });\r\n        console.log(\r\n          \"Error while getting MarineDispatchProductAllocationDetails:\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getUoms();\r\n      //this.getVehicleCodes(\"\");\r\n      this.getFinishedProductCodes(\"\");\r\n      this.getCustomerDestinations(\"\");\r\n      this.getBaseProductList();\r\n      this.getAdditivesList();\r\n      // this.getTankCode();\r\n      // this.getMarineDispatch(this.props.selectedRow);\r\n      this.getLookUpData();\r\n      this.getMarineShipmentPlan(this.props.selectedRow);\r\n      this.getMarineCompartmentDetails(this.props.selectedRow);\r\n      this.ButtonIsAvailable(this.props.selectedRow, \"FORCE_COMPLETE\");\r\n      this.ButtonIsAvailable(this.props.selectedRow, \"ADJUST_PLAN\");\r\n      this.getCarrierList();\r\n      this.getCarrierShareholder();\r\n      this.getBond();\r\n      this.getMarineDispatchProductAllocationDetails(this.props.selectedRow);\r\n      let isNewShipment = false;\r\n      if (this.props.selectedRow.Common_Code === undefined)\r\n        isNewShipment = true;\r\n      this.getAttributes(isNewShipment);\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getBond() {\r\n    axios(\r\n      RestApis.GetBondLookUpSetting +\r\n      \"?ShareHolderCode=\" +\r\n      this.props.selectedShareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let isBondShow = false;\r\n          if (result.EntityResult === \"True\") {\r\n            isBondShow = true;\r\n          }\r\n          this.setState({ isBondShow });\r\n        } else {\r\n          console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"MarineDispatchDetailsComposite: Error occurred on getLookUpData\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getLookUpData() {\r\n    axios(\r\n      RestApis.GetLookUpData + \"?LookUpTypeCode=HSEInspection\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let isHSEInspectionEnable = false;\r\n          if (result.EntityResult.EnableMarine === \"True\") {\r\n            isHSEInspectionEnable = true;\r\n          }\r\n          this.setState({ isHSEInspectionEnable });\r\n        } else {\r\n          console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"MarineDispatchDetailsComposite: Error occurred on getLookUpData\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getAttributes(isNewShipment) {\r\n    try {\r\n      axios(\r\n        RestApis.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [marineDispatchAttributeEntity, marineDispatchCompAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult.marineDispatch === undefined) {\r\n            result.EntityResult.marineDispatch = [];\r\n          }\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.MARINEDISPATCH\r\n              ),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.MARINEDISPATCH\r\n                ),\r\n              compartmentAttributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.MARINEDISPATCHCOMPARTMENTDETAIL\r\n              ),\r\n            },\r\n            () => {\r\n              this.getMarineDispatch(\r\n                this.props.selectedRow.Common_Code,\r\n                isNewShipment\r\n              );\r\n            }\r\n          );\r\n        } else {\r\n          console.log(\"Failed to get Attributes\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Attributes:\", error);\r\n    }\r\n  }\r\n\r\n  getShareholders() {\r\n    return Utilities.transferListtoOptions(\r\n      this.props.userDetails.EntityResult.ShareholderList\r\n    );\r\n  }\r\n\r\n  getMarineDispatch(CommonCode, isNewTrailer) {\r\n    emptyMarineDispatch.QuantityUOM =\r\n      this.props.userDetails.EntityResult.PageAttibutes.DefaultQtyUOMForTransactionUI.MARINE;\r\n    emptyMarineDispatch.TerminalCodes =\r\n      this.props.terminalCodes.length === 1\r\n        ? [...this.props.terminalCodes]\r\n        : [];\r\n\r\n    var transportationType = this.getTransportationType();\r\n    emptyMarineDispatch.TransportationType = transportationType;\r\n\r\n    if (isNewTrailer) {\r\n      if (\r\n        emptyMarineDispatch.TerminalCodes !== undefined &&\r\n        emptyMarineDispatch.TerminalCodes !== null &&\r\n        emptyMarineDispatch.TerminalCodes.length !== 0\r\n      ) {\r\n        this.getTankListForRole(emptyMarineDispatch.TerminalCodes[0]);\r\n      } else {\r\n        this.getTankListForRole(\"\");\r\n      }\r\n      let terminalOptions = [];\r\n      this.handleResetAttributeValidationError();\r\n      this.setState(\r\n        {\r\n          marineDispatch: lodash.cloneDeep(emptyMarineDispatch),\r\n          modMarineDispatch: lodash.cloneDeep(emptyMarineDispatch),\r\n          modAssociations: [],\r\n          modTankAssociations: [],\r\n          isReadyToRender: true,\r\n          terminalOptions,\r\n          isNewDispatch: true,\r\n          selectedAttributeList: [],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnMarineShipmentByCompartment\r\n          ),\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode === false)\r\n            this.localNodeAttribute();\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineDispatchCode,\r\n        value: CommonCode,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: transportationType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.marineDispatchCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetMarineDispatch,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var modTankPlanAssociations = [];\r\n          for (\r\n            let i = 0;\r\n            i < result.EntityResult.DispatchCompartmentPlanList.length;\r\n            i++\r\n          ) {\r\n            var keyCode = [\r\n              {\r\n                key: KeyCodes.finishedProductCode,\r\n                value:\r\n                  result.EntityResult.DispatchCompartmentPlanList[i]\r\n                    .FinishedProductCode,\r\n              },\r\n            ];\r\n            var obj = {\r\n              ShareHolderCode:\r\n                result.EntityResult.DispatchCompartmentPlanList[i]\r\n                  .ShareholderCode,\r\n              keyDataCode: KeyCodes.finishedProductCode,\r\n              KeyCodes: keyCode,\r\n            };\r\n            axios(\r\n              RestApis.GetFinishedProduct,\r\n              Utilities.getAuthenticationObjectforPost(\r\n                obj,\r\n                this.props.tokenDetails.tokenInfo\r\n              )\r\n            ).then((response) => {\r\n              var result1 = response.data;\r\n              if (result1.IsSuccess === true) {\r\n                // if (result1.EntityResult.FinishedProductItems.length !== 0) {\r\n                var finishedProductItems =\r\n                  result1.EntityResult.FinishedProductItems;\r\n                var totalQuantity = 0;\r\n                for (\r\n                  let k = 0;\r\n                  k < result1.EntityResult.FinishedProductItems.length;\r\n                  k++\r\n                ) {\r\n                  totalQuantity +=\r\n                    result1.EntityResult.FinishedProductItems[k].Quantity;\r\n                }\r\n                for (\r\n                  let j = 0;\r\n                  j < result1.EntityResult.FinishedProductItems.length;\r\n                  j++\r\n                ) {\r\n                  var tankAssociation = lodash.cloneDeep(\r\n                    emptyDispatchCompartmentPlan\r\n                  );\r\n                  tankAssociation.DispatchCode =\r\n                    result.EntityResult.DispatchCode;\r\n                  tankAssociation.ShareholderCode =\r\n                    result.EntityResult.DispatchCompartmentPlanList[\r\n                      i\r\n                    ].ShareholderCode;\r\n                  tankAssociation.CompartmentSeqNoInVehicle =\r\n                    result.EntityResult.DispatchCompartmentPlanList[\r\n                      i\r\n                    ].CompartmentSeqNoInVehicle;\r\n                  tankAssociation.FinishedProductCode =\r\n                    result.EntityResult.DispatchCompartmentPlanList[\r\n                      i\r\n                    ].FinishedProductCode;\r\n                  tankAssociation.BaseProductCode =\r\n                    finishedProductItems[j].AdditiveCode === null\r\n                      ? finishedProductItems[j].BaseProductCode\r\n                      : finishedProductItems[j].AdditiveCode;\r\n                  tankAssociation.PlanQuantityUOM =\r\n                    result.EntityResult.DispatchCompartmentPlanList[\r\n                      i\r\n                    ].PlanQuantityUOM;\r\n                  tankAssociation.CompartmentCode =\r\n                    result.EntityResult.DispatchCompartmentPlanList[\r\n                      i\r\n                    ].CompartmentCode;\r\n                  tankAssociation.TankCode =\r\n                    result.EntityResult.DispatchCompartmentPlanList[i]\r\n                      .DispatchCompartmentTanks !== null &&\r\n                      result.EntityResult.DispatchCompartmentPlanList[i]\r\n                        .DispatchCompartmentTanks.length !== 0\r\n                      ? result.EntityResult.DispatchCompartmentPlanList[i]\r\n                        .DispatchCompartmentTanks[j].TankCode\r\n                      : \"\";\r\n                  tankAssociation.PlannedQuantity =\r\n                    result.EntityResult.DispatchCompartmentPlanList[i]\r\n                      .DispatchCompartmentTanks !== null &&\r\n                      result.EntityResult.DispatchCompartmentPlanList[i]\r\n                        .DispatchCompartmentTanks !== \"\" &&\r\n                      result.EntityResult.DispatchCompartmentPlanList[i]\r\n                        .DispatchCompartmentTanks.length !== 0\r\n                      ? result.EntityResult.DispatchCompartmentPlanList[\r\n                        i\r\n                      ].DispatchCompartmentTanks[\r\n                        j\r\n                      ].PlannedQuantity.toLocaleString()\r\n                      : (\r\n                        result.EntityResult.DispatchCompartmentPlanList[i]\r\n                          .PlannedQuantity *\r\n                        (finishedProductItems[j].Quantity / totalQuantity)\r\n                      ).toLocaleString();\r\n                  // result.EntityResult.DispatchCompartmentDetailPlanList[i]\r\n                  //   .Quantity !== \"\" &&\r\n                  // result.EntityResult.DispatchCompartmentDetailPlanList[i]\r\n                  //   .Quantity !== null\r\n                  //   ? (\r\n                  //       result.EntityResult.DispatchCompartmentDetailPlanList[\r\n                  //         i\r\n                  //       ].Quantity *\r\n                  //       (finishedProductItems[j].Quantity / totalQuantity)\r\n                  //     ).toLocaleString()\r\n                  //   : \"\";\r\n                  tankAssociation.SequenceNo = this.state.length + j + 1;\r\n                  var dispatchCompartmentTanks = [];\r\n                  var dispatchCompartmentTank = lodash.cloneDeep(\r\n                    emptyDispatchCompartmentTanks\r\n                  );\r\n                  dispatchCompartmentTank.CompartmentCode =\r\n                    result.EntityResult.DispatchCompartmentPlanList[\r\n                      i\r\n                    ].CompartmentCode;\r\n                  dispatchCompartmentTank.CompartmentSeqNoInVehicle =\r\n                    result.EntityResult.DispatchCompartmentPlanList[\r\n                      i\r\n                    ].CompartmentSeqNoInVehicle;\r\n                  dispatchCompartmentTank.PlannedQuantity =\r\n                    result.EntityResult.DispatchCompartmentPlanList[i]\r\n                      .DispatchCompartmentTanks !== null &&\r\n                      result.EntityResult.DispatchCompartmentPlanList[i]\r\n                        .DispatchCompartmentTanks !== \"\" &&\r\n                      result.EntityResult.DispatchCompartmentPlanList[i]\r\n                        .DispatchCompartmentTanks.length !== 0\r\n                      ? result.EntityResult.DispatchCompartmentPlanList[\r\n                        i\r\n                      ].DispatchCompartmentTanks[\r\n                        j\r\n                      ].PlannedQuantity.toLocaleString()\r\n                      : result.EntityResult.DispatchCompartmentDetailPlanList[i]\r\n                        .Quantity *\r\n                      (finishedProductItems[j].Quantity / totalQuantity);\r\n                  // dispatchCompartmentTank.PlannedQuantity =\r\n                  //   result.EntityResult.DispatchCompartmentDetailPlanList[i]\r\n                  //     .Quantity !== \"\" &&\r\n                  //   result.EntityResult.DispatchCompartmentDetailPlanList[i]\r\n                  //     .Quantity !== null\r\n                  //     ? result.EntityResult.DispatchCompartmentDetailPlanList[i]\r\n                  //         .Quantity *\r\n                  //       (finishedProductItems[j].Quantity / totalQuantity)\r\n                  //     : \"\";\r\n                  dispatchCompartmentTank.PlanQuantityUOM =\r\n                    result.EntityResult.DispatchCompartmentPlanList[\r\n                      i\r\n                    ].PlanQuantityUOM;\r\n                  dispatchCompartmentTank.DispatchCode =\r\n                    result.EntityResult.DispatchCompartmentPlanList[\r\n                      i\r\n                    ].DispatchCode;\r\n                  dispatchCompartmentTank.TankCode =\r\n                    result.EntityResult.DispatchCompartmentPlanList[i]\r\n                      .DispatchCompartmentTanks.length === 0\r\n                      ? \"\"\r\n                      : result.EntityResult.DispatchCompartmentPlanList[i]\r\n                        .DispatchCompartmentTanks[j].TankCode;\r\n                  dispatchCompartmentTanks.push(dispatchCompartmentTank);\r\n                  tankAssociation.DispatchCompartmentTanks =\r\n                    dispatchCompartmentTanks;\r\n                  modTankPlanAssociations.push(tankAssociation);\r\n                }\r\n                this.setState(\r\n                  {\r\n                    length: this.state.length + finishedProductItems.length,\r\n                  },\r\n                  () => {\r\n                    if (\r\n                      i ===\r\n                      result.EntityResult.DispatchCompartmentPlanList.length - 1\r\n                    ) {\r\n                      let marineDispatch = lodash.cloneDeep(\r\n                        result.EntityResult\r\n                      );\r\n                      marineDispatch.HSEInspectionStatus =\r\n                        Utilities.getKeyByValue(\r\n                          Constants.HSEInpectionStatus,\r\n                          marineDispatch.HSEInspectionStatus\r\n                        );\r\n                      this.setState(\r\n                        {\r\n                          isReadyToRender: true,\r\n                          marineDispatch: marineDispatch,\r\n                          isNewDispatch: false,\r\n                          modMarineDispatch: lodash.cloneDeep(marineDispatch),\r\n                          modAssociations: this.getAssociationsFromDispatch(\r\n                            result.EntityResult\r\n                          ),\r\n                          modTankAssociations: modTankPlanAssociations,\r\n                          modTankPlanAssociations,\r\n                          tempModTankAssociations: modTankPlanAssociations,\r\n                          saveEnabled:\r\n                            Utilities.isInFunction(\r\n                              this.props.userDetails.EntityResult.FunctionsList,\r\n                              functionGroups.modify,\r\n                              fnMarineShipmentByCompartment\r\n                            ) && this.props.updateEnableForConfigure, //&& result.EntityResult.DispatchStatus === \"READY\",\r\n                        },\r\n                        () => {\r\n                          if (\r\n                            marineDispatch.TerminalCodes !== undefined &&\r\n                            marineDispatch.TerminalCodes !== null &&\r\n                            marineDispatch.TerminalCodes.length !== 0\r\n                          ) {\r\n                            this.getTankListForRole(\r\n                              marineDispatch.TerminalCodes[0]\r\n                            );\r\n                          } else {\r\n                            this.getTankListForRole(\"\");\r\n                          }\r\n                          this.getVesselsByCarrier(\r\n                            this.props.selectedShareholder\r\n                          );\r\n                          this.getVessel(result.EntityResult.VesselCode, false);\r\n                          // this.getTerminalsForCarrier(\r\n                          //   result.EntityResult.CarrierCompanyCode\r\n                          // );\r\n                          this.getKPIList(result.EntityResult.DispatchCode)\r\n                          if (\r\n                            this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                          ) {\r\n                            this.terminalSelectionChange(\r\n                              result.EntityResult.TerminalCodes\r\n                            );\r\n                          } else {\r\n                            this.localNodeAttribute();\r\n                          }\r\n                        }\r\n                      );\r\n                    }\r\n                    if (i === this.state.modAssociations.length - 1) {\r\n                      this.setState({\r\n                        length: 0,\r\n                      });\r\n                    }\r\n                  }\r\n                );\r\n                // } else {\r\n                //   this.setState({\r\n                //     finishedProductItems: [],\r\n                //   });\r\n                // }\r\n              } else {\r\n                this.setState({\r\n                  finishedProductItems: [],\r\n                });\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          this.setState({\r\n            isNewDispatch: false,\r\n            marineDispatch: lodash.cloneDeep(emptyMarineDispatch),\r\n            modMarineDispatch: lodash.cloneDeep(emptyMarineDispatch),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetMarineDispatch:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting marineDispatch:\", error);\r\n        //throw error;\r\n      });\r\n  }\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(attributeMetaDataList),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on handleResetAttributeValidationError\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (Array.isArray(attributeMetaDataList) && attributeMetaDataList.length > 0) {\r\n        this.terminalSelectionChange([attributeMetaDataList[0].TerminalCode]);\r\n      } else {\r\n        var compAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.compartmentAttributeMetaDataList\r\n        );\r\n        if (Array.isArray(compAttributeMetaDataList) && compAttributeMetaDataList.length > 0)\r\n          this.formCompartmentAttributes([\r\n            compAttributeMetaDataList[0].TerminalCode,\r\n          ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals !== null && selectedTerminals !== undefined) {\r\n        let attributesTerminalsList = [];\r\n        var attributeMetaDataList = [];\r\n        var selectedAttributeList = [];\r\n\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        selectedAttributeList = lodash.cloneDeep(\r\n          this.state.selectedAttributeList\r\n        );\r\n\r\n        const attributeValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeValidationErrors\r\n        );\r\n        var modMarineDispatch = lodash.cloneDeep(this.state.modMarineDispatch);\r\n        if (selectedTerminals !== null) {\r\n          selectedTerminals.forEach((terminal) => {\r\n            var existitem = selectedAttributeList.find((selectedAttribute) => {\r\n              return selectedAttribute.TerminalCode === terminal;\r\n            });\r\n\r\n            if (existitem === undefined) {\r\n              attributeMetaDataList.forEach(function (attributeMetaData) {\r\n                if (attributeMetaData.TerminalCode === terminal) {\r\n                  var Attributevalue = modMarineDispatch.Attributes.find(\r\n                    (marineDispatchAttribute) => {\r\n                      return marineDispatchAttribute.TerminalCode === terminal;\r\n                    }\r\n                  );\r\n                  if (Attributevalue !== undefined) {\r\n                    attributeMetaData.attributeMetaDataList.forEach(function (\r\n                      attributeMetaData\r\n                    ) {\r\n                      var valueAttribute =\r\n                        Attributevalue.ListOfAttributeData.find((x) => {\r\n                          return x.AttributeCode === attributeMetaData.Code;\r\n                        });\r\n                      if (valueAttribute !== undefined)\r\n                        attributeMetaData.DefaultValue =\r\n                          valueAttribute.AttributeValue;\r\n                    });\r\n                  }\r\n                  attributesTerminalsList.push(attributeMetaData);\r\n                }\r\n              });\r\n            } else {\r\n              attributesTerminalsList.push(existitem);\r\n            }\r\n          });\r\n        }\r\n\r\n        selectedAttributeList = [];\r\n        selectedAttributeList = attributesTerminalsList;\r\n\r\n        attributeValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n              (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n        if (selectedTerminals !== \"\" && selectedAttributeList !== undefined) {\r\n          this.formCompartmentAttributes(selectedTerminals);\r\n        }\r\n\r\n        this.setState(\r\n          { selectedAttributeList, attributeValidationErrors },\r\n          () => { }\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  formCompartmentAttributes(selectedTerminals) {\r\n    try {\r\n      let attributes = lodash.cloneDeep(\r\n        this.state.compartmentAttributeMetaDataList\r\n      );\r\n      attributes = attributes.filter(function (attTerminal) {\r\n        return selectedTerminals.some(function (selTerminal) {\r\n          return attTerminal.TerminalCode === selTerminal;\r\n        });\r\n      });\r\n      let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n      let compAttributes = [];\r\n      attributes.forEach((att) => {\r\n        att.attributeMetaDataList.forEach((attribute) => {\r\n          compAttributes.push({\r\n            AttributeCode: attribute.Code,\r\n            AttributeName: attribute.DisplayName,\r\n            AttributeValue: attribute.DefaultValue,\r\n            TerminalCode: attribute.TerminalCode,\r\n            IsMandatory: attribute.IsMandatory,\r\n            DataType: attribute.DataType,\r\n            IsReadonly: attribute.IsReadonly,\r\n            compSequenceNo: \"\",\r\n          });\r\n        });\r\n      });\r\n\r\n      let attributesforNewComp = lodash.cloneDeep(compAttributes);\r\n      modAssociations.forEach((comp) => {\r\n        if (\r\n          comp.CompartmentCode === null &&\r\n          (comp.AttributesforUI === null || comp.AttributesforUI === undefined)\r\n        ) {\r\n          comp.AttributesforUI = [];\r\n          attributesforNewComp.forEach((assignedAttributes) => {\r\n            assignedAttributes.compSequenceNo = comp.CompartmentSeqNoInVehicle;\r\n            comp.AttributesforUI.push(assignedAttributes);\r\n          });\r\n        } else {\r\n          if (\r\n            comp.AttributesforUI !== null &&\r\n            comp.AttributesforUI !== undefined\r\n          ) {\r\n            comp.AttributesforUI = comp.AttributesforUI.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n            compAttributes = compAttributes.filter(function (attTerminal) {\r\n              return !comp.AttributesforUI.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal.TerminalCode;\r\n              });\r\n            });\r\n          } else {\r\n            comp.AttributesforUI = [];\r\n          }\r\n          let tempCompAttributes = lodash.cloneDeep(compAttributes);\r\n          if (\r\n            Array.isArray(comp.Attributes) &&\r\n            comp.Attributes !== null &&\r\n            comp.Attributes !== undefined &&\r\n            comp.Attributes.length > 0\r\n          ) {\r\n            let selectedTerminalAttributes = comp.Attributes.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n            selectedTerminalAttributes.forEach((att) => {\r\n              att.ListOfAttributeData.forEach((attData) => {\r\n                let tempAttIndex = tempCompAttributes.findIndex(\r\n                  (item) =>\r\n                    item.TerminalCode === att.TerminalCode &&\r\n                    item.AttributeCode === attData.AttributeCode\r\n                );\r\n                if (tempAttIndex >= 0)\r\n                  tempCompAttributes[tempAttIndex].AttributeValue =\r\n                    attData.AttributeValue;\r\n              });\r\n            });\r\n            tempCompAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo =\r\n                comp.CompartmentSeqNoInVehicle;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          } else {\r\n            let temp = lodash.cloneDeep(compAttributes);\r\n            temp.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo =\r\n                comp.CompartmentSeqNoInVehicle;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n            // let result = temp.map((assignedAttributes) => {\r\n            //   assignedAttributes.compSequenceNo =\r\n            //     comp.CompartmentSeqNoInVehicle;\r\n            //   return assignedAttributes;\r\n            // });\r\n            // comp.AttributesforUI = result;\r\n          }\r\n        }\r\n        this.toggleExpand(comp, true, true);\r\n        comp.AttributesforUI = Utilities.addSeqNumberToListObject(\r\n          comp.AttributesforUI\r\n        );\r\n      });\r\n      this.setState({ modAssociations });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error in forming Compartment Attributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getTerminalsForCarrier(carrier) {\r\n    if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n      const modMarineDispatch = lodash.cloneDeep(this.state.modMarineDispatch);\r\n      let terminalCodes = [...this.state.terminalCodes];\r\n      modMarineDispatch.CarrierCode = carrier;\r\n      modMarineDispatch.VesselCode = \"\";\r\n      modMarineDispatch.modAssociations = [];\r\n\r\n      try {\r\n        if (carrier === undefined) {\r\n          terminalCodes = [];\r\n          modMarineDispatch.TerminalCodes = [];\r\n          this.setState(\r\n            { terminalCodes, modMarineDispatch }\r\n            // , () =>\r\n            // this.formCompartmentAttributes([])\r\n          );\r\n          return;\r\n        }\r\n        let keyCode = [\r\n          {\r\n            key: KeyCodes.carrierCode,\r\n            value: carrier,\r\n          },\r\n          {\r\n            key: KeyCodes.transportationType,\r\n            value: Constants.TransportationType.MARINE,\r\n          },\r\n        ];\r\n        let obj = {\r\n          ShareHolderCode: this.props.selectedShareholder,\r\n          keyDataCode: KeyCodes.carrierCode,\r\n          KeyCodes: keyCode,\r\n        };\r\n        axios(\r\n          RestApis.GetCarrier,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            let result = response.data;\r\n            if (\r\n              result.IsSuccess === true &&\r\n              result.EntityResult !== null &&\r\n              result.EntityResult.TerminalCodes !== null\r\n            ) {\r\n              terminalCodes = [...result.EntityResult.TerminalCodes];\r\n              this.setState({ terminalCodes });\r\n            } else {\r\n              terminalCodes = [];\r\n              this.setState({ terminalCodes });\r\n            }\r\n            let modMarineDispatch = { ...this.state.modMarineDispatch };\r\n            if (\r\n              modMarineDispatch.ReceiptCode === undefined ||\r\n              modMarineDispatch.ReceiptCode === \"\" ||\r\n              modMarineDispatch.ReceiptCode === null\r\n            ) {\r\n              if (terminalCodes.length === 1) {\r\n                modMarineDispatch.TerminalCodes = [...terminalCodes];\r\n                //this.terminalSelectionChange(modMarineReceipt.TerminalCodes);\r\n              } else {\r\n                modMarineDispatch.TerminalCodes = [];\r\n                //this.terminalSelectionChange([]);\r\n              }\r\n            }\r\n            if (Array.isArray(modMarineDispatch.TerminalCodes)) {\r\n              modMarineDispatch.TerminalCodes = terminalCodes.filter((x) =>\r\n                modMarineDispatch.TerminalCodes.includes(x)\r\n              );\r\n            }\r\n            this.setState({ modMarineDispatch }, () =>\r\n              //this.formCompartmentAttributes());\r\n              this.terminalSelectionChange(modMarineDispatch.TerminalCodes)\r\n            );\r\n          })\r\n          .catch((error) => {\r\n            terminalCodes = [];\r\n            modMarineDispatch.TerminalCodes = [];\r\n            this.setState({ terminalCodes, modMarineDispatch }, () =>\r\n              this.formCompartmentAttributes([])\r\n            );\r\n            console.log(\"Error while getting Carrier:\", error, carrier);\r\n            //throw error;\r\n          });\r\n      } catch (error) {\r\n        terminalCodes = [];\r\n        modMarineDispatch.TerminalCodes = [];\r\n        this.setState({ terminalCodes, modMarineDispatch }, () =>\r\n          this.formCompartmentAttributes([])\r\n        );\r\n        console.log(\r\n          \"TrailerDetailsComposite:Error occured on handleCarrierChange\",\r\n          error\r\n        );\r\n      }\r\n    } else {\r\n      this.formCompartmentAttributes([]);\r\n    }\r\n  }\r\n\r\n  fillAttributeDetails(modMarineDispatch) {\r\n    try {\r\n      let attributeList = lodash.cloneDeep(this.state.selectedAttributeList);\r\n      modMarineDispatch.Attributes = [];\r\n      attributeList.forEach((comp) => {\r\n        let attribute = {\r\n          ListOfAttributeData: [],\r\n        };\r\n        attribute.TerminalCode = comp.TerminalCode;\r\n        comp.attributeMetaDataList.forEach((det) => {\r\n          attribute.ListOfAttributeData.push({\r\n            AttributeCode: det.Code,\r\n            AttributeValue: det.DefaultValue,\r\n          });\r\n        });\r\n        modMarineDispatch.Attributes.push(attribute);\r\n      });\r\n\r\n      // For Compartment Attributes\r\n      modMarineDispatch.DispatchCompartmentDetailPlanList.forEach((comp) => {\r\n        let selectedTerminals = [];\r\n        if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n          selectedTerminals = lodash.cloneDeep(modMarineDispatch.TerminalCodes);\r\n        else {\r\n          var compAttributeMetaDataList = lodash.cloneDeep(\r\n            this.state.compartmentAttributeMetaDataList\r\n          );\r\n          if (compAttributeMetaDataList.length > 0)\r\n            selectedTerminals = [compAttributeMetaDataList[0].TerminalCode];\r\n        }\r\n        let terminalAttributes = [];\r\n        comp.Attributes = [];\r\n        if (selectedTerminals !== undefined && selectedTerminals !== null) {\r\n          selectedTerminals.forEach((terminal) => {\r\n            if (\r\n              comp.AttributesforUI !== null &&\r\n              comp.AttributesforUI !== undefined\r\n            ) {\r\n              terminalAttributes = comp.AttributesforUI.filter(function (\r\n                attTerminal\r\n              ) {\r\n                return attTerminal.TerminalCode === terminal;\r\n              });\r\n            }\r\n            let attribute = {\r\n              ListOfAttributeData: [],\r\n            };\r\n            attribute.TerminalCode = terminal;\r\n            terminalAttributes.forEach((termAtt) => {\r\n              if (termAtt.AttributeValue !== \"\" || termAtt.IsMandatory === true)\r\n                attribute.ListOfAttributeData.push({\r\n                  AttributeCode: termAtt.AttributeCode,\r\n                  AttributeValue: termAtt.AttributeValue,\r\n                });\r\n            });\r\n            if (\r\n              attribute.ListOfAttributeData !== null &&\r\n              attribute.ListOfAttributeData !== undefined &&\r\n              attribute.ListOfAttributeData.length > 0\r\n            )\r\n              comp.Attributes.push(attribute);\r\n          });\r\n        }\r\n      });\r\n      this.setState({ modMarineDispatch });\r\n      return modMarineDispatch;\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  toggleExpand = (data, open, isTerminalAdded = false) => {\r\n    let expandedRows = this.state.expandedRows;\r\n    let expandedRowIndex = expandedRows.findIndex(\r\n      (item) =>\r\n        item.CompartmentSeqNoInVehicle === data.CompartmentSeqNoInVehicle\r\n    );\r\n    if (open) {\r\n      if (isTerminalAdded && expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n        expandedRows.push(data);\r\n      } else if (expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n      }\r\n    } else {\r\n      if (expandedRowIndex >= 0) {\r\n        expandedRows = expandedRows.filter(\r\n          (x) =>\r\n            x.Code !== data.Code &&\r\n            x.CompartmentSeqNoInVehicle !== data.CompartmentSeqNoInVehicle\r\n        );\r\n      } else expandedRows.push(data);\r\n    }\r\n    this.setState({ expandedRows });\r\n  };\r\n\r\n  handleAttributeCellDataEdit = (attribute, value) => {\r\n    try {\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors });\r\n\r\n      if (\r\n        attribute.DataType === Constants.AttributeTypes.INT ||\r\n        attribute.DataType === Constants.AttributeTypes.LONG ||\r\n        attribute.DataType === Constants.AttributeTypes.FLOAT ||\r\n        attribute.DataType === Constants.AttributeTypes.DOUBLE\r\n      ) {\r\n        value = Utilities.convertStringtoDecimal(value);\r\n      }\r\n      attribute.DefaultValue = value;\r\n      this.setState({\r\n        attribute: attribute,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on handleAttributeCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCompAttributeCellDataEdit = (compAttribute, value) => {\r\n    let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n    if (\r\n      compAttribute.rowData.DataType === Constants.AttributeTypes.INT ||\r\n      compAttribute.rowData.DataType === Constants.AttributeTypes.LONG ||\r\n      compAttribute.rowData.DataType === Constants.AttributeTypes.FLOAT ||\r\n      compAttribute.rowData.DataType === Constants.AttributeTypes.DOUBLE\r\n    ) {\r\n      value = Utilities.convertStringtoDecimal(value);\r\n    }\r\n    let compIndex = modAssociations.findIndex(\r\n      (item) =>\r\n        item.CompartmentSeqNoInVehicle === compAttribute.rowData.compSequenceNo\r\n    );\r\n    if (compIndex >= 0) {\r\n      if (compAttribute.rowData.DataType === \"Bool\") {\r\n        if (compAttribute.rowData.AttributeValue === \"true\") {\r\n          modAssociations[compIndex].AttributesforUI[\r\n            //compAttribute.rowIndex\r\n            compAttribute.rowData.SeqNumber - 1\r\n          ].AttributeValue = \"false\";\r\n        } else {\r\n          modAssociations[compIndex].AttributesforUI[\r\n            //compAttribute.rowIndex\r\n            compAttribute.rowData.SeqNumber - 1\r\n          ].AttributeValue = \"true\";\r\n        }\r\n      } else {\r\n        modAssociations[compIndex].AttributesforUI[\r\n          //compAttribute.rowIndex\r\n          compAttribute.rowData.SeqNumber - 1\r\n        ].AttributeValue = value;\r\n      }\r\n    }\r\n    this.setState({ modAssociations });\r\n    if (compIndex >= 0)\r\n      this.toggleExpand(modAssociations[compIndex], true, true);\r\n  };\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modMarineDispatch = lodash.cloneDeep(this.state.modMarineDispatch);\r\n      modMarineDispatch.Active = value;\r\n      if (modMarineDispatch.Active !== this.state.marineDispatch.Active)\r\n        modMarineDispatch.Remarks = \"\";\r\n      this.setState({ modMarineDispatch });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  getTransportationType() {\r\n    var transportationType = Constants.TransportationType.MARINE;\r\n    const { genericProps } = this.props;\r\n    if (\r\n      genericProps !== undefined &&\r\n      genericProps.transportationType !== undefined\r\n    ) {\r\n      transportationType = genericProps.transportationType;\r\n    }\r\n    return transportationType;\r\n  }\r\n\r\n  validateSave(modMarineDispatch) {\r\n    var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    Object.keys(marineDispatchValidationDef).forEach(function (key) {\r\n      if (modMarineDispatch[key] !== undefined) {\r\n        validationErrors[key] = Utilities.validateField(\r\n          marineDispatchValidationDef[key],\r\n          modMarineDispatch[key]\r\n        );\r\n      }\r\n    });\r\n    if (modMarineDispatch.Active !== this.state.marineDispatch.Active) {\r\n      if (\r\n        modMarineDispatch.Remarks === null ||\r\n        modMarineDispatch.Remarks === \"\"\r\n      ) {\r\n        validationErrors[\"Remarks\"] =\r\n          \"Marine_ShipmentCompDetail_RemarksRequired\";\r\n      }\r\n    }\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    if (\r\n      Array.isArray(modMarineDispatch.DispatchCompartmentDetailPlanList) &&\r\n      modMarineDispatch.DispatchCompartmentDetailPlanList.length > 0\r\n    ) {\r\n      modMarineDispatch.DispatchCompartmentDetailPlanList.forEach((compart) => {\r\n        marineDispatchCompartDef.forEach((col) => {\r\n          let err = \"\";\r\n          if (col.validator !== undefined) {\r\n            err = Utilities.validateField(col.validator, compart[col.field]);\r\n          }\r\n          if (err !== \"\") {\r\n            notification.messageResultDetails.push({\r\n              keyFields: [\r\n                \"Marine_ShipmentCompDetail_ShipmentNumber\",\r\n                col.displayName,\r\n              ],\r\n              keyValues: [modMarineDispatch.DispatchCode, compart[col.field]],\r\n              isSuccess: false,\r\n              errorMessage: err,\r\n            });\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [],\r\n        keyValues: [],\r\n        isSuccess: false,\r\n        errorMessage: \"ERRMSG_MARINESHIPMENT_COMP_DETAIL_PLAN_LIST_EMPTY\",\r\n      });\r\n    }\r\n    let uniqueRecords = [\r\n      ...new Set(\r\n        modMarineDispatch.DispatchCompartmentDetailPlanList.map((a) =>\r\n          a.CompartmentSeqNoInVehicle.toString()\r\n        )\r\n      ),\r\n    ];\r\n    if (\r\n      uniqueRecords.length !==\r\n      modMarineDispatch.DispatchCompartmentDetailPlanList.length\r\n    ) {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [],\r\n        keyValues: [],\r\n        isSuccess: false,\r\n        errorMessage: \"ERRMSG_RAILDISPATCH_ITEMPLAN_DUPLICATE\",\r\n      });\r\n      this.props.onSaved(this.state.modMarineDispatch, \"update\", notification);\r\n      return false;\r\n    }\r\n    // this.setState({ validationErrors });\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n    let attributeList = lodash.cloneDeep(this.state.selectedAttributeList);\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n    var returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    else return returnValue;\r\n\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modMarineDispatch, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  handleSave = () => {\r\n    let { saveEnabled } = this.state;\r\n    if (saveEnabled) {\r\n      try {\r\n        var modTankAssociations = lodash.cloneDeep(\r\n          this.state.modTankAssociations\r\n        );\r\n        var tempTankAssociations = modTankAssociations.filter(\r\n          (modTankAssociation) => {\r\n            return modTankAssociation.DispatchCompartmentTanks.length !== 0;\r\n          }\r\n        );\r\n        tempTankAssociations = tempTankAssociations.filter(\r\n          (tankAssociation) => {\r\n            return tankAssociation.DispatchCompartmentTanks[0].TankCode !== \"\";\r\n          }\r\n        );\r\n        if (tempTankAssociations.length === 0) {\r\n          var tankAssociations = [];\r\n          this.saveMarineDispatch(tankAssociations);\r\n        } else {\r\n          this.saveMarineDispatch(modTankAssociations);\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"MarineDispatchDetailsComposite:Error occured on handleSave\",\r\n          error\r\n        );\r\n      }\r\n    } else {\r\n      this.compartmentDetailsSave();\r\n    }\r\n  };\r\n\r\n\r\n  addUpdateMarineDispatch = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempMarineDispatch = lodash.cloneDeep(this.state.tempMarineDispatch);\r\n\r\n      this.state.marineDispatch.DispatchCode === \"\"\r\n      ? this.createMarineDispatch(tempMarineDispatch)\r\n      : this.updateMarineDispatch(tempMarineDispatch);\r\n    } catch (error) {\r\n      console.log(\"MarineShipComposite : Error in addUpdateMarineDispatch\");\r\n    }\r\n  };\r\n\r\n  saveMarineDispatch(tankAssociations) {\r\n    let modMarineDispatch = lodash.cloneDeep(this.state.modMarineDispatch);\r\n    modMarineDispatch.DispatchCompartmentDetailPlanList =\r\n      this.getCompartmentFromAssociations(this.state.modAssociations);\r\n  //  this.setState({ saveEnabled: false });\r\n    let modMarineDispatchs = this.fillAttributeDetails(modMarineDispatch);\r\n    if (this.validateSave(modMarineDispatchs)) {\r\n      modMarineDispatch.DispatchCompartmentDetailPlanList =\r\n        modMarineDispatch.DispatchCompartmentDetailPlanList.map(\r\n          (detailPlan) => {\r\n            detailPlan.Quantity = Utilities.convertStringtoDecimal(\r\n              detailPlan.Quantity\r\n            );\r\n            return detailPlan;\r\n          }\r\n        );\r\n      modMarineDispatch.DispatchCompartmentPlanList =\r\n        this.getTankPlanFromTankAssociations(tankAssociations);\r\n     \r\n        let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempMarineDispatch = lodash.cloneDeep(modMarineDispatch);\r\n      this.setState({ showAuthenticationLayout, tempMarineDispatch }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.addUpdateMarineDispatch();\r\n        }\r\n    });\r\n\r\n\r\n    } else {\r\n      this.setState({ saveEnabled: true });\r\n    }\r\n  }\r\n\r\n  createMarineDispatch(modMarineDispatch) {\r\n    this.handleAuthenticationClose();\r\n    modMarineDispatch.DispatchCompartmentDetailPlanList.forEach((item) => {\r\n      item.QuantityUOM = modMarineDispatch.QuantityUOM;\r\n    });\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineDispatchCode,\r\n        value: modMarineDispatch.DispatchCode,\r\n      },\r\n    ];\r\n\r\n    var obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.marineDispatchCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modMarineDispatch,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [modMarineDispatch.DispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestApis.CreateMarineDispatch,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.props.handlePageAdd(modMarineDispatch);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: true,\r\n          });\r\n          console.log(\"Error in CreateMarineDispatch:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modMarineDispatch, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: true,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modMarineDispatch, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateMarineDispatch(modMarineDispatch) {\r\n    this.handleAuthenticationClose();\r\n    modMarineDispatch.DispatchCompartmentDetailPlanList.forEach((item) => {\r\n      item.QuantityUOM = modMarineDispatch.QuantityUOM;\r\n    });\r\n\r\n    if (Array.isArray(modMarineDispatch.DispatchItemPlanList)) {\r\n      modMarineDispatch.DispatchItemPlanList.forEach(item => {\r\n        item.QuantityUOM = modMarineDispatch.QuantityUOM;\r\n      });\r\n    }\r\n\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineDispatchCode,\r\n        value: modMarineDispatch.DispatchCode,\r\n      },\r\n    ];\r\n\r\n    var obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.marineDispatchCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modMarineDispatch,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [modMarineDispatch.DispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestApis.UpdateMarineDispatch,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.props.handlePageAdd(modMarineDispatch);\r\n        } else {\r\n          this.setState({\r\n            saveEnabled: true,\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in UpdateMarineDispatch:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modMarineDispatch, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modMarineDispatch, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: true,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      let vehicleDetails = lodash.cloneDeep(this.state.vehicleDetails);\r\n      let modAssociations = [];\r\n      let modTankAssociations = [];\r\n      let modTankPlanAssociations = [];\r\n      let compSeqOptions = [];\r\n      if (this.state.marineDispatch.DispatchCode === \"\") {\r\n        modAssociations = [];\r\n        compSeqOptions = [];\r\n      } else {\r\n        modAssociations = this.getAssociationsFromDispatch(\r\n          this.state.marineDispatch\r\n        );\r\n        modTankAssociations = lodash.cloneDeep(\r\n          this.state.tempModTankAssociations\r\n        );\r\n        modTankPlanAssociations = lodash.cloneDeep(\r\n          this.state.tempModTankAssociations\r\n        );\r\n        vehicleDetails.vehicleCompartments.forEach((vehicleCompartment) =>\r\n          compSeqOptions.push({\r\n            text: vehicleCompartment.vehCompSeq.toString(),\r\n            value: vehicleCompartment.vehCompSeq.toString(),\r\n          })\r\n        );\r\n      }\r\n      this.setState(\r\n        {\r\n          modMarineDispatch: lodash.cloneDeep(this.state.marineDispatch),\r\n          validationErrors: [],\r\n          modVehicleDetails: lodash.cloneDeep(this.state.vehicleDetails),\r\n          modAssociations,\r\n          modTankAssociations,\r\n          modTankPlanAssociations,\r\n          selectedAttributeList: [],\r\n          selectedAssociations: [],\r\n          selectedTankAssociations: [],\r\n          vesselSearchOptions: [],\r\n          terminalCodes: this.props.terminalCodes,\r\n          compSeqOptions,\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(modAssociations.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      var modMarineDispatch = lodash.cloneDeep(this.state.modMarineDispatch);\r\n      validationErrors[propertyName] = error;\r\n      modMarineDispatch[propertyName] = value;\r\n      this.setState({ validationErrors, modMarineDispatch });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchDetailsComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      var terminalCodes = [...this.props.terminalCodes];\r\n      var modMarineDispatch = lodash.cloneDeep(this.state.modMarineDispatch);\r\n      if (checked) modMarineDispatch.TerminalCodes = [...terminalCodes];\r\n      else modMarineDispatch.TerminalCodes = [];\r\n      this.setState({ modMarineDispatch });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchDetailsComposite:Error occured on handleAllTerminalsChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getAssociationsFromDispatch(dispatch) {\r\n    dispatch.DispatchCompartmentDetailPlanList.sort((a, b) => {\r\n      if (a.CompartmentSeqNoInVehicle > b.CompartmentSeqNoInVehicle) {\r\n        return 1;\r\n      } else if (a.CompartmentSeqNoInVehicle < b.CompartmentSeqNoInVehicle) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    let associations = [];\r\n    try {\r\n      if (Array.isArray(dispatch.DispatchCompartmentDetailPlanList)) {\r\n        dispatch.DispatchCompartmentDetailPlanList.forEach(\r\n          (dispatchCompartment) =>\r\n            associations.push({\r\n              AssociatedContractItems:\r\n                dispatchCompartment.AssociatedContractItems,\r\n              AssociatedOrderItems: dispatchCompartment.AssociatedOrderItems,\r\n              Attributes: dispatchCompartment.Attributes,\r\n              CarrierCompanyCode: dispatchCompartment.CarrierCompanyCode,\r\n              CompartmentCode: dispatchCompartment.CompartmentCode,\r\n              CompartmentSeqNoInVehicle:\r\n                dispatchCompartment.CompartmentSeqNoInVehicle,\r\n              CustomerCode: dispatchCompartment.CustomerCode,\r\n              DestinationCode: dispatchCompartment.DestinationCode,\r\n              DispatchCode: dispatchCompartment.DispatchCode,\r\n              FinishedProductCode: dispatchCompartment.FinishedProductCode,\r\n              Quantity:\r\n                dispatchCompartment.Quantity !== null &&\r\n                  dispatchCompartment.Quantity !== \"\"\r\n                  ? dispatchCompartment.Quantity.toLocaleString()\r\n                  : null,\r\n              QuantityUOM: dispatchCompartment.QuantityUOM,\r\n              SequenceNo: dispatchCompartment.CompartmentSeqNoInVehicle,\r\n              ShareholderCode: dispatchCompartment.ShareholderCode,\r\n              TrailerCode: dispatchCompartment.TrailerCode,\r\n            })\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error in getAssociationsFromDispatch\", error);\r\n    }\r\n\r\n    return associations;\r\n  }\r\n\r\n  onCarrierCompanyChange = (data) => {\r\n    try {\r\n      const modMarineDispatch = lodash.cloneDeep(this.state.modMarineDispatch);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modMarineDispatch.CarrierCode = data;\r\n      modMarineDispatch.VesselCode = \"\";\r\n      this.setState(\r\n        {\r\n          modMarineDispatch,\r\n          modAssociations: [],\r\n          modTankAssociations: [],\r\n          modTankPlanAssociations: [],\r\n        },\r\n        () => this.getVesselsByCarrier(this.props.selectedShareholder)\r\n      );\r\n      if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n        this.getTerminalsForCarrier(data);\r\n      validationErrors.CarrierCode = \"\";\r\n      this.setState({ validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ViewMarineReceiptDetailsComposite:Error occured on onCarrierCompanyChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getCompartmentFromAssociations(modAssociations) {\r\n    let compartment = [];\r\n    if (Array.isArray(modAssociations)) {\r\n      modAssociations.forEach((modAssociation) => {\r\n        if (\r\n          !(\r\n            modAssociation.FinishedProductCode === null ||\r\n            modAssociation.FinishedProductCode === \"\"\r\n          ) ||\r\n          !(\r\n            modAssociation.CustomerCode === null ||\r\n            modAssociation.CustomerCode === \"\"\r\n          ) ||\r\n          !(\r\n            modAssociation.DestinationCode === null ||\r\n            modAssociation.DestinationCode === \"\"\r\n          )\r\n        ) {\r\n          compartment.push({\r\n            AssociatedContractItems: modAssociation.AssociatedContractItems,\r\n            AssociatedOrderItems: modAssociation.AssociatedOrderItems,\r\n            Attributes: modAssociation.Attributes,\r\n            AttributesforUI: modAssociation.AttributesforUI,\r\n            CarrierCompanyCode: modAssociation.CarrierCompanyCode,\r\n            CompartmentCode: modAssociation.CompartmentCode,\r\n            CompartmentSeqNoInVehicle: modAssociation.CompartmentSeqNoInVehicle,\r\n            CustomerCode: modAssociation.CustomerCode,\r\n            DestinationCode: modAssociation.DestinationCode,\r\n            DispatchCode: this.state.modMarineDispatch.DispatchCode,\r\n            FinishedProductCode: modAssociation.FinishedProductCode,\r\n            Quantity: modAssociation.Quantity,\r\n            QuantityUOM: modAssociation.QuantityUOM,\r\n            SequenceNo: modAssociation.SequenceNo,\r\n            ShareholderCode: modAssociation.ShareholderCode,\r\n            TrailerCode: modAssociation.TrailerCode,\r\n          });\r\n        }\r\n      });\r\n    }\r\n    return compartment;\r\n  }\r\n\r\n  getTankPlanFromTankAssociations(modTankAssociations) {\r\n    if (Array.isArray(modTankAssociations)) {\r\n      modTankAssociations.forEach((modTankAssociation) => {\r\n        if (\r\n          modTankAssociation.PlannedQuantity !== null &&\r\n          modTankAssociation.PlannedQuantity !== \"\"\r\n        ) {\r\n          modTankAssociation.PlannedQuantity = Utilities.convertStringtoDecimal(\r\n            modTankAssociation.PlannedQuantity\r\n          );\r\n        }\r\n        if (\r\n          modTankAssociation.DispatchCompartmentTanks !== null &&\r\n          modTankAssociation.DispatchCompartmentTanks !== \"\" &&\r\n          modTankAssociation.DispatchCompartmentTanks.length !== 0\r\n        ) {\r\n          modTankAssociation.DispatchCompartmentTanks[0].PlannedQuantity =\r\n            Utilities.convertStringtoDecimal(\r\n              modTankAssociation.DispatchCompartmentTanks[0].PlannedQuantity\r\n            );\r\n        }\r\n      });\r\n    }\r\n    return modTankAssociations;\r\n  }\r\n\r\n  handleVesselSearchChange = (vesselCode) => {\r\n    try {\r\n      let vesselSearchOptions = this.state.vessels.filter((item) =>\r\n        item.value.toLowerCase().includes(vesselCode.toLowerCase())\r\n      );\r\n\r\n      if (vesselSearchOptions.length > Constants.filteredOptionsCount) {\r\n        vesselSearchOptions = vesselSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        vesselSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchDetailsComposite:Error occured on handleVesselSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getVesselSearchOptions() {\r\n    let vesselSearchOptions = lodash.cloneDeep(this.state.vesselSearchOptions);\r\n    let modVesselCode = this.state.modMarineDispatch.VesselCode;\r\n    if (\r\n      modVesselCode !== null &&\r\n      modVesselCode !== \"\" &&\r\n      modVesselCode !== undefined\r\n    ) {\r\n      let selectedVesselCode = vesselSearchOptions.find(\r\n        (element) => element.value.toLowerCase() === modVesselCode.toLowerCase()\r\n      );\r\n      if (selectedVesselCode === undefined) {\r\n        vesselSearchOptions.push({\r\n          text: modVesselCode,\r\n          value: modVesselCode,\r\n        });\r\n      }\r\n    }\r\n    return vesselSearchOptions;\r\n  }\r\n\r\n  handleInputDataEdit = (newVal, rowData) => {\r\n    var modMarineCompartmentDetails = lodash.cloneDeep(\r\n      this.state.modMarineCompartmentDetails\r\n    );\r\n    modMarineCompartmentDetails.forEach((modMarineCompartmentDetail) => {\r\n      if (\r\n        modMarineCompartmentDetail.CompartmentSeqNoInVehicle ===\r\n        rowData.CompartmentSeqNoInVehicle\r\n      ) {\r\n        modMarineCompartmentDetail.AdjustmentToPlannedQuantity = newVal;\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      modMarineCompartmentDetails: modMarineCompartmentDetails,\r\n    });\r\n  };\r\n\r\n  compartmentDetailsSave = () => {\r\n    var saveCompartmentDetailsKeys = [];\r\n\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewMarineShipmentList_CompartmentDetailsStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [this.state.modMarineDispatch.DispatchCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    for (var i = 0; i < this.state.modMarineCompartmentDetails.length; i++) {\r\n      var MarineDispatchCode = this.state.modMarineDispatch.DispatchCode;\r\n      var adjustPlan =\r\n        this.state.modMarineCompartmentDetails[i][\r\n        \"AdjustmentToPlannedQuantity\"\r\n        ];\r\n      if (adjustPlan !== null) {\r\n        adjustPlan = Utilities.convertStringtoDecimal(adjustPlan);\r\n      }\r\n      var KeyData = {\r\n        keyDataCode:\r\n          this.state.modMarineCompartmentDetails[i][\r\n          \"CompartmentSeqNoInVehicle\"\r\n          ],\r\n        KeyCodes: [\r\n          {\r\n            Key: KeyCodes.marineDispatchCode,\r\n            Value: MarineDispatchCode,\r\n          },\r\n          {\r\n            key: KeyCodes.compartmentSeqNoInVehicle,\r\n            value:\r\n              this.state.modMarineCompartmentDetails[i][\r\n              \"CompartmentSeqNoInVehicle\"\r\n              ],\r\n          },\r\n          {\r\n            key: KeyCodes.adjustedPlanQuantity,\r\n            value: adjustPlan,\r\n          },\r\n          {\r\n            key: KeyCodes.forceComplete,\r\n            value: this.state.modMarineCompartmentDetails[i][\"forceComplete\"],\r\n          },\r\n        ],\r\n      };\r\n      saveCompartmentDetailsKeys.push(KeyData);\r\n    }\r\n\r\n    axios(\r\n      RestApis.MarineDispatchCompartmentDetailsSave,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        saveCompartmentDetailsKeys,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess) {\r\n          notification.messageType = \"success\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          this.getMarineCompartmentDetails(this.props.selectedRow);\r\n          this.props.onSaved(\r\n            this.state.modMarineDispatch,\r\n            \"UpdateCompartmentDetails\",\r\n            notification\r\n          );\r\n          this.props.handlePageAdd(this.state.marineDispatch);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.props.onSaved(\r\n            this.state.modMarineDispatch,\r\n            \"UpdateCompartmentDetails\",\r\n            notification\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(\r\n          this.state.modMarineDispatch,\r\n          \"UpdateCompartmentDetails\",\r\n          notification\r\n        );\r\n        console.log(\"Error while compartmentDetailsSave:\", error);\r\n      });\r\n\r\n    this.setState({\r\n      marineCompartmentDetails: this.state.modMarineCompartmentDetails,\r\n      expandedCellRows: [],\r\n    });\r\n  };\r\n\r\n  onBack = () => {\r\n    if (this.state.isCompartmentDetails) {\r\n      this.setState({\r\n        isCompartmentDetails: false,\r\n      });\r\n    } else if (this.state.isManualEntry) {\r\n      this.setState({\r\n        isManualEntry: false,\r\n        isCompartmentDetails: true,\r\n      });\r\n    }\r\n\r\n    this.componentDidMount();\r\n  };\r\n\r\n  ButtonIsAvailable = (selectedRow, buttonName) => {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineDispatchCode,\r\n        value: selectedRow.Common_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.OperationName,\r\n        value: buttonName,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineDispatchCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetMarineDispatchCompartmentDetailsOperations,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var { operationsVisibilty } = { ...this.state };\r\n        if (buttonName === \"FORCE_COMPLETE\") {\r\n          operationsVisibilty.forceCompleteIsDisable = !(\r\n            response.data.IsSuccess ||\r\n            Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnMarineDispatch\r\n            ) === false\r\n          );\r\n          this.setState({\r\n            operationsVisibilty,\r\n          });\r\n        } else if (buttonName === \"ADJUST_PLAN\") {\r\n          operationsVisibilty.adjustPlanIsDisable = !(\r\n            response.data.IsSuccess ||\r\n            Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnMarineDispatch\r\n            ) === false\r\n          );\r\n          this.setState({\r\n            operationsVisibilty,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error in get marine dispatch compartment details operations:\",\r\n          error\r\n        );\r\n      });\r\n  };\r\n\r\n  handleCellCheck = (cellData) => {\r\n    let modMarineCompartmentDetails = lodash.cloneDeep(\r\n      this.state.modMarineCompartmentDetails\r\n    );\r\n\r\n    modMarineCompartmentDetails.forEach((modMarineCompartmentDetail) => {\r\n      if (\r\n        modMarineCompartmentDetail.CompartmentSeqNoInVehicle ===\r\n        cellData.rowData.CompartmentSeqNoInVehicle\r\n      )\r\n        modMarineCompartmentDetail[\"forceComplete\"] =\r\n          !modMarineCompartmentDetail[\"forceComplete\"];\r\n    });\r\n\r\n    this.setState({\r\n      modMarineCompartmentDetails,\r\n    });\r\n  };\r\n\r\n  getCarrierList() {\r\n    axios(\r\n      RestApis.GetCarrierCodes +\r\n      \"?ShareholderCode=\" +\r\n      \"&Transportationtype=\" +\r\n      Constants.TransportationType.MARINE,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let carrierOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            let carrierSearchOptions = lodash.cloneDeep(carrierOptions);\r\n            if (carrierSearchOptions.length > Constants.filteredOptionsCount) {\r\n              carrierSearchOptions = carrierSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({ carrierOptions, carrierSearchOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetCarrierListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Carrier List:\", error);\r\n      });\r\n  }\r\n  getVesselsByCarrier(shareholder) {\r\n    if (\r\n      this.state.modMarineDispatch.CarrierCode !== undefined &&\r\n      this.state.modMarineDispatch.CarrierCode !== null &&\r\n      shareholder !== undefined &&\r\n      shareholder !== null\r\n    ) {\r\n      let { carrierShareholderMap } = this.state;\r\n      axios(\r\n        RestApis.GetVehicleCodesByCarrier +\r\n        \"?ShareholderCode=\" +\r\n        carrierShareholderMap.get(this.state.modMarineDispatch.CarrierCode) +\r\n        \"&Transportationtype=\" +\r\n        Constants.TransportationType.MARINE +\r\n        \"&CarrierCode=\" +\r\n        this.state.modMarineDispatch.CarrierCode,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (\r\n              result.EntityResult !== null &&\r\n              Array.isArray(result.EntityResult)\r\n            ) {\r\n              var vessels = [];\r\n              result.EntityResult.forEach((vessel) => {\r\n                vessels.push({\r\n                  text: vessel,\r\n                  value: vessel,\r\n                });\r\n              });\r\n              let vesselSearchOptions = lodash.cloneDeep(vessels);\r\n              if (vesselSearchOptions.length > Constants.filteredOptionsCount) {\r\n                vesselSearchOptions = vesselSearchOptions.slice(\r\n                  0,\r\n                  Constants.filteredOptionsCount\r\n                );\r\n              }\r\n              this.setState({ vessels, vesselSearchOptions });\r\n            }\r\n          } else {\r\n            console.log(\"Error in getVesselCodeByCarrier:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Vessel List:\", error);\r\n        });\r\n    }\r\n  }\r\n  getCarrierShareholder() {\r\n    axios(\r\n      RestApis.GetCarrierListForRole +\r\n      \"?ShareholderCode=&Transportationtype=\" +\r\n      Constants.TransportationType.MARINE,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let carrierShareholderMap = new Map();\r\n          let carriers = result.EntityResult.Table;\r\n          carriers.forEach((carrier) => {\r\n            carrierShareholderMap.set(\r\n              carrier.Common_Code,\r\n              carrier.Common_Shareholder\r\n            );\r\n          });\r\n          this.setState({ carrierShareholderMap });\r\n        } else {\r\n          console.log(\"Error in getCarrierShareholder:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting CarrierShareholder:\", error);\r\n      });\r\n  }\r\n\r\n  handleCarrierSearchChange = (carrierCode) => {\r\n    try {\r\n      let carrierSearchOptions = this.state.carrierOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(carrierCode.toLowerCase())\r\n      );\r\n      if (carrierSearchOptions.length > Constants.filteredOptionsCount) {\r\n        carrierSearchOptions = carrierSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        carrierSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchDetailsComposite:Error occured on handleCarrierSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getCarrierSearchOptions() {\r\n    let carrierSearchOptions = lodash.cloneDeep(\r\n      this.state.carrierSearchOptions\r\n    );\r\n    let modCarrierCode = this.state.modMarineDispatch.CarrierCode;\r\n    if (\r\n      modCarrierCode !== null &&\r\n      modCarrierCode !== \"\" &&\r\n      modCarrierCode !== undefined\r\n    ) {\r\n      let selectedCarrierCode = carrierSearchOptions.find(\r\n        (element) =>\r\n          element.value.toLowerCase() === modCarrierCode.toLowerCase()\r\n      );\r\n      if (selectedCarrierCode === undefined) {\r\n        carrierSearchOptions.push({\r\n          text: modCarrierCode,\r\n          value: modCarrierCode,\r\n        });\r\n      }\r\n    }\r\n    return carrierSearchOptions;\r\n  }\r\n\r\n  handleSaveCompartmentDetailsEnabled = () => {\r\n    const abledRow =\r\n      this.state.marineCompartmentDetails.findIndex(\r\n        (item) =>\r\n          item.DispatchCompartmentStatus !== 1 &&\r\n          item.DispatchCompartmentStatus !== 3 &&\r\n          item.DispatchCompartmentStatus !== 4 &&\r\n          item.DispatchCompartmentStatus !== 5\r\n      ) === -1;\r\n\r\n    const { modMarineDispatch } = this.state;\r\n    const { operationsVisibilty } = this.state;\r\n    let saveCompartmentDetailsEnabled =\r\n      (modMarineDispatch.DispatchStatus !== Shipment_Status.QUEUED &&\r\n        modMarineDispatch.DispatchStatus !== Shipment_Status.PARTIALLY_LOADED &&\r\n        modMarineDispatch.DispatchStatus !== Shipment_Status.AUTO_LOADED &&\r\n        modMarineDispatch.DispatchStatus !== Shipment_Status.INTERRUPTED &&\r\n        modMarineDispatch.DispatchStatus !== Shipment_Status.MANUALLY_LOADED &&\r\n        operationsVisibilty.forceCompleteIsDisable &&\r\n        operationsVisibilty.adjustPlanIsDisable) ||\r\n      this.props.userDetails.EntityResult.IsEnterpriseNode ||\r\n      abledRow;\r\n    return !saveCompartmentDetailsEnabled;\r\n  };\r\n\r\n  getSaveEnabled() {\r\n    var saveCompartmentDetailsEnabled =\r\n      this.handleSaveCompartmentDetailsEnabled();\r\n    var saveAbled = lodash.cloneDeep(this.state.saveEnabled);\r\n    var viewTab = lodash.cloneDeep(this.props.viewTab);\r\n    if (viewTab === 2) {\r\n      return (\r\n        saveCompartmentDetailsEnabled &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.modify,\r\n          fnMarineShipmentByCompartment\r\n        )\r\n      );\r\n    } else if (viewTab === 3) {\r\n      return false;\r\n    } else {\r\n      return saveAbled;\r\n    }\r\n  }\r\n  getKPIList(marineDispatchCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    )\r\n    if (KPIView === true) {\r\n\r\n      let objKPIRequestData = {\r\n        PageName: kpiMarineShipmentDetails,\r\n        TransportationType: Constants.TransportationType.MARINE,\r\n        InputParameters: [{ key: \"ShipmentCode\", value: marineDispatchCode }],\r\n      };\r\n      axios(\r\n        RestApis.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ marineDispatchKPIList: result.EntityResult.ListKPIDetails });\r\n          } else {\r\n            this.setState({ marineDispatchKPIList: [] });\r\n            console.log(\"Error in pipeline KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting PipelineDispatch KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const saveEnabled = this.getSaveEnabled();\r\n    let popUpContents = [];\r\n    try {\r\n      popUpContents = [\r\n        {\r\n          fieldName: \"Marine_ShipmentCompDetail_LastUpdated\",\r\n          fieldValue:\r\n            new Date(\r\n              this.state.modMarineDispatch.UpdatedTime\r\n            ).toLocaleDateString() +\r\n            \" \" +\r\n            new Date(\r\n              this.state.modMarineDispatch.UpdatedTime\r\n            ).toLocaleTimeString(),\r\n        },\r\n        {\r\n          fieldName: \"Marine_ShipmentCompDetail_CreatedTime\",\r\n          fieldValue:\r\n            new Date(\r\n              this.state.modMarineDispatch.CreatedTime\r\n            ).toLocaleDateString() +\r\n            \" \" +\r\n            new Date(\r\n              this.state.modMarineDispatch.CreatedTime\r\n            ).toLocaleTimeString(),\r\n        },\r\n        {\r\n          fieldName: \"Terminal_ActiveTime\",\r\n          fieldValue:\r\n            this.state.modMarineDispatch.LastActiveTime !== undefined &&\r\n              this.state.modMarineDispatch.LastActiveTime !== null\r\n              ? new Date(\r\n                this.state.modMarineDispatch.LastActiveTime\r\n              ).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(\r\n                this.state.modMarineDispatch.LastActiveTime\r\n              ).toLocaleTimeString()\r\n              : \"\",\r\n        },\r\n      ];\r\n    } catch (error) {\r\n      console.log(\"error in get popUpContents\", error);\r\n      popUpContents = [\r\n        {\r\n          fieldName: \"Marine_ShipmentCompDetail_LastUpdated\",\r\n          fieldValue:\r\n            new Date(this.state.modMarineDispatch.UpdatedTime) +\r\n            \" \" +\r\n            new Date(this.state.modMarineDispatch.UpdatedTime),\r\n        },\r\n        {\r\n          fieldName: \"Marine_ShipmentCompDetail_CreatedTime\",\r\n          fieldValue:\r\n            new Date(this.state.modMarineDispatch.CreatedTime) +\r\n            \" \" +\r\n            new Date(this.state.modMarineDispatch.CreatedTime),\r\n        },\r\n        {\r\n          fieldName: \"Terminal_ActiveTime\",\r\n          fieldValue:\r\n            this.state.modMarineDispatch.LastActiveTime !== undefined &&\r\n              this.state.modMarineDispatch.LastActiveTime !== null\r\n              ? new Date(this.state.modMarineDispatch.LastActiveTime) +\r\n              \" \" +\r\n              new Date(this.state.modMarineDispatch.LastActiveTime)\r\n              : \"\",\r\n        },\r\n      ];\r\n    }\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.marineDispatch.DispatchCode}\r\n            newEntityName=\"Marine_ShipmentCompDetail_NewShipmentByCompartment\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        {this.state.isManualEntry ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <MarineDispatchManualEntryDetailsComposite\r\n                dispatchCode={this.state.modMarineDispatch.DispatchCode}\r\n                handleBack={this.onBack}\r\n                IsBonded={this.state.modMarineDispatch.IsBonded}\r\n                DispatchStatus={this.state.modMarineDispatch.DispatchStatus}\r\n                QuantityUOM={this.state.modMarineDispatch.QuantityUOM}\r\n                ActualTerminalCode={this.state.modMarineDispatch.ActualTerminalCode}\r\n              ></MarineDispatchManualEntryDetailsComposite>\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <TMDetailsKPILayout KPIList={this.state.marineDispatchKPIList}> </TMDetailsKPILayout>\r\n            <ErrorBoundary>\r\n              <MarineDispatchDetails\r\n                selectedRow={this.props.selectedRow}\r\n                marineDispatch={this.state.marineDispatch}\r\n                modMarineDispatch={this.state.modMarineDispatch}\r\n                modAssociations={this.state.modAssociations}\r\n                modTankAssociations={this.state.modTankAssociations}\r\n                validationErrors={this.state.validationErrors}\r\n                selectedAssociations={this.state.selectedAssociations}\r\n                selectedTankAssociations={this.state.selectedTankAssociations}\r\n                listOptions={{\r\n                  shareholders: this.state.shareholders,\r\n                  terminalCodes: this.state.terminalCodes,\r\n                  shipmentUOM: this.state.shipmentUOM,\r\n                  carrierCompany: this.getCarrierSearchOptions(),\r\n                  compSeqOptions: this.state.compSeqOptions,\r\n                  vessels: this.getVesselSearchOptions(),\r\n                  FinishedProducts: this.state.FinishedProducts,\r\n                  customerDestinationOptions:\r\n                    this.state.customerDestinationOptions,\r\n                  shareholderCustomers: this.state.shareholderCustomers,\r\n                  baseProductDetails: this.state.baseProductDetails,\r\n                  tankCodeOptions: this.state.tankCodeOptions,\r\n                  additiveDetails: this.state.additiveDetails,\r\n                }}\r\n                shareholderCustomers={this.state.shareholderCustomers}\r\n                onFieldChange={this.handleChange}\r\n                onDateTextChange={this.handleDateTextChange}\r\n                // onAllTerminalsChange={this.handleAllTerminalsChange}\r\n                handleAssociationSelectionChange={\r\n                  this.handleAssociationSelectionChange\r\n                }\r\n                handleTankAssociationSelectionChange={\r\n                  this.handleTankAssociationSelectionChange\r\n                }\r\n                handleCellDataEdit={this.handleCellDataEdit}\r\n                handleTankCellDataEdit={this.handleTankCellDataEdit}\r\n                handleAddAssociation={this.handleAddAssociation}\r\n                handleAddTankAssociation={this.handleAddTankAssociation}\r\n                handleDeleteAssociation={this.handleDeleteAssociation}\r\n                handleDeleteTankAssociation={this.handleDeleteTankAssociation}\r\n                onVesselSearchChange={this.handleVesselSearchChange}\r\n                isEnterpriseNode={\r\n                  this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                }\r\n                isSlotbookinginUI={\r\n                  this.props.userDetails.EntityResult.ShowSlotBookedInUI\r\n                }\r\n                marineShipmentPlan={this.state.marineShipmentPlan}\r\n                marineCompartmentDetails={this.state.marineCompartmentDetails}\r\n                handleInputDataEdit={this.handleInputDataEdit}\r\n                compartmentDetailsSave={this.compartmentDetailsSave}\r\n                operationsVisibilty={this.state.operationsVisibilty}\r\n                handleCellCheck={this.handleCellCheck}\r\n                viewTab={this.props.viewTab}\r\n                onTabChange={this.onTabChange}\r\n                handleAttributeCellDataEdit={this.handleAttributeCellDataEdit}\r\n                selectedAttributeList={this.state.selectedAttributeList}\r\n                attributeValidationErrors={this.state.attributeValidationErrors}\r\n                onCarrierCompanyChange={this.onCarrierCompanyChange}\r\n                expandedRows={this.state.expandedRows}\r\n                toggleExpand={this.toggleExpand}\r\n                handleCompAttributeCellDataEdit={\r\n                  this.handleCompAttributeCellDataEdit\r\n                }\r\n                expandedCellRows={this.state.expandedCellRows}\r\n                modMarineCompartmentDetails={\r\n                  this.state.modMarineCompartmentDetails\r\n                }\r\n                onCarrierSearchChange={this.handleCarrierSearchChange}\r\n                isHSEInspectionEnable={this.state.isHSEInspectionEnable}\r\n                isBondShow={this.state.isBondShow}\r\n                compartmentDetailsPageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                compDetailsTab={this.state.isNewDispatch ? [] : [\"\"]}\r\n                allocationTab={\r\n                  this.state.isNewDispatch === false &&\r\n                    this.props.userDetails.EntityResult.IsEnterpriseNode === false\r\n                    ? [\"\"]\r\n                    : []\r\n                }\r\n                allocationDetails={this.state.productAllocationDetails}\r\n                updateEnableForConfigure={this.props.updateEnableForConfigure}\r\n              ></MarineDispatchDetails>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n              {/* <TranslationConsumer>\r\n                {(t) => (\r\n                  <div className=\"row\">\r\n                    <div className=\"col col-lg-8\">\r\n                      <Button\r\n                        className=\"backButton\"\r\n                        onClick={this.props.onBack}\r\n                        content={t(\"Back\")}\r\n                      ></Button>\r\n                    </div>\r\n                    <div\r\n                      className=\"col col-lg-4\"\r\n                      style={{ textAlign: \"right\" }}\r\n                    >\r\n                      <Button\r\n                        content={t(\"LookUpData_btnReset\")}\r\n                        className=\"cancelButton\"\r\n                        onClick={this.handleReset}\r\n                      ></Button>\r\n                      <Button\r\n                        content={t(\"Save\")}\r\n                        disabled={!saveEnabled}\r\n                        onClick={this.handleSave}\r\n                      ></Button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </TranslationConsumer> */}\r\n\r\n              <TMDetailsUserActions\r\n                handleBack={this.props.onBack}\r\n                handleSave={this.handleSave}\r\n                handleReset={this.handleReset}\r\n                saveEnabled={saveEnabled}\r\n              ></TMDetailsUserActions>\r\n            </ErrorBoundary>\r\n            {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.marineDispatch.DispatchCode  === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnMarineShipmentByCompartment}\r\n            handleOperation={this.addUpdateMarineDispatch}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n          </div>\r\n        )}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n\r\n  onTabChange = (activeIndex) => {\r\n    if (activeIndex === 1) {\r\n      this.setState({\r\n        modTankAssociations: this.state.modTankPlanAssociations,\r\n      });\r\n    }\r\n    this.props.onTabChange(activeIndex);\r\n  };\r\n\r\n  getMarineShipmentPlan(selectedRow) {\r\n    if (selectedRow.Common_Code === undefined) {\r\n      this.setState({\r\n        marineShipmentPlan: [],\r\n      });\r\n      return;\r\n    }\r\n    axios(\r\n      RestApis.GetMarineDispatchPlan +\r\n      \"?MarineDispatchCode=\" +\r\n      selectedRow.Common_Code,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ marineShipmentPlan: result.EntityResult });\r\n        } else {\r\n          console.log(\"Error in getMarineShipmentPlan:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting MarineShipmentPlan:\", error);\r\n      });\r\n  }\r\n\r\n  getMarineCompartmentDetails(selectedRow) {\r\n    if (selectedRow.Common_Code === undefined) {\r\n      this.setState({\r\n        marineCompartmentDetails: [],\r\n      });\r\n      return;\r\n    }\r\n\r\n    axios(\r\n      RestApis.GetMarineDispatchCompartmentDetails +\r\n      \"?MarineDispatchCode=\" +\r\n      selectedRow.Common_Code,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          for (var i = 0; i < result.EntityResult.length; i++) {\r\n            result.EntityResult[i] = {\r\n              ...result.EntityResult[i],\r\n              forceComplete: false,\r\n              AdjustmentToPlannedQuantity: \"\",\r\n            };\r\n            result.EntityResult[i].AdjustedPlanQuantity =\r\n              result.EntityResult[i].AdjustedPlanQuantity !== \"\" &&\r\n                result.EntityResult[i].AdjustedPlanQuantity !== null\r\n                ? result.EntityResult[i].AdjustedPlanQuantity.toLocaleString()\r\n                : \"\";\r\n            result.EntityResult[i].PlannedQuantity =\r\n              result.EntityResult[i].PlannedQuantity !== \"\" &&\r\n                result.EntityResult[i].PlannedQuantity !== null\r\n                ? result.EntityResult[i].PlannedQuantity.toLocaleString()\r\n                : \"\";\r\n            result.EntityResult[i].ReturnQuantity =\r\n              result.EntityResult[i].ReturnQuantity !== \"\" &&\r\n                result.EntityResult[i].ReturnQuantity !== null\r\n                ? result.EntityResult[i].ReturnQuantity.toLocaleString()\r\n                : \"\";\r\n            result.EntityResult[i].LoadedQuantity =\r\n              result.EntityResult[i].LoadedQuantity !== \"\" &&\r\n                result.EntityResult[i].LoadedQuantity !== null\r\n                ? result.EntityResult[i].LoadedQuantity.toLocaleString()\r\n                : \"\";\r\n          }\r\n          this.setState({\r\n            marineCompartmentDetails: result.EntityResult,\r\n            modMarineCompartmentDetails: result.EntityResult,\r\n          });\r\n        } else {\r\n          console.log(\r\n            \"Error in getMarineCompartmentDetails:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting MarineCompartmentDetails:\", error);\r\n      });\r\n  }\r\n\r\n  getTankCode() {\r\n    axios(\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            const tankCodeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({\r\n              tankCodeOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getTankCode:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getTankCode:\", error);\r\n      });\r\n  }\r\n\r\n  getBaseProductList() {\r\n    axios(\r\n      RestApis.GetBaseProducts,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult !== undefined\r\n          ) {\r\n            let baseProductDetails = result.EntityResult;\r\n            this.setState({ baseProductDetails });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getBaseProductList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Base Product List:\", error);\r\n      });\r\n  }\r\n\r\n  getAdditivesList() {\r\n    axios(\r\n      RestApis.GetAdditives,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult !== undefined\r\n          ) {\r\n            let additiveDetails = result.EntityResult;\r\n            this.setState({ additiveDetails });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getAdditivesList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Additives List:\", error);\r\n      });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    userActions: bindActionCreators(getUserDetails, dispatch),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MarineDispatchDetailsComposite);\r\n\r\nMarineDispatchDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  viewTab: PropTypes.number.isRequired,\r\n  onTabChange: PropTypes.func.isRequired,\r\n  handlePageAdd: PropTypes.func.isRequired,\r\n  updateEnableForConfigure: PropTypes.bool.isRequired,\r\n};\r\n"],"names":["MarineDispatchDetails","_ref","allocationDetails","marineDispatch","modMarineDispatch","modAssociations","modTankAssociations","validationErrors","listOptions","selectedAssociations","selectedTankAssociations","onFieldChange","onDateTextChange","handleAssociationSelectionChange","handleTankAssociationSelectionChange","handleCellDataEdit","handleTankCellDataEdit","handleAddAssociation","handleAddTankAssociation","handleDeleteAssociation","handleDeleteTankAssociation","onVesselSearchChange","isEnterpriseNode","handleInputDataEdit","operationsVisibilty","handleCellCheck","viewTab","onTabChange","handleAttributeCellDataEdit","attributeValidationErrors","selectedAttributeList","handleCompAttributeCellDataEdit","expandedRows","toggleExpand","expandedCellRows","modMarineCompartmentDetails","onCarrierSearchChange","isHSEInspectionEnable","isBondShow","onCarrierCompanyChange","compDetailsTab","allocationTab","isSlotbookinginUI","updateEnableForConfigure","t","useTranslation","isBondNoShow","setBondNoShow","useState","modelOpen","setModelOpen","modCellData","setModCellData","handleCustomEditDropDown","cellData","dropDownoptions","_jsx","Select","className","value","rowIndex","field","fluid","options","onChange","indicator","reserveSpace","search","noResultsMessage","handleTankPlanEditDropDown","handleCustomEditTextBox","Input","handleTankPlanEditTextBox","decimalDisplayValues","toLocaleString","error","handleQuantity","e","UOM","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","handleAttributeType","data","attribute","rowData","DataType","toLowerCase","Constants","STRING","INT","FLOAT","LONG","DOUBLE","AttributeValue","disabled","IsReadonly","BOOL","Checkbox","checked","toString","DATETIME","DatePicker","minuteStep","undefined","Date","showYearSelector","console","log","handleIsRequiredCompAttributes","IsMandatory","_jsxs","children","AttributeName","changeBondNo","this","props","expanderTemplate","open","findIndex","x","CompartmentSeqNoInVehicle","onClick","Icon","root","name","rowExpansionTemplate","Array","isArray","AttributesforUI","length","DataTable","Column","header","editable","renderer","style","paddingRight","inputInDataTable","item","adjustPlanIsDisable","DispatchStatus","Shipment_Status","QUEUED","PARTIALLY_LOADED","AUTO_LOADED","INTERRUPTED","MANUALLY_LOADED","DispatchCompartmentStatus","AdjustmentToPlannedQuantity","checkBoxInDataTable","isChecked","forceComplete","forEach","forceCompleteIsDisable","stopPropagation","disPlayValue","toLocaleDateString","toLocaleTimeString","disPlayQuantityValue","uom","rowExpansionCellTemplate","compData","push","TranslationConsumer","DispatchCode","label","placeholder","CarrierCode","carrierCompany","onSearch","VesselCode","getOptionsWithSelect","vessels","ScheduledDate","type","disablePast","displayFormat","getCurrentDateFormat","onTextChange","QuantityUOM","multiple","shipmentUOM","Description","class","fontWeight","SlotBooked","HSEInspectionStatus","Active","text","Remarks","TerminalCodes","Utilities","terminalCodes","ActualTerminalCode","paddingTop","BondNumber","map","attire","ErrorBoundary","Accordion","Content","title","AttributeDetails","attributeMetaDataList","Tab","defaultActiveIndex","Pane","size","selectionMode","selection","onSelectionChange","handleIsRequiredCompartmentCell","editFieldType","customEditRenderer","celldata","shareholders","compSeqOptions","productOptions","FinishedProducts","ShareholderCode","productcode","handleProductEditDropDown","customerOptions","shareholderCustomers","customers","filter","shareholderCust","CustomerDestinationsList","Object","keys","customer","handleCustomerEditDropDown","destinationOptions","customerDestinationOptions","CustomerCode","destination","handleDestinationEditDropDown","initialWidth","handleTankProductEditDropDown","baseProductOptions","baseProductDetails","ALLPROD","concat","additiveDetails","values","baseProduct","handleBaseProductEditDropDown","tankCodeOptions","handleStatus","MarineDispatchCompartmentDetailType","EMPTY","LOADING","PART_FILLED","OVER_FILLED","FORCE_COMPLETED","COMPLETED","PlannedQuantity","PlanQuantityUOM","AdjustedPlanQuantity","ReturnQuantity","LoadedQuantity","scrollable","Modal","Footer","Button","content","defaultProps","MarineDispatchDetailsComposite","Component","constructor","_this","arguments","state","lodash","emptyMarineDispatch","tempModTankAssociations","modTankPlanAssociations","vehicleDetails","carrierCode","vehicleCompartments","modVehicleDetails","marineDispatchValidationDef","isReadyToRender","isCompartmentDetails","getShareholders","Captains","vesselSearchOptions","associatedCompartments","saveEnabled","marineShipmentPlan","marineCompartmentDetails","compartmentAttributeMetaDataList","terminalOptions","finishedProductItems","isManualEntry","carrierOptions","carrierShareholderMap","carrierSearchOptions","isNewDispatch","productAllocationDetails","marineDispatchKPIList","showAuthenticationLayout","tempMarineDispatch","handleChange","propertyName","terminalSelectionChange","getTankListForRole","setState","getVessel","userDetails","EntityResult","IsArchived","newAssociation","selectedShareholder","DestinationCode","FinishedProductCode","CompartmentCode","CarrierCompanyCode","TrailerCode","Quantity","SequenceNo","AssociatedOrderItems","AssociatedContractItems","Attributes","maxnumber","object","seqNumber","isNaN","parseInt","val","IsEnterpriseNode","formCompartmentAttributes","newTankAssociation","emptyDispatchCompartmentPlan","obj","association","tankAssociation","index","cindex","newVal","getFinishedProduct","vc","vehCompSeq","SFL","trailerCode","compCode","BPCodeTankCodeList","dispatchCompartmentTanks","dispatchCompartmentTank","emptyDispatchCompartmentTanks","TankCode","isTerminalAdded","expandedRowIndex","splice","Code","DefaultValue","compAttribute","compIndex","compSequenceNo","SeqNumber","handleActiveStatusChange","handleSave","tempTankAssociations","modTankAssociation","DispatchCompartmentTanks","saveMarineDispatch","compartmentDetailsSave","addUpdateMarineDispatch","createMarineDispatch","updateMarineDispatch","handleReset","getAssociationsFromDispatch","vehicleCompartment","handleResetAttributeValidationError","localNodeAttribute","handleDateTextChange","handleAllTerminalsChange","getVesselsByCarrier","getTerminalsForCarrier","handleVesselSearchChange","vesselCode","includes","slice","modMarineCompartmentDetail","saveCompartmentDetailsKeys","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","i","MarineDispatchCode","adjustPlan","KeyData","keyDataCode","KeyCodes","Key","Value","key","axios","RestApis","tokenDetails","tokenInfo","then","response","result","IsSuccess","getMarineCompartmentDetails","selectedRow","onSaved","handlePageAdd","ErrorList","catch","onBack","componentDidMount","ButtonIsAvailable","buttonName","keyCode","Common_Code","FunctionsList","functionGroups","modify","fnMarineDispatch","handleCarrierSearchChange","handleSaveCompartmentDetailsEnabled","abledRow","handleAuthenticationClose","activeIndex","modTankPlanAssociation","ShareHolderCode","FinishedProductItems","totalQuantity","k","j","finishedProductCode","BaseProductCode","AdditiveCode","componentWillReceiveProps","nextProps","getMarineDispatch","getUoms","VOLUME","MASS","massUOM","vehicleCode","vesselChanged","MARINE","getCompartmentDetailsFromVehicle","getShipmentCompartmentFromVehicleCompartment","modAssociation","VehicleCode","vehicleInfo","seqNum","VehicleTrailers","vehicleTrailer","Trailer","Compartments","trailerCompartment","trailerCompSeq","CompartmentSeqNoInTrailer","Capacity","shipmentCompartments","shipmentCompartment","attributesForUI","getVehicleCodes","vessel","getFinishedProductCodes","shareholder","code","Shareholder","PrimaryShareholder","tanks","Table","tank","getCustomerDestinations","getMarineDispatchProductAllocationDetails","selectedItems","getBaseProductList","getAdditivesList","getLookUpData","getMarineShipmentPlan","getCarrierList","getCarrierShareholder","getBond","isNewShipment","getAttributes","EnableMarine","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","MARINEDISPATCH","MARINEDISPATCHCOMPARTMENTDETAIL","ShareholderList","CommonCode","isNewTrailer","PageAttibutes","DefaultQtyUOMForTransactionUI","transportationType","getTransportationType","TransportationType","add","fnMarineShipmentByCompartment","DispatchCompartmentPlanList","result1","DispatchCompartmentDetailPlanList","getKPIList","compAttributeMetaDataList","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","marineDispatchAttribute","valueAttribute","ListOfAttributeData","AttributeCode","attributes","attTerminal","some","selTerminal","compAttributes","att","DisplayName","attributesforNewComp","comp","tempCompAttributes","attData","tempAttIndex","assignedAttributes","carrier","ReceiptCode","fillAttributeDetails","attributeList","det","terminalAttributes","termAtt","genericProps","validateSave","compart","marineDispatchCompartDef","col","err","validator","displayName","Set","a","returnValue","every","tankAssociations","getCompartmentFromAssociations","modMarineDispatchs","detailPlan","getTankPlanFromTankAssociations","IsWebPortalUser","Entity","DispatchItemPlanList","dispatch","sort","b","associations","dispatchCompartment","compartment","getVesselSearchOptions","modVesselCode","element","get","Map","set","Common_Shareholder","getCarrierSearchOptions","modCarrierCode","getSaveEnabled","saveCompartmentDetailsEnabled","saveAbled","marineDispatchCode","view","fnKPIInformation","objKPIRequestData","PageName","kpiMarineShipmentDetails","InputParameters","ListKPIDetails","render","popUpContents","fieldName","fieldValue","UpdatedTime","CreatedTime","LastActiveTime","TMDetailsHeader","entityCode","newEntityName","MarineDispatchManualEntryDetailsComposite","dispatchCode","handleBack","IsBonded","TMDetailsKPILayout","KPIList","ShowSlotBookedInUI","compartmentDetailsPageSize","WebPortalListPageSize","TMDetailsUserActions","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","getTankCode","connect","getUserDetails","TokenAuth","userActions","bindActionCreators"],"sourceRoot":""}