{"version":3,"file":"static/js/6813.8625fb4f.chunk.js","mappings":"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","sources":["Components/Composite/Common/TMDetailsKPILayout.jsx","Components/UIBase/Details/DestinationDetails.jsx","Components/Composite/Details/DestinationDetailsComposite.jsx","Components/UIBase/Common/AssociatedTerminals.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nexport default function TMDetailsKPILayout({\r\n    KPIList,\r\n    pageName,\r\n    rowHeight,\r\n    widgetHeight,\r\n    isDraggable,\r\n    isResizable,\r\n    kpiDisplayTopBreakpoint\r\n}) {\r\n    const [KPIDisplays, setKPIDisplays] = useState(1);\r\n\r\n    const kpiDiv = React.useRef(null);\r\n\r\n    const hideKpis = () => {\r\n        let currentScrollPos = window.pageYOffset;\r\n        let KPIDisplay = KPIDisplays;\r\n\r\n        // hide kpis based on div position to top of the window \r\n        if (kpiDiv.current && kpiDiv.current.getBoundingClientRect().top < kpiDisplayTopBreakpoint) {\r\n            KPIDisplay = 0;\r\n        }\r\n        // show the kpis once at top of the screen\r\n        else if (currentScrollPos === 0) {\r\n            KPIDisplay = 1\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n        setKPIDisplays(KPIDisplay);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\") {\r\n            window.addEventListener(\"scroll\", hideKpis);\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // remove listener on unmount\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", hideKpis)\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={kpiDiv}>\r\n            {KPIDisplays === 1 ? <TranslationConsumer>\r\n                {(t) => (\r\n                    <div style={{ marginTop: \"6px\" }}>\r\n                        <ErrorBoundary>\r\n                            <KPIDashboardLayout\r\n                                kpiList={KPIList}\r\n                                isDraggable={isDraggable}\r\n                                isResizable={isResizable}\r\n                                rowHeight={rowHeight}\r\n                                widgetHeight={widgetHeight}\r\n                                pageName={pageName}\r\n                            ></KPIDashboardLayout>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n                )}\r\n            </TranslationConsumer> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nTMDetailsKPILayout.propTypes = {\r\n    kpiDisplayTopBreakpoint: PropTypes.number\r\n}\r\n\r\nTMDetailsKPILayout.defaultProps = {\r\n    kpiDisplayTopBreakpoint: 100\r\n}","import React from \"react\";\r\nimport { Accordion, Select, Icon, Input } from \"@scuf/common\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n//import * as Constants from \"./../../../JS/Constants\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\n\r\nDestinationDetails.propTypes = {\r\n  destination: PropTypes.object.isRequired,\r\n  modDestination: PropTypes.object.isRequired,\r\n  modAssociations: PropTypes.array.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    transportationTypes: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    customerOptions: PropTypes.array,\r\n  }).isRequired,\r\n\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  //compartmentColumns: PropTypes.array.isRequired,\r\n\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  selectedAssociations: PropTypes.array.isRequired,\r\n  handleRowSelectionChange: PropTypes.func.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n  handleAddAssociation: PropTypes.func.isRequired,\r\n  handleDeleteAssociation: PropTypes.func.isRequired,\r\n  onActiveStatusChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  isDCHEnabled: PropTypes.bool.isRequired,\r\n  isValidShareholderSysExtCode: PropTypes.bool.isRequired,\r\n};\r\n\r\nDestinationDetails.defaultProps = {\r\n  listOptions: {\r\n    transportationTypes: [],\r\n    terminalCodes: [],\r\n  },\r\n  isEnterpriseNode: false,\r\n  isDCHEnabled: false,\r\n  isValidShareholderSysExtCode: false,\r\n};\r\nexport default function DestinationDetails({\r\n  destination,\r\n  modDestination,\r\n  modAssociations,\r\n  validationErrors,\r\n  listOptions,\r\n  onFieldChange,\r\n  onAllTerminalsChange,\r\n  selectedAssociations,\r\n  handleRowSelectionChange,\r\n  handleCellDataEdit,\r\n  handleAddAssociation,\r\n  handleDeleteAssociation,\r\n  onActiveStatusChange,\r\n  isEnterpriseNode,\r\n  isDCHEnabled,\r\n  isValidShareholderSysExtCode,\r\n  modAttributeMetaDataList,\r\n  attributeValidationErrors,\r\n  onAttributeDataChange,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n  const [t] = useTranslation();\r\n  const handleCustomEditDropDown = (cellData, dropDownoptions) => {\r\n    return (\r\n      // <TranslationConsumer>\r\n      //   {(t) => (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        //placeholder=\"Select\"\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownoptions}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n      //   )}\r\n      // </TranslationConsumer>\r\n    );\r\n  };\r\n  const handleCustomEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    // <TranslationConsumer>\r\n    //   {(t) => (\r\n    <div className=\"detailsContainer\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modDestination.Code}\r\n            label={t(\"Dest_Code1\")}\r\n            indicator=\"required\"\r\n            disabled={destination.Code !== \"\"}\r\n            onChange={(data) => onFieldChange(\"Code\", data)}\r\n            error={t(validationErrors.Code)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modDestination.Name}\r\n            label={t(\"Dest_Name1\")}\r\n            indicator=\"required\"\r\n            onChange={(data) => onFieldChange(\"Name\", data)}\r\n            error={t(validationErrors.Name)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            multiple={true}\r\n            label={t(\"Vehicle_Transport\")}\r\n            value={modDestination.TransportationTypes}\r\n            options={listOptions.transportationTypes}\r\n            onChange={(data) => {\r\n              onFieldChange(\"TransportationTypes\", data);\r\n            }}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.TransportationTypes)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modDestination.Address === null ? \"\" : modDestination.Address\r\n            }\r\n            label={t(\"Dest_Address\")}\r\n            onChange={(data) => onFieldChange(\"Address\", data)}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.Address)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modDestination.City === null ? \"\" : modDestination.City}\r\n            label={t(\"Terminal_City\")}\r\n            onChange={(data) => onFieldChange(\"City\", data)}\r\n            error={t(validationErrors.City)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modDestination.State === null ? \"\" : modDestination.State}\r\n            label={t(\"Terminal_State\")}\r\n            onChange={(data) => onFieldChange(\"State\", data)}\r\n            indicator={\r\n              isDCHEnabled && isValidShareholderSysExtCode ? \"required\" : \"\"\r\n            }\r\n            error={t(validationErrors.State)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modDestination.Country === null ? \"\" : modDestination.Country\r\n            }\r\n            label={t(\"Terminal_Country\")}\r\n            onChange={(data) => onFieldChange(\"Country\", data)}\r\n            error={t(validationErrors.Country)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modDestination.ZipCode === null ? \"\" : modDestination.ZipCode\r\n            }\r\n            label={t(\"Terminal_ZipCode\")}\r\n            onChange={(data) => onFieldChange(\"ZipCode\", data)}\r\n            error={t(validationErrors.ZipCode)}\r\n            indicator={\r\n              isDCHEnabled && isValidShareholderSysExtCode ? \"required\" : \"\"\r\n            }\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"FinishedProductInfo_Select\")}\r\n            label={t(\"Cust_Status\")}\r\n            value={modDestination.Status}\r\n            options={[\r\n              { text: t(\"ViewShipment_Ok\"), value: true },\r\n              { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n            ]}\r\n            onChange={(data) => onActiveStatusChange(data)}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modDestination.Remarks === null ? \"\" : modDestination.Remarks\r\n            }\r\n            label={t(\"Cust_Remarks\")}\r\n            onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n            indicator={\r\n              modDestination.Status !== destination.Status ? \"required\" : \"\"\r\n            }\r\n            error={t(validationErrors.Remarks)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        {isEnterpriseNode ? (\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <AssociatedTerminals\r\n              terminalList={listOptions.terminalCodes}\r\n              selectedTerminal={modDestination.TerminalCodes}\r\n              error={t(validationErrors.TerminalCodes)}\r\n              onFieldChange={onFieldChange}\r\n              onCheckChange={onAllTerminalsChange}\r\n            ></AssociatedTerminals>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      {modAttributeMetaDataList.length > 0\r\n        ? modAttributeMetaDataList.map((attire) => (\r\n            <ErrorBoundary>\r\n              <Accordion>\r\n                <Accordion.Content\r\n                  className=\"attributeAccordian\"\r\n                  title={\r\n                    isEnterpriseNode\r\n                      ? attire.TerminalCode + \" - \" + t(\"Attributes_Header\")\r\n                      : t(\"Attributes_Header\")\r\n                  }\r\n                >\r\n                  <AttributeDetails\r\n                    selectedAttributeList={attire.attributeMetaDataList}\r\n                    handleCellDataEdit={onAttributeDataChange}\r\n                    attributeValidationErrors={handleValidationErrorFilter(\r\n                      attributeValidationErrors,\r\n                      attire.TerminalCode\r\n                    )}\r\n                  ></AttributeDetails>\r\n                </Accordion.Content>\r\n              </Accordion>\r\n            </ErrorBoundary>\r\n          ))\r\n        : null}\r\n\r\n      <div className=\"row compartmentRow\">\r\n        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n          <h4>{t(\"Destination_AssociatedCusts\")}</h4>\r\n        </div>\r\n        <div className=\"col col-md-4 col-lg-3 col-xl-3\">\r\n          <div className=\"compartmentIconContainer\">\r\n            <div onClick={handleAddAssociation} className=\"compartmentIcon\">\r\n              <div>\r\n                <Icon root=\"common\" name=\"badge-plus\" size=\"medium\" />\r\n              </div>\r\n              <div className=\"margin_l10\">\r\n                <h5 className=\"font14\">{t(\"FinishedProductInfo_Add\")}</h5>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              onClick={handleDeleteAssociation}\r\n              className=\"compartmentIcon margin_l30\"\r\n            >\r\n              <div>\r\n                <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n              </div>\r\n              <div className=\"margin_l10\">\r\n                <h5 className=\"font14\">{t(\"DestAdd_Delete\")}</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row marginRightZero tableScroll\">\r\n        <div className=\"col-12 detailsTable\">\r\n          <DataTable\r\n            data={modAssociations}\r\n            selectionMode=\"multiple\"\r\n            selection={selectedAssociations}\r\n            onSelectionChange={handleRowSelectionChange}\r\n            scrollable={true}\r\n            scrollHeight=\"320px\"\r\n          >\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"CustomerCode\"\r\n              field=\"CustomerCode\"\r\n              header={t(\"Cust_Code\")}\r\n              editable={true}\r\n              //rowHeader={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={(celldata) =>\r\n                handleCustomEditDropDown(celldata, listOptions.customerOptions)\r\n              }\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"ContactPerson\"\r\n              field=\"ContactPerson\"\r\n              header={t(\"Cust_ContactPerson\")}\r\n              editable={true}\r\n              // rowHeader={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleCustomEditTextBox}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"Email\"\r\n              field=\"Email\"\r\n              header={t(\"Cust_Email\")}\r\n              editable={true}\r\n              // rowHeader={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleCustomEditTextBox}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"Mobile\"\r\n              field=\"Mobile\"\r\n              header={t(\"DriverInfo_Mobile\")}\r\n              editable={true}\r\n              // rowHeader={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleCustomEditTextBox}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"Phone\"\r\n              field=\"Phone\"\r\n              header={t(\"Dest_PhNum\")}\r\n              editable={true}\r\n              // rowHeader={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleCustomEditTextBox}\r\n            ></DataTable.Column>\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    //   )}\r\n    // </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport DestinationDetails from \"../../UIBase/Details/DestinationDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { destinationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport lodash from \"lodash\";\r\nimport { functionGroups, fnDestination, fnKPIInformation } from \"../../../JS/FunctionGroups\";\r\nimport { emptyDestination } from \"../../../JS/DefaultEntities\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport PropTypes from \"prop-types\";\r\nimport { customerDestinationValidationDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { destinationAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { kpiDestinationDetail } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass DestinationDetailsComposite extends Component {\r\n  state = {\r\n    destination: {},\r\n    modDestination: {},\r\n    modAssociations: [],\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      destinationValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    selectedAssociations: [],\r\n    customerOptions: [],\r\n    isValidShareholderSysExtCode: false,\r\n    attributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    destinationKPIList: [],\r\n    showAuthenticationLayout: false,\r\n    tempDestination: {},\r\n  };\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modDestination = lodash.cloneDeep(this.state.modDestination);\r\n      modDestination[propertyName] = data;\r\n      this.setState({ modDestination });\r\n      if (destinationValidationDef[propertyName] !== undefined) {\r\n        var validationErrors = { ...this.state.validationErrors };\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          destinationValidationDef[propertyName],\r\n          data\r\n        );\r\n\r\n        this.setState({ validationErrors });\r\n      }\r\n\r\n      if (propertyName === \"TerminalCodes\") {\r\n        this.terminalSelectionChange(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"DestinationDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modAttributeMetaDataList = [];\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n      var modDestination = lodash.cloneDeep(this.state.modDestination);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        });\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.destination.forEach(function (\r\n            attributeMetaData\r\n          ) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue = modDestination.Attributes.find(\r\n                (destinationAttribute) => {\r\n                  return destinationAttribute.TerminalCode === terminal;\r\n                }\r\n              );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modAttributeMetaDataList = [];\r\n      modAttributeMetaDataList = attributesTerminalsList;\r\n      modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modAttributeMetaDataList\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n\r\n      this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"DestinationDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (Array.isArray(attributeMetaDataList.destination) && attributeMetaDataList.destination.length > 0) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.destination[0].TerminalCode,\r\n        ]);\r\n      }\r\n     \r\n    } catch (error) {\r\n      console.log(\r\n        \"DestinationDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n    modAssociations[cellData.rowIndex][cellData.field] = newVal;\r\n    this.setState({ modAssociations });\r\n  };\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[\r\n            attribute.Code\r\n          ] = Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors,modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TerminalDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      //console.log(nextProps);\r\n\r\n      if (\r\n        this.state.destination.Code !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        //console.log(nextProps);\r\n        this.getDestination(nextProps.selectedRow);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"DestinationDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors: Utilities.getAttributeInitialValidationErrors(\r\n          attributeMetaDataList.destination\r\n        ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n  saveDestination = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempDestination = lodash.cloneDeep(this.state.tempDestination);\r\n\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      tempDestination.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n      this.state.destination.Code === \"\"\r\n        ? this.createDestination(tempDestination)\r\n        : this.updateDestination(tempDestination);\r\n    } catch (error) {\r\n      console.log(\"BaseProductDetailsComposite : Error in saveBaseProduct\");\r\n    }\r\n  };\r\n  handleSave = () => {\r\n    try {\r\n      let modDestination = lodash.cloneDeep(this.state.modDestination);\r\n      let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n      modAssociations.forEach(\r\n        (association) => (association.DestinationCode = modDestination.Code)\r\n      );\r\n      modDestination.ListCustomerDestinationInfo = Utilities.removeSeqNumberFromListObject(\r\n        modAssociations\r\n      );\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      // this.setState({ saveEnabled: false });\r\n      \r\n      if (this.validateSave(modDestination, attributeList)) {\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempDestination = lodash.cloneDeep(modDestination);\r\n        this.setState({ showAuthenticationLayout, tempDestination }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveDestination();\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"DestinationDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateSave(modDestination,attributeList) {\r\n    // const { modTrailer } = this.state;\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(destinationValidationDef).forEach(function (key) {\r\n      if (modDestination[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          destinationValidationDef[key],\r\n          modDestination[key]\r\n        );\r\n    });\r\n    if (modDestination.Status !== this.state.destination.Status) {\r\n      if (modDestination.Remarks === null || modDestination.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"OriginTerminal_RemarksRequired\";\r\n      }\r\n    }\r\n    if (\r\n      modDestination.TransportationTypes === null ||\r\n      modDestination.TransportationTypes.length === 0\r\n    )\r\n      validationErrors[\"TransportationTypes\"] = \"Vehicle_MandatoryTrasType\";\r\n\r\n    if (\r\n      this.state.isValidShareholderSysExtCode &&\r\n      this.props.userDetails.EntityResult.IsDCHEnabled\r\n    ) {\r\n      if (modDestination.State === null || modDestination.State.length === 0)\r\n        validationErrors[\"State\"] = \"Terminal_State_required\";\r\n      if (\r\n        modDestination.ZipCode === null ||\r\n        modDestination.ZipCode.length === 0\r\n      )\r\n        validationErrors[\"ZipCode\"] = \"Terminal_ZipCode_required\";\r\n    }\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"DestInfo_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    let uniqueRecords = [\r\n      ...new Set(\r\n        modDestination.ListCustomerDestinationInfo.map((a) => a.CustomerCode)\r\n      ),\r\n    ];\r\n    if (\r\n      uniqueRecords.length !== modDestination.ListCustomerDestinationInfo.length\r\n    ) {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [],\r\n        keyValues: [],\r\n        isSuccess: false,\r\n        errorMessage: \"Duplicate_Associated_Customers\",\r\n      });\r\n      this.props.onSaved(this.state.modDestination, \"update\", notification);\r\n      return false;\r\n    }\r\n    if (\r\n      Array.isArray(modDestination.ListCustomerDestinationInfo) &&\r\n      modDestination.ListCustomerDestinationInfo.length > 0\r\n    ) {\r\n      modDestination.ListCustomerDestinationInfo.forEach((association) => {\r\n        customerDestinationValidationDef.forEach((col) => {\r\n          let err = \"\";\r\n\r\n          if (col.validator !== undefined) {\r\n            err = Utilities.validateField(\r\n              col.validator,\r\n              association[col.field]\r\n            );\r\n          }\r\n          if (err !== \"\") {\r\n            notification.messageResultDetails.push({\r\n              keyFields: [\"Cust_Code\", col.displayName],\r\n              keyValues: [association.CustomerCode, association[col.field]],\r\n              isSuccess: false,\r\n              errorMessage: err,\r\n            });\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [],\r\n        keyValues: [],\r\n        isSuccess: false,\r\n        errorMessage: \"Destination_Customer_Association_Require\",\r\n      });\r\n    }\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n    var returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modDestination, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n  updateDestination(modDestination) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.destinationCode,\r\n        value: modDestination.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.destinationCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modDestination,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"DestInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Dest_Code1\"],\r\n          keyValues: [modDestination.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateDestination,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnDestination\r\n              ),\r\n              showAuthenticationLayout: false,\r\n\r\n            },\r\n            () => this.getDestination({ Common_Code: modDestination.Code })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnDestination\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          console.log(\"Error in UpdateDestination:\", result.ErrorList);\r\n        }\r\n        //console.log(notification);\r\n        this.props.onSaved(modDestination, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnDestination\r\n          ),\r\n          showAuthenticationLayout: false,\r\n\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modDestination, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  createDestination(modDestination) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.destinationCode,\r\n        value: modDestination.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.destinationCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modDestination,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"DestInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Dest_Code1\"],\r\n          keyValues: [modDestination.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateDestination,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnDestination\r\n              ),\r\n              showAuthenticationLayout: false,\r\n\r\n            },\r\n            () => this.getDestination({ Common_Code: modDestination.Code })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnDestination\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          console.log(\"Error in CreateDestination:\", result.ErrorList);\r\n        }\r\n        //console.log(notification);\r\n        this.props.onSaved(modDestination, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnDestination\r\n          ),\r\n          showAuthenticationLayout: false,\r\n\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modDestination, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      if (this.props.userDetails.EntityResult.IsDCHEnabled)\r\n        this.getShareholderDetail(this.props.selectedShareholder);\r\n      this.getAttributes(this.props.selectedRow);\r\n      // this.getDestination(this.props.selectedRow);\r\n      this.getcustomerList(this.props.selectedShareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"DriverDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(destinationRow) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [destinationAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors: Utilities.getAttributeInitialValidationErrors(\r\n                result.EntityResult.destination\r\n              ),\r\n            },\r\n            () => this.getDestination(destinationRow)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  getShareholderDetail(shareHolder) {\r\n    //console.log(\"DCH\", this.props.userDetails.EntityResult.IsDCHEnabled);\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shareHolder,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shareHolder,\r\n      keyDataCode: KeyCodes.shareholderCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetShareholder,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            isValidShareholderSysExtCode:\r\n              result.EntityResult.ExternalSystemCode > 1 ? true : false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isValidShareholderSysExtCode: false,\r\n          });\r\n          console.log(\"Error in GetDestination:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error while getting Shareholder detail:\",\r\n          error,\r\n          shareHolder\r\n        );\r\n      });\r\n    //console.log(\"Shareholder state : \", this.state.isValidShareholderSysExtCode)\r\n  }\r\n  getDestination(destinationRow) {\r\n    // let driver = props.selectedRow;\r\n    emptyDestination.ShareholderCode = this.props.selectedShareholder;\r\n    emptyDestination.TransportationTypes = this.props.userDetails.EntityResult.TransportationTypes;\r\n    emptyDestination.TerminalCodes =\r\n      this.props.terminalCodes.length === 1\r\n        ? [...this.props.terminalCodes]\r\n        : [];\r\n    //    var terminalCodes = [...this.state.terminalCodes];\r\n    if (destinationRow.Common_Code === undefined) {\r\n      // terminalCodes = [];\r\n      this.setState(\r\n        {\r\n          destination: lodash.cloneDeep(emptyDestination),\r\n          modDestination: lodash.cloneDeep(emptyDestination),\r\n          modAttributeMetaDataList: [],\r\n          isReadyToRender: true,\r\n          modAssociations: [],\r\n          destinationKPIList: [],\r\n          // terminalCodes,\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnDestination\r\n          ),\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode === false)\r\n            this.localNodeAttribute();\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.destinationCode,\r\n        value: destinationRow.Common_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.destinationCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetDestination,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        // console.log(result);\r\n        if (result.IsSuccess === true) {\r\n          // this.getTerminalsForCarrier(result.EntityResult.CarrierCode);\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              destination: result.EntityResult,\r\n              modDestination: lodash.cloneDeep(result.EntityResult),\r\n              modAssociations: Array.isArray(\r\n                result.EntityResult.ListCustomerDestinationInfo\r\n              )\r\n                ? Utilities.addSeqNumberToListObject(\r\n                    lodash.cloneDeep(\r\n                      result.EntityResult.ListCustomerDestinationInfo\r\n                    )\r\n                  )\r\n                : [],\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnDestination\r\n              ),\r\n            },\r\n            () => {\r\n              // this.getTerminalsForCarrier(result.EntityResult.CarrierCode)\r\n              this.getKPIList(this.props.selectedShareholder,result.EntityResult.Code)\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            modDestination: lodash.cloneDeep(emptyDestination),\r\n            destination: lodash.cloneDeep(emptyDestination),\r\n            modAssociations: [],\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetDestination:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Destination:\", error, destinationRow);\r\n      });\r\n  }\r\n  handleReset = () => {\r\n    var modDestination = lodash.cloneDeep(this.state.destination);\r\n    try {\r\n      this.setState(\r\n        {\r\n          modDestination,\r\n          validationErrors: [],\r\n          modAttributeMetaDataList: [],\r\n          modAssociations: Array.isArray(\r\n            this.state.destination.ListCustomerDestinationInfo\r\n          )\r\n            ? Utilities.addSeqNumberToListObject(\r\n                lodash.cloneDeep(\r\n                  this.state.destination.ListCustomerDestinationInfo\r\n                )\r\n              )\r\n            : [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(modDestination.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n      if (this.state.destination.Code === \"\") {\r\n        var terminalCodes = [...this.state.terminalCodes];\r\n        terminalCodes = [];\r\n        this.setState({ terminalCodes });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"DestinationDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      var terminalCodes = [...this.props.terminalCodes];\r\n      var modDestination = lodash.cloneDeep(this.state.modDestination);\r\n\r\n      if (checked) modDestination.TerminalCodes = [...terminalCodes];\r\n      else modDestination.TerminalCodes = [];\r\n      this.setState({ modDestination: modDestination });\r\n      this.terminalSelectionChange(modDestination.TerminalCodes);\r\n    } catch (error) {\r\n      console.log(\r\n        \"DestinationDetailsComposite:Error occured on handleAllTerminasChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAddAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.modAssociations.length < this.state.customerOptions.length\r\n        ) {\r\n          let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n          let newAssociation = {\r\n            SeqNumber: null,\r\n            CustomerCode: null,\r\n            DestinationCode: null,\r\n            ContactPerson: null,\r\n            Email: null,\r\n            Mobile: null,\r\n            Phone: null,\r\n            ShareholderCode: this.props.selectedShareholder,\r\n          };\r\n          newAssociation.SeqNumber = Utilities.getMaxSeqNumberfromListObject(\r\n            modAssociations\r\n          );\r\n\r\n          if (this.state.customerOptions.length === 1) {\r\n            newAssociation.CustomerCode = this.state.customerOptions[0].value;\r\n          }\r\n\r\n          modAssociations.push(newAssociation);\r\n\r\n          this.setState({\r\n            modAssociations,\r\n            selectedAssociations: [],\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"DestinationDetailsComposite:Error occured on handleAddAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleDeleteAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedAssociations != null &&\r\n          this.state.selectedAssociations.length > 0\r\n        ) {\r\n          if (this.state.modAssociations.length > 0) {\r\n            let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n\r\n            this.state.selectedAssociations.forEach((obj, index) => {\r\n              modAssociations = modAssociations.filter(\r\n                (association, cindex) => {\r\n                  return association.SeqNumber !== obj.SeqNumber;\r\n                }\r\n              );\r\n            });\r\n\r\n            this.setState({ modAssociations, selectedAssociations: [] });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"DestinationDetailsComposite:Error occured on handleDeleteAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleAssociationSelectionChange = (associations) => {\r\n    this.setState({ selectedAssociations: associations });\r\n  };\r\n\r\n  getcustomerList(shareholder) {\r\n    axios(\r\n      RestAPIs.GetCustomerDestinations +\r\n        \"?ShareholderCode=\" +\r\n        shareholder +\r\n        \"&TransportationType=\",\r\n\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        // console.log(response);\r\n\r\n        if (result.IsSuccess === true) {\r\n          if (Array.isArray(result.EntityResult)) {\r\n            let shareholderCustomers = result.EntityResult.filter(\r\n              (shareholderCust) =>\r\n                shareholderCust.ShareholderCode === shareholder\r\n            );\r\n            if (shareholderCustomers.length > 0) {\r\n              let customers = Object.keys(\r\n                shareholderCustomers[0].CustomerDestinationsList\r\n              );\r\n              let customerOptions = Utilities.transferListtoOptions(customers);\r\n              this.setState({ customerOptions });\r\n            } else {\r\n              console.log(\"no customers identified for shareholder\");\r\n            }\r\n          } else {\r\n            console.log(\"customerdestinations not identified for shareholder\");\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Customer List:\", error);\r\n      });\r\n  }\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modDestination = lodash.cloneDeep(this.state.modDestination);\r\n      modDestination.Status = value;\r\n      if (modDestination.Status !== this.state.destination.Status)\r\n        modDestination.Remarks = \"\";\r\n      this.setState({ modDestination });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  //Get KPI for Destination\r\n  getKPIList(shareholder,destinationCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      \r\n      var transportationType = \"\";\r\n      if (this.props.genericProps !== undefined) {\r\n        if (this.props.genericProps.transportationType !== undefined) {\r\n          transportationType = this.props.genericProps.transportationType;\r\n        }\r\n      }\r\n      let objKPIRequestData = {\r\n        PageName: kpiDestinationDetail,\r\n        TransportationType: transportationType,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder }, { key: \"DestinationCode\", value: destinationCode }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              destinationKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ destinationKPIList: [] });\r\n            console.log(\"Error in destination KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Destination KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n  render() {\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"DriverInfo_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modDestination.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modDestination.LastUpdatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_LastActive\",\r\n        fieldValue:\r\n          this.state.modDestination.LastActiveTime !== undefined &&\r\n          this.state.modDestination.LastActiveTime !== null\r\n            ? new Date(\r\n                this.state.modDestination.LastActiveTime\r\n              ).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(\r\n                this.state.modDestination.LastActiveTime\r\n              ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_CreatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.modDestination.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modDestination.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.destination.Code}\r\n            newEntityName=\"DestAdd_Title\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <TMDetailsKPILayout KPIList={this.state.destinationKPIList}> </TMDetailsKPILayout>\r\n        <ErrorBoundary>\r\n          <DestinationDetails\r\n            destination={this.state.destination}\r\n            modDestination={this.state.modDestination}\r\n            modAssociations={this.state.modAssociations}\r\n            validationErrors={this.state.validationErrors}\r\n            listOptions={{\r\n              transportationTypes: Utilities.transferListtoOptions(\r\n                this.props.userDetails.EntityResult.TransportationTypes\r\n              ),\r\n              terminalCodes: this.props.terminalCodes,\r\n              customerOptions: this.state.customerOptions,\r\n            }}\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            attributeMetaDataList={this.state.attributeMetaDataList}\r\n            selectedAssociations={this.state.selectedAssociations}\r\n            handleRowSelectionChange={this.handleAssociationSelectionChange}\r\n            onFieldChange={this.handleChange}\r\n            onAllTerminalsChange={this.handleAllTerminalsChange}\r\n            handleAddAssociation={this.handleAddAssociation}\r\n            handleDeleteAssociation={this.handleDeleteAssociation}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            onAttributeDataChange={this.handleAttributeDataChange} \r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            isDCHEnabled={this.props.userDetails.EntityResult.IsDCHEnabled}\r\n            isValidShareholderSysExtCode={\r\n              this.state.isValidShareholderSysExtCode\r\n            }\r\n          ></DestinationDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.destination.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnDestination}\r\n            handleOperation={this.saveDestination}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DestinationDetailsComposite);\r\n\r\nDestinationDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Select, Checkbox } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nAssociatedTerminals.propTypes = {\r\n  terminalList: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedTerminal: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  validationError: PropTypes.string,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCheckChange: PropTypes.func.isRequired,\r\n};\r\nAssociatedTerminals.defaultProps = {\r\n  terminalList: [],\r\n  selectedTerminal: [],\r\n  validationError: \"\",\r\n};\r\nexport function AssociatedTerminals({\r\n  terminalList,\r\n  selectedTerminal,\r\n  validationError,\r\n  onFieldChange,\r\n  onCheckChange,\r\n}) {\r\n  //console.log(\"component terminalList\", terminalList);\r\n  if (selectedTerminal === null) selectedTerminal = [];\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div style={{ width: \"80%\" }}>\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"TerminalCodes\")}\r\n              value={selectedTerminal}\r\n              multiple={true}\r\n              options={Utilities.transferListtoOptions(terminalList)}\r\n              onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n              error={t(validationError)}\r\n              disabled={terminalList.length === 0}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"ddlSelectAll\">\r\n            <Checkbox\r\n              label={t(\"Common_All\")}\r\n              checked={\r\n                Array.isArray(selectedTerminal) &&\r\n                selectedTerminal.length === terminalList.length\r\n              }\r\n              onChange={(checked) => onCheckChange(checked)}\r\n            ></Checkbox>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMDetailsKPILayout","_ref","KPIList","pageName","rowHeight","widgetHeight","isDraggable","isResizable","kpiDisplayTopBreakpoint","KPIDisplays","setKPIDisplays","useState","kpiDiv","React","hideKpis","currentScrollPos","window","pageYOffset","KPIDisplay","current","getBoundingClientRect","top","useEffect","addEventListener","removeEventListener","_jsx","ref","children","TranslationConsumer","t","style","marginTop","ErrorBoundary","KPIDashboardLayout","kpiList","defaultProps","DestinationDetails","destination","modDestination","modAssociations","validationErrors","listOptions","onFieldChange","onAllTerminalsChange","selectedAssociations","handleRowSelectionChange","handleCellDataEdit","handleAddAssociation","handleDeleteAssociation","onActiveStatusChange","isEnterpriseNode","isDCHEnabled","isValidShareholderSysExtCode","modAttributeMetaDataList","attributeValidationErrors","onAttributeDataChange","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","useTranslation","handleCustomEditTextBox","cellData","Input","fluid","value","rowIndex","field","onChange","reserveSpace","_jsxs","className","Code","label","indicator","disabled","data","error","Name","Select","placeholder","multiple","TransportationTypes","options","transportationTypes","search","noResultsMessage","Address","City","State","Country","ZipCode","Status","text","Remarks","AssociatedTerminals","terminalList","terminalCodes","selectedTerminal","TerminalCodes","onCheckChange","length","map","attire","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","onClick","Icon","root","name","size","DataTable","selectionMode","selection","onSelectionChange","scrollable","scrollHeight","Column","header","editable","editFieldType","customEditRenderer","celldata","handleCustomEditDropDown","dropDownoptions","customerOptions","DestinationDetailsComposite","Component","constructor","arguments","state","Utilities","destinationValidationDef","isReadyToRender","saveEnabled","destinationKPIList","showAuthenticationLayout","tempDestination","handleChange","propertyName","lodash","this","setState","undefined","terminalSelectionChange","console","log","newVal","handleAttributeDataChange","attribute","matchedAttributes","matchedAttributesList","filter","modattribute","Array","isArray","DefaultValue","forEach","handleAuthenticationClose","saveDestination","attributeList","Attributes","createDestination","updateDestination","handleSave","association","DestinationCode","ListCustomerDestinationInfo","validateSave","props","userDetails","EntityResult","IsWebPortalUser","handleReset","IsEnterpriseNode","handleResetAttributeValidationError","localNodeAttribute","handleAllTerminalsChange","checked","IsArchived","newAssociation","SeqNumber","CustomerCode","ContactPerson","Email","Mobile","Phone","ShareholderCode","selectedShareholder","push","obj","index","cindex","handleAssociationSelectionChange","associations","handleActiveStatusChange","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","destinationAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","Object","keys","key","componentWillReceiveProps","nextProps","selectedRow","Common_Code","tokenDetails","tokenInfo","getDestination","IsDCHEnabled","notification","messageType","message","messageResultDetails","Set","a","keyFields","keyValues","isSuccess","errorMessage","onSaved","customerDestinationValidationDef","col","err","validator","displayName","returnValue","values","every","keyCode","KeyCodes","ShareHolderCode","keyDataCode","Entity","axios","RestAPIs","then","response","result","IsSuccess","FunctionsList","functionGroups","modify","fnDestination","ErrorList","add","catch","componentDidMount","getShareholderDetail","getAttributes","getcustomerList","destinationRow","destinationAttributeEntity","shareHolder","ExternalSystemCode","emptyDestination","getKPIList","shareholder","shareholderCustomers","shareholderCust","customers","CustomerDestinationsList","destinationCode","view","fnKPIInformation","transportationType","genericProps","objKPIRequestData","PageName","kpiDestinationDetail","TransportationType","InputParameters","ListKPIDetails","render","popUpContents","fieldName","fieldValue","Date","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","LastActiveTime","CreatedTime","TMDetailsHeader","entityCode","newEntityName","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","validationError","display","justifyContent","width","Checkbox","margin","Popup","element","marginLeft","position","List","content","Button","float","handleAttributeDateValue","convertAttributeDatetoString","chars","split","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","Constants","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","toString","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","toLocaleString","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","getOptionsWithSelect","ddlOptions","selectOptionText","option","unshift","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}