{"version":3,"file":"static/js/3903.b8e17436.chunk.js","mappings":"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","sources":["Components/UIBase/Details/BayDetails.jsx","Components/Composite/Details/BayDetailsComposite.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Select, Accordion, Checkbox, Input } from '@scuf/common';\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { DataTable } from '@scuf/datatable';\r\nimport PropTypes from \"prop-types\";\r\nimport { AttributeDetails } from \"../../UIBase/Details/AttributeDetails\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\n\r\nBayDetails.propTypes = {\r\n    location: PropTypes.object.isRequired,\r\n    modLocation: PropTypes.object.isRequired,\r\n};\r\nexport default function BayDetails({\r\n    location,\r\n    modLocation,\r\n    bay,\r\n    modBay,\r\n    modAvailableDevices,\r\n    modAssociatedDevices,\r\n    selectedLocationType,\r\n    validationErrors,\r\n    checkBoxChanged,\r\n    onFieldChange,\r\n    listOptions,\r\n    handleCellDataEdit,\r\n    onActiveStatusChange,\r\n    attributeValidationErrors,\r\n    modAttributeMetaDataList,\r\n    onAttributeDataChange\r\n}) {\r\n\r\n    const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n        let attributeValidation = [];\r\n        attributeValidation = attributeValidationErrors.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n        })\r\n        return attributeValidation.attributeValidationErrors;\r\n    }\r\n    const [t] = useTranslation();\r\n    const handleCustomEditTextBox = (cellData) => {\r\n        return (\r\n            <Input\r\n                fluid\r\n                value={modAssociatedDevices[cellData.rowIndex][cellData.field]}\r\n                onChange={(value) => handleCellDataEdit(value, cellData)}\r\n                reserveSpace={false}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"detailsContainer\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={modLocation.LocationCode}\r\n                        label={selectedLocationType===\"Bay\" ||selectedLocationType===\"Cluster\" ?t(selectedLocationType + \" Code\"):t(\"LocationInfo_BerthCode\")}\r\n                        indicator=\"required\"\r\n                        disabled={location.LocationCode !== \"\"}\r\n                        onChange={(data) => onFieldChange(\"LocationCode\", data)}\r\n                        error={t(validationErrors.LocationCode)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={modLocation.LocationName}\r\n                        label={selectedLocationType===\"Bay\" || selectedLocationType===\"Cluster\"?t(selectedLocationType + \"  Name\"):t(\"LocationInfo_BerthName\")}\r\n                        indicator=\"required\"\r\n                        onChange={(data) => onFieldChange(\"LocationName\", data)}\r\n                        error={t(validationErrors.LocationName)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                        fluid\r\n                        placeholder={t(\"Common_Select\")}\r\n                        label={selectedLocationType===\"Bay\"?t(\"BayGroupList_BayType\"):selectedLocationType===\"Cluster\"?t(\"LocationInfo_ClusterType\"):t(\"LocationInfo_BerthType\")}\r\n                        value={modBay.BayType}\r\n                        options={listOptions.bayTypeOptions}\r\n                        disabled={location.LocationCode !== \"\"}\r\n                        onChange={(data) => onFieldChange(\"BayType\", data)}\r\n                        indicator=\"required\"\r\n                        reserveSpace={false}\r\n                        search={false}\r\n                        noResultsMessage={t(\"noResultsMessage\")}\r\n                    />\r\n                </div>\r\n                {selectedLocationType===\"Bay\"?\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={selectedLocationType}\r\n                        disabled=\"true\"\r\n                        label={t(\"LocationType\")}\r\n                        onChange={(data) => onFieldChange(\"LocationType\", data)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>:\"\"}\r\n                {selectedLocationType===\"Bay\" || selectedLocationType===\"Cluster\"?\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={modBay.MaximumQueue}\r\n                        label={t(\"Bay_MaxQue\")}\r\n                        onChange={(data) => onFieldChange(\"MaximumQueue\", data)}\r\n                        error={t(validationErrors.MaximumQueue)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>:\"\"}\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={modBay.BayPriority}\r\n                        label={selectedLocationType===\"Bay\" ?t(\"Bay_Priority\"):selectedLocationType===\"Cluster\"?t(\"LocationInfo_ClusterPriority\"):t(\"LocationInfo_BerthPriority\")}\r\n                        onChange={(data) => onFieldChange(\"BayPriority\", data)}\r\n                        error={t(validationErrors.BayPriority)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                {selectedLocationType===\"Bay\"||selectedLocationType===\"Cluster\"?\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={modBay.IslandCode}\r\n                        label={ selectedLocationType===\"Bay\" ? t(\"Bay_Island\"):selectedLocationType===\"Cluster\"?t(\"Spur_Code\"):t(\"Bay_Island\")}\r\n                        disabled={true}\r\n                        onChange={(data) => onFieldChange(\"IslandCode\", data)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>:\"\"}\r\n                {selectedLocationType===\"Bay\"?\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                        fluid\r\n                        placeholder={t(\"Common_Select\")}\r\n                        label={t(\"Bay_VehicleSpecificType\")}\r\n                        value={modBay.VehicleSpecificType}\r\n                        options={[\r\n                            { text: \"DEFENCE\", value: \"DEFENCE\" },\r\n                            { text: \"AEROVEHICLES\", value: \"AEROVEHICLES\" },\r\n                            { text: \"AGENTTRUCK\", value: \"AGENTTRUCK\" },\r\n                        ]}\r\n                        onChange={(data) => onFieldChange(\"VehicleSpecificType\", data)}\r\n                        reserveSpace={false}\r\n                        search={false}\r\n                        noResultsMessage={t(\"noResultsMessage\")}\r\n                    />\r\n                </div>:\"\"}\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                        fluid\r\n                        placeholder={t(\"Common_Select\")}\r\n                        label={t(\"BayGroupList_LoadingType\")}\r\n                        value={modBay.LoadingType}\r\n                        options={listOptions.loadingTypeOptions}\r\n                        disabled={location.LocationCode !== \"\"}\r\n                        onChange={(data) => onFieldChange(\"LoadingType\", data)}\r\n                        reserveSpace={false}\r\n                        search={false}\r\n                        noResultsMessage={t(\"noResultsMessage\")}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={\r\n                            modLocation.Description === null\r\n                                ? \"\"\r\n                                : modLocation.Description\r\n                        }\r\n                        label={t(\"FinishedProductList_Description\")}\r\n                        onChange={(data) => onFieldChange(\"Description\", data)}\r\n                        error={t(validationErrors.Description)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                        fluid\r\n                        placeholder={t(\"FinishedProductInfo_Select\")}\r\n                        label={t(\"Cust_Status\")}\r\n                        value={modLocation.Active}\r\n                        options={[\r\n                            { text: t(\"ViewShipment_Ok\"), value: true },\r\n                            { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                        ]}\r\n                        onChange={(data) => onActiveStatusChange(data)}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={\r\n                            modLocation.Remarks === null ? \"\" : modLocation.Remarks\r\n                        }\r\n                        label={t(\"Cust_Remarks\")}\r\n                        onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                        indicator={\r\n                            modLocation.Active !== location.Active ? \"required\" : \"\"\r\n                        }\r\n                        error={t(validationErrors.Remarks)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                {selectedLocationType===\"Bay\"?\r\n                <div className=\"col-12 col-md-6 col-lg-4 \">\r\n                    <Checkbox className=\"deviceCheckBox\"\r\n\r\n                        label={t(\"Bay_VolumeBased\")}\r\n                        checked={modBay.IsVolumeBased}\r\n                        onChange={(checked) =>\r\n                            onFieldChange(\"IsVolumeBased\", checked)\r\n                        }\r\n                    >\r\n                    </Checkbox>\r\n                    <Checkbox className=\"deviceCheckBox\"\r\n\r\n                        label={t(\"Bay_IsEnableInBayAllocation\")}\r\n                        checked={modBay.EnabledForBayAllocation}\r\n                        onChange={(checked) =>\r\n                            onFieldChange(\"EnabledForBayAllocation\", checked)\r\n                        }\r\n                    >\r\n                    </Checkbox>\r\n\r\n                </div>:\"\"}\r\n                {\r\nselectedLocationType===\"Cluster\"?\r\n<div className=\"col-12 col-md-6 col-lg-4 \">\r\n<Checkbox className=\"deviceCheckBox\"\r\n\r\nlabel={t(\"Bay_VolumeBased\")}\r\nchecked={modBay.IsVolumeBased}\r\nonChange={(checked) =>\r\n    onFieldChange(\"IsVolumeBased\", checked)\r\n}\r\n>\r\n</Checkbox>\r\n</div>:\"\"\r\n                }\r\n            </div>\r\n            {\r\n                modAttributeMetaDataList.length > 0 ?\r\n                modAttributeMetaDataList.map((attire) =>\r\n                        <div className='bayAccordian'>\r\n                            <ErrorBoundary>\r\n\r\n                                <Accordion className=''>\r\n                                    <Accordion.Content\r\n                                        // className=\"attributeAccordian\"\r\n                                        title={t(\"Attributes_Header\")}\r\n                                    >\r\n                                        <AttributeDetails\r\n                                            selectedAttributeList={attire.attributeMetaDataList}\r\n                                            handleCellDataEdit={onAttributeDataChange}\r\n                                            attributeValidationErrors={handleValidationErrorFilter(attributeValidationErrors, attire.TerminalCode)}\r\n                                        ></AttributeDetails>\r\n                                    </Accordion.Content>\r\n                                </Accordion>\r\n                            </ErrorBoundary>\r\n                        </div>\r\n                    ) : null\r\n\r\n            }\r\n\r\n            <div className=\"row pt-3\">\r\n                <div className=\"col-3 pr-1 pb-0\">\r\n                    <h5>{t(\"Loc_AvailableDevices\")}</h5>\r\n                    <Accordion>\r\n                        {\r\n                            modAvailableDevices.map((AvailableDeviceList) =>\r\n                                <Accordion.Content title={AvailableDeviceList.DeviceType} arrowPosition=\"left\">\r\n                                    {AvailableDeviceList.DeviceList.map((deviceList) =>\r\n                                        <div>\r\n                                            <Checkbox label={deviceList.DeviceCode} checked={deviceList.IsAssociated} onChange={(checked) => checkBoxChanged(deviceList.DeviceCode, AvailableDeviceList.DeviceType, checked)} />\r\n                                        </div>\r\n\r\n                                    )}\r\n                                </Accordion.Content>\r\n                            )\r\n                        }\r\n                    </Accordion>\r\n                </div>\r\n                <div className=\"col-9 pb-0\">\r\n                    <h5>{t(\"Loc_AssociatedDevices\")}</h5>\r\n                    <DataTable\r\n                        data={modAssociatedDevices}\r\n                    >\r\n                        <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            key=\"DeviceCode\"\r\n                            field=\"DeviceCode\"\r\n                            header={t(\"Loc_DeviceCode\")}\r\n                            editable={true}\r\n                            sortable={true}\r\n                            editFieldType=\"text\"\r\n                            customEditRenderer={handleCustomEditTextBox}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            key=\"DeviceType\"\r\n                            field=\"DeviceType\"\r\n                            header={t(\"Loc_DeviceType\")}\r\n                            editable={true}\r\n                            sortable={true}\r\n                            editFieldType=\"text\"\r\n                            customEditRenderer={handleCustomEditTextBox}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            key=\"DeviceModel\"\r\n                            field=\"DeviceModel\"\r\n                            header={t(\"Loc_DeviceModel\")}\r\n                            editable={true}\r\n                            sortable={true}\r\n                            editFieldType=\"text\"\r\n                            customEditRenderer={handleCustomEditTextBox}\r\n                        ></DataTable.Column>\r\n\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { emptyLocation, emptyBay } from \"../../../JS/DefaultEntities\";\r\nimport { SiteDetailsUserActions } from \"../../UIBase/Common/SiteDetailsUserActions\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport lodash from \"lodash\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport { locationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { fnSiteView, fnRailSiteView, fnMarineSiteView, functionGroups } from \"../../../JS/FunctionGroups\";\r\nimport BayDetails from \"../../UIBase/Details/BayDetails\";\r\nimport { getKeyByValue } from \"../../../JS/Utilities\";\r\nimport { bayAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass BayDetailsComposite extends Component {\r\n  state = {\r\n    location: {},\r\n    modLocation: {},\r\n    bay: {},\r\n    modBay: {},\r\n    modAssociatedDevices: [],\r\n    modAvailableDevices: [],\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    isDeleteEnabled: false,\r\n    selectedLocationType: \"\",\r\n    checkedDevices: [],\r\n    loadingTypeOptions: [],\r\n    bayTypeOptions: [],\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      locationValidationDef\r\n    ),\r\n    attributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    showDeleteAuthenticationLayout: false,\r\n    showSaveAuthenticationLayout: false,\r\n    tempBay: {},\r\n    tempLocation: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getLoadingTypes();\r\n      this.getBayTypes();\r\n      //this.getDeviceList(this.props.locationtype);\r\n      // this.getLocation(this.props);\r\n      this.getAttributes(this.props);\r\n    } catch (error) {\r\n      console.log(\r\n        \"BayDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        nextProps.LocationCode === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        // this.getLocation(nextProps);\r\n        this.getAttributes(nextProps);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"BayDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(props) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [bayAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.bay\r\n                ),\r\n            },\r\n            () => this.getDeviceList(props) //this.getLocation(props)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  getDeviceList(props) {\r\n    let locationType = props.locationtype;\r\n    locationType =\r\n      locationType === \"Bay\"\r\n        ? Constants.siteViewLocationType.BAY\r\n        : locationType === \"Cluster\"\r\n          ? Constants.siteViewLocationType.CLUSTER\r\n          : Constants.siteViewLocationType.BERTH;\r\n    var terminalCode = this.props.selectedTerminal;\r\n    try {\r\n      axios(\r\n        RestAPIs.GetDeviceList +\r\n        \"?locationType=\" +\r\n        locationType +\r\n        \"&locationInfo=\" +\r\n        \"&terminalCode=\" +\r\n        terminalCode,\r\n\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            Array.isArray(result.EntityResult) &&\r\n            result.EntityResult.length > 0\r\n          )\r\n            this.setState({ modAvailableDevices: result.EntityResult }, () => {\r\n              this.getLocation(props);\r\n            });\r\n          else this.getLocation(props);\r\n        } else {\r\n          this.getLocation(props);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(\"BayDetailsComposite:Error occured on getDeviceList\", err);\r\n    }\r\n  }\r\n\r\n  getLocation(propsResult) {\r\n    try {\r\n      let locationCode = propsResult.selectedlocation;\r\n      let terminalCode = this.props.selectedTerminal;\r\n      if (propsResult.locationtype === \"MarineBay\") {\r\n        this.setState({\r\n          selectedLocationType: Constants.siteViewLocationType.BERTH,\r\n        });\r\n        emptyLocation.LocationType = Constants.siteViewLocationType.BERTH;\r\n        emptyBay.IslandCode = \"\";\r\n        emptyLocation.AvailableDevices = this.state.modAvailableDevices;\r\n      }\r\n      if (propsResult.locationtype === \"Bay\") {\r\n        this.setState({\r\n          selectedLocationType: Constants.siteViewLocationType.BAY,\r\n        });\r\n        emptyLocation.LocationType = Constants.siteViewLocationType.BAY;\r\n        emptyBay.IslandCode = this.props.parentCode;\r\n        emptyLocation.AvailableDevices = this.state.modAvailableDevices;\r\n      }\r\n      if (propsResult.locationtype === \"Cluster\") {\r\n        this.setState({\r\n          selectedLocationType: Constants.siteViewLocationType.CLUSTER,\r\n        });\r\n        emptyLocation.LocationType = Constants.siteViewLocationType.CLUSTER;\r\n        emptyBay.IslandCode = this.props.parentCode;\r\n        emptyLocation.AvailableDevices = this.state.modAvailableDevices;\r\n      }\r\n\r\n      if (propsResult.isClone === true) {\r\n        this.setState(\r\n          {\r\n            modAttributeMetaDataList: [],\r\n            selectedLocationType: emptyLocation.LocationType,\r\n            location: lodash.cloneDeep(emptyLocation),\r\n            modLocation: lodash.cloneDeep(emptyLocation),\r\n            bay: lodash.cloneDeep(emptyBay),\r\n            modBay: lodash.cloneDeep(emptyBay),\r\n            isReadyToRender: true,\r\n            modAssociatedDevices: [],\r\n            modAvailableDevices: lodash.cloneDeep(\r\n              this.state.modAvailableDevices\r\n            ),\r\n            checkedDevices: [],\r\n            isDeleteEnabled: false,\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n          },\r\n          () => {\r\n            this.localNodeAttribute();\r\n          }\r\n        );\r\n        return;\r\n      }\r\n      if (locationCode === undefined || locationCode === \"\") {\r\n        this.setState(\r\n          {\r\n            modAttributeMetaDataList: [],\r\n            location: lodash.cloneDeep(emptyLocation),\r\n            modLocation: lodash.cloneDeep(emptyLocation),\r\n            bay: lodash.cloneDeep(emptyBay),\r\n            modBay: lodash.cloneDeep(emptyBay),\r\n            selectedLocationType: emptyLocation.LocationType,\r\n            modAssociatedDevices: [],\r\n            modAvailableDevices: lodash.cloneDeep(\r\n              emptyLocation.AvailableDevices\r\n            ),\r\n            checkedDevices: [],\r\n            isDeleteEnabled: false,\r\n            isReadyToRender: true,\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n          },\r\n          () => {\r\n            this.localNodeAttribute();\r\n          }\r\n        );\r\n        return;\r\n      }\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.locationCode,\r\n          value: locationCode,\r\n        },\r\n        {\r\n          key: KeyCodes.terminalCode,\r\n          value: terminalCode,\r\n        },\r\n        {\r\n          Key: KeyCodes.locationtype,\r\n          Value: this.props.locationtype,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.locationCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetLocationDetails,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let modAssociatedDevices = lodash.cloneDeep(\r\n            result.EntityResult.AssociatedDevices\r\n          );\r\n\r\n          modAssociatedDevices.forEach((item) => {\r\n            item.DeviceType = getKeyByValue(\r\n              Constants.deviceTypeCode,\r\n              item.DeviceType\r\n            );\r\n          });\r\n\r\n          this.setState({\r\n            selectedLocationType: lodash.cloneDeep(\r\n              result.EntityResult.LocationType\r\n            ),\r\n            isReadyToRender: true,\r\n            location: result.EntityResult,\r\n            modLocation: lodash.cloneDeep(result.EntityResult),\r\n            modAssociatedDevices,\r\n            modAvailableDevices: lodash.cloneDeep(\r\n              result.EntityResult.AvailableDevices\r\n            ),\r\n            checkedDevices: lodash.cloneDeep(\r\n              result.EntityResult.AssociatedDevices\r\n            ),\r\n            isDeleteEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.remove,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n          });\r\n          this.getBay(locationCode);\r\n        } else {\r\n          this.setState({\r\n            selectedLocationType: emptyLocation.LocationType,\r\n            location: lodash.cloneDeep(emptyLocation),\r\n            modLocation: lodash.cloneDeep(emptyLocation),\r\n            bay: lodash.cloneDeep(emptyBay),\r\n            modBay: lodash.cloneDeep(emptyBay),\r\n            isReadyToRender: true,\r\n            modAssociatedDevices: [],\r\n            modAvailableDevices: [],\r\n            checkedDevices: [],\r\n            isDeleteEnabled: false,\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"BayDetailsComposite:Error occured on getLocation\", error);\r\n    }\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modAttributeMetaDataList = [];\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n      var modBay = lodash.cloneDeep(this.state.modBay);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        });\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.bay.forEach(function (attributeMetaData) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue = modBay.Attributes.find((bayAttribute) => {\r\n                return bayAttribute.TerminalCode === terminal;\r\n              });\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modAttributeMetaDataList = [];\r\n      modAttributeMetaDataList = attributesTerminalsList;\r\n      modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modAttributeMetaDataList\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n\r\n      this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"BayDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      this.terminalSelectionChange([this.props.selectedTerminal]);\r\n    } catch (error) {\r\n      console.log(\r\n        \"BayDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getBay(locationCode) {\r\n    let terminalCode = this.props.selectedTerminal;\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.bayCode,\r\n          value: locationCode,\r\n        },\r\n        {\r\n          key: KeyCodes.terminalCode,\r\n          value: terminalCode,\r\n        },\r\n        {\r\n          Key: KeyCodes.locationtype,\r\n          Value: this.props.locationtype,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.bayCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetBayDetails,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              modAttributeMetaDataList: [],\r\n              isReadyToRender: true,\r\n              bay: lodash.cloneDeep(result.EntityResult),\r\n              modBay: lodash.cloneDeep(result.EntityResult),\r\n              isDeleteEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.remove,\r\n                Utilities.getSiteViewFunctionGroup(\r\n                  this.props.transportationtype\r\n                )\r\n              ),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                Utilities.getSiteViewFunctionGroup(\r\n                  this.props.transportationtype\r\n                )\r\n              ),\r\n            },\r\n            () => {\r\n              this.terminalSelectionChange([result.EntityResult.TerminalCode]);\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            bay: lodash.cloneDeep(emptyBay),\r\n            modBay: lodash.cloneDeep(emptyBay),\r\n            isDeleteEnabled: false,\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"BayDetailsComposite:Error occured on getBay\", error);\r\n    }\r\n  }\r\n  getLoadingTypes() {\r\n    axios(\r\n      RestAPIs.GetLoadingType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            var loadingTypeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ loadingTypeOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getLoadingTypes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getLoadingTypes:\", error);\r\n      });\r\n  }\r\n\r\n  getBayTypes() {\r\n    axios(\r\n      RestAPIs.GetBayTypes,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            var bayTypeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ bayTypeOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getBayTypes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getBayTypes:\", error);\r\n      });\r\n  }\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    try {\r\n      let modAssociatedDevices = lodash.cloneDeep(\r\n        this.state.modAssociatedDevices\r\n      );\r\n      modAssociatedDevices[cellData.rowIndex][cellData.field] = newVal;\r\n      this.setState({ modAssociatedDevices });\r\n    } catch (error) {\r\n      console.log(\r\n        \"BayDetailsComposite:Error occured on handleCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors, modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"BayDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      let modLocation = lodash.cloneDeep(this.state.modLocation);\r\n      modLocation[propertyName] = data;\r\n      let modBay = lodash.cloneDeep(this.state.modBay);\r\n      modBay[propertyName] = data;\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      if (modLocation.Active === this.state.location.Active) {\r\n        if (\r\n          this.state.location.Remarks === modLocation.Remarks ||\r\n          modLocation.Remarks === \"\"\r\n        ) {\r\n          validationErrors.Remarks = \"\";\r\n        }\r\n        if (modLocation.Remarks === \"\")\r\n          modLocation.Remarks = this.state.location.Remarks;\r\n      }\r\n      if (propertyName === \"Active\") {\r\n        if (modLocation.Active !== this.state.location.Active) {\r\n          modLocation.Remarks = \"\";\r\n        }\r\n      }\r\n      if (locationValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          locationValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n      this.setState({ validationErrors, modLocation, modBay });\r\n    } catch (error) {\r\n      console.log(\"BayDetailsComposite:Error occured on handleChange\", error);\r\n    }\r\n  };\r\n\r\n  handleCheckboxChanged = (deviceCode, deviceType, checked) => {\r\n    try {\r\n      let modAvailableDevices = lodash.cloneDeep(\r\n        this.state.modAvailableDevices\r\n      );\r\n      var devTypeIndx = modAvailableDevices.findIndex(\r\n        (dev) => dev.DeviceType === deviceType\r\n      );\r\n      if (devTypeIndx !== undefined) {\r\n        var devCodeIndx = modAvailableDevices[devTypeIndx].DeviceList.findIndex(\r\n          (dvCode) => dvCode.DeviceCode === deviceCode\r\n        );\r\n      }\r\n      if (devCodeIndx !== undefined) {\r\n        modAvailableDevices[devTypeIndx].DeviceList[devCodeIndx].IsAssociated =\r\n          checked;\r\n      }\r\n      this.setState({\r\n        modAvailableDevices,\r\n      });\r\n\r\n      let dv = {\r\n        DeviceType: deviceType,\r\n        DeviceCode: deviceCode,\r\n        DeviceModel: null,\r\n      };\r\n\r\n      let checkedDevices = lodash.cloneDeep(this.state.checkedDevices);\r\n\r\n      if (\r\n        checked === true &&\r\n        checkedDevices.filter((dv1) => dv1.DeviceCode === deviceCode).length ===\r\n        0\r\n      ) {\r\n        checkedDevices.push(dv);\r\n        this.setState({\r\n          checkedDevices,\r\n        });\r\n      } else if (\r\n        checked === false &&\r\n        this.state.checkedDevices.filter((dv1) => dv1.DeviceCode === deviceCode)\r\n          .length > 0\r\n      ) {\r\n        checkedDevices = checkedDevices.filter(\r\n          (dv1) => dv1.DeviceCode !== deviceCode\r\n        );\r\n        this.setState({\r\n          checkedDevices,\r\n        });\r\n      }\r\n\r\n      console.log(\"checkeddevices\", this.state.checkedDevices);\r\n    } catch (error) {\r\n      console.log(\r\n        \"BayDetailsComposite:Error occured on handleCheckboxChanged\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modLocation = lodash.cloneDeep(this.state.modLocation);\r\n      modLocation.Active = value;\r\n      if (modLocation.Active !== this.state.location.Active)\r\n        modLocation.Remarks = \"\";\r\n      this.setState({ modLocation });\r\n    } catch (error) {\r\n      console.log(\r\n        \"BayDetailsComposite:Error occured on handleActiveStatusChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n  saveBay = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempBay = lodash.cloneDeep(this.state.tempBay);\r\n      let tempLocation = lodash.cloneDeep(this.state.tempLocation);\r\n\r\n\r\n      this.state.location.LocationCode === \"\"\r\n        ? this.createLocation(tempLocation, tempBay)\r\n        : this.updateLocation(tempLocation, tempBay);\r\n\r\n    } catch (error) {\r\n      console.log(\"BayCompositeDetails : Error in saveBay\");\r\n    }\r\n  };\r\n\r\n\r\n  handleSave = () => {\r\n    try {\r\n      //   this.setState({ saveEnabled: false });\r\n      let modLocation = this.fillDetails();\r\n      let modBay = this.fillBayDetails();\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      if (this.validateSave(modLocation, attributeList)) {\r\n        attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n        modBay.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n\r\n        let showSaveAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempBay = lodash.cloneDeep(modBay);\r\n        let tempLocation = lodash.cloneDeep(modLocation);\r\n        this.setState({ showSaveAuthenticationLayout, tempBay, tempLocation }, () => {\r\n          if (showSaveAuthenticationLayout === false) {\r\n            this.saveBay();\r\n          }\r\n        });\r\n\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"BayDetailsComposite:Error occured on handleSave\", error);\r\n    }\r\n  };\r\n\r\n  createLocation(modLocation, modBay) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.locationCode,\r\n          value: modLocation.LocationCode,\r\n        },\r\n      ];\r\n\r\n      let req = {\r\n        LocationInfo: modLocation,\r\n        BayInfo: modBay,\r\n        isBayRequest: true,\r\n      };\r\n\r\n      let obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.locationCode,\r\n        KeyCodes: keyCode,\r\n        Entity: req,\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: [\r\n          this.state.selectedLocationType === \"Bay\" ||\r\n            this.state.selectedLocationType === \"Cluster\"\r\n            ? this.state.selectedLocationType + \"SavedSuccess\"\r\n            : \"LocationInfo_BerthSaveSuccess\",\r\n        ],\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [this.state.selectedLocationType + \"Code\"],\r\n            keyValues: [modLocation.LocationCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.CreateLocation,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n          this.getLocation({\r\n            selectedlocation: this.state.modLocation.LocationCode,\r\n            selectedTerminal: this.props.selectedTerminal,\r\n            isClone: false,\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n        }\r\n\r\n        this.props.onSaved(this.state.modLocation, \"add\", notification);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"BayDetailsComposite:Error occured on createLocation\", error);\r\n    }\r\n  }\r\n\r\n  createBay(modBay) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.bayCode,\r\n          value: modBay.BayCode,\r\n        },\r\n      ];\r\n\r\n      let obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.bayCode,\r\n        KeyCodes: keyCode,\r\n        Entity: modBay,\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: [\r\n          this.state.selectedLocationType === \"Bay\" ||\r\n            this.state.selectedLocationType === \"Cluster\"\r\n            ? this.state.selectedLocationType + \"SavedSuccess\"\r\n            : \"LocationInfo_BerthSaveSuccess\",\r\n        ],\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\r\n              this.state.selectedLocationType === \"Bay\" ||\r\n                this.state.selectedLocationType === \"Cluster\"\r\n                ? this.state.selectedLocationType + \"Code\"\r\n                : \"LocationInfo_BerthCode\",\r\n            ],\r\n            keyValues: [modBay.BayCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.CreateBay,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n          this.getLocation({\r\n            selectedlocation: this.state.modLocation.LocationCode,\r\n            selectedTerminal: this.props.selectedTerminal,\r\n            isClone: false,\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n        }\r\n        this.props.onSaved(this.state.modLocation, \"add\", notification);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"BayDetailsComposite:Error occured on createBay\", error);\r\n    }\r\n  }\r\n\r\n  updateLocation(modLocation, modBay) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.locationCode,\r\n          value: modLocation.LocationCode,\r\n        },\r\n      ];\r\n\r\n      let req = {\r\n        LocationInfo: modLocation,\r\n        BayInfo: modBay,\r\n        isBayRequest: true,\r\n      };\r\n\r\n      let obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.locationCode,\r\n        KeyCodes: keyCode,\r\n        Entity: req,\r\n      };\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: [this.state.selectedLocationType + \"SavedSuccess\"],\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [this.state.selectedLocationType + \"Code\"],\r\n            keyValues: [modLocation.LocationCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.UpdateLocation,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n          this.getLocation({\r\n            selectedlocation: this.state.modLocation.LocationCode,\r\n            selectedTerminal: this.props.selectedTerminal,\r\n            isClone: false,\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n        }\r\n        this.props.onSaved(this.state.modLocation, \"update\", notification);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"BayDetailsComposite:Error occured on updateLocation\", error);\r\n    }\r\n  }\r\n\r\n  updateBay(modBay) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.bayCode,\r\n          value: modBay.BayCode,\r\n        },\r\n      ];\r\n\r\n      let obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.bayCode,\r\n        KeyCodes: keyCode,\r\n        Entity: modBay,\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: [\r\n          this.state.selectedLocationType === \"Bay\" ||\r\n            this.state.selectedLocationType === \"Cluster\"\r\n            ? this.state.selectedLocationType + \"SavedSuccess\"\r\n            : \"LocationInfo_BerthSaveSuccess\",\r\n        ],\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\r\n              this.state.selectedLocationType === \"Bay\" ||\r\n                this.state.selectedLocationType === \"Cluster\"\r\n                ? this.state.selectedLocationType + \"Code\"\r\n                : \"LocationInfo_BerthCode\",\r\n            ],\r\n            keyValues: [modBay.BayCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.UpdateBay,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n          this.getLocation({\r\n            selectedlocation: this.state.modLocation.LocationCode,\r\n            selectedTerminal: this.props.selectedTerminal,\r\n            isClone: false,\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n        }\r\n        this.props.onSaved(this.state.modLocation, \"update\", notification);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"BayDetailsComposite:Error occured on updateBay\", error);\r\n    }\r\n  }\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modLocation = lodash.cloneDeep(this.state.modLocation);\r\n      let checkedDevices = lodash.cloneDeep(this.state.checkedDevices);\r\n      checkedDevices.forEach((item) => {\r\n        item.TerminalCode = this.props.selectedTerminal;\r\n      });\r\n      modLocation.LocationType = this.state.selectedLocationType;\r\n      modLocation.TerminalCode = this.props.selectedTerminal;\r\n      modLocation.AssociatedDevices = checkedDevices;\r\n\r\n      // modLocation.TerminalCode = this.props.selectedTerminal;\r\n      return modLocation;\r\n    } catch (err) {\r\n      console.log(\"BayDetailsComposite:Error occured on filldetails\", err);\r\n    }\r\n  }\r\n\r\n  fillBayDetails() {\r\n    try {\r\n      let modLocation = lodash.cloneDeep(this.state.modLocation);\r\n      let modBay = lodash.cloneDeep(this.state.modBay);\r\n      modBay.BayCode = modLocation.LocationCode;\r\n      modBay.Name = modLocation.LocationName;\r\n      modBay.TerminalCode = this.props.selectedTerminal;\r\n\r\n      return modBay;\r\n    } catch (err) {\r\n      console.log(\"BayDetailsComposite:Error occured on filldetails\", err);\r\n    }\r\n  }\r\n\r\n  validateSave(modLocation, attributeList) {\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(locationValidationDef).forEach(function (key) {\r\n      if (modLocation[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          locationValidationDef[key],\r\n          modLocation[key]\r\n        );\r\n    });\r\n    if (modLocation.Active !== this.state.location.Active) {\r\n      if (modLocation.Remarks === null || modLocation.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"OriginTerminal_RemarksRequired\";\r\n      }\r\n    }\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: [this.state.selectedLocationType + \"SavedSuccess\"],\r\n      messageResultDetails: [],\r\n    };\r\n    if (modLocation.AssociatedDevices.length === 0) {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [this.state.selectedLocationType + \"Code\"],\r\n        keyValues: [modLocation.LocationCode],\r\n        isSuccess: false,\r\n        errorMessage: \"LocationInfo_DeviceRequired\",\r\n      });\r\n    }\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n    var returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modLocation, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  handleDelete = () => {\r\n    try {\r\n      var deleteLocationKeys = [];\r\n      var BayCode = this.state.modLocation.LocationCode;\r\n      var keyData = {\r\n        keyDataCode: 0,\r\n        ShareHolderCode: \"\",\r\n        KeyCodes: [\r\n          { Key: KeyCodes.bayCode, Value: BayCode },\r\n          { Key: KeyCodes.terminalCode, Value: this.props.selectedTerminal },\r\n          { Key: KeyCodes.locationtype, Value: this.props.locationtype },\r\n        ],\r\n      };\r\n      deleteLocationKeys.push(keyData);\r\n      axios(\r\n        RestAPIs.DeleteBay,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteLocationKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        var isRefreshDataRequire = result.IsSuccess;\r\n        if (\r\n          result.ResultDataList !== null &&\r\n          result.ResultDataList !== undefined\r\n        ) {\r\n          var failedResultsCount = result.ResultDataList.filter(function (res) {\r\n            return !res.IsSuccess;\r\n          }).length;\r\n          if (failedResultsCount === result.ResultDataList.length) {\r\n            isRefreshDataRequire = false;\r\n          } else isRefreshDataRequire = true;\r\n        }\r\n        var notification = Utilities.convertResultsDatatoNotification(\r\n          result,\r\n          [\r\n            (this.state.selectedLocationType === \"Bay\" ||\r\n              this.state.selectedLocationType === \"Cluster\"\r\n              ? this.state.selectedLocationType\r\n              : \"Berth  \") + \" DeletionStatus\",\r\n          ],\r\n          [\"LocationCode\", \"BayCode\"]\r\n        );\r\n\r\n        if (isRefreshDataRequire) {\r\n          this.getLocation({\r\n            selectedlocation: this.state.modLocation.LocationCode,\r\n            selectedTerminal: this.props.selectedTerminal,\r\n            isClone: true,\r\n          });\r\n          // this.deleteLocation();\r\n          this.setState({\r\n            isDeleteEnabled: false,\r\n            showDeleteAuthenticationLayout: false,\r\n          });\r\n        } else {\r\n          this.setState({ isDeleteEnabled: true, showDeleteAuthenticationLayout: false, });\r\n        }\r\n\r\n        notification.messageResultDetails.forEach((messageResult) => {\r\n          if (messageResult.keyFields.length > 0)\r\n            messageResult.keyFields[0] = [\r\n              this.state.selectedLocationType === \"Bay\" ||\r\n                this.state.selectedLocationType === \"Cluster\"\r\n                ? this.state.selectedLocationType + \"Code\"\r\n                : \"LocationInfo_BerthCode\",\r\n            ];\r\n        });\r\n\r\n        this.props.onDelete(this.state.modLocation, \"delete\", notification);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"BayDetailsComposite:Error occured on handleDelete\", error);\r\n    }\r\n  };\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showDeleteAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showDeleteAuthenticationLayout });\r\n      if (showDeleteAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"BayDetailsComposite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showSaveAuthenticationLayout: false,\r\n      showDeleteAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  handleOperation() {\r\n    return this.state.showDeleteAuthenticationLayout ? this.handleDelete : this.saveBay;\r\n  };\r\n\r\n  getFunctionGroupName() {\r\n    if (this.state.selectedLocationType === Constants.siteViewLocationType.CLUSTER)\r\n      return fnRailSiteView;\r\n    else if (this.state.selectedLocationType === Constants.siteViewLocationType.BERTH)\r\n      return fnMarineSiteView\r\n    else\r\n      return fnSiteView\r\n  };\r\n\r\n  getFunctionName() {\r\n    return this.state.showDeleteAuthenticationLayout ? functionGroups.remove :\r\n      this.state.bay.Code === \"\"\r\n        ? functionGroups.add\r\n        : functionGroups.modify\r\n  };\r\n\r\n  render() {\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"DriverInfo_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modLocation.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modLocation.LastUpdatedTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_LastActive\",\r\n        fieldValue:\r\n          this.state.modLocation.LastActiveTime !== undefined &&\r\n            this.state.modLocation.LastActiveTime !== null\r\n            ? new Date(\r\n              this.state.modLocation.LastActiveTime\r\n            ).toLocaleDateString() +\r\n            \" \" +\r\n            new Date(\r\n              this.state.modLocation.LastActiveTime\r\n            ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_CreatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.modLocation.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modLocation.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <TMDetailsHeader\r\n                entityCode={this.state.location.LocationCode}\r\n                newEntityName={\r\n                  this.state.selectedLocationType === \"Bay\" ||\r\n                    this.state.selectedLocationType === \"Cluster\"\r\n                    ? \"New\" + this.state.selectedLocationType\r\n                    : t(\"LocationInfo_NewBerth\")\r\n                }\r\n                popUpContents={popUpContents}\r\n              ></TMDetailsHeader>\r\n            )}\r\n          </TranslationConsumer>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <BayDetails\r\n            location={this.state.location}\r\n            modLocation={this.state.modLocation}\r\n            bay={this.state.bay}\r\n            modBay={this.state.modBay}\r\n            selectedLocationType={this.state.selectedLocationType}\r\n            modAvailableDevices={this.state.modAvailableDevices}\r\n            modAssociatedDevices={this.state.modAssociatedDevices}\r\n            listOptions={{\r\n              loadingTypeOptions: this.state.loadingTypeOptions,\r\n              bayTypeOptions: this.state.bayTypeOptions,\r\n            }}\r\n            validationErrors={this.state.validationErrors}\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            attributeMetaDataList={this.state.attributeMetaDataList}\r\n            onAttributeDataChange={this.handleAttributeDataChange}\r\n            onFieldChange={this.handleChange}\r\n            checkBoxChanged={this.handleCheckboxChanged}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n          ></BayDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <SiteDetailsUserActions\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            handleSave={this.handleSave}\r\n            handleDelete={this.authenticateDelete}\r\n            saveEnabled={this.state.saveEnabled}\r\n            isDeleteEnabled={this.state.isDeleteEnabled}\r\n          ></SiteDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showDeleteAuthenticationLayout || this.state.showSaveAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={this.getFunctionName()}\r\n            functionGroup={this.getFunctionGroupName()}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleOperation()}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BayDetailsComposite);\r\n"],"names":["BayDetails","_ref","location","modLocation","bay","modBay","modAvailableDevices","modAssociatedDevices","selectedLocationType","validationErrors","checkBoxChanged","onFieldChange","listOptions","handleCellDataEdit","onActiveStatusChange","attributeValidationErrors","modAttributeMetaDataList","onAttributeDataChange","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","t","useTranslation","handleCustomEditTextBox","cellData","_jsx","Input","fluid","value","rowIndex","field","onChange","reserveSpace","_jsxs","className","children","LocationCode","label","indicator","disabled","data","error","LocationName","Select","placeholder","BayType","options","bayTypeOptions","search","noResultsMessage","MaximumQueue","BayPriority","IslandCode","VehicleSpecificType","text","LoadingType","loadingTypeOptions","Description","Active","Remarks","Checkbox","checked","IsVolumeBased","EnabledForBayAllocation","length","map","attire","ErrorBoundary","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","AvailableDeviceList","DeviceType","arrowPosition","DeviceList","deviceList","DeviceCode","IsAssociated","DataTable","Column","header","editable","sortable","editFieldType","customEditRenderer","BayDetailsComposite","Component","constructor","arguments","state","isReadyToRender","saveEnabled","isDeleteEnabled","checkedDevices","Utilities","locationValidationDef","showDeleteAuthenticationLayout","showSaveAuthenticationLayout","tempBay","tempLocation","newVal","lodash","this","setState","console","log","handleAttributeDataChange","attribute","matchedAttributes","matchedAttributesList","filter","modattribute","Array","isArray","Code","DefaultValue","forEach","handleChange","propertyName","undefined","handleCheckboxChanged","deviceCode","deviceType","devTypeIndx","findIndex","dev","devCodeIndx","dvCode","dv","DeviceModel","dv1","push","handleActiveStatusChange","saveBay","createLocation","updateLocation","handleSave","fillDetails","fillBayDetails","attributeList","validateSave","Attributes","props","userDetails","EntityResult","IsWebPortalUser","handleDelete","deleteLocationKeys","BayCode","keyData","keyDataCode","ShareHolderCode","KeyCodes","Key","Value","selectedTerminal","locationtype","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","isRefreshDataRequire","IsSuccess","ResultDataList","res","notification","getLocation","selectedlocation","isClone","messageResultDetails","messageResult","keyFields","onDelete","authenticateDelete","handleAuthenticationClose","componentDidMount","IsArchived","getLoadingTypes","getBayTypes","getAttributes","componentWillReceiveProps","nextProps","Object","keys","key","bayAttributeEntity","getDeviceList","locationType","Constants","BAY","CLUSTER","BERTH","terminalCode","err","propsResult","locationCode","emptyLocation","LocationType","emptyBay","AvailableDevices","parentCode","FunctionsList","functionGroups","add","transportationtype","localNodeAttribute","keyCode","obj","AssociatedDevices","item","getKeyByValue","remove","modify","getBay","terminalSelectionChange","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","bayAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","ErrorList","catch","req","LocationInfo","BayInfo","isBayRequest","Entity","messageType","message","keyValues","isSuccess","errorMessage","onSaved","createBay","updateBay","Name","returnValue","values","every","handleOperation","getFunctionGroupName","fnRailSiteView","fnMarineSiteView","fnSiteView","getFunctionName","render","popUpContents","fieldName","fieldValue","Date","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","LastActiveTime","CreatedTime","TranslationConsumer","TMDetailsHeader","entityCode","newEntityName","SiteDetailsUserActions","isEnterpriseNode","IsEnterpriseNode","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleClose","LoadingPage","connect","getUserDetails","TokenAuth"],"sourceRoot":""}