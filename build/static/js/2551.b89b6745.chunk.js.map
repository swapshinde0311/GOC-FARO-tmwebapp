{"version":3,"file":"static/js/2551.b89b6745.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/UIBase/Details/CustomerInventoryDetails.jsx","Components/Composite/Details/CustomerInventoryDetailsComposite.jsx","Components/Composite/Summary/CustomerInventorySummaryComposite.jsx","Components/Composite/Entity/CustomerInventoryComposite.jsx","JS/functionalUtilities.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { DatePicker, Button } from \"@scuf/common\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nCustomerInventoryDetails.propTypes = {\r\n    customerCode: PropTypes.string.isRequired,\r\n    baseproductCode: PropTypes.string.isRequired,\r\n    inventorySummaryInfo : PropTypes.object.isRequired,\r\n    dateRange: PropTypes.object.isRequired,\r\n    handleDateTextChange: PropTypes.func.isRequired,\r\n    handleRangeSelect: PropTypes.func.isRequired,\r\n    dateError: PropTypes.string.isRequired,\r\n    closedReceipt: PropTypes.array.isRequired,\r\n    closedDispatch: PropTypes.array.isRequired,\r\n    activeDispatch: PropTypes.array.isRequired,\r\n    handleLoadInventory: PropTypes.func.isRequired,\r\n    pageSize: PropTypes.number,\r\n    totalUnloadedQty: PropTypes.number,\r\n    totalLoadedQty: PropTypes.number,\r\n     totalBlockedQty: PropTypes.number,\r\n}\r\n\r\nCustomerInventoryDetails.defaultProps = {\r\n};\r\n\r\nexport function CustomerInventoryDetails({\r\n    customerCode,\r\n    baseproductCode,\r\n    inventorySummaryInfo,\r\n    dateRange,\r\n    handleDateTextChange,\r\n    handleRangeSelect,\r\n    dateError,\r\n    closedReceipt,\r\n    closedDispatch,\r\n    activeDispatch,\r\n    handleLoadInventory,\r\n    pageSize,\r\n    totalUnloadedQty,\r\n    totalLoadedQty,\r\n    totalBlockedQty\r\n}) {\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div>\r\n                <div className=\"headerContainer\">\r\n                    <div className=\"row headerSpacing\">\r\n                        <div className=\"col paddingHeaderItemLeft\">\r\n                            <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {t(\"CustomerInventory_Title\").replace(\"{0}\",customerCode).replace(\"{1}\",baseproductCode)}\r\n              </span>\r\n                        </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"detailsContainer\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-12 col-lg-12\">\r\n                                <h5>{t(\"CustomerInventory_QtyAsOfNow\") + \": \"+inventorySummaryInfo.GrossAvailableQty +\"\"+inventorySummaryInfo.QuantityUOM}</h5>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\" style={{marginLeft:\"1px\"}}>\r\n                            <div className=\"dateRangeContainer\">\r\n                            <div className=\"dateRangeMargin\">\r\n            <DatePicker\r\n              type=\"daterange\"\r\n              closeOnSelection={true}\r\n              error={t(dateError)}\r\n              displayFormat={getCurrentDateFormat()}\r\n              rangeValue={dateRange}\r\n              onTextChange={handleDateTextChange}\r\n              onRangeSelect={handleRangeSelect}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"dateSearch\">\r\n                                <Button content={t(\"ProductAllocation_Go\")}  onClick={handleLoadInventory} />\r\n                               \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row customerInventoryGridRow\">\r\n                            <div className=\"col-12 col-md-12 col-lg-4\">\r\n                                {closedReceipt.length > 0 ?\r\n                                    <h5>{t(\"CustomerInventory_ClosedReceipts\") + \" (\" + t(\"CustomerInventory_TotalUnloadedQty\") +\" : \"+ totalUnloadedQty + inventorySummaryInfo.QuantityUOM + \")\"}</h5> :\r\n                                    <h5>{t(\"CustomerInventory_ClosedReceipts\")}</h5>\r\n                                }\r\n                                     <div className=\"tableScroll  flexRelative\">\r\n                                    <DataTable\r\n                                        data={closedReceipt}\r\n                                     search={false}>\r\n                                        <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"ReceiptCode\"\r\n                                field=\"ReceiptCode\"\r\n                                header={t(\"Report_ReceiptCode\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                        <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"UnloadedTime\"\r\n                                field=\"UnloadedTime\"\r\n                                header={t(\"UnloadedDate\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                        <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"PlannedQuantity\"\r\n                                field=\"PlannedQuantity\"\r\n                                header={t(\"ViewReceipt_Quantity\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                        <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"UnloadedQuantity\"\r\n                                field=\"UnloadedQuantity\"\r\n                                header={t(\"UnLoadingInfo_UnloadQuantity\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                         {Array.isArray(closedReceipt) &&\r\n                                    closedReceipt.length > pageSize ? (\r\n                      <DataTable.Pagination />) : (\"\")}\r\n                                    </DataTable>\r\n                                    </div>\r\n                               \r\n                            </div>\r\n                            <div className=\"col-12 col-md-12 col-lg-4\">\r\n                                 {closedDispatch.length > 0 ?\r\n                                    <h5>{t(\"CustomerInventory_ClosedDispatches\") + \" (\" + t(\"CustomerInventory_TotalLoadedQty\") +\" : \"+ totalLoadedQty + inventorySummaryInfo.QuantityUOM + \")\"}</h5> :\r\n                                     <h5>{t(\"CustomerInventory_ClosedDispatches\")}</h5>\r\n                                }\r\n                                <div className=\"tableScroll  flexRelative\">\r\n                                    <DataTable\r\n                                    data={closedDispatch}\r\n                                        search={false}>\r\n                                             <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"DispatchCode\"\r\n                                field=\"DispatchCode\"\r\n                                header={t(\"PipelineDispatch_DispatchCode\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                        <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"LoadedTime\"\r\n                                field=\"LoadedTime\"\r\n                                header={t(\"ShipmentByCompartmentList_LoadedDate\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                        <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"PlannedQuantity\"\r\n                                field=\"PlannedQuantity\"\r\n                                header={t(\"ViewReceipt_Quantity\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                        <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"LoadedQuantity\"\r\n                                field=\"LoadedQuantity\"\r\n                                header={t(\"ShipmentOrder_LoadedQuantity\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                         {Array.isArray(closedDispatch) &&\r\n                                    closedDispatch.length > pageSize ? (\r\n                      <DataTable.Pagination />) : (\"\")}\r\n                                    </DataTable>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"col-12 col-md-12 col-lg-4\">\r\n                                {activeDispatch.length > 0 ?\r\n                                    <h5>{t(\"CustomerInventory_ActiveDispatches\") + \" (\" + t(\"CustomerInventory_TotalBlockedQty\") +\" : \"+ totalBlockedQty + inventorySummaryInfo.QuantityUOM + \")\"}</h5> :\r\n                                      <h5>{t(\"CustomerInventory_ActiveDispatches\")}</h5>\r\n                                }\r\n                                <div className=\"tableScroll flexRelative\">\r\n                                    <DataTable\r\n                                    data={activeDispatch}\r\n                                        search={false}>\r\n                                         <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"DispatchCode\"\r\n                                field=\"DispatchCode\"\r\n                                header={t(\"PipelineDispatch_DispatchCode\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                         <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"ScheduledDate\"\r\n                                field=\"ScheduledDate\"\r\n                                header={t(\"ShipmentProdDetail_ScheduledDate\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                         <DataTable.Column\r\n                                className=\"compColHeight\"\r\n                                key=\"PlannedQuantity\"\r\n                                field=\"PlannedQuantity\"\r\n                                header={t(\"ProductAllocationItemInfo_BlockedQty\")}\r\n                                editFieldType=\"text\"\r\n                                        ></DataTable.Column>\r\n                                             {Array.isArray(activeDispatch) &&\r\n                                    activeDispatch.length > pageSize ? (\r\n                      <DataTable.Pagination />) : (\"\")}\r\n                                    </DataTable>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row\" style={{ marginLeft: \"1px\" }}>\r\n                            <div className=\"dateRangeContainer\">\r\n                                {t(\"CustomerInventory_LegendContent\")}\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { CustomerInventoryDetails } from \"../../UIBase/Details/CustomerInventoryDetails\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TRANTYPE_CUSTOMERTRANSFER } from \"../../../JS/Constants\";\r\n\r\n\r\nclass CustomerInventoryDetailsComposite extends Component {\r\n    state = {\r\n         isReadyToRender: false,\r\n         inventorySummaryInfo:{},\r\n         fromDate: new Date(),\r\n         toDate: new Date(),\r\n         dateError: \"\",\r\n         closedReceipt: [],\r\n         closedDispatch: [],\r\n         activeDispatch:[],\r\n        totalUnloadedQty: \"\",\r\n        totalLoadedQty: \"\",\r\n        totalBlockedQty: \"\",\r\n    };\r\n    \r\n  componentDidMount() {\r\n      try {\r\n          this.getCustomerInventoryDetails();\r\n    } catch (error) {\r\n      console.log(\"CustomerInventoryDetailsComposite:Error occured on componentDidMount\",error);\r\n    }\r\n    }\r\n    \r\n    getCustomerInventoryDetails() {\r\n      try {\r\n let fromDate = new Date(this.state.fromDate);\r\n      let toDate = new Date(this.state.toDate);\r\n      fromDate.setHours(0, 0, 0);\r\n      toDate.setHours(23, 59, 59);\r\nlet obj = {\r\n        StartRange: fromDate,\r\n        EndRange: toDate,\r\n        BaseProductCode: this.props.baseproductCode,\r\n        CustomerCode: this.props.customerCode,\r\n        ShareholderCode: this.props.selectedShareholder,\r\n      };\r\n    axios(\r\n      RestAPIs.GetCustomerInventoryDetails,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n           var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n              let summaryInfo = {};\r\n              let closedReceipt = [];\r\n              let closedDispatch = [];\r\n              let activeDispatch = [];\r\n              let totalUnloadedQty = 0;\r\n              let totalLoadedQty = 0;\r\n              let totalBlockedQty = 0;\r\n              if (Array.isArray(result.EntityResult.Table)) {\r\n                  summaryInfo = result.EntityResult.Table[0];\r\n              }\r\n               if (Array.isArray(result.EntityResult.Table1)) {\r\n                   result.EntityResult.Table1.map(function (item) {\r\n                        totalUnloadedQty += parseFloat(item.UnloadedQuantity);\r\n                       item.UnloadedTime = new Date(item.UnloadedTime).toLocaleDateString();\r\n                       item.PlannedQuantity = item.PlannedQuantity  + \" \" + item.QuantityUOM;\r\n                       item.UnloadedQuantity = item.UnloadedQuantity + \" \" + item.QuantityUOM;\r\n                       if (item.TransportationType === TRANTYPE_CUSTOMERTRANSFER)\r\n                           item.ReceiptCode = item.ReceiptCode + \" *\";\r\n                   })\r\n                  closedReceipt = result.EntityResult.Table1;\r\n              }\r\n              if (Array.isArray(result.EntityResult.Table2)) {\r\n                  result.EntityResult.Table2.map(function (item) {\r\n                       totalLoadedQty += parseFloat(item.LoadedQuantity);\r\n                       item.LoadedTime = new Date(item.LoadedTime).toLocaleDateString();\r\n                       item.PlannedQuantity = item.PlannedQuantity + \" \" + item.QuantityUOM;\r\n                       item.LoadedQuantity = item.LoadedQuantity + \" \" + item.QuantityUOM;\r\n                       if (item.TransportationType === TRANTYPE_CUSTOMERTRANSFER)\r\n                           item.DispatchCode = item.DispatchCode + \" *\";\r\n                   })\r\n                  closedDispatch = result.EntityResult.Table2;\r\n              }\r\n              if (Array.isArray(result.EntityResult.Table3)) {\r\n                  result.EntityResult.Table3.map(function (item) {\r\n                       totalBlockedQty += parseFloat(item.PlannedQuantity);\r\n                       item.ScheduledDate = new Date(item.ScheduledDate).toLocaleDateString();\r\n                       item.PlannedQuantity = item.PlannedQuantity + \" \" + item.QuantityUOM;\r\n                   })\r\n                  activeDispatch = result.EntityResult.Table3;\r\n              }\r\n               this.setState({ isReadyToRender: true,inventorySummaryInfo:summaryInfo,closedReceipt:closedReceipt,\r\n                   closedDispatch: closedDispatch, activeDispatch: activeDispatch, totalUnloadedQty: totalUnloadedQty,\r\n               totalLoadedQty:totalLoadedQty, totalBlockedQty:totalBlockedQty});\r\n        } else {\r\n           this.setState({ isReadyToRender: true,inventorySummaryInfo:[],closedReceipt:[],closedDispatch:[],activeDispatch:[] });\r\n          console.log(\"Error in getCustomerInventoryDetails:\", result.ErrorList);\r\n        }\r\n      }).catch((error) => {\r\n        this.setState({ isReadyToRender: true,inventorySummaryInfo:[],closedReceipt:[],closedDispatch:[],activeDispatch:[] });\r\n        console.log(\"Error while getCustomerInventoryDetails:\", error);\r\n      });\r\n       } catch (error) {\r\n        console.log(\"CustomerInventoryDetailsComposite:Error occured on getCustomerInventoryDetails\",error);\r\n      }\r\n    }\r\n\r\n     handleRangeSelect = ({ to, from }) => {\r\n    if (to !== undefined) this.setState({ toDate: to });\r\n    if (from !== undefined) this.setState({ fromDate: from });\r\n    };\r\n    \r\n     handleDateTextChange = (value, error) => {\r\n    if (value === \"\")\r\n      this.setState({ dateError: \"\", toDate: \"\", fromDate: \"\" });\r\n    if (error !== null && error !== \"\")\r\n      this.setState({\r\n        dateError: \"Common_InvalidDate\",\r\n        toDate: \"\",\r\n        fromDate: \"\",\r\n      });\r\n    else {\r\n      this.setState({ dateError: \"\", toDate: value.to, fromDate: value.from });\r\n    }\r\n  };\r\n\r\n    handleLoadInventory = () => {\r\n        let error = Utilities.validateDateRange(\r\n      this.state.toDate,\r\n      this.state.fromDate\r\n        );\r\n        if (error !== \"\") {\r\n      this.setState({ dateError: error });\r\n    } else {\r\n      this.setState({ dateError: \"\",isReadyToRender: false });\r\n      this.getCustomerInventoryDetails();\r\n    }\r\n  }\r\n\r\n    render() {\r\n        return this.state.isReadyToRender ? (\r\n            <div>\r\n                <ErrorBoundary>\r\n                    <CustomerInventoryDetails\r\n                        customerCode={this.props.customerCode}\r\n                        baseproductCode = {this.props.baseproductCode}\r\n                        inventorySummaryInfo={this.state.inventorySummaryInfo}\r\n                        dateRange = {{\r\n                                from: this.state.fromDate,\r\n                                to: this.state.toDate,\r\n                        }}\r\n                        dateError={this.state.dateError}\r\n                        handleDateTextChange={this.handleDateTextChange}\r\n                        handleRangeSelect={this.handleRangeSelect}\r\n                        closedReceipt={this.state.closedReceipt}\r\n                        closedDispatch={this.state.closedDispatch}\r\n                        activeDispatch={this.state.activeDispatch}\r\n                        handleLoadInventory={this.handleLoadInventory}\r\n                        pageSize={this.props.userDetails.EntityResult.PageAttibutes.WebPortalListPageSize}\r\n                        totalUnloadedQty={this.state.totalUnloadedQty}\r\n                        totalLoadedQty={this.state.totalLoadedQty}\r\n                        totalBlockedQty = {this.state.totalBlockedQty}\r\n                    >\r\n                    </CustomerInventoryDetails>\r\n                    <div className=\"row\">\r\n              <div className=\"col col-lg-8\" style={{ marginTop: \"1%\" }}>\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <Button\r\n                      className=\"backButton\"\r\n                      onClick={this.props.onBack}\r\n                      content={t(\"Back\")}\r\n                    ></Button>\r\n                  )}\r\n                </TranslationConsumer>\r\n              </div>\r\n            </div>\r\n                </ErrorBoundary>\r\n            </div>\r\n        ): (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CustomerInventoryDetailsComposite);\r\n\r\nCustomerInventoryDetailsComposite.propTypes = {\r\n  noOfSignificantDigits :  PropTypes.number.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { Icon,Input,Pagination } from \"@scuf/common\";\r\n\r\nCustomerInventorySummaryComposite.propTypes = {\r\n    inventoryData: PropTypes.array.isRequired,\r\n    detailsExpand: PropTypes.func.isRequired,\r\n    handleSearchChange: PropTypes.func.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    itemsPerPage: PropTypes.number.isRequired,\r\n    pageIndex: PropTypes.number.isRequired, \r\n    totalItem: PropTypes.number.isRequired, \r\n    pageChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport function CustomerInventorySummaryComposite({\r\n    inventoryData,\r\n    detailsExpand,\r\n    handleSearchChange,\r\n    pageSize,\r\n    itemsPerPage,\r\n    pageIndex,\r\n    totalItem,\r\n    pageChange\r\n}) {\r\n    const [t] = useTranslation();\r\n    const expanderTemplate = (customerCode,data) => {\r\n        return (\r\n      <div onClick={() => detailsExpand(customerCode,data)} className=\"compartmentIcon gridButtonFontColor\">\r\n        <ErrorBoundary>\r\n          <Icon root=\"common\" name={\"ellipsis-horizontal\"} className=\"margin_l10\" />\r\n        </ErrorBoundary>\r\n        </div>\r\n    );\r\n  };\r\n\r\n    return (\r\n        <div className=\"detailsContainer\">\r\n            <div className=\"row\">\r\n                     <div className=\"col-12 col-md-3 col-lg-3\">\r\n                <Input className=\"input-example\" placeholder={t(\"LoadingDetailsView_SearchGrid\")} onChange={handleSearchChange} search={true} />\r\n                </div> \r\n                <div className=\"col-12 col-md-3 col-lg-3 customerInventoryPagination\">\r\n                    {totalItem > itemsPerPage ? (\r\n                     <Pagination\r\n                        totalItems={totalItem}\r\n                    itemsPerPage={itemsPerPage}\r\n                           activePage={pageIndex}\r\n                           onPageChange={(page) => pageChange(page)}>\r\n                    </Pagination>\r\n                ):(\"\")}\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {inventoryData.length > 0 ? (inventoryData.map(function (item) {\r\n                    return (\r\n                        <ErrorBoundary>\r\n                <div className=\"col-12 col-md-6 col-lg-4 col-sm-12\">\r\n                 <h4>{item.CustomerCode}</h4>\r\n                            <div className=\"tableScroll  flexRelative\">\r\n                <DataTable\r\n                    data={item.ProductList}\r\n                search={false}>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"BaseProductCode\"\r\n              field=\"BaseProductCode\"\r\n              header={t(\"BaseProductInfo_BaseProdCode\")}\r\n                    ></DataTable.Column>\r\n                     <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"Quantity\"\r\n              field=\"Quantity\"\r\n              header={t(\"CustomerInventory_AvailableQty\")}\r\n                                        ></DataTable.Column>\r\n                                        <DataTable.Column\r\n                      className=\"compColHeight\"\r\n                      initialWidth=\"40px\"\r\n            renderer={(data) => expanderTemplate(item.CustomerCode,data)}\r\n                    />\r\n                    </DataTable>\r\n                    </div>\r\n                        </div>\r\n                        </ErrorBoundary>)\r\n            }\r\n                )) : <div style={{marginLeft:\"1px\"}}>{(t(\"CustomerInventory_NoRecordsFound\"))}</div>}\r\n                </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { CustomerInventorySummaryComposite } from \"../Summary/CustomerInventorySummaryComposite\";\r\nimport  CustomerInventoryDetailsComposite from \"../Details/CustomerInventoryDetailsComposite\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport lodash from \"lodash\";\r\nimport Error from \"../../Error\";\r\n\r\nconst pageSize = 6;\r\nclass CustomerInventoryComposite extends Component {\r\n  state = {\r\n    data:[],\r\n    selectedShareholder: \"\",\r\n    customerCode: \"\",\r\n    baseproductCode:\"\",\r\n    isReadyToRender: false,\r\n    isDetails: \"false\",\r\n    operationsVisibilty: { shareholder: true },\r\n    searchResult: \"\",\r\n    noOfSignificantDigits: 0,\r\n    isEnable: true,\r\n    pageIndex: 1,\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n       this.getLookUpData();\r\n      this.setState({ selectedShareholder: this.props.userDetails.EntityResult.PrimaryShareholder });\r\n      this.getSignificantDigits();\r\n      \r\n    } catch (error) {\r\n      console.log(\"CustomerInventoryComposite:Error occured on ComponentDidMount\",error);\r\n    }\r\n  }\r\n  getCustomerInventoryList(shareholder) {\r\n     axios(\r\n        RestAPIs.GetCustomerInventoryList + \"?ShareholderCode=\" + shareholder,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n       .then((response) => {\r\n          let noOfSignificantDigits = lodash.cloneDeep(this.state.noOfSignificantDigits)\r\n          var result = response.data;\r\n         if (result.IsSuccess === true) {\r\n           if (Array.isArray(result.EntityResult)) {\r\n             result.EntityResult.map(function (product) {\r\n               product.ProductList.map(function(item) {\r\n                 item.Quantity = Math.round(item.Quantity, noOfSignificantDigits).toString()+\" \"+item.QuantityUOM;\r\n               })\r\n             })\r\n                this.setState({ data: result.EntityResult, isReadyToRender: true });\r\n            }\r\n          } else {\r\n            this.setState({ data: [], isReadyToRender: true });\r\n            console.log(\"Error in getCustomerInventoryList:\", result.ErrorList);\r\n          }\r\n        }) .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error while getCustomerInventoryList:\", error);\r\n        });\r\n  }\r\n\r\n   handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      this.setState({ selectedShareholder: shareholder,isReadyToRender: false});\r\n      this.getCustomerInventoryList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerInventoryComposite:Error occured on handleShareholderSelectionChange\",error);\r\n    }\r\n  };\r\n\r\n  detailsExpand = (customerCode, data) => {\r\n    var { operationsVisibilty } = { ...this.state };\r\n     operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: \"true\",\r\n        customerCode: customerCode,\r\n        baseproductCode: data.rowData.BaseProductCode,\r\n        operationsVisibilty\r\n      });\r\n  }\r\n\r\n   handleSearchChange = lodash.debounce((value) => {\r\n    const searchResult = value;\r\n    this.setState({ searchResult });\r\n  },100\r\n  )\r\n\r\n  handleBack = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n       operationsVisibilty.shareholder = true;\r\n        this.setState({\r\n        isDetails: \"false\",\r\n        isReadyToRender: false,\r\n      });\r\n      this.getCustomerInventoryList(this.state.selectedShareholder);\r\n    } catch (error) {\r\n      console.log(\"CustomerInventoryComposite:Error occured on handleBack\", error);\r\n    }\r\n  }\r\n\r\n   getSignificantDigits() {\r\n      axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=Common\",\r\n        Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n      )\r\n        .then((response) => {\r\n          const result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (result.EntityResult.NumberOfSignificantDigits !== undefined &&\r\n              result.EntityResult.NumberOfSignificantDigits !== null) {\r\n              this.setState({\r\n                noOfSignificantDigits: Utilities.convertStringtoDecimal(result.EntityResult.NumberOfSignificantDigits),\r\n              });\r\n            }\r\n          } else {\r\n            console.log(\"Error in getSignificantDigits: \", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"CustomerInventoryComposite: Error occurred on getSignificantDigits\",error);\r\n        });\r\n  }\r\n\r\n  getLookUpData() {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=CustomerInventory\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let isEnable = true;\r\n          if (result.EntityResult.Enabled === \"False\") {\r\n            isEnable = false;\r\n          }\r\n          this.setState({ isEnable });\r\n          if (isEnable) {\r\n            this.getCustomerInventoryList(this.props.userDetails.EntityResult.PrimaryShareholder);\r\n          }\r\n        } else {\r\n          console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"CustomerInventoryComposite: Error occurred on getLookUpData\",error);\r\n      });\r\n  }\r\n  \r\n  pageChange = (page) => {\r\n    this.setState({ pageIndex: page });\r\n  }\r\n\r\n  render() {\r\n    let { searchResult, data } = this.state;\r\n    let searchResults = data.filter(values => {\r\n      return values.CustomerCode.toLowerCase().includes(searchResult.toLowerCase()) || values.ProductList.some(function (subElement) {\r\n        return subElement.BaseProductCode.toLowerCase().includes(searchResult.toLowerCase())\r\n      });\r\n    });\r\n\r\n    let customerInventoryData = [];\r\n     let pageIndex = lodash.cloneDeep(this.state.pageIndex);\r\n    if (pageSize >= searchResults.length) {\r\n      pageIndex = 1;\r\n    }\r\n     let firstIndexInPage = (pageIndex - 1) * pageSize;\r\n    let lastIndexInPage = firstIndexInPage + pageSize;\r\n    if (lastIndexInPage >= searchResults.length) {\r\n      lastIndexInPage = searchResults.length;\r\n    }\r\n    customerInventoryData = searchResults.slice(firstIndexInPage,lastIndexInPage);\r\n\r\n    return (\r\n      <div>\r\n        {this.state.isEnable ? (\r\n          <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            breadcrumbItem={this.props.activeItem}\r\n            shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n            selectedShareholder={this.state.selectedShareholder}\r\n            onShareholderChange={this.handleShareholderSelectionChange}\r\n            addVisible={false}\r\n            deleteVisible={false}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        ):\"\"\r\n        }\r\n        {\r\n          this.state.isDetails === \"true\" ? (\r\n            <ErrorBoundary>\r\n              <CustomerInventoryDetailsComposite\r\n               customerCode={this.state.customerCode}\r\n               baseproductCode={this.state.baseproductCode}\r\n                selectedShareholder={this.state.selectedShareholder}\r\n                onBack={this.handleBack}\r\n                noOfSignificantDigits = {this.state.noOfSignificantDigits}\r\n              >\r\n              </CustomerInventoryDetailsComposite>\r\n            </ErrorBoundary>\r\n          ) : this.state.isReadyToRender ? (\r\n              <ErrorBoundary>\r\n                <CustomerInventorySummaryComposite\r\n                  inventoryData={customerInventoryData}\r\n                  detailsExpand={this.detailsExpand}\r\n                  handleSearchChange={this.handleSearchChange}\r\n                  pageSize={this.props.userDetails.EntityResult.PageAttibutes.WebPortalListPageSize}\r\n                  itemsPerPage={pageSize}\r\n                  pageIndex={this.state.pageIndex}\r\n                  totalItem={searchResults.length}\r\n                pageChange={this.pageChange}>\r\n                </CustomerInventorySummaryComposite>\r\n              </ErrorBoundary>\r\n          ):( <>\r\n            {this.state.isEnable ? (\r\n              <LoadingPage message=\"Loading\"></LoadingPage>\r\n            ) : (\r\n              <Error errorMessage=\"CustomerInventoryFeatureNotEnabled\"></Error>\r\n            )}\r\n          </>)\r\n        }\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CustomerInventoryComposite);\r\n\r\nCustomerInventoryComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","CustomerInventoryDetails","customerCode","baseproductCode","inventorySummaryInfo","dateRange","handleDateTextChange","handleRangeSelect","dateError","closedReceipt","closedDispatch","activeDispatch","handleLoadInventory","pageSize","totalUnloadedQty","totalLoadedQty","totalBlockedQty","margin","replace","GrossAvailableQty","QuantityUOM","DatePicker","closeOnSelection","error","displayFormat","getCurrentDateFormat","rangeValue","onTextChange","onRangeSelect","reserveSpace","DataTable","data","search","Column","field","header","editFieldType","Array","isArray","Pagination","CustomerInventoryDetailsComposite","Component","constructor","arguments","state","isReadyToRender","fromDate","Date","toDate","to","from","this","setState","getCustomerInventoryDetails","componentDidMount","console","log","setHours","obj","StartRange","EndRange","BaseProductCode","props","CustomerCode","ShareholderCode","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","summaryInfo","EntityResult","Table","Table1","parseFloat","UnloadedQuantity","UnloadedTime","toLocaleDateString","PlannedQuantity","TransportationType","TRANTYPE_CUSTOMERTRANSFER","ReceiptCode","Table2","LoadedQuantity","LoadedTime","DispatchCode","Table3","ScheduledDate","ErrorList","catch","render","userDetails","PageAttibutes","WebPortalListPageSize","onBack","LoadingPage","message","connect","getUserDetails","TokenAuth","CustomerInventorySummaryComposite","inventoryData","detailsExpand","handleSearchChange","itemsPerPage","pageIndex","totalItem","pageChange","useTranslation","Input","totalItems","activePage","onPageChange","page","ProductList","initialWidth","renderer","expanderTemplate","CustomerInventoryComposite","isDetails","searchResult","noOfSignificantDigits","isEnable","handleShareholderSelectionChange","getCustomerInventoryList","rowData","lodash","handleBack","getLookUpData","PrimaryShareholder","getSignificantDigits","product","Quantity","Math","round","toString","NumberOfSignificantDigits","Enabled","searchResults","filter","values","toLowerCase","includes","some","subElement","customerInventoryData","firstIndexInPage","lastIndexInPage","slice","activeItem","ShareholderList","Error","errorMessage","getOptionsWithSelect","ddlOptions","selectOptionText","option","text","unshift","language","window","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}