{"version":3,"file":"static/js/9696.e6fe9f6b.chunk.js","mappings":"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","sources":["Components/UIBase/Common/SiteTreeViewUserActions.jsx","Components/Composite/Common/SiteTreeViewUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Details/GantryDetails.jsx","Components/Composite/Details/GantryDeatilsComposite.jsx","Components/Composite/Common/SiteTreeViewFolder/SiteTreeView.jsx","Components/Composite/Entity/SiteViewComposite.jsx","JS/FunctionGroups.js","JS/KeyCodes.js","../node_modules/@grapecity/wijmo.react.base/es5-esm.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Breadcrumb, Select } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\n\r\nSiteTreeViewUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    terminal: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  terminals: PropTypes.array.isRequired,\r\n  selectedTerminal: PropTypes.string.isRequired,\r\n  onTerminalChange: PropTypes.func.isRequired,\r\n};\r\nSiteTreeViewUserActions.defaultProps = {\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  terminals: [],\r\n  selectedTerminal: \"\",\r\n};\r\nexport function SiteTreeViewUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  terminals,\r\n  selectedTerminal,\r\n  onTerminalChange,\r\n  handleBreadCrumbClick,\r\n}) {\r\n  function getTerminalDropdownOptions() {\r\n    return Utilities.transferListtoOptions(terminals);\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  key={parentitem.itemCode}\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"row\" style={{ marginTop: \"10px\" }}>\r\n      <div className=\"col-12 col-sm-12 col-md-12 col-lg-5 col-xl-7\">\r\n        <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n      </div>\r\n      <div className=\"col-12 col-sm-12 col-md-12 col-lg-7 col-xl-5\">\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <div className=\"compartmentIcon\">\r\n              <div>\r\n                <h4 className=\"shrText\">{t(\"Common_Terminal\")}:</h4>\r\n              </div>\r\n              <div className=\"opSelect\">\r\n                <Select\r\n                  placeholder={t(\"Common_Terminal\")}\r\n                  value={selectedTerminal}\r\n                  disabled={!operationsVisibilty.terminal}\r\n                  options={getTerminalDropdownOptions()}\r\n                  onChange={(value) => onTerminalChange(value)}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </TranslationConsumer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { SiteTreeViewUserActions } from \"../../UIBase/Common/SiteTreeViewUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\n\r\nexport function SiteTreeViewUserActionsComposite({\r\n  breadcrumbItem,\r\n  operationsVisibilty,\r\n  terminals,\r\n  selectedTerminal,\r\n  onTerminalChange,\r\n  handleBreadCrumbClick,\r\n}) {\r\n  return (\r\n    <SiteTreeViewUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      terminals={terminals}\r\n      selectedTerminal={selectedTerminal}\r\n      onTerminalChange={onTerminalChange}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n    ></SiteTreeViewUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { Select, Input } from '@scuf/common';\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nGantryDetails.propTypes = {\r\n    gantry: PropTypes.object.isRequired,\r\n    modGantry: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default function GantryDetails({\r\n    gantry,\r\n    modGantry,\r\n    selectedLocationType,\r\n    onFieldChange,\r\n    validationErrors,\r\n    onActiveStatusChange,\r\n\r\n}) {\r\n    const [t] = useTranslation();\r\n    return (\r\n        <div className=\"detailsContainer\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={modGantry.Code}\r\n                        label={t(selectedLocationType + \"Code\")}\r\n                        indicator=\"required\"\r\n                        disabled={gantry.Code !== \"\"}\r\n                        onChange={(data) => onFieldChange(\"Code\", data)}\r\n                        error={t(validationErrors.Code)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={modGantry.Name}\r\n                        label={t(selectedLocationType + \"Name\")}\r\n                        indicator=\"required\"\r\n                        onChange={(data) => onFieldChange(\"Name\", data)}\r\n                        error={t(validationErrors.Name)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={modGantry.ParentCode}\r\n                        label={t(\"Common_Terminal\")}\r\n                        disabled={true}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                        fluid\r\n                        placeholder={t(\"FinishedProductInfo_Select\")}\r\n                        label={t(\"Cust_Status\")}\r\n                        value={modGantry.Active}\r\n                        options={[\r\n                            { text: t(\"ViewShipment_Ok\"), value: true },\r\n                            { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                        ]}\r\n                        onChange={(data) => onActiveStatusChange(data)}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={\r\n                            modGantry.EntityRemarks === null ? \"\" : modGantry.EntityRemarks\r\n                        }\r\n                        label={t(\"Cust_Remarks\")}\r\n                        onChange={(data) => onFieldChange(\"EntityRemarks\", data)}\r\n                        indicator={\r\n                            modGantry.Active !== gantry.Active ? \"required\" : \"\"\r\n                        }\r\n                        error={t(validationErrors.EntityRemarks)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}","import React, { Component } from \"react\";\r\nimport { emptyGantry } from \"../../../JS/DefaultEntities\";\r\nimport { SiteDetailsUserActions } from \"../../UIBase/Common/SiteDetailsUserActions\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport lodash from \"lodash\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport GantryDetails from \"../../UIBase/Details/GantryDetails\";\r\nimport { gantryValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { fnSiteView, fnRailSiteView, functionGroups } from \"../../../JS/FunctionGroups\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass GantryDetailsComposite extends Component {\r\n  state = {\r\n    gantry: {},\r\n    modGantry: {},\r\n    saveEnabled: false,\r\n    isDeleteEnabled: false,\r\n    selectedLocationType: \"\",\r\n    isReadyToRender: false,\r\n    validationErrors: Utilities.getInitialValidationErrors(gantryValidationDef),\r\n    showDeleteAuthenticationLayout: false,\r\n    showSaveAuthenticationLayout: false,\r\n    tempGantry: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getGantry(this.props);\r\n    } catch (error) {\r\n      console.log(\r\n        \"GantryDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        nextProps.Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getGantry(nextProps);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"GantryDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  getGantry(propsResult) {\r\n    try {\r\n      let locationCode = propsResult.selectedlocation;\r\n      let terminalCode = propsResult.selectedTerminal;\r\n      if (propsResult.locationtype === \"SPUR\") {\r\n        this.setState({\r\n          selectedLocationType: Constants.siteViewLocationType.SPUR,\r\n        });\r\n        emptyGantry.LocationType = Constants.siteViewLocationType.SPUR;\r\n      } else {\r\n        this.setState({\r\n          selectedLocationType: Constants.siteViewLocationType.GANTRY,\r\n        });\r\n        emptyGantry.LocationType = Constants.siteViewLocationType.GANTRY;\r\n      }\r\n\r\n      emptyGantry.ParentCode = propsResult.selectedTerminal;\r\n      if (propsResult.isClone === true) {\r\n        this.setState({\r\n          gantry: lodash.cloneDeep(emptyGantry),\r\n          modGantry: lodash.cloneDeep(emptyGantry),\r\n          selectedLocationType: emptyGantry.LocationType,\r\n          isReadyToRender: true,\r\n          isDeleteEnabled: false,\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n          ),\r\n        });\r\n        return;\r\n      }\r\n      if (locationCode === undefined || locationCode === \"\") {\r\n        this.setState({\r\n          gantry: lodash.cloneDeep(emptyGantry),\r\n          modGantry: lodash.cloneDeep(emptyGantry),\r\n          selectedLocationType: emptyGantry.LocationType,\r\n          isReadyToRender: true,\r\n          isDeleteEnabled: false,\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n          ),\r\n        });\r\n        return;\r\n      }\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.terminalCode,\r\n          value: terminalCode,\r\n        },\r\n        {\r\n          key: KeyCodes.entityCode,\r\n          value: locationCode,\r\n        },\r\n        {\r\n          key: KeyCodes.entityType,\r\n          value: emptyGantry.LocationType,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.locationCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetEntityDetails,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            gantry: lodash.cloneDeep(result.EntityResult),\r\n            modGantry: lodash.cloneDeep(result.EntityResult),\r\n            selectedLocationType: lodash.cloneDeep(\r\n              result.EntityResult.EntityTypeCode\r\n            ),\r\n            isReadyToRender: true,\r\n            isDeleteEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.remove,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            gantry: lodash.cloneDeep(emptyGantry),\r\n            modGantry: lodash.cloneDeep(emptyGantry),\r\n            isReadyToRender: true,\r\n            isDeleteEnabled: false,\r\n          });\r\n          console.log(\r\n            \"GantryDetailsComposite:Error in GetGantry\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"GantryDetailsComposite:Error while getting gantry:\", error);\r\n    }\r\n  }\r\n\r\n  \r\n  saveGantry = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempGantry = lodash.cloneDeep(this.state.tempGantry);\r\n     \r\n      this.state.gantry.Code === \"\"\r\n        ? this.createGantry(tempGantry)\r\n        : this.updateGantry(tempGantry);\r\n    } catch (error) {\r\n      console.log(\"GantryComposite : Error in saveGantry\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n      //this.setState({ saveEnabled: false });\r\n      let modGantry = this.fillDetails();\r\n      if (this.validateSave(modGantry)) {\r\n        \r\n        let showSaveAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempGantry = lodash.cloneDeep(modGantry);\r\n        this.setState({ showSaveAuthenticationLayout, tempGantry }, () => {\r\n          if (showSaveAuthenticationLayout === false) {\r\n            this.saveGantry();\r\n          }\r\n      });\r\n        \r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"GantryDetailsComposite:Error occured on handleSave\", error);\r\n    }\r\n  };\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modGantry = lodash.cloneDeep(this.state.modGantry);\r\n      modGantry.EntityTypeCode = this.state.selectedLocationType;\r\n      modGantry.ParentCode = this.props.selectedTerminal;\r\n      modGantry.TerminalCode = this.props.selectedTerminal;\r\n      return modGantry;\r\n    } catch (err) {\r\n      console.log(\"GantryDetailsComposite:Error occured on filldetails\", err);\r\n    }\r\n  }\r\n\r\n  validateSave(modGantry) {\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(gantryValidationDef).forEach(function (key) {\r\n      if (modGantry[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          gantryValidationDef[key],\r\n          modGantry[key]\r\n        );\r\n    });\r\n    if (modGantry.Active !== this.state.gantry.Active) {\r\n      if (modGantry.EntityRemarks === null || modGantry.EntityRemarks === \"\") {\r\n        validationErrors[\"EntityRemarks\"] = \"OriginTerminal_RemarksRequired\";\r\n      }\r\n    }\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: [this.state.selectedLocationType + \"SavedSuccess\"],\r\n      messageResultDetails: [],\r\n    };\r\n    this.setState({ validationErrors });\r\n    var returnValue = Object.values(validationErrors).every(function (value) {\r\n      return value === \"\";\r\n    });\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modGantry, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modGantry = lodash.cloneDeep(this.state.modGantry);\r\n      modGantry.Active = value;\r\n      if (modGantry.Active !== this.state.gantry.Active)\r\n        modGantry.EntityRemarks = \"\";\r\n      this.setState({ modGantry });\r\n    } catch (error) {\r\n      console.log(\r\n        \"GantryDetailsComposite:Error occured on handleActiveStatusChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      let modGantry = lodash.cloneDeep(this.state.modGantry);\r\n      modGantry[propertyName] = data;\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      if (modGantry.Active === this.state.gantry.Active) {\r\n        if (\r\n          this.state.gantry.EntityRemarks === modGantry.EntityRemarks ||\r\n          modGantry.EntityRemarks === \"\"\r\n        ) {\r\n          validationErrors.EntityRemarks = \"\";\r\n        }\r\n        if (modGantry.EntityRemarks === \"\")\r\n          modGantry.EntityRemarks = this.state.gantry.EntityRemarks;\r\n      }\r\n      if (propertyName === \"Active\") {\r\n        if (modGantry.Active !== this.state.gantry.Active) {\r\n          modGantry.EntityRemarks = \"\";\r\n        }\r\n      }\r\n      if (gantryValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          gantryValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n      this.setState({ validationErrors, modGantry });\r\n    } catch (error) {\r\n      console.log(\r\n        \"GantryDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDelete = () => {\r\n    try {\r\n      var GantryCode = this.state.modGantry.Code;\r\n      var keyData = {\r\n        keyDataCode: 0,\r\n        ShareHolderCode: \"\",\r\n        KeyCodes: [\r\n          {\r\n            Key: KeyCodes.locationCode,\r\n            Value: GantryCode,\r\n          },\r\n          {\r\n            Key: KeyCodes.terminalCode,\r\n            Value: this.props.selectedTerminal,\r\n          },\r\n        ],\r\n      };\r\n\r\n      if (this.state.selectedLocationType === \"SPUR\") {\r\n        let notification = {\r\n          messageType: \"critical\",\r\n          message: [this.state.selectedLocationType + \"DeletionStatus\"],\r\n          messageResultDetails: [\r\n            {\r\n              keyFields: [Constants.siteViewLocationType.SPUR + \"Code\"],\r\n              keyValues: [GantryCode],\r\n              isSuccess: false,\r\n              errorMessage: \"\",\r\n            },\r\n          ],\r\n        };\r\n        axios(\r\n          RestAPIs.DeleteIsland,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            keyData,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          let result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              isDeleteEnabled: false,\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.remove,\r\n                Utilities.getSiteViewFunctionGroup(\r\n                  this.props.transportationtype\r\n                )\r\n              ),\r\n              showDeleteAuthenticationLayout: false,\r\n            });\r\n            this.getGantry({\r\n              selectedlocation: this.state.modGantry.Code,\r\n              selectedTerminal: this.props.selectedTerminal,\r\n              isClone: true,\r\n              locationtype: this.state.selectedLocationType,\r\n            });\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            this.setState({\r\n              isDeleteEnabled: true,\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.remove,\r\n                Utilities.getSiteViewFunctionGroup(\r\n                  this.props.transportationtype\r\n                )\r\n              ),\r\n              showDeleteAuthenticationLayout: false,\r\n            });\r\n          }\r\n\r\n          this.props.onDelete(this.state.modGantry, \"delete\", notification);\r\n        });\r\n      } else {\r\n        let notification = {\r\n          messageType: \"critical\",\r\n          message: [this.state.selectedLocationType + \"DeletionStatus\"],\r\n          messageResultDetails: [\r\n            {\r\n              keyFields: [Constants.siteViewLocationType.GANTRY + \"Code\"],\r\n              keyValues: [GantryCode],\r\n              isSuccess: false,\r\n              errorMessage: \"\",\r\n            },\r\n          ],\r\n        };\r\n        axios(\r\n          RestAPIs.DeleteGantry,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            keyData,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          let result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              isDeleteEnabled: false,\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.remove,\r\n                Utilities.getSiteViewFunctionGroup(\r\n                  this.props.transportationtype\r\n                )\r\n              ),\r\n              showDeleteAuthenticationLayout: false,\r\n            });\r\n            this.getGantry({\r\n              selectedlocation: this.state.modGantry.Code,\r\n              selectedTerminal: this.props.selectedTerminal,\r\n              isClone: true,\r\n              locationtype: this.state.selectedLocationType,\r\n            });\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            this.setState({\r\n              isDeleteEnabled: true,\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.remove,\r\n                Utilities.getSiteViewFunctionGroup(\r\n                  this.props.transportationtype\r\n                )\r\n              ),\r\n              showDeleteAuthenticationLayout: false,\r\n            });\r\n          }\r\n\r\n          this.props.onDelete(this.state.modGantry, \"delete\", notification);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"GantryDetailsComposite:Error occured on handleDelete\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  createGantry(modGantry) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.entityCode,\r\n          value: modGantry.Code,\r\n        },\r\n      ];\r\n\r\n      let obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.locationCode,\r\n        KeyCodes: keyCode,\r\n        Entity: modGantry,\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: [this.state.selectedLocationType + \"SavedSuccess\"],\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [this.state.selectedLocationType + \"Code\"],\r\n            keyValues: [modGantry.Code],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.CreateEntity,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n          this.getGantry({\r\n            selectedlocation: this.state.modGantry.Code,\r\n            selectedTerminal: this.props.selectedTerminal,\r\n            isClone: false,\r\n            locationtype: this.state.selectedLocationType,\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n        }\r\n        this.props.onSaved(this.state.modGantry, \"add\", notification);\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"GantryDetailsComposite:Error occured on createLocation\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  updateGantry(modGantry) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.entityCode,\r\n          value: modGantry.Code,\r\n        },\r\n      ];\r\n\r\n      let obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.locationCode,\r\n        KeyCodes: keyCode,\r\n        Entity: modGantry,\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: [this.state.selectedLocationType + \"SavedSuccess\"],\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [this.state.selectedLocationType + \"Code\"],\r\n            keyValues: [modGantry.Code],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.UpdateEntity,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n          this.getGantry({\r\n            selectedlocation: this.state.modGantry.Code,\r\n            selectedTerminal: this.props.selectedTerminal,\r\n            isClone: false,\r\n            locationtype: this.state.selectedLocationType,\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n        }\r\n        this.props.onSaved(this.state.modGantry, \"add\", notification);\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"GantryDetailsComposite:Error occured on createLocation\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showDeleteAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showDeleteAuthenticationLayout });\r\n      if (showDeleteAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"GantryComposite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showSaveAuthenticationLayout: false,\r\n      showDeleteAuthenticationLayout: false,\r\n    });\r\n  };\r\n  \r\n  handleOperation()  {\r\n    return this.state.showDeleteAuthenticationLayout?this.handleDelete:this.saveGantry;\r\n };\r\n\r\n getFunctionGroupName() {\r\n  if(this.state.selectedLocationType === Constants.siteViewLocationType.SPUR)\r\n    return fnRailSiteView\r\n  else  \r\n    return fnSiteView\r\n\r\n };\r\n \r\n getFunctionName() {\r\n  return this.state.showDeleteAuthenticationLayout? functionGroups.remove: \r\n        this.state.gantry.Code === \"\"\r\n         ? functionGroups.add\r\n         : functionGroups.modify\r\n };\r\n\r\n  render() {\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"DriverInfo_LastUpdated\",\r\n        fieldValue:\r\n          new Date(this.state.modGantry.LastUpdatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modGantry.LastUpdatedTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_LastActive\",\r\n        fieldValue:\r\n          this.state.modGantry.LastActive !== undefined &&\r\n          this.state.modGantry.LastActive !== null\r\n            ? new Date(this.state.modGantry.LastActive).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(this.state.modGantry.LastActive).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_CreatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.modGantry.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modGantry.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.gantry.Code}\r\n            newEntityName={\"New\" + this.state.selectedLocationType}\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <GantryDetails\r\n            gantry={this.state.gantry}\r\n            modGantry={this.state.modGantry}\r\n            selectedLocationType={this.state.selectedLocationType}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n            validationErrors={this.state.validationErrors}\r\n            onFieldChange={this.handleChange}\r\n          ></GantryDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <SiteDetailsUserActions\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            handleSave={this.handleSave}\r\n            handleDelete={this.authenticateDelete}\r\n            saveEnabled={this.state.saveEnabled}\r\n            isDeleteEnabled={this.state.isDeleteEnabled}\r\n          ></SiteDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showDeleteAuthenticationLayout || this.state.showSaveAuthenticationLayout ?  (\r\n          <UserAuthenticationLayout\r\n          Username={this.props.userDetails.EntityResult.UserName}\r\n          functionName={this.getFunctionName()}\r\n          functionGroup={this.getFunctionGroupName()}\r\n          handleClose={this.handleAuthenticationClose}\r\n          handleOperation={this.handleOperation()}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(GantryDetailsComposite);\r\n","import React, { Component } from \"react\";\r\nimport { Tree, Icon, Tooltip, Button } from \"@scuf/common\";\r\nimport { connect } from \"react-redux\";\r\nimport LocationDetailsComposite from \"../../Details/LocationDetailsComposite\";\r\nimport { SidebarLayout } from \"@scuf/common\";\r\nimport { Tab } from \"@scuf/common\";\r\nimport NotifyEvent from \"../../../../JS/NotifyEvent\";\r\nimport DeviceDetailsComposite from \"../../Details/DeviceDetailsComposite\";\r\nimport GantryDeatilsComposite from \"../../Details/GantryDeatilsComposite\";\r\nimport * as Constants from \"../../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../../JS/Utilities\";\r\nimport * as KeyCodes from \"../../../../JS/KeyCodes\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport ErrorBoundary from \"../../../ErrorBoundary\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { toast } from \"react-toastify\";\r\nimport LoadingArmDetailsComposite from \"../../Details/LoadingArmDetailsComposite\";\r\nimport IslandDetailsComposite from \"../../Details/IslandDetailsComposite\";\r\nimport BayDetailsComposite from \"../../Details/BayDetailsComposite\";\r\nimport MeterDetailsComposite from \"../../Details/MeterDetailsComposite\";\r\nimport \"../../../../CSS/iconStyles.css\";\r\nimport { getKeyByValue } from \"../../../../JS/Utilities\";\r\n\r\nconst Item = Tree.Content.Item;\r\n\r\nclass SiteTreeView extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    isChildLoadDevice: false,\r\n    isLoadingMeter: false,\r\n    isLoadingArm: false,\r\n    terminalList: [],\r\n    bcuDeviceList: [],\r\n    locationCode: \"\",\r\n    isClone: false,\r\n    locationType: \"\",\r\n    deviceType: \"\",\r\n    selectedLocationCode: \"\",\r\n    selectedDeviceCode: \"\",\r\n    deviceCode: \"\",\r\n    loadingArmCode: \"\",\r\n    deviceModel: \"\",\r\n    parentCode: \"\",\r\n    meterLineType: \"\",\r\n    siteExpandedItems: [],\r\n    bcuExpandedItems: [],\r\n  };\r\n  getBCUTreeView(deviceCode) {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.siteViewType,\r\n          value: Constants.siteViewType.ROAD_BCUVIEW,\r\n        },\r\n        {\r\n          key: KeyCodes.bcuCode,\r\n          value: deviceCode,\r\n        },\r\n        {\r\n          key: KeyCodes.terminalCode,\r\n          value: this.props.selectedTerminal,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.siteViewType,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetBCUViewTree,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            Array.isArray(result.EntityResult) &&\r\n            result.EntityResult.length > 0\r\n          ) {\r\n            this.setState({\r\n              isReadyToRender: true,\r\n              bcuDeviceList: lodash.cloneDeep(result.EntityResult),\r\n            });\r\n          }\r\n        } else {\r\n          this.setState({\r\n            isReadyToRender: false,\r\n            bcuDeviceList: [],\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"SiteTreeView:Error occured in getBCUTreeView\", error);\r\n    }\r\n  }\r\n\r\n  setTitle(locationCode, locationType, parentCode) {\r\n    this.setState({\r\n      isLoading: true,\r\n      isChildLoadDevice: false,\r\n      isLoadingArm: false,\r\n      isLoadingMeter: false,\r\n      locationCode: locationCode,\r\n      isClone: false,\r\n      locationType: locationType,\r\n      selectedLocationCode: locationCode,\r\n      parentCode: parentCode,\r\n    });\r\n  }\r\n\r\n  setArmTitle(loadingArmCode) {\r\n    this.setState({\r\n      isLoading: false,\r\n      isChildLoadDevice: false,\r\n      isLoadingArm: true,\r\n      isLoadingMeter: false,\r\n      isClone: false,\r\n      loadingArmCode: loadingArmCode,\r\n    });\r\n  }\r\n\r\n  setMeterTitle(meterCode, meterLineType, parentCode) {\r\n    this.setState({\r\n      isLoading: false,\r\n      isChildLoadDevice: false,\r\n      isLoadingArm: false,\r\n      isLoadingMeter: true,\r\n      isClone: false,\r\n      meterCode: meterCode,\r\n      meterLineType: meterLineType,\r\n      parentCode: parentCode,\r\n    });\r\n  }\r\n\r\n  childComponent(deviceCode, deviceType, deviceModel) {\r\n    this.setState(\r\n      {\r\n        isChildLoadDevice: false,\r\n        deviceType: deviceType,\r\n        deviceModel: deviceModel,\r\n        deviceCode: deviceCode,\r\n        selectedDeviceCode: deviceCode,\r\n        isReadyToRender: false,\r\n      },\r\n      () => {\r\n        this.setState({\r\n          isChildLoadDevice: true,\r\n          isLoading: false,\r\n          isLoadingArm: false,\r\n          isLoadingMeter: false,\r\n          isReadyToRender: true,\r\n        });\r\n      }\r\n    );\r\n    if (deviceCode !== undefined) {\r\n      this.getBCUTreeView(deviceCode);\r\n    }\r\n  }\r\n\r\n  parentComponentClick() {\r\n    this.setState({\r\n      isChildLoadDevice: false,\r\n      isLoading: false,\r\n      isLoadingArm: false,\r\n      isLoadingMeter: false,\r\n    });\r\n  }\r\n\r\n  isAddClick(locationCode, locationType, parentCode) {\r\n    this.setState({\r\n      isLoading: true,\r\n      isClone: true,\r\n      locationType: locationType,\r\n      locationCode: locationCode,\r\n      parentCode: parentCode,\r\n    });\r\n  }\r\n  isNewClick(code) {\r\n    this.setState({\r\n      isLoading: false,\r\n      isChildLoadDevice: false,\r\n      isLoadingArm: true,\r\n      isLoadingMeter: false,\r\n      isClone: true,\r\n      loadingArmCode: code,\r\n    });\r\n  }\r\n  isNewMeterClick(code, meterLineType, parentCode) {\r\n    this.setState({\r\n      isLoading: false,\r\n      isChildLoadDevice: false,\r\n      isLoadingArm: false,\r\n      isLoadingMeter: true,\r\n      isClone: true,\r\n      meterCode: code,\r\n      meterLineType: meterLineType,\r\n      parentCode: parentCode,\r\n    });\r\n  }\r\n  buildDevices(deviceList) {\r\n    try {\r\n      return deviceList.map(\r\n        (myList) =>\r\n          myList.DeviceCode.length > 8 ? (\r\n            // <div>\r\n            <Tooltip\r\n              content={myList.DeviceCode}\r\n              element={\r\n                <Item\r\n                  icon={\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"24px\",\r\n                        marginRight: \"6px\",\r\n                        // color:\r\n                        //   myList.Active !== null && myList.Active\r\n                        //     ? \"#000000\"\r\n                        //     : \"#ff0000\",\r\n                      }}\r\n                      className={\r\n                        (myList.Active !== null && myList.Active\r\n                          ? \"\"\r\n                          : \"redIcon \") +\r\n                        (myList.DeviceType ===\r\n                          Constants.deviceTypeCode.WEIGH_BRIDGE\r\n                          ? \"icon-Weigh-Bridge\"\r\n                          : \"icon-\" +\r\n                          getKeyByValue(\r\n                            Constants.deviceTypeCode,\r\n                            myList.DeviceType\r\n                          ))\r\n                      }\r\n                    ></span>\r\n                  }\r\n                  title={this.getSelectedDeviceCode(myList.DeviceCode)}\r\n                  onTitleClick={() =>\r\n                    this.childComponent(\r\n                      myList.DeviceCode,\r\n                      myList.DeviceType,\r\n                      myList.DeviceModel\r\n                    )\r\n                  }\r\n                />\r\n              }\r\n              position=\"bottom right\"\r\n              size=\"mini\"\r\n              hoverable={true}\r\n            />\r\n          ) : (\r\n            <Item\r\n              icon={\r\n                <span\r\n                  style={{\r\n                    fontSize: \"24px\",\r\n                    marginRight: \"6px\",\r\n                    // color:\r\n                    //   myList.Active !== null && myList.Active\r\n                    //     ? \"#000000\"\r\n                    //     : \"#ff0000\",\r\n                  }}\r\n                  className={\r\n                    (myList.Active !== null && myList.Active\r\n                      ? \"\"\r\n                      : \"redIcon \") +\r\n                    (myList.DeviceType === Constants.deviceTypeCode.WEIGH_BRIDGE\r\n                      ? \"icon-Weigh-Bridge\"\r\n                      : \"icon-\" +\r\n                      getKeyByValue(\r\n                        Constants.deviceTypeCode,\r\n                        myList.DeviceType\r\n                      ))\r\n                  }\r\n                ></span>\r\n              }\r\n              title={this.getSelectedDeviceCode(myList.DeviceCode)}\r\n              onTitleClick={() =>\r\n                this.childComponent(\r\n                  myList.DeviceCode,\r\n                  myList.DeviceType,\r\n                  myList.DeviceModel\r\n                )\r\n              }\r\n            />\r\n          )\r\n        // </div>\r\n      );\r\n    } catch (error) {\r\n      console.log(\"SiteViewTree: Error occured in buildDevices\");\r\n    }\r\n  }\r\n  getSelectedDeviceCode(deviceCode) {\r\n    try {\r\n      if (this.state.selectedDeviceCode === deviceCode) {\r\n        if (deviceCode.length > 8)\r\n          return (\r\n            <span className=\"active\">{deviceCode.substring(0, 8) + \"...\"}</span>\r\n          );\r\n        else return <span className=\"active\">{deviceCode}</span>;\r\n      } else {\r\n        if (deviceCode.length > 8)\r\n          return <span>{deviceCode.substring(0, 8) + \"...\"}</span>;\r\n        else return <span>{deviceCode}</span>;\r\n      }\r\n    } catch (error) {\r\n      console.log(\"SiteViewTree: Error occured in getSelectedDeviceCode\");\r\n    }\r\n  }\r\n  getSelectedLocationCode(locationCode) {\r\n    try {\r\n      if (this.state.selectedLocationCode === locationCode) {\r\n        if (locationCode.length > 8)\r\n          return (\r\n            <span className=\"active\">\r\n              {locationCode.substring(0, 8) + \"...\"}\r\n            </span>\r\n          );\r\n        else return <span className=\"active\">{locationCode}</span>;\r\n      } else {\r\n        if (locationCode.length > 8)\r\n          return <span>{locationCode.substring(0, 8) + \"...\"}</span>;\r\n        else return <span>{locationCode}</span>;\r\n      }\r\n    } catch (error) {\r\n      console.log(\"SiteViewTree: Error occured in getSelectedLocatioCode\");\r\n    }\r\n  }\r\n  getLocalisedTooltip(data) {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => <span> {t(data)}</span>}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n\r\n  buildTree(locationlist) {\r\n    try {\r\n      return locationlist.LocationCode.length > 8 ? (\r\n        // <div>\r\n        <Tooltip\r\n          content={locationlist.LocationCode}\r\n          element={\r\n            <Item\r\n              onClick={() =>\r\n                this.handleMenuExpandCollapse(locationlist.LocationCode)\r\n              }\r\n              icon={\r\n                <span\r\n                  style={{\r\n                    fontSize: \"24px\",\r\n                    marginRight: \"6px\",\r\n                    // color:\r\n                    //   locationlist.Active !== null && locationlist.Active\r\n                    //     ? \"#000000\"\r\n                    //     : \"#ff0000\",\r\n                  }}\r\n                  className={\r\n                    (locationlist.Active !== null && locationlist.Active\r\n                      ? \"\"\r\n                      : \"redIcon \") +\r\n                    (locationlist.LocationType ===\r\n                      Constants.siteViewLocationType.ISLAND\r\n                      ? \"icon-Island\"\r\n                      : locationlist.LocationType === \"MarineBay\"\r\n                        ? \"icon-Berth\"\r\n                        : \"icon-Bay\")\r\n                  }\r\n                ></span>\r\n              }\r\n              title={this.getSelectedLocationCode(locationlist.LocationCode)}\r\n              actionRenderer={\r\n                <Tooltip\r\n                  content={this.getLocalisedTooltip(\"Siteview_New\")}\r\n                  position=\"bottom left\"\r\n                  size=\"mini\"\r\n                  element={\r\n                    <Icon\r\n                      root=\"common\"\r\n                      name=\"duplicate\"\r\n                      size=\"medium\"\r\n                      onClick={(e) =>\r\n                        this.isAddClick(\r\n                          locationlist.LocationCode,\r\n                          locationlist.LocationType,\r\n                          locationlist.AssociatedLocationCode\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                />\r\n              }\r\n              expanded={this.state.siteExpandedItems.includes(\r\n                locationlist.LocationCode\r\n              )}\r\n              // expanded={true}\r\n              onTitleClick={() =>\r\n                this.setTitle(\r\n                  locationlist.LocationCode,\r\n                  locationlist.LocationType,\r\n                  locationlist.AssociatedLocationCode\r\n                )\r\n              }\r\n            >\r\n              {locationlist.AssociatedLocationsList.length > 0 &&\r\n                locationlist.AssociatedDevices.length > 0 ? (\r\n                this.buildIslandTree(locationlist)\r\n              ) : locationlist.LocationType ===\r\n                Constants.siteViewLocationType.ISLAND &&\r\n                locationlist.AssociatedDevices.length > 0 ? (\r\n                this.buildIslandTree(locationlist)\r\n              ) : locationlist.AssociatedLocationsList.length > 0 ? (\r\n                locationlist.AssociatedLocationsList.map((ascLocation) =>\r\n                  this.buildTree(ascLocation)\r\n                )\r\n              ) : locationlist.AssociatedDevices.length > 0 ? (\r\n                this.buildDevices(locationlist.AssociatedDevices)\r\n              ) : locationlist.LocationType ===\r\n                Constants.siteViewLocationType.ISLAND ? (\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <Button\r\n                      type=\"secondary\"\r\n                      className=\"dotted-botton\"\r\n                      content={t(\"SiteView_AddBay\")}\r\n                      onClick={() =>\r\n                        this.isAddClick(\r\n                          \"\",\r\n                          Constants.siteViewLocationType.BAY,\r\n                          locationlist.LocationCode\r\n                        )\r\n                      }\r\n                    ></Button>\r\n                  )}\r\n                </TranslationConsumer>\r\n              ) : (\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <Button\r\n                      type=\"secondary\"\r\n                      className=\"dotted-botton\"\r\n                      content={t(\"SiteView_AddIsland\")}\r\n                      onClick={() =>\r\n                        this.isAddClick(\r\n                          \"\",\r\n                          Constants.siteViewLocationType.ISLAND,\r\n                          locationlist.LocationCode\r\n                        )\r\n                      }\r\n                    ></Button>\r\n                  )}\r\n                </TranslationConsumer>\r\n              )}\r\n            </Item>\r\n          }\r\n          position=\"top right\"\r\n          size=\"mini\"\r\n          hoverable={true}\r\n        />\r\n      ) : (\r\n        <Item\r\n          onClick={() =>\r\n            this.handleMenuExpandCollapse(locationlist.LocationCode)\r\n          }\r\n          icon={\r\n            <span\r\n              style={{\r\n                fontSize: \"24px\",\r\n                marginRight: \"6px\",\r\n                // color:\r\n                //   locationlist.Active !== null && locationlist.Active\r\n                //     ? \"#000000\"\r\n                //     : \"#ff0000\",\r\n              }}\r\n              className={\r\n                (locationlist.Active !== null && locationlist.Active\r\n                  ? \"\"\r\n                  : \"redIcon \") +\r\n                (locationlist.LocationType ===\r\n                  Constants.siteViewLocationType.ISLAND\r\n                  ? \"icon-Island\"\r\n                  : locationlist.LocationType === \"MarineBay\"\r\n                    ? \"icon-Berth\"\r\n                    : \"icon-Bay\")\r\n              }\r\n            ></span>\r\n          }\r\n          title={this.getSelectedLocationCode(locationlist.LocationCode)}\r\n          actionRenderer={\r\n            <Tooltip\r\n              content={this.getLocalisedTooltip(\"Siteview_New\")}\r\n              position=\"bottom left\"\r\n              size=\"mini\"\r\n              element={\r\n                <Icon\r\n                  root=\"common\"\r\n                  name=\"duplicate\"\r\n                  size=\"medium\"\r\n                  onClick={(e) =>\r\n                    this.isAddClick(\r\n                      locationlist.LocationCode,\r\n                      locationlist.LocationType,\r\n                      locationlist.AssociatedLocationCode\r\n                    )\r\n                  }\r\n                />\r\n              }\r\n            />\r\n          }\r\n          expanded={this.state.siteExpandedItems.includes(\r\n            locationlist.LocationCode\r\n          )}\r\n          // expanded={true}\r\n          onTitleClick={() =>\r\n            this.setTitle(\r\n              locationlist.LocationCode,\r\n              locationlist.LocationType,\r\n              locationlist.AssociatedLocationCode\r\n            )\r\n          }\r\n        >\r\n          {locationlist.AssociatedLocationsList.length > 0 &&\r\n            locationlist.AssociatedDevices.length > 0 ? (\r\n            this.buildIslandTree(locationlist)\r\n          ) : locationlist.LocationType ===\r\n            Constants.siteViewLocationType.ISLAND &&\r\n            locationlist.AssociatedDevices.length > 0 ? (\r\n            this.buildIslandTree(locationlist)\r\n          ) : locationlist.AssociatedLocationsList.length > 0 ? (\r\n            locationlist.AssociatedLocationsList.map((ascLocation) =>\r\n              this.buildTree(ascLocation)\r\n            )\r\n          ) : locationlist.AssociatedDevices.length > 0 ? (\r\n            this.buildDevices(locationlist.AssociatedDevices)\r\n          ) : locationlist.LocationType ===\r\n            Constants.siteViewLocationType.ISLAND ? (\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <Button\r\n                  type=\"secondary\"\r\n                  className=\"dotted-botton\"\r\n                  content={t(\"SiteView_AddBay\")}\r\n                  onClick={() =>\r\n                    this.isAddClick(\r\n                      \"\",\r\n                      Constants.siteViewLocationType.BAY,\r\n                      locationlist.LocationCode\r\n                    )\r\n                  }\r\n                ></Button>\r\n              )}\r\n            </TranslationConsumer>\r\n          ) : (\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <Button\r\n                  type=\"secondary\"\r\n                  className=\"dotted-botton\"\r\n                  content={t(\"SiteView_AddIsland\")}\r\n                  onClick={() =>\r\n                    this.isAddClick(\r\n                      \"\",\r\n                      Constants.siteViewLocationType.ISLAND,\r\n                      locationlist.LocationCode\r\n                    )\r\n                  }\r\n                ></Button>\r\n              )}\r\n            </TranslationConsumer>\r\n          )}\r\n        </Item>\r\n      );\r\n    } catch (error) {\r\n      console.log(\"SiteViewTree: Error occured in buildTree\");\r\n    }\r\n  }\r\n  buildIslandTree(locationlist) {\r\n    let lll = [];\r\n    try {\r\n      lll.push(this.buildDevices(locationlist.AssociatedDevices));\r\n      locationlist.AssociatedLocationsList.length > 0\r\n        ? lll.push(\r\n          locationlist.AssociatedLocationsList.map((ascLocation) =>\r\n            this.buildTree(ascLocation)\r\n          )\r\n        )\r\n        : lll.push(\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Button\r\n                type=\"secondary\"\r\n                className=\"dotted-botton\"\r\n                content={t(\"SiteView_AddBay\")}\r\n                onClick={() =>\r\n                  this.isAddClick(\r\n                    \"\",\r\n                    Constants.siteViewLocationType.BAY,\r\n                    locationlist.LocationCode\r\n                  )\r\n                }\r\n              ></Button>\r\n            )}\r\n          </TranslationConsumer>\r\n        );\r\n      return lll;\r\n    } catch (error) {\r\n      console.log(\"SiteViewTree: Error occured in buildIslandTree\");\r\n    }\r\n  }\r\n  handleMenuExpandCollapse = (data) => {\r\n    let siteExpandedItems = this.state.siteExpandedItems;\r\n    if (siteExpandedItems.includes(data)) {\r\n      let index = siteExpandedItems.findIndex((item) => item === data);\r\n      //Remove from this array\r\n      siteExpandedItems.splice(index, 1);\r\n    } else {\r\n      //add the item\r\n      siteExpandedItems.push(data);\r\n    }\r\n    //set the state\r\n    this.setState({ siteExpandedItems });\r\n  };\r\n  handleLocationTree(items) {\r\n    let lll = [];\r\n    let avLocations = [];\r\n    items.forEach((locationlist) => {\r\n      var locationType = locationlist.LocationType.replace(/ /g, \"\");\r\n      avLocations.push(locationlist);\r\n      if (locationlist.LocationCode !== null) {\r\n        lll.push(\r\n          locationlist.LocationCode.length > 8 ? (\r\n            <Tooltip\r\n              content={locationlist.LocationCode}\r\n              element={\r\n                <Item\r\n                  onClick={() =>\r\n                    this.handleMenuExpandCollapse(locationlist.LocationCode)\r\n                  }\r\n                  icon={\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"24px\",\r\n                        marginRight: \"6px\",\r\n                        // color:\r\n                        //   locationlist.Active !== null && locationlist.Active\r\n                        //     ? \"#000000\"\r\n                        //     : \"#ff0000\",\r\n                      }}\r\n                      className={\r\n                        (locationlist.Active !== null && locationlist.Active\r\n                          ? \"\"\r\n                          : \"redIcon \") +\r\n                        \"icon-\" +\r\n                        locationType\r\n                      }\r\n                    ></span>\r\n                  }\r\n                  title={this.getSelectedLocationCode(\r\n                    locationlist.LocationCode\r\n                  )}\r\n                  actionRenderer={\r\n                    <Tooltip\r\n                      content={this.getLocalisedTooltip(\"Siteview_New\")}\r\n                      position=\"bottom left\"\r\n                      size=\"mini\"\r\n                      element={\r\n                        <Icon\r\n                          root=\"common\"\r\n                          name=\"duplicate\"\r\n                          size=\"medium\"\r\n                          onClick={(e) =>\r\n                            this.isAddClick(\r\n                              locationlist.LocationCode,\r\n                              locationlist.LocationType,\r\n                              locationlist.AssociatedLocationCode\r\n                            )\r\n                          }\r\n                        />\r\n                      }\r\n                    />\r\n                  }\r\n                  expanded={this.state.siteExpandedItems.includes(\r\n                    locationlist.LocationCode\r\n                  )}\r\n                  // expanded={true}\r\n                  onTitleClick={() =>\r\n                    this.setTitle(\r\n                      locationlist.LocationCode,\r\n                      locationlist.LocationType,\r\n                      locationlist.AssociatedLocationCode\r\n                    )\r\n                  }\r\n                >\r\n                  {locationlist.AssociatedLocationsList.length > 0 ? (\r\n                    locationlist.AssociatedLocationsList.map((ascLocation) =>\r\n                      this.buildTree(ascLocation)\r\n                    )\r\n                  ) : locationlist.AssociatedDevices.length > 0 ? (\r\n                    this.buildDevices(locationlist.AssociatedDevices)\r\n                  ) : locationlist.LocationType ===\r\n                    Constants.siteViewLocationType.ISLAND ? (\r\n                    <TranslationConsumer>\r\n                      {(t) => (\r\n                        <Button\r\n                          type=\"secondary\"\r\n                          className=\"dotted-botton\"\r\n                          content={t(\"SiteView_AddBay\")}\r\n                          onClick={() =>\r\n                            this.isAddClick(\r\n                              \"\",\r\n                              Constants.siteViewLocationType.BAY,\r\n                              locationlist.LocationCode\r\n                            )\r\n                          }\r\n                        ></Button>\r\n                      )}\r\n                    </TranslationConsumer>\r\n                  ) : locationlist.LocationType ===\r\n                    Constants.siteViewLocationType.SPUR ? (\r\n                    <TranslationConsumer>\r\n                      {(t) => (\r\n                        <Button\r\n                          type=\"secondary\"\r\n                          className=\"dotted-botton\"\r\n                          content={t(\"LocationInfo_AddCluster\")}\r\n                          onClick={() =>\r\n                            this.isAddClick(\r\n                              \"\",\r\n                              Constants.siteViewLocationType.CLUSTER,\r\n                              locationlist.LocationCode\r\n                            )\r\n                          }\r\n                        ></Button>\r\n                      )}\r\n                    </TranslationConsumer>\r\n                  ) : (\r\n                    <TranslationConsumer>\r\n                      {(t) => (\r\n                        <Button\r\n                          type=\"secondary\"\r\n                          className=\"dotted-botton\"\r\n                          content={t(\"SiteView_AddIsland\")}\r\n                          onClick={() =>\r\n                            this.isAddClick(\r\n                              \"\",\r\n                              Constants.siteViewLocationType.ISLAND,\r\n                              locationlist.LocationCode\r\n                            )\r\n                          }\r\n                        ></Button>\r\n                      )}\r\n                    </TranslationConsumer>\r\n                  )}\r\n                </Item>\r\n              }\r\n              position=\"top right\"\r\n              size=\"mini\"\r\n              hoverable={true}\r\n            />\r\n          ) : (\r\n            <Item\r\n              onClick={() =>\r\n                this.handleMenuExpandCollapse(locationlist.LocationCode)\r\n              }\r\n              icon={\r\n                <span\r\n                  style={{\r\n                    fontSize: \"24px\",\r\n                    marginRight: \"6px\",\r\n                    // color:\r\n                    //   locationlist.Active !== null && locationlist.Active\r\n                    //     ? \"#000000\"\r\n                    //     : \"#ff0000\",\r\n                  }}\r\n                  className={\r\n                    (locationlist.Active !== null && locationlist.Active\r\n                      ? \"\"\r\n                      : \"redIcon \") +\r\n                    (locationlist.LocationType === \"MarineBay\"\r\n                      ? \"icon-Berth\"\r\n                      : \"icon-\" + locationType)\r\n                  }\r\n                ></span>\r\n              }\r\n              title={this.getSelectedLocationCode(locationlist.LocationCode)}\r\n              actionRenderer={\r\n                <Tooltip\r\n                  content={this.getLocalisedTooltip(\"Siteview_New\")}\r\n                  position=\"bottom left\"\r\n                  size=\"mini\"\r\n                  element={\r\n                    <Icon\r\n                      root=\"common\"\r\n                      name=\"duplicate\"\r\n                      size=\"medium\"\r\n                      onClick={(e) =>\r\n                        this.isAddClick(\r\n                          locationlist.LocationCode,\r\n                          locationlist.LocationType,\r\n                          locationlist.AssociatedLocationCode\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                />\r\n              }\r\n              expanded={this.state.siteExpandedItems.includes(\r\n                locationlist.LocationCode\r\n              )}\r\n              // expanded={true}\r\n              onTitleClick={() =>\r\n                this.setTitle(\r\n                  locationlist.LocationCode,\r\n                  locationlist.LocationType,\r\n                  locationlist.AssociatedLocationCode\r\n                )\r\n              }\r\n            >\r\n              {locationlist.AssociatedLocationsList.length > 0 ? (\r\n                locationlist.AssociatedLocationsList.map((ascLocation) =>\r\n                  this.buildTree(ascLocation)\r\n                )\r\n              ) : locationlist.AssociatedDevices.length > 0 ? (\r\n                this.buildDevices(locationlist.AssociatedDevices)\r\n              ) : locationlist.LocationType ===\r\n                Constants.siteViewLocationType.ISLAND ? (\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <Button\r\n                      type=\"secondary\"\r\n                      className=\"dotted-botton\"\r\n                      content={t(\"SiteView_AddBay\")}\r\n                      onClick={() =>\r\n                        this.isAddClick(\r\n                          \"\",\r\n                          Constants.siteViewLocationType.BAY,\r\n                          locationlist.LocationCode\r\n                        )\r\n                      }\r\n                    ></Button>\r\n                  )}\r\n                </TranslationConsumer>\r\n              ) : locationlist.LocationType ===\r\n                Constants.siteViewLocationType.SPUR ? (\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <Button\r\n                      type=\"secondary\"\r\n                      className=\"dotted-botton\"\r\n                      content={t(\"LocationInfo_AddCluster\")}\r\n                      onClick={() =>\r\n                        this.isAddClick(\r\n                          \"\",\r\n                          Constants.siteViewLocationType.CLUSTER,\r\n                          locationlist.LocationCode\r\n                        )\r\n                      }\r\n                    ></Button>\r\n                  )}\r\n                </TranslationConsumer>\r\n              ) : (\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <Button\r\n                      type=\"secondary\"\r\n                      className=\"dotted-botton\"\r\n                      content={t(\"SiteView_AddIsland\")}\r\n                      onClick={() =>\r\n                        this.isAddClick(\r\n                          \"\",\r\n                          Constants.siteViewLocationType.ISLAND,\r\n                          locationlist.LocationCode\r\n                        )\r\n                      }\r\n                    ></Button>\r\n                  )}\r\n                </TranslationConsumer>\r\n              )}\r\n            </Item>\r\n          )\r\n        );\r\n      }\r\n      if (\r\n        locationlist.LocationType === \"EntryGate\" &&\r\n        locationlist.LocationCode === null\r\n      )\r\n        lll.push(\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Button\r\n                type=\"secondary\"\r\n                className=\"dotted-botton\"\r\n                content={t(\"SiteView_AddEntryGate\")}\r\n                onClick={() =>\r\n                  this.isAddClick(\"\", Constants.siteViewLocationType.ENTRYGATE)\r\n                }\r\n              ></Button>\r\n            )}\r\n          </TranslationConsumer>\r\n        );\r\n      if (\r\n        locationlist.LocationType === \"Bay\" &&\r\n        locationlist.LocationCode === null\r\n      )\r\n        lll.push(\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Button\r\n                type=\"secondary\"\r\n                className=\"dotted-botton\"\r\n                content={t(\"SiteView_AddGantry\")}\r\n                onClick={() =>\r\n                  this.isAddClick(\"\", Constants.siteViewLocationType.GANTRY)\r\n                }\r\n              ></Button>\r\n            )}\r\n          </TranslationConsumer>\r\n        );\r\n      if (\r\n        locationlist.LocationType === \"ExitGate\" &&\r\n        locationlist.LocationCode === null\r\n      )\r\n        lll.push(\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Button\r\n                type=\"secondary\"\r\n                className=\"dotted-botton\"\r\n                content={t(\"SiteView_AddExitGate\")}\r\n                onClick={() =>\r\n                  this.isAddClick(\"\", Constants.siteViewLocationType.EXITGATE)\r\n                }\r\n              ></Button>\r\n            )}\r\n          </TranslationConsumer>\r\n        );\r\n      if (\r\n        locationlist.LocationType === \"ReportingOffice\" &&\r\n        locationlist.LocationCode === null\r\n      )\r\n        lll.push(\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Button\r\n                type=\"secondary\"\r\n                className=\"dotted-botton\"\r\n                content={t(\"SiteView_AddReportingOffice\")}\r\n                onClick={() =>\r\n                  this.isAddClick(\r\n                    \"\",\r\n                    Constants.siteViewLocationType.REPORTINGOFFICE\r\n                  )\r\n                }\r\n              ></Button>\r\n            )}\r\n          </TranslationConsumer>\r\n        );\r\n      if (\r\n        locationlist.LocationType === \"BOLOffice\" &&\r\n        locationlist.LocationCode === null\r\n      )\r\n        lll.push(\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Button\r\n                type=\"secondary\"\r\n                className=\"dotted-botton\"\r\n                content={t(\"SiteView_AddBOLOffice\")}\r\n                onClick={() =>\r\n                  this.isAddClick(\"\", Constants.siteViewLocationType.BOLOFFICE)\r\n                }\r\n              ></Button>\r\n            )}\r\n          </TranslationConsumer>\r\n        );\r\n      if (\r\n        locationlist.LocationType === \"MarineBay\" &&\r\n        locationlist.LocationCode === null\r\n      )\r\n        lll.push(\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Button\r\n                type=\"secondary\"\r\n                className=\"dotted-botton\"\r\n                content={t(\"LocationInfo_AddBerth\")}\r\n                onClick={() => this.isAddClick(\"\", locationlist.LocationType)}\r\n              ></Button>\r\n            )}\r\n          </TranslationConsumer>\r\n        );\r\n      if (\r\n        locationlist.LocationType === \"RailEntryGate\" &&\r\n        locationlist.LocationCode === null\r\n      )\r\n        lll.push(\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Button\r\n                type=\"secondary\"\r\n                className=\"dotted-botton\"\r\n                content={t(\"SiteView_AddRailEntryGate\")}\r\n                onClick={() =>\r\n                  this.isAddClick(\r\n                    \"\",\r\n                    Constants.siteViewLocationType.RAILENTRYGATE\r\n                  )\r\n                }\r\n              ></Button>\r\n            )}\r\n          </TranslationConsumer>\r\n        );\r\n      if (\r\n        locationlist.LocationType === \"RailExitGate\" &&\r\n        locationlist.LocationCode === null\r\n      )\r\n        lll.push(\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Button\r\n                type=\"secondary\"\r\n                className=\"dotted-botton\"\r\n                content={t(\"SiteView_AddRailExitGate\")}\r\n                onClick={() =>\r\n                  this.isAddClick(\r\n                    \"\",\r\n                    Constants.siteViewLocationType.RAILEXITGATE\r\n                  )\r\n                }\r\n              ></Button>\r\n            )}\r\n          </TranslationConsumer>\r\n        );\r\n      if (\r\n        locationlist.LocationType === \"RailLoadingArea\" &&\r\n        locationlist.LocationCode === null\r\n      )\r\n        lll.push(\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Button\r\n                type=\"secondary\"\r\n                className=\"dotted-botton\"\r\n                content={t(\"SiteView_AddSpur\")}\r\n                onClick={() =>\r\n                  this.isAddClick(\"\", Constants.siteViewLocationType.SPUR)\r\n                }\r\n              ></Button>\r\n            )}\r\n          </TranslationConsumer>\r\n        );\r\n      if (\r\n        locationlist.LocationType === \"Cluster\" &&\r\n        locationlist.LocationCode === null\r\n      )\r\n        lll.push(\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Button\r\n                type=\"secondary\"\r\n                className=\"dotted-botton\"\r\n                content={t(\"LocationInfo_AddCluster\")}\r\n                onClick={() =>\r\n                  this.isAddClick(\"\", Constants.siteViewLocationType.CLUSTER)\r\n                }\r\n              ></Button>\r\n            )}\r\n          </TranslationConsumer>\r\n        );\r\n    });\r\n    return lll;\r\n  }\r\n  buildBcuTree(associatedArmsList) {\r\n    try {\r\n      return associatedArmsList.length > 0 ? (\r\n        associatedArmsList.map((armsList) =>\r\n          armsList.Code.length > 8 ? (\r\n            <Tooltip\r\n              content={armsList.Code}\r\n              element={\r\n                <Item\r\n                  icon={\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"24px\",\r\n                        marginRight: \"6px\",\r\n                        // color:\r\n                        //   armsList.Status !== null && armsList.Status\r\n                        //     ? \"#000000\"\r\n                        //     : \"#ff0000\",\r\n                      }}\r\n                      className={\r\n                        (armsList.Status !== null && armsList.Status\r\n                          ? \"\"\r\n                          : \"redIcon \") + \"icon-LoadingArm\"\r\n                      }\r\n                    ></span>\r\n                  }\r\n                  title={armsList.Code.substring(0, 8) + \"...\"}\r\n                  actionRenderer={\r\n                    <Tooltip\r\n                      content={this.getLocalisedTooltip(\"Siteview_New\")}\r\n                      position=\"bottom left\"\r\n                      size=\"mini\"\r\n                      element={\r\n                        <Icon\r\n                          root=\"common\"\r\n                          name=\"duplicate\"\r\n                          size=\"medium\"\r\n                          onClick={(e) => this.isNewClick(armsList.Code)}\r\n                        />\r\n                      }\r\n                    />\r\n                  }\r\n                  expanded={true}\r\n                  onTitleClick={() => this.setArmTitle(armsList.Code)}\r\n                >\r\n                  {armsList.AssociatedMeterList.map((metersList) => (\r\n                    <Item\r\n                      title={metersList.MeterLineType}\r\n                      expanded={true}\r\n                      onTitleClick={() => this.parentComponentClick()}\r\n                    >\r\n                      {metersList.MeterList.length > 0 ? (\r\n                        metersList.MeterList.map((meters) =>\r\n                          meters.Code.length > 8 ? (\r\n                            <Tooltip\r\n                              content={meters.Code}\r\n                              element={\r\n                                <Item\r\n                                  icon={\r\n                                    <span\r\n                                      style={{\r\n                                        fontSize: \"24px\",\r\n                                        marginRight: \"6px\",\r\n                                        // color:\r\n                                        //   meters.Active !== null &&\r\n                                        //   meters.Active\r\n                                        //     ? \"#000000\"\r\n                                        //     : \"#ff0000\",\r\n                                      }}\r\n                                      className={\r\n                                        (meters.Active !== null && meters.Active\r\n                                          ? \"\"\r\n                                          : \"redIcon \") + \"icon-Meter\"\r\n                                      }\r\n                                    ></span>\r\n                                  }\r\n                                  title={meters.Code.substring(0, 8) + \"...\"}\r\n                                  actionRenderer={\r\n                                    <Tooltip\r\n                                      content={this.getLocalisedTooltip(\r\n                                        \"Siteview_New\"\r\n                                      )}\r\n                                      position=\"bottom left\"\r\n                                      size=\"mini\"\r\n                                      element={\r\n                                        <Icon\r\n                                          root=\"common\"\r\n                                          name=\"duplicate\"\r\n                                          size=\"medium\"\r\n                                          onClick={(e) =>\r\n                                            this.isNewMeterClick(\r\n                                              meters.Code,\r\n                                              meters.MeterLineType,\r\n                                              meters.LoadingArmCode\r\n                                            )\r\n                                          }\r\n                                        />\r\n                                      }\r\n                                    />\r\n                                  }\r\n                                  expanded={true}\r\n                                  onTitleClick={() =>\r\n                                    this.setMeterTitle(\r\n                                      meters.Code,\r\n                                      meters.MeterLineType,\r\n                                      meters.LoadingArmCode\r\n                                    )\r\n                                  }\r\n                                />\r\n                              }\r\n                              position=\"bottom right\"\r\n                              size=\"mini\"\r\n                              hoverable={true}\r\n                            />\r\n                          ) : (\r\n                            <Item\r\n                              icon={\r\n                                <span\r\n                                  style={{\r\n                                    fontSize: \"24px\",\r\n                                    marginRight: \"6px\",\r\n                                    // color:\r\n                                    //   meters.Active !== null && meters.Active\r\n                                    //     ? \"#000000\"\r\n                                    //     : \"#ff0000\",\r\n                                  }}\r\n                                  className={\r\n                                    (meters.Active !== null && meters.Active\r\n                                      ? \"\"\r\n                                      : \"redIcon \") + \"icon-Meter\"\r\n                                  }\r\n                                ></span>\r\n                              }\r\n                              title={meters.Code}\r\n                              actionRenderer={\r\n                                <Tooltip\r\n                                  content={this.getLocalisedTooltip(\r\n                                    \"Siteview_New\"\r\n                                  )}\r\n                                  position=\"bottom left\"\r\n                                  size=\"mini\"\r\n                                  element={\r\n                                    <Icon\r\n                                      root=\"common\"\r\n                                      name=\"duplicate\"\r\n                                      size=\"medium\"\r\n                                      onClick={(e) =>\r\n                                        this.isNewMeterClick(\r\n                                          meters.Code,\r\n                                          meters.MeterLineType,\r\n                                          meters.LoadingArmCode\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                  }\r\n                                />\r\n                              }\r\n                              expanded={true}\r\n                              onTitleClick={() =>\r\n                                this.setMeterTitle(\r\n                                  meters.Code,\r\n                                  meters.MeterLineType,\r\n                                  meters.LoadingArmCode\r\n                                )\r\n                              }\r\n                              position=\"bottom right\"\r\n                              size=\"mini\"\r\n                              hoverable={true}\r\n                            />\r\n                          )\r\n                        )\r\n                      ) : (\r\n                        <TranslationConsumer>\r\n                          {(t) => (\r\n                            <Button\r\n                              type=\"secondary\"\r\n                              className=\"dotted-botton\"\r\n                              content={t(\"SiteView_AddMeter\")}\r\n                              onClick={(e) =>\r\n                                this.isNewMeterClick(\r\n                                  \"\",\r\n                                  metersList.MeterLineType,\r\n                                  armsList.Code\r\n                                )\r\n                              }\r\n                            ></Button>\r\n                          )}\r\n                        </TranslationConsumer>\r\n                      )}\r\n                    </Item>\r\n                  ))}\r\n                </Item>\r\n              }\r\n            />\r\n          ) : (\r\n            <Item\r\n              icon={\r\n                <span\r\n                  style={{\r\n                    fontSize: \"24px\",\r\n                    marginRight: \"6px\",\r\n                    // color:\r\n                    //   armsList.Status !== null && armsList.Status\r\n                    //     ? \"#000000\"\r\n                    //     : \"#ff0000\",\r\n                  }}\r\n                  className={\r\n                    (armsList.Status !== null && armsList.Status\r\n                      ? \"\"\r\n                      : \"redIcon \") + \"icon-LoadingArm\"\r\n                  }\r\n                ></span>\r\n              }\r\n              title={armsList.Code}\r\n              actionRenderer={\r\n                <Tooltip\r\n                  content={this.getLocalisedTooltip(\"Siteview_New\")}\r\n                  position=\"bottom left\"\r\n                  size=\"mini\"\r\n                  element={\r\n                    <Icon\r\n                      root=\"common\"\r\n                      name=\"duplicate\"\r\n                      size=\"medium\"\r\n                      onClick={(e) => this.isNewClick(armsList.Code)}\r\n                    />\r\n                  }\r\n                />\r\n              }\r\n              expanded={true}\r\n              onTitleClick={() => this.setArmTitle(armsList.Code)}\r\n            >\r\n              {armsList.AssociatedMeterList.map((metersList) => (\r\n                <Item\r\n                  title={metersList.MeterLineType}\r\n                  expanded={true}\r\n                  onTitleClick={() => this.parentComponentClick()}\r\n                >\r\n                  {metersList.MeterList.length > 0 ? (\r\n                    metersList.MeterList.map((meters) =>\r\n                      meters.Code.length > 8 ? (\r\n                        <Tooltip\r\n                          content={meters.Code}\r\n                          element={\r\n                            <Item\r\n                              icon={\r\n                                <span\r\n                                  style={{\r\n                                    fontSize: \"24px\",\r\n                                    marginRight: \"6px\",\r\n                                    // color:\r\n                                    //   meters.Active !== null && meters.Active\r\n                                    //     ? \"#000000\"\r\n                                    //     : \"#ff0000\",\r\n                                  }}\r\n                                  className={\r\n                                    (meters.Active !== null && meters.Active\r\n                                      ? \"\"\r\n                                      : \"redIcon \") + \"icon-Meter\"\r\n                                  }\r\n                                ></span>\r\n                              }\r\n                              title={meters.Code.substring(0, 8) + \"...\"}\r\n                              actionRenderer={\r\n                                <Tooltip\r\n                                  content={this.getLocalisedTooltip(\r\n                                    \"Siteview_New\"\r\n                                  )}\r\n                                  position=\"bottom left\"\r\n                                  size=\"mini\"\r\n                                  element={\r\n                                    <Icon\r\n                                      root=\"common\"\r\n                                      name=\"duplicate\"\r\n                                      size=\"medium\"\r\n                                      onClick={(e) =>\r\n                                        this.isNewMeterClick(\r\n                                          meters.Code,\r\n                                          meters.MeterLineType,\r\n                                          meters.LoadingArmCode\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                  }\r\n                                />\r\n                              }\r\n                              expanded={true}\r\n                              onTitleClick={() =>\r\n                                this.setMeterTitle(\r\n                                  meters.Code,\r\n                                  meters.MeterLineType,\r\n                                  meters.LoadingArmCode\r\n                                )\r\n                              }\r\n                            />\r\n                          }\r\n                          position=\"bottom right\"\r\n                          size=\"mini\"\r\n                          hoverable={true}\r\n                        />\r\n                      ) : (\r\n                        <Item\r\n                          icon={\r\n                            <span\r\n                              style={{\r\n                                fontSize: \"24px\",\r\n                                marginRight: \"6px\",\r\n                                //   color:\r\n                                //     meters.Active !== null && meters.Active\r\n                                //       ? \"#000000\"\r\n                                //       : \"#ff0000\",\r\n                              }}\r\n                              className={\r\n                                (meters.Active !== null && meters.Active\r\n                                  ? \"\"\r\n                                  : \"redIcon \") + \"icon-Meter\"\r\n                              }\r\n                            ></span>\r\n                          }\r\n                          title={meters.Code}\r\n                          actionRenderer={\r\n                            <Tooltip\r\n                              content={this.getLocalisedTooltip(\"Siteview_New\")}\r\n                              position=\"bottom left\"\r\n                              size=\"mini\"\r\n                              element={\r\n                                <Icon\r\n                                  root=\"common\"\r\n                                  name=\"duplicate\"\r\n                                  size=\"medium\"\r\n                                  onClick={(e) =>\r\n                                    this.isNewMeterClick(\r\n                                      meters.Code,\r\n                                      meters.MeterLineType,\r\n                                      meters.LoadingArmCode\r\n                                    )\r\n                                  }\r\n                                />\r\n                              }\r\n                            />\r\n                          }\r\n                          expanded={true}\r\n                          onTitleClick={() =>\r\n                            this.setMeterTitle(\r\n                              meters.Code,\r\n                              meters.MeterLineType,\r\n                              meters.LoadingArmCode\r\n                            )\r\n                          }\r\n                        />\r\n                      )\r\n                    )\r\n                  ) : (\r\n                    <TranslationConsumer>\r\n                      {(t) => (\r\n                        <Button\r\n                          type=\"secondary\"\r\n                          className=\"dotted-botton\"\r\n                          content={t(\"SiteView_AddMeter\")}\r\n                          onClick={(e) =>\r\n                            this.isNewMeterClick(\r\n                              \"\",\r\n                              metersList.MeterLineType,\r\n                              armsList.Code\r\n                            )\r\n                          }\r\n                        ></Button>\r\n                      )}\r\n                    </TranslationConsumer>\r\n                  )}\r\n                </Item>\r\n              ))}\r\n            </Item>\r\n          )\r\n        )\r\n      ) : (\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <Button\r\n              type=\"secondary\"\r\n              className=\"dotted-botton\"\r\n              content={t(\"SiteView_AddLoadingArm\")}\r\n              onClick={() => this.isNewClick(\"\")}\r\n            ></Button>\r\n          )}\r\n        </TranslationConsumer>\r\n      );\r\n    } catch (error) {\r\n      console.log(\"SiteViewTree: Error occured in buildBcuTree\");\r\n    }\r\n  }\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n\r\n      this.getBCUTreeView(this.state.deviceCode);\r\n    } catch (error) {\r\n      console.log(\"SiteTreeView:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n  deleteEvent = (data, saveType, notification) => {\r\n    try {\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n\r\n      this.getBCUTreeView(this.state.deviceCode);\r\n    } catch (error) {\r\n      console.log(\"SiteTreeView:Error occured on deleteEvent\", error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const sitetree = (\r\n      <Tree>\r\n        <Tree.Content>\r\n          {this.props.terminalList.map((myList) => (\r\n            <Item\r\n              title={myList.TerminalNode}\r\n              expanded={true}\r\n              onTitleClick={() => this.parentComponentClick()}\r\n            >\r\n              {myList.LocationDetailsList.length > 0 ? (\r\n                <>{this.handleLocationTree(myList.LocationDetailsList)}</>\r\n              ) : (\r\n                <TranslationConsumer>\r\n                  {(t) => (\r\n                    <div className=\"button-group\">\r\n                      <div>\r\n                        <Button\r\n                          type=\"secondary\"\r\n                          className=\"dotted-botton\"\r\n                          content={t(\"SiteView_AddEntryGate\")}\r\n                          onClick={() =>\r\n                            this.isAddClick(\r\n                              \"\",\r\n                              Constants.siteViewLocationType.ENTRYGATE\r\n                            )\r\n                          }\r\n                        ></Button>\r\n                      </div>\r\n                      <div>\r\n                        <Button\r\n                          type=\"secondary\"\r\n                          className=\"dotted-botton\"\r\n                          content={t(\"SiteView_AddReportingOffice\")}\r\n                          onClick={() =>\r\n                            this.isAddClick(\r\n                              \"\",\r\n                              Constants.siteViewLocationType.REPORTINGOFFICE\r\n                            )\r\n                          }\r\n                        ></Button>\r\n                      </div>\r\n                      <div>\r\n                        <Button\r\n                          type=\"secondary\"\r\n                          className=\"dotted-botton\"\r\n                          content={t(\"SiteView_AddGantry\")}\r\n                          onClick={() =>\r\n                            this.isAddClick(\r\n                              \"\",\r\n                              Constants.siteViewLocationType.GANTRY\r\n                            )\r\n                          }\r\n                        ></Button>\r\n                      </div>\r\n                      <div>\r\n                        <Button\r\n                          type=\"secondary\"\r\n                          className=\"dotted-botton\"\r\n                          content={t(\"SiteView_AddBOLOffice\")}\r\n                          onClick={() =>\r\n                            this.isAddClick(\r\n                              \"\",\r\n                              Constants.siteViewLocationType.BOLOFFICE\r\n                            )\r\n                          }\r\n                        ></Button>\r\n                      </div>\r\n                      <div>\r\n                        <Button\r\n                          type=\"secondary\"\r\n                          className=\"dotted-botton\"\r\n                          content={t(\"SiteView_AddExitGate\")}\r\n                          onClick={() =>\r\n                            this.isAddClick(\r\n                              \"\",\r\n                              Constants.siteViewLocationType.EXITGATE\r\n                            )\r\n                          }\r\n                        ></Button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </TranslationConsumer>\r\n              )}\r\n            </Item>\r\n          ))}\r\n        </Tree.Content>\r\n      </Tree>\r\n    );\r\n    const bcutree = (\r\n      <Tree>\r\n        <Tree.Content>\r\n          {this.state.bcuDeviceList.map((armsList) => (\r\n            <Item\r\n              title={armsList.DeviceCode}\r\n              expanded={true}\r\n              onTitleClick={() =>\r\n                this.childComponent(\r\n                  armsList.DeviceCode,\r\n                  this.state.deviceType,\r\n                  this.state.deviceModel\r\n                )\r\n              }\r\n            >\r\n              {this.buildBcuTree(armsList.AssociatedArmsList)}\r\n            </Item>\r\n          ))}\r\n        </Tree.Content>\r\n      </Tree>\r\n    );\r\n    return (\r\n      <React.Fragment>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            // <div className=\"row ml--10\">\r\n            <div style={{ display: \"flex\" }}>\r\n              {/* <div className=\"col-sm-2 pr-0 pl-0 pb-0 treeview-container\"> */}\r\n              <div className=\"treeview-container\">\r\n                <SidebarLayout className=\"sideBarHeight treeSidebarWidget\">\r\n                  <div className=\"sidebar\">\r\n                    <Tab\r\n                      activeIndex={this.props.activeTab}\r\n                      onTabChange={(activeIndex) =>\r\n                        this.props.onTabChange(activeIndex)\r\n                      }\r\n                    >\r\n                      <Tab.Pane title={t(\"SiteView_Title\")}>\r\n                        {sitetree}\r\n                      </Tab.Pane>\r\n                      <Tab.Pane title={t(\"SiteView_BCUView\")}>\r\n                        {bcutree}\r\n                      </Tab.Pane>\r\n                    </Tab>\r\n                  </div>\r\n                </SidebarLayout>\r\n              </div>\r\n\r\n              <div className=\"main-content-container\">\r\n                <div className=\"treeviewContent\">\r\n                  {this.state.isLoading ? (\r\n                    this.state.locationType ===\r\n                      Constants.siteViewLocationType.GANTRY ||\r\n                      this.state.locationType === \"RailLoadingArea\" ||\r\n                      this.state.locationType ===\r\n                      Constants.siteViewLocationType.SPUR ? (\r\n                      <ErrorBoundary>\r\n                        <GantryDeatilsComposite\r\n                          selectedlocation={this.state.locationCode}\r\n                          locationtype={this.state.locationType}\r\n                          selectedTerminal={this.props.selectedTerminal}\r\n                          isClone={this.state.isClone}\r\n                          onSaved={this.props.onSaved}\r\n                          onDelete={this.props.onDelete}\r\n                          transportationtype={this.props.transportationtype}\r\n                        />\r\n                      </ErrorBoundary>\r\n                    ) : this.state.locationType ===\r\n                      Constants.siteViewLocationType.ISLAND ||\r\n                      this.state.locationType === \"Island\" ? (\r\n                      <ErrorBoundary>\r\n                        <IslandDetailsComposite\r\n                          selectedlocation={this.state.locationCode}\r\n                          locationtype={this.state.locationType}\r\n                          selectedTerminal={this.props.selectedTerminal}\r\n                          parentCode={this.state.parentCode}\r\n                          isClone={this.state.isClone}\r\n                          onSaved={this.props.onSaved}\r\n                          onDelete={this.props.onDelete}\r\n                          transportationtype={this.props.transportationtype}\r\n                        />\r\n                      </ErrorBoundary>\r\n                    ) : this.state.locationType ===\r\n                      Constants.siteViewLocationType.BAY ||\r\n                      this.state.locationType === \"Bay\" ||\r\n                      this.state.locationType === \"MarineBay\" ||\r\n                      this.state.locationType ===\r\n                      Constants.siteViewLocationType.BERTH ||\r\n                      this.state.locationType ===\r\n                      Constants.siteViewLocationType.CLUSTER ? (\r\n                      <ErrorBoundary>\r\n                        <BayDetailsComposite\r\n                          selectedlocation={this.state.locationCode}\r\n                          locationtype={this.state.locationType}\r\n                          selectedTerminal={this.props.selectedTerminal}\r\n                          parentCode={this.state.parentCode}\r\n                          isClone={this.state.isClone}\r\n                          onSaved={this.props.onSaved}\r\n                          onDelete={this.props.onDelete}\r\n                          transportationtype={this.props.transportationtype}\r\n                        />\r\n                      </ErrorBoundary>\r\n                    ) : (\r\n                      <ErrorBoundary>\r\n                        <LocationDetailsComposite\r\n                          selectedlocation={this.state.locationCode}\r\n                          locationtype={this.state.locationType}\r\n                          selectedTerminal={this.props.selectedTerminal}\r\n                          isClone={this.state.isClone}\r\n                          onSaved={this.props.onSaved}\r\n                          onDelete={this.props.onDelete}\r\n                          transportationtype={this.props.transportationtype}\r\n                        />\r\n                      </ErrorBoundary>\r\n                    )\r\n                  ) : this.state.isChildLoadDevice ? (\r\n                    <ErrorBoundary>\r\n                      <DeviceDetailsComposite\r\n                        deviceCode={this.state.deviceCode}\r\n                        deviceType={this.state.deviceType}\r\n                        selectedTerminal={this.props.selectedTerminal}\r\n                        onSaved={this.props.onSaved}\r\n                        IsSiteView={true}\r\n                      />\r\n                    </ErrorBoundary>\r\n                  ) : this.state.isLoadingArm ? (\r\n                    <ErrorBoundary>\r\n                      <LoadingArmDetailsComposite\r\n                        loadingArmCode={this.state.loadingArmCode}\r\n                        deviceCode={this.state.deviceCode}\r\n                        selectedTerminal={this.props.selectedTerminal}\r\n                        isClone={this.state.isClone}\r\n                        onSaved={this.savedEvent}\r\n                        onDelete={this.deleteEvent}\r\n                        transportationtype={this.props.transportationtype}\r\n                      />\r\n                    </ErrorBoundary>\r\n                  ) : this.state.isLoadingMeter ? (\r\n                    <ErrorBoundary>\r\n                      <MeterDetailsComposite\r\n                        meterCode={this.state.meterCode}\r\n                        parentCode={this.state.parentCode}\r\n                        meterLineType={this.state.meterLineType}\r\n                        isClone={this.state.isClone}\r\n                        onSaved={this.savedEvent}\r\n                        onDelete={this.deleteEvent}\r\n                        selectedTerminal={this.props.selectedTerminal}\r\n                        deviceCode={this.state.deviceCode}\r\n                        transportationtype={this.props.transportationtype}\r\n                      />\r\n                    </ErrorBoundary>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </TranslationConsumer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SiteTreeView);\r\n","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport lodash from \"lodash\";\r\nimport SiteTreeView from \"../Common/SiteTreeViewFolder/SiteTreeView\";\r\nimport { SiteTreeViewUserActionsComposite } from \"../Common/SiteTreeViewUserActionsComposite\";\r\n\r\nclass SiteViewComposite extends Component {\r\n  state = {\r\n    operationsVisibilty: { terminal: true },\r\n    terminalOptions: [],\r\n    terminalList: [],\r\n    selectedTerminal: \"\",\r\n    isReadyToRender: false,\r\n    terminalChange: false,\r\n    activeTab: 0,\r\n    transportationType: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.setState({\r\n        selectedTerminal: this.state.terminalOptions[0],\r\n      });\r\n      this.getTerminalList();\r\n      if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n        this.setState({ operationsVisibilty: { terminal: true } });\r\n      } else {\r\n        this.setState({ operationsVisibilty: { terminal: false } });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"SiteViewComposite:Error occured on ComponentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getTerminalList() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetTerminals,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            Array.isArray(result.EntityResult) &&\r\n            result.EntityResult.length > 0\r\n          )\r\n            this.setState({\r\n              terminalOptions: result.EntityResult,\r\n              isReadyToRender: true,\r\n              activeTab: 0,\r\n            });\r\n          this.setState({ selectedTerminal: this.state.terminalOptions[0] });\r\n          this.getSiteTreeView(this.state.selectedTerminal);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(\"SiteViewComposite:Error occured on getTerminalsList\", err);\r\n    }\r\n  }\r\n\r\n  getSiteTreeView(selectedTerminal) {\r\n    var transportationType = \"\";\r\n    if (this.props.activeItem.itemProps !== undefined) {\r\n      if (this.props.activeItem.itemProps.transportationType !== undefined) {\r\n        transportationType = this.props.activeItem.itemProps.transportationType;\r\n      }\r\n    }\r\n    var transportationtype = \"\";\r\n    if (transportationType === \"MARINE\") {\r\n      transportationtype = Constants.siteViewType.MARINE_SITEVIEW;\r\n    }\r\n    if (transportationType === \"ROAD\") {\r\n      transportationtype = Constants.siteViewType.ROAD_SITEVIEW;\r\n    }\r\n    if (transportationType === \"RAIL\") {\r\n      transportationtype = Constants.siteViewType.RAIL_SITEVIEW;\r\n    }\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.siteViewType,\r\n          value: transportationtype,\r\n        },\r\n        {\r\n          key: KeyCodes.terminalCode,\r\n          value: selectedTerminal,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.siteViewType,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetSiteViewTree,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        this.setState({ terminalList: [], isReadyToRender: true });\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            terminalList: lodash.cloneDeep(result.EntityResult),\r\n            isReadyToRender: true,\r\n            transportationtype: transportationType,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isReadyToRender: false,\r\n            terminalList: [],\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"SiteViewComposite:Error occured in getSiteTreeView\", error);\r\n    }\r\n  }\r\n  handleTabChange = (activeIndex) => {\r\n    try {\r\n      this.setState({ activeTab: activeIndex });\r\n    } catch (error) {\r\n      console.log(\r\n        \"SiteViewComposite: Error occurred on handleTabChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleTerminalSelectionChange = (terminal) => {\r\n    try {\r\n      this.setState({\r\n        selectedTerminal: terminal,\r\n        isReadyToRender: true,\r\n        terminalChange: true,\r\n        activeTab: 0,\r\n      });\r\n      this.getSiteTreeView(terminal);\r\n    } catch (error) {\r\n      console.log(\r\n        \"SiteViewComposite:Error occured on handleTerminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      if (notification.messageType === \"success\") {\r\n        this.setState({ operationsVisibilty });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n\r\n      this.getSiteTreeView(this.state.selectedTerminal);\r\n    } catch (error) {\r\n      console.log(\"SiteViewComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  deleteEvent = (data, saveType, notification) => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      if (notification.messageType === \"success\") {\r\n        this.setState({ operationsVisibilty });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n\r\n      this.getSiteTreeView(this.state.selectedTerminal);\r\n    } catch (error) {\r\n      console.log(\"SiteViewComposite:Error occured on deleteEvent\", error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <SiteTreeViewUserActionsComposite\r\n            breadcrumbItem={this.props.activeItem}\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            terminals={this.state.terminalOptions}\r\n            selectedTerminal={this.state.selectedTerminal}\r\n            onTerminalChange={this.handleTerminalSelectionChange}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n          ></SiteTreeViewUserActionsComposite>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <div className=\"projectMasterList\">\r\n            <SiteTreeView\r\n              terminalList={this.state.terminalList}\r\n              selectedTerminal={this.state.selectedTerminal}\r\n              onSaved={this.savedEvent}\r\n              onDelete={this.deleteEvent}\r\n              activeTab={this.state.activeTab}\r\n              onTabChange={this.handleTabChange}\r\n              transportationtype={this.state.transportationtype}\r\n            ></SiteTreeView>\r\n          </div>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nSiteViewComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n\r\nexport default connect(mapStateToProps)(SiteViewComposite);\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";","/*!\n    *\n    * Wijmo Library 5.20221.857\n    * http://wijmo.com/\n    *\n    * Copyright(c) GrapeCity, Inc.  All rights reserved.\n    *\n    * Licensed under the GrapeCity Commercial License.\n    * sales@wijmo.com\n    * wijmo.com/products/wijmo-5/license/\n    *\n    */\n\nvar __extends=this&&this.__extends||function(){var extendStatics=function(t,e){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};return function(t,e){extendStatics(t,e);function __(){this.constructor=t}t.prototype=null===e?Object.create(e):(__.prototype=e.prototype,new __)}}();import{Control,Event,isArray,addClass,removeClass,setCss,isFunction,isPrimitive,isObject,DateTime,isUndefined}from\"@grapecity/wijmo\";import*as React from\"react\";var ComponentBase=function(t){__extends(ComponentBase,t);function ComponentBase(e,n,o){var i=t.call(this,e)||this;i._objPropHash={};i._isMounted=!1;i._mountedCBs=[];i._hostRef=function(t){return i._hostRefValue=t};i._beforeRender=new Event;i._afterRender=new Event;i._beforeWillUnmount=new Event;i._afterWillUnmount=new Event;i._beforeDidUpdate=new Event;i._afterDidUpdate=new Event;ComponentBase._reactMajorVersion||(ComponentBase._reactMajorVersion=parseInt(React.version));i.props=e;i.controlType=n;for(var r=0,s=o&&o.objectProps||[];r<s.length;r++){var p=s[r];i._objPropHash[p]=!0}return i}ComponentBase.prototype.render=function(){this._onBeforeRender();var t=this._renderImpl();this._onAfterRender();return t};ComponentBase.prototype.componentDidMount=function(){var t=this;if(this._isChild()){var e=this.props[ComponentBase._propsParent];e&&e._mountedCB((function(){t._setParent(e)}))}else this._prepareControl();return this.control};ComponentBase.prototype.componentWillUnmount=function(){this._onBeforeWillUnmount();this._siblingInsertedEH&&this._getElement().removeEventListener(\"DOMNodeInserted\",this._siblingInsertedEH);var t=this.control;if(t)if(this._isChild()){var e=this._getParentProp();if(e){var n=this.parent.control[e];if(isArray(n)){var o=n.indexOf(t);o>-1&&n.splice(o,1)}}}else t instanceof Control&&setTimeout((function(){if(t.hostElement){t._orgOuter=null;t.dispose()}}));this._onAfterWillUnmount()};ComponentBase.prototype.shouldComponentUpdate=function(t){return!0};ComponentBase.prototype.componentDidUpdate=function(t){this._onBeforeDidUpdate();var e=this.control;this._copy(e,this.props,t);this._onAfterDidUpdate()};ComponentBase.prototype._mountedCB=function(t){this._isMounted?t():this._mountedCBs.push(t)};ComponentBase.prototype._renderImpl=function(){var t={};t[ComponentBase._propsParent]=this;var e=React.Children.map(this.props.children,(function(e){return e&&React.cloneElement(e,t)})),n={ref:this._hostRef};this._isChild()&&(n.style={display:\"none\"});return React.createElement(\"div\",n,e)};ComponentBase.prototype._onBeforeRender=function(t){this._beforeRender.raise(this,t)};ComponentBase.prototype._onAfterRender=function(t){this._afterRender.raise(this,t)};ComponentBase.prototype._onBeforeWillUnmount=function(t){this._beforeWillUnmount.raise(this,t)};ComponentBase.prototype._onAfterWillUnmount=function(t){this._afterWillUnmount.raise(this,t)};ComponentBase.prototype._onBeforeDidUpdate=function(t){this._beforeDidUpdate.raise(this,t)};ComponentBase.prototype._onAfterDidUpdate=function(t){this._afterDidUpdate.raise(this,t)};ComponentBase.prototype._createControl=function(){var t=this._isChild()?this._isParentInCtor()?this.parent.control:void 0:this._getElement();return new this.controlType(t)};ComponentBase.prototype._prepareControl=function(){var t=this._getElement(),e=this.props;t&&!this._isChild()&&ComponentBase._copyAttrs(t,e,Control._rxInputAtts);var n=this.control=this._createControl(),o=n instanceof Control,i=ComponentBase;if(!this._siblingId){null==this.constructor[i._typeSiblingIdProp]&&(this.constructor[i._typeSiblingIdProp]=++i._siblingDirId+\"\");this._siblingId=this.constructor[i._typeSiblingIdProp]}t.setAttribute(i._typeSiblingIdProp,this._siblingId);var r={};for(var s in e){var p=e[s];this._ignoreProp(s)||isUndefined(p)||(s in n?r[s]=p:this._setHostAttribute(t,s,p))}o?n.initialize(r):this._copy(n,r,null,!0);this._isMounted=!0;var a=this._mountedCBs;this._mountedCBs=[];for(var l=0,h=a;l<h.length;l++){(0,h[l])()}isFunction(e.initialized)&&e.initialized(n)};ComponentBase.prototype._initParent=function(){var t=this._getParentProp();if(t){var e=this.parent.control,n=e[t];if(isArray(n)){var o=this._getSiblingIndex();(o<0||o>=n.length)&&(o=n.length);n.splice(o,0,this.control);this._siblingInsertedEH=this._siblingInserted.bind(this);this._getElement().addEventListener(\"DOMNodeInserted\",this._siblingInsertedEH)}else e[t]=this.control}};ComponentBase.prototype._setParent=function(t){if(t!==this.parent){if(this.parent)throw\"Wijmo child component is already attached to a different parent.\";this.parent=t;this._prepareControl();this._initParent()}};ComponentBase.prototype._isChild=function(){return null!=this._parentProp||null!=this._parentInCtor};ComponentBase.prototype._isParentInCtor=function(){return!0===this._parentInCtor};ComponentBase.prototype._getParentProp=function(){return this.props.wjProperty||this._parentProp};ComponentBase.prototype._getSiblingIndex=function(){var t=this._getElement(),e=t.parentElement;if(!e)return-1;for(var n=e.childNodes,o=-1,i=this._siblingId,r=0;r<n.length;r++){var s=n[r];if(1==s.nodeType&&s.getAttribute(ComponentBase._typeSiblingIdProp)==i){++o;if(s===t)return o}}return-1};ComponentBase.prototype._siblingInserted=function(t){if(t.target===this._getElement()){var e=this._getSiblingIndex(),n=this.control,o=this.parent.control[this._getParentProp()],i=o.indexOf(n);if(e>=0&&i>=0&&e!==i){o.splice(i,1);e=Math.min(e,o.length);o.splice(e,0,n)}}};ComponentBase.prototype._copy=function(t,e,n,o){void 0===o&&(o=!1);if(t&&e){var i,r=t===this.control;for(var s in e)if(!this._ignoreProp(s)||!r){var p=e[s];if(s in t){if(this._isEvent(t,s))o&&isFunction(p)&&t[s].addHandler(p);else if(!n||!this._sameValue(n[s],p))if(null==p)t[s]=p;else if(isPrimitive(p)||isFunction(p)||this._objPropHash[s]&&t===(i||(i=this.control)))t[s]=p;else if(isArray(p)&&isArray(t[s])){var a=t[s],l=p;if(l.length==a.length)for(var h=0;h<l.length;h++)this._copy(a[h],l[h])}else isObject(p)&&this._copy(t[s],e[s])}else this._setHostAttribute(t.hostElement,s,e[s])}}};ComponentBase.prototype._setHostAttribute=function(t,e,n){if(t)switch(e){case\"className\":var o=this._appliedClassName;if(o!==n){removeClass(t,o);addClass(t,n);this._appliedClassName=n}break;case\"style\":setCss(t,n);break;default:null!=t[e]?t[e]=n:\"string\"==typeof n&&\"$\"!==e[0]&&t.setAttribute(e,n)}};ComponentBase.prototype._sameValue=function(t,e){return t==e||DateTime.equals(t,e)};ComponentBase.prototype._isEvent=function(t,e){var n=t&&t[e];return null!=n&&n instanceof Event};ComponentBase.prototype._getElement=function(){return this._hostRefValue};ComponentBase.prototype._ignoreProp=function(t){return\"children\"===t};ComponentBase._copyAttrs=function(t,e,n){if(t)for(var o in e)o.match(n)&&t.setAttribute(o,e[o])};ComponentBase.isInStrictMode=function(t){return!!(t.hasOwnProperty(\"_reactInternalFiber\")&&1&t._reactInternalFiber.mode)};ComponentBase._propsParent=\"$parent\";ComponentBase._typeSiblingIdProp=\"_wjSiblingIdProp\";ComponentBase._siblingDirId=0;return ComponentBase}(React.Component);export{ComponentBase};"],"names":["SiteTreeViewUserActions","_ref","operationsVisibilty","breadcrumbItem","terminals","selectedTerminal","onTerminalChange","handleBreadCrumbClick","_jsxs","className","style","marginTop","children","_jsx","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","Select","placeholder","value","disabled","terminal","options","Utilities","onChange","defaultProps","itemName","itemProps","isComponent","SiteTreeViewUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","padding","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","Modal","open","size","Content","marginLeft","textAlign","Icon","root","name","display","flexWrap","Input","fluid","type","disablePasswordToggle","indicator","label","reserveSpace","Footer","Button","content","connect","getUserDetails","TokenAuth","GantryDetails","gantry","modGantry","selectedLocationType","onActiveStatusChange","useTranslation","Code","Name","ParentCode","Active","text","EntityRemarks","GantryDetailsComposite","saveEnabled","isDeleteEnabled","isReadyToRender","gantryValidationDef","showDeleteAuthenticationLayout","showSaveAuthenticationLayout","tempGantry","saveGantry","createGantry","updateGantry","handleSave","fillDetails","validateSave","IsWebPortalUser","handleActiveStatusChange","handleChange","handleDelete","GantryCode","keyData","keyDataCode","ShareHolderCode","KeyCodes","Key","Value","notification","messageType","message","messageResultDetails","keyFields","Constants","SPUR","keyValues","isSuccess","errorMessage","FunctionsList","functionGroups","remove","transportationtype","getGantry","selectedlocation","isClone","locationtype","onDelete","GANTRY","authenticateDelete","handleAuthenticationClose","IsArchived","componentWillReceiveProps","nextProps","keys","forEach","propsResult","locationCode","terminalCode","emptyGantry","LocationType","add","keyCode","obj","EntityTypeCode","modify","TerminalCode","err","length","onSaved","Entity","getFunctionGroupName","fnRailSiteView","fnSiteView","getFunctionName","popUpContents","fieldName","fieldValue","Date","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","LastActive","CreatedTime","TMDetailsHeader","entityCode","newEntityName","SiteDetailsUserActions","isEnterpriseNode","IsEnterpriseNode","UserName","LoadingPage","Tree","SiteTreeView","isLoading","isChildLoadDevice","isLoadingMeter","isLoadingArm","terminalList","bcuDeviceList","locationType","deviceType","selectedLocationCode","selectedDeviceCode","deviceCode","loadingArmCode","deviceModel","parentCode","meterLineType","siteExpandedItems","bcuExpandedItems","handleMenuExpandCollapse","includes","index","findIndex","item","splice","push","savedEvent","saveType","toast","NotifyEvent","notificationMessage","autoClose","getBCUTreeView","deleteEvent","ROAD_BCUVIEW","Array","isArray","setTitle","setArmTitle","setMeterTitle","meterCode","childComponent","parentComponentClick","isAddClick","isNewClick","code","isNewMeterClick","buildDevices","deviceList","myList","DeviceCode","Tooltip","element","icon","fontSize","marginRight","DeviceType","WEIGH_BRIDGE","getKeyByValue","title","getSelectedDeviceCode","onTitleClick","DeviceModel","position","hoverable","substring","getSelectedLocationCode","getLocalisedTooltip","buildTree","locationlist","LocationCode","ISLAND","actionRenderer","e","AssociatedLocationCode","expanded","AssociatedLocationsList","AssociatedDevices","buildIslandTree","ascLocation","BAY","lll","handleLocationTree","items","avLocations","replace","CLUSTER","ENTRYGATE","EXITGATE","REPORTINGOFFICE","BOLOFFICE","RAILENTRYGATE","RAILEXITGATE","buildBcuTree","associatedArmsList","armsList","Status","AssociatedMeterList","metersList","MeterLineType","MeterList","meters","LoadingArmCode","sitetree","TerminalNode","LocationDetailsList","_Fragment","bcutree","AssociatedArmsList","React","SidebarLayout","Tab","activeIndex","activeTab","onTabChange","Pane","GantryDeatilsComposite","IslandDetailsComposite","BERTH","BayDetailsComposite","LocationDetailsComposite","DeviceDetailsComposite","IsSiteView","LoadingArmDetailsComposite","MeterDetailsComposite","SiteViewComposite","terminalOptions","terminalChange","transportationType","handleTabChange","handleTerminalSelectionChange","getSiteTreeView","getTerminalList","activeItem","MARINE_SITEVIEW","ROAD_SITEVIEW","RAIL_SITEVIEW","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","view","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","shareholderCode","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","shipmentCode","orderCode","receiptCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","siteViewType","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","transportaionType","bayCode","TransactionNumber","BatchNumber","tankGroupCode","tankCode","shipmentType","shipmentStatus","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","forceClosureReason","TransactionType","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks","__extends","extendStatics","setPrototypeOf","__proto__","n","hasOwnProperty","__","prototype","create","ComponentBase","o","i","call","_objPropHash","_isMounted","_mountedCBs","_hostRef","_hostRefValue","_beforeRender","Event","_afterRender","_beforeWillUnmount","_afterWillUnmount","_beforeDidUpdate","_afterDidUpdate","_reactMajorVersion","parseInt","controlType","r","s","objectProps","p","_onBeforeRender","_renderImpl","_onAfterRender","_isChild","_propsParent","_mountedCB","_setParent","_prepareControl","control","componentWillUnmount","_onBeforeWillUnmount","_siblingInsertedEH","_getElement","removeEventListener","_getParentProp","parent","indexOf","Control","setTimeout","hostElement","_orgOuter","dispose","_onAfterWillUnmount","shouldComponentUpdate","componentDidUpdate","_onBeforeDidUpdate","_copy","_onAfterDidUpdate","ref","raise","_createControl","_isParentInCtor","_copyAttrs","_rxInputAtts","_siblingId","_typeSiblingIdProp","_siblingDirId","setAttribute","_ignoreProp","isUndefined","_setHostAttribute","initialize","a","l","h","isFunction","initialized","_initParent","_getSiblingIndex","_siblingInserted","bind","addEventListener","_parentProp","_parentInCtor","wjProperty","parentElement","childNodes","nodeType","getAttribute","target","Math","min","_isEvent","addHandler","_sameValue","isPrimitive","isObject","_appliedClassName","removeClass","addClass","setCss","DateTime","equals","match","isInStrictMode","_reactInternalFiber"],"sourceRoot":""}