{"version":3,"file":"static/js/8311.786c881a.chunk.js","mappings":"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","sources":["Components/Composite/Common/TMDetailsKPILayout.jsx","Components/UIBase/Details/VesselDetails.jsx","Components/Composite/Details/VesselDetailsComposite.jsx","Components/UIBase/Common/AssociatedTerminals.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/DateFieldsInEntities.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nexport default function TMDetailsKPILayout({\r\n    KPIList,\r\n    pageName,\r\n    rowHeight,\r\n    widgetHeight,\r\n    isDraggable,\r\n    isResizable,\r\n    kpiDisplayTopBreakpoint\r\n}) {\r\n    const [KPIDisplays, setKPIDisplays] = useState(1);\r\n\r\n    const kpiDiv = React.useRef(null);\r\n\r\n    const hideKpis = () => {\r\n        let currentScrollPos = window.pageYOffset;\r\n        let KPIDisplay = KPIDisplays;\r\n\r\n        // hide kpis based on div position to top of the window \r\n        if (kpiDiv.current && kpiDiv.current.getBoundingClientRect().top < kpiDisplayTopBreakpoint) {\r\n            KPIDisplay = 0;\r\n        }\r\n        // show the kpis once at top of the screen\r\n        else if (currentScrollPos === 0) {\r\n            KPIDisplay = 1\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n        setKPIDisplays(KPIDisplay);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\") {\r\n            window.addEventListener(\"scroll\", hideKpis);\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // remove listener on unmount\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", hideKpis)\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={kpiDiv}>\r\n            {KPIDisplays === 1 ? <TranslationConsumer>\r\n                {(t) => (\r\n                    <div style={{ marginTop: \"6px\" }}>\r\n                        <ErrorBoundary>\r\n                            <KPIDashboardLayout\r\n                                kpiList={KPIList}\r\n                                isDraggable={isDraggable}\r\n                                isResizable={isResizable}\r\n                                rowHeight={rowHeight}\r\n                                widgetHeight={widgetHeight}\r\n                                pageName={pageName}\r\n                            ></KPIDashboardLayout>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n                )}\r\n            </TranslationConsumer> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nTMDetailsKPILayout.propTypes = {\r\n    kpiDisplayTopBreakpoint: PropTypes.number\r\n}\r\n\r\nTMDetailsKPILayout.defaultProps = {\r\n    kpiDisplayTopBreakpoint: 100\r\n}","import React from \"react\";\r\nimport {\r\n  Select,\r\n  Input,\r\n  DatePicker,\r\n  Icon,\r\n  Accordion,\r\n  Checkbox,\r\n} from \"@scuf/common\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport {\r\n  getOptionsWithSelect,\r\n  handleIsRequiredCompartmentCell,\r\n} from \"../../../JS/functionalUtilities\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\n\r\nVesselDetails.propTypes = {\r\n  vessel: PropTypes.object.isRequired,\r\n  modVessel: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCarrierCompanyChange: PropTypes.func.isRequired,\r\n  onLoadingTypeChange: PropTypes.func.isRequired,\r\n  onActiveStatusChange: PropTypes.func.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    carriers: PropTypes.array,\r\n    vesselType: PropTypes.array,\r\n    productType: PropTypes.array,\r\n    loadingType: PropTypes.array,\r\n    unitOfVolume: PropTypes.array,\r\n    unitOfDimension: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n  }).isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  handleAddCompartment: PropTypes.func.isRequired,\r\n  handleDeleteCompartment: PropTypes.func.isRequired,\r\n  selectedCompRow: PropTypes.array.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n  handleRowSelectionChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  modAttributeMetaDataList: PropTypes.array.isRequired,\r\n  attributeValidationErrors: PropTypes.array.isRequired,\r\n  onAttributeDataChange: PropTypes.func.isRequired,\r\n  handleCompAttributeCellDataEdit: PropTypes.func.isRequired,\r\n  toggleExpand: PropTypes.func.isRequired,\r\n  expandedRows: PropTypes.array.isRequired,\r\n  compartmentDetailsPageSize: PropTypes.number.isRequired,\r\n  onCarrierSearchChange: PropTypes.func.isRequired,\r\n};\r\n\r\nVesselDetails.defaultProps = {\r\n  listOptions: {\r\n    carriers: [],\r\n    vesselType: [],\r\n    productType: [],\r\n    loadingType: [],\r\n    unitOfVolume: [],\r\n    unitOfDimension: [],\r\n    terminalCodes: [],\r\n  },\r\n  isEnterpriseNode: false,\r\n};\r\nexport function VesselDetails({\r\n  vessel,\r\n  modVessel,\r\n  validationErrors,\r\n  onFieldChange,\r\n  onCarrierCompanyChange,\r\n  onLoadingTypeChange,\r\n  onActiveStatusChange,\r\n  listOptions,\r\n  onDateTextChange,\r\n  onAllTerminalsChange,\r\n  handleAddCompartment,\r\n  handleDeleteCompartment,\r\n  selectedCompRow,\r\n  handleCellDataEdit,\r\n  handleRowSelectionChange,\r\n  isEnterpriseNode,\r\n  modAttributeMetaDataList,\r\n  attributeValidationErrors,\r\n  onAttributeDataChange,\r\n  handleCompAttributeCellDataEdit,\r\n  toggleExpand,\r\n  expandedRows,\r\n  compartmentDetailsPageSize,\r\n  onCarrierSearchChange,\r\n}) {\r\n  const [t] = useTranslation();\r\n  const handleTextEdit = (cellData) => {\r\n    let val =\r\n      modVessel.VehicleTrailers[0].Trailer.Compartments[cellData.rowIndex][\r\n        cellData.field\r\n      ];\r\n    if (cellData.field === \"Capacity\" && val !== null && val !== \"\")\r\n      val = val.toLocaleString();\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={val}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n        disabled={cellData.field === \"Code\" ? true : false}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleDropdownEdit = (cellData) => {\r\n    return (\r\n      // <TranslationConsumer>\r\n      //   {(t) => (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        value={\r\n          modVessel.VehicleTrailers[0].Trailer.Compartments[cellData.rowIndex][\r\n            cellData.field\r\n          ]\r\n        }\r\n        fluid\r\n        options={listOptions.unitOfVolume}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n      //   )}\r\n      // </TranslationConsumer>\r\n    );\r\n  };\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  const handleAttributeType = (data) => {\r\n    const attribute = data.rowData;\r\n    const handleAttributeDateValue = (dateval) => {\r\n      var chars = dateval.split(\"-\");\r\n      return new Date(chars[0], chars[1] - 1, chars[2]);\r\n    };\r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n      var Dateval = new Date(value);\r\n      value =\r\n        Dateval.getFullYear() +\r\n        \"-\" +\r\n        (\"0\" + (Dateval.getMonth() + 1)).slice(-2) +\r\n        \"-\" +\r\n        (\"0\" + Dateval.getDate()).slice(-2);\r\n      handleCompAttributeCellDataEdit(attribute, value);\r\n    };\r\n    try {\r\n      return attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.STRING.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.INT.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.FLOAT.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.LONG.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.DOUBLE.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n            attribute.AttributeValue === undefined ||\r\n            attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : attribute.AttributeValue.toLocaleString()\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.BOOL.toLowerCase() ? (\r\n        <Checkbox\r\n          checked={\r\n            attribute.AttributeValue.toString().toLowerCase() === \"true\"\r\n              ? true\r\n              : false\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n        ></Checkbox>\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.DATETIME.toLowerCase() ? (\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n            attribute.AttributeValue === undefined ||\r\n            attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : handleAttributeDateValue(attribute.AttributeValue)\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          showYearSelector=\"true\"\r\n          onChange={(value) => convertAttributeDatetoString(data, value)}\r\n          onTextChange={(value) => {\r\n            convertAttributeDatetoString(data, value);\r\n          }}\r\n          reserveSpace={false}\r\n        />\r\n      ) : null;\r\n    } catch (error) {\r\n      console.log(\"TrailerDetails:Error occured on handleAttributeType\", error);\r\n    }\r\n  };\r\n\r\n  const handleIsRequiredCompAttributes = (data) => {\r\n    return data.rowData.IsMandatory ? (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n        <div class=\"ui red circular empty label badge  circle-padding\" />\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const expanderTemplate = (data) => {\r\n    const open =\r\n      expandedRows.findIndex(\r\n        (x) =>\r\n          x.CompartmentSeqNoInTrailer === data.rowData.CompartmentSeqNoInTrailer\r\n      ) >= 0\r\n        ? true\r\n        : false;\r\n    return (\r\n      <div\r\n        onClick={() => toggleExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        <span>{open ? t(\"Hide_Attributes\") : t(\"View_Attributes\")}</span>\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"caret-up\" : \"caret-down\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  function rowExpansionTemplate(data) {\r\n    return Array.isArray(data.AttributesforUI) &&\r\n      data.AttributesforUI.length > 0 ? (\r\n      <div className=\"childTable\">\r\n        <DataTable\r\n          data={data.AttributesforUI}\r\n          row={1}\r\n          rows={compartmentDetailsPageSize}\r\n        >\r\n          {isEnterpriseNode ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"TerminalCode\"\r\n              field=\"TerminalCode\"\r\n              header={t(\"CompartmentTerminal\")}\r\n              editable={false}\r\n            ></DataTable.Column>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"AttributeName\"\r\n            header={t(\"CompartmentAttributeName\")}\r\n            renderer={handleIsRequiredCompAttributes}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            header={t(\"CompartmentAttributeValue\")}\r\n            renderer={handleAttributeType}\r\n          />\r\n          <DataTable.Pagination />\r\n        </DataTable>\r\n      </div>\r\n    ) : (\r\n      <div className=\"compartmentIcon\">\r\n        <div className=\"gridButtonAlignLeft\">\r\n          {t(\"CustomerInventory_NoRecordsFound\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    // <TranslationConsumer>\r\n    //   {(t) => (\r\n    <div className=\"detailsContainer\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modVessel.Code}\r\n            indicator=\"required\"\r\n            disabled={vessel.Code !== \"\"}\r\n            onChange={(data) => onFieldChange(\"Code\", data)}\r\n            label={t(\"Vessel_Code\")}\r\n            error={t(validationErrors.Code)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modVessel.Name}\r\n            label={t(\"Vessel_Name\")}\r\n            indicator=\"required\"\r\n            onChange={(data) => onFieldChange(\"Name\", data)}\r\n            error={t(validationErrors.Name, {\r\n              label: t(\"Vessel_Name\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modVessel.Description}\r\n            label={t(`Vehicle_Desc`)}\r\n            onChange={(data) => onFieldChange(\"Description\", data)}\r\n            error={t(validationErrors.Description)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(\"Vehicle_CarrierCompany\")}\r\n            value={modVessel.CarrierCompanyCode}\r\n            options={listOptions.carriers}\r\n            onChange={(data) => {\r\n              onCarrierCompanyChange(data);\r\n            }}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.CarrierCompanyCode)}\r\n            reserveSpace={false}\r\n            disabled={vessel.Code !== \"\"}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n            onSearch={onCarrierSearchChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vessel_Type`)}\r\n            value={modVessel.VehicleType}\r\n            options={listOptions.vesselType}\r\n            onChange={(data) => {\r\n              onFieldChange(\"VehicleType\", data);\r\n            }}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.VehicleType)}\r\n            reserveSpace={false}\r\n            disabled={vessel.Code !== \"\"}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_ProductType`)}\r\n            value={modVessel.ProductType}\r\n            options={listOptions.productType}\r\n            onChange={(data) => {\r\n              onFieldChange(\"ProductType\", data);\r\n            }}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.ProductType)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_LoadingType`)}\r\n            value={modVessel.VehicleTrailers[0].Trailer.LoadingType}\r\n            options={listOptions.loadingType}\r\n            onChange={(data) => {\r\n              onLoadingTypeChange(data);\r\n            }}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.LoadingType)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modVessel.LicenseNo}\r\n            label={t(`Vehicle_LicenseNo`)}\r\n            indicator=\"required\"\r\n            onChange={(data) => onFieldChange(\"LicenseNo\", data)}\r\n            error={t(validationErrors.LicenseNo)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <DatePicker\r\n            fluid\r\n            value={\r\n              modVessel.LicenseNoExpiryDate === null\r\n                ? \"\"\r\n                : Utilities.convertStringToCommonDateFormat(\r\n                    modVessel.LicenseNoExpiryDate\r\n                  )\r\n            }\r\n            displayFormat={getCurrentDateFormat()}\r\n            label={t(`Vehicle_LicenseExpiry`)}\r\n            showYearSelector=\"true\"\r\n            indicator=\"required\"\r\n            onChange={(data) => onFieldChange(\"LicenseNoExpiryDate\", data)}\r\n            onTextChange={(value, error) => {\r\n              onDateTextChange(\"LicenseNoExpiryDate\", value, error);\r\n            }}\r\n            error={t(validationErrors.LicenseNoExpiryDate)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modVessel.RegisteredInCountry}\r\n            label={t(\"Vessel_Country\")}\r\n            onChange={(data) => onFieldChange(\"RegisteredInCountry\", data)}\r\n            error={t(validationErrors.RegisteredInCountry, {\r\n              label: t(\"Vessel_Country\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modVessel.Height === null ? \"\" : modVessel.Height.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_height`)}\r\n            onChange={(data) => onFieldChange(\"Height\", data)}\r\n            error={t(validationErrors.Height, {\r\n              label: t(\"Vehicle_height\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modVessel.Width === null ? \"\" : modVessel.Width.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_Width`)}\r\n            onChange={(data) => onFieldChange(\"Width\", data)}\r\n            error={t(validationErrors.Width, {\r\n              label: t(\"Vehicle_Width\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modVessel.Length === null ? \"\" : modVessel.Length.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_Length`)}\r\n            onChange={(data) => onFieldChange(\"Length\", data)}\r\n            error={t(validationErrors.Length, {\r\n              label: t(\"Vehicle_Length\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_UOMDimemsion`)}\r\n            value={modVessel.LWHUOM}\r\n            options={getOptionsWithSelect(\r\n              listOptions.unitOfDimension,\r\n              t(\"Common_Select\")\r\n            )}\r\n            onChange={(data) => {\r\n              onFieldChange(\"LWHUOM\", data);\r\n            }}\r\n            error={t(validationErrors.LWHUOM)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modVessel.MaxLoadableVolume === null\r\n                ? \"\"\r\n                : modVessel.MaxLoadableVolume.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_MaxLoadVolume`)}\r\n            onChange={(data) => onFieldChange(\"MaxLoadableVolume\", data)}\r\n            error={t(validationErrors.MaxLoadableVolume)}\r\n            reserveSpace={false}\r\n            disabled={true}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_UOMVolume`)}\r\n            value={modVessel.VolumeUOM}\r\n            options={listOptions.unitOfVolume}\r\n            onChange={(data) => {\r\n              onFieldChange(\"VolumeUOM\", data);\r\n            }}\r\n            error={t(validationErrors.VolumeUOM)}\r\n            reserveSpace={false}\r\n            disabled={true}\r\n          />\r\n        </div>\r\n        {isEnterpriseNode ? (\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <AssociatedTerminals\r\n              terminalList={listOptions.terminalCodes}\r\n              selectedTerminal={modVessel.TerminalCodes}\r\n              error={t(validationErrors.TerminalCodes)}\r\n              onFieldChange={onFieldChange}\r\n              onCheckChange={onAllTerminalsChange}\r\n            ></AssociatedTerminals>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(\"Vehicle_Status\")}\r\n            value={modVessel.Active}\r\n            options={[\r\n              { text: t(\"ViewShipment_Ok\"), value: true },\r\n              { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n            ]}\r\n            onChange={(data) => onActiveStatusChange(data)}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modVessel.Remarks === null ? \"\" : modVessel.Remarks}\r\n            label={t(\"Vehicle_Remarks\")}\r\n            onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n            indicator={modVessel.Active !== vessel.Active ? \"required\" : \"\"}\r\n            error={t(validationErrors.Remarks)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {modAttributeMetaDataList.length > 0\r\n        ? modAttributeMetaDataList.map((attribute) => (\r\n            <ErrorBoundary>\r\n              <Accordion>\r\n                <Accordion.Content\r\n                  className=\"attributeAccordian\"\r\n                  title={\r\n                    isEnterpriseNode\r\n                      ? attribute.TerminalCode + \" - \" + t(\"Attributes_Header\")\r\n                      : t(\"Attributes_Header\")\r\n                  }\r\n                >\r\n                  <AttributeDetails\r\n                    selectedAttributeList={attribute.attributeMetaDataList}\r\n                    handleCellDataEdit={onAttributeDataChange}\r\n                    attributeValidationErrors={handleValidationErrorFilter(\r\n                      attributeValidationErrors,\r\n                      attribute.TerminalCode\r\n                    )}\r\n                  ></AttributeDetails>\r\n                </Accordion.Content>\r\n              </Accordion>\r\n            </ErrorBoundary>\r\n          ))\r\n        : null}\r\n\r\n      <div className=\"row compartmentRow\">\r\n        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n          <h4>{t(\"Trailer_CompartmentInfo\")}</h4>\r\n        </div>\r\n\r\n        <div className=\"col col-md-4 col-lg-3 col-xl-3\">\r\n          <div className=\"compartmentIconContainer\">\r\n            <div onClick={handleAddCompartment} className=\"compartmentIcon\">\r\n              <div>\r\n                <Icon root=\"common\" name=\"badge-plus\" size=\"medium\" />\r\n              </div>\r\n              <div className=\"margin_l10\">\r\n                <h5 className=\"font14\">{t(\"TrailerInfo_Add\")}</h5>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              onClick={handleDeleteCompartment}\r\n              className=\"compartmentIcon margin_l30\"\r\n            >\r\n              <div>\r\n                <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n              </div>\r\n              <div className=\"margin_l10\">\r\n                <h5 className=\"font14\">{t(\"TrailerInfo_Delete\")}</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row marginRightZero tableScroll\">\r\n        <div className=\"col-12 detailsTable havingchildTable\">\r\n          <DataTable\r\n            data={modVessel.VehicleTrailers[0].Trailer.Compartments}\r\n            rowExpansionTemplate={rowExpansionTemplate}\r\n            expandedRows={expandedRows}\r\n            selectionMode=\"multiple\"\r\n            selection={selectedCompRow}\r\n            onSelectionChange={handleRowSelectionChange}\r\n            onEdit={handleCellDataEdit}\r\n            scrollable={true}\r\n            scrollHeight=\"320px\"\r\n          >\r\n            <DataTable.Column\r\n              className=\"compColHeight disabledColumn colminWidth\"\r\n              key=\"Code\"\r\n              field=\"Code\"\r\n              header={t(\"Trailer_CompCode\")}\r\n              editFieldType=\"text\"\r\n            ></DataTable.Column>\r\n\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"Description\"\r\n              field=\"Description\"\r\n              header={t(\"Trailer_Desc\")}\r\n              editable={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleTextEdit}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"Capacity\"\r\n              field=\"Capacity\"\r\n              header={handleIsRequiredCompartmentCell(\r\n                t(\"Trailer_CompCapacity\")\r\n              )}\r\n              editable={true}\r\n              renderer={(cellData) =>\r\n                cellData.value === null ? \"\" : cellData.value.toLocaleString()\r\n              }\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleTextEdit}\r\n            ></DataTable.Column>\r\n\r\n            <DataTable.Column\r\n              className=\"compColHeight colminWidth\"\r\n              key=\"UOM\"\r\n              field=\"UOM\"\r\n              header={handleIsRequiredCompartmentCell(t(\"Trailer_UOM\"))}\r\n              editable={true}\r\n              editFieldType=\"text\"\r\n              customEditRenderer={handleDropdownEdit}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"expandedColumn\"\r\n              initialWidth=\"200px\"\r\n              renderer={expanderTemplate}\r\n            />\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    //   )}\r\n    // </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { emptyRigidTruck } from \"../../../JS/DefaultEntities\";\r\nimport { VesselDetails } from \"../../UIBase/Details/VesselDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { vesselValidationDef } from \"../../../JS/ValidationDef\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { functionGroups, fnVessel ,fnKPIInformation} from \"../../../JS/FunctionGroups\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { trailerCompartmentValidationDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport {\r\n  vesselAttributeEntity,\r\n  vesselCompartmentAttributeEntity,\r\n} from \"../../../JS/AttributeEntity\";\r\nimport * as DateFieldsInEntities from \"../../../JS/DateFieldsInEntities\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { kpiVesselDetail } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass VesselDetailsComposite extends Component {\r\n  state = {\r\n    vessel: lodash.cloneDeep(emptyRigidTruck),\r\n    modVessel: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(vesselValidationDef),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    carrierOptions: [],\r\n    carrierSearchOptions: [],\r\n    terminalOptions: [],\r\n    selectedCompRow: [],\r\n    productTypeOptions: [],\r\n    loadingTypeOptions: [],\r\n    vesselTypeOptions: [],\r\n    volumeUOMOptions: [],\r\n    weightUOMOptions: [],\r\n    lengthUOMOptions: [],\r\n    attributeMetaDataList: [],\r\n    //compartmentAttributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    expandedRows: [],\r\n    vesselKPIList: [],\r\n    maxNumberOfCompartments: 30,\r\n    showAuthenticationLayout: false,\r\n    tempVessel: {},\r\n  };\r\n\r\n  getAttributes(vesselRow) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [vesselAttributeEntity, vesselCompartmentAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.marine_vessel\r\n                ),\r\n            },\r\n            () => this.getVessel(vesselRow)\r\n          );\r\n        } else {\r\n          console.log(\"Failed to get Attributes\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Attributes:\", error);\r\n    }\r\n  }\r\n\r\n  getVessel(vesselRow) {\r\n    emptyRigidTruck.TerminalCodes = [];\r\n    emptyRigidTruck.VehicleType = Constants.VehicleType.Ship;\r\n    emptyRigidTruck.ShareholderCode = this.props.selectedShareholder;\r\n    emptyRigidTruck.ProductType = \"ALLPROD\";\r\n    emptyRigidTruck.VehicleTrailers[0].Trailer.LoadingType = \"BOTTOM\";\r\n    if (vesselRow.Common_Code === undefined) {\r\n      this.setState(\r\n        {\r\n          vessel: lodash.cloneDeep(emptyRigidTruck),\r\n          modVessel: lodash.cloneDeep(emptyRigidTruck),\r\n          isReadyToRender: true,\r\n          modAttributeMetaDataList: [],\r\n          vesselKPIList:[],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnVessel\r\n          ),\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode === false)\r\n            this.localNodeAttribute();\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: vesselRow.Common_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.carrierCode,\r\n        value: vesselRow.Vehicle_CarrierCompany,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: Constants.TransportationType.MARINE,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetVessel,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult.VehicleTrailers[0].Trailer.Compartments !==\r\n              null &&\r\n            result.EntityResult.VehicleTrailers[0].Trailer.Compartments.length >\r\n              0\r\n          )\r\n            result.EntityResult.VehicleTrailers[0].Trailer.Compartments =\r\n              result.EntityResult.VehicleTrailers[0].Trailer.Compartments.sort(\r\n                (a, b) =>\r\n                  a.CompartmentSeqNoInTrailer - b.CompartmentSeqNoInTrailer\r\n              );\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              vessel: lodash.cloneDeep(result.EntityResult),\r\n              modVessel: lodash.cloneDeep(result.EntityResult),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnVessel\r\n              ),\r\n            },\r\n            () => {\r\n              this.getTerminalsForCarrier(\r\n                result.EntityResult.CarrierCompanyCode\r\n              );\r\n              this.getKPIList(this.props.selectedShareholder,result.EntityResult.Code)\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            vessel: lodash.cloneDeep(emptyRigidTruck),\r\n            modVessel: lodash.cloneDeep(emptyRigidTruck),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetVessel:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Vessel:\", error, vesselRow);\r\n      });\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals !== undefined && selectedTerminals !== null) {\r\n        let attributesTerminalsList = [];\r\n        var attributeMetaDataList = [];\r\n        var modAttributeMetaDataList = [];\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        modAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.modAttributeMetaDataList\r\n        );\r\n        const attributeValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeValidationErrors\r\n        );\r\n        var modVessel = lodash.cloneDeep(this.state.modVessel);\r\n\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          });\r\n\r\n          if (existitem === undefined) {\r\n            attributeMetaDataList.marine_vessel.forEach(function (\r\n              attributeMetaData\r\n            ) {\r\n              if (attributeMetaData.TerminalCode === terminal) {\r\n                var Attributevalue = modVessel.Attributes.find(\r\n                  (vesselAttribute) => {\r\n                    return vesselAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n                attributesTerminalsList.push(attributeMetaData);\r\n              }\r\n            });\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n        modAttributeMetaDataList = [];\r\n        modAttributeMetaDataList = attributesTerminalsList;\r\n        modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n          modAttributeMetaDataList\r\n        );\r\n        attributeValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n              (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n\r\n        this.formCompartmentAttributes(selectedTerminals);\r\n\r\n        this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"VesselDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  formCompartmentAttributes(selectedTerminals) {\r\n    try {\r\n      let attributes = lodash.cloneDeep(this.state.attributeMetaDataList);\r\n\r\n      attributes = attributes.marine_trailercompartment.filter(function (\r\n        attTerminal\r\n      ) {\r\n        return selectedTerminals.some(function (selTerminal) {\r\n          return attTerminal.TerminalCode === selTerminal;\r\n        });\r\n      });\r\n      var modVessel = lodash.cloneDeep(this.state.modVessel);\r\n      let compAttributes = [];\r\n      attributes.forEach((att) => {\r\n        att.attributeMetaDataList.forEach((attribute) => {\r\n          compAttributes.push({\r\n            AttributeCode: attribute.Code,\r\n            AttributeName: attribute.DisplayName,\r\n            AttributeValue: attribute.DefaultValue,\r\n            TerminalCode: attribute.TerminalCode,\r\n            IsMandatory: attribute.IsMandatory,\r\n            DataType: attribute.DataType,\r\n            IsReadonly: attribute.IsReadonly,\r\n            MinValue: attribute.MinValue,\r\n            MaxValue: attribute.MaxValue,\r\n            ValidationFormat: attribute.ValidationFormat,\r\n            compSequenceNo: \"\",\r\n          });\r\n        });\r\n      });\r\n      let attributesforNewComp = lodash.cloneDeep(compAttributes);\r\n      modVessel.VehicleTrailers[0].Trailer.Compartments.forEach((comp) => {\r\n        if (\r\n          comp.Code === null &&\r\n          (comp.AttributesforUI === null || comp.AttributesforUI === undefined)\r\n        ) {\r\n          comp.AttributesforUI = [];\r\n          attributesforNewComp.forEach((assignedAttributes) => {\r\n            assignedAttributes.compSequenceNo = comp.CompartmentSeqNoInTrailer;\r\n            comp.AttributesforUI.push(assignedAttributes);\r\n          });\r\n        } else {\r\n          if (\r\n            comp.AttributesforUI !== null &&\r\n            comp.AttributesforUI !== undefined\r\n          ) {\r\n            comp.AttributesforUI = comp.AttributesforUI.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n\r\n            compAttributes = compAttributes.filter(function (attTerminal) {\r\n              return !comp.AttributesforUI.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal.TerminalCode;\r\n              });\r\n            });\r\n          } else comp.AttributesforUI = [];\r\n\r\n          let tempCompAttributes = lodash.cloneDeep(compAttributes);\r\n          if (\r\n            Array.isArray(comp.Attributes) &&\r\n            comp.Attributes !== null &&\r\n            comp.Attributes !== undefined &&\r\n            comp.Attributes.length > 0\r\n          ) {\r\n            let selectedTerminalAttributes = comp.Attributes.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n            selectedTerminalAttributes.forEach((att) => {\r\n              att.ListOfAttributeData.forEach((attData) => {\r\n                let tempAttIndex = tempCompAttributes.findIndex(\r\n                  (item) =>\r\n                    item.TerminalCode === att.TerminalCode &&\r\n                    item.AttributeCode === attData.AttributeCode\r\n                );\r\n                if (tempAttIndex >= 0)\r\n                  tempCompAttributes[tempAttIndex].AttributeValue =\r\n                    attData.AttributeValue;\r\n              });\r\n            });\r\n            tempCompAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo =\r\n                comp.CompartmentSeqNoInTrailer;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          } else {\r\n            compAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo =\r\n                comp.CompartmentSeqNoInTrailer;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          }\r\n        }\r\n        this.toggleExpand(comp, true, true);\r\n        if (comp.AttributesforUI !== undefined && comp.AttributesforUI != null)\r\n          comp.AttributesforUI = Utilities.compartmentAttributesConvertoDecimal(\r\n            comp.AttributesforUI\r\n          );\r\n        comp.AttributesforUI = Utilities.addSeqNumberToListObject(\r\n          comp.AttributesforUI\r\n        );\r\n      });\r\n      this.setState({ modVessel });\r\n    } catch (error) {\r\n      console.log(\r\n        \"VesselDetailsComposite:Error in forming Compartment Attributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getCarrierList() {\r\n    axios(\r\n      RestAPIs.GetCarrierCodes +\r\n        \"?ShareholderCode=\" +\r\n        \"&Transportationtype=\" +\r\n        Constants.TransportationType.MARINE,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let carrierOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            let carrierSearchOptions = lodash.cloneDeep(carrierOptions);\r\n            if (carrierSearchOptions.length > Constants.filteredOptionsCount) {\r\n              carrierSearchOptions = carrierSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({ carrierOptions, carrierSearchOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetCarrierListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Carrier List:\", error);\r\n      });\r\n  }\r\n\r\n  getLoadingTypes() {\r\n    axios(\r\n      RestAPIs.GetLoadingType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let loadingTypeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ loadingTypeOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getLoadingTypes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getLoadingTypes:\", error);\r\n      });\r\n  }\r\n\r\n  getProductTypes() {\r\n    axios(\r\n      RestAPIs.GetProductType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let productTypeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ productTypeOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getProductTypes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getProductTypes:\", error);\r\n      });\r\n  }\r\n\r\n  getVesselTypes() {\r\n    axios(\r\n      RestAPIs.GetVehicleAndTrailerTypes,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        [Constants.TransportationType.MARINE],\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult.Table !== null) {\r\n            let vesselTypes = result.EntityResult.Table;\r\n            let vesselTypeOptions = [];\r\n            vesselTypes.forEach((vesselType) => {\r\n              vesselTypeOptions.push({\r\n                text: vesselType.VehicleTypeCode,\r\n                value: vesselType.VehicleTypeCode,\r\n              });\r\n            });\r\n            this.setState({ vesselTypeOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getVesselTypes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getVesselTypes:\", error);\r\n      });\r\n  }\r\n\r\n  getUOMList() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let weightUOMs = result.EntityResult.MASS;\r\n            let volumeUOMOptions = [];\r\n            weightUOMs.forEach((weightOption) => {\r\n              volumeUOMOptions.push({\r\n                text: weightOption,\r\n                value: weightOption,\r\n              });\r\n            });\r\n\r\n            let volumeUOMs = result.EntityResult.VOLUME;\r\n\r\n            volumeUOMs.forEach((volumeOption) => {\r\n              volumeUOMOptions.push({\r\n                text: volumeOption,\r\n                value: volumeOption,\r\n              });\r\n            });\r\n\r\n            let lengthUOMs = result.EntityResult.LENGTH;\r\n            let lengthUOMOptions = [];\r\n            lengthUOMs.forEach((lengthOption) => {\r\n              lengthUOMOptions.push({\r\n                text: lengthOption,\r\n                value: lengthOption,\r\n              });\r\n            });\r\n\r\n            this.setState({\r\n              volumeUOMOptions,\r\n              lengthUOMOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getUOM:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getUOM:\", error);\r\n      });\r\n  }\r\n\r\n  getTerminalsForCarrier(carrier) {\r\n    if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n      const modVessel = lodash.cloneDeep(this.state.modVessel);\r\n      let terminalOptions = [...this.state.terminalOptions];\r\n\r\n      modVessel.CarrierCompanyCode = carrier;\r\n\r\n      try {\r\n        if (carrier === undefined) {\r\n          terminalOptions = [];\r\n          modVessel.TerminalCodes = [];\r\n          this.setState({ terminalOptions, modVessel }, () => {\r\n            this.formCompartmentAttributes([]);\r\n          });\r\n          return;\r\n        }\r\n        let keyCode = [\r\n          {\r\n            key: KeyCodes.carrierCode,\r\n            value: carrier,\r\n          },\r\n          {\r\n            key: KeyCodes.transportationType,\r\n            value: Constants.TransportationType.MARINE,\r\n          },\r\n        ];\r\n        let obj = {\r\n          ShareHolderCode: this.props.selectedShareholder,\r\n          keyDataCode: KeyCodes.carrierCode,\r\n          KeyCodes: keyCode,\r\n        };\r\n        axios(\r\n          RestAPIs.GetCarrier,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            let result = response.data;\r\n            if (\r\n              result.IsSuccess === true &&\r\n              result.EntityResult !== null &&\r\n              result.EntityResult.TerminalCodes !== null\r\n            ) {\r\n              terminalOptions = [...result.EntityResult.TerminalCodes];\r\n              this.setState({ terminalOptions });\r\n            } else {\r\n              terminalOptions = [];\r\n\r\n              this.setState({ terminalOptions });\r\n              console.log(\"Error in getTerminalsForCarrier:\", result.ErrorList);\r\n            }\r\n            let vessel = { ...this.state.vessel };\r\n            if (\r\n              vessel.Code === undefined ||\r\n              vessel.Code === \"\" ||\r\n              vessel.Code === null\r\n            ) {\r\n              if (terminalOptions.length === 1) {\r\n                modVessel.TerminalCodes = [...terminalOptions];\r\n                // this.terminalSelectionChange(modVessel.TerminalCodes);\r\n              } else {\r\n                modVessel.TerminalCodes = [];\r\n                //this.terminalSelectionChange([]);\r\n              }\r\n            }\r\n\r\n            if (Array.isArray(modVessel.TerminalCodes)) {\r\n              modVessel.TerminalCodes = terminalOptions.filter((x) =>\r\n                modVessel.TerminalCodes.includes(x)\r\n              );\r\n            }\r\n\r\n            this.setState({ modVessel }, () => {\r\n              this.terminalSelectionChange(modVessel.TerminalCodes);\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            terminalOptions = [];\r\n            modVessel.TerminalCodes = [];\r\n            this.setState({ terminalOptions, modVessel });\r\n            console.log(\"Error while getting Carrier:\", error, carrier);\r\n          });\r\n      } catch (error) {\r\n        terminalOptions = [];\r\n        modVessel.TerminalCodes = [];\r\n        this.setState({ terminalOptions, modVessel });\r\n        console.log(\r\n          \"VesselDetailsComposite:Error occured on getTerminalsForCarrier\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      let modVessel = lodash.cloneDeep(this.state.modVessel);\r\n      let terminalOptions = [...this.state.terminalOptions];\r\n      if (checked) modVessel.TerminalCodes = terminalOptions;\r\n      else modVessel.TerminalCodes = [];\r\n      this.setState({ modVessel }, () => {\r\n        this.terminalSelectionChange(modVessel.TerminalCodes);\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"VesselDetailsComposite:Error occured on handleAllTerminalsChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      let validationErrors = { ...this.state.validationErrors };\r\n      let modVessel = lodash.cloneDeep(this.state.modVessel);\r\n      validationErrors[propertyName] = error;\r\n      modVessel[propertyName] = value;\r\n      this.setState({ validationErrors, modVessel });\r\n    } catch (error) {\r\n      console.log(\r\n        \"VesselDetailsComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getAttributes(this.props.selectedRow);\r\n      //this.getVessel(this.props.selectedRow);\r\n      this.getCarrierList();\r\n      this.getLoadingTypes();\r\n      this.getProductTypes();\r\n      this.getVesselTypes();\r\n      this.getUOMList();\r\n      this.getLookupValue();\r\n    } catch (error) {\r\n      console.log(\r\n        \"VesselDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.vessel.Code !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getVessel(nextProps.selectedRow);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"VesselDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modVessel = lodash.cloneDeep(this.state.modVessel);\r\n      modVessel[propertyName] = data;\r\n\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (vesselValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          vesselValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n      this.setState({ modVessel }, () => {\r\n        if (propertyName === \"TerminalCodes\") {\r\n          this.terminalSelectionChange(data);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"VesselDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  onCarrierCompanyChange = (data) => {\r\n    try {\r\n      const modVessel = lodash.cloneDeep(this.state.modVessel);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modVessel.CarrierCompanyCode = data;\r\n      this.setState({ modVessel });\r\n      if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n        this.getTerminalsForCarrier(data);\r\n\r\n      validationErrors.CarrierCompanyCode = \"\";\r\n      this.setState({ validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"VesselDetailsComposite:Error occured on onCarrierCompanyChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleLoadingTypeChange = (data) => {\r\n    try {\r\n      const modVessel = lodash.cloneDeep(this.state.modVessel);\r\n\r\n      modVessel.VehicleTrailers[0].Trailer.LoadingType = data;\r\n      this.setState({ modVessel });\r\n    } catch (error) {\r\n      console.log(\r\n        \"VesselDetailsComposite:Error occured on handleLoadingTypeChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleActiveStatusChange = (data) => {\r\n    try {\r\n      const modVessel = lodash.cloneDeep(this.state.modVessel);\r\n\r\n      modVessel.Active = data;\r\n      if (modVessel.Active !== this.state.vessel.Active) modVessel.Remarks = \"\";\r\n      this.setState({ modVessel });\r\n\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (modVessel.Active === this.state.vessel.Active) {\r\n        if (modVessel.Remarks === null || modVessel.Remarks === \"\") {\r\n          validationErrors.Remarks = \"\";\r\n        }\r\n      }\r\n      this.setState({ validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"VesselDetailsComposite:Error occured on handleActiveStatusChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAddCompartment = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        let newComp = {\r\n          Attributes: [],\r\n          Capacity: null,\r\n          Code: null,\r\n          CompartmentSeqNoInTrailer: 0,\r\n          TrailerCode: null,\r\n          ShareholderCode: null,\r\n          CarrierCompanyCode: null,\r\n          Description: \"\",\r\n          FRUOM: null,\r\n          FlangeNo: null,\r\n          MaxFR: null,\r\n          Name: \"\",\r\n          NoofSeals: null,\r\n          UOM: null,\r\n        };\r\n        let modVessel = lodash.cloneDeep(this.state.modVessel);\r\n\r\n        if (modVessel.VehicleTrailers[0].Trailer.Compartments !== null) {\r\n          if (modVessel.VehicleTrailers[0].Trailer.Compartments.length > 0)\r\n            newComp.UOM =\r\n              modVessel.VehicleTrailers[0].Trailer.Compartments[0].UOM;\r\n\r\n          let seqno = 1;\r\n          modVessel.VehicleTrailers[0].Trailer.Compartments.forEach((com) => {\r\n            com.CompartmentSeqNoInTrailer = seqno;\r\n            ++seqno;\r\n          });\r\n          newComp.CompartmentSeqNoInTrailer =\r\n            modVessel.VehicleTrailers[0].Trailer.Compartments.length + 1;\r\n          modVessel.VehicleTrailers[0].Trailer.Compartments.push(newComp);\r\n        }\r\n\r\n        this.setState(\r\n          {\r\n            modVessel,\r\n            selectedCompRow: [],\r\n          },\r\n          () => {\r\n            if (\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode === false\r\n            ) {\r\n              var attributeMetaDataList = lodash.cloneDeep(\r\n                this.state.attributeMetaDataList.marine_trailercompartment\r\n              );\r\n              if (attributeMetaDataList.length > 0)\r\n                this.formCompartmentAttributes([\r\n                  attributeMetaDataList[0].TerminalCode,\r\n                ]);\r\n            } else this.formCompartmentAttributes(modVessel.TerminalCodes);\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.log(\r\n          \"VesselDetailsComposite:Error occured on handleAddCompartment\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleDeleteCompartment = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedCompRow != null &&\r\n          this.state.selectedCompRow.length > 0\r\n        ) {\r\n          if (\r\n            this.state.modVessel.VehicleTrailers[0].Trailer.Compartments\r\n              .length > 0\r\n          ) {\r\n            let modVessel = lodash.cloneDeep(this.state.modVessel);\r\n\r\n            this.state.selectedCompRow.forEach((obj, index) => {\r\n              modVessel.VehicleTrailers[0].Trailer.Compartments =\r\n                modVessel.VehicleTrailers[0].Trailer.Compartments.filter(\r\n                  (com, cindex) => {\r\n                    return (\r\n                      com.CompartmentSeqNoInTrailer !==\r\n                      obj.CompartmentSeqNoInTrailer\r\n                    );\r\n                  }\r\n                );\r\n            });\r\n\r\n            let seqno = 1;\r\n            modVessel.VehicleTrailers[0].Trailer.Compartments.forEach((com) => {\r\n              com.CompartmentSeqNoInTrailer = seqno;\r\n              ++seqno;\r\n            });\r\n\r\n            this.setState({ modVessel });\r\n          }\r\n        }\r\n\r\n        this.setState({ selectedCompRow: [] });\r\n      } catch (error) {\r\n        console.log(\r\n          \"VesselDetailsComposite:Error occured on handleDeleteCompartment\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleRowSelectionChange = (e) => {\r\n    this.setState({ selectedCompRow: e });\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    let modVessel = lodash.cloneDeep(this.state.modVessel);\r\n\r\n    if (cellData.field === \"Description\") {\r\n      modVessel.VehicleTrailers[0].Trailer.Compartments[cellData.rowIndex][\r\n        cellData.field\r\n      ] = newVal;\r\n    }\r\n    if (cellData.field === \"Capacity\") {\r\n      if (isNaN(parseInt(newVal))) {\r\n        newVal = \"\";\r\n      }\r\n      modVessel.VehicleTrailers[0].Trailer.Compartments[cellData.rowIndex][\r\n        cellData.field\r\n      ] = newVal;\r\n    }\r\n\r\n    if (cellData.field === \"UOM\") {\r\n      modVessel.VehicleTrailers[0].Trailer.Compartments.forEach((comp) => {\r\n        comp.UOM = newVal;\r\n      });\r\n    }\r\n    this.toggleExpand(\r\n      modVessel.VehicleTrailers[0].Trailer.Compartments[cellData.rowIndex],\r\n      true,\r\n      true\r\n    );\r\n\r\n    this.setState({ modVessel });\r\n  };\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const { validationErrors } = { ...this.state };\r\n      const vessel = lodash.cloneDeep(this.state.vessel);\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState(\r\n        {\r\n          modVessel: { ...vessel },\r\n          selectedCompRow: [],\r\n          validationErrors,\r\n          modAttributeMetaDataList: [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(vessel.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"VesselDetailsComposite:Error occured on handleReset\", error);\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.marine_vessel\r\n          ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList.marine_vessel) &&\r\n        attributeMetaDataList.marine_vessel.length > 0\r\n      ) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.marine_vessel[0].TerminalCode,\r\n        ]);\r\n      } else {\r\n        if (\r\n          Array.isArray(attributeMetaDataList.marine_trailercompartment) &&\r\n          attributeMetaDataList.marine_trailercompartment.length > 0\r\n        )\r\n          this.formCompartmentAttributes([\r\n            attributeMetaDataList.marine_trailercompartment[0].TerminalCode,\r\n          ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"VesselDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  convertStringtoDecimal(modVessel, attributeList) {\r\n    try {\r\n      if (modVessel.Height !== null && modVessel.Height !== \"\") {\r\n        modVessel.Height = Utilities.convertStringtoDecimal(modVessel.Height);\r\n      }\r\n      if (modVessel.Length !== null && modVessel.Length !== \"\") {\r\n        modVessel.Length = Utilities.convertStringtoDecimal(modVessel.Length);\r\n      }\r\n      if (modVessel.Width !== null && modVessel.Width !== \"\") {\r\n        modVessel.Width = Utilities.convertStringtoDecimal(modVessel.Width);\r\n      }\r\n      modVessel.VehicleTrailers[0].Trailer.Compartments.forEach((com) => {\r\n        com.Capacity = Utilities.convertStringtoDecimal(com.Capacity);\r\n      });\r\n\r\n      modVessel = this.fillAttributeDetails(modVessel, attributeList);\r\n\r\n      return modVessel;\r\n    } catch (err) {\r\n      console.log(\"convertStringtoDecimal error Vesseldetails\", err);\r\n    }\r\n  }\r\n\r\n  saveVessel = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempVessel = lodash.cloneDeep(this.state.tempVessel);\r\n\r\n      this.state.vessel.Code === \"\"\r\n          ? this.createVessel(tempVessel)\r\n          : this.updateVessel(tempVessel);\r\n    } catch (error) {\r\n      console.log(\"VesselDetailsComposite : Error in saveVessel\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n     // this.setState({ saveEnabled: false });\r\n      let modVessel = this.fillDetails();\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n\r\n      if (this.validateSave(modVessel, attributeList)) {\r\n        modVessel = this.convertStringtoDecimal(modVessel, attributeList);\r\n        modVessel = Utilities.convertDatesToString(\r\n          DateFieldsInEntities.DatesInEntity.Vehicle,\r\n          modVessel\r\n        );\r\n\r\n        let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempVessel = lodash.cloneDeep(modVessel);\r\n      this.setState({ showAuthenticationLayout, tempVessel }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.saveVessel();\r\n        }\r\n    });\r\n        \r\n      } else this.setState({ saveEnabled: true });\r\n    } catch (error) {\r\n      console.log(\"VesselDetailsComposite:Error occured on handleSave\", error);\r\n    }\r\n  };\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modVessel = lodash.cloneDeep(this.state.modVessel);\r\n\r\n      modVessel.ShareholderCode =\r\n        this.props.userDetails.EntityResult.PrimaryShareholder;\r\n      modVessel.TransportationType = Constants.TransportationType.MARINE;\r\n      modVessel.VehicleTrailers[0].Trailer.Compartments.forEach((comp) => {\r\n        comp.TrailerCode = modVessel.Code;\r\n        comp.ShareholderCode = modVessel.ShareholderCode;\r\n        comp.CarrierCompanyCode = modVessel.CarrierCompanyCode;\r\n        if (comp.Capacity !== null && comp.Capacity !== \"\")\r\n          comp.Capacity = comp.Capacity.toLocaleString();\r\n        if (comp.Code === null || comp.Code === \"\") {\r\n          comp.Code = Utilities.generateCompartmentCode(\r\n            modVessel.VehicleTrailers[0].Trailer.Compartments\r\n          ).toString();\r\n        }\r\n        if (comp.AttributesforUI !== undefined && comp.AttributesforUI != null)\r\n          comp.AttributesforUI =\r\n            Utilities.compartmentAttributesConverttoLocaleString(\r\n              comp.AttributesforUI\r\n            );\r\n      });\r\n\r\n      if (modVessel.Height === \"\") modVessel.Height = null;\r\n      if (modVessel.Length === \"\") modVessel.Length = null;\r\n      if (modVessel.Width === \"\") modVessel.Width = null;\r\n\r\n      if (modVessel.Height !== null && modVessel.Height !== \"\")\r\n        modVessel.Height = modVessel.Height.toLocaleString();\r\n      if (modVessel.Length !== null && modVessel.Length !== \"\")\r\n        modVessel.Length = modVessel.Length.toLocaleString();\r\n      if (modVessel.Width !== null && modVessel.Width !== \"\")\r\n        modVessel.Width = modVessel.Width.toLocaleString();\r\n      var licDate = new Date();\r\n      modVessel.LicenseNoIssueDate = licDate.getUTCDate();\r\n      //modVessel.LicenseNoIssueDate = new Date();\r\n      modVessel.VehicleTrailers[0].TrailerCode = modVessel.Code;\r\n      modVessel.VehicleTrailers[0].VehicleCode = modVessel.Code;\r\n      modVessel.VehicleTrailers[0].ShareholderCode = modVessel.ShareholderCode;\r\n      modVessel.VehicleTrailers[0].CarrierCompanyCode =\r\n        modVessel.CarrierCompanyCode;\r\n      modVessel.VehicleTrailers[0].TrailerSeq = 1;\r\n      modVessel.VehicleTrailers[0].Trailer.Code = modVessel.Code;\r\n      modVessel.VehicleTrailers[0].Trailer.Name = modVessel.Name;\r\n      modVessel.VehicleTrailers[0].Trailer.ShareholderCode =\r\n        modVessel.ShareholderCode;\r\n      modVessel.VehicleTrailers[0].Trailer.TransportationType =\r\n        Constants.TransportationType.MARINE;\r\n      modVessel.VehicleTrailers[0].Trailer.CarrierCompanyCode =\r\n        modVessel.CarrierCompanyCode;\r\n      modVessel.VehicleTrailers[0].Trailer.TrailerType = modVessel.VehicleType;\r\n      modVessel.VehicleTrailers[0].Trailer.ProductType = modVessel.ProductType;\r\n      modVessel.VehicleTrailers[0].Trailer.TareWeight = modVessel.TareWeight;\r\n      modVessel.VehicleTrailers[0].Trailer.MaxLoadableWeight =\r\n        modVessel.MaxLoadableWeight;\r\n      modVessel.VehicleTrailers[0].Trailer.WeightUOM = modVessel.WeightUOM;\r\n      modVessel.VehicleTrailers[0].Trailer.Active = modVessel.Active;\r\n\r\n      // modVessel = this.fillAttributeDetails(modVessel);\r\n\r\n      return modVessel;\r\n    } catch (error) {\r\n      console.log(\"VesselDetailsComposite:Error occured on fillDetails\", error);\r\n    }\r\n  }\r\n\r\n  fillAttributeDetails(modVessel, attributeList) {\r\n    try {\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modVessel.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n\r\n      // For Compartment\r\n      modVessel.VehicleTrailers[0].Trailer.Compartments.forEach((comp) => {\r\n        if (comp.AttributesforUI !== undefined && comp.AttributesforUI != null)\r\n          comp.AttributesforUI =\r\n            Utilities.compartmentAttributesDatatypeConversion(\r\n              comp.AttributesforUI\r\n            );\r\n        let selectedTerminals = [];\r\n        if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n          selectedTerminals = lodash.cloneDeep(modVessel.TerminalCodes);\r\n        else {\r\n          var compAttributeMetaDataList = lodash.cloneDeep(\r\n            this.state.attributeMetaDataList.marine_trailercompartment\r\n          );\r\n          if (compAttributeMetaDataList.length > 0)\r\n            selectedTerminals = [compAttributeMetaDataList[0].TerminalCode];\r\n        }\r\n        let terminalAttributes = [];\r\n        comp.Attributes = [];\r\n        if (selectedTerminals !== undefined && selectedTerminals !== null)\r\n          selectedTerminals.forEach((terminal) => {\r\n            if (\r\n              comp.AttributesforUI !== null &&\r\n              comp.AttributesforUI !== undefined\r\n            )\r\n              terminalAttributes = comp.AttributesforUI.filter(function (\r\n                attTerminal\r\n              ) {\r\n                return attTerminal.TerminalCode === terminal;\r\n              });\r\n\r\n            let attribute = {\r\n              ListOfAttributeData: [],\r\n            };\r\n\r\n            attribute.TerminalCode = terminal;\r\n            terminalAttributes.forEach((termAtt) => {\r\n              if (termAtt.AttributeValue !== \"\" || termAtt.IsMandatory === true)\r\n                attribute.ListOfAttributeData.push({\r\n                  AttributeCode: termAtt.AttributeCode,\r\n                  AttributeValue: termAtt.AttributeValue,\r\n                });\r\n            });\r\n            if (\r\n              attribute.ListOfAttributeData !== null &&\r\n              attribute.ListOfAttributeData !== undefined &&\r\n              attribute.ListOfAttributeData.length > 0\r\n            )\r\n              comp.Attributes.push(attribute);\r\n          });\r\n      });\r\n      return modVessel;\r\n    } catch (error) {\r\n      console.log(\r\n        \"VesselDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  validateSave(modVessel, attributeList) {\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(vesselValidationDef).forEach(function (key) {\r\n      if (modVessel[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          vesselValidationDef[key],\r\n          modVessel[key]\r\n        );\r\n    });\r\n\r\n    if (modVessel.Active !== this.state.vessel.Active) {\r\n      if (modVessel.Remarks === null || modVessel.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"Vehicle_RemarksRequired\";\r\n      }\r\n    }\r\n    if (\r\n      modVessel.VehicleTrailers[0].Trailer.LoadingType === null ||\r\n      modVessel.VehicleTrailers[0].Trailer.LoadingType === \"\"\r\n    ) {\r\n      validationErrors[\"LoadingType\"] =\r\n        \"RailWagonConfigurationDetails_MandatoryLoadingType\";\r\n    }\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"VesselDetail_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    if (\r\n      (modVessel.Height !== null ||\r\n        modVessel.Width != null ||\r\n        modVessel.Length !== null) &&\r\n      modVessel.LWHUOM === null\r\n    ) {\r\n      validationErrors[\"LWHUOM\"] = \"Vessel_UFDRequired\";\r\n    } else {\r\n      validationErrors[\"LWHUOM\"] = \"\";\r\n    }\r\n\r\n    // if (modVessel.VehicleTrailers[0].Trailer.Compartments.length > 0) {\r\n    //   modVessel.VehicleTrailers[0].Trailer.Compartments.forEach((com) => {\r\n    //     trailerCompartmentValidationDef.forEach((col) => {\r\n    //       let err = \"\";\r\n\r\n    //       if (col.validator !== undefined) {\r\n    //         err = Utilities.validateField(col.validator, com[col.field]);\r\n    //       }\r\n\r\n    //       if (err !== \"\") {\r\n    //         notification.messageResultDetails.push({\r\n    //           keyFields: [\"Trailer_CompCode\", col.displayName],\r\n    //           keyValues: [com.Code, com[col.field]],\r\n    //           isSuccess: false,\r\n    //           errorMessage: err,\r\n    //         });\r\n    //       }\r\n    //     });\r\n    //   });\r\n    // } else {\r\n    //   notification.messageResultDetails.push({\r\n    //     keyFields: [\"Vessel_Code\"],\r\n    //     keyValues: [modVessel.Code],\r\n    //     isSuccess: false,\r\n    //     errorMessage: \"TrailerInfo_CompartmentRequired\",\r\n    //   });\r\n    // }\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n    //let attributeList = lodash.cloneDeep(this.state.modAttributeMetaDataList);\r\n\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n    var returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    else return returnValue;\r\n    if (modVessel.VehicleTrailers[0].Trailer.Compartments.length > 0) {\r\n      if (modVessel.VehicleTrailers[0].Trailer.Compartments.length <= this.state.maxNumberOfCompartments) {\r\n         modVessel.VehicleTrailers[0].Trailer.Compartments.forEach((com) => {\r\n        trailerCompartmentValidationDef.forEach((col) => {\r\n          let err = \"\";\r\n\r\n          if (col.validator !== undefined) {\r\n            err = Utilities.validateField(col.validator, com[col.field]);\r\n          }\r\n\r\n          if (err !== \"\") {\r\n            notification.messageResultDetails.push({\r\n              keyFields: [\"Trailer_CompCode\", col.displayName],\r\n              keyValues: [com.Code, com[col.field]],\r\n              isSuccess: false,\r\n              errorMessage: err,\r\n            });\r\n          }\r\n        });\r\n        // let updatedAttributes = [];\r\n        // if (com.AttributesforUI !== null && com.AttributesforUI !== undefined)\r\n        //   updatedAttributes = com.AttributesforUI.filter(function (\r\n        //     uIAttributes\r\n        //   ) {\r\n        //     return com.Attributes.some(function (selAttribute) {\r\n        //       let isPresent =\r\n        //         selAttribute.ListOfAttributeData.findIndex(\r\n        //           (item) => item.AttributeCode === uIAttributes.AttributeCode\r\n        //         ) >= 0\r\n        //           ? true\r\n        //           : false;\r\n        //       return (\r\n        //         uIAttributes.TerminalCode === selAttribute.TerminalCode &&\r\n        //         isPresent\r\n        //       );\r\n        //     });\r\n        //   });\r\n\r\n        if (com.AttributesforUI !== null && com.AttributesforUI !== undefined) {\r\n          com.AttributesforUI.forEach((item) => {\r\n            let errMsg = Utilities.valiateAttributeField(\r\n              item,\r\n              item.AttributeValue\r\n            );\r\n            if (errMsg !== \"\") {\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                notification.messageResultDetails.push({\r\n                  keyFields: [\r\n                    \"CompAttributeComp\",\r\n                    \"CompAttributeTerminal\",\r\n                    item.AttributeName,\r\n                  ],\r\n                  keyValues: [com.Code, item.TerminalCode, item.AttributeValue],\r\n                  isSuccess: false,\r\n                  errorMessage: errMsg,\r\n                });\r\n              } else {\r\n                notification.messageResultDetails.push({\r\n                  keyFields: [\"CompAttributeComp\", item.AttributeName],\r\n                  keyValues: [com.Code, item.AttributeValue],\r\n                  isSuccess: false,\r\n                  errorMessage: errMsg,\r\n                });\r\n              }\r\n            }\r\n          });\r\n        }\r\n        this.toggleExpand(com, true, true);\r\n      });\r\n      }\r\n      else {\r\n         notification.messageResultDetails.push({\r\n        keyFields: [\"Vessel_Code\"],\r\n        keyValues: [modVessel.Code],\r\n        isSuccess: false,\r\n        errorMessage: \"Compartment_limit_Exceeded\",\r\n      });\r\n      }\r\n    } else {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [\"Vessel_Code\"],\r\n        keyValues: [modVessel.Code],\r\n        isSuccess: false,\r\n        errorMessage: \"TrailerInfo_CompartmentRequired\",\r\n      });\r\n    }\r\n\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modVessel, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  createVessel(modVessel) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: modVessel.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modVessel,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"VesselDetail_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Vessel_Code\"],\r\n          keyValues: [modVessel.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateVessel,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnVessel\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () =>\r\n              this.getVessel({\r\n                Common_Code: modVessel.Code,\r\n                Vehicle_CarrierCompany: modVessel.CarrierCompanyCode,\r\n              })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnVessel\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in CreateVessel:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(this.state.modVessel, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnVessel\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modRigidTruck, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateVessel(modVessel) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: modVessel.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modVessel,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"VesselDetail_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Vessel_Code\"],\r\n          keyValues: [modVessel.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateVessel,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnVessel\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () =>\r\n              this.getVessel({\r\n                Common_Code: modVessel.Code,\r\n                Vehicle_CarrierCompany: modVessel.CarrierCompanyCode,\r\n              })\r\n          );\r\n        } else {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnVessel\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in UpdateVessel:\", result.ErrorList);\r\n        }\r\n        //console.log(notification);\r\n        this.props.onSaved(this.state.modRigidTruck, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modRigidTruck, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnVessel\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors,modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"VesselDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  toggleExpand = (data, open, isTerminalAdded = false) => {\r\n    let expandedRows = this.state.expandedRows;\r\n    let expandedRowIndex = expandedRows.findIndex(\r\n      (item) =>\r\n        item.CompartmentSeqNoInTrailer === data.CompartmentSeqNoInTrailer\r\n    );\r\n    if (open) {\r\n      if (isTerminalAdded && expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n        expandedRows.push(data);\r\n      } else if (expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n      }\r\n    } else {\r\n      if (expandedRowIndex >= 0) {\r\n        expandedRows = expandedRows.filter(\r\n          (x) =>\r\n            x.Code !== data.Code &&\r\n            x.CompartmentSeqNoInTrailer !== data.CompartmentSeqNoInTrailer\r\n        );\r\n      } else expandedRows.push(data);\r\n    }\r\n    this.setState({ expandedRows });\r\n  };\r\n\r\n  handleCompAttributeCellDataEdit = (compAttribute, value) => {\r\n    let modVessel = lodash.cloneDeep(this.state.modVessel);\r\n    let compIndex = modVessel.VehicleTrailers[0].Trailer.Compartments.findIndex(\r\n      (item) =>\r\n        item.CompartmentSeqNoInTrailer === compAttribute.rowData.compSequenceNo\r\n    );\r\n    if (compIndex >= 0)\r\n      modVessel.VehicleTrailers[0].Trailer.Compartments[\r\n        compIndex\r\n      ].AttributesforUI[\r\n        // compAttribute.rowIndex\r\n        compAttribute.rowData.SeqNumber - 1\r\n      ].AttributeValue = value;\r\n    this.setState({ modVessel });\r\n    if (compIndex >= 0)\r\n      this.toggleExpand(\r\n        modVessel.VehicleTrailers[0].Trailer.Compartments[compIndex],\r\n        true,\r\n        true\r\n      );\r\n  };\r\n\r\n  handleCarrierSearchChange = (carrierCode) => {\r\n    try {\r\n      let carrierSearchOptions = this.state.carrierOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(carrierCode.toLowerCase())\r\n      );\r\n      if (carrierSearchOptions.length > Constants.filteredOptionsCount) {\r\n        carrierSearchOptions = carrierSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        carrierSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"VesselDetailsCompositeComposite:Error occured on handleCarrierSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getCarrierSearchOptions() {\r\n    let carrierSearchOptions = lodash.cloneDeep(\r\n      this.state.carrierSearchOptions\r\n    );\r\n    let modCarrierCode = this.state.modVessel.CarrierCompanyCode;\r\n    if (\r\n      modCarrierCode !== null &&\r\n      modCarrierCode !== \"\" &&\r\n      modCarrierCode !== undefined\r\n    ) {\r\n      let selectedCarrierCode = carrierSearchOptions.find(\r\n        (element) =>\r\n          element.value.toLowerCase() === modCarrierCode.toLowerCase()\r\n      );\r\n      if (selectedCarrierCode === undefined) {\r\n        carrierSearchOptions.push({\r\n          text: modCarrierCode,\r\n          value: modCarrierCode,\r\n        });\r\n      }\r\n    }\r\n    return carrierSearchOptions;\r\n  }\r\n  //Get KPI for vessel\r\n  getKPIList(shareholder,vesselCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      let objKPIRequestData = {\r\n        PageName: kpiVesselDetail,\r\n        InputParameters: [{ key: \"VesselCode\", value: vesselCode }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              vesselKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ vesselKPIList: [] });\r\n            console.log(\"Error in vessel KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Vessel KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  getLookupValue() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=VirtualPreset\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (!isNaN(parseInt(result.EntityResult[\"MarineMaximumNumberOfCompartments\"]))) {\r\n            this.setState({maxNumberOfCompartments:parseInt(result.EntityResult[\"MarineMaximumNumberOfCompartments\"])})\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting LookupValue:\", error);\r\n    }\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      // carriers: this.state.carrierOptions,\r\n      carriers: this.getCarrierSearchOptions(),\r\n      vesselType: this.state.vesselTypeOptions,\r\n      productType: this.state.productTypeOptions,\r\n      loadingType: this.state.loadingTypeOptions,\r\n      unitOfVolume: this.state.volumeUOMOptions,\r\n      unitOfDimension: this.state.lengthUOMOptions,\r\n      terminalCodes: this.state.terminalOptions,\r\n    };\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"Vessel_LastUpdated\",\r\n        fieldValue:\r\n          new Date(this.state.modVessel.LastUpdateTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modVessel.LastUpdateTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"Vessel_LastActiveTime\",\r\n        fieldValue:\r\n          this.state.modVessel.LastActiveTime !== undefined &&\r\n          this.state.modVessel.LastActiveTime !== null\r\n            ? new Date(\r\n                this.state.modVessel.LastActiveTime\r\n              ).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(this.state.modVessel.LastActiveTime).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"Vessel_CreateTime\",\r\n        fieldValue:\r\n          new Date(this.state.modVessel.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modVessel.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.vessel.Code}\r\n            newEntityName=\"VesselDetails_VesselHeader\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <TMDetailsKPILayout KPIList={this.state.vesselKPIList}> </TMDetailsKPILayout>\r\n        <ErrorBoundary>\r\n          <VesselDetails\r\n            vessel={this.state.vessel}\r\n            modVessel={this.state.modVessel}\r\n            validationErrors={this.state.validationErrors}\r\n            listOptions={listOptions}\r\n            onFieldChange={this.handleChange}\r\n            onCarrierCompanyChange={this.onCarrierCompanyChange}\r\n            onLoadingTypeChange={this.handleLoadingTypeChange}\r\n            onAllTerminalsChange={this.handleAllTerminalsChange}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n            onDateTextChange={this.handleDateTextChange}\r\n            handleAddCompartment={this.handleAddCompartment}\r\n            handleDeleteCompartment={this.handleDeleteCompartment}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            handleRowSelectionChange={this.handleRowSelectionChange}\r\n            selectedCompRow={this.state.selectedCompRow}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            onAttributeDataChange={this.handleAttributeDataChange} \r\n            expandedRows={this.state.expandedRows}\r\n            compartmentDetailsPageSize={\r\n              this.props.userDetails.EntityResult.PageAttibutes\r\n                .WebPortalListPageSize\r\n            }\r\n            toggleExpand={this.toggleExpand}\r\n            handleCompAttributeCellDataEdit={\r\n              this.handleCompAttributeCellDataEdit\r\n            }\r\n            onCarrierSearchChange={this.handleCarrierSearchChange}\r\n          ></VesselDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.vessel.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnVessel}\r\n            handleOperation={this.saveVessel}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(VesselDetailsComposite);\r\n\r\nVesselDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Select, Checkbox } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nAssociatedTerminals.propTypes = {\r\n  terminalList: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedTerminal: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  validationError: PropTypes.string,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCheckChange: PropTypes.func.isRequired,\r\n};\r\nAssociatedTerminals.defaultProps = {\r\n  terminalList: [],\r\n  selectedTerminal: [],\r\n  validationError: \"\",\r\n};\r\nexport function AssociatedTerminals({\r\n  terminalList,\r\n  selectedTerminal,\r\n  validationError,\r\n  onFieldChange,\r\n  onCheckChange,\r\n}) {\r\n  //console.log(\"component terminalList\", terminalList);\r\n  if (selectedTerminal === null) selectedTerminal = [];\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div style={{ width: \"80%\" }}>\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"TerminalCodes\")}\r\n              value={selectedTerminal}\r\n              multiple={true}\r\n              options={Utilities.transferListtoOptions(terminalList)}\r\n              onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n              error={t(validationError)}\r\n              disabled={terminalList.length === 0}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"ddlSelectAll\">\r\n            <Checkbox\r\n              label={t(\"Common_All\")}\r\n              checked={\r\n                Array.isArray(selectedTerminal) &&\r\n                selectedTerminal.length === terminalList.length\r\n              }\r\n              onChange={(checked) => onCheckChange(checked)}\r\n            ></Checkbox>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","export const DatesInEntity={\r\n    Driver : [\r\n    \"License1ExpiryDate\",\r\n    \"License1IssueDate\",\r\n    \"License2IssueDate\",\r\n    \"License2ExpiryDate\",\r\n    \"License3IssueDate\",\r\n    \"License3ExpiryDate\",\r\n    \"HazardousLicenseExpiry\"\r\n  ],\r\n  CarrierCompany:[\"PermitExpiryDate\"],\r\n  PrimeMover:[\"RoadTaxNoIssueDate\",\"RoadTaxNoExpiryDate\",\"licenseExpiryDate\"],\r\n  Wagon:[\"LicenseExpiryDate\"],\r\n  Vehicle:[\"LicenseNoIssueDate\",\"LicenseNoExpiryDate\",\r\n  \"RoadTaxNoIssueDate\",\"RoadTaxNoExpiryDate\",\"Bondexpirydate\",\"HazardousLicenseExpiry\"],\r\n  Contract:[\"StartDate\",\"EndDate\"],\r\n  ContractItem:[\"StartDate\",\"EndDate\"],\r\n  Order:[\"OrderStartDate\",\"OrderEndDate\",\"OrderDate\",\"DeliveryDate\"],\r\n  AccessCard:[\"ExpiryDate\",\"IssueDate\",\"PasswordExpiryDate\"],\r\n  Trailer:[\"HazardousLicenseExpiry\"],\r\n  };","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMDetailsKPILayout","_ref","KPIList","pageName","rowHeight","widgetHeight","isDraggable","isResizable","kpiDisplayTopBreakpoint","KPIDisplays","setKPIDisplays","useState","kpiDiv","React","hideKpis","currentScrollPos","window","pageYOffset","KPIDisplay","current","getBoundingClientRect","top","useEffect","addEventListener","removeEventListener","_jsx","ref","children","TranslationConsumer","t","style","marginTop","ErrorBoundary","KPIDashboardLayout","kpiList","defaultProps","VesselDetails","vessel","modVessel","validationErrors","onFieldChange","onCarrierCompanyChange","onLoadingTypeChange","onActiveStatusChange","listOptions","onDateTextChange","onAllTerminalsChange","handleAddCompartment","handleDeleteCompartment","selectedCompRow","handleCellDataEdit","handleRowSelectionChange","isEnterpriseNode","modAttributeMetaDataList","attributeValidationErrors","onAttributeDataChange","handleCompAttributeCellDataEdit","toggleExpand","expandedRows","compartmentDetailsPageSize","onCarrierSearchChange","useTranslation","handleTextEdit","cellData","val","VehicleTrailers","Trailer","Compartments","rowIndex","field","toLocaleString","Input","fluid","value","onChange","reserveSpace","disabled","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","handleAttributeType","data","attribute","rowData","handleAttributeDateValue","dateval","chars","split","Date","convertAttributeDatetoString","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","Constants","STRING","INT","AttributeValue","IsReadonly","FLOAT","LONG","DOUBLE","undefined","BOOL","Checkbox","checked","toString","DATETIME","DatePicker","showYearSelector","onTextChange","error","console","log","handleIsRequiredCompAttributes","IsMandatory","_jsxs","AttributeName","class","className","Code","indicator","label","Name","Description","Select","placeholder","CarrierCompanyCode","options","carriers","search","noResultsMessage","onSearch","VehicleType","vesselType","ProductType","productType","LoadingType","loadingType","LicenseNo","LicenseNoExpiryDate","Utilities","displayFormat","getCurrentDateFormat","RegisteredInCountry","Height","Width","Length","LWHUOM","getOptionsWithSelect","unitOfDimension","MaxLoadableVolume","VolumeUOM","unitOfVolume","AssociatedTerminals","terminalList","terminalCodes","selectedTerminal","TerminalCodes","onCheckChange","Active","text","Remarks","length","map","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","onClick","Icon","root","name","size","DataTable","rowExpansionTemplate","Array","isArray","AttributesforUI","row","rows","Column","header","editable","renderer","Pagination","selectionMode","selection","onSelectionChange","onEdit","scrollable","scrollHeight","editFieldType","customEditRenderer","handleIsRequiredCompartmentCell","initialWidth","open","findIndex","x","CompartmentSeqNoInTrailer","VesselDetailsComposite","Component","constructor","_this","arguments","this","state","lodash","emptyRigidTruck","vesselValidationDef","isReadyToRender","saveEnabled","carrierOptions","carrierSearchOptions","terminalOptions","productTypeOptions","loadingTypeOptions","vesselTypeOptions","volumeUOMOptions","weightUOMOptions","lengthUOMOptions","vesselKPIList","maxNumberOfCompartments","showAuthenticationLayout","tempVessel","handleAllTerminalsChange","setState","terminalSelectionChange","handleDateTextChange","propertyName","handleChange","props","userDetails","EntityResult","IsEnterpriseNode","getTerminalsForCarrier","handleLoadingTypeChange","handleActiveStatusChange","IsArchived","newComp","Attributes","Capacity","TrailerCode","ShareholderCode","FRUOM","FlangeNo","MaxFR","NoofSeals","UOM","seqno","forEach","com","push","marine_trailercompartment","formCompartmentAttributes","obj","index","filter","cindex","e","newVal","isNaN","parseInt","comp","handleReset","Object","keys","key","handleResetAttributeValidationError","localNodeAttribute","saveVessel","createVessel","updateVessel","handleSave","fillDetails","attributeList","validateSave","convertStringtoDecimal","DateFieldsInEntities","Vehicle","IsWebPortalUser","handleAttributeDataChange","matchedAttributes","matchedAttributesList","modattribute","DefaultValue","isTerminalAdded","expandedRowIndex","item","splice","compAttribute","compIndex","compSequenceNo","SeqNumber","handleCarrierSearchChange","carrierCode","includes","handleAuthenticationClose","getAttributes","vesselRow","axios","RestAPIs","vesselAttributeEntity","vesselCompartmentAttributeEntity","tokenDetails","tokenInfo","then","response","result","IsSuccess","marine_vessel","getVessel","Ship","selectedShareholder","Common_Code","keyCode","KeyCodes","Vehicle_CarrierCompany","MARINE","ShareHolderCode","PrimaryShareholder","keyDataCode","sort","a","b","FunctionsList","functionGroups","modify","fnVessel","getKPIList","ErrorList","catch","add","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","vesselAttribute","valueAttribute","ListOfAttributeData","AttributeCode","attributes","attTerminal","some","selTerminal","compAttributes","att","DisplayName","MinValue","MaxValue","ValidationFormat","attributesforNewComp","tempCompAttributes","attData","tempAttIndex","assignedAttributes","getCarrierList","getLoadingTypes","getProductTypes","getVesselTypes","Table","vesselTypes","VehicleTypeCode","getUOMList","weightUOMs","MASS","weightOption","VOLUME","volumeOption","lengthUOMs","LENGTH","lengthOption","carrier","componentDidMount","selectedRow","getLookupValue","componentWillReceiveProps","nextProps","fillAttributeDetails","err","TransportationType","licDate","LicenseNoIssueDate","getUTCDate","VehicleCode","TrailerSeq","TrailerType","TareWeight","MaxLoadableWeight","WeightUOM","compAttributeMetaDataList","terminalAttributes","termAtt","notification","messageType","message","messageResultDetails","returnValue","values","every","trailerCompartmentValidationDef","col","validator","keyFields","displayName","keyValues","isSuccess","errorMessage","errMsg","onSaved","Entity","modRigidTruck","getCarrierSearchOptions","modCarrierCode","element","shareholder","vesselCode","view","fnKPIInformation","objKPIRequestData","PageName","kpiVesselDetail","InputParameters","ListKPIDetails","render","popUpContents","fieldName","fieldValue","LastUpdateTime","toLocaleDateString","toLocaleTimeString","LastActiveTime","CreatedTime","TMDetailsHeader","entityCode","newEntityName","PageAttibutes","WebPortalListPageSize","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","validationError","display","justifyContent","width","multiple","margin","Popup","marginLeft","position","List","content","Button","float","IsVisible","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","DatesInEntity","Driver","CarrierCompany","PrimeMover","Wagon","Contract","ContractItem","Order","AccessCard","ddlOptions","selectOptionText","option","unshift","language","navigator","userLanguage","moment","longDateFormat"],"sourceRoot":""}