{"version":3,"file":"static/js/2749.b2225083.chunk.js","mappings":"sMAoDO,SAASA,EAAaC,GAazB,IAb0B,oBAC5BC,EAAmB,eACnBC,EAAc,aACdC,EAAY,oBACZC,EAAmB,oBACnBC,EAAmB,SACnBC,EAAQ,MACRC,EAAK,aACLC,EAAY,WACZC,EAAU,sBACVC,EAAqB,WACrBC,EAAU,cACVC,GACDZ,EACC,MAAOa,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GA2C3C,SAASG,IACHjB,EAAoBkB,MAClBX,EAAaY,OAAS,EACCH,GAAP,IAAdD,GAGJT,IAGN,CAgHA,OACEc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAMC,MAAO,CAAEC,WAAY,aAAcC,QAAS,OAAQC,SAAA,EACvEC,EAAAA,EAAAA,KAAA,OACEL,UAAU,8CACVC,MAAO,CAAEE,QAAS,OAAQC,UAE1BL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAMC,MAAO,CAAEK,UAAW,OAAQJ,WAAY,IAAKE,SAAA,EAChEC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,+CAA8CI,UAC3DL,EAAAA,EAAAA,MAACQ,EAAAA,EAAa,CAAAH,SAAA,CAAC,KAhKrBC,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAACW,EAAAA,WAAU,CAAAN,SAAA,CACRxB,EAAe+B,QAAQC,KAAKC,IAEzBR,EAAAA,EAAAA,KAACK,EAAAA,WAAWI,KAAI,CACdC,QAASA,UAEqBC,IAA1B5B,GAC0B,OAA1BA,GAEAA,EACEyB,EAAWI,SACXrC,EAAe+B,QAEnB,EACAP,SAGDK,EAAEI,EAAWK,eAFTL,EAAWI,aAMtBZ,EAAAA,EAAAA,KAACK,EAAAA,WAAWI,KAAI,CAAAV,SACbK,EAAE7B,EAAesC,eADEtC,EAAeqC,qBA2IvCZ,EAAAA,EAAAA,KAAA,OACEL,UAAU,+CACZI,UAEEC,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAJ,EAAAA,EAAAA,KAAA,OACEL,UAAU,kBACVC,MAAO,CAAEkB,eAAgB,cAAef,UAExB,IAAfjB,EACC,IAEAY,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAAhB,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEL,EAAAA,EAAAA,MAAA,MAAIC,UAAU,UAASI,SAAA,CAAEK,EAAE,sBAAsB,UAEnDJ,EAAAA,EAAAA,KAAA,OAAKL,UAAU,WAAUI,UACvBC,EAAAA,EAAAA,KAACgB,EAAAA,OACC,CACAC,YAAab,EAAE,sBACfc,MAAOzC,EACP0C,UAAW7C,EAAoB8C,YAC/BC,QAnMfC,EAAAA,GAAgC9C,GAoMjB+C,SAAWL,GAAUxC,EAAoBwC,iBAhE7DlB,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAAC8B,EAAAA,MAAK,CAACC,KAAMvC,EAAWwC,KAAK,QAAO3B,SAAA,EAClCC,EAAAA,EAAAA,KAACwB,EAAAA,MAAMG,QAAO,CAAA5B,UACZC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAIK,EAAE,yBAGVV,EAAAA,EAAAA,MAAC8B,EAAAA,MAAMI,OAAM,CAAA7B,SAAA,EACXC,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLC,KAAK,YACLC,QAAS3B,EAAE,UACXM,QAASA,IAAMvB,GAAa,MAE9Ba,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLC,KAAK,UACLC,QAAS3B,EAAE,8BACXM,QAASA,KACPvB,GAAa,GACbR,GAAU,kBA0DtBqB,EAAAA,EAAAA,KAAA,OAAKL,UAAU,4CAA2CI,UAvJ1DL,EAAAA,EAAAA,MAAA,OACEE,MAAO,CAAEoC,MAAO,QAASC,QAAS,eAAgBhC,UAAW,QAASF,SAAA,CAErEf,GAAagB,EAAAA,EAAAA,KAACkC,EAAAA,MAAK,CAClBC,SAAS,eACTxC,UAAU,mBACVyC,SACEpC,EAAAA,EAAAA,KAAA,OACEL,WACGrB,EAAoBkB,IACjB,cACA,sBAAwB,YAE9BkB,QAASnB,EAAiBQ,UAE1BC,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CACHC,KAAK,SACLC,KAAK,aACLb,KAAK,QACLc,MAAM,YAIZC,GAAG,QACHhB,KAAMpC,EAAUU,UAEhBC,EAAAA,EAAAA,KAAA,OAAK0C,aAAcA,IAAMpD,GAAa,GAAOS,UAC3CC,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAJ,EAAAA,EAAAA,KAAC2C,EAAAA,aAAY,CAAA5C,UACXL,EAAAA,EAAAA,MAACiD,EAAAA,aAAY,CAAA5C,SAAA,EACXC,EAAAA,EAAAA,KAAC2C,EAAAA,aAAaC,OAAM,CAAA7C,SACjBK,EAAE,mBAEJvB,EAAa0B,KAAKsC,IAEf7C,EAAAA,EAAAA,KAAC2C,EAAAA,aAAalC,KAAI,CAChBC,QAASA,KAAMoC,OA3CfC,EA2C8BF,EAAKG,UA1CzD1D,GAAa,QACbV,EAAMmE,GAFR,IAAwBA,CA2C8C,EAAAhD,SAE7CK,EAAEyC,EAAKI,2BASf,GACVhE,GAAgBe,EAAAA,EAAAA,KAAA,OACfJ,MAAO,CAAEsD,WAAY,QACrBxC,QAASA,KACHpC,EAAoB6E,QACtBhE,GAAa,EAGf,EAEFQ,WACGrB,EAAoB6E,OACjB,cACA,sBAAwB,YAC7BpD,UAEDC,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CAACC,KAAK,SAASC,KAAK,SAASb,KAAK,QAAQc,MAAM,YAC9C,UA2FjB,CAxPApE,EAAcgF,aAAe,CAC3B9E,oBAAqB,CAAEkB,KAAK,EAAO2D,QAAQ,EAAO/B,aAAa,GAC/D7C,eAAgB,CACd8E,SAAU,GACVzC,SAAU,GACVC,aAAc,GACdyC,UAAW,CAAC,EACZhD,QAAS,GACTiD,aAAa,GAEf/E,aAAc,GACdC,oBAAqB,GACrBI,aAAc,GACdC,YAAY,EACZE,YAAY,EACZC,eAAe,G,SC/CV,SAASuE,EAAsBnF,GAclC,IAdmC,oBACrCC,EAAmB,eACnBC,EAAc,aACdC,EAAY,oBACZC,EAAmB,oBACnBC,EAAmB,SACnBC,EAAQ,MACRC,EAAK,aACLC,EAAY,WACZC,EAAU,sBACVC,EAAqB,WACrBC,EAAU,cACVC,GAEDZ,EACC,OACE2B,EAAAA,EAAAA,KAAC5B,EAAa,CACZE,oBAAqBA,EACrBC,eAAgBA,EAChBC,aAAcA,EACdC,oBAAqBA,EACrBC,oBAAqBA,EACrBC,SAAUA,EACVC,MAAOA,EACPC,aAAcA,EACdC,WAAYA,EACZC,sBAAuBA,EACvBC,WAAYA,EACZC,cAAeA,GAGrB,C,wMCtBA,MAAMwE,UAAiCC,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KAC/CC,MAAQ,CACNC,oBAAoB,EACpBC,SAAU,GACVC,iBAAkB1C,EAAAA,GAChB2C,EAAAA,IAEFC,uBAAwB,GACxBC,wBAAwB,GACxB,KA4BFC,cAAgB,CAACC,EAAcC,KAC7BC,KAAKC,SAAS,CAAET,SAAUO,IAC1B,MAAMN,EAAmBS,IAAAA,UAAiBF,KAAKV,MAAMG,uBACCrD,IAAlDsD,EAAAA,GAAgCI,KAClCL,EAAiBK,GAAgB/C,EAAAA,GAC/B2C,EAAAA,GAAgCI,GAChCC,GAEFC,KAAKC,SAAS,CAAER,mBAAkBE,uBAAwB,KAC5D,EAEA,KAEFQ,iBAAoBX,IAClBQ,KAAKC,SAAS,CAAEL,wBAAwB,IACxC,MAAMH,EAAmB,IAAKO,KAAKV,MAAMG,kBACxB,OAAbD,GAAkC,KAAbA,IACvBC,EAA2B,SAAI,wCAEjCO,KAAKC,SAAS,CAAER,qBAChB,IAAIW,GAAc,EAMlB,OALIA,IACFA,EAAcC,OAAOC,OAAOb,GAAkBc,OAAM,SAAU5D,GAC5D,MAAiB,KAAVA,CACT,KAEKyD,CAAW,EAOpB,KACAI,aAAe,KACbR,KAAKC,SACH,CACEV,oBAAoB,EACpBI,uBAAwB,GACxBC,wBAAwB,IAE1B,IAAMI,KAAKS,MAAMC,eAClB,EASH,KAEAC,iBAAmB,KACjB,GAAIX,KAAKG,iBAAiBH,KAAKV,MAAME,UAAW,CAC9CQ,KAAKC,SAAS,CAAEN,uBAAwB,KAExC,IACE,IAGIiB,EAAMZ,KAAKV,MAAME,SAEjBqB,EAAOb,KAAKS,MAAMK,SAClBC,EAAOC,IAAAA,IAAaC,UAAUC,OAAO,IAErCC,EAAMH,IAAAA,OAAgBH,EAAME,EAAM,CACpCK,QAASA,EACTC,WATe,MAYbC,EAAKN,IAAAA,IAAaC,UAAUC,OAAO,IAEnCK,EAAYP,IAAAA,IAAaQ,QAAQZ,EAAKO,EAAK,CAC7CG,GAAIA,EACJ/F,QAASyF,IAAAA,IAAaS,MACtBC,KAAMV,IAAAA,KAAcW,MAElBC,EACFb,EAAKc,WAAaP,EAAGO,WAAaN,EAAUM,WAG9CC,IACEC,EAAAA,IACA,sBACAC,mBAAmBJ,GACnB7E,EAAAA,GACEiD,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,MACG,IAArBsC,EAAOC,WACiC,SAAtCD,EAAOE,aAAaC,eACtBxC,KAAKC,SAAS,CAAEV,oBAAoB,IACpCS,KAAKS,MAAMgC,mBAQbzC,KAAKC,SAAS,CACZN,uBAAwB0C,EAAOK,UAAU,GACzC9C,wBAAwB,GAE5B,IAED+C,OAAOC,IACN5C,KAAKC,SAAS,CACZN,uBAAwBiD,EACxBhD,wBAAwB,GACxB,GAER,CAAE,MAAOgD,GACP5C,KAAKC,SAAS,CACZN,uBAAwBiD,EACxBhD,wBAAwB,GAE5B,CACF,MACEI,KAAKC,SAAS,CAAEL,wBAAwB,GAC1C,CACA,CAtJFiD,iBAAAA,GACE,IACE7C,KAAK8C,oBACP,CAAE,MAAOF,GACPG,QAAQC,IACN,iEACAJ,EAEJ,CACF,CAEAE,kBAAAA,GACE,IACE,IAAIvD,EAAqBxC,EAAAA,GACvBiD,KAAKS,MAAMwC,YAAYV,aAAaW,iBACpClD,KAAKS,MAAM0C,aACXnD,KAAKS,MAAM2C,eAEbpD,KAAKC,SAAS,CAAEV,wBAEW,IAAvBA,GAA8BS,KAAKS,MAAMgC,iBAC/C,CAAE,MAAOG,GACPG,QAAQC,IAAI,sCAAuCJ,EACrD,CACF,CA+HAS,MAAAA,GACE,OACE5H,EAAAA,EAAAA,KAAA,OAAAD,UACqC,IAAlCwE,KAAKV,MAAMC,oBACV9D,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAAC8B,EAAAA,MAAK,CAACC,MAAM,EAAMC,KAAK,OAAM3B,SAAA,EAC5BL,EAAAA,EAAAA,MAAC8B,EAAAA,MAAMG,QAAO,CAAA5B,SAAA,EACZL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKI,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OACEL,UAAU,eACVC,MAAO,CAAEsD,WAAY,QAASnD,UAE9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAKK,EAAE,4BAETJ,EAAAA,EAAAA,KAAA,OACEL,UAAU,kBACVC,MAAO,CAAEiI,UAAW,SACpBnH,QAAS6D,KAAKQ,aAAahF,UAE3BC,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CAACC,KAAK,SAASC,KAAK,gBAI7B7C,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEqC,QAAS,OAAQ6F,SAAU,QAAS/H,SAAA,EAChDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAAA,SAAAD,UACEL,EAAAA,EAAAA,MAAA,MAAAK,SAAA,CACGK,EAAE,mCAAmC,IACrCmE,KAAKS,MAAMK,iBAIlBrF,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAAC+H,EAAAA,MAAK,CACJC,OAAK,EACLlG,KAAK,WACLmG,uBAAuB,EACvB/G,MAAOqD,KAAKV,MAAME,SAClBmE,UAAU,WACV3G,SAAW+C,GACTC,KAAKH,cAAc,WAAYE,GAEjC6D,MAAO/H,EAAE,wBACT+G,MAAO/G,EAAEmE,KAAKV,MAAMG,iBAAiBD,UACrCqE,cAAc,aAKtB1I,EAAAA,EAAAA,MAAC8B,EAAAA,MAAMI,OAAM,CAAA7B,SAAA,EACXC,EAAAA,EAAAA,KAAA,QAAML,UAAU,gCAA+BI,SAC5CK,EAAEmE,KAAKV,MAAMK,2BAEhBlE,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLC,KAAK,UACLX,UAAWoD,KAAKV,MAAMM,uBACtBpC,QAAS3B,EAAE,qCACXM,QAAS6D,KAAKW,2BAMtB,MAGV,EAEF,MAOA,GAAemD,EAAAA,EAAAA,KAPUxE,IAChB,CACL2D,YAAa3D,EAAMyE,eAAed,YAClChB,aAAc3C,EAAMyE,eAAeC,aAIvC,CAAwC9E,E,8ICxOjC,SAAS+E,EAAqCnK,GAajD,IAbkD,UAClDoK,EAAS,SACTC,EAAQ,WACRC,EAAU,oBACVC,EAAmB,WACnBC,EAAU,cACVzE,EAAa,qBACb0E,EAAoB,YACpBC,EAAW,iBACX/E,EAAgB,iBAChBgF,EAAgB,YACjBC,GAEF5K,EACG,MAAO+B,IAAK8I,EAAAA,EAAAA,kBAUZ,OAEIxJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAmBC,MAAO,CAACK,UAAU,SAASF,SAAA,EACzDL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKI,SAAA,EACpBC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACjCC,EAAAA,EAAAA,KAAC+H,EAAAA,MAAK,CACFC,OAAK,EACL9G,MAAO0H,EAAoBO,UAC3BjB,UAAU,WACV3G,SAAW+C,GAASF,EAAc,YAAaE,GAC/C6D,MAAO/H,EAAE,+BACT+G,MAAO/G,EAAE4D,EAAiBmF,WAC1Bf,cAAc,EACdjH,SAAwC,KAA9B6H,EAAiBG,eAGvCnJ,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACjCC,EAAAA,EAAAA,KAACgB,EAAAA,OAAM,CACHgH,OAAK,EACL/G,YAAab,EAAE,iBACf+H,MAAO/H,EAAE,4BACTc,MAAsC,KAA/B0H,EAAoBQ,aACQzI,IAA/BiI,EAAoBQ,QACW,OAA/BR,EAAoBQ,QAAyBR,EAAoBQ,OACrE/H,QAAS,CACL,CAAEgI,KAAMjJ,EAAE,mBAAoBc,OAAO,GACrC,CAAEmI,KAAMjJ,EAAE,+BAAgCc,OAAO,IAErDK,SAAW+C,GAASF,EAAc,SAASE,QAGvDtE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACjCC,EAAAA,EAAAA,KAAC+H,EAAAA,MAAK,CACFC,OAAK,EACL9G,MAAO0H,EAAoBU,YAC3B/H,SAAW+C,GAASF,EAAc,cAAeE,GACjD6D,MAAO/H,EAAE,iCACT+G,MAAO/G,EAAE4D,EAAiBsF,aAC1BlB,cAAc,OAGtBpI,EAAAA,EAAAA,KAAA,OAAKL,UAAU,4BAA2BI,UAC9CL,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEoC,MAAO,SAAUjC,SAAA,EACvBC,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACHE,QAAS3B,EAAE,2BACXT,UAAU,eACVe,QAASA,IAAMqI,OAEnB/I,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACHC,KAAK,UACDC,QAAS3B,EAAE,0BACXe,UAAW8H,EACfvI,QAASA,IAAMmI,eAK3B7I,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kCAAiCI,UAC5CC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,sBAAqBI,UACpCL,EAAAA,EAAAA,MAAC6J,EAAAA,GAAS,CACNjF,KAAMmE,EACNe,QAAQ,EACRC,YAAcnF,QACK3D,IAAfgI,EAA2BA,EAAWrE,GAAQ,CAAC,EAClDvE,SAAA,EAEDC,EAAAA,EAAAA,KAACuJ,EAAAA,GAAUG,UAAS,KACpB1J,EAAAA,EAAAA,KAACuJ,EAAAA,GAAUI,OAAM,CACThK,UAAU,oDAEdiK,MAAM,YACNC,UAAU,EACVC,OAAQ1J,EAAE,gCAHN,cAKRJ,EAAAA,EAAAA,KAACuJ,EAAAA,GAAUI,OAAM,CACThK,UAAU,oDAEdiK,MAAM,SACNE,OAAQ1J,EAAE,4BACV2J,SAAWC,GAxF/B,SAAuBA,GACnB,MAAM,MAAE9I,EAAK,MAAE0I,GAAUI,EACzB,MAAqB,mBAAV9I,GAAiC,WAAV0I,EAC1B1I,GAAclB,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CAACE,KAAK,QAAQb,KAAK,QAAQc,MAAM,WAC5CxC,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CAACE,KAAK,QAAQb,KAAK,QAAQc,MAAM,QACjC,KAAVtB,GAA0B,OAAVA,QAA4BP,IAAVO,EAClCA,OADJ,CAGX,CAgF4C+I,CAAcD,IAHlC,WAKRhK,EAAAA,EAAAA,KAACuJ,EAAAA,GAAUI,OAAM,CACbhK,UAAU,4BAEViK,MAAM,cACNE,OAAQ1J,EAAE,kCAFN,eAMP8J,MAAMC,QAAQ1B,IAAcA,EAAUhJ,OAASiJ,GAC5C1I,EAAAA,EAAAA,KAACuJ,EAAAA,GAAUa,WAAU,IAErB,YAQxB,C,gLC3HA,MAAMC,UAAmC3G,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KACjDC,MAAQ,CACNyG,WAAW,EACXC,iBAAiB,EACjBC,mBAAmB,EACnBlM,oBAAqB,CAAEkB,KAAK,EAAO2D,QAAQ,EAAO/B,aAAa,GAC/DqJ,YAAa,GACbnG,KAAM,GACN0E,iBAAkBvE,IAAAA,UAAiBiG,EAAAA,IACnC1G,iBAAkB1C,EAAAA,GAAqCqJ,EAAAA,IACvD/B,oBAAqB,CAAC,EACtBK,aAAa,EACb2B,0BAA0B,EAC1BC,gCAAiC,EACjCC,qBAAsB,CAAC,GACxB,KAqBDC,UAAY,KACV,IACE,IAAI,oBAAEzM,GAAwB,IAAKiG,KAAKV,OACxCvF,EAAoB6E,QAAS,EAC7B7E,EAAoBkB,KAAM,EAC1B+E,KAAKC,SAAS,CACZ8F,WAAW,EACXhM,wBAEFiG,KAAKyG,kBACP,CAAE,MAAO7D,GACPG,QAAQC,IAAI,wDAAyDJ,EACvE,GACA,KACF8D,eAAkBpI,IAEhB,IACE,IAAI,oBAAEvE,GAAwB,IAAKiG,KAAKV,OACxCvF,EAAoBkB,IAAM8B,EAAAA,GACxBiD,KAAKS,MAAMwC,YAAYV,aAAaoE,cACpCC,EAAAA,EAAe3L,IACf4L,EAAAA,IAEF9M,EAAoB6E,QAAS,EAC7BoB,KAAKC,SAAS,CACZ8F,WAAW,EACXtB,iBAAkBnG,EAAKwI,QACvBzC,oBAAqB/F,EAAKwI,QAC1B/M,uBAEJ,CAAE,MAAO6I,GACPG,QAAQC,IAAI,wDAAyDJ,EACvE,GACA,KACF4B,YAAc,KACZ,IACE,MAAM,iBAAE/E,GAAqB,IAAKO,KAAKV,OACjCmF,EAAmBvE,IAAAA,UAAiBF,KAAKV,MAAMmF,kBACrDpE,OAAO0G,KAAKtH,GAAkBuH,SAAQ,SAAU7F,GAC9C1B,EAAiB0B,GAAO,EAC1B,IACAnB,KAAKC,SAAS,CACZoE,oBAAqB,IAAKI,GAC1BhF,oBAEJ,CAAE,MAAOmD,GACPG,QAAQC,IAAI,iEAAkEJ,EAChF,GACA,KAsBFqE,aAAe,CAACnH,EAAcC,KAE5B,IACE,MAAMsE,EAAsBnE,IAAAA,UAAiBF,KAAKV,MAAM+E,qBACxDA,EAAoBvE,GAAgBC,EAEpCC,KAAKC,SAAS,CAAEoE,wBAChB,MAAM5E,EAAmBS,IAAAA,UAAiBF,KAAKV,MAAMG,uBACArD,IAAjDgK,EAAAA,GAA+BtG,KACjCL,EAAiBK,GAAgB/C,EAAAA,GAC/BqJ,EAAAA,GAA+BtG,GAC/BC,GAEFC,KAAKC,SAAS,CAAER,qBAEpB,CAAE,MAAOmD,GACPG,QAAQC,IACN,kEACAJ,EAEJ,GACA,KACFsE,aAAe,KAEb,IACElH,KAAKmH,4BACL,IAAI9C,EAAoBnE,IAAAA,UAAiBF,KAAKV,MAAM+E,qBACpD,IAAI,oBAAEtK,GAAwB,IAAKiG,KAAKV,OACxCvF,EAAoB6E,QAAS,EAC7BoB,KAAKC,SAAS,CAAElG,wBAChB,IAAI6K,EAAYP,EAAoBO,UACpC,IAAIwC,EAAU,CACZ,CACEjG,IAAKkG,EAAAA,GACL1K,MAAOiI,IAGP0C,EAAM,CACRC,YAAaF,EAAAA,GACbA,SAAUD,GAERI,EAAe,CACjBC,YAAa,WACbC,QAAS,8BACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,+BACZC,UAAW,CAACjD,GACZkD,WAAW,EACXC,aAAc,MAIpBjG,IACEC,EAAAA,IACAhF,EAAAA,GACEuK,EACAtH,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IAEL,IAAIC,EAASD,EAASrC,KACtByH,EAAaC,YAAcpF,EAAOC,UAAY,UAAY,WAC1DkF,EAAaG,qBAAqB,GAAGG,UAAYzF,EAAOC,WAC/B,IAArBD,EAAOC,WACTvI,EAAoB6E,QAAS,EAC7BoB,KAAKC,SAAS,CAAE+F,iBAAiB,EAAOjM,wBAAuB,KAC7DiG,KAAKgI,2BACLhI,KAAKyG,kBAAkB,MAGzBe,EAAaG,qBAAqB,GAAGI,aACnC,0BACFhO,EAAoB6E,QAAS,EAC7BoB,KAAKC,SAAS,CAAElG,0BAGlBkO,EAAAA,EAAAA,QACExM,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACyM,EAAAA,EAAW,CAACC,oBAAqBX,MAEpC,CACEY,UAAwC,YAA7BZ,EAAaC,aAA4B,KAEvD,IAIF9E,OAAOC,IACNG,QAAQC,IAAI,gCAAkCJ,GAC9C,IAAI,oBAAE7I,GAAwB,IAAKiG,KAAKV,OACxCvF,EAAoB6E,QAAS,EAC7BoB,KAAKC,SAAS,CAAElG,wBAChByN,EAAaG,qBAAqB,GAAGI,aAAenF,GACpDqF,EAAAA,EAAAA,QACExM,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACyM,EAAAA,EAAW,CAACC,oBAAqBX,MAEpC,CACEY,UAAwC,YAA7BZ,EAAaC,aAA4B,KAEvD,GAEP,CAAE,MAAO7E,GACPG,QAAQC,IAAI,2DAA4DJ,EAC1E,GACA,KAEFyF,2BAA6B,KAC3B,IACErI,KAAKmH,4BACLnH,KAAKC,SAAS,CAAEyE,aAAa,IAC7B,IAAI6B,EAAuBrG,IAAAA,UAAiBF,KAAKV,MAAMiH,sBAEb,KAA1CvG,KAAKV,MAAMmF,iBAAiBG,UACtB5E,KAAKsI,wBAAwB/B,GAC7BvG,KAAKuI,wBAAwBhC,EAErC,CAAE,MAAO3D,GACPG,QAAQC,IAAI,wEACd,GACA,KAEFsB,WAAa,KACX,IAEE,IAAID,EAAsBnE,IAAAA,UAAiBF,KAAKV,MAAM+E,qBAEtD,GAAIrE,KAAKwI,aAAanE,GAAqB,CACzC,IAAIgC,GACoD,IAAxDrG,KAAKS,MAAMwC,YAAYV,aAAakG,gBAGlClC,EAAuBrG,IAAAA,UAAiBmE,GAC5CrE,KAAKC,SAAS,CAAEoG,2BAA0BE,yBAAwB,MAC/B,IAA7BF,GACFrG,KAAKqI,4BACP,GAEF,MAAOrI,KAAKC,SAAS,CAAEyE,aAAa,GACtC,CACA,MAAO9B,GACLG,QAAQC,IAAI,yDAA0DJ,EACxE,GACA,KA6PFuE,0BAA4B,KAC1BnH,KAAKC,SAAS,CACZoG,0BAA0B,EAAOC,gCAAgC,GACjE,EACF,KAsBFoC,mBAAqB,KACnB,IACE,IAAIpC,GACsD,IAAxDtG,KAAKS,MAAMwC,YAAYV,aAAakG,gBAGtCzI,KAAKC,SAAS,CAAEqG,oCACuB,IAAnCA,GACFtG,KAAKkH,cAET,CAAE,MAAOtE,GACPG,QAAQC,IAAI,yDACd,EACA,CA/gBFH,iBAAAA,GACE,IACE9F,EAAAA,GAAqBiD,KAAKS,MAAMwC,YAAYV,aAAaoG,YACzD,IAAI,oBAAE5O,GAAwB,IAAKiG,KAAKV,OACxCvF,EAAoBkB,IAAM8B,EAAAA,GACxBiD,KAAKS,MAAMwC,YAAYV,aAAaoE,cACpCC,EAAAA,EAAe3L,IACf4L,EAAAA,IAEF7G,KAAKC,SAAS,CACZlG,wBAEFiG,KAAKgI,0BACP,CAAE,MAAOpF,GACPG,QAAQC,IACN,gEACAJ,EAEJ,CACF,CAkDA4F,YAAAA,CAAanE,GAEX,IAAI5E,EAAmBS,IAAAA,UAAiBF,KAAKV,MAAMG,kBACnDY,OAAO0G,KAAKX,EAAAA,IAAgCY,SAAQ,SAAU7F,GAC5D1B,EAAiB0B,GAAOpE,EAAAA,GACtBqJ,EAAAA,GAA+BjF,GAC/BkD,EAAoBlD,GAExB,IACAnB,KAAKC,SAAS,CACZR,qBAEF,IAAIW,GAAc,EAOlB,OANIA,IACFA,EAAcC,OAAOC,OAAOb,GAAkBc,OAAM,SAAU5D,GAC5D,MAAiB,KAAVA,CACT,KAGKyD,CACT,CAmJAqG,gBAAAA,GACEzG,KAAKC,SAAS,CACZoE,oBAAqBnE,IAAAA,UAAiBiG,EAAAA,IACtC1B,iBAAkBvE,IAAAA,UAAiBiG,EAAAA,KAEvC,CACAmC,uBAAAA,CAAwBjE,GACtB,IAEEA,EAAoBQ,OAAsC,KAA/BR,EAAoBQ,aAAgDzI,IAA/BiI,EAAoBQ,QAA8BR,EAAoBQ,OACtI,IAAIuC,EAAU,CACZ,CACEjG,IAAKkG,EAAAA,GACL1K,MAAO0H,EAAoBO,WAE7B,CACEzD,IAAKkG,EAAAA,GACL1K,MAAO0H,EAAoBQ,QAE7B,CACE1D,IAAKkG,EAAAA,GACL1K,MAAO0H,EAAoBU,cAG3BuC,EAAM,CACRC,YAAaF,EAAAA,GACbA,SAAUD,GAGRI,EAAe,CACjBC,YAAa,WACbC,QAAS,+BACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,+BACZC,UAAW,CAACxD,EAAoBO,WAChCkD,WAAW,EACXC,aAAc,MAKpBjG,IACEC,EAAAA,IACAhF,EAAAA,GACEuK,EACAtH,KAAKS,MAAMwB,aAAaC,YAE1BC,MAAMC,IAEN,IAAIC,EAASD,EAASrC,KACtByH,EAAaC,YAAcpF,EAAOC,UAAY,UAAY,WAC1DkF,EAAaG,qBAAqB,GAAGG,UAAYzF,EAAOC,WAC/B,IAArBD,EAAOC,UACTtC,KAAKC,SACH,CACEyE,YAAa3H,EAAAA,GACXiD,KAAKS,MAAMwC,YAAYV,aAAaoE,cACpCC,EAAAA,EAAegC,OACf/B,EAAAA,IAEFpC,iBAAkBJ,EAClBA,oBAAqBA,IAEvB,KACErE,KAAKgI,0BAA0B,KAKnCR,EAAaG,qBAAqB,GAAGI,aACnC1F,EAAOK,UAAU,GACnB1C,KAAKC,SAAS,CACZyE,YAAa3H,EAAAA,GACXiD,KAAKS,MAAMwC,YAAYV,aAAaoE,cACpCC,EAAAA,EAAe3L,IACf4L,EAAAA,MAGJ9D,QAAQC,IAAI,8BAA+BX,EAAOK,YAEpD,MAAM3I,EAAsB,IAAKiG,KAAKV,MAAMvF,qBACX,YAA7ByN,EAAaC,cACf1N,EAAoBkB,KAAM,EAC1BlB,EAAoB6E,QAAS,EAC7BoB,KAAKC,SAAS,CAAE8F,WAAW,EAAMhM,0BAEnCkO,EAAAA,EAAAA,QACExM,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACyM,EAAAA,EAAW,CAACC,oBAAqBX,MAEpC,CACEY,UAAwC,YAA7BZ,EAAaC,aAA4B,KAEvD,IAEA9E,OAAOC,IACN5C,KAAKC,SAAS,CACZyE,YAAa3H,EAAAA,GACXiD,KAAKS,MAAMwC,YAAYV,aAAaoE,cACpCC,EAAAA,EAAe3L,IACf4L,EAAAA,MAGJW,EAAaG,qBAAqB,GAAGI,aAAenF,GACpDqF,EAAAA,EAAAA,QACExM,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACyM,EAAAA,EAAW,CAACC,oBAAqBX,MAEpC,CACEY,UAAwC,YAA7BZ,EAAaC,aAA4B,KAEvD,GAEP,CAAE,MAAO7E,GACPG,QAAQC,IAAI,mCAAmCJ,EACjD,CACF,CACA2F,uBAAAA,CAAwBlE,GACtB,IACE,IAAI+C,EAAU,CACZ,CACEjG,IAAKkG,EAAAA,GACL1K,MAAO0H,EAAoBO,WAE7B,CACEzD,IAAKkG,EAAAA,GACL1K,MAAO0H,EAAoBQ,QAE7B,CACE1D,IAAKkG,EAAAA,GACL1K,MAAO0H,EAAoBU,cAG3BuC,EAAM,CACRC,YAAaF,EAAAA,GACbA,SAAUD,GAIRI,EAAe,CACjBC,YAAa,WACbC,QAAS,+BACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,+BACZC,UAAW,CAACxD,EAAoBO,WAChCkD,WAAW,EACXC,aAAc,MAKpBjG,IACEC,EAAAA,IACAhF,EAAAA,GACEuK,EACAtH,KAAKS,MAAMwB,aAAaC,YAE1BC,MAAMC,IAEN,IAAIC,EAASD,EAASrC,KACtByH,EAAaC,YAAcpF,EAAOC,UAAY,UAAY,WAC1DkF,EAAaG,qBAAqB,GAAGG,UAAYzF,EAAOC,WAC/B,IAArBD,EAAOC,UACTtC,KAAKC,SACH,CACEyE,YAAa3H,EAAAA,GACXiD,KAAKS,MAAMwC,YAAYV,aAAaoE,cACpCC,EAAAA,EAAegC,OACf/B,EAAAA,MAGJ,KACE7G,KAAKgI,0BAA0B,KAKnCR,EAAaG,qBAAqB,GAAGI,aACnC1F,EAAOK,UAAU,GACnB1C,KAAKC,SAAS,CACZyE,YAAa3H,EAAAA,GACXiD,KAAKS,MAAMwC,YAAYV,aAAaoE,cACpCC,EAAAA,EAAegC,OACf/B,EAAAA,QAKNoB,EAAAA,EAAAA,QACExM,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACyM,EAAAA,EAAW,CAACC,oBAAqBX,MAEpC,CACEY,UAAwC,YAA7BZ,EAAaC,aAA4B,KAEvD,IAGA9E,OAAOC,IACN5C,KAAKC,SAAS,CACZyE,YAAa3H,EAAAA,GACXiD,KAAKS,MAAMwC,YAAYV,aAAaoE,cACpCC,EAAAA,EAAegC,OACf/B,EAAAA,MAGJW,EAAaG,qBAAqB,GAAGI,aAAenF,GACpDqF,EAAAA,EAAAA,QACExM,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACyM,EAAAA,EAAW,CAACC,oBAAqBX,MAEpC,CACEY,UAAwC,YAA7BZ,EAAaC,aAA4B,KAEvD,GAEP,CAAE,MAAO7E,GACPG,QAAQC,IAAI,sCAAsCJ,EACpD,CACF,CACAoF,wBAAAA,GAEE,IACElG,IACEC,EAAAA,IACAhF,EAAAA,GAAwCiD,KAAKS,MAAMwB,aAAaC,YAE/DC,MAAMC,IACL,IAAIC,EAASD,EAASrC,MACG,IAArBsC,EAAOC,UACTtC,KAAKC,SAAS,CACZF,KAAMsC,EAAOE,aAAcyD,iBAAiB,EAAMtB,YAAa3H,EAAAA,GAC7DiD,KAAKS,MAAMwC,YAAYV,aAAaoE,cACpCC,EAAAA,EAAegC,OACf/B,EAAAA,OAGJ7G,KAAKC,SAAS,CAAEF,KAAM,GAAIiG,iBAAiB,IAC3CjD,QAAQC,IAAI,qCAAsCX,EAAOK,WAC3D,IAEDC,OAAOC,IACN5C,KAAKC,SAAS,CAAEF,KAAM,GAAIiG,iBAAiB,IAC3CjD,QAAQC,IAAI,gDAAiDJ,EAAM,GAEzE,CAAE,MAAOA,GACPG,QAAQC,IAAI,kCAAkCJ,EAChD,CACF,CASAiG,aAAAA,GACE,OAAI7I,KAAKV,MAAMgH,+BACPM,EAAAA,EAAekC,OACf9I,KAAKV,MAAM+G,yBAEyB,KAA1CrG,KAAKV,MAAMmF,iBAAiBG,UAC1BgC,EAAAA,EAAe3L,IACf2L,EAAAA,EAAegC,YAJf,CAMP,CAEAG,YAAAA,GACC,OAAI/I,KAAKV,MAAMgH,+BACNtG,KAAKkH,aACLlH,KAAKV,MAAM+G,yBACXrG,KAAKqI,gCADT,CAGP,CAiBEhF,MAAAA,GACE,OACElI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaI,SAAA,EAC1BC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACwD,EAAAA,EAAsB,CACrBlF,oBAAqBiG,KAAKV,MAAMvF,oBAChCE,aAAc+F,KAAKS,MAAMwC,YAAYV,aAAayG,gBAClD5O,SAAU4F,KAAK0I,mBACfrO,MAAO2F,KAAKwG,UACZjM,YAAY,MAGbyF,KAAKV,MAAM0G,iBACVvK,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACwI,EAAqC,CACtCC,UAAWlE,KAAKV,MAAMS,KAAKkJ,MAC3B9E,SACEnE,KAAKS,MAAMwC,YAAYV,aAAa2G,cACjCC,sBAELC,gBACEpJ,KAAKS,MAAMwC,YAAYV,aAAa2G,cACjCG,oBAELjF,WAAYpE,KAAK0G,eACjBrC,oBAAqBrE,KAAKV,MAAM+E,oBAChCI,iBAAkBzE,KAAKV,MAAMmF,iBAC5BsB,UAAW/F,KAAKV,MAAMyG,UACvBzB,WAAYtE,KAAKsE,WACjBzE,cAAeG,KAAKiH,aACpBzC,YAAaxE,KAAKwE,YAClB/E,iBAAkBO,KAAKV,MAAMG,iBAC7BiF,YAAa1E,KAAKV,MAAMoF,iBAI5BjJ,EAAAA,EAAAA,KAAAe,EAAAA,SAAA,CAAAhB,UACIC,EAAAA,EAAAA,KAAC6N,EAAAA,EAAW,CAAC5B,QAAQ,eAG3BjM,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAAC8N,EAAAA,eAAc,CACbC,iBAAiB,EACjBC,cAAc,EACdC,aAAa,EACbC,aAAa,EACb/L,SAAS,eACTgM,eAAe,8BAGlB5J,KAAKV,MAAM+G,0BAA4BrG,KAAKV,MAAMgH,gCACjD7K,EAAAA,EAAAA,KAACyD,EAAAA,EAAwB,CACvB4B,SAAUd,KAAKS,MAAMwC,YAAYV,aAAasH,SAC9C1G,aAAcnD,KAAK6I,gBACnBzF,cAAeyD,EAAAA,GACfpE,gBAAiBzC,KAAK+I,eACtBrI,YAAaV,KAAKmH,4BAElB,OAGV,EAKF,MAOE,GAAerD,EAAAA,EAAAA,KAPQxE,IACd,CACL2D,YAAa3D,EAAMyE,eAAed,YAClChB,aAAc3C,EAAMyE,eAAeC,aAIvC,CAAwC8B,E,u1CC7nBnC,MAAMc,EAAiB,CAC5BkD,KAAM,OACN7O,IAAK,MACL2N,OAAQ,SACRE,OAAQ,UAEGiB,EAAmB,iBACnBC,EAAW,SACXC,EAAa,WACbC,EAAY,UACZC,EAAmB,iBACnBC,EAAgB,cAChBC,EAAe,aACfC,EAAY,UACZC,EAAQ,wBACRC,EAAQ,oBACRC,EAAmB,qBACnBC,EAAW,SACXC,EAAU,QACVC,EAAoB,kBAEpBC,EAAa,WACbC,EAAiB,2BACjBC,EAAmB,qBACnBC,EAAgC,8BAChCC,EAAkB,oBAClBC,EAAa,WACbC,EAAoB,kBACpBC,EAAiB,eACjBC,EAAgB,cAChBC,EAAc,YACdC,EAAc,YAEdC,EAAsB,oBACtBC,EAAiB,eACjBC,EAAiB,eACjBC,EAAmC,iCACnCC,EAAkC,gCAClCC,EAAqB,mBACrBC,EAA2B,yBAE3BC,EAAqB,mBACrBC,EAAiB,eACjBC,EAAiB,eACjBC,EAAoB,kBACpBC,EAA6B,2BAE7BC,EAAqB,MACrBC,EAA+B,6BAC/BC,EAAgC,8BAChCC,EAAqB,mBACrBC,EAAoB,kBAEpBC,EAAgC,8BAChCC,EAA+B,6BAE/BC,EAAe,aAIfC,EAAkB,gBAClBC,EAAqB,sBAErBC,EAAuB,QACvBC,EAAgB,cAChBC,EAAa,iBACbC,GAAW,eACXC,GAAgB,cAChBC,GAAa,WACbC,GAAuB,qBACvBC,GAAa,WACbC,GAAoB,kBACpBC,GAAc,YACdC,GAAS,OACTC,GAAe,aACfC,GAAiB,eACjBC,GAA+B,6BAC/BC,GAAe,aACfC,GAAa,WACbC,GAAsB,oBAEtBC,GAAmB,iBACnBC,GAAmB,iBACnBC,GAA6B,2BAC7BC,GAAiC,+BACjCC,GAAwB,sBACxBC,GAAc,YACdC,GAAiB,eACjBC,GAAe,aACfC,GAAsB,oBACtBC,GAA+B,6BAC/BC,GAAmB,iBACnBC,GAAmB,iBACnBC,GAA+B,6BAC/BC,GAAgC,8BAEhCC,GAAuB,qBACvBC,GAAkB,gBAClBC,GAAa,WACbC,GAAa,WACbC,GAAa,WACbC,GAAa,WACbC,GAAkB,gBAClBC,GAAiB,eACjBC,GAAuB,qBACvBC,GAAY,UACZC,GAAwB,2BACxBC,GAAmB,iBAEnBC,GAAa,WACbC,GAAqB,mBACrBC,GAAa,WACbC,GAA2B,yBAG3BC,GAAgB,cAChBC,GAAS,cACTC,GAAiC,+BAEjCC,GAAwB,sBACxBC,GAAyB,mBAEzBC,GAA0B,wBAC1BrJ,GAAsB,oBACtBsJ,GAA4B,0BAC5BC,GAAuB,qBAKvBC,GAAgC,8BAGhCC,GAAsB,oBACtBC,GAA8B,4BAC9BC,GAAyB,uBACzBC,GAAiC,+BACjCC,GAAc,YACdC,GAAgB,cAChBC,GAAyB,uBACzBC,GAAsB,oBACtBC,GAA0B,wBAC1BC,GACX,kCACWC,GAAiB,gBACjBC,GAA0B,wBAC1BC,GAAiB,eACjBC,GAAmB,iBACnBC,GAAmB,iBACnBC,GAAqB,mBAIrBC,GAAsB,oBACtBC,GAAyB,0BAEzBC,GAAwB,sBACxBC,GAA2B,4BAE3BC,GAAsB,oBACtBC,GAAyB,0BAEzBC,GAA0B,wBAC1BC,GAA6B,8BAC7BC,GAAa,WACbC,GAAsB,oBAEtBC,GAAmB,iBAEnBC,GAAiB,eACjBC,GAAgB,cAChBC,GAAkB,gBAElBC,GAAgB,cAChBC,GAAkB,gBAKlBC,GAAiC,8B,oqCCnLvC,MAAMC,EAAc,cACdC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAa,aACbC,EAAe,eACfC,EAAc,cACdC,EAAqB,qBACrBC,EAAiB,iBACjBC,EAAc,cACdC,EAAkB,kBAClBC,EAAsB,sBACtBC,EAAe,eACfC,EAAY,YACZC,EAAc,cAEdC,EAAqB,qBACrBC,EAAoB,oBACpBC,EAAe,eACfC,EAAe,eAEfC,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAgB,gBAChBC,EAAY,YAEZC,EAAkB,kBAElBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAsB,sBACtBC,EAAyB,yBAEzBC,EAAkB,kBAClBC,EAAe,eAGfC,EAAe,eAEfC,EAAa,aAEbC,EAAa,aACbC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAU,UACVC,EAAU,UACVC,EAAkB,kBAClBC,EAAS,SACTC,EAAwB,wBAExBC,EAAiB,iBACjBC,EAAoB,qBACpBC,EAAU,UACVC,EAAoB,oBACpBC,EAAc,cACdC,EAAe,eACfC,EAAgB,gBAChBC,EAAW,WACXC,EAAY,YAEZC,EAAe,eACfC,EAAiB,iBACjBC,EAAgB,gBAChBC,GAAe,eAEfC,GAAgB,gBAChBC,GAAkB,kBAClBC,GAAsB,sBACtBC,GAAe,SAEfC,GAAiB,iBACjBC,GAAuB,SACvBC,GAAgB,gBAChBC,GAAkB,kBAClBC,GAAsB,sBACtBC,GAA4B,4BAC5BC,GAAuB,uBACvBC,GAAgB,gBAChBC,GAAiB,iBACjBC,GAAc,cACdC,GAAW,WACXC,GAAc,cACdC,GAAiB,iBACjBC,GAAU,UACVC,GAAgB,gBAChBC,GAAc,cACdC,GAAW,oBACXC,GAAoB,oBACpBC,GAAa,aACbC,GAAqB,qBACrBC,GAAiB,iBACjBC,GAAgB,gBAEhBC,GAAa,aACbC,GAAa,aACbC,GAAW,WACXC,GAAqB,qBACrBC,GAAsB,kBACtBC,GAAW,WACXC,GAAW,WACXC,GAAmB,mBACnBC,GAAmB,mBACnBC,GAAc,cACdC,GAAc,cACdC,GAAqB,qBACrBC,GAAwB,wBACxBC,GAA0B,0BAC1BC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAyB,yBACzBC,GAA4B,4BAC5BC,GAA6B,6BAC7BC,GAA0B,0BAC1BC,GAAe,eAEfC,GAAwB,wBACxBC,GAA+B,+BAC/BC,GAA6B,6BAC7BC,GAAuB,uBACvBC,GAAoB,oBACpBC,GAAc,cACdC,GAAwB,wBACxBC,GAAU,UACVC,GAAY,YACZC,GAAc,cACdC,GAAe,eACfC,GAAqB,qBACrBC,GAAkB,kBAClBC,GAAqB,qBAErBC,GAAkB,kBAClBC,GAAoB,oBACpBC,GAAmB,mBACnBC,GAAmC,mCAMnCC,GAAe,eACfC,GAAe,eACfC,GAAgB,e","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/Composite/Summary/NotificationGroupSummaryComposite.jsx","Components/Composite/Entity/NotificationGroupComposite.jsx","JS/FunctionGroups.js","JS/KeyCodes.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { Icon,Input,Select,Button } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nNotificationGroupSummaryPageComposite.propTypes = {\r\n    tableData: PropTypes.object.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    modNotificationData: PropTypes.object.isRequired,\r\n    notificationData: PropTypes.object.isRequired,\r\n    isDetails: PropTypes.bool.isRequired,\r\n    handleSave: PropTypes.func.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    onActiveStatusChange: PropTypes.func.isRequired,\r\n    handleReset: PropTypes.func.isRequired,\r\n    validationErrors: PropTypes.object.isRequired,\r\n    saveEnabled:PropTypes.bool.isRequired\r\n};\r\nexport function NotificationGroupSummaryPageComposite({\r\n    tableData,\r\n    pageSize,\r\n    onRowClick,\r\n    modNotificationData,\r\n    handleSave,\r\n    onFieldChange,\r\n    onActiveStatusChange,\r\n    handleReset,\r\n    validationErrors,\r\n    notificationData,\r\n   saveEnabled\r\n   \r\n}) {\r\n    const [t] = useTranslation();\r\n    function displayValues(cellData) {\r\n        const { value, field } = cellData;\r\n        if (typeof value === \"boolean\" || field === \"Active\") {\r\n            if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n            else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n        } else if (value === \"\" || value === null || value === undefined) {\r\n            return value;\r\n        }\r\n    }\r\n    return (\r\n      \r\n        <div className=\"detailsContainer\" style={{marginTop:\"-2rem\"}}>\r\n            <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                    <Input\r\n                        fluid\r\n                        value={modNotificationData.GroupCode}\r\n                        indicator=\"required\"\r\n                        onChange={(data) => onFieldChange(\"GroupCode\", data)}\r\n                        label={t(\"NotificationGroup_GroupCode\")}\r\n                        error={t(validationErrors.GroupCode)}\r\n                        reserveSpace={false}\r\n                        disabled={notificationData.GroupCode !==\"\"}\r\n                    />\r\n                </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                        fluid\r\n                        placeholder={t(\"Common_Select\")}\r\n                        label={t(\"NotificationGroup_Status\")}\r\n                        value={modNotificationData.Active === \"\" || \r\n                            modNotificationData.Active === undefined || \r\n                            modNotificationData.Active === null ? true : modNotificationData.Active}\r\n                        options={[\r\n                            { text: t(\"ViewShipment_Ok\"), value: true },\r\n                            { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                        ]}\r\n                        onChange={(data) => onFieldChange(\"Active\",data)}\r\n                    />\r\n                </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={modNotificationData.Description}\r\n                        onChange={(data) => onFieldChange(\"Description\", data)}\r\n                        label={t(\"NotificationGroup_Description\")}\r\n                        error={t(validationErrors.Description)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-9 col-lg-12\">\r\n            <div style={{ float: \"right\" }}>\r\n                    <Button\r\n                        content={t(\"NotificationGroup_Reset\")}\r\n                        className=\"cancelButton\"\r\n                        onClick={() => handleReset()}\r\n                    />\r\n                    <Button\r\n                        type=\"primary\"\r\n                            content={t(\"NotificationGroup_Save\")}\r\n                            disabled={!saveEnabled}\r\n                        onClick={() => handleSave()}\r\n                    />\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row marginRightZero tableScroll\">\r\n                <div className=\"col-12 detailsTable\" >\r\n                <DataTable\r\n                    data={tableData}\r\n                    search={true}\r\n                    onCellClick={(data) =>\r\n                        onRowClick !== undefined ? onRowClick(data) : {}\r\n                    }\r\n                >\r\n                    <DataTable.ActionBar />\r\n                    <DataTable.Column\r\n                            className=\"compColHeight colminWidth notificationgroupstatus\"\r\n                        key=\"GroupCode\"\r\n                        field=\"GroupCode\"\r\n                        sortable={true}\r\n                        header={t(\"NotificationGroup_GroupCode\")}\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                            className=\"compColHeight colminWidth notificationgroupstatus\"\r\n                        key=\"Active\"\r\n                        field=\"Active\"\r\n                        header={t(\"NotificationGroup_Status\")}\r\n                        renderer={(cellData) => displayValues(cellData)}\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"Description\"\r\n                        field=\"Description\"\r\n                        header={t(\"NotificationGroup_Description\")}\r\n                    ></DataTable.Column>\r\n                   \r\n                   \r\n                    {Array.isArray(tableData) && tableData.length > pageSize ? (\r\n                        <DataTable.Pagination />\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </DataTable>\r\n            </div>\r\n           \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { NotificationGroupSummaryPageComposite } from \"../Summary/NotificationGroupSummaryComposite\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport lodash from \"lodash\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { functionGroups, fnNotificationGroup } from \"../../../JS/FunctionGroups\";\r\nimport { emptyNotificationGroup } from \"../../../JS/DefaultEntities\";\r\nimport { notificationGroupValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nclass NotificationGroupComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n    selectedRow: [],\r\n    data: [],\r\n    notificationData: lodash.cloneDeep(emptyNotificationGroup),\r\n    validationErrors: Utilities.getInitialValidationErrors(notificationGroupValidationDef),\r\n    modNotificationData: {},\r\n    saveEnabled: false,\r\n    showAuthenticationLayout: false,\r\n    showDeleteAuthenticationLayout : false,\r\n    tempNotificationData: {},\r\n  }\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnNotificationGroup\r\n      );\r\n      this.setState({\r\n        operationsVisibilty,\r\n      });\r\n      this.getNotificationGroupList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"NotificationGroupComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        operationsVisibilty,\r\n      })\r\n      this.setDefaultValues();\r\n    } catch (error) {\r\n      console.log(\"NotificationGroupComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n  handleRowClick = (item) => {\r\n    \r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnNotificationGroup\r\n      );\r\n      operationsVisibilty.delete = true;\r\n      this.setState({\r\n        isDetails: true,\r\n        notificationData: item.rowData,\r\n        modNotificationData: item.rowData,\r\n        operationsVisibilty,\r\n      })\r\n    } catch (error) {\r\n      console.log(\"NotificationGroupComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n  handleReset = () => {\r\n    try {\r\n      const { validationErrors } = { ...this.state };\r\n      const notificationData = lodash.cloneDeep(this.state.notificationData);\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState({\r\n        modNotificationData: { ...notificationData },\r\n        validationErrors,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"NotificationGroupDetailsComposite:Error occured on handleReset\", error);\r\n    }\r\n  };\r\n  validateSave(modNotificationData) {\r\n    \r\n    var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    Object.keys(notificationGroupValidationDef).forEach(function (key) {\r\n      validationErrors[key] = Utilities.validateField(\r\n        notificationGroupValidationDef[key],\r\n        modNotificationData[key]\r\n      );\r\n    });\r\n    this.setState({\r\n      validationErrors\r\n    })\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n\r\n    return returnValue;\r\n  }\r\n  handleChange = (propertyName, data) => {\r\n    \r\n    try {\r\n      const modNotificationData = lodash.cloneDeep(this.state.modNotificationData);\r\n      modNotificationData[propertyName] = data;\r\n      \r\n      this.setState({ modNotificationData });\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (notificationGroupValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          notificationGroupValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"NotificationGroupDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleDelete = () => {\r\n    \r\n    try {\r\n      this.handleAuthenticationClose();\r\n      let modNotificationData=lodash.cloneDeep(this.state.modNotificationData)\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n      var GroupCode = modNotificationData.GroupCode\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.NotificationGroupCode,\r\n          value: GroupCode,\r\n        },\r\n      ]\r\n      let obj = {\r\n        keyDataCode: KeyCodes.NotificationGroupCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"NotificationGroup_DeleteMsg\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"NotificationGroup_GroupCode\"],\r\n            keyValues: [GroupCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.DeleteNotificationGroup,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          \r\n          var result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess\r\n          if (result.IsSuccess === true) {\r\n            operationsVisibilty.delete = false;\r\n            this.setState({ isReadyToRender: false, operationsVisibilty }, () => {\r\n              this.getNotificationGroupList();\r\n              this.setDefaultValues()\r\n            });\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              \"Notification_DelFailure\";\r\n            operationsVisibilty.delete = true;\r\n            this.setState({ operationsVisibilty });\r\n          }\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n\r\n          \r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error occured while deleting:\" + error);\r\n          var { operationsVisibilty } = { ...this.state };\r\n          operationsVisibilty.delete = true;\r\n          this.setState({ operationsVisibilty });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\"NotificationgroupComposite:Error occured on handleDelete\", error);\r\n    }\r\n  };\r\n\r\n  addUpdateNotificationGroup = () => {\r\n    try {\r\n      this.handleAuthenticationClose();\r\n      this.setState({ saveEnabled: false });\r\n      let tempNotificationData = lodash.cloneDeep(this.state.tempNotificationData);\r\n     \r\n      this.state.notificationData.GroupCode === \"\"\r\n          ? this.CreateNotificationGroup(tempNotificationData)\r\n          : this.updateNotificationGroup(tempNotificationData);\r\n\r\n    } catch (error) {\r\n      console.log(\"Notificatioon Details Composite : Error in addUpdateNotificationGroup\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n      // let modNotificationData = this.fillDetails();\r\n      let modNotificationData = lodash.cloneDeep(this.state.modNotificationData);\r\n      //this.setState({ saveEnabled: false });\r\n      if (this.validateSave(modNotificationData)){\r\n        let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempNotificationData = lodash.cloneDeep(modNotificationData);\r\n      this.setState({ showAuthenticationLayout, tempNotificationData }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.addUpdateNotificationGroup();\r\n        }\r\n    });\r\n      } else this.setState({ saveEnabled: true });\r\n    }\r\n    catch (error) {\r\n      console.log(\"NotificationGroupComposite:Error occured on handleSave\", error);\r\n    }\r\n  };\r\n  setDefaultValues() {\r\n    this.setState({\r\n      modNotificationData: lodash.cloneDeep(emptyNotificationGroup),\r\n      notificationData: lodash.cloneDeep(emptyNotificationGroup)\r\n    })\r\n  }\r\n  CreateNotificationGroup(modNotificationData) {\r\n    try {\r\n\r\n      modNotificationData.Active=modNotificationData.Active === \"\" || modNotificationData.Active === undefined ? true : modNotificationData.Active;\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.NotificationGroupCode,\r\n          value: modNotificationData.GroupCode,\r\n        },\r\n        {\r\n          key: KeyCodes.NotificationGroupStatus,\r\n          value: modNotificationData.Active,\r\n        },\r\n        {\r\n          key: KeyCodes.NotificationGroupDesc,\r\n          value: modNotificationData.Description,\r\n        },\r\n      ];\r\n      let obj = {\r\n        keyDataCode: KeyCodes.NotificationGroupCode,\r\n        KeyCodes: keyCode,\r\n        // Entity: modNotificationData,\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"NotificationGroup_SuccessMsg\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"NotificationGroup_GroupCode\"],\r\n            keyValues: [modNotificationData.GroupCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.CreateNotificationGroup,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n      \r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnNotificationGroup\r\n              ),\r\n              notificationData: modNotificationData,\r\n              modNotificationData: modNotificationData\r\n            },\r\n            () => {\r\n              this.getNotificationGroupList();\r\n              // this.setDefaultValues();\r\n            }\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnNotificationGroup\r\n            ),\r\n          });\r\n          console.log(\"Error in NotificationGroup:\", result.ErrorList);\r\n        }\r\n        const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n        if (notification.messageType === \"success\") {\r\n          operationsVisibilty.add = true;\r\n          operationsVisibilty.delete = true;\r\n          this.setState({ isDetails: true, operationsVisibilty });\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      })\r\n        .catch((error) => {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnNotificationGroup\r\n            ),\r\n          });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in Createnotificationgroup\",error)\r\n    }\r\n  }\r\n  updateNotificationGroup(modNotificationData) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.NotificationGroupCode,\r\n          value: modNotificationData.GroupCode,\r\n        },\r\n        {\r\n          key: KeyCodes.NotificationGroupStatus,\r\n          value: modNotificationData.Active,\r\n        },\r\n        {\r\n          key: KeyCodes.NotificationGroupDesc,\r\n          value: modNotificationData.Description,\r\n        },\r\n      ];\r\n      let obj = {\r\n        keyDataCode: KeyCodes.NotificationGroupCode,\r\n        KeyCodes: keyCode,\r\n        // Entity: modNotificationData,\r\n      };\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"NotificationGroup_SuccessMsg\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"NotificationGroup_GroupCode\"],\r\n            keyValues: [modNotificationData.GroupCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.UpdateNotificationGroup,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n      \r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnNotificationGroup\r\n              ),\r\n            },\r\n            () => {\r\n              this.getNotificationGroupList();\r\n              // this.setDefaultValues();\r\n            }\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnNotificationGroup\r\n            ),\r\n          });\r\n        }\r\n        \r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      \r\n      })\r\n        .catch((error) => {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnNotificationGroup\r\n            ),\r\n          });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error  while updatenotificatiogroup\",error)\r\n    }\r\n  }\r\n  getNotificationGroupList() {\r\n    \r\n    try {\r\n      axios(\r\n        RestAPIs.GetNotificationGroup,\r\n        Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              data: result.EntityResult, isReadyToRender: true, saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnNotificationGroup\r\n              ), });\r\n          } else {\r\n            this.setState({ data: [], isReadyToRender: true });\r\n            console.log(\"Error in getNotificationGroupList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error while getting getNotificationGroupList:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error while getnotificationlist\",error)\r\n    }\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false, showDeleteAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  \r\n  getActionType() {\r\n    if (this.state.showDeleteAuthenticationLayout)\r\n     return functionGroups.remove;\r\n   else if (this.state.showAuthenticationLayout)\r\n     return (\r\n      this.state.notificationData.GroupCode === \"\"\r\n      ? functionGroups.add\r\n      : functionGroups.modify\r\n     )\r\n }\r\n\r\n getOperation () {\r\n  if (this.state.showDeleteAuthenticationLayout)\r\n    return this.handleDelete;\r\n  else if (this.state.showAuthenticationLayout)\r\n    return this.addUpdateNotificationGroup;\r\n  \r\n}\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showDeleteAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showDeleteAuthenticationLayout });\r\n      if (showDeleteAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"NotificationGroup Delete : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"buttonstyle\">\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n            onDelete={this.authenticateDelete}\r\n            onAdd={this.handleAdd}\r\n            shrVisible={false}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n          {this.state.isReadyToRender ? (\r\n            <ErrorBoundary>\r\n              <NotificationGroupSummaryPageComposite\r\n              tableData={this.state.data.Table}\r\n              pageSize={\r\n                this.props.userDetails.EntityResult.PageAttibutes\r\n                  .WebPortalListPageSize\r\n              }\r\n              terminalsToShow={\r\n                this.props.userDetails.EntityResult.PageAttibutes\r\n                  .NoOfTerminalsToShow\r\n              }\r\n              onRowClick={this.handleRowClick}\r\n              modNotificationData={this.state.modNotificationData}\r\n              notificationData={this.state.notificationData}\r\n               isDetails={this.state.isDetails}\r\n              handleSave={this.handleSave}\r\n              onFieldChange={this.handleChange}\r\n              handleReset={this.handleReset}\r\n              validationErrors={this.state.validationErrors}\r\n              saveEnabled={this.state.saveEnabled}\r\n              ></NotificationGroupSummaryPageComposite>\r\n          </ErrorBoundary>\r\n        ) : (\r\n          <>\r\n              <LoadingPage message=\"Loading\"></LoadingPage>\r\n          </>\r\n        )}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout || this.state.showDeleteAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={this.getActionType()}\r\n            functionGroup={fnNotificationGroup}\r\n            handleOperation={this.getOperation()}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n    \r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      userDetails: state.getUserDetails.userDetails,\r\n      tokenDetails: state.getUserDetails.TokenAuth,\r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps)(NotificationGroupComposite);\r\n  \r\n  NotificationGroupComposite.propTypes = {\r\n    activeItem: PropTypes.object,\r\n  };\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","NotificationGroupSummaryPageComposite","tableData","pageSize","onRowClick","modNotificationData","handleSave","onActiveStatusChange","handleReset","notificationData","saveEnabled","useTranslation","GroupCode","Active","text","Description","DataTable","search","onCellClick","ActionBar","Column","field","sortable","header","renderer","cellData","displayValues","Array","isArray","Pagination","NotificationGroupComposite","isDetails","isReadyToRender","isDetailsModified","selectedRow","emptyNotificationGroup","notificationGroupValidationDef","showAuthenticationLayout","showDeleteAuthenticationLayout","tempNotificationData","handleAdd","setDefaultValues","handleRowClick","FunctionsList","functionGroups","fnNotificationGroup","rowData","keys","forEach","handleChange","handleDelete","handleAuthenticationClose","keyCode","KeyCodes","obj","keyDataCode","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","getNotificationGroupList","toast","NotifyEvent","notificationMessage","autoClose","addUpdateNotificationGroup","CreateNotificationGroup","updateNotificationGroup","validateSave","IsWebPortalUser","authenticateDelete","IsArchived","modify","getActionType","remove","getOperation","ShareholderList","Table","PageAttibutes","WebPortalListPageSize","terminalsToShow","NoOfTerminalsToShow","LoadingPage","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","UserName","view","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","transportationType","shareholderCode","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","shipmentCode","orderCode","receiptCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","entityCode","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","bayCode","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","TransactionType","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks"],"sourceRoot":""}