{"version":3,"file":"static/js/1367.11fac550.chunk.js","mappings":"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","sources":["Components/UIBase/Details/MarineTransloadingDetails.jsx","Components/Composite/Details/MarineTransloadingDetailsComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { Icon } from \"@scuf/common\";\r\nMarineTransloadingDetails.propTypes = {\r\n  marineTransloading: PropTypes.object.isRequired,\r\n  marineReceipt: PropTypes.object.isRequired,\r\n  selectedCompRow: PropTypes.array.isRequired,\r\n  marineTransloadingAssociatedShipmentsColumns: PropTypes.array.isRequired,\r\n  marineTransloadingDetailsColumns: PropTypes.array.isRequired,\r\n  dsCompartmentsBaseProduct: PropTypes.array.isRequired,\r\n  dsTransloadingShipments: PropTypes.array.isRequired,\r\n  dsTransloadingShipmentLoadingDetails: PropTypes.array.isRequired,\r\n  handleRowSelectionChange: PropTypes.func.isRequired,\r\n  onRowClick: PropTypes.func.isRequired,\r\n  setCurrentList: PropTypes.func.isRequired,\r\n  isSelect: PropTypes.number.isRequired,\r\n  expandedRows: PropTypes.array.isRequired,\r\n  toggleExpand: PropTypes.func.isRequired,\r\n\r\n  compartmentDetailsPageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nexport function MarineTransloadingDetails({\r\n  marineTransloading,\r\n  marineReceipt,\r\n  dsCompartmentsBaseProduct,\r\n  dsTransloadingShipments,\r\n  dsTransloadingShipmentLoadingDetails,\r\n  marineTransloadingAssociatedShipmentsColumns,\r\n  marineTransloadingDetailsColumns,\r\n  handleRowSelectionChange,\r\n  onRowClick,\r\n  selectedCompRow,\r\n  setCurrentList,\r\n  isSelect,\r\n  expandedRows,\r\n  toggleExpand,\r\n  compartmentDetailsPageSize,\r\n}) {\r\n  const [t] = useTranslation();\r\n  const expanderTemplate = (data) => {\r\n    const open =\r\n      expandedRows.findIndex((x) => x.compSeqNo === data.rowData.compSeqNo) >= 0\r\n        ? true\r\n        : false;\r\n    return (\r\n      <div\r\n        onClick={() => toggleExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"slidercontrols-minus\" : \"ellipsis-horizontal\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  const convertNumberWithUOM = (quantityString) => {\r\n    if (quantityString === null || quantityString === undefined) {\r\n      return \"\";\r\n    }\r\n    const quantityList = quantityString.split(\" \", 2);\r\n    if (quantityList.length !== 2) {\r\n      return \"\";\r\n    }\r\n    if (quantityList[0] === \"\") {\r\n      return \"\";\r\n    }\r\n    return parseFloat(quantityList[0]).toLocaleString() + \" \" + quantityList[1];\r\n  };\r\n  const rowExpansionTemplate = (data) => {\r\n    let CompData = [];\r\n    CompData.push(data);\r\n    return (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable data={CompData}>\r\n          <DataTable.Column\r\n            className=\"starttotalizer\"\r\n            key=\"starttotalizer\"\r\n            field=\"starttotalizer\"\r\n            header={t(\"StartTotalizer\")}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"endtotalizer\"\r\n            key=\"endtotalizer\"\r\n            field=\"endtotalizer\"\r\n            header={t(\"EndTotalizer\")}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"productdensity\"\r\n            key=\"productdensity\"\r\n            field=\"productdensity\"\r\n            header={t(\"Density\")}\r\n            editable={false}\r\n            renderer={(cellData) => convertNumberWithUOM(cellData.value)}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"temperature\"\r\n            key=\"temperature\"\r\n            field=\"temperature\"\r\n            header={t(\"Temperature\")}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"pressure\"\r\n            key=\"pressure\"\r\n            field=\"pressure\"\r\n            header={t(\"Pressure\")}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n        </DataTable>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"BayAllocationReceiptSearch_ReceiptCode\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>{marineReceipt.ReceiptCode}</label>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"BayAllocationReceiptSearch_ReceiptStatus\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>{marineReceipt.ReceiptStatus}</label>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-2\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"viewTransloading_NoOfComps\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>{marineTransloading.totalNoOfTransWagons}</label>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-2\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"viewTransloading_NoOfBps\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>{marineTransloading.NoOfProducts}</label>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"viewTransloading_TotalReceiptQty\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>\r\n                {marineTransloading.receiptPlannedQty.toLocaleString() +\r\n                  \" \" +\r\n                  marineTransloading.PlanQuantityUOM}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"viewTransloading_ReceiptPlannedQty\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>\r\n                {marineTransloading.totalPlannedQtyForTransloadingWagons.toLocaleString() +\r\n                  \" \" +\r\n                  marineTransloading.PlanQuantityUOM}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"viewTransloading_ReceiptUnloadedQty\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>\r\n                {marineTransloading.totalUnloadedQtyForTransloadingWagons.toLocaleString() +\r\n                  \" \" +\r\n                  marineTransloading.UnloadedQuantityUOM}\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\" style={{ alignItems: \"stretch\" }}>\r\n            <div\r\n              className=\"col-12 col-md-6 col-lg-2\"\r\n              style={{ border: \"1px solid #c8c8c8\", minHeight: \"400px\" }}\r\n            >\r\n              <div>\r\n                <label className=\"TransloadingheaderLabel\">\r\n                  {t(\"viewTransloading_Compartments\")}\r\n                </label>\r\n              </div>\r\n              <ul>\r\n                {marineTransloading.lstCompartmentList.map((item, i) => {\r\n                  return (\r\n                    <li\r\n                      index={i}\r\n                      className={isSelect === i ? \"activeted\" : \"\"}\r\n                      onClick={(e) => setCurrentList(e, item.CompartmentCode)}\r\n                      key={item.CompartmentCode}\r\n                    >\r\n                      {item.compartBP}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-10\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 col-lg-10\">\r\n                  <br></br>\r\n                  <br></br>\r\n                  <label className=\"TransloadingheaderLabel\">\r\n                    {t(\"Marine_ReceiptCompDetail_CompartmentCode\")}\r\n                  </label>\r\n                  <label>:</label>\r\n                  <label> </label>\r\n                  <label className=\"TransloadingheaderLabel\">\r\n                    {marineTransloading.selectCompartment.CompartmentCode}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 col-lg-3\">\r\n                  <b>\r\n                    <label>{t(\"viewTransloading_BPCode\")}</label>\r\n                  </b>\r\n                  <label>:</label>\r\n                  <label> </label>\r\n                  <label>\r\n                    {marineTransloading.selectCompartment.CompartmentProduct}\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-3\">\r\n                  <b>\r\n                    <label>\r\n                      {t(\"LocalTransactionsMapping_PlannedQuantity\")}\r\n                    </label>\r\n                  </b>\r\n                  <label>:</label>\r\n                  <label> </label>\r\n                  <label>\r\n                    {marineTransloading.selectCompartment.PlannedQuantity.toLocaleString() +\r\n                      \" \" +\r\n                      marineTransloading.selectCompartment.PlanQuantityUOM}\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-3\">\r\n                  <b>\r\n                    <label>{t(\"UnLoadingInfo_UnloadQuantity\")}</label>\r\n                  </b>\r\n                  <label>:</label>\r\n                  <label> </label>\r\n                  <label>\r\n                    {marineTransloading.selectCompartment.UnloadedQuantity.toLocaleString() +\r\n                      \" \" +\r\n                      marineTransloading.selectCompartment.UnloadedQuantityUOM}\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-3\">\r\n                  <b>\r\n                    <label>{t(\"UserAdmin_Status\")}</label>\r\n                  </b>\r\n                  <label>:</label>\r\n                  <label> </label>\r\n                  <label>\r\n                    {\r\n                      marineTransloading.selectCompartment\r\n                        .ReceiptCompartmentStatus\r\n                    }\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <br></br>\r\n              <div\r\n                className=\"row\"\r\n                style={{\r\n                  display: marineTransloading.showShipment ? \"block\" : \"none\",\r\n                }}\r\n              >\r\n                <label className=\"TransloadingheaderLabel\">\r\n                  {t(\"viewTransloading_AssocShips\")}\r\n                </label>\r\n                <label>:</label>\r\n                <label> </label>\r\n              </div>\r\n              <div\r\n                className=\"row\"\r\n                style={{\r\n                  display: marineTransloading.showShipment ? \"block\" : \"none\",\r\n                }}\r\n              >\r\n                <DataTable\r\n                  data={dsTransloadingShipments}\r\n                  selectionMode=\"multiple\"\r\n                  onCellClick={(data) =>\r\n                    onRowClick !== undefined ? onRowClick(data.rowData) : {}\r\n                  }\r\n                  // onClick={(e) => setTransloadingShipmentLoadingDetailsList(e, item.shipmentCode)}\r\n                  onSelectionChange={handleRowSelectionChange}\r\n                >\r\n                  {dsTransloadingShipments !== null &&\r\n                  dsTransloadingShipments.length > 0\r\n                    ? marineTransloadingAssociatedShipmentsColumns.map(\r\n                        function (key) {\r\n                          return (\r\n                            <DataTable.Column\r\n                              className=\"compColHeight\"\r\n                              key={key.displayName}\r\n                              field={key.field}\r\n                              header={t(key.displayName)}\r\n                              editable={false}\r\n                              rowHeader={false}\r\n                              editFieldType=\"text\"\r\n                            ></DataTable.Column>\r\n                          );\r\n                        }\r\n                      )\r\n                    : \"\"}\r\n                </DataTable>\r\n              </div>\r\n              <br></br>\r\n              <div\r\n                className=\"row\"\r\n                style={{\r\n                  display: marineTransloading.showLoadingDetails\r\n                    ? \"block\"\r\n                    : \"none\",\r\n                }}\r\n              >\r\n                <label className=\"TransloadingheaderLabel\">\r\n                  {t(\"viewTransloading_ShipLoadingDetails\")}\r\n                </label>\r\n                <label>:</label>\r\n                <label>{\"\"}</label>\r\n              </div>\r\n              <div\r\n                className=\"row\"\r\n                style={{\r\n                  display: marineTransloading.showLoadingDetails\r\n                    ? \"block\"\r\n                    : \"none\",\r\n                }}\r\n              >\r\n                <DataTable\r\n                  data={dsTransloadingShipmentLoadingDetails}\r\n                  selectionMode=\"multiple\"\r\n                  rowExpansionTemplate={rowExpansionTemplate}\r\n                  expandedRows={expandedRows}\r\n                >\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"trailercode\"\r\n                    field=\"trailercode\"\r\n                    header={t(\"Trailer\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"compSeqNo\"\r\n                    field=\"compSeqNo\"\r\n                    header={t(\"ViewMarineLoadingDetails_CompartmentSeqNo\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"compartmentcode\"\r\n                    field=\"compartmentcode\"\r\n                    header={t(\"ViewShipment_CompartmentCode\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"productcode\"\r\n                    field=\"productcode\"\r\n                    header={t(\"UnloadingDetails_BaseProductCode\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"bcuCode\"\r\n                    field=\"bcuCode\"\r\n                    header={t(\"BCU_BCU\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"meterCode\"\r\n                    field=\"meterCode\"\r\n                    header={t(\"Meter_Meter\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"grossquantity\"\r\n                    field=\"grossquantity\"\r\n                    header={t(\"GrossQuantity\")}\r\n                    editable={false}\r\n                    renderer={(cellData) =>\r\n                      convertNumberWithUOM(cellData.value)\r\n                    }\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"netquantity\"\r\n                    field=\"netquantity\"\r\n                    header={t(\"NetQuantity\")}\r\n                    editable={false}\r\n                    renderer={(cellData) =>\r\n                      convertNumberWithUOM(cellData.value)\r\n                    }\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"starttime\"\r\n                    field=\"starttime\"\r\n                    header={t(\"StartTime\")}\r\n                    editable={false}\r\n                    renderer={(cellData) => {\r\n                      return (\r\n                        new Date(cellData.value).toLocaleDateString() +\r\n                        \" \" +\r\n                        new Date(cellData.value).toLocaleTimeString()\r\n                      );\r\n                    }}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"endtime\"\r\n                    field=\"endtime\"\r\n                    header={t(\"EndTime\")}\r\n                    editable={false}\r\n                    renderer={(cellData) => {\r\n                      return (\r\n                        new Date(cellData.value).toLocaleDateString() +\r\n                        \" \" +\r\n                        new Date(cellData.value).toLocaleTimeString()\r\n                      );\r\n                    }}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    renderer={expanderTemplate}\r\n                  />\r\n                </DataTable>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { MarineTransloadingDetails } from \"../../UIBase/Details/MarineTransloadingDetails\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport {\r\n  emptyMarineTransloading,\r\n  emptyMarineReceipt,\r\n} from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\n\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport {\r\n  marineTransloadingDetailsColumns,\r\n  marineTransloadingAssociatedShipmentsColumns,\r\n} from \"../../../JS/DetailsTableValidationDef\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { getKeyByValue } from \"../../../JS/Utilities\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button } from \"@scuf/common\";\r\nclass MarineTransloadingDetailsComposite extends Component {\r\n  state = {\r\n    marineReceipt: lodash.cloneDeep(emptyMarineReceipt),\r\n    marineTransloading: lodash.cloneDeep(emptyMarineTransloading),\r\n    modMarineReceipt: {},\r\n    marineTransloadingAssociatedShipmentsColumns: lodash.cloneDeep(\r\n      marineTransloadingAssociatedShipmentsColumns\r\n    ),\r\n    marineTransloadingDetailsColumns: lodash.cloneDeep(\r\n      marineTransloadingDetailsColumns\r\n    ),\r\n    isReadyToRender: false,\r\n    listOptions: {\r\n      shareholders: this.getShareholders(),\r\n      terminalCodes: this.props.terminalCodes,\r\n    },\r\n    dsCompartmentsBaseProduct: [],\r\n    dsTransloadingShipments: [],\r\n    dsTransloadingShipmentLoadingDetails: [],\r\n    saveEnabled: false,\r\n    selectedCompRow: [],\r\n    selectedAll: false,\r\n    isSelect: -1,\r\n    selectCompartmentCode: \"\",\r\n    expandedRows: [],\r\n  };\r\n  handleRowSelectionChange = (e) => {\r\n    this.setState({ selectedCompRow: e });\r\n  };\r\n  toggleExpand = (data, open) => {\r\n    let expandedRows = this.state.expandedRows;\r\n    let expandedRowIndex = expandedRows.findIndex(\r\n      (item) => item.compSeqNo === data.compSeqNo\r\n    );\r\n    if (open) {\r\n      expandedRows.splice(expandedRowIndex, 1);\r\n    } else {\r\n      expandedRows.push(data);\r\n    }\r\n    this.setState({ expandedRows });\r\n  };\r\n\r\n  handleRowClick = (e) => {\r\n    try {\r\n      var dsCompartmentsBaseProduct = lodash.cloneDeep(\r\n        this.state.dsCompartmentsBaseProduct\r\n      );\r\n      let selectCompartmentCode = lodash.cloneDeep(\r\n        this.state.selectCompartmentCode\r\n      );\r\n      if (e.shipmentCode != null || e.shipmentCode.length > 0) {\r\n        dsCompartmentsBaseProduct.forEach((element) => {\r\n          if (selectCompartmentCode === element.CompartmentCode) {\r\n            this.getShipmentLoadingDetails(\r\n              e.shipmentCode,\r\n              element.ReceiptCode,\r\n              element.TrailerCode,\r\n              element.CompartmentCode\r\n            );\r\n          }\r\n        });\r\n      }\r\n      this.setState({\r\n        dsCompartmentsBaseProduct: dsCompartmentsBaseProduct,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"CarrierCompanyComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n\r\n  setCurrentList = (e, CompartmentCode) => {\r\n    try {\r\n      var marineTransloading = lodash.cloneDeep(this.state.marineTransloading);\r\n      var marineReceipt = lodash.cloneDeep(this.state.marineReceipt);\r\n      // marineTransloading.selectCompartment = {};\r\n      var selectCompartmentCode = lodash.cloneDeep(\r\n        this.state.selectCompartmentCode\r\n      );\r\n      if (selectCompartmentCode !== CompartmentCode) {\r\n        marineTransloading.showLoadingDetails = false;\r\n\r\n        marineReceipt.RailMarineReceiptCompartmentPlanList.forEach(\r\n          (element) => {\r\n            if (CompartmentCode === element.CompartmentCode) {\r\n              marineTransloading.selectCompartment.CompartmentCode =\r\n                element.CompartmentCode;\r\n              marineTransloading.selectCompartment.CompartmentProduct =\r\n                this.GetBaseProductForCompartment(\r\n                  element.TrailerCode,\r\n                  element.CompartmentCode\r\n                );\r\n              marineTransloading.selectCompartment.PlanQuantityUOM =\r\n                element.PlanQuantityUOM;\r\n              marineTransloading.selectCompartment.PlannedQuantity =\r\n                element.PlannedQuantity.toLocaleString();\r\n              if (\r\n                element.UnloadedQuantityUOM !== undefined &&\r\n                element.UnloadedQuantityUOM !== null\r\n              )\r\n                marineTransloading.selectCompartment.UnloadedQuantityUOM =\r\n                  element.UnloadedQuantityUOM;\r\n              else\r\n                marineTransloading.selectCompartment.UnloadedQuantityUOM = \"\";\r\n              if (\r\n                element.UnloadedQuantity !== undefined &&\r\n                element.UnloadedQuantity !== null\r\n              )\r\n                marineTransloading.selectCompartment.UnloadedQuantity =\r\n                  element.UnloadedQuantity.toLocaleString();\r\n              else marineTransloading.selectCompartment.UnloadedQuantity = \"0\";\r\n              marineTransloading.selectCompartment.ReceiptCompartmentStatus =\r\n                getKeyByValue(\r\n                  Constants.ReceiptCompartmentStatus,\r\n                  element.ReceiptCompartmentStatus\r\n                );\r\n              this.setState({\r\n                isSelect: Number(e.currentTarget.getAttribute(\"index\")),\r\n                marineTransloading,\r\n                selectCompartmentCode: CompartmentCode,\r\n              });\r\n              this.getReceiptShipments(\r\n                element.TrailerCode,\r\n                element.ReceiptCode,\r\n                element.CompartmentCode,\r\n                marineTransloading\r\n              );\r\n            }\r\n          }\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineTransloadingDetailsComposite:Error occured on setCurrentList\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  getReceiptShipments = (\r\n    TrailerCode,\r\n    ReceiptCode,\r\n    CompartmentCode,\r\n    marineTransloading\r\n  ) => {\r\n    try {\r\n      var dsTransloadingShipments = [];\r\n      this.setState({\r\n        dsTransloadingShipments: dsTransloadingShipments,\r\n        marineTransloading,\r\n      });\r\n      let obj = {\r\n        trailerCode: TrailerCode,\r\n        receiptCode: ReceiptCode,\r\n        compartmentCode: CompartmentCode,\r\n        transportationType: this.getTransportationType(),\r\n      };\r\n      axios(\r\n        RestAPIs.GetTransloadingShipments,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let dsTransloadingShipmentTable = result.EntityResult.Table;\r\n\r\n            if (\r\n              dsTransloadingShipmentTable != null &&\r\n              dsTransloadingShipmentTable.length > 0\r\n            ) {\r\n              marineTransloading.showShipment = true;\r\n              dsTransloadingShipmentTable.forEach((element) => {\r\n                var loadedQuantity;\r\n                if (\r\n                  element.LoadedQty !== null &&\r\n                  element.LoadedQty !== undefined\r\n                ) {\r\n                  loadedQuantity =\r\n                    element.LoadedQty.toLocaleString() +\r\n                    \" \" +\r\n                    element.LoadedQuantityUOM;\r\n                }\r\n                var Quantity;\r\n                if (\r\n                  element.quantity !== null &&\r\n                  element.quantity !== undefined\r\n                ) {\r\n                  Quantity =\r\n                    element.quantity.toLocaleString() +\r\n                    \" \" +\r\n                    element.QuantityUOM;\r\n                }\r\n                dsTransloadingShipments.push({\r\n                  driver: element.driver,\r\n                  id: element.id,\r\n                  id1: element.id1,\r\n                  LoadedQty: loadedQuantity,\r\n                  LoadedQuantityUOM: element.LoadedQuantityUOM,\r\n                  quantity: Quantity,\r\n                  QuantityUOM: element.QuantityUOM,\r\n                  shipmentCode: element.shipmentCode,\r\n                  shipmentStatus: element.shipmentStatus,\r\n                  vehicle: element.vehicle,\r\n                });\r\n              });\r\n              this.setState({\r\n                dsTransloadingShipments: dsTransloadingShipments,\r\n                marineTransloading: marineTransloading,\r\n                isReadyToRender: true,\r\n              });\r\n            }\r\n          } else {\r\n            marineTransloading.showShipment = false;\r\n            this.setState({\r\n              dsTransloadingShipments: dsTransloadingShipments,\r\n              marineTransloading: marineTransloading,\r\n              isReadyToRender: true,\r\n            });\r\n            console.log(\"Error in GetTransloadingShipments:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\r\n            \"Error while geting GetTransloadingShipments List:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"GetTransloadingShipments:Error occured on GetTransloadingShipments\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  getShipmentLoadingDetails(\r\n    ShipmentCode,\r\n    ReceiptCode,\r\n    TrailerCode,\r\n    CompartmentCode\r\n  ) {\r\n    try {\r\n      var marineTransloading = lodash.cloneDeep(this.state.marineTransloading);\r\n      var dsTransloadingShipments = lodash.cloneDeep(\r\n        this.state.dsTransloadingShipments\r\n      );\r\n      var dsTransloadingShipmentLoadingDetails = lodash.cloneDeep(\r\n        this.state.dsTransloadingShipmentLoadingDetails\r\n      );\r\n\r\n      this.setState({\r\n        dsTransloadingShipmentLoadingDetails:\r\n          dsTransloadingShipmentLoadingDetails,\r\n        marineTransloading: marineTransloading,\r\n        dsTransloadingShipments: dsTransloadingShipments,\r\n      });\r\n      let obj = {\r\n        shipmentCode: ShipmentCode,\r\n        trailerCode: TrailerCode,\r\n        receiptCode: ReceiptCode,\r\n        compartmentCode: CompartmentCode,\r\n        transportationType: this.getTransportationType(),\r\n      };\r\n      axios(\r\n        RestAPIs.GetShipmentLoadingDetails,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            dsTransloadingShipmentLoadingDetails = lodash.cloneDeep(\r\n              result.EntityResult.Table\r\n            );\r\n            if (\r\n              dsTransloadingShipmentLoadingDetails != null &&\r\n              dsTransloadingShipmentLoadingDetails.length > 0\r\n            ) {\r\n              marineTransloading.showLoadingDetails = true;\r\n              this.setState({\r\n                dsTransloadingShipmentLoadingDetails:\r\n                  dsTransloadingShipmentLoadingDetails,\r\n                marineTransloading: marineTransloading,\r\n                isReadyToRender: true,\r\n              });\r\n            }\r\n          } else {\r\n            marineTransloading.showLoadingDetails = false;\r\n            this.setState({\r\n              dsTransloadingShipmentLoadingDetails:\r\n                dsTransloadingShipmentLoadingDetails,\r\n              marineTransloading: marineTransloading,\r\n              isReadyToRender: true,\r\n            });\r\n            console.log(\r\n              \"Error in GetShipmentLoadingDetails:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\r\n            \"Error while geting GetShipmentLoadingDetails List:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"GetShipmentLoadingDetails:Error occured on GetShipmentLoadingDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  //\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.marineReceipt.ReceiptCode !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined\r\n      )\r\n        this.GetTransloadingReceiptCompartments(nextProps.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineTransloadingDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  //\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.GetCompartmentsBaseProducts(this.props.selectedRow.ReceiptCode);\r\n      //this.getMarineReceipt(this.props.selectedRow.ReceiptCode);\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineTransloadingDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getShareholders() {\r\n    return Utilities.transferListtoOptions(\r\n      this.props.userDetails.EntityResult.ShareholderList\r\n    );\r\n  }\r\n\r\n  GetCompartmentsBaseProducts(ReceiptCode) {\r\n    var transportationType = this.getTransportationType();\r\n    emptyMarineTransloading.TransportationType = transportationType;\r\n    var listOptions = lodash.cloneDeep(this.state.listOptions);\r\n    emptyMarineTransloading.QuantityUOM =\r\n      this.props.userDetails.EntityResult.PageAttibutes.DefaultUOMS.QuantityUOM;\r\n    emptyMarineTransloading.TerminalCodes =\r\n      this.props.terminalCodes.length === 1\r\n        ? [...this.props.terminalCodes]\r\n        : [];\r\n    if (ReceiptCode === undefined) {\r\n      this.setState({\r\n        marineTransloading: { ...emptyMarineTransloading },\r\n        modmarineTransloading: { ...emptyMarineTransloading },\r\n        listOptions,\r\n        isReadyToRender: true,\r\n      });\r\n      return;\r\n    }\r\n    axios(\r\n      RestAPIs.GetCompartmentsBaseProducts +\r\n        \"?ReceiptCode=\" +\r\n        ReceiptCode +\r\n        \"&TransportationType=MARINE\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var marineTransloading = lodash.cloneDeep(\r\n            this.state.marineTransloading\r\n          );\r\n          var dsCompartmentsBaseProduct = lodash.cloneDeep(\r\n            result.EntityResult.Table\r\n          );\r\n          if (\r\n            Array.isArray(dsCompartmentsBaseProduct) &&\r\n            dsCompartmentsBaseProduct.length > 0\r\n          ) {\r\n            dsCompartmentsBaseProduct.forEach((element) => {\r\n              if (element.IsTransloading) {\r\n                if (marineTransloading.lstCompartmentBPs.length === 0)\r\n                  marineTransloading.lstCompartmentBPs.push(\r\n                    element.BaseProductCode\r\n                  );\r\n                if (\r\n                  marineTransloading.lstCompartmentBPs.filter((com, cindex) => {\r\n                    return com.BaseProductCode !== element.BaseProductCode;\r\n                  }).length === 0\r\n                ) {\r\n                  marineTransloading.lstCompartmentBPs.push(\r\n                    element.BaseProductCode\r\n                  );\r\n                }\r\n              }\r\n            });\r\n            \r\n            let ltCompartmentBPs = [];\r\n            dsCompartmentsBaseProduct.forEach((dr) => {\r\n              if (dr.IsTransloading) {\r\n                let i = ltCompartmentBPs.findIndex(el => \r\n                  el === dr.BaseProductCode\r\n                );\r\n\r\n                if (i < 0) {\r\n                  ltCompartmentBPs.push(dr.BaseProductCode);\r\n                }\r\n              }\r\n            });\r\n\r\n            marineTransloading.NoOfProducts = ltCompartmentBPs.length;\r\n\r\n            marineTransloading.PlanQuantityUOM =\r\n              dsCompartmentsBaseProduct[0].PlanQuantityUOM;\r\n            if (\r\n              dsCompartmentsBaseProduct[0].UnloadedQuantityUOM !== undefined &&\r\n              dsCompartmentsBaseProduct[0].UnloadedQuantityUOM !== null\r\n            )\r\n              marineTransloading.UnloadedQuantityUOM =\r\n                dsCompartmentsBaseProduct[0].UnloadedQuantityUOM;\r\n            else\r\n              marineTransloading.UnloadedQuantityUOM =\r\n                dsCompartmentsBaseProduct[0].PlanQuantityUOM;\r\n          }\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            marineTransloading: lodash.cloneDeep(marineTransloading),\r\n            dsCompartmentsBaseProduct: lodash.cloneDeep(\r\n              dsCompartmentsBaseProduct\r\n            ),\r\n          });\r\n          this.getMarineReceipt(ReceiptCode);\r\n        } else {\r\n          this.setState({\r\n            marineTransloading: lodash.cloneDeep(emptyMarineTransloading),\r\n            modmarineTransloading: lodash.cloneDeep(emptyMarineTransloading),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\r\n            \"Error in GetCompartmentsBaseProducts:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting GetCompartmentsBaseProducts:\", error);\r\n        //throw error;\r\n      });\r\n  }\r\n\r\n  getMarineReceipt(ReceiptCode) {\r\n    var transportationType = this.getTransportationType();\r\n    emptyMarineTransloading.TransportationType = transportationType;\r\n    emptyMarineTransloading.Active = true;\r\n    emptyMarineTransloading.QuantityUOM =\r\n      this.props.userDetails.EntityResult.PageAttibutes.DefaultUOMS.QuantityUOM;\r\n    emptyMarineTransloading.TerminalCodes =\r\n      this.props.terminalCodes.length === 1\r\n        ? [...this.props.terminalCodes]\r\n        : [];\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineReceiptCode,\r\n        value: ReceiptCode,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: transportationType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetMarineReceipt,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var marineTransloading = lodash.cloneDeep(\r\n            this.state.marineTransloading\r\n          );\r\n          let marineReceipt = result.EntityResult;\r\n          if (\r\n            this.props.selectedRow != null &&\r\n            this.props.selectedRow != undefined\r\n          ) {\r\n            marineReceipt.ReceiptStatus = this.props.selectedRow.ReceiptStatus;\r\n          }\r\n\r\n          if (\r\n            marineReceipt != null &&\r\n            marineReceipt.RailMarineReceiptCompartmentPlanList != null\r\n          ) {\r\n            marineReceipt.RailMarineReceiptCompartmentPlanList.forEach((rc) => {\r\n              if (\r\n                rc.IsTransloading !== null &&\r\n                rc.IsTransloading !== \"\" &&\r\n                rc.IsTransloading\r\n              ) {\r\n                var compartBP =\r\n                  rc.CompartmentCode +\r\n                  \"(\" +\r\n                  this.GetBaseProductForCompartment(\r\n                    rc.TrailerCode,\r\n                    rc.CompartmentCode\r\n                  ) +\r\n                  \")\";\r\n                marineTransloading.lstCompartmentList.push({\r\n                  compartBP: compartBP,\r\n                  CompartmentCode: rc.CompartmentCode,\r\n                });\r\n\r\n                marineTransloading.totalNoOfTransWagons += 1;\r\n                marineTransloading.totalPlannedQtyForTransloadingWagons +=\r\n                  rc.PlannedQuantity;\r\n                if (\r\n                  rc.UnloadedQuantity !== undefined &&\r\n                  rc.UnloadedQuantity !== null\r\n                ) {\r\n                  marineTransloading.totalUnloadedQtyForTransloadingWagons +=\r\n                    rc.UnloadedQuantity;\r\n                }\r\n              }\r\n              marineTransloading.receiptPlannedQty += rc.PlannedQuantity;\r\n            });\r\n          }\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            marineReceipt: lodash.cloneDeep(result.EntityResult),\r\n            marineTransloading: lodash.cloneDeep(marineTransloading),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            marineReceipt: lodash.cloneDeep(emptyMarineTransloading),\r\n            modMarineReceipt: lodash.cloneDeep(emptyMarineTransloading),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in getMarineReceipt:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting marineReceipt:\", error);\r\n        //throw error;\r\n      });\r\n  }\r\n\r\n  GetBaseProductForCompartment(trailerCode, Compcode) {\r\n    let bp = \"\";\r\n    var dsCompartmentsBaseProduct = lodash.cloneDeep(\r\n      this.state.dsCompartmentsBaseProduct\r\n    );\r\n    if (\r\n      Array.isArray(dsCompartmentsBaseProduct) &&\r\n      dsCompartmentsBaseProduct.length > 0\r\n    ) {\r\n      var dataRows = dsCompartmentsBaseProduct.filter((com, cindex) => {\r\n        return (\r\n          com.TrailerCode === trailerCode && com.CompartmentCode === Compcode\r\n        );\r\n      });\r\n      if (dataRows !== undefined && dataRows.length > 0) {\r\n        bp = dataRows[0].BaseProductCode;\r\n      }\r\n    }\r\n    return bp;\r\n  }\r\n\r\n  getTransportationType() {\r\n    var transportationType = Constants.TransportationType.MARINE;\r\n    const { genericProps } = this.props;\r\n    if (\r\n      genericProps !== undefined &&\r\n      genericProps.transportationType !== undefined\r\n    ) {\r\n      transportationType = genericProps.transportationType;\r\n    }\r\n    return transportationType;\r\n  }\r\n  handleReset = () => {\r\n    try {\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineTransloadingDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader newEntityName=\"viewTransloading_PageTitle\"></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <MarineTransloadingDetails\r\n            marineReceipt={this.state.marineReceipt}\r\n            marineTransloading={this.state.marineTransloading}\r\n            selectedCompRow={this.state.selectedCompRow}\r\n            dsCompartmentsBaseProduct={this.state.dsCompartmentsBaseProduct}\r\n            dsTransloadingShipmentLoadingDetails={\r\n              this.state.dsTransloadingShipmentLoadingDetails\r\n            }\r\n            dsTransloadingShipments={this.state.dsTransloadingShipments}\r\n            marineTransloadingAssociatedShipmentsColumns={\r\n              this.state.marineTransloadingAssociatedShipmentsColumns\r\n            }\r\n            marineTransloadingDetailsColumns={\r\n              this.state.marineTransloadingDetailsColumns\r\n            }\r\n            handleRowSelectionChange={this.handleRowSelectionChange}\r\n            onRowClick={this.handleRowClick}\r\n            setCurrentList={this.setCurrentList}\r\n            isSelect={this.state.isSelect}\r\n            expandedRows={this.state.expandedRows}\r\n            toggleExpand={this.toggleExpand}\r\n          ></MarineTransloadingDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <div className=\"row\">\r\n                <div className=\"col col-2\">\r\n                  <Button\r\n                    className=\"backButton\"\r\n                    onClick={this.props.onBack}\r\n                    content={t(\"Back\")}\r\n                  ></Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </TranslationConsumer>\r\n        </ErrorBoundary>\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nconst mapReceiptToProps = (receipt) => {\r\n  return {\r\n    userActions: bindActionCreators(getUserDetails, receipt),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapReceiptToProps\r\n)(MarineTransloadingDetailsComposite);\r\n\r\nMarineTransloadingDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  genericProps: PropTypes.object.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;"],"names":["MarineTransloadingDetails","_ref","marineTransloading","marineReceipt","dsCompartmentsBaseProduct","dsTransloadingShipments","dsTransloadingShipmentLoadingDetails","marineTransloadingAssociatedShipmentsColumns","marineTransloadingDetailsColumns","handleRowSelectionChange","onRowClick","selectedCompRow","setCurrentList","isSelect","expandedRows","toggleExpand","compartmentDetailsPageSize","t","useTranslation","expanderTemplate","data","open","findIndex","x","compSeqNo","rowData","_jsx","onClick","className","children","Icon","root","name","convertNumberWithUOM","quantityString","undefined","quantityList","split","length","parseFloat","toLocaleString","rowExpansionTemplate","CompData","push","_jsxs","DataTable","Column","field","header","editable","renderer","cellData","value","TranslationConsumer","ReceiptCode","ReceiptStatus","totalNoOfTransWagons","NoOfProducts","receiptPlannedQty","PlanQuantityUOM","totalPlannedQtyForTransloadingWagons","totalUnloadedQtyForTransloadingWagons","UnloadedQuantityUOM","style","alignItems","border","minHeight","lstCompartmentList","map","item","i","index","e","CompartmentCode","compartBP","selectCompartment","CompartmentProduct","PlannedQuantity","UnloadedQuantity","ReceiptCompartmentStatus","display","showShipment","selectionMode","onCellClick","onSelectionChange","key","displayName","rowHeader","editFieldType","showLoadingDetails","Date","toLocaleDateString","toLocaleTimeString","MarineTransloadingDetailsComposite","Component","constructor","arguments","state","lodash","emptyMarineReceipt","emptyMarineTransloading","modMarineReceipt","isReadyToRender","listOptions","shareholders","this","getShareholders","terminalCodes","props","saveEnabled","selectedAll","selectCompartmentCode","setState","expandedRowIndex","splice","handleRowClick","shipmentCode","forEach","element","getShipmentLoadingDetails","TrailerCode","error","console","log","RailMarineReceiptCompartmentPlanList","GetBaseProductForCompartment","getKeyByValue","Constants","Number","currentTarget","getAttribute","getReceiptShipments","obj","trailerCode","receiptCode","compartmentCode","transportationType","getTransportationType","axios","RestAPIs","Utilities","tokenDetails","tokenInfo","then","response","result","IsSuccess","dsTransloadingShipmentTable","EntityResult","Table","loadedQuantity","Quantity","LoadedQty","LoadedQuantityUOM","quantity","QuantityUOM","driver","id","id1","shipmentStatus","vehicle","ErrorList","catch","handleReset","ShipmentCode","componentWillReceiveProps","nextProps","selectedRow","Common_Code","GetTransloadingReceiptCompartments","componentDidMount","userDetails","IsArchived","GetCompartmentsBaseProducts","ShareholderList","TransportationType","PageAttibutes","DefaultUOMS","TerminalCodes","Array","isArray","IsTransloading","lstCompartmentBPs","BaseProductCode","filter","com","cindex","ltCompartmentBPs","dr","el","getMarineReceipt","modmarineTransloading","Active","keyCode","KeyCodes","ShareHolderCode","selectedShareholder","keyDataCode","rc","Compcode","bp","dataRows","MARINE","genericProps","render","ErrorBoundary","TMDetailsHeader","newEntityName","Button","onBack","content","LoadingPage","message","connect","getUserDetails","TokenAuth","receipt","userActions","bindActionCreators","entityCode","popUpContents","margin","Popup","fieldName","fieldValue","marginLeft","size","position","List","Content","defaultProps"],"sourceRoot":""}