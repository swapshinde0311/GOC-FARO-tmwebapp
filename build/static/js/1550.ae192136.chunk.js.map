{"version":3,"file":"static/js/1550.ae192136.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/UIBase/Common/WijmoGrid.jsx","Components/Composite/Common/WijmoGridComposite.jsx","Components/UIBase/Details/UnmatchedLocalTransactionsDetails.jsx","Components/Composite/Details/UnmatchedLocalTransactionsDetailsComposite.jsx","Components/Composite/Summary/UnmatchedLocalTransactionsSummaryComposite.jsx","Components/Composite/Entity/UnmatchedLocalTransactionsComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","JS/FunctionGroups.js","JS/KeyCodes.js","JS/NotifyEvent.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as wjCore from \"@grapecity/wijmo\";\r\nimport * as wjGrid from \"@grapecity/wijmo.grid\";\r\nimport {\r\n  FlexGrid,\r\n  FlexGridColumn,\r\n  FlexGridCellTemplate,\r\n} from \"@grapecity/wijmo.react.grid\";\r\nimport { FlexGridFilter } from \"@grapecity/wijmo.react.grid.filter\";\r\nimport { Operator } from \"@grapecity/wijmo.grid.filter\";\r\nimport { FlexGridSearch } from \"@grapecity/wijmo.react.grid.search\";\r\nimport { CollectionView } from \"@grapecity/wijmo\";\r\nimport { CollectionViewNavigator, ListBox } from \"@grapecity/wijmo.react.input\";\r\nimport { Selector } from \"@grapecity/wijmo.grid.selector\";\r\nimport { HeadersVisibility } from \"@grapecity/wijmo.grid\";\r\nimport { showPopup, hidePopup, PopupPosition } from \"@grapecity/wijmo\";\r\nimport * as wjcGridXlsx from \"@grapecity/wijmo.grid.xlsx\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport { GroupPanel } from \"@grapecity/wijmo.react.grid.grouppanel\";\r\nimport { Button, Card, Popup } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as loadash from \"lodash\";\r\nimport \"@grapecity/wijmo.touch\";\r\n\r\nconst WijmoGrid = (props) => {\r\n  const [flex, setFlex] = useState(null);\r\n  const [translator] = useTranslation();\r\n  const _getData = (pageLength) => {\r\n    return new CollectionView(props.sourceData, {\r\n      pageSize: pageLength,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState(_getData(props.rowsPerPage));\r\n  const theGrid = React.createRef();\r\n  const theSearch = React.createRef();\r\n  const gridFilter = React.createRef();\r\n  const pagingComponent = React.createRef();\r\n  const colPicker = React.useRef();\r\n\r\n  // to keep track of selected rows\r\n  const selectedRows = React.useRef(props.selectionRequired ? [] : null);\r\n\r\n  // to initialize grid checkbox selection\r\n  let selector = null;\r\n\r\n  //Initialize grid\r\n  const gridInitialized = (grid) => {\r\n    try {\r\n      // localize grid filter\r\n      customizeFilterConditions();\r\n\r\n      if (props.onRowClick) {\r\n        // add row click event handler\r\n        grid.addEventListener(grid.hostElement, \"click\", (e) => {\r\n          let ht = grid.hitTest(e);\r\n          // condition to check if cell is not a grouped cell and a data cell\r\n          if (\r\n            ht.target.closest(\".wj-cell\") &&\r\n            ![...ht.target.closest(\".wj-cell\").classList].includes(\r\n              \"wj-group\"\r\n            ) &&\r\n            ht.cellType === wjGrid.CellType.Cell\r\n          ) {\r\n            // fetch row data\r\n            const rowData = grid.rows[ht.row].dataItem;\r\n            props.onRowClick(rowData);\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      grid.select(-1, -1);\r\n\r\n      setFlex(grid);\r\n      if (props.selectionRequired) {\r\n        // enable checkbox selection\r\n        selector = new Selector(grid, {\r\n          itemChecked: (s, e) => {\r\n            // if only single checkbox selection is required\r\n            if (props.singleSelection) {\r\n              grid.rows\r\n                .filter((row) => {\r\n                  return (\r\n                    row.isSelected &&\r\n                    selectedRows.current.filter((item) =>\r\n                      loadash.isEqual(item, row.dataItem)\r\n                    ).length === 1\r\n                  );\r\n                })\r\n                .forEach((row) => {\r\n                  row.isSelected = false;\r\n                });\r\n            }\r\n\r\n            // pass row data as parameter to checkbox selection handler\r\n            props.onSelectionHandle(\r\n              grid.rows\r\n                .filter((r) => r.isSelected)\r\n                .map((selectedRow) => selectedRow.dataItem)\r\n            );\r\n          },\r\n          // if only single checkbox selection is required\r\n          showCheckAll: !props.singleSelection,\r\n        });\r\n\r\n        let theGrid = selector.column.grid;\r\n        selector.column = theGrid.rowHeaders.columns[0];\r\n        theGrid.headersVisibility = HeadersVisibility.All;\r\n        theGrid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in gridInitialized: \" + error);\r\n    }\r\n  };\r\n\r\n  //Update grid when data changes\r\n  useEffect(() => {\r\n    try {\r\n      if (theGrid != null) {\r\n        //Connect search to the grid\r\n        let grid = theGrid.current.control;\r\n        let search = theSearch.current.control;\r\n        search.grid = grid;\r\n      }\r\n\r\n      setData(_getData(props.rowsPerPage));\r\n    } catch (error) {\r\n      console.log(\"Error in grid update:\", error);\r\n    }\r\n  }, [props.sourceData]);\r\n\r\n  // Pre-select grid rows based on selectedItems props\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && props.selectionRequired) {\r\n        // clear the selectedRows array\r\n        selectedRows.current.length = 0;\r\n        // add selectedItems array items to selectedRows\r\n        selectedRows.current.push(...props.selectedItems);\r\n\r\n        flex.rows.forEach((row) => {\r\n          if (\r\n            props.selectedItems.filter((item) =>\r\n              loadash.isEqual(item, row.dataItem)\r\n            ).length === 1\r\n          ) {\r\n            // checks the row checkbox\r\n            row.isSelected = true;\r\n          } else {\r\n            // unchecks the row checkbox\r\n            row.isSelected = false;\r\n          }\r\n        });\r\n\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in pre-selecting rows:\", error);\r\n    }\r\n  }, [props.selectedItems]);\r\n\r\n  //Load the state of grid\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(props.parentComponent + \"GridState\") &&\r\n        localStorage.getItem(props.parentComponent + \"GridState\") !== \"null\" &&\r\n        flex\r\n      ) {\r\n        // restore grid settings\r\n        let gridState = JSON.parse(\r\n          localStorage.getItem(props.parentComponent + \"GridState\")\r\n        );\r\n        let newFlex = flex;\r\n\r\n        // restore column picker settings\r\n        newFlex.columns.forEach((col) => {\r\n          let matchedCol = gridState.columns.filter(\r\n            (colSetting) => colSetting.binding === col.binding\r\n          );\r\n          col.visible =\r\n            matchedCol.length > 0 ? matchedCol[0].visible : col.visible;\r\n        });\r\n\r\n        // restore filter settings\r\n        gridFilter.current.control.filterDefinition =\r\n          gridState.filterDefinition;\r\n\r\n        // restore sort settings\r\n        newFlex.collectionView.deferUpdate(() => {\r\n          newFlex.collectionView.sortDescriptions.clear();\r\n          for (let i = 0; i < gridState.sortDescriptions.length; i++) {\r\n            let sortDesc = gridState.sortDescriptions[i];\r\n            newFlex.collectionView.sortDescriptions.push(\r\n              new wjCore.SortDescription(sortDesc.property, sortDesc.ascending)\r\n            );\r\n          }\r\n        });\r\n\r\n        // restore grouping settings\r\n        for (let i = 0; i < gridState.groupDescriptions.length; i++) {\r\n          newFlex.collectionView.groupDescriptions.push(\r\n            new wjCore.PropertyGroupDescription(gridState.groupDescriptions[i])\r\n          );\r\n          newFlex.columns.filter(\r\n            (col) => col.binding === gridState.groupDescriptions[i]\r\n          )[0].visible = false;\r\n        }\r\n\r\n        if (\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") &&\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") !== \"null\"\r\n        ) {\r\n          let gridSessionState = JSON.parse(\r\n            sessionStorage.getItem(props.parentComponent + \"GridState\")\r\n          );\r\n          // restore paging settings\r\n          newFlex.collectionView.moveToPage(\r\n            newFlex.collectionView.pageCount - 1 >= gridSessionState.pageIndex\r\n              ? gridSessionState.pageIndex\r\n              : newFlex.collectionView.pageCount - 1\r\n          );\r\n\r\n          // restore search settings\r\n          if (theSearch) {\r\n            theSearch.current.control.text = gridSessionState.searchText;\r\n          }\r\n        }\r\n\r\n        setFlex(newFlex);\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in restoring local storage settings: \", error);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set Column Picker Properties\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && colPicker.current && props.columnPickerRequired) {\r\n        colPicker.current.itemsSource = flex.columns;\r\n        colPicker.current.checkedMemberPath = \"visible\";\r\n        colPicker.current.displayMemberPath = \"header\";\r\n        colPicker.current.lostFocus.addHandler(() => {\r\n          hidePopup(colPicker.current.hostElement);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in initializing column picker properties:\", error);\r\n    }\r\n  }, [colPicker.current]);\r\n\r\n  useEffect(() => {\r\n    // remove column picker pop-up on component unmount\r\n    return () => {\r\n      if (props.columnPickerRequired && colPicker.current) {\r\n        hidePopup(colPicker.current.hostElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // export grid data to excel\r\n  const exportExcel = () => {\r\n    try {\r\n      let gridFlex = flex;\r\n      //to download all rows from all pages\r\n      gridFlex.itemsSource.pageSize = props.sourceData.length;\r\n      setFlex(gridFlex);\r\n      wjcGridXlsx.FlexGridXlsxConverter.saveAsync(\r\n        flex,\r\n        {\r\n          includeColumnHeaders: true,\r\n          includeCellStyles: false,\r\n          formatItem: null,\r\n        },\r\n        props.exportFileName\r\n      );\r\n\r\n      //to restore paging\r\n      gridFlex.itemsSource.pageSize = props.rowsPerPage;\r\n      setFlex(gridFlex);\r\n    } catch (error) {\r\n      console.log(\"Error in export grid to excel:\", error);\r\n    }\r\n  };\r\n\r\n  const terminalPopOver = (terminalCodes) => {\r\n    if (terminalCodes.split(\",\").length > props.terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={terminalCodes.split(\",\").length}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return terminalCodes;\r\n    }\r\n  };\r\n\r\n  const displayValues = (value, columnDetail) => {\r\n    if (columnDetail !== undefined && columnDetail !== null) {\r\n      if (typeof value === \"boolean\" || columnDetail.Name === \"Active\") {\r\n        if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n        else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n      } else if (value === \"\" || value === null || value === undefined) {\r\n        return value;\r\n      } else if (\r\n        (columnDetail.Name === \"TerminalCodes\" ||\r\n          columnDetail.PopOver === \"1\") &&\r\n        value !== null\r\n      ) {\r\n        return terminalPopOver(value);\r\n      }\r\n      // var columnType = columnDetails.find(function (detail) {\r\n      //   if (detail.Name === field) {\r\n      //     return detail;\r\n      //   }\r\n      // });\r\n      else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"DateTime\"\r\n      ) {\r\n        return (\r\n          new Date(value).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(value).toLocaleTimeString()\r\n        );\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Date\"\r\n      ) {\r\n        return new Date(value).toLocaleDateString();\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Time\"\r\n      ) {\r\n        return new Date(value).toLocaleTimeString();\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  //Initialize Column Picker\r\n  const initializedPicker = (picker) => {\r\n    if (props.columnPickerRequired) {\r\n      colPicker.current = picker;\r\n    }\r\n  };\r\n\r\n  // Column Picker Handler\r\n  const colPickerClickHandler = (event) => {\r\n    try {\r\n      let host = colPicker.current.hostElement;\r\n      if (!host.offsetHeight) {\r\n        showPopup(host, event.target, PopupPosition.Below, true, false);\r\n        colPicker.current.focus();\r\n      } else {\r\n        hidePopup(host, true, true);\r\n        flex.focus();\r\n      }\r\n\r\n      colPicker.current.focus();\r\n      event.preventDefault();\r\n    } catch (error) {\r\n      console.log(\"Error in Column Picker click event:\", error);\r\n    }\r\n  };\r\n\r\n  const saveGridState = () => {\r\n    try {\r\n      if (flex && gridFilter.current) {\r\n        // grid column, filter, sort and grouping settings\r\n        let gridState = {\r\n          columns: flex.columns.map((col) => {\r\n            return {\r\n              binding: col.binding,\r\n              visible: col.visible,\r\n            };\r\n          }),\r\n          filterDefinition: gridFilter.current.control.filterDefinition,\r\n          sortDescriptions: flex.collectionView.sortDescriptions.map(\r\n            (sortDesc) => {\r\n              return {\r\n                property: sortDesc.property,\r\n                ascending: sortDesc.ascending,\r\n              };\r\n            }\r\n          ),\r\n          groupDescriptions: flex.collectionView.groupDescriptions.map(\r\n            (group) => {\r\n              if (group.propertyName) {\r\n                return group.propertyName;\r\n              }\r\n\r\n              return null;\r\n            }\r\n          ),\r\n        };\r\n\r\n        // add class to grouped checkbox div element\r\n        if (\r\n          flex.collectionView.groupDescriptions &&\r\n          flex.collectionView.groupDescriptions.length > 0\r\n        ) {\r\n          let groupedCheckboxes = [\r\n            ...document.getElementsByClassName(\"wj-column-selector-group\"),\r\n          ];\r\n          groupedCheckboxes.forEach((chkbx) => {\r\n            chkbx.parentNode.parentNode.classList.add(\"wj-grouped-checkbox\");\r\n          });\r\n        }\r\n\r\n        // grid paging and search settings\r\n        let sessionState = {\r\n          pageIndex: flex.collectionView.pageIndex,\r\n          searchText: theSearch.current.control.text,\r\n        };\r\n\r\n        localStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(gridState)\r\n        );\r\n        sessionStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(sessionState)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in saving grid state\");\r\n    }\r\n  };\r\n\r\n  // customize grid filter text and dropdowns\r\n  const customizeFilterConditions = () => {\r\n    // localize the FlexGrid filter\r\n    let filter = wjCore.culture.FlexGridFilter,\r\n      operator = Operator;\r\n    wjCore.culture.FlexGridFilter.header = translator(\"WijmoGridFilterHeader\");\r\n    wjCore.culture.FlexGridFilter.ascending =\r\n      \"\\u2191 \" + translator(\"WijmoGridFilterAscending\");\r\n    wjCore.culture.FlexGridFilter.descending =\r\n      \"\\u2193 \" + translator(\"WijmoGridFilterDescending\");\r\n    wjCore.culture.FlexGridFilter.apply = translator(\"RoleAdminEdit_Apply\");\r\n    wjCore.culture.FlexGridFilter.clear = translator(\"OrderCreate_btnClear\");\r\n    wjCore.culture.FlexGridFilter.conditions = translator(\r\n      \"WijmoGridFilterCondition\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.values = translator(\"WijmoGridFilterValue\");\r\n    wjCore.culture.FlexGridFilter.search = translator(\r\n      \"LoadingDetailsView_SearchGrid\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.selectAll = translator(\r\n      \"WijmoGridFilterSelectAll\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.and = translator(\"WijmoGridFilterAnd\");\r\n    wjCore.culture.FlexGridFilter.or = translator(\"WijmoGridFilterOr\");\r\n    wjCore.culture.FlexGridFilter.cancel = translator(\"AccessCardInfo_Cancel\");\r\n    // wjCore.culture.FlexGridFilter.null = 'test';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.and = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.asc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dialog = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dsc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.edit = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op2 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.or = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.search = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val2 = '';\r\n\r\n    // localize FlexGrid filter operators\r\n    filter.stringOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterBeginsWith\"), op: operator.BW },\r\n      { name: translator(\"WijmoGridFilterEndsWith\"), op: operator.EW },\r\n      { name: translator(\"WijmoGridFilterContains\"), op: operator.CT },\r\n      { name: translator(\"WijmoGridFilterDoesNotContain\"), op: operator.NC },\r\n    ];\r\n    filter.numberOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterGreaterThan\"), op: operator.GT },\r\n      { name: translator(\"WijmoGridFilterLessThan\"), op: operator.LT },\r\n      {\r\n        name: translator(\"WijmoGridFilterGreaterThanOrEqual\"),\r\n        op: operator.GE,\r\n      },\r\n      { name: translator(\"WijmoGridFilterLessThanOrEqual\"), op: operator.LE },\r\n    ];\r\n    filter.dateOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterDateEarlierThan\"), op: operator.LT },\r\n      { name: translator(\"WijmoGridFilterDateLaterThan\"), op: operator.GT },\r\n    ];\r\n    filter.booleanOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n    ];\r\n  };\r\n\r\n  // set column width based on screen size\r\n  const getWidth = (columnDetails) => {\r\n    try {\r\n      const screenWidth = window.screen.width;\r\n      if (screenWidth < 1024) {\r\n        if (columnDetails.WidthPx && columnDetails.WidthPx !== \"\")\r\n          return parseInt(columnDetails.WidthPx);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in width:\", error);\r\n    }\r\n\r\n    return columnDetails.WidthPercentage.includes(\"*\")\r\n      ? columnDetails.WidthPercentage\r\n      : parseInt(columnDetails.WidthPercentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pl-1\">\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <React.Fragment>\r\n              <div className=\"row pl-0\">\r\n                <div className=\"col-10 col-sm-12 col-md-5 col-lg-6\">\r\n                  <FlexGridSearch\r\n                    class=\"ui single-input\"\r\n                    ref={theSearch}\r\n                    placeholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-10 col-sm-12 col-md-7 col-lg-6\">\r\n                  <div style={{ float: \"right\" }}>\r\n                    {props.columnPickerRequired ? (\r\n                      <Button\r\n                        id=\"colPicker\"\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        onClick={(event) => colPickerClickHandler(event)}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridColumnPicker\")}\r\n                        </div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          <Icon\r\n                            name=\"caret-down\"\r\n                            className=\"btnIcon\"\r\n                            size=\"small\"\r\n                          />\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.exportRequired ? (\r\n                      <Button\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        className=\"mt-3 mt-md-0\"\r\n                        onClick={exportExcel}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridExport\")}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            className=\"icon-Xls\"\r\n                            style={{\r\n                              fontSize: \"17px\",\r\n                              position: \"absolute\",\r\n                              top: \"3px\",\r\n                            }}\r\n                          ></span>\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tableScroll\">\r\n                {props.columnGroupingRequired ? (\r\n                  <GroupPanel\r\n                    className=\"group-panel\"\r\n                    grid={flex}\r\n                    placeholder={t(\"WijmoGridGroupPanelPlaceholder\")}\r\n                  />\r\n                ) : null}\r\n                <ErrorBoundary>\r\n                  <FlexGrid\r\n                    ref={theGrid}\r\n                    autoGenerateColumns={false}\r\n                    alternatingRowStep={0}\r\n                    autoRowHeights={true}\r\n                    headersVisibility=\"Column\"\r\n                    itemsSource={data}\r\n                    selectionMode={wjCore.asEnum(\"None\", wjGrid.SelectionMode)}\r\n                    initialized={gridInitialized}\r\n                    virtualizationThreshold={[0, 10000]}\r\n                    onUpdatedView={saveGridState}\r\n                  >\r\n                    <FlexGridFilter ref={gridFilter} />\r\n                    {props.columns.map((column) => {\r\n                      return (\r\n                        <FlexGridColumn\r\n                          header={t(column.Name)}\r\n                          key={column.Name}\r\n                          binding={column.Name}\r\n                          width={getWidth(column)}\r\n                          minWidth={100}\r\n                          isReadOnly={true}\r\n                          wordWrap={true}\r\n                          align=\"left\"\r\n                        >\r\n                          <FlexGridCellTemplate\r\n                            cellType=\"Cell\"\r\n                            template={(context) => {\r\n                              return (\r\n                                <span\r\n                                  style={\r\n                                    props.conditionalRowStyleCheck == null ||\r\n                                    !props.conditionalRowStyleCheck(\r\n                                      context.item\r\n                                    )\r\n                                      ? null\r\n                                      : { ...props.conditionalRowStyles }\r\n                                  }\r\n                                >\r\n                                  {displayValues(\r\n                                    context.item[column.Name],\r\n                                    column\r\n                                  )}\r\n                                </span>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FlexGridColumn>\r\n                      );\r\n                    })}\r\n                  </FlexGrid>\r\n                </ErrorBoundary>\r\n                {props.columnPickerRequired ? (\r\n                  <div className=\"column-picker-div\">\r\n                    <ListBox\r\n                      className=\"column-picker\"\r\n                      initialized={(picker) => initializedPicker(picker)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"row\">\r\n                <CollectionViewNavigator\r\n                  ref={pagingComponent}\r\n                  className=\"ml-auto mr-auto mt-3\"\r\n                  headerFormat={t(\"WijmoGridPagingTemplate\")}\r\n                  byPage={true}\r\n                  cv={data}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nWijmoGrid.propTypes = {\r\n  sourceData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  exportRequired: PropTypes.bool.isRequired,\r\n  exportFileName: PropTypes.string,\r\n  selectionRequired: PropTypes.bool,\r\n  columnPickerRequired: PropTypes.bool,\r\n  columnGroupingRequired: PropTypes.bool,\r\n  conditionalRowStyleCheck: PropTypes.func,\r\n  conditionalRowStyles: PropTypes.object,\r\n  rowsPerPage: PropTypes.number,\r\n  onSelectionHandle: PropTypes.func,\r\n  parentComponent: PropTypes.string.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  terminalsToShow: PropTypes.number,\r\n  singleSelection: PropTypes.bool,\r\n  selectedItems: PropTypes.array,\r\n};\r\n\r\nWijmoGrid.defaultProps = {\r\n  sourceData: [],\r\n  columns: [],\r\n  exportRequired: true,\r\n  exportFileName: \"Grid.xlsx\",\r\n  selectionRequired: false,\r\n  columnPickerRequired: false,\r\n  columnGroupingRequired: false,\r\n  rowsPerPage: 10,\r\n  terminalsToShow: 2,\r\n  singleSelection: false,\r\n  selectedItems: [],\r\n};\r\n\r\nexport default WijmoGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WijmoGrid from '../../UIBase/Common/WijmoGrid';\r\n\r\nconst WijmoGridComposite = (props) => {\r\n    return (\r\n        <WijmoGrid\r\n            sourceData={props.data}\r\n            columns={props.columns}\r\n            exportRequired={props.exportRequired}\r\n            exportFileName={props.exportFileName}\r\n            columnPickerRequired={props.columnPickerRequired}\r\n            selectionRequired={props.selectionRequired}\r\n            columnGroupingRequired={props.columnGroupingRequired}\r\n            conditionalRowStyleCheck={props.conditionalRowStyleCheck}\r\n            conditionalRowStyles={props.conditionalRowStyles}\r\n            rowsPerPage={props.rowsPerPage}\r\n            onSelectionHandle={props.onSelectionHandle}\r\n            onRowClick={props.onRowClick}\r\n            parentComponent={props.parentComponent}\r\n            terminalsToShow={props.terminalsToShow}\r\n            singleSelection={props.singleSelection}\r\n            selectedItems={props.selectedItems}\r\n        />\r\n    )\r\n}\r\n\r\nWijmoGridComposite.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n    exportRequired: PropTypes.bool.isRequired,\r\n    exportFileName: PropTypes.string,\r\n    selectionRequired: PropTypes.bool,\r\n    columnPickerRequired: PropTypes.bool,\r\n    columnGroupingRequired: PropTypes.bool,\r\n    conditionalRowStyleCheck: PropTypes.func,\r\n    conditionalRowStyles: PropTypes.object,\r\n    rowsPerPage: PropTypes.number,\r\n    onSelectionHandle: PropTypes.func,\r\n    parentComponent: PropTypes.string.isRequired,\r\n    onRowClick: PropTypes.func,\r\n    terminalsToShow: PropTypes.number,\r\n    singleSelection: PropTypes.bool,\r\n    selectedItems: PropTypes.array\r\n}\r\n\r\nexport default WijmoGridComposite;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\n\r\nUnmatchedLocalTransactionsDetails.propTypes = {\r\n  batchDetailsList: PropTypes.array.isRequired\r\n}\r\nUnmatchedLocalTransactionsDetails.defaultProps = { batchDetailsList: [] }\r\n\r\nexport function UnmatchedLocalTransactionsDetails({ batchDetailsList }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 detailsTable\">\r\n              <DataTable\r\n                data={batchDetailsList}\r\n              >\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"ProductCode\"\r\n                  field=\"ProductCode\"\r\n                  header={t(\"ContractInfo_Product\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"ProductType\"\r\n                  field=\"ProductType\"\r\n                  header={t(\"ProductType_Title\")}\r\n                  renderer={(cellData) => {\r\n                    return t(\r\n                      batchDetailsList[cellData.rowIndex][\r\n                        cellData.field\r\n                      ]\r\n                    );\r\n                  }}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"MeterCode\"\r\n                  field=\"MeterCode\"\r\n                  header={t(\"Meter_Code\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"GrossQuantity\"\r\n                  field=\"GrossQuantity\"\r\n                  header={t(\"GrossQuantity\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"NetQuantity\"\r\n                  field=\"NetQuantity\"\r\n                  header={t(\"NetQuantity\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"StartTotalizer\"\r\n                  field=\"StartTotalizer\"\r\n                  header={t(\"StartTotalizer\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"EndTotalizer\"\r\n                  field=\"EndTotalizer\"\r\n                  header={t(\"EndTotalizer\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"Density\"\r\n                  field=\"Density\"\r\n                  header={t(\"Density\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"Pressure\"\r\n                  field=\"Pressure\"\r\n                  header={t(\"Pressure\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"Temperature\"\r\n                  field=\"Temperature\"\r\n                  header={t(\"Temperature\")}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"StartTime\"\r\n                  field=\"StartTime\"\r\n                  header={t(\"StartTime\")}\r\n                  renderer={(cellData) => {\r\n                    if (\r\n                      batchDetailsList[cellData.rowIndex][\r\n                        cellData.field\r\n                      ]\r\n                    ) {\r\n                      return new Date(\r\n                        batchDetailsList[cellData.rowIndex][\r\n                          cellData.field\r\n                        ]\r\n                      ).toLocaleString();\r\n                    }\r\n                  }}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"EndTime\"\r\n                  field=\"EndTime\"\r\n                  header={t(\"EndTime\")}\r\n                  renderer={(cellData) => {\r\n                    if (\r\n                      batchDetailsList[cellData.rowIndex][\r\n                        cellData.field\r\n                      ]\r\n                    ) {\r\n                      return new Date(\r\n                        batchDetailsList[cellData.rowIndex][\r\n                          cellData.field\r\n                        ]\r\n                      ).toLocaleString();\r\n                    }\r\n                  }}\r\n                ></DataTable.Column>\r\n              </DataTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { UnmatchedLocalTransactionsDetails } from \"../../UIBase/Details/UnmatchedLocalTransactionsDetails\";\r\n\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"./../../../Components/ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport * as KeyCodes from \"./../../../JS/KeyCodes\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button } from \"@scuf/common\";\r\n\r\nclass UnmatchedLocalTransactionsDetailsComposite extends Component {\r\n  state = {\r\n    batchDetailsList: [],\r\n    isReadyToRender: false,\r\n    transportationTypeOptions: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getBatchDetails(this.props.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite:Error occurred on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getBatchDetails(transaction) {\r\n    const keyCode = [\r\n      {\r\n        key: KeyCodes.bcuCode,\r\n        value: transaction.BCU_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.TransactionNumber,\r\n        value: transaction.RailDispatchManualEntry_TransactionNo,\r\n      },\r\n      {\r\n        key: KeyCodes.BatchNumber,\r\n        value: transaction.UnmatchedLocalTrans_BatchNo,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetBatchDetails,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          const batchDetailsList = this.getBatchDetailsForUI(\r\n            result.EntityResult\r\n          );\r\n          this.setState({ batchDetailsList, isReadyToRender: true });\r\n        } else {\r\n          this.setState({ batchDetailsList: [], isReadyToRender: true });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting GetLocalTransactions:\", error);\r\n      });\r\n  }\r\n\r\n  getBatchDetailsForUI(loadingInfoList) {\r\n    let detailList = [];\r\n    try {\r\n      let recordID = 1;\r\n      loadingInfoList.forEach((loadingInfo) => {\r\n        detailList.push(\r\n          this.getBatchInfoFromLoadingDetails(\r\n            loadingInfo.LoadingDetailFPinfo,\r\n            0 /*ProductTypeForUI.FinishedProduct*/,\r\n            recordID++\r\n          )\r\n        );\r\n        if (\r\n          loadingInfo.ArrLoadingDetailBP !== null &&\r\n          loadingInfo.ArrLoadingDetailBP !== undefined &&\r\n          Array.isArray(loadingInfo.ArrLoadingDetailBP)\r\n        ) {\r\n          loadingInfo.ArrLoadingDetailBP.forEach((baseProductInfo) => {\r\n            detailList.push(\r\n              this.getBatchInfoFromLoadingDetails(\r\n                baseProductInfo,\r\n                1 /*ProductTypeForUI.BaseProduct*/,\r\n                recordID++\r\n              )\r\n            );\r\n          });\r\n        }\r\n        if (\r\n          loadingInfo.ArrLoadingDetailAdditive !== null &&\r\n          loadingInfo.ArrLoadingDetailAdditive !== undefined &&\r\n          Array.isArray(loadingInfo.ArrLoadingDetailAdditive)\r\n        ) {\r\n          loadingInfo.ArrLoadingDetailAdditive.forEach((additiveInfo) => {\r\n            detailList.push(\r\n              this.getBatchInfoFromLoadingDetails(\r\n                additiveInfo,\r\n                2 /*ProductTypeForUI.Additive*/,\r\n                recordID++\r\n              )\r\n            );\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting GetBatchDetailsForUI:\", error);\r\n    }\r\n    return detailList;\r\n  }\r\n\r\n  getBatchInfoFromLoadingDetails(loading, productType, recordID) {\r\n    const batchInfo = {\r\n      ID: recordID,\r\n      ProductCode: \"\",\r\n      ProductType: \"\",\r\n      TankCode: \"\",\r\n      MeterCode: loading.MeterCode,\r\n      GrossQuantity:\r\n        loading.GrossQuantity === null\r\n          ? \"0 \" + loading.QuantityUOM\r\n          : loading.GrossQuantity.toLocaleString() + \" \" + loading.QuantityUOM,\r\n      NetQuantity:\r\n        loading.NetQuantity === null\r\n          ? \"0 \" + loading.QuantityUOM\r\n          : loading.NetQuantity.toLocaleString() + \" \" + loading.QuantityUOM,\r\n      StartTotalizer:\r\n        loading.StartTotalizer === null\r\n          ? \"\"\r\n          : loading.StartTotalizer.toLocaleString(),\r\n      EndTotalizer:\r\n        loading.EndTotalizer === null\r\n          ? \"\"\r\n          : loading.EndTotalizer.toLocaleString(),\r\n      Density:\r\n        loading.ProductDensity === null\r\n          ? \"\"\r\n          : loading.ProductDensity.toLocaleString() +\r\n            \" \" +\r\n            loading.ProductDensityUOM,\r\n      Pressure:\r\n        loading.Pressure === null\r\n          ? \"\"\r\n          : loading.Pressure.toLocaleString() + \" \" + loading.PressureUOM,\r\n      Temperature:\r\n        loading.Temperature === null\r\n          ? \"\"\r\n          : loading.Temperature.toLocaleString() + \" \" + loading.TemperatureUOM,\r\n      StartTime: loading.StartTime,\r\n      EndTime: loading.EndTime,\r\n    };\r\n    switch (productType) {\r\n      case 0: //ProductTypeForUI.FinishedProduct:\r\n        batchInfo.ProductCode = loading.FinishedProductCode;\r\n        batchInfo.ProductType = \"RailDispatchManualEntry_FinishedProduct\";\r\n        break;\r\n\r\n      case 1: //ProductTypeForUI.BaseProduct:\r\n        batchInfo.ProductCode = loading.BaseProductCode;\r\n        batchInfo.ProductType = \"Report_BaseProduct\";\r\n        break;\r\n\r\n      case 2: //ProductTypeForUI.Additive:\r\n        batchInfo.ProductCode = loading.AdditiveProductCode;\r\n        batchInfo.ProductType = \"ViewShipment_Additive\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    return batchInfo;\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const localData = lodash.cloneDeep(this.state.localData);\r\n      localData[propertyName] = data;\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnmatchedLocalTransactionsDetailsComposite: Error occurred on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader newEntityName=\"LocalTransactions_BatchDetails\"></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n\r\n        <ErrorBoundary>\r\n          <UnmatchedLocalTransactionsDetails\r\n            batchDetailsList={this.state.batchDetailsList}\r\n          />\r\n        </ErrorBoundary>\r\n\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <div className=\"row\">\r\n              <div className=\"col col-lg-8\">\r\n                <Button\r\n                  className=\"backButton\"\r\n                  onClick={this.props.onBack}\r\n                  content={t(\"Back\")}\r\n                ></Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </TranslationConsumer>\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(\r\n  UnmatchedLocalTransactionsDetailsComposite\r\n);\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nexport function UnmatchedLocalTransactionsSummaryComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  terminalsToShow,\r\n  selectionRequired,     \r\n  onSelectionChange,\r\n  onRowClick,\r\n  parentComponent\r\n}) {\r\n  return (\r\n      <WijmoGridComposite\r\n      data={tableData}\r\n      columns={columnDetails}\r\n      rowsPerPage={pageSize}\r\n      exportRequired={exportRequired}\r\n      exportFileName={exportFileName}\r\n      columnPickerRequired={columnPickerRequired}\r\n      columnGroupingRequired={columnGroupingRequired}\r\n      terminalsToShow={terminalsToShow}\r\n      selectionRequired={selectionRequired}\r\n      onSelectionHandle={onSelectionChange}\r\n      onRowClick={onRowClick}\r\n      parentComponent={parentComponent}\r\n      ></WijmoGridComposite>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport axios from \"axios\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { UnmatchedLocalTransactionsSummaryComposite } from \"../Summary/UnmatchedLocalTransactionsSummaryComposite\";\r\nimport UnmatchedLocalTransactionsDetailsComposite from \"../Details/UnmatchedLocalTransactionsDetailsComposite\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { Select, Modal, Button, Input } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport {\r\n  functionGroups,\r\n  fnUnmatchedLocalTransactions,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport lodash from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UnmatchedLocalTransactionsComposite extends Component {\r\n  state = {\r\n    operationsVisibility: { add: false, delete: false, shareholder: false },\r\n    selectedShareholder: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n    isReadyToRender: false,\r\n    isDetails: false,\r\n    transportationTypeOptions: [],\r\n    transportationType:\r\n      this.props.activeItem.itemProps.transportationType.toUpperCase(),\r\n    data: {},\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    isOpenDeleteConfirm: false,\r\n    deleteReason: \"\",\r\n    deleteReasonError: \"\",\r\n  };\r\n\r\n  componentName = \"UnMatchedLocalTransactionsComponent\";\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getTransportationTypes();\r\n      this.getUnmatchedLocalTransactionsList(this.state.transportationType);\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnmatchedLocalTransactionsComposite: Error occurred on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getTransportationTypes() {\r\n    try {\r\n      const transportationTypeList = [\r\n        Constants.TransportationType.ROAD,\r\n        Constants.TransportationType.RAIL,\r\n      ];\r\n      this.setState({\r\n        transportationTypeOptions: Utilities.transferListtoOptions(\r\n          transportationTypeList\r\n        ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnmatchedLocalTransactionsDetailsComposite: Error occurred on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getUnmatchedLocalTransactionsList(transportationType) {\r\n    let obj = {\r\n      TransactionType: \"All\",\r\n      TransportationType: transportationType,\r\n      ProductCode: \"\",\r\n      ShareholderCode: this.state.selectedShareholder,\r\n      LocationCode: \"\",\r\n    };\r\n    axios(\r\n      RestAPIs.GetUnmatchedLocalTransactionsListForRole,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            data: result.EntityResult,\r\n            isReadyToRender: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: {},\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\r\n            \"Error in GetUnmatchedLocalTransactionsList: \",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: [] });\r\n        console.log(\r\n          \"Error while getting GetUnmatchedLocalTransactionsList: \",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  handleChange = (data) => {\r\n    const transportationType = data;\r\n    this.getUnmatchedLocalTransactionsList(data);\r\n    this.setState({\r\n      transportationType,\r\n      selectedRow: {},\r\n      selectedItems: [],\r\n    });\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      const operationsVisibility = lodash.cloneDeep(\r\n        this.state.operationsVisibility\r\n      );\r\n      operationsVisibility.delete = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.remove,\r\n        fnUnmatchedLocalTransactions\r\n      );\r\n      operationsVisibility.shareholder = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: item,\r\n        selectedItems: [item],\r\n        operationsVisibility,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnmatchedLocalTransactionsDetailsComposite: Error occurred on handleRowClick\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleSelection = (items) => {\r\n    try {\r\n      const operationsVisibility = lodash.cloneDeep(\r\n        this.state.operationsVisibility\r\n      );\r\n      operationsVisibility.delete =\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnUnmatchedLocalTransactions\r\n        );\r\n      this.setState({ selectedItems: items, operationsVisibility });\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnmatchedLocalTransactionsDetailsComposite: Error occurred on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      const operationsVisibility = lodash.cloneDeep(\r\n        this.state.operationsVisibility\r\n      );\r\n      operationsVisibility.delete = false;\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        operationsVisibility,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getUnmatchedLocalTransactionsList(this.state.transportationType);\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnmatchedLocalTransactionsDetailsComposite: Error occurred on Back click\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDelete = () => {\r\n    try {\r\n      const { operationsVisibility } = { ...this.state };\r\n      operationsVisibility.delete = false;\r\n      this.setState({ operationsVisibility });\r\n      const deleteUnmatchedTransactionsKeys = [];\r\n      for (let item of this.state.selectedItems) {\r\n        deleteUnmatchedTransactionsKeys.push({\r\n          ShareHolderCode: this.state.selectedShareholder,\r\n          KeyCodes: [\r\n            {\r\n              Key: KeyCodes.TransactionNumber,\r\n              Value: item.RailDispatchManualEntry_TransactionNo,\r\n            },\r\n            { Key: KeyCodes.bcuCode, Value: item.BCU_Code },\r\n            {\r\n              Key: KeyCodes.BatchNumber,\r\n              Value: item.UnmatchedLocalTrans_BatchNo,\r\n            },\r\n          ],\r\n        });\r\n      }\r\n      const requestEntity = {\r\n        Reason: this.state.deleteReason,\r\n        LstRequests: deleteUnmatchedTransactionsKeys,\r\n      };\r\n      axios(\r\n        RestAPIs.MarkUnMatchLocalTransactionInValid,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          requestEntity,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          const result = response.data;\r\n          let isRefreshDataRequire = result.IsSuccess;\r\n          if (\r\n            response.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            var failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else {\r\n              isRefreshDataRequire = true;\r\n            }\r\n          }\r\n          var notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"UnmatchedLocalTrans_ModalHeader\",\r\n            []\r\n          );\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({ isReadyToRender: false });\r\n            this.getUnmatchedLocalTransactionsList(\r\n              this.state.transportationType\r\n            );\r\n            this.setState({\r\n              selectedItems: [],\r\n              selectedRow: {},\r\n              isDetails: false,\r\n              deleteReason: \"\",\r\n            });\r\n          } else {\r\n            operationsVisibility.delete = true;\r\n            this.setState({ operationsVisibility });\r\n          }\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnmatchedLocalTransactionsDetailsComposite: Error occurred on handleDelete\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibility}\r\n            breadcrumbItem={this.props.activeItem}\r\n            // onDelete={() => {\r\n            //   this.setState({ isOpenDeleteConfirm: true });\r\n            // }}\r\n            addVisible={false}\r\n            deleteVisible={false}\r\n            shrVisible={false}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isDetails ? (\r\n          <UnmatchedLocalTransactionsDetailsComposite\r\n            key=\"UnmatchedLocalTransactionsDetails\"\r\n            selectedRow={this.state.selectedRow}\r\n            selectedShareholder={this.state.selectedShareholder}\r\n            onBack={this.handleBack}\r\n          />\r\n        ) : this.state.isReadyToRender ? (\r\n          <div>\r\n            {/* <ErrorBoundary>\r\n              <TranslationConsumer>\r\n                {(t) => (\r\n                  <Select\r\n                    fluid\r\n                    placeholder=\"Select\"\r\n                    multiple={false}\r\n                    value={this.state.transportationType}\r\n                    options={this.state.transportationTypeOptions}\r\n                    onChange={(data) => {\r\n                      this.handleChange(data);\r\n                    }}\r\n                    reserveSpace={false}\r\n                    search={false}\r\n                    noResultsMessage={t(\"noResultsMessage\")}\r\n                  />\r\n                )}\r\n              </TranslationConsumer>\r\n            </ErrorBoundary> */}\r\n            <ErrorBoundary>\r\n              <UnmatchedLocalTransactionsSummaryComposite\r\n                tableData={this.state.data.Table}\r\n                columnDetails={this.state.data.Column}\r\n                pageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                exportRequired={true}\r\n                exportFileName=\"UnMatchedLocalTransactionsList\"\r\n                columnPickerRequired={true}\r\n  \r\n                terminalsToShow={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .NoOfTerminalsToShow\r\n                }\r\n                selectionRequired={true}\r\n                columnGroupingRequired={true}\r\n                onSelectionChange={this.handleSelection}\r\n                onRowClick={this.handleRowClick}\r\n                parentComponent={this.componentName}\r\n              ></UnmatchedLocalTransactionsSummaryComposite>\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : (\r\n          <LoadingPage message=\"Loading\"></LoadingPage>\r\n        )}\r\n\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n\r\n        <ErrorBoundary>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal\r\n                size=\"mini\"\r\n                open={this.state.isOpenDeleteConfirm}\r\n                closeOnDimmerClick={false}\r\n              >\r\n                <Modal.Content>\r\n                  <Input\r\n                    fluid\r\n                    label={t(\"UnmatchedLocalTrans_MarkInvalidReason\")}\r\n                    reserveSpace={false}\r\n                    value={this.state.deleteReason}\r\n                    onChange={(data) => {\r\n                      this.setState({ deleteReason: data });\r\n                    }}\r\n                    error={t(this.state.deleteReasonError)}\r\n                  />\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    content={t(\"AccessCardInfo_Ok\")}\r\n                    onClick={() => {\r\n                      if (this.state.deleteReason !== \"\") {\r\n                        this.handleDelete();\r\n                        this.setState({\r\n                          isOpenDeleteConfirm: false,\r\n                          deleteReasonError: \"\",\r\n                        });\r\n                      } else {\r\n                        this.setState({\r\n                          deleteReasonError:\r\n                            \"LocalTransaction_ReasonForInvalid_Required\",\r\n                        });\r\n                      }\r\n                    }}\r\n                  ></Button>\r\n                  <Button\r\n                    content={t(\"AccessCardInfo_Cancel\")}\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        isOpenDeleteConfirm: false,\r\n                        deleteReason: \"\",\r\n                        deleteReasonError: \"\",\r\n                      });\r\n                    }}\r\n                  ></Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UnmatchedLocalTransactionsComposite);\r\n\r\nUnmatchedLocalTransactionsComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";","import React from \"react\";\r\nimport { Notification } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { delimiter } from \"./Constants\";\r\nimport PropTypes from \"prop-types\";\r\nNotifyEvent.propTypes = {\r\n  notificationMessage: PropTypes.shape({\r\n    messageType: PropTypes.oneOf([\"success\", \"critical\"]),\r\n    message: PropTypes.string,\r\n    messageResultDetails: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        keyFields: PropTypes.arrayOf(PropTypes.string),\r\n        KeyValues: PropTypes.arrayOf(PropTypes.string),\r\n        isSuccess: PropTypes.bool,\r\n        errorMessage: PropTypes.string,\r\n      })\r\n    ),\r\n  }).isRequired,\r\n  //closeToast: PropTypes.bool,\r\n};\r\n// notifiaionMessage={messageType:\"success/critical\",message:\"title of message\",\r\n// messageResultDetails:[{keyFields:[Array Of Key Codes],KeyValues:[Array of Key Values],isSuccess,ErrorMessage}]}\r\nexport default function NotifyEvent({ notificationMessage }) {\r\n\r\n  function getLocalizedMessage(message) {\r\n    try {\r\n      let messageOptions = message.split(delimiter);\r\n      return messageOptions[0];\r\n    } catch (error) {\r\n      console.log(error);\r\n      return \"\";\r\n    }\r\n  }\r\n  function getLocalizedMessageParameters(message) {\r\n    try {\r\n      let messageOptions = message.split(delimiter);\r\n      messageOptions.splice(0, 1);\r\n      return messageOptions;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <Notification\r\n          className=\"toast-notification\"\r\n          severity={notificationMessage.messageType}\r\n          // onCloseClick={closeToast}\r\n          hasIcon={true}\r\n          title={t(notificationMessage.message)}\r\n        //onDetailsClick={() => alert(details)}\r\n        >\r\n          {notificationMessage.messageResultDetails.map((messageResult) => {\r\n            var entityKeyDetails = \"\";\r\n            if (messageResult.keyFields.length > 0) {\r\n              for (var i = 0; i < messageResult.keyFields.length; i++) {\r\n                entityKeyDetails =\r\n                  entityKeyDetails +\r\n                  t(messageResult.keyFields[i]) +\r\n                  \" : \" +\r\n                  messageResult.keyValues[i] +\r\n                  \", \";\r\n              }\r\n            }\r\n            return (\r\n              <div>\r\n                <span\r\n                  style={{ color: messageResult.isSuccess ? \"#7eb338\" : \"#F15A4F\" }}\r\n                >\r\n                  {entityKeyDetails}\r\n                  {messageResult.isSuccess\r\n                    ? t(\"NotificationList_MessageType_Success\")\r\n                    : t(\"NotificationList_MessageType_Failure\") +\r\n                    \" : \" +\r\n                    t(\r\n                      getLocalizedMessage(messageResult.errorMessage),\r\n                      getLocalizedMessageParameters(\r\n                        messageResult.errorMessage\r\n                      )\r\n                    )}\r\n                </span>\r\n                <br></br>\r\n              </div>\r\n            );\r\n          })}\r\n        </Notification>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","WijmoGrid","props","flex","setFlex","translator","useTranslation","_getData","pageLength","CollectionView","sourceData","pageSize","data","setData","rowsPerPage","theGrid","React","theSearch","gridFilter","pagingComponent","colPicker","selectedRows","selectionRequired","selector","gridInitialized","grid","customizeFilterConditions","onRowClick","addEventListener","hostElement","e","ht","hitTest","target","closest","classList","includes","cellType","wjGrid","Cell","rowData","rows","row","dataItem","selectionMode","wjCore","select","Selector","itemChecked","s","singleSelection","filter","isSelected","current","loadash","forEach","onSelectionHandle","r","selectedRow","showCheckAll","column","rowHeaders","columns","headersVisibility","HeadersVisibility","All","error","console","log","useEffect","control","push","selectedItems","refresh","localStorage","getItem","parentComponent","gridState","JSON","parse","newFlex","col","matchedCol","colSetting","binding","visible","filterDefinition","collectionView","deferUpdate","sortDescriptions","clear","i","sortDesc","property","ascending","groupDescriptions","sessionStorage","gridSessionState","moveToPage","pageCount","pageIndex","text","searchText","columnPickerRequired","itemsSource","checkedMemberPath","displayMemberPath","lostFocus","addHandler","hidePopup","exportExcel","gridFlex","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","exportFileName","displayValues","columnDetail","Name","PopOver","terminalCodes","split","terminalsToShow","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","saveGridState","group","propertyName","document","getElementsByClassName","chkbx","parentNode","sessionState","setItem","stringify","FlexGridFilter","operator","Operator","header","descending","apply","conditions","values","search","selectAll","and","or","cancel","stringOperators","op","EQ","NE","BW","EW","CT","NC","numberOperators","GT","LT","GE","LE","dateOperators","booleanOperators","getWidth","columnDetails","window","screen","width","WidthPx","parseInt","WidthPercentage","FlexGridSearch","class","ref","id","actionType","event","host","offsetHeight","focus","showPopup","PopupPosition","Below","preventDefault","colPickerClickHandler","exportRequired","fontSize","top","columnGroupingRequired","GroupPanel","FlexGrid","autoGenerateColumns","alternatingRowStep","autoRowHeights","initialized","virtualizationThreshold","onUpdatedView","FlexGridColumn","minWidth","isReadOnly","wordWrap","align","FlexGridCellTemplate","template","context","conditionalRowStyleCheck","conditionalRowStyles","ListBox","picker","initializedPicker","CollectionViewNavigator","headerFormat","byPage","cv","UnmatchedLocalTransactionsDetails","batchDetailsList","DataTable","Column","field","renderer","cellData","rowIndex","toLocaleString","UnmatchedLocalTransactionsDetailsComposite","Component","constructor","arguments","state","isReadyToRender","transportationTypeOptions","handleChange","lodash","this","localData","componentDidMount","userDetails","EntityResult","IsArchived","getBatchDetails","transaction","keyCode","key","KeyCodes","BCU_Code","RailDispatchManualEntry_TransactionNo","UnmatchedLocalTrans_BatchNo","obj","ShareHolderCode","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","getBatchDetailsForUI","setState","catch","loadingInfoList","detailList","recordID","loadingInfo","getBatchInfoFromLoadingDetails","LoadingDetailFPinfo","ArrLoadingDetailBP","Array","isArray","baseProductInfo","ArrLoadingDetailAdditive","additiveInfo","loading","productType","batchInfo","ID","ProductCode","ProductType","TankCode","MeterCode","GrossQuantity","QuantityUOM","NetQuantity","StartTotalizer","EndTotalizer","Density","ProductDensity","ProductDensityUOM","Pressure","PressureUOM","Temperature","TemperatureUOM","StartTime","EndTime","FinishedProductCode","BaseProductCode","AdditiveProductCode","render","TMDetailsHeader","newEntityName","onBack","LoadingPage","message","connect","getUserDetails","TokenAuth","UnmatchedLocalTransactionsSummaryComposite","tableData","onSelectionChange","WijmoGridComposite","UnmatchedLocalTransactionsComposite","operationsVisibility","PrimaryShareholder","isDetails","transportationType","activeItem","toUpperCase","isOpenDeleteConfirm","deleteReason","deleteReasonError","componentName","getUnmatchedLocalTransactionsList","handleRowClick","FunctionsList","functionGroups","remove","fnUnmatchedLocalTransactions","handleSelection","items","handleBack","handleDelete","deleteUnmatchedTransactionsKeys","Key","Value","requestEntity","Reason","LstRequests","isRefreshDataRequire","ResultDataList","res","notification","toast","NotifyEvent","notificationMessage","autoClose","messageType","getTransportationTypes","transportationTypeList","Constants","ROAD","RAIL","TransactionType","TransportationType","ShareholderCode","LocationCode","ErrorList","Table","PageAttibutes","WebPortalListPageSize","NoOfTerminalsToShow","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","closeOnDimmerClick","Input","fluid","label","reserveSpace","entityCode","popUpContents","margin","List","view","modify","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","shareholderCode","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","shipmentCode","orderCode","receiptCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","bayCode","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks","getLocalizedMessage","delimiter","getLocalizedMessageParameters","messageOptions","splice","Notification","severity","hasIcon","title","messageResultDetails","messageResult","entityKeyDetails","keyFields","keyValues","isSuccess","errorMessage"],"sourceRoot":""}