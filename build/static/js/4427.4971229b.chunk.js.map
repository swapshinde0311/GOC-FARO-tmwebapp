{"version":3,"file":"static/js/4427.4971229b.chunk.js","mappings":"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","sources":["Components/Composite/Common/TMDetailsKPILayout.jsx","Components/UIBase/Details/CarrierDetails.jsx","Components/Composite/Details/CarrierDetailsComposite.jsx","Components/UIBase/Common/AssociatedTerminals.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/DateFieldsInEntities.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nexport default function TMDetailsKPILayout({\r\n    KPIList,\r\n    pageName,\r\n    rowHeight,\r\n    widgetHeight,\r\n    isDraggable,\r\n    isResizable,\r\n    kpiDisplayTopBreakpoint\r\n}) {\r\n    const [KPIDisplays, setKPIDisplays] = useState(1);\r\n\r\n    const kpiDiv = React.useRef(null);\r\n\r\n    const hideKpis = () => {\r\n        let currentScrollPos = window.pageYOffset;\r\n        let KPIDisplay = KPIDisplays;\r\n\r\n        // hide kpis based on div position to top of the window \r\n        if (kpiDiv.current && kpiDiv.current.getBoundingClientRect().top < kpiDisplayTopBreakpoint) {\r\n            KPIDisplay = 0;\r\n        }\r\n        // show the kpis once at top of the screen\r\n        else if (currentScrollPos === 0) {\r\n            KPIDisplay = 1\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n        setKPIDisplays(KPIDisplay);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\") {\r\n            window.addEventListener(\"scroll\", hideKpis);\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // remove listener on unmount\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", hideKpis)\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={kpiDiv}>\r\n            {KPIDisplays === 1 ? <TranslationConsumer>\r\n                {(t) => (\r\n                    <div style={{ marginTop: \"6px\" }}>\r\n                        <ErrorBoundary>\r\n                            <KPIDashboardLayout\r\n                                kpiList={KPIList}\r\n                                isDraggable={isDraggable}\r\n                                isResizable={isResizable}\r\n                                rowHeight={rowHeight}\r\n                                widgetHeight={widgetHeight}\r\n                                pageName={pageName}\r\n                            ></KPIDashboardLayout>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n                )}\r\n            </TranslationConsumer> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nTMDetailsKPILayout.propTypes = {\r\n    kpiDisplayTopBreakpoint: PropTypes.number\r\n}\r\n\r\nTMDetailsKPILayout.defaultProps = {\r\n    kpiDisplayTopBreakpoint: 100\r\n}","import React from \"react\";\r\nimport { Select, Checkbox, InputLabel } from \"@scuf/common\";\r\nimport { Accordion, Input, DatePicker } from \"@scuf/common\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nCarrierDetails.propTypes = {\r\n  carrier: PropTypes.object.isRequired,\r\n  modCarrier: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  attributeValidationErrors: PropTypes.object.isRequired,\r\n  onAttributeDataChange: PropTypes.func.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    shareholders: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n  }).isRequired,\r\n  genericProps: PropTypes.shape({\r\n    transportationType: PropTypes.oneOf(\r\n      Object.values(Constants.TransportationType)\r\n    ),\r\n  }),\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  onCarrierIdentifierChange: PropTypes.func.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  onActiveStatusChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n};\r\nCarrierDetails.defaultProps = {\r\n  genericProps: { transportationType: \"ROAD\" },\r\n  isEnterpriseNode: false,\r\n};\r\n\r\nexport function CarrierDetails({\r\n  carrier,\r\n  modCarrier,\r\n  validationErrors,\r\n  attributeValidationErrors,\r\n  modAttributeMetaDataList,\r\n  listOptions,\r\n  genericProps,\r\n  onFieldChange,\r\n  onDateTextChange,\r\n  onCarrierIdentifierChange,\r\n  onShareholderChange,\r\n  onAllTerminalsChange,\r\n  onActiveStatusChange,\r\n  isEnterpriseNode,\r\n  onAttributeDataChange,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n  //console.log(Date.parse(\"2020-06-05T11:04:13.717\"));\r\n  // console.log(\"details product\", listOptions);\r\n  var transportationType =\r\n    genericProps.transportationType === undefined\r\n      ? Constants.TransportationType.ROAD\r\n      : genericProps.transportationType;\r\n  //throw new Error(\"Test\");\r\n  function getCarrierIdentityType(identityNumber) {\r\n    // console.log(identityNumber);\r\n    var corectedIdentity = identityNumber;\r\n    if (\r\n      identityNumber === undefined ||\r\n      identityNumber === \"\" ||\r\n      identityNumber === null\r\n    ) {\r\n      corectedIdentity = \"000000000U\";\r\n    }\r\n    var lastChar = corectedIdentity[corectedIdentity.length - 1];\r\n    //console.log(lastChar);\r\n    if (lastChar !== \"U\" && lastChar !== \"F\" && lastChar !== \"S\")\r\n      lastChar = \"U\";\r\n    // console.log(lastChar);\r\n    return lastChar;\r\n  }\r\n  function getCarrierIdentifierNumber(identityNumber) {\r\n    var corectedIdentity = identityNumber;\r\n    if (\r\n      identityNumber === undefined ||\r\n      identityNumber === \"\" ||\r\n      identityNumber === null\r\n    ) {\r\n      corectedIdentity = \"000000000U\";\r\n    }\r\n    return corectedIdentity.substring(0, corectedIdentity.length - 1);\r\n  }\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCarrier.Code}\r\n                indicator=\"required\"\r\n                disabled={carrier.Code !== \"\"}\r\n                onChange={(data) => onFieldChange(\"Code\", data)}\r\n                label={t(\"CarrierDetails_CarrierCode\")}\r\n                error={t(validationErrors.Code)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCarrier.Name}\r\n                onChange={(data) => onFieldChange(\"Name\", data)}\r\n                indicator=\"required\"\r\n                label={t(\"CarrierDetails_Name\")}\r\n                error={t(validationErrors.Name)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            {transportationType === Constants.TransportationType.ROAD ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder={t(\"Common_Select\")}\r\n                  label={t(\"CarrierDetails_ShareHolder\")}\r\n                  value={modCarrier.ShareholderCode}\r\n                  options={listOptions.shareholders}\r\n                  onChange={(data) => {\r\n                    //onFieldChange(\"ShareholderCode\", data);\r\n                    onShareholderChange([data], \"ShareholderCode\");\r\n                  }}\r\n                  indicator=\"required\"\r\n                  error={t(validationErrors.ShareholderCode)}\r\n                  reserveSpace={false}\r\n                  disabled={carrier.Code !== \"\"}\r\n                  search={true}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder={t(\"Common_Select\")}\r\n                  label={t(\"CarrierDetails_ShareHolder\")}\r\n                  value={modCarrier.ShareholderCodes}\r\n                  multiple={true}\r\n                  options={listOptions.shareholders}\r\n                  onChange={(data) => {\r\n                    // onFieldChange(\"ShareholderCodes\", data);\r\n                    onShareholderChange(data, \"ShareholderCodes\");\r\n                  }}\r\n                  indicator=\"required\"\r\n                  error={t(validationErrors.ShareholderCodes)}\r\n                  reserveSpace={false}\r\n                  search={true}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modCarrier.PermitNumber === null\r\n                    ? \"\"\r\n                    : modCarrier.PermitNumber\r\n                }\r\n                onChange={(data) => onFieldChange(\"PermitNumber\", data)}\r\n                label={t(\"CarrierDetails_PermitNumber\")}\r\n                error={t(validationErrors.PermitNumber)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                //value={modCarrier.PermitExpiryDate.toISOString()}\r\n                value={\r\n                  modCarrier.PermitExpiryDate === null\r\n                    ? \"\"\r\n                    : Utilities.convertStringToCommonDateFormat(\r\n                        modCarrier.PermitExpiryDate\r\n                      )\r\n                }\r\n                displayFormat={getCurrentDateFormat()}\r\n                label={t(\"CarrierDetails_PermitExpiry\")}\r\n                showYearSelector=\"true\"\r\n                disablePast={true}\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"PermitExpiryDate\", data)}\r\n                onTextChange={(value, error) => {\r\n                  onDateTextChange(\"PermitExpiryDate\", value, error);\r\n                }}\r\n                error={t(validationErrors.PermitExpiryDate)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <InputLabel\r\n                label={t(\"Carrier_Identification_Number\")}\r\n              ></InputLabel>\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <div style={{ width: \"48%\" }}>\r\n                  <Select\r\n                    fluid\r\n                    //placeholder=\"Select\"\r\n                    // label={t(\"Carrier_Identification_Number\")}\r\n                    value={getCarrierIdentityType(modCarrier.IdentityNumber)}\r\n                    options={Constants.carrierIdentifierOptions}\r\n                    onChange={(data) =>\r\n                      onCarrierIdentifierChange(\r\n                        \"IdentityNumber\",\r\n                        \"identifier\",\r\n                        data\r\n                      )\r\n                    }\r\n                    //indicator=\"required\"\r\n                    //error={t(validationErrors.IdentityNumber)}\r\n                    reserveSpace={false}\r\n                    search={true}\r\n                    noResultsMessage={t(\"noResultsMessage\")}\r\n                  />\r\n                </div>\r\n                <div style={{ width: \"48%\" }}>\r\n                  <Input\r\n                    placeholder=\"Input\"\r\n                    fluid\r\n                    value={getCarrierIdentifierNumber(\r\n                      modCarrier.IdentityNumber\r\n                    )}\r\n                    onChange={(data) =>\r\n                      onCarrierIdentifierChange(\r\n                        \"IdentityNumber\",\r\n                        \"IdentifierNumber\",\r\n                        data\r\n                      )\r\n                    }\r\n                    disabled={\r\n                      getCarrierIdentityType(modCarrier.IdentityNumber) === \"U\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              {validationErrors.IdentityNumber !== \"\" ? (\r\n                <div className=\"below-text\">\r\n                  <span className=\"ui error-message\">\r\n                    {t(validationErrors.IdentityNumber)}\r\n                  </span>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modCarrier.ContactPerson === null\r\n                    ? \"\"\r\n                    : modCarrier.ContactPerson\r\n                }\r\n                onChange={(data) => onFieldChange(\"ContactPerson\", data)}\r\n                label={t(\"CarrierDetails_ContactPerson\")}\r\n                error={t(validationErrors.ContactPerson)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCarrier.Address === null ? \"\" : modCarrier.Address}\r\n                onChange={(data) => onFieldChange(\"Address\", data)}\r\n                label={t(\"CarrierDetails_Address\")}\r\n                error={t(validationErrors.Address)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4 checkboxSelect\">\r\n              <Checkbox\r\n                label={t(\"CarrierDetails_AllowWeighIn\")}\r\n                checked={modCarrier.AllowOnlyWeighIn}\r\n                onChange={(checked) =>\r\n                  onFieldChange(\"AllowOnlyWeighIn\", checked)\r\n                }\r\n              />\r\n              <Checkbox\r\n                label={t(\"CarrierDetails_EnforceSeq\")}\r\n                checked={modCarrier.EnforceSequence}\r\n                onChange={(checked) =>\r\n                  onFieldChange(\"EnforceSequence\", checked)\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCarrier.Phone === null ? \"\" : modCarrier.Phone}\r\n                onChange={(data) => onFieldChange(\"Phone\", data)}\r\n                label={t(\"CarrierDetails_Phone\")}\r\n                error={t(validationErrors.Phone)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCarrier.Mobile === null ? \"\" : modCarrier.Mobile}\r\n                onChange={(data) => onFieldChange(\"Mobile\", data)}\r\n                label={t(\"CarrierDetails_MobileNumber\")}\r\n                error={t(validationErrors.Mobile)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCarrier.Email === null ? \"\" : modCarrier.Email}\r\n                onChange={(data) => onFieldChange(\"Email\", data)}\r\n                label={t(\"CarrierDetails_Email\")}\r\n                error={t(validationErrors.Email)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modCarrier.Description === null ? \"\" : modCarrier.Description\r\n                }\r\n                onChange={(data) => onFieldChange(\"Description\", data)}\r\n                label={t(\"CarrierDetails_Desc\")}\r\n                error={t(validationErrors.Description)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"FinishedProductInfo_Select\")}\r\n                label={t(\"DriverInfo_Status\")}\r\n                value={modCarrier.Status}\r\n                options={[\r\n                  { text: t(\"ViewShipment_Ok\"), value: true },\r\n                  { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                ]}\r\n                onChange={(data) => onActiveStatusChange(data)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modCarrier.Remarks === null ? \"\" : modCarrier.Remarks}\r\n                label={t(\"DriverInfo_Remarks\")}\r\n                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                indicator={\r\n                  modCarrier.Status !== carrier.Status ? \"required\" : \"\"\r\n                }\r\n                error={t(validationErrors.Remarks)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            {isEnterpriseNode ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <AssociatedTerminals\r\n                  terminalList={listOptions.terminalCodes}\r\n                  selectedTerminal={modCarrier.TerminalCodes}\r\n                  error={validationErrors.TerminalCodes}\r\n                  onFieldChange={onFieldChange}\r\n                  onCheckChange={onAllTerminalsChange}\r\n                ></AssociatedTerminals>\r\n                {/* <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"TerminalCodes\")}\r\n                value={modCarrier.TerminalCodes}\r\n                multiple={true}\r\n                options={listOptions.terminalCodes}\r\n                onChange={(data) => onFieldChange(\"ShareholderCodes\", data)}\r\n                indicator=\"required\"\r\n                error={t(validationErrors.ShareholderCodes)}\r\n                reserveSpace={false}\r\n              /> */}\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          {modAttributeMetaDataList.length > 0\r\n            ? modAttributeMetaDataList.map((attire) => (\r\n                <ErrorBoundary>\r\n                  <Accordion>\r\n                    <Accordion.Content\r\n                      className=\"attributeAccordian\"\r\n                      title={\r\n                        isEnterpriseNode\r\n                          ? attire.TerminalCode + \" - \" + t(\"Attributes_Header\")\r\n                          : t(\"Attributes_Header\")\r\n                      }\r\n                    >\r\n                      <AttributeDetails\r\n                        selectedAttributeList={attire.attributeMetaDataList}\r\n                        handleCellDataEdit={onAttributeDataChange}\r\n                        attributeValidationErrors={handleValidationErrorFilter(\r\n                          attributeValidationErrors,\r\n                          attire.TerminalCode\r\n                        )}\r\n                      ></AttributeDetails>\r\n                    </Accordion.Content>\r\n                  </Accordion>\r\n                </ErrorBoundary>\r\n              ))\r\n            : null}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { CarrierDetails } from \"../../UIBase/Details/CarrierDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { carrierValidationDef } from \"../../../JS/ValidationDef\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { emptyCarrier } from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { functionGroups, fnCarrierCompany, fnKPIInformation } from \"../../../JS/FunctionGroups\";\r\nimport lodash from \"lodash\";\r\nimport { carrierAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport * as DateFieldsInEntities from \"../../../JS/DateFieldsInEntities\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { kpiCarrierDetail } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass CarrierDetailsComposite extends Component {\r\n  state = {\r\n    carrier: lodash.cloneDeep(emptyCarrier),\r\n    modCarrier: {},\r\n    validationErrors:\r\n      Utilities.getInitialValidationErrors(carrierValidationDef),\r\n    isReadyToRender: false,\r\n    listOptions: { shareholders: this.getShareholders(), terminalCodes: [] },\r\n    saveEnabled: false,\r\n    attributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    carrierCompanyKPIList: [],\r\n    showAuthenticationLayout: false,\r\n    tempCarrier: {},\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modCarrier = lodash.cloneDeep(this.state.modCarrier);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modCarrier[propertyName] = data;\r\n      this.setState({ modCarrier });\r\n      if (carrierValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          carrierValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n      if (propertyName === \"TerminalCodes\") {\r\n        this.terminalSelectionChange(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"CarrierCompanyComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modAttributeMetaDataList = [];\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n      var modCarrier = lodash.cloneDeep(this.state.modCarrier);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        });\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.carriercompany.forEach(function (\r\n            attributeMetaData\r\n          ) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue = modCarrier.Attributes.find(\r\n                (carriercompanyAttribute) => {\r\n                  return carriercompanyAttribute.TerminalCode === terminal;\r\n                }\r\n              );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modAttributeMetaDataList = [];\r\n      modAttributeMetaDataList = attributesTerminalsList;\r\n      modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modAttributeMetaDataList\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n\r\n      this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"CarrierDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList.carriercompany) &&\r\n        attributeMetaDataList.carriercompany.length > 0\r\n      ) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.carriercompany[0].TerminalCode,\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"CarrierDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.carrier.Code !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getCarrierCompany(nextProps);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"CarrierDetailyComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getAttributes(this.props);\r\n    } catch (error) {\r\n      console.log(\r\n        \"CarrierCompanyComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(props) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [carrierAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.carriercompany\r\n                ),\r\n            },\r\n            () => this.getCarrierCompany(props)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  getShareholders() {\r\n    return Utilities.transferListtoOptions(\r\n      this.props.userDetails.EntityResult.ShareholderList\r\n    );\r\n  }\r\n  getCarrierCompany(props) {\r\n    var transportationType = this.getTransportationType();\r\n    let selectedRow = props.selectedRow;\r\n    emptyCarrier.TransportationType = transportationType;\r\n    var listOptions = lodash.cloneDeep(this.state.listOptions);\r\n    if (selectedRow.Common_Code === undefined) {\r\n      listOptions.terminalCodes = [];\r\n      this.setState(\r\n        {\r\n          carrier: lodash.cloneDeep(emptyCarrier),\r\n          modCarrier: lodash.cloneDeep(emptyCarrier),\r\n          listOptions,\r\n          modAttributeMetaDataList: [],\r\n          carrierCompanyKPIList:[],\r\n          isReadyToRender: true,\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnCarrierCompany\r\n          ),\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode === false)\r\n            this.localNodeAttribute();\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.carrierCode,\r\n        value: selectedRow.Common_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: transportationType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: selectedRow.Common_Shareholder,\r\n      keyDataCode: KeyCodes.carrierCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetCarrier,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              carrier: lodash.cloneDeep(result.EntityResult),\r\n              modCarrier: lodash.cloneDeep(result.EntityResult),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnCarrierCompany\r\n              ),\r\n            },\r\n            () => {\r\n              this.getKPIList(result.EntityResult.ShareholderCode, result.EntityResult.Code);\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n              this.getTerminalsList(\r\n                transportationType === Constants.TransportationType.ROAD\r\n                  ? [result.EntityResult.ShareholderCode]\r\n                  : result.EntityResult.ShareholderCodes\r\n              );\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            carrier: lodash.cloneDeep(emptyCarrier),\r\n            modCarrier: lodash.cloneDeep(emptyCarrier),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetCarrier:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Carrier:\", error, props);\r\n      });\r\n  }\r\n\r\n  getTerminalsList(shareholderList) {\r\n    try {\r\n      if (\r\n        shareholderList !== null &&\r\n        shareholderList.length > 0 &&\r\n        shareholderList[0] !== undefined &&\r\n        shareholderList[0] !== \"\"\r\n      ) {\r\n        axios(\r\n          RestAPIs.GetTerminals,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            shareholderList,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            var listOptions = lodash.cloneDeep(this.state.listOptions);\r\n            var carrier = lodash.cloneDeep(this.state.carrier);\r\n            var modCarrier = lodash.cloneDeep(this.state.modCarrier);\r\n            listOptions.terminalCodes = response.data.EntityResult;\r\n            this.setState({ listOptions });\r\n            if (\r\n              carrier.Code === undefined ||\r\n              carrier.Code === \"\" ||\r\n              carrier.Code === null\r\n            ) {\r\n              if (listOptions.terminalCodes.length === 1) {\r\n                modCarrier.TerminalCodes = [...listOptions.terminalCodes];\r\n              } else {\r\n                modCarrier.TerminalCodes = [];\r\n              }\r\n            }\r\n            if (Array.isArray(modCarrier.TerminalCodes)) {\r\n              modCarrier.TerminalCodes = listOptions.terminalCodes.filter((x) =>\r\n                modCarrier.TerminalCodes.includes(x)\r\n              );\r\n            }\r\n            this.setState(modCarrier);\r\n          }\r\n        });\r\n      } else {\r\n        var listOptions = lodash.cloneDeep(this.state.listOptions);\r\n        var modCarrier = lodash.cloneDeep(this.state.modCarrier);\r\n        modCarrier.TerminalCodes = [];\r\n        listOptions.terminalCodes = [];\r\n        this.setState({ modCarrier, listOptions });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"CarrierDetailyComposite:Error occured on getTerminalsList\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleshareholderChange = (shareholderList, fieldName) => {\r\n    var modCarrier = lodash.cloneDeep(this.state.modCarrier);\r\n    try {\r\n      if (fieldName === \"ShareholderCodes\") {\r\n        modCarrier[fieldName] = shareholderList;\r\n      } else {\r\n        if (shareholderList.length > 0)\r\n          modCarrier[fieldName] = shareholderList[0];\r\n      }\r\n      this.setState({ modCarrier }, this.getTerminalsList(shareholderList));\r\n    } catch (error) {\r\n      console.log(\r\n        \"CarrierDetailyComposite:Error occured on handleshareholderChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getTransportationType() {\r\n    var transportationType = Constants.TransportationType.ROAD;\r\n    const { genericProps } = this.props;\r\n    if (\r\n      genericProps !== undefined &&\r\n      genericProps.transportationType !== undefined\r\n    ) {\r\n      transportationType = genericProps.transportationType;\r\n    }\r\n    return transportationType;\r\n  }\r\n\r\n  validateSave(modCarrier, attributeList) {\r\n    var transportationType = this.getTransportationType();\r\n    //const { modCarrier } = this.state;\r\n    var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    Object.keys(carrierValidationDef).forEach(function (key) {\r\n      validationErrors[key] = Utilities.validateField(\r\n        carrierValidationDef[key],\r\n        modCarrier[key]\r\n      );\r\n    });\r\n    if (modCarrier.Status !== this.state.carrier.Status) {\r\n      if (modCarrier.Remarks === null || modCarrier.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"OriginTerminal_RemarksRequired\";\r\n      }\r\n    }\r\n    //Permit Expiry validations\r\n    // if (validationErrors[\"PermitExpiryDate\"] === \"\") {\r\n    //   if (\r\n    //     Date.parse(modCarrier.PermitExpiryDate) <\r\n    //     new Date().setHours(0, 0, 0, 0)\r\n    //   ) {\r\n    //     validationErrors[\"PermitExpiryDate\"] =\r\n    //       \"CarrierDetails_regexpPermitExpiryDate2\";\r\n    //   }\r\n    // }\r\n    //Shareholder validations\r\n    if (transportationType === Constants.TransportationType.ROAD) {\r\n      if (\r\n        modCarrier.ShareholderCode === null ||\r\n        modCarrier.ShareholderCode.trim() === \"\"\r\n      )\r\n        validationErrors[\"ShareholderCode\"] =\r\n          \"MarineReceipt_MandatoryShareholder\";\r\n    } else {\r\n      if (\r\n        modCarrier.ShareholderCodes === null ||\r\n        modCarrier.ShareholderCodes.length === 0\r\n      )\r\n        validationErrors[\"ShareholderCodes\"] =\r\n          \"MarineReceipt_MandatoryShareholder\";\r\n    }\r\n    //Carrier Identity Validations\r\n    const expressionValidator = \"^[0-9]+$\";\r\n    const identityNumber = modCarrier[\"IdentityNumber\"];\r\n    if (\r\n      identityNumber !== undefined &&\r\n      identityNumber !== \"\" &&\r\n      identityNumber !== null\r\n    ) {\r\n      const value = identityNumber.substring(0, identityNumber.length - 1);\r\n      if (value.length > 9) {\r\n        validationErrors[\"IdentityNumber\"] = \"CarrierDetails_MaxLengthExceeded\";\r\n      } else if (!value.match(expressionValidator)) {\r\n        validationErrors[\"IdentityNumber\"] = \"CarrierDetails_regMobile\";\r\n      } else validationErrors[\"IdentityNumber\"] = \"\";\r\n    }\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n    var returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    if (returnValue)\r\n       returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    return returnValue;\r\n  }\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n  saveCarrier= () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempCarrier = lodash.cloneDeep(this.state.tempCarrier);\r\n\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      tempCarrier.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n      tempCarrier = Utilities.convertDatesToString(\r\n        DateFieldsInEntities.DatesInEntity.CarrierCompany,\r\n        tempCarrier\r\n      );\r\n      this.state.carrier.Code === \"\"\r\n        ? this.createCarrier(tempCarrier)\r\n        : this.updateCarrier(tempCarrier);\r\n     \r\n    } catch (error) {\r\n      console.log(\"CarrierDetailsComposite : Error in saveBaseProduct\");\r\n    }\r\n  };\r\n  handleSave = () => {\r\n    try {\r\n      // this.setState({ saveEnabled: false });\r\n      let modCarrier = lodash.cloneDeep(this.state.modCarrier);\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n\r\n      if (this.validateSave(modCarrier, attributeList)) {\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempCarrier = lodash.cloneDeep(modCarrier);\r\n        this.setState({ showAuthenticationLayout, tempCarrier }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveCarrier();\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"CarrierDetailyComposite:Error occured on handleSave\", error);\r\n    }\r\n  };\r\n \r\n\r\n  createCarrier(modCarrier) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.carrierCode,\r\n        value: modCarrier.Code,\r\n      },\r\n    ];\r\n\r\n    var obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.carrierCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modCarrier,\r\n    };\r\n    // obj.Entity.ShareholderCode = this.state.modCarrier.ShareholderCode;\r\n    // obj.Entity.TransportationType = \"ROAD\";\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"CarrierDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"CarrierDetails_CarrierCode\"],\r\n          keyValues: [this.state.modCarrier.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    //console.log(JSON.stringify(obj));\r\n    axios(\r\n      RestAPIs.CreateCarrier,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n      //   {\r\n      //   method: \"POST\",\r\n      //   withCredentials: true,\r\n      //   headers: {\r\n      //     \"content-type\": \"application/json\",\r\n      //   },\r\n      //   data: obj,\r\n      // }\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        //console.log(result);\r\n        //console.log(\"IsSuccess-\", result.IsSuccess);\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            carrier: lodash.cloneDeep(this.state.modCarrier),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnCarrierCompany\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n            //shareholderDisabled: true,\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnCarrierCompany\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          console.log(\"Error in CreateCarrier:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(this.state.modCarrier, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnCarrierCompany\r\n          ),\r\n          showAuthenticationLayout: false,\r\n\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modCarrier, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateCarrier(modCarrier) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.carrierCode,\r\n        value: modCarrier.Code,\r\n      },\r\n    ];\r\n\r\n    var obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.carrierCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modCarrier,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"CarrierDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"CarrierDetails_CarrierCode\"],\r\n          keyValues: [this.state.modCarrier.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    //console.log(JSON.stringify(obj));\r\n    axios(\r\n      RestAPIs.UpdateCarrier,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        // console.log(result);\r\n        // console.log(\"IsSuccess-\", result.IsSuccess);\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            // carrier: lodash.cloneDeep(this.state.modCarrier),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnCarrierCompany\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          this.getCarrierCompany({\r\n            selectedRow: {\r\n              Common_Code: this.state.modCarrier.Code,\r\n              Common_Shareholder: this.state.modCarrier.ShareholderCode,\r\n            },\r\n          });\r\n        } else {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnCarrierCompany\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in UpdateCarrier:\", result.ErrorList);\r\n        }\r\n\r\n        this.props.onSaved(this.state.modCarrier, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modCarrier, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnCarrierCompany\r\n          ),\r\n          showAuthenticationLayout: false,\r\n\r\n        });\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      var modCarrier = lodash.cloneDeep(this.state.carrier);\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      const carrier = lodash.cloneDeep(this.state.carrier);\r\n      var transportationType = this.getTransportationType();\r\n\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState(\r\n        {\r\n          modCarrier: { ...carrier },\r\n          validationErrors,\r\n          modAttributeMetaDataList: [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(modCarrier.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n          this.getTerminalsList(\r\n            transportationType === Constants.TransportationType.ROAD\r\n              ? [carrier.ShareholderCode]\r\n              : carrier.ShareholderCodes\r\n          );\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"CarrierDetailyComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      var validationErrors = { ...this.state.validationErrors };\r\n      var modCarrier = lodash.cloneDeep(this.state.modCarrier);\r\n\r\n      validationErrors[propertyName] = error;\r\n      modCarrier[propertyName] = value;\r\n      this.setState({ validationErrors, modCarrier });\r\n    } catch (error) {\r\n      console.log(\r\n        \"CarrierDetailyComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleCarrierIdentityChange = (propertyName, propertyType, value) => {\r\n    try {\r\n      var validationErrors = { ...this.state.validationErrors };\r\n      var modCarrier = lodash.cloneDeep(this.state.modCarrier);\r\n      const defaultValue = \"000000000U\";\r\n      const expressionValidator = \"^[0-9]+$\";\r\n      var oldValue = modCarrier[propertyName];\r\n      if (oldValue === undefined || oldValue === \"\" || oldValue === null) {\r\n        oldValue = defaultValue;\r\n      }\r\n      var updatedValue = \"\";\r\n      if (propertyType === \"identifier\") {\r\n        if (value === \"U\") {\r\n          updatedValue = defaultValue;\r\n          validationErrors[propertyName] = \"\";\r\n        } else\r\n          updatedValue = oldValue.substring(0, oldValue.length - 1) + value;\r\n      } else {\r\n        if (value.length > 9) {\r\n          validationErrors[propertyName] = \"CarrierDetails_MaxLengthExceeded\";\r\n        } else if (!value.match(expressionValidator)) {\r\n          validationErrors[propertyName] = \"CarrierDetails_regMobile\";\r\n        } else validationErrors[propertyName] = \"\";\r\n        updatedValue = value + oldValue[oldValue.length - 1];\r\n      }\r\n      modCarrier[propertyName] = updatedValue;\r\n      this.setState({ modCarrier, validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"CarrierDetailyComposite:Error occured on handleCarrierIdentityChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.carriercompany\r\n          ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      var listOptions = { ...this.state.listOptions };\r\n      var modCarrier = lodash.cloneDeep(this.state.modCarrier);\r\n      if (checked) modCarrier.TerminalCodes = [...listOptions.terminalCodes];\r\n      else modCarrier.TerminalCodes = [];\r\n      this.setState({ modCarrier });\r\n      this.terminalSelectionChange(modCarrier.TerminalCodes);\r\n    } catch (error) {\r\n      console.log(\r\n        \"CarrierDetailyComposite:Error occured on handleAllTerminasChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modCarrier = lodash.cloneDeep(this.state.modCarrier);\r\n      modCarrier.Status = value;\r\n      if (modCarrier.Status !== this.state.carrier.Active)\r\n        modCarrier.Remarks = \"\";\r\n      this.setState({ modCarrier });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors,modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"CarrierDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  getKPIList(shareholder, carrierCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      \r\n      var transportationType = this.getTransportationType();\r\n      let Parameters = transportationType === Constants.TransportationType.ROAD ? [{ key: \"ShareholderCode\", value: shareholder }, {\r\n        key: \"CarrierCode\", value: carrierCode\r\n      }] : [{\r\n        key: \"CarrierCode\", value: carrierCode\r\n      }];\r\n      let objKPIRequestData = {\r\n        PageName: kpiCarrierDetail,\r\n        TransportationType: transportationType,\r\n        InputParameters: Parameters,\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              carrierCompanyKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ carrierCompanyKPIList: [] });\r\n            console.log(\"Error in vehicle KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Vehicle KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n  render() {\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"CarrierDetails_LastUpdatedDateTime\",\r\n        fieldValue:\r\n          new Date(this.state.modCarrier.LastUpdatedDate).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modCarrier.LastUpdatedDate).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"AccessCardInfo_LastActive\",\r\n        fieldValue:\r\n          new Date(this.state.modCarrier.LastActiveDate).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modCarrier.LastActiveDate).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"CarrierDetails_CreatedDateTime\",\r\n        fieldValue:\r\n          new Date(this.state.modCarrier.CreatedDate).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modCarrier.CreatedDate).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.carrier.Code}\r\n            newEntityName=\"CarrierDetails_CarrierHeader\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <TMDetailsKPILayout KPIList={this.state.carrierCompanyKPIList}> </TMDetailsKPILayout>\r\n        <ErrorBoundary>\r\n          <CarrierDetails\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            attributeMetaDataList={this.state.attributeMetaDataList}\r\n            carrier={this.state.carrier}\r\n            modCarrier={this.state.modCarrier}\r\n            validationErrors={this.state.validationErrors}\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            listOptions={this.state.listOptions}\r\n            genericProps={this.props.genericProps}\r\n            onFieldChange={this.handleChange}\r\n            onDateTextChange={this.handleDateTextChange}\r\n            onCarrierIdentifierChange={this.handleCarrierIdentityChange}\r\n            onShareholderChange={this.handleshareholderChange}\r\n            onAllTerminalsChange={this.handleAllTerminalsChange}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            onAttributeDataChange={this.handleAttributeDataChange} \r\n          ></CarrierDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.carrier.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnCarrierCompany}\r\n            handleOperation={this.saveCarrier}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CarrierDetailsComposite);\r\n\r\nCarrierDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  genericProps: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Select, Checkbox } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nAssociatedTerminals.propTypes = {\r\n  terminalList: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedTerminal: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  validationError: PropTypes.string,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCheckChange: PropTypes.func.isRequired,\r\n};\r\nAssociatedTerminals.defaultProps = {\r\n  terminalList: [],\r\n  selectedTerminal: [],\r\n  validationError: \"\",\r\n};\r\nexport function AssociatedTerminals({\r\n  terminalList,\r\n  selectedTerminal,\r\n  validationError,\r\n  onFieldChange,\r\n  onCheckChange,\r\n}) {\r\n  //console.log(\"component terminalList\", terminalList);\r\n  if (selectedTerminal === null) selectedTerminal = [];\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div style={{ width: \"80%\" }}>\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"TerminalCodes\")}\r\n              value={selectedTerminal}\r\n              multiple={true}\r\n              options={Utilities.transferListtoOptions(terminalList)}\r\n              onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n              error={t(validationError)}\r\n              disabled={terminalList.length === 0}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"ddlSelectAll\">\r\n            <Checkbox\r\n              label={t(\"Common_All\")}\r\n              checked={\r\n                Array.isArray(selectedTerminal) &&\r\n                selectedTerminal.length === terminalList.length\r\n              }\r\n              onChange={(checked) => onCheckChange(checked)}\r\n            ></Checkbox>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","export const DatesInEntity={\r\n    Driver : [\r\n    \"License1ExpiryDate\",\r\n    \"License1IssueDate\",\r\n    \"License2IssueDate\",\r\n    \"License2ExpiryDate\",\r\n    \"License3IssueDate\",\r\n    \"License3ExpiryDate\",\r\n    \"HazardousLicenseExpiry\"\r\n  ],\r\n  CarrierCompany:[\"PermitExpiryDate\"],\r\n  PrimeMover:[\"RoadTaxNoIssueDate\",\"RoadTaxNoExpiryDate\",\"licenseExpiryDate\"],\r\n  Wagon:[\"LicenseExpiryDate\"],\r\n  Vehicle:[\"LicenseNoIssueDate\",\"LicenseNoExpiryDate\",\r\n  \"RoadTaxNoIssueDate\",\"RoadTaxNoExpiryDate\",\"Bondexpirydate\",\"HazardousLicenseExpiry\"],\r\n  Contract:[\"StartDate\",\"EndDate\"],\r\n  ContractItem:[\"StartDate\",\"EndDate\"],\r\n  Order:[\"OrderStartDate\",\"OrderEndDate\",\"OrderDate\",\"DeliveryDate\"],\r\n  AccessCard:[\"ExpiryDate\",\"IssueDate\",\"PasswordExpiryDate\"],\r\n  Trailer:[\"HazardousLicenseExpiry\"],\r\n  };","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMDetailsKPILayout","_ref","KPIList","pageName","rowHeight","widgetHeight","isDraggable","isResizable","kpiDisplayTopBreakpoint","KPIDisplays","setKPIDisplays","useState","kpiDiv","React","hideKpis","currentScrollPos","window","pageYOffset","KPIDisplay","current","getBoundingClientRect","top","useEffect","addEventListener","removeEventListener","_jsx","ref","children","TranslationConsumer","t","style","marginTop","ErrorBoundary","KPIDashboardLayout","kpiList","defaultProps","CarrierDetails","carrier","modCarrier","validationErrors","attributeValidationErrors","modAttributeMetaDataList","listOptions","genericProps","onFieldChange","onDateTextChange","onCarrierIdentifierChange","onShareholderChange","onAllTerminalsChange","onActiveStatusChange","isEnterpriseNode","onAttributeDataChange","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","transportationType","undefined","Constants","ROAD","getCarrierIdentityType","identityNumber","corectedIdentity","lastChar","length","getCarrierIdentifierNumber","substring","_jsxs","className","Input","fluid","value","Code","indicator","disabled","onChange","data","label","error","reserveSpace","Name","Select","placeholder","ShareholderCode","options","shareholders","search","noResultsMessage","ShareholderCodes","multiple","PermitNumber","DatePicker","PermitExpiryDate","Utilities","displayFormat","getCurrentDateFormat","showYearSelector","disablePast","onTextChange","InputLabel","display","justifyContent","width","IdentityNumber","ContactPerson","Address","Checkbox","checked","AllowOnlyWeighIn","EnforceSequence","Phone","Mobile","Email","Description","Status","text","Remarks","AssociatedTerminals","terminalList","terminalCodes","selectedTerminal","TerminalCodes","onCheckChange","map","attire","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","handleCellDataEdit","CarrierDetailsComposite","Component","constructor","arguments","state","lodash","emptyCarrier","carrierValidationDef","isReadyToRender","this","getShareholders","saveEnabled","carrierCompanyKPIList","showAuthenticationLayout","tempCarrier","handleChange","propertyName","setState","terminalSelectionChange","console","log","handleshareholderChange","shareholderList","fieldName","getTerminalsList","handleAuthenticationClose","saveCarrier","attributeList","Attributes","DateFieldsInEntities","CarrierCompany","createCarrier","updateCarrier","handleSave","validateSave","props","userDetails","EntityResult","IsWebPortalUser","handleReset","getTransportationType","Object","keys","forEach","key","IsEnterpriseNode","handleResetAttributeValidationError","localNodeAttribute","handleDateTextChange","handleCarrierIdentityChange","propertyType","defaultValue","expressionValidator","oldValue","updatedValue","match","handleAllTerminalsChange","handleActiveStatusChange","Active","handleAttributeDataChange","attribute","matchedAttributes","matchedAttributesList","filter","modattribute","Array","isArray","DefaultValue","selectedTerminals","attributesTerminalsList","existitem","carriercompany","attributeMetaData","Attributevalue","carriercompanyAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","push","componentWillReceiveProps","nextProps","selectedRow","Common_Code","tokenDetails","tokenInfo","getCarrierCompany","componentDidMount","IsArchived","getAttributes","axios","RestAPIs","carrierAttributeEntity","then","response","result","IsSuccess","ShareholderList","TransportationType","FunctionsList","functionGroups","add","fnCarrierCompany","keyCode","KeyCodes","obj","ShareHolderCode","Common_Shareholder","keyDataCode","modify","getKPIList","ErrorList","catch","includes","trim","returnValue","values","every","PrimaryShareholder","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","shareholder","carrierCode","view","fnKPIInformation","Parameters","objKPIRequestData","PageName","kpiCarrierDetail","InputParameters","ListKPIDetails","render","popUpContents","fieldValue","Date","LastUpdatedDate","toLocaleDateString","toLocaleTimeString","LastActiveDate","CreatedDate","TMDetailsHeader","entityCode","newEntityName","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","validationError","margin","Popup","element","Icon","marginLeft","root","name","size","position","List","content","Button","onClick","float","handleAttributeDateValue","convertAttributeDatetoString","chars","split","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","toString","DATETIME","toLocaleString","driverAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","DatesInEntity","Driver","PrimeMover","Wagon","Vehicle","Contract","ContractItem","Order","AccessCard","Trailer","getOptionsWithSelect","ddlOptions","selectOptionText","option","unshift","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}