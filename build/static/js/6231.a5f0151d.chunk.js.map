{"version":3,"file":"static/js/6231.a5f0151d.chunk.js","mappings":"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","sources":["Components/UIBase/Details/LocationDetails.jsx","Components/Composite/Details/LocationDetailsComposite.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Select, Accordion, Checkbox, Input } from '@scuf/common';\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { DataTable } from '@scuf/datatable';\r\nimport PropTypes from \"prop-types\";\r\n\r\nLocationDetails.propTypes = {\r\n    location: PropTypes.object.isRequired,\r\n    modLocation: PropTypes.object.isRequired,\r\n};\r\nexport default function LocationDetails({\r\n    location,\r\n    modLocation,\r\n    modAvailableDevices,\r\n    modAssociatedDevices,\r\n    selectedLocationType,\r\n    validationErrors,\r\n    checkBoxChanged,\r\n    onFieldChange,\r\n    handleCellDataEdit,\r\n    onActiveStatusChange,\r\n}) {\r\n    const [t] = useTranslation();\r\n    const handleCustomEditTextBox = (cellData) => {\r\n        return (\r\n            <Input\r\n                fluid\r\n                value={modAssociatedDevices[cellData.rowIndex][cellData.field]}\r\n                onChange={(value) => handleCellDataEdit(value, cellData)}\r\n                reserveSpace={false}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"detailsContainer\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={modLocation.LocationCode}\r\n                        label={t(selectedLocationType + \"Code\")}\r\n                        indicator=\"required\"\r\n                        disabled={location.LocationCode !== \"\"}\r\n                        onChange={(data) => onFieldChange(\"LocationCode\", data)}\r\n                        error={t(validationErrors.LocationCode)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={modLocation.LocationName}\r\n                        label={t(selectedLocationType + \"Name\")}\r\n                        indicator=\"required\"\r\n                        onChange={(data) => onFieldChange(\"LocationName\", data)}\r\n                        error={t(validationErrors.LocationName)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={selectedLocationType}\r\n                        disabled=\"true\"\r\n                        label={t(\"LocationType\")}\r\n                        onChange={(data) => onFieldChange(\"LocationType\", data)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={\r\n                            modLocation.Description === null\r\n                                ? \"\"\r\n                                : modLocation.Description\r\n                        }\r\n                        label={t(\"FinishedProductList_Description\")}\r\n                        onChange={(data) => onFieldChange(\"Description\", data)}\r\n                        error={t(validationErrors.Description)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                        fluid\r\n                        placeholder={t(\"FinishedProductInfo_Select\")}\r\n                        label={t(\"Cust_Status\")}\r\n                        value={modLocation.Active}\r\n                        options={[\r\n                            { text: t(\"ViewShipment_Ok\"), value: true },\r\n                            { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                        ]}\r\n                        onChange={(data) => onActiveStatusChange(data)}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={\r\n                            modLocation.Remarks === null ? \"\" : modLocation.Remarks\r\n                        }\r\n                        label={t(\"Cust_Remarks\")}\r\n                        onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                        indicator={\r\n                            modLocation.Active !== location.Active ? \"required\" : \"\"\r\n                        }\r\n                        error={t(validationErrors.Remarks)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3 pr-1 pb-0\">\r\n                    <h5>{t(\"Loc_AvailableDevices\")}</h5>\r\n                    <Accordion>\r\n                        {\r\n                            modAvailableDevices.map((AvailableDeviceList) =>\r\n                                <Accordion.Content title={AvailableDeviceList.DeviceType} arrowPosition=\"left\">\r\n                                    {AvailableDeviceList.DeviceList.map((deviceList) =>\r\n                                        <div>\r\n                                            <Checkbox label={deviceList.DeviceCode} checked={deviceList.IsAssociated}\r\n                                                onChange={(checked) => checkBoxChanged(deviceList.DeviceCode, AvailableDeviceList.DeviceType, checked)} />\r\n                                        </div>\r\n\r\n                                    )}\r\n                                </Accordion.Content>\r\n                            )\r\n                        }\r\n                    </Accordion>\r\n                </div>\r\n                <div className=\"col-9 pb-0\">\r\n                    <h5>{t(\"Loc_AssociatedDevices\")}</h5>\r\n                    <DataTable\r\n                        data={modAssociatedDevices}\r\n                    >\r\n                        <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            key=\"DeviceCode\"\r\n                            field=\"DeviceCode\"\r\n                            header={t(\"Loc_DeviceCode\")}\r\n                            editable={true}\r\n                            sortable={true}\r\n                            editFieldType=\"text\"\r\n                            customEditRenderer={handleCustomEditTextBox}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            key=\"DeviceType\"\r\n                            field=\"DeviceType\"\r\n                            header={t(\"Loc_DeviceType\")}\r\n                            editable={true}\r\n                            sortable={true}\r\n                            editFieldType=\"text\"\r\n                            customEditRenderer={handleCustomEditTextBox}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            key=\"DeviceModel\"\r\n                            field=\"DeviceModel\"\r\n                            header={t(\"Loc_DeviceModel\")}\r\n                            editable={true}\r\n                            sortable={true}\r\n                            editFieldType=\"text\"\r\n                            customEditRenderer={handleCustomEditTextBox}\r\n                        ></DataTable.Column>\r\n\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { emptyLocation } from \"../../../JS/DefaultEntities\";\r\nimport LocationDetails from \"../../UIBase/Details/LocationDetails\";\r\nimport { SiteDetailsUserActions } from \"../../UIBase/Common/SiteDetailsUserActions\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport lodash from \"lodash\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport { locationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport {\r\n  fnLocation, functionGroups,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport { getKeyByValue } from \"../../../JS/Utilities\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass LocationDetailsComposite extends Component {\r\n  state = {\r\n    location: {},\r\n    modLocation: {},\r\n    modAssociatedDevices: [],\r\n    modAvailableDevices: [],\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    isDeleteEnabled: false,\r\n    selectedLocationType: \"\",\r\n    checkedDevices: [],\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      locationValidationDef\r\n    ),\r\n    showDeleteAuthenticationLayout: false,\r\n    showSaveAuthenticationLayout: false,\r\n    tempLocation: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getDeviceList(this.props);\r\n    } catch (error) {\r\n      console.log(\r\n        \"LocationDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        nextProps.LocationCode === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getDeviceList(nextProps);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"LocationDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    try {\r\n      let modAssociatedDevices = lodash.cloneDeep(\r\n        this.state.modAssociatedDevices\r\n      );\r\n      modAssociatedDevices[cellData.rowIndex][cellData.field] = newVal;\r\n      this.setState({ modAssociatedDevices });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LocationDetailsComposite:Error occured on handleCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  saveLocation = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempLocation = lodash.cloneDeep(this.state.tempLocation);\r\n     \r\n      this.state.location.LocationCode === \"\"\r\n      ? this.createLocation(tempLocation)\r\n      : this.updateLocation(tempLocation);\r\n\r\n    } catch (error) {\r\n      console.log(\"LocationComposite : Error in saveLocation\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n     // this.setState({ saveEnabled: false });\r\n      let modLocation = this.fillDetails();\r\n      if (this.validateSave(modLocation)) {\r\n        \r\n        let showSaveAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n\r\n        let tempLocation = lodash.cloneDeep(modLocation);\r\n        this.setState({ showSaveAuthenticationLayout, tempLocation }, () => {\r\n          if (showSaveAuthenticationLayout === false) {\r\n            this.saveLocation();\r\n          }\r\n      });\r\n\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"LocationDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modLocation = lodash.cloneDeep(this.state.modLocation);\r\n      let checkedDevices = lodash.cloneDeep(this.state.checkedDevices);\r\n      checkedDevices.forEach((item) => {\r\n        item.TerminalCode = this.props.selectedTerminal;\r\n      });\r\n      modLocation.LocationType = this.state.selectedLocationType;\r\n      modLocation.TerminalCode = this.props.selectedTerminal;\r\n      modLocation.AssociatedDevices = checkedDevices;\r\n      return modLocation;\r\n    } catch (err) {\r\n      console.log(\"LocationDetailsComposite:Error occured on filldetails\", err);\r\n    }\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      let modLocation = lodash.cloneDeep(this.state.modLocation);\r\n      modLocation[propertyName] = data;\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      if (modLocation.Active === this.state.location.Active) {\r\n        if (\r\n          this.state.location.Remarks === modLocation.Remarks ||\r\n          modLocation.Remarks === \"\"\r\n        ) {\r\n          validationErrors.Remarks = \"\";\r\n        }\r\n        if (modLocation.Remarks === \"\")\r\n          modLocation.Remarks = this.state.location.Remarks;\r\n      }\r\n      if (propertyName === \"Active\") {\r\n        if (modLocation.Active !== this.state.location.Active) {\r\n          modLocation.Remarks = \"\";\r\n        }\r\n      }\r\n      if (locationValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          locationValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n      this.setState({ validationErrors, modLocation });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LocationDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCheckboxChanged = (deviceCode, deviceType, checked) => {\r\n    try {\r\n      let modAvailableDevices = lodash.cloneDeep(\r\n        this.state.modAvailableDevices\r\n      );\r\n      var devTypeIndx = modAvailableDevices.findIndex(\r\n        (dev) => dev.DeviceType === deviceType\r\n      );\r\n      if (devTypeIndx !== undefined) {\r\n        var devCodeIndx = modAvailableDevices[devTypeIndx].DeviceList.findIndex(\r\n          (dvCode) => dvCode.DeviceCode === deviceCode\r\n        );\r\n      }\r\n      if (devCodeIndx !== undefined) {\r\n        modAvailableDevices[devTypeIndx].DeviceList[devCodeIndx].IsAssociated =\r\n          checked;\r\n      }\r\n      this.setState({\r\n        modAvailableDevices,\r\n      });\r\n\r\n      let dv = {\r\n        DeviceType: deviceType,\r\n        DeviceCode: deviceCode,\r\n        DeviceModel: null,\r\n      };\r\n\r\n      let checkedDevices = lodash.cloneDeep(this.state.checkedDevices);\r\n\r\n      if (\r\n        checked === true &&\r\n        checkedDevices.filter((dv1) => dv1.DeviceCode === deviceCode).length ===\r\n          0\r\n      ) {\r\n        checkedDevices.push(dv);\r\n        this.setState({\r\n          checkedDevices,\r\n        });\r\n      } else if (\r\n        checked === false &&\r\n        this.state.checkedDevices.filter((dv1) => dv1.DeviceCode === deviceCode)\r\n          .length > 0\r\n      ) {\r\n        checkedDevices = checkedDevices.filter(\r\n          (dv1) => dv1.DeviceCode !== deviceCode\r\n        );\r\n        this.setState({\r\n          checkedDevices,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"LocationDetailsComposite:Error occured on handleCheckboxChanged\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDelete = () => {\r\n    try {\r\n      var deleteLocationKeys = [];\r\n      var LocationCode = this.state.modLocation.LocationCode;\r\n      var keyData = {\r\n        keyDataCode: 0,\r\n        ShareHolderCode: \"\",\r\n        KeyCodes: [\r\n          { Key: KeyCodes.locationCode, Value: LocationCode },\r\n          { Key: KeyCodes.terminalCode, Value: this.props.selectedTerminal },\r\n          { Key: KeyCodes.locationtype, Value: this.props.locationtype },\r\n        ],\r\n      };\r\n      deleteLocationKeys.push(keyData);\r\n      axios(\r\n        RestAPIs.DeleteLocation,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteLocationKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        var isRefreshDataRequire = result.IsSuccess;\r\n        if (\r\n          result.ResultDataList !== null &&\r\n          result.ResultDataList !== undefined\r\n        ) {\r\n          var failedResultsCount = result.ResultDataList.filter(function (res) {\r\n            return !res.IsSuccess;\r\n          }).length;\r\n          if (failedResultsCount === result.ResultDataList.length) {\r\n            isRefreshDataRequire = false;\r\n          } else isRefreshDataRequire = true;\r\n        }\r\n        var notification = Utilities.convertResultsDatatoNotification(\r\n          result,\r\n          [this.state.selectedLocationType + \"DeletionStatus\"],\r\n          [\"LocationCode\"]\r\n        );\r\n        if (isRefreshDataRequire) {\r\n          this.getLocation({\r\n            selectedlocation: this.state.modLocation.LocationCode,\r\n            locationtype: this.props.locationtype,\r\n            isClone: true,\r\n          });\r\n          this.setState({\r\n            isDeleteEnabled: false,\r\n            showDeleteAuthenticationLayout: false,\r\n          });\r\n        } else {\r\n          this.setState({ isDeleteEnabled: true, showDeleteAuthenticationLayout: false, });\r\n        }\r\n        notification.messageResultDetails.forEach((messageResult) => {\r\n          if (messageResult.keyFields.length > 0)\r\n            messageResult.keyFields[0] = [\r\n              this.state.selectedLocationType + \"Code\",\r\n            ];\r\n        });\r\n\r\n        this.props.onDelete(this.state.modLocation, \"delete\", notification);\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LocationDetailsComposite:Error occured on handleDelete\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modLocation = lodash.cloneDeep(this.state.modLocation);\r\n      modLocation.Active = value;\r\n      if (modLocation.Active !== this.state.location.Active)\r\n        modLocation.Remarks = \"\";\r\n      this.setState({ modLocation });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LocationDetailsComposite:Error occured on handleActiveStatusChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  createLocation(modLocation) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.locationCode,\r\n          value: modLocation.LocationCode,\r\n        },\r\n      ];\r\n\r\n      let req = {\r\n        LocationInfo: modLocation,\r\n        BayInfo: null,\r\n        isBayRequest: false,\r\n      };\r\n\r\n      let obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.locationCode,\r\n        KeyCodes: keyCode,\r\n        Entity: req,\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: [this.state.selectedLocationType + \"SavedSuccess\"],\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [this.state.selectedLocationType + \"Code\"],\r\n            keyValues: [modLocation.LocationCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.CreateLocation,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n             Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n          this.getLocation({\r\n            selectedlocation: this.state.modLocation.LocationCode,\r\n            locationtype: this.props.locationtype,\r\n            selectedTerminal: this.props.selectedTerminal,\r\n            isClone: false,\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n        }\r\n        this.props.onSaved(this.state.modLocation, \"add\", notification);\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LocationDetailsComposite:Error occured on createLocation\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  updateLocation(modLocation) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.locationCode,\r\n          value: modLocation.LocationCode,\r\n        },\r\n      ];\r\n\r\n      let req = {\r\n        LocationInfo: modLocation,\r\n        BayInfo: null,\r\n        isBayRequest: false,\r\n      };\r\n\r\n      let obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.locationCode,\r\n        KeyCodes: keyCode,\r\n        Entity: req,\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: [this.state.selectedLocationType + \"SavedSuccess\"],\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [this.state.selectedLocationType + \"Code\"],\r\n            keyValues: [modLocation.LocationCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.UpdateLocation,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n             Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n          this.getLocation({\r\n            selectedlocation: this.state.modLocation.LocationCode,\r\n            locationtype: this.props.locationtype,\r\n            selectedTerminal: this.props.selectedTerminal,\r\n            isClone: false,\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n             Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n        }\r\n        this.props.onSaved(this.state.modLocation, \"update\", notification);\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LocationDetailsComposite:Error occured on updateLocation\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  validateSave(modLocation) {\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(locationValidationDef).forEach(function (key) {\r\n      if (modLocation[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          locationValidationDef[key],\r\n          modLocation[key]\r\n        );\r\n    });\r\n    if (modLocation.Active !== this.state.location.Active) {\r\n      if (modLocation.Remarks === null || modLocation.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"OriginTerminal_RemarksRequired\";\r\n      }\r\n    }\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: [this.state.selectedLocationType + \"SavedSuccess\"],\r\n      messageResultDetails: [],\r\n    };\r\n    if (modLocation.AssociatedDevices.length === 0) {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [this.state.selectedLocationType + \"Code\"],\r\n        keyValues: [modLocation.LocationCode],\r\n        isSuccess: false,\r\n        errorMessage: \"LocationInfo_DeviceRequired\",\r\n      });\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = Object.values(validationErrors).every(function (value) {\r\n      return value === \"\";\r\n    });\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modLocation, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  getDeviceList(props) {\r\n    let locationType = props.locationtype;\r\n    locationType = locationType.replace(/ /g, \"\");\r\n    var terminalCode = this.props.selectedTerminal;\r\n    try {\r\n      axios(\r\n        RestAPIs.GetDeviceList +\r\n          \"?locationType=\" +\r\n          locationType +\r\n          \"&locationInfo=\" +\r\n          \"&terminalCode=\" +\r\n          terminalCode,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            Array.isArray(result.EntityResult) &&\r\n            result.EntityResult.length > 0\r\n          )\r\n            this.setState({ modAvailableDevices: result.EntityResult }, () => {\r\n              this.getLocation(props);\r\n            });\r\n          else this.getLocation(props);\r\n        } else {\r\n          this.getLocation(props);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(\r\n        \"LocationDetailsComposite:Error occured on getDeviceList\",\r\n        err\r\n      );\r\n    }\r\n  }\r\n\r\n  getLocation(propsResult) {\r\n    try {\r\n      let locationCode = propsResult.selectedlocation;\r\n      let terminalCode = this.props.selectedTerminal;\r\n      emptyLocation.LocationType = propsResult.locationtype.replace(/ /g, \"\");\r\n      emptyLocation.AvailableDevices = lodash.cloneDeep(\r\n        this.state.modAvailableDevices\r\n      );\r\n      if (locationCode === undefined || locationCode === \"\") {\r\n        this.setState({\r\n          location: lodash.cloneDeep(emptyLocation),\r\n          modLocation: lodash.cloneDeep(emptyLocation),\r\n          selectedLocationType: emptyLocation.LocationType,\r\n          modAssociatedDevices: [],\r\n          modAvailableDevices: lodash.cloneDeep(emptyLocation.AvailableDevices),\r\n          checkedDevices: [],\r\n          isDeleteEnabled: false,\r\n          isReadyToRender: true,\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n          ),\r\n        });\r\n        return;\r\n      }\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.locationCode,\r\n          value: locationCode,\r\n        },\r\n        {\r\n          key: KeyCodes.terminalCode,\r\n          value: terminalCode,\r\n        },\r\n        {\r\n          key: KeyCodes.locationtype,\r\n          value: this.props.locationtype,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.locationCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetLocationDetails,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (propsResult.isClone === true) {\r\n            this.setState({\r\n              selectedLocationType: lodash.cloneDeep(\r\n                result.EntityResult.LocationType\r\n              ),\r\n              location: lodash.cloneDeep(emptyLocation),\r\n              modLocation: lodash.cloneDeep(emptyLocation),\r\n              isReadyToRender: true,\r\n              modAssociatedDevices: [],\r\n              modAvailableDevices: lodash.cloneDeep(\r\n                this.state.modAvailableDevices\r\n              ),\r\n              checkedDevices: [],\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.add,\r\n               Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n              ),\r\n              isDeleteEnabled: false,\r\n            });\r\n            return;\r\n          } else {\r\n            let modAssociatedDevices = lodash.cloneDeep(\r\n              result.EntityResult.AssociatedDevices\r\n            );\r\n            if (Array.isArray(modAssociatedDevices))\r\n              modAssociatedDevices.forEach((item) => {\r\n                item.DeviceType = getKeyByValue(\r\n                  Constants.deviceTypeCode,\r\n                  item.DeviceType\r\n                );\r\n              });\r\n\r\n            this.setState({\r\n              selectedLocationType: lodash.cloneDeep(\r\n                result.EntityResult.LocationType\r\n              ),\r\n              isReadyToRender: true,\r\n              location: result.EntityResult,\r\n              modLocation: lodash.cloneDeep(result.EntityResult),\r\n              modAssociatedDevices,\r\n              checkedDevices: lodash.cloneDeep(\r\n                result.EntityResult.AssociatedDevices\r\n              ),\r\n              modAvailableDevices: lodash.cloneDeep(\r\n                result.EntityResult.AvailableDevices\r\n              ),\r\n              isDeleteEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.remove,\r\n                Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n              ),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n               Utilities.getSiteViewFunctionGroup(this.props.transportationtype)\r\n              ),\r\n            });\r\n          }\r\n        } else {\r\n          this.setState({\r\n            selectedLocationType: emptyLocation.LocationType,\r\n            location: lodash.cloneDeep(emptyLocation),\r\n            modLocation: lodash.cloneDeep(emptyLocation),\r\n            isReadyToRender: true,\r\n            modAssociatedDevices: [],\r\n            modAvailableDevices: [],\r\n            checkedDevices: [],\r\n            isDeleteEnabled: false,\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LocationDetailsComposite:Error occured on getTerminalsList\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showDeleteAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showDeleteAuthenticationLayout });\r\n      if (showDeleteAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"LocationComposite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showSaveAuthenticationLayout: false,\r\n      showDeleteAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  handleOperation()  {\r\n     return this.state.showDeleteAuthenticationLayout?this.handleDelete:this.saveLocation;\r\n  };\r\n\r\n  getFunctionName() {\r\n   return this.state.showDeleteAuthenticationLayout? functionGroups.remove: \r\n             this.state.location.LocationCode === \"\"\r\n          ? functionGroups.add\r\n          : functionGroups.modify\r\n  };\r\n\r\n  render() {\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"DriverInfo_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modLocation.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modLocation.LastUpdatedTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_LastActive\",\r\n        fieldValue:\r\n          this.state.modLocation.LastActiveTime !== undefined &&\r\n          this.state.modLocation.LastActiveTime !== null\r\n            ? new Date(\r\n                this.state.modLocation.LastActiveTime\r\n              ).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(\r\n                this.state.modLocation.LastActiveTime\r\n              ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_CreatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.modLocation.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modLocation.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.location.LocationCode}\r\n            newEntityName={\"New\" + this.state.selectedLocationType}\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <LocationDetails\r\n            location={this.state.location}\r\n            modLocation={this.state.modLocation}\r\n            selectedLocationType={this.state.selectedLocationType}\r\n            modAvailableDevices={this.state.modAvailableDevices}\r\n            modAssociatedDevices={this.state.modAssociatedDevices}\r\n            validationErrors={this.state.validationErrors}\r\n            onFieldChange={this.handleChange}\r\n            checkBoxChanged={this.handleCheckboxChanged}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n          ></LocationDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <SiteDetailsUserActions\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            handleSave={this.handleSave}\r\n            handleDelete={this.authenticateDelete}\r\n            saveEnabled={this.state.saveEnabled}\r\n            isDeleteEnabled={this.state.isDeleteEnabled}\r\n          ></SiteDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showDeleteAuthenticationLayout || this.state.showSaveAuthenticationLayout ?  (\r\n          <UserAuthenticationLayout\r\n          Username={this.props.userDetails.EntityResult.UserName}\r\n          functionName={this.getFunctionName()}\r\n          functionGroup={fnLocation}\r\n          handleClose={this.handleAuthenticationClose}\r\n          handleOperation={this.handleOperation()}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n \r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LocationDetailsComposite);\r\n"],"names":["LocationDetails","_ref","location","modLocation","modAvailableDevices","modAssociatedDevices","selectedLocationType","validationErrors","checkBoxChanged","onFieldChange","handleCellDataEdit","onActiveStatusChange","t","useTranslation","handleCustomEditTextBox","cellData","_jsx","Input","fluid","value","rowIndex","field","onChange","reserveSpace","_jsxs","className","children","LocationCode","label","indicator","disabled","data","error","LocationName","Description","Select","placeholder","Active","options","text","Remarks","Accordion","map","AvailableDeviceList","Content","title","DeviceType","arrowPosition","DeviceList","deviceList","Checkbox","DeviceCode","checked","IsAssociated","DataTable","Column","header","editable","sortable","editFieldType","customEditRenderer","LocationDetailsComposite","Component","constructor","arguments","state","isReadyToRender","saveEnabled","isDeleteEnabled","checkedDevices","Utilities","locationValidationDef","showDeleteAuthenticationLayout","showSaveAuthenticationLayout","tempLocation","newVal","lodash","this","setState","console","log","saveLocation","createLocation","updateLocation","handleSave","fillDetails","validateSave","props","userDetails","EntityResult","IsWebPortalUser","handleChange","propertyName","undefined","handleCheckboxChanged","deviceCode","deviceType","devTypeIndx","findIndex","dev","devCodeIndx","dvCode","dv","DeviceModel","filter","dv1","length","push","handleDelete","deleteLocationKeys","keyData","keyDataCode","ShareHolderCode","KeyCodes","Key","Value","selectedTerminal","locationtype","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","isRefreshDataRequire","IsSuccess","ResultDataList","res","notification","getLocation","selectedlocation","isClone","messageResultDetails","forEach","messageResult","keyFields","onDelete","handleActiveStatusChange","authenticateDelete","handleAuthenticationClose","componentDidMount","IsArchived","getDeviceList","componentWillReceiveProps","nextProps","Object","keys","key","item","TerminalCode","LocationType","AssociatedDevices","err","keyCode","req","LocationInfo","BayInfo","isBayRequest","obj","Entity","messageType","message","keyValues","isSuccess","errorMessage","FunctionsList","functionGroups","add","transportationtype","ErrorList","onSaved","modify","returnValue","values","every","locationType","replace","terminalCode","Array","isArray","propsResult","locationCode","emptyLocation","AvailableDevices","getKeyByValue","Constants","remove","handleOperation","getFunctionName","render","popUpContents","fieldName","fieldValue","Date","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","LastActiveTime","CreatedTime","ErrorBoundary","TMDetailsHeader","entityCode","newEntityName","SiteDetailsUserActions","isEnterpriseNode","IsEnterpriseNode","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","fnLocation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth"],"sourceRoot":""}