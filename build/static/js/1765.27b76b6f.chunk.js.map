{"version":3,"file":"static/js/1765.27b76b6f.chunk.js","mappings":"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","sources":["Components/Composite/Details/TruckReceiptSealDetailsComposite.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { sealCompValidationDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport lodash from \"lodash\";\r\nimport axios from \"axios\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { toast } from \"react-toastify\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button,  Input,  } from \"@scuf/common\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\n\r\nclass TruckReceiptSealDetailsComposite extends Component {\r\n  state = {\r\n    sealCompartments: this.props.sealCompartments,\r\n  };\r\n   \r\n\r\n  getCustomtableData(sealCompartments)\r\n  {\r\n    const   custSealInfo=[];\r\n    sealCompartments.forEach((item) => {\r\n      custSealInfo.push({\r\n        SealNo: item.SealNo===null?\"\":item.SealNo,\r\n        CompartmentSeqNoInVehicle: item.CompartmentSeqNoInVehicle,\r\n        FinishedProductCode:item.FinishedProductCode===null?\"\":item.FinishedProductCode,\r\n        ReceiptCompartmentStatus:item.ReceiptCompartmentStatus===null?\"\":item.ReceiptCompartmentStatus,\r\n        UnLoadedQty:item.UnLoadedQuantity===null?\"\":item.UnLoadedQuantity + \" \" + item.UnLoadedQuantityUOM ,\r\n      });\r\n    });\r\n    return custSealInfo;\r\n  };\r\n\r\n  updateSealCompartments=()=>{\r\n  \r\n    let sealCompartments = lodash.cloneDeep(this.state.sealCompartments);\r\n  \r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewAllReceipt_SealCompUpdate\",\r\n      messageResultDetails: [],\r\n    };\r\n  \r\n    sealCompartments.forEach((item) => {\r\n  \r\n      sealCompValidationDef.forEach((col) => {\r\n        let err = \"\";\r\n  \r\n        if (col.validator !== undefined) {\r\n          err = Utilities.validateField(\r\n            col.validator,\r\n            item[col.field]\r\n          );\r\n        }\r\n  \r\n        if (err !== \"\") {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [\r\n              \"ShipmentCompDetail_CompSeqInVehicle\",\r\n              col.displayName,\r\n            ],\r\n            keyValues: [\r\n              item.CompartmentSeqNoInVehicle,\r\n              item[col.field],\r\n            ],\r\n            isSuccess: false,\r\n            errorMessage: err,\r\n          });\r\n        }\r\n      });\r\n  \r\n    });\r\n  \r\n   \r\n  if (notification.messageResultDetails.length > 0 ) {\r\n    toast(\r\n      <ErrorBoundary>\r\n        <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n      </ErrorBoundary>,\r\n      {\r\n        autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n      }\r\n    );\r\n     return;\r\n  }\r\n  \r\n  \r\n     notification.messageResultDetails.push(\r\n        {\r\n          keyFields: [\"Receipt_Code\"],\r\n          keyValues: [this.props.transactionCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        });\r\n      \r\n  \r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: this.props.selectedShareholder,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptCode,\r\n        value: this.props.transactionCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.receiptCode,\r\n      KeyCodes: keyCode,\r\n      Entity: this.state.sealCompartments,\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateReceiptSealCompartments,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        notification.messageResultDetails[0].errorMessage = result.ErrorList[0];\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while update Receipt Seal Info:\", error);\r\n      });\r\n  }\r\n  \r\n  isNodeEnterpriseOrWebortal()\r\n  {\r\n    if (this.props.userDetails.EntityResult.IsEnterpriseNode || this.props.userDetails.EntityResult.IsWebPortalUser) {\r\n     return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  handleSealNoInput=(data)=> {\r\n    let cellInfo = data.rowData;\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={cellInfo.SealNo}\r\n        disabled={false}\r\n        onChange={(celldata) => {\r\n          let sealCompartments = lodash.cloneDeep(this.state.sealCompartments);\r\n        \r\n          let index = sealCompartments.findIndex((comp) => {\r\n            return comp.CompartmentSeqNoInVehicle === cellInfo.CompartmentSeqNoInVehicle;\r\n          });\r\n\r\n          if (index >= 0)\r\n          {\r\n            sealCompartments[index].SealNo = celldata;\r\n            \r\n          } \r\n\r\n          this.setState({ sealCompartments });\r\n        }}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <TranslationConsumer>\r\n      {(t) => (\r\n          <Modal\r\n          open={true}\r\n          size=\"large\"\r\n          className=\"sealCompartmentsPopUp\"\r\n        >\r\n          <Modal.Content>\r\n            <div className=\"col col-lg-12\">\r\n              <h3>\r\n                {t(\"ViewAllReceipt_SealCompartment\") +\r\n                  \" : \" +\r\n                  this.props.transactionCode}\r\n              </h3>\r\n            </div>\r\n            <div className=\"col-12 detailsTable\">\r\n              <DataTable data={this.getCustomtableData(this.state.sealCompartments)}>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  field={\"CompartmentSeqNoInVehicle\"}\r\n                  header={t(\"ViewShipment_CompartmentSeq\")}\r\n                  editable={false}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  field=\"FinishedProductCode\"\r\n                  header={t(\"ViewShipment_FinishedProductCode\")}\r\n                  editable={false}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  field=\"ReceiptCompartmentStatus\"\r\n                  header={t(\"ViewShipment_Status\")}\r\n                  editable={false}\r\n                  \r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  field=\"UnLoadedQty\"\r\n                  header={t(\"ViewReceiptList_LoadedQuantity\")}\r\n                  editable={false}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  field=\"SealNo\"\r\n                  header={t(\"SealMaster_SealNo\")}\r\n                  renderer={(cellData) => this.handleSealNoInput(cellData)}\r\n                />\r\n              </DataTable>\r\n            </div>\r\n          </Modal.Content>\r\n          <Modal.Footer>\r\n            <Button\r\n              content={t(\"MarineEOD_Close\")}\r\n              className=\"cancelButton\"\r\n              onClick={this.props.handleSealClose}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              content={t(\"SealMaster_Save\")}\r\n              disabled={this.isNodeEnterpriseOrWebortal()}\r\n              onClick={this.updateSealCompartments}\r\n            />\r\n          </Modal.Footer>\r\n        </Modal>\r\n      )}\r\n    </TranslationConsumer>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TruckReceiptSealDetailsComposite);\r\n\r\nTruckReceiptSealDetailsComposite.propTypes = {\r\n  transactionCode: PropTypes.string.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  sealCompartments: PropTypes.object.isRequired,\r\n  handleSealClose: PropTypes.func.isRequired,\r\n};\r\n \r\n\r\n\r\n\r\n\r\n"],"names":["TruckReceiptSealDetailsComposite","Component","constructor","arguments","state","sealCompartments","this","props","updateSealCompartments","lodash","notification","messageType","message","messageResultDetails","forEach","item","sealCompValidationDef","col","err","undefined","validator","Utilities","field","push","keyFields","displayName","keyValues","CompartmentSeqNoInVehicle","isSuccess","errorMessage","length","toast","_jsx","ErrorBoundary","children","NotifyEvent","notificationMessage","autoClose","transactionCode","keyCode","key","KeyCodes","value","selectedShareholder","obj","ShareHolderCode","keyDataCode","Entity","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","data","IsSuccess","ErrorList","catch","error","console","log","handleSealNoInput","cellInfo","rowData","Input","fluid","SealNo","disabled","onChange","celldata","index","findIndex","comp","setState","reserveSpace","getCustomtableData","custSealInfo","FinishedProductCode","ReceiptCompartmentStatus","UnLoadedQty","UnLoadedQuantity","UnLoadedQuantityUOM","isNodeEnterpriseOrWebortal","userDetails","EntityResult","IsEnterpriseNode","IsWebPortalUser","render","TranslationConsumer","t","_jsxs","Modal","open","size","className","Content","DataTable","Column","header","editable","renderer","cellData","Footer","Button","content","onClick","handleSealClose","type","connect","getUserDetails","TokenAuth"],"sourceRoot":""}