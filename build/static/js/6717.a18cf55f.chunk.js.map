{"version":3,"file":"static/js/6717.a18cf55f.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","Components/UIBase/Details/TankDetails.jsx","JS/functionalUtilities.js"],"sourcesContent":["import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Select, Input, Accordion, Button, Checkbox } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getOptionsWithSelect } from \"../../../JS/functionalUtilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\n\r\nTankDetails.propTypes = {\r\n    tank: PropTypes.object.isRequired,\r\n    modTank: PropTypes.object.isRequired,\r\n    validationErrors: PropTypes.object.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    isEnterpriseNode: PropTypes.bool.isRequired,\r\n    modAttributeMetaDataList: PropTypes.array.isRequired,\r\n    attributeValidationErrors: PropTypes.array.isRequired,\r\n    onAttributeDataChange: PropTypes.func.isRequired,\r\n    listOptions: PropTypes.shape({\r\n        terminalCode: PropTypes.array,\r\n    }).isRequired,\r\n    onTerminalChange: PropTypes.func.isRequired,\r\n    onTankGroupChange: PropTypes.func.isRequired,\r\n    isEnableATGButton: PropTypes.bool.isRequired,\r\n    atgInfoDisable: PropTypes.object.isRequired,\r\n    handleReadATGData: PropTypes.object.isRequired,\r\n    handleSaveATGData: PropTypes.object.isRequired,\r\n    isBondingEnable: PropTypes.bool.isRequired,\r\n    isATGEnabled: PropTypes.bool.isRequired,\r\n    onActiveStatusChange: PropTypes.func.isRequired,\r\n    handleATGConfiguration: PropTypes.func.isRequired,\r\n    isEnableATGConfigButton: PropTypes.bool.isRequired,\r\n}\r\n\r\nTankDetails.defaultProps = {\r\n    isEnterpriseNode: false,\r\n    listOptions: {\r\n        terminalCode: [],\r\n        tankMode: [],\r\n        tankGroup: [],\r\n        volumeUOM: [],\r\n        densityUOM: [],\r\n        massUOM: [],\r\n        lengthUOM: [],\r\n        temperatureUOM: [],\r\n        pressureUOM: [],\r\n    },\r\n    isEnableATGButton: false,\r\n    isEnableATGConfigButton:false\r\n}\r\n\r\nexport function TankDetails({\r\n    tank,\r\n    modTank,\r\n    validationErrors,\r\n    onFieldChange,\r\n    isEnterpriseNode,\r\n    modAttributeMetaDataList,\r\n    attributeValidationErrors,\r\n    onAttributeDataChange,\r\n    listOptions,\r\n    onTerminalChange,\r\n    onTankGroupChange,\r\n    isEnableATGButton,\r\n    atgInfoDisable,\r\n    handleReadATGData,\r\n    handleSaveATGData,\r\n    isBondingEnable,\r\n    isATGEnabled,\r\n    onActiveStatusChange,\r\n    handleATGConfiguration,\r\n    isEnableATGConfigButton\r\n}) {\r\n    const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n        let attributeValidation = [];\r\n        attributeValidation = attributeValidationErrors.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n        })\r\n        return attributeValidation.attributeValidationErrors;\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"detailsContainer\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.Code}\r\n                                indicator=\"required\"\r\n                                disabled={tank.Code !== \"\"}\r\n                                onChange={(data) => onFieldChange(\"Code\", data)}\r\n                                label={t(\"TankTransaction_TankCode\")}\r\n                                error={t(validationErrors.Code)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.Name}\r\n                                onChange={(data) => onFieldChange(\"Name\", data)}\r\n                                label={t(\"TankInfo_Name\")}\r\n                                error={t(validationErrors.Name)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.Description}\r\n                                label={t(\"TankInfo_Description\")}\r\n                                onChange={(data) => onFieldChange(\"Description\", data)}\r\n                                error={t(validationErrors.Description)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        {isEnterpriseNode ? (\r\n                            <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                <Select\r\n                                    fluid\r\n                                    placeholder={t(\"Common_Select\")}\r\n                                    label={t(\"TerminalCodes\")}\r\n                                    value={modTank.TerminalCode}\r\n                                    options={listOptions.terminalCode}\r\n                                    onChange={(data) => {\r\n                                        onTerminalChange(data);\r\n                                    }}\r\n                                    indicator=\"required\"\r\n                                    error={t(validationErrors.TerminalCode)}\r\n                                    reserveSpace={false}\r\n                                    disabled={tank.Code !== \"\"}\r\n                                    search={true}\r\n                                    noResultsMessage={t(\"noResultsMessage\")}\r\n                                />\r\n                            </div>\r\n                        ) : (\"\")\r\n                        }\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"TankInfo_Group\")}\r\n                                value={modTank.TankGroupCode}\r\n                                options={listOptions.tankGroup}\r\n                                onChange={(data) => {\r\n                                    onTankGroupChange(data);\r\n                                }}\r\n                                indicator=\"required\"\r\n                                error={t(validationErrors.TankGroupCode)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"TankInfo_Mode\")}\r\n                                value={modTank.TankMode}\r\n                                options={getOptionsWithSelect(\r\n                                    listOptions.tankMode,\r\n                                    t(\"Common_Select\")\r\n                                )}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"TankMode\", data);\r\n                                }}\r\n                                error={t(validationErrors.TankMode)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                disabled={atgInfoDisable.TankMode}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.BaseProductCode}\r\n                                label={t(\"TankInfo_BaseProduct\")}\r\n                                reserveSpace={false}\r\n                                disabled={true}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.BPMinDensity}\r\n                                label={t(\"TankInfo_BPMinDensity\")}\r\n                                reserveSpace={false}\r\n                                disabled={true}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.BPMaxDensity}\r\n                                label={t(\"TankInfo_BPMaxDensity\")}\r\n                                reserveSpace={false}\r\n                                disabled={true}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.BPDensityUOM}\r\n                                label={t(\"TankInfo_BPDensity\")}\r\n                                reserveSpace={false}\r\n                                disabled={true}\r\n                            />\r\n                        </div>\r\n                        {isBondingEnable ? (\r\n                            <div className=\"col-12 col-md-6 col-lg-4 ddlSelectAll\">\r\n                                <Checkbox\r\n                                    label={t(\"TankInfo_Bonded\")}\r\n                                    checked={modTank.IsBonded ? true : false}\r\n                                    onChange={(data) => onFieldChange(\"IsBonded\", data)}\r\n                                />\r\n                            </div>\r\n                        ) : (\"\")}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n                            <div className=\"tank-form-header\">{t(\"TankInfo_Capacity\")}</div>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.Capacity === null ? \"\" : modTank.Capacity.toLocaleString()}\r\n                                indicator=\"required\"\r\n                                onChange={(data) => onFieldChange(\"Capacity\", data)}\r\n                                label={t(\"TankInfo_Capacity\")}\r\n                                error={t(validationErrors.Capacity)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"TankInfo_CpctyUOM\")}\r\n                                value={modTank.CapacityUOM}\r\n                                options={listOptions.volumeUOM}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"CapacityUOM\", data)\r\n                                }}\r\n                                indicator=\"required\"\r\n                                error={t(validationErrors.CapacityUOM)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.AvailableRoom === null ? \"\" : modTank.AvailableRoom.toLocaleString()}\r\n                                onChange={(data) => onFieldChange(\"AvailableRoom\", data)}\r\n                                label={t(\"TankInfo_AvRoom\")}\r\n                                error={t(validationErrors.AvailableRoom)}\r\n                                reserveSpace={false}\r\n                                disabled={atgInfoDisable.AvailableRoom}\r\n                            />\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n                            <div className=\"tank-form-header\">{t(\"TankInfo_Density\")}</div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.Density === null ? \"\" : modTank.Density.toLocaleString()}\r\n                                indicator=\"required\"\r\n                                onChange={(data) => onFieldChange(\"Density\", data)}\r\n                                label={t(\"TankInfo_Density\")}\r\n                                error={t(validationErrors.Density)}\r\n                                reserveSpace={false}\r\n                                disabled={atgInfoDisable.Density}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"TankInfo_DensityUOM\")}\r\n                                value={modTank.DensityUOM}\r\n                                options={listOptions.densityUOM}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"DensityUOM\", data)\r\n                                }}\r\n                                indicator=\"required\"\r\n                                error={t(validationErrors.DensityUOM)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                disabled={atgInfoDisable.Density}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n                            <div className=\"tank-form-header\">{t(\"TankInfo_Mass\")}</div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.GrossMass === null ? \"\" : modTank.GrossMass.toLocaleString()}\r\n                                onChange={(data) => onFieldChange(\"GrossMass\", data)}\r\n                                label={t(\"TankInfo_Mass\")}\r\n                                error={t(validationErrors.GrossMass)}\r\n                                reserveSpace={false}\r\n                                disabled={atgInfoDisable.Mass}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"TankInfo_GrossMassUOM\")}\r\n                                value={modTank.GrossMassUOM}\r\n                                options={getOptionsWithSelect(\r\n                                    listOptions.massUOM,\r\n                                    t(\"Common_Select\")\r\n                                )}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"GrossMassUOM\", data)\r\n                                }}\r\n                                error={t(validationErrors.GrossMassUOM)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                disabled={atgInfoDisable.Mass}\r\n                            //indicator={(modTank.GrossMass !== \"\" || modTank.GrossMass !== null) ? \"required\" : \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n                            <div className=\"tank-form-header\">{t(\"TankInfo_Volume\")}</div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.GrossVolume === null ? \"\" : modTank.GrossVolume.toLocaleString()}\r\n                                onChange={(data) => onFieldChange(\"GrossVolume\", data)}\r\n                                label={t(\"TankInfo_GrossVol\")}\r\n                                error={t(validationErrors.GrossVolume)}\r\n                                reserveSpace={false}\r\n                                disabled={atgInfoDisable.GrossVolume}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"TankInfo_GrossVolUOM\")}\r\n                                value={modTank.GrossVolumeUOM}\r\n                                options={getOptionsWithSelect(\r\n                                    listOptions.volumeUOM,\r\n                                    t(\"Common_Select\")\r\n                                )}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"GrossVolumeUOM\", data)\r\n                                }}\r\n                                error={t(validationErrors.GrossVolumeUOM)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                disabled={atgInfoDisable.GrossVolume}\r\n                            //indicator={modTank.GrossVolume !== \"\" ? \"required\" : \"\"}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.NetVolume === null ? \"\" : modTank.NetVolume.toLocaleString()}\r\n                                onChange={(data) => onFieldChange(\"NetVolume\", data)}\r\n                                label={t(\"TankInfo_NetVol\")}\r\n                                error={t(validationErrors.NetVolume)}\r\n                                reserveSpace={false}\r\n                                disabled={atgInfoDisable.NetVolume}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"TankInfo_NetVolUOM\")}\r\n                                value={modTank.NetVolumeUOM}\r\n                                options={getOptionsWithSelect(\r\n                                    listOptions.volumeUOM,\r\n                                    t(\"Common_Select\")\r\n                                )}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"NetVolumeUOM\", data)\r\n                                }}\r\n                                error={t(validationErrors.NetVolumeUOM)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                disabled={atgInfoDisable.NetVolume}\r\n                            //indicator={modTank.NetVolume !== \"\" ? \"required\" : \"\"}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.WaterVolume === null ? \"\" : modTank.WaterVolume.toLocaleString()}\r\n                                onChange={(data) => onFieldChange(\"WaterVolume\", data)}\r\n                                label={t(\"TankInfo_WaterVol\")}\r\n                                error={t(validationErrors.WaterVolume)}\r\n                                reserveSpace={false}\r\n                                disabled={atgInfoDisable.WaterVolume}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"TankInfo_WaterVolUOM\")}\r\n                                value={modTank.WaterVolumeUOM}\r\n                                options={getOptionsWithSelect(\r\n                                    listOptions.volumeUOM,\r\n                                    t(\"Common_Select\")\r\n                                )}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"WaterVolumeUOM\", data)\r\n                                }}\r\n                                error={t(validationErrors.WaterVolumeUOM)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                disabled={atgInfoDisable.WaterVolume}\r\n                            //indicator={modTank.WaterVolume !== \"\" ? \"required\" : \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n                            <div className=\"tank-form-header\">{t(\"TankInfo_Level\")}</div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.TankLevel === null ? \"\" : modTank.TankLevel.toLocaleString()}\r\n                                onChange={(data) => onFieldChange(\"TankLevel\", data)}\r\n                                label={t(\"TankInfo_TankLevel\")}\r\n                                error={t(validationErrors.TankLevel)}\r\n                                reserveSpace={false}\r\n                                disabled={atgInfoDisable.TankLevel}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.WaterLevel === null ? \"\" : modTank.WaterLevel.toLocaleString()}\r\n                                onChange={(data) => onFieldChange(\"WaterLevel\", data)}\r\n                                label={t(\"TankInfo_WaterLevel\")}\r\n                                error={t(validationErrors.WaterLevel)}\r\n                                reserveSpace={false}\r\n                                disabled={atgInfoDisable.WaterLevel}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"TankInfo_LevelUOM\")}\r\n                                value={modTank.LevelUOM}\r\n                                options={getOptionsWithSelect(\r\n                                    listOptions.lengthUOM,\r\n                                    t(\"Common_Select\")\r\n                                )}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"LevelUOM\", data)\r\n                                }}\r\n                                error={t(validationErrors.LevelUOM)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                disabled={atgInfoDisable.WaterLevel}\r\n                            // indicator={(modTank.TankLevel !== \"\" || modTank.WaterLevel !== \"\") ? \"required\" : \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n                            <div className=\"tank-form-header\">{t(\"TankInfo_Vapour\")}</div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.VapourGrossQuantity === null ? \"\" : modTank.VapourGrossQuantity.toLocaleString()}\r\n                                onChange={(data) => onFieldChange(\"VapourGrossQuantity\", data)}\r\n                                label={t(\"TankInfo_VapGrs\")}\r\n                                error={t(validationErrors.VapourGrossQuantity)}\r\n                                reserveSpace={false}\r\n                                disabled={atgInfoDisable.VapourGrossQuantity}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.VapourNetQuantity === null ? \"\" : modTank.VapourNetQuantity.toLocaleString()}\r\n                                onChange={(data) => onFieldChange(\"VapourNetQuantity\", data)}\r\n                                label={t(\"TankInfo_VapNet\")}\r\n                                error={t(validationErrors.VapourNetQuantity)}\r\n                                reserveSpace={false}\r\n                                disabled={atgInfoDisable.VapourNetQuantity}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"TankInfo_VapourUOM\")}\r\n                                value={modTank.VapourUOM}\r\n                                options={getOptionsWithSelect(\r\n                                    listOptions.volumeUOM,\r\n                                    t(\"Common_Select\")\r\n                                )}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"VapourUOM\", data)\r\n                                }}\r\n                                error={t(validationErrors.VapourUOM)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                disabled={atgInfoDisable.VapourNetQuantity}\r\n                            // indicator={(modTank.VapourGrossQuantity !== \"\" || modTank.VapourNetQuantity !== \"\") ? \"required\" : \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n                            <div className=\"tank-form-header\">{t(\"TankInfo_Pressure\")}</div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.Pressure === null ? \"\" : modTank.Pressure.toLocaleString()}\r\n                                onChange={(data) => onFieldChange(\"Pressure\", data)}\r\n                                label={t(\"TankInfo_Pressure\")}\r\n                                error={t(validationErrors.Pressure)}\r\n                                reserveSpace={false}\r\n                                disabled={atgInfoDisable.Pressure}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"TankInfo_PressureUOM\")}\r\n                                value={modTank.PressureUOM}\r\n                                options={getOptionsWithSelect(\r\n                                    listOptions.pressureUOM,\r\n                                    t(\"Common_Select\")\r\n                                )}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"PressureUOM\", data)\r\n                                }}\r\n                                error={t(validationErrors.PressureUOM)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                disabled={atgInfoDisable.Pressure}\r\n                            // indicator={modTank.Pressure !== \"\" ? \"required\" : \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n                            <div className=\"tank-form-header\">{t(\"TankInfo_Temperature\")}</div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.Temperature === null ? \"\" : modTank.Temperature.toLocaleString()}\r\n                                onChange={(data) => onFieldChange(\"Temperature\", data)}\r\n                                label={t(\"TankInfo_Temperature\")}\r\n                                error={t(validationErrors.Temperature)}\r\n                                reserveSpace={false}\r\n                                disabled={atgInfoDisable.Temperature}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"TankInfo_TemperatureUOM\")}\r\n                                value={modTank.TemperatureUOM}\r\n                                options={getOptionsWithSelect(\r\n                                    listOptions.temperatureUOM,\r\n                                    t(\"Common_Select\")\r\n                                )}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"TemperatureUOM\", data)\r\n                                }}\r\n                                error={t(validationErrors.TemperatureUOM)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                disabled={atgInfoDisable.Temperature}\r\n                            // indicator={modTank.Temperature !== \"\" ? \"required\" : \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"TankList_Status\")}\r\n                                value={modTank.Active}\r\n                                options={[\r\n                                    { text: t(\"ViewShipment_Ok\"), value: true },\r\n                                    { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                                ]}\r\n                                onChange={(data) => onActiveStatusChange(data)}\r\n                                error={t(validationErrors.Active)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modTank.Remarks}\r\n                                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                                label={t(\"TankInfo_Remarks\")}\r\n                                error={t(validationErrors.Remarks)}\r\n                                indicator={modTank.Active !== tank.Active ? \"required\" : \"\"}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        modAttributeMetaDataList.length > 0 ?\r\n                        modAttributeMetaDataList.map((attribute) =>\r\n                                <ErrorBoundary>\r\n                                    <Accordion >\r\n                                        <Accordion.Content\r\n                                            className=\"attributeAccordian\"\r\n                                            title={isEnterpriseNode ? (attribute.TerminalCode + ' - ' + t(\"Attributes_Header\")) : (t(\"Attributes_Header\"))}\r\n                                        >\r\n                                            <AttributeDetails\r\n                                                selectedAttributeList={attribute.attributeMetaDataList}\r\n                                                handleCellDataEdit={onAttributeDataChange}\r\n                                                attributeValidationErrors={handleValidationErrorFilter(attributeValidationErrors, attribute.TerminalCode)}\r\n                                            ></AttributeDetails>\r\n                                        </Accordion.Content>\r\n                                    </Accordion>\r\n                                </ErrorBoundary>\r\n                            ) : null\r\n                    }\r\n\r\n                    {\r\n                        isATGEnabled ? (<div className=\"row\">\r\n                            <div className=\"col col-md-8 col-lg-9 col col-xl-12\" style={{ textAlign: \"right\" }}>\r\n                            <Button\r\n                                    type=\"primary\"\r\n                                   // onClick={()=>handleATGConfiguration}\r\n                                    onClick={handleATGConfiguration}\r\n                                    disabled={!isEnableATGConfigButton}\r\n                                    content={t(\"TankList_ATGConfiguration\")}\r\n                                ></Button>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    onClick={handleReadATGData}\r\n                                    disabled={!isEnableATGButton}\r\n                                    content={t(\"TankInfo_ReadATGData\")}\r\n                                ></Button>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    onClick={handleSaveATGData}\r\n                                    disabled={!isEnableATGButton}\r\n                                    content={t(\"TankInfo_SaveData\")}\r\n                                ></Button>\r\n                            </div>\r\n                        </div>) : (\"\")\r\n                    }\r\n\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    )\r\n}","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMDetailsHeader","_ref","entityCode","newEntityName","popUpContents","_jsx","TranslationConsumer","children","t","className","_jsxs","style","margin","undefined","length","Popup","element","fieldName","fieldValue","Icon","marginLeft","root","name","size","position","List","map","content","Content","defaultProps","TMDetailsUserActions","handleBack","handleSave","handleReset","saveEnabled","Button","onClick","float","disabled","AttributeDetails","selectedAttributeList","handleCellDataEdit","attributeValidationErrors","handleAttributeDateValue","attribute","DefaultValue","convertAttributeDatetoString","Date","chars","split","value","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","Constants","STRING","IsVisible","Input","fluid","label","DisplayName","indicator","IsMandatory","IsReadonly","onChange","error","Code","reserveSpace","INT","LONG","FLOAT","DOUBLE","BOOL","Checkbox","checked","toString","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","toLocaleString","TankDetails","tank","modTank","validationErrors","onFieldChange","isEnterpriseNode","modAttributeMetaDataList","onAttributeDataChange","listOptions","onTerminalChange","onTankGroupChange","isEnableATGButton","atgInfoDisable","handleReadATGData","handleSaveATGData","isBondingEnable","isATGEnabled","onActiveStatusChange","handleATGConfiguration","isEnableATGConfigButton","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","data","Name","Description","Select","placeholder","options","terminalCode","search","noResultsMessage","TankGroupCode","tankGroup","TankMode","getOptionsWithSelect","tankMode","BaseProductCode","BPMinDensity","BPMaxDensity","BPDensityUOM","IsBonded","Capacity","CapacityUOM","volumeUOM","AvailableRoom","Density","DensityUOM","densityUOM","GrossMass","Mass","GrossMassUOM","massUOM","GrossVolume","GrossVolumeUOM","NetVolume","NetVolumeUOM","WaterVolume","WaterVolumeUOM","TankLevel","WaterLevel","LevelUOM","lengthUOM","VapourGrossQuantity","VapourNetQuantity","VapourUOM","Pressure","PressureUOM","pressureUOM","Temperature","TemperatureUOM","temperatureUOM","Active","text","Remarks","ErrorBoundary","Accordion","title","attributeMetaDataList","textAlign","type","ddlOptions","selectOptionText","Array","isArray","filter","option","unshift","language","window","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}