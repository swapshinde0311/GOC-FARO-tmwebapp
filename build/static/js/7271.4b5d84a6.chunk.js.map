{"version":3,"file":"static/js/7271.4b5d84a6.chunk.js","mappings":"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","sources":["Components/UIBase/Details/TruckReceiptManualEntryDetails.jsx","Components/Composite/Details/TruckReceiptManualEntryDetailsComposite.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Input, Select, DatePicker, Accordion, Tab } from \"@scuf/common\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nTruckReceiptManualEntryDetails.propTypes = {\r\n  modTruckManualEntryLoadingDetailsCommonInfo: PropTypes.object.isRequired,\r\n  modTruckManualEntryLoadingFPInfo: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  validationErrorsForFP: PropTypes.object.isRequired,\r\n  currentCompTopUpReq: PropTypes.object.isRequired,\r\n  selectedAttributeBPList: PropTypes.object.isRequired,\r\n  bpAttributeValidationErrors: PropTypes.object.isRequired,\r\n  selectedAttributeAdvList: PropTypes.object.isRequired,\r\n  advAttributeValidationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    quantityUOMOptions: PropTypes.array,\r\n    densityUOMS: PropTypes.array,\r\n    temperatureUOMs: PropTypes.array,\r\n    calcValueUOM: PropTypes.array,\r\n    compartmentSeqNoInVehicleList: PropTypes.array,\r\n    Bays: PropTypes.array,\r\n    LoadingArms: PropTypes.array,\r\n    BCUs: PropTypes.array,\r\n  }).isRequired,\r\n  modTruckManualEntryLoadingBPInfo: PropTypes.array.isRequired,\r\n  modTruckManualEntryLoadingAdvInfo: PropTypes.array.isRequired,\r\n  selectedAttributeList: PropTypes.array.isRequired,\r\n  attributeValidationErrors: PropTypes.array.isRequired,\r\n  productList: PropTypes.array.isRequired,\r\n  validationErrorsForBP: PropTypes.array.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onTabChange: PropTypes.func.isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  handleAttributeCellDataEdit: PropTypes.func.isRequired,\r\n  handleAttributeCellDataEditBPandAdditive: PropTypes.func.isRequired,\r\n  activeIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nexport function TruckReceiptManualEntryDetails({\r\n  modTruckManualEntryLoadingDetailsCommonInfo,\r\n  modTruckManualEntryLoadingFPInfo,\r\n  modTruckManualEntryLoadingBPInfo,\r\n  modTruckManualEntryLoadingAdvInfo,\r\n  validationErrors,\r\n  validationErrorsForFP,\r\n  validationErrorsForBP,\r\n  listOptions,\r\n  onFieldChange,\r\n  onTabChange,\r\n  productList,\r\n  activeIndex,\r\n  onDateTextChange,\r\n  selectedAttributeList,\r\n  attributeValidationErrors,\r\n  selectedAttributeBPList,\r\n  bpAttributeValidationErrors,\r\n  selectedAttributeAdvList,\r\n  advAttributeValidationErrors,\r\n  handleAttributeCellDataEdit,\r\n  handleAttributeCellDataEditBPandAdditive,\r\n  currentCompTopUpReq,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    if (attributeValidationErrors !== undefined)\r\n      attributeValidation = attributeValidationErrors.find(\r\n        (selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        }\r\n      );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div>\r\n          <div className=\"detailsContainer\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder=\"Select\"\r\n                  value={\r\n                    modTruckManualEntryLoadingDetailsCommonInfo.CompartmentSeqNoInVehicle\r\n                  }\r\n                  label={t(\"LoadingDetailsEntry_CompSeqNo\")}\r\n                  options={Utilities.transferListtoOptions(\r\n                    listOptions.compartmentSeqNoInVehicleList\r\n                  )}\r\n                  onChange={(data) =>\r\n                    onFieldChange(\"Common\", \"CompartmentSeqNoInVehicle\", data)\r\n                  }\r\n                  multiple={false}\r\n                  reserveSpace={false}\r\n                  search={false}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                  indicator=\"required\"\r\n                  error={t(validationErrors.CompartmentSeqNoInVehicle)}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <DatePicker\r\n                  fluid\r\n                  value={new Date(modTruckManualEntryLoadingFPInfo.StartTime)}\r\n                  label={t(\"UnloadingDetailsEntry_unloadStartTime\")}\r\n                  disablePast={false}\r\n                  type=\"datetime\"\r\n                  indicator=\"required\"\r\n                  onChange={(data) => onFieldChange(\"FP\", \"StartTime\", data)}\r\n                  displayFormat={getCurrentDateFormat()}\r\n                  reserveSpace={false}\r\n                  disableFuture={true}\r\n                  minuteStep={1}\r\n                  onTextChange={(value, error) => {\r\n                    onDateTextChange(\"StartTime\", value, error);\r\n                  }}\r\n                  error={t(validationErrorsForFP.StartTime)}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <DatePicker\r\n                  fluid\r\n                  value={new Date(modTruckManualEntryLoadingFPInfo.EndTime)}\r\n                  label={t(\"UnloadingDetailsEntry_unloadEndTime\")}\r\n                  minuteStep={1}\r\n                  disablePast={false}\r\n                  type=\"datetime\"\r\n                  indicator=\"required\"\r\n                  onChange={(data) => onFieldChange(\"FP\", \"EndTime\", data)}\r\n                  displayFormat={getCurrentDateFormat()}\r\n                  reserveSpace={false}\r\n                  disableFuture={true}\r\n                  onTextChange={(value, error) => {\r\n                    onDateTextChange(\"EndTime\", value, error);\r\n                  }}\r\n                  error={t(validationErrorsForFP.EndTime)}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder=\"Select\"\r\n                  value={modTruckManualEntryLoadingDetailsCommonInfo.BayCode}\r\n                  label={t(\"Bay_Bay\")}\r\n                  options={Utilities.transferListtoOptions(listOptions.Bays)}\r\n                  onChange={(data) => onFieldChange(\"Common\", \"BayCode\", data)}\r\n                  multiple={false}\r\n                  reserveSpace={false}\r\n                  search={false}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                  indicator=\"required\"\r\n                  error={t(validationErrors.BayCode)}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder=\"Select\"\r\n                  value={modTruckManualEntryLoadingDetailsCommonInfo.BCUCode}\r\n                  label={t(\"LoadingDetails_BCUCode\")}\r\n                  options={Utilities.transferListtoOptions(listOptions.BCUs)}\r\n                  onChange={(data) => onFieldChange(\"Common\", \"BCUCode\", data)}\r\n                  multiple={false}\r\n                  reserveSpace={false}\r\n                  search={false}\r\n                  indicator=\"required\"\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                  error={t(validationErrors.BCUCode)}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder=\"Select\"\r\n                  value={modTruckManualEntryLoadingFPInfo.LoadingArmCode}\r\n                  label={t(\"Loadingarm_Loadingarm\")}\r\n                  options={Utilities.transferListtoOptions(\r\n                    listOptions.LoadingArms\r\n                  )}\r\n                  onChange={(data) =>\r\n                    onFieldChange(\"FP\", \"LoadingArmCode\", data)\r\n                  }\r\n                  multiple={false}\r\n                  reserveSpace={false}\r\n                  search={false}\r\n                  indicator=\"required\"\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                  error={t(validationErrorsForFP.LoadingArmCode)}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Input\r\n                  fluid\r\n                  value={modTruckManualEntryLoadingFPInfo.FinishedProductCode}\r\n                  label={t(\"MarineDispatchManualEntry_FinishedProduct\")}\r\n                  disabled={true}\r\n                  onChange={(data) =>\r\n                    onFieldChange(\"FP\", \"FinishedProductCode\", data)\r\n                  }\r\n                  reserveSpace={false}\r\n                  error={t(validationErrorsForFP.FinishedProductCode)}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder=\"Select\"\r\n                  value={modTruckManualEntryLoadingFPInfo.QuantityUOM}\r\n                  label={t(\"LoadingDetailsEntry_QuantityUOM\")}\r\n                  indicator=\"required\"\r\n                  options={listOptions.quantityUOMOptions}\r\n                  onChange={(data) => onFieldChange(\"FP\", \"QuantityUOM\", data)}\r\n                  multiple={false}\r\n                  reserveSpace={false}\r\n                  search={false}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                  error={t(validationErrorsForFP.QuantityUOM)}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Input\r\n                  fluid\r\n                  value={modTruckManualEntryLoadingFPInfo.TransactionID}\r\n                  label={t(\"LoadingDetailsEntry_TransactionNo\")}\r\n                  onChange={(data) =>\r\n                    onFieldChange(\"FP\", \"TransactionID\", data)\r\n                  }\r\n                  reserveSpace={false}\r\n                  error={t(validationErrorsForFP.TransactionID)}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Input\r\n                  fluid\r\n                  value={modTruckManualEntryLoadingFPInfo.Remarks}\r\n                  label={t(\"LoadingDetailsEntry_Remarks\")}\r\n                  onChange={(data) => onFieldChange(\"FP\", \"Remarks\", data)}\r\n                  reserveSpace={false}\r\n                  error={t(validationErrorsForFP.Remarks)}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <Tab\r\n              activeIndex={activeIndex}\r\n              onTabChange={(index) => onTabChange(index)}\r\n            >\r\n              {productList.map((item, index) => {\r\n                let title = item.baseProductCode\r\n                  ? t(item.productType) +\r\n                    \"-\" +\r\n                    item.code +\r\n                    \"(\" +\r\n                    t(\"BPCode\") +\r\n                    \"-\" +\r\n                    item.baseProductCode +\r\n                    \")\"\r\n                  : t(item.productType) + \"-\" + item.code;\r\n                return (\r\n                  <Tab.Pane key={index} title={title}>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <Input\r\n                          fluid\r\n                          value={\r\n                            modTruckManualEntryLoadingBPInfo[index]\r\n                              .GrossQuantity\r\n                          }\r\n                          label={t(\"GrossQuantity\")}\r\n                          indicator=\"required\"\r\n                          onChange={(data) =>\r\n                            onFieldChange(\"BP\", \"GrossQuantity\", data)\r\n                          }\r\n                          reserveSpace={false}\r\n                          error={t(validationErrorsForBP[index].GrossQuantity)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <Input\r\n                          fluid\r\n                          value={\r\n                            modTruckManualEntryLoadingBPInfo[index].NetQuantity\r\n                          }\r\n                          label={t(\"NetQuantity\")}\r\n                          onChange={(data) =>\r\n                            onFieldChange(\"BP\", \"NetQuantity\", data)\r\n                          }\r\n                          reserveSpace={false}\r\n                          error={t(validationErrorsForBP[index].NetQuantity)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <Input\r\n                          fluid\r\n                          value={\r\n                            modTruckManualEntryLoadingBPInfo[index].Temperature\r\n                          }\r\n                          label={t(\"Temperature\")}\r\n                          onChange={(data) =>\r\n                            onFieldChange(\"BP\", \"Temperature\", data)\r\n                          }\r\n                          reserveSpace={false}\r\n                          error={t(validationErrorsForBP[index].Temperature)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <Select\r\n                          fluid\r\n                          value={\r\n                            modTruckManualEntryLoadingBPInfo[index]\r\n                              .TemperatureUOM\r\n                          }\r\n                          options={listOptions.temperatureUOMs}\r\n                          placeholder=\"Select\"\r\n                          label={t(\"MarineDispatchManualEntry_TemperatureUOM\")}\r\n                          onChange={(data) =>\r\n                            onFieldChange(\"BP\", \"TemperatureUOM\", data)\r\n                          }\r\n                          multiple={false}\r\n                          reserveSpace={false}\r\n                          search={false}\r\n                          noResultsMessage={t(\"noResultsMessage\")}\r\n                          error={t(validationErrorsForBP[index].TemperatureUOM)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <Input\r\n                          fluid\r\n                          value={\r\n                            modTruckManualEntryLoadingBPInfo[index]\r\n                              .ProductDensity\r\n                          }\r\n                          label={t(\"ViewShipment_Density\")}\r\n                          onChange={(data) =>\r\n                            onFieldChange(\"BP\", \"ProductDensity\", data)\r\n                          }\r\n                          reserveSpace={false}\r\n                          error={t(validationErrorsForBP[index].ProductDensity)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <Select\r\n                          fluid\r\n                          value={\r\n                            modTruckManualEntryLoadingBPInfo[index]\r\n                              .ProductDensityUOM\r\n                          }\r\n                          options={listOptions.densityUOMS}\r\n                          placeholder=\"Select\"\r\n                          label={t(\"ViewShipment_DensityUOM\")}\r\n                          onChange={(data) =>\r\n                            onFieldChange(\"BP\", \"ProductDensityUOM\", data)\r\n                          }\r\n                          multiple={false}\r\n                          reserveSpace={false}\r\n                          search={false}\r\n                          noResultsMessage={t(\"noResultsMessage\")}\r\n                          error={t(\r\n                            validationErrorsForBP[index].ProductDensityUOM\r\n                          )}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <Select\r\n                          fluid\r\n                          value={\r\n                            modTruckManualEntryLoadingBPInfo[index].MeterCode\r\n                          }\r\n                          options={Utilities.transferListtoOptions(\r\n                            listOptions.meterCodes\r\n                          )}\r\n                          placeholder=\"Select\"\r\n                          label={t(\"Meter_Code\")}\r\n                          onChange={(data) =>\r\n                            onFieldChange(\"BP\", \"MeterCode\", data)\r\n                          }\r\n                          multiple={false}\r\n                          reserveSpace={false}\r\n                          search={false}\r\n                          indicator=\"required\"\r\n                          noResultsMessage={t(\"noResultsMessage\")}\r\n                          error={t(validationErrorsForBP[index].MeterCode)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <Select\r\n                          fluid\r\n                          value={\r\n                            modTruckManualEntryLoadingBPInfo[index].TankCode\r\n                          }\r\n                          options={Utilities.transferListtoOptions(\r\n                            listOptions.tankCodes\r\n                          )}\r\n                          placeholder=\"Select\"\r\n                          label={t(\"TankCode\")}\r\n                          onChange={(data) =>\r\n                            onFieldChange(\"BP\", \"TankCode\", data)\r\n                          }\r\n                          multiple={false}\r\n                          reserveSpace={false}\r\n                          search={false}\r\n                          noResultsMessage={t(\"noResultsMessage\")}\r\n                          error={t(validationErrorsForBP[index].TankCode)}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <Input\r\n                          fluid\r\n                          value={\r\n                            modTruckManualEntryLoadingBPInfo[index]\r\n                              .StartTotalizer\r\n                          }\r\n                          label={t(\"StartTotalizer\")}\r\n                          onChange={(data) =>\r\n                            onFieldChange(\"BP\", \"StartTotalizer\", data)\r\n                          }\r\n                          reserveSpace={false}\r\n                          error={t(validationErrorsForBP[index].StartTotalizer)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <Input\r\n                          fluid\r\n                          value={\r\n                            modTruckManualEntryLoadingBPInfo[index].EndTotalizer\r\n                          }\r\n                          label={t(\"EndTotalizer\")}\r\n                          onChange={(data) =>\r\n                            onFieldChange(\"BP\", \"EndTotalizer\", data)\r\n                          }\r\n                          reserveSpace={false}\r\n                          error={t(validationErrorsForBP[index].EndTotalizer)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <Input\r\n                          fluid\r\n                          value={\r\n                            modTruckManualEntryLoadingBPInfo[index]\r\n                              .NetStartTotalizer\r\n                          }\r\n                          label={t(\r\n                            \"MarineDispatchManualEntry_NetStartTotalizer\"\r\n                          )}\r\n                          onChange={(data) =>\r\n                            onFieldChange(\"BP\", \"NetStartTotalizer\", data)\r\n                          }\r\n                          reserveSpace={false}\r\n                          error={t(\r\n                            validationErrorsForBP[index].NetStartTotalizer\r\n                          )}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <Input\r\n                          fluid\r\n                          value={\r\n                            modTruckManualEntryLoadingBPInfo[index]\r\n                              .NetEndTotalizer\r\n                          }\r\n                          label={t(\"MarineDispatchManualEntry_NetEndTotalizer\")}\r\n                          onChange={(data) =>\r\n                            onFieldChange(\"BP\", \"NetEndTotalizer\", data)\r\n                          }\r\n                          reserveSpace={false}\r\n                          error={t(\r\n                            validationErrorsForBP[index].NetEndTotalizer\r\n                          )}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <Input\r\n                          fluid\r\n                          value={\r\n                            modTruckManualEntryLoadingBPInfo[index]\r\n                              .CalculatedGross\r\n                          }\r\n                          label={t(\"LoadingDetails_CalculatedGross\")}\r\n                          onChange={(data) =>\r\n                            onFieldChange(\"BP\", \"CalculatedGross\", data)\r\n                          }\r\n                          reserveSpace={false}\r\n                          error={t(\r\n                            validationErrorsForBP[index].CalculatedGross\r\n                          )}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <Input\r\n                          fluid\r\n                          value={\r\n                            modTruckManualEntryLoadingBPInfo[index]\r\n                              .CalculatedNet\r\n                          }\r\n                          label={t(\"LoadingDetails_CalculatedNet\")}\r\n                          onChange={(data) =>\r\n                            onFieldChange(\"BP\", \"CalculatedNet\", data)\r\n                          }\r\n                          reserveSpace={false}\r\n                          error={t(validationErrorsForBP[index].CalculatedNet)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        <Select\r\n                          fluid\r\n                          value={\r\n                            modTruckManualEntryLoadingBPInfo[index]\r\n                              .CalculatedValueUOM\r\n                          }\r\n                          options={listOptions.calcValueUOM}\r\n                          placeholder=\"Select\"\r\n                          label={t(\"LoadingDetails_CalculatedValueUOM\")}\r\n                          onChange={(data) =>\r\n                            onFieldChange(\"BP\", \"CalculatedValueUOM\", data)\r\n                          }\r\n                          multiple={false}\r\n                          reserveSpace={false}\r\n                          search={false}\r\n                          noResultsMessage={t(\"noResultsMessage\")}\r\n                          error={t(\r\n                            validationErrorsForBP[index].CalculatedValueUOM\r\n                          )}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    {selectedAttributeList.length > 0\r\n                      ? selectedAttributeList.map((attire) => (\r\n                          <ErrorBoundary>\r\n                            <Accordion>\r\n                              <Accordion.Content\r\n                                className=\"attributeAccordian\"\r\n                                title={t(\"Attributes_Header\")}\r\n                              >\r\n                                <AttributeDetails\r\n                                  selectedAttributeList={\r\n                                    attire.attributeMetaDataList\r\n                                  }\r\n                                  handleCellDataEdit={\r\n                                    handleAttributeCellDataEdit\r\n                                  }\r\n                                  attributeValidationErrors={handleValidationErrorFilter(\r\n                                    attributeValidationErrors,\r\n                                    attire.TerminalCode\r\n                                  )}\r\n                                ></AttributeDetails>\r\n                              </Accordion.Content>\r\n                            </Accordion>\r\n                          </ErrorBoundary>\r\n                        ))\r\n                      : null}\r\n                  </Tab.Pane>\r\n                );\r\n              })}\r\n            </Tab>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { toast } from \"react-toastify\";\r\nimport { TruckReceiptManualEntryDetails } from \"../../UIBase/Details/TruckReceiptManualEntryDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport lodash from \"lodash\";\r\nimport {\r\n  emptyTruckManualEntryLoadingDetailsCommonInfo,\r\n  emptyTruckManualEntryLoadingProductInfo,\r\n} from \"../../../JS/DefaultEntities\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport {\r\n  truckReceiptManualEntryProdValidationDef,\r\n  truckReceiptManualEntryCommonValidationDef,\r\n  truckReceiptManualEntryBaseProdValidationDef,\r\n} from \"../../../JS/ValidationDef\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { receiptManualEntryBPAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport {functionGroups,fnTruckReceipt, fnUnloadingDetails} from \"../../../JS/FunctionGroups\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass TruckReceiptManualEntryDetailsComposite extends Component {\r\n  state = {\r\n    modTruckManualEntryLoadingDetailsCommonInfo: lodash.cloneDeep(\r\n      emptyTruckManualEntryLoadingDetailsCommonInfo\r\n    ),\r\n    modTruckManualEntryLoadingFPInfo: lodash.cloneDeep(\r\n      emptyTruckManualEntryLoadingProductInfo\r\n    ),\r\n    modTruckManualEntryLoadingBPInfo: [],\r\n    modTruckManualEntryLoadingAdvInfo: [],\r\n    quantityUOMOptions: [],\r\n    densityUOMS: [],\r\n    temperatureUOMs: [],\r\n    calcValueUOM: [],\r\n    compartmentSeqNoInVehicleList: [],\r\n    Bays: [],\r\n    LoadingArms: [],\r\n    BCUs: [],\r\n    BaysandBCUs: [],\r\n    productList: [],\r\n    activeIndex: 0,\r\n    meterCodes: [],\r\n    tankCodes: [],\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      truckReceiptManualEntryCommonValidationDef\r\n    ),\r\n    validationErrorsForFP: Utilities.getInitialValidationErrors(\r\n      truckReceiptManualEntryProdValidationDef\r\n    ),\r\n    attributeMetaDataList: [],\r\n    validationErrorsForBP: [],\r\n    selectedAttributeList: [],\r\n    attributeValidationErrors: [],\r\n    selectedAttributeBPList: {},\r\n    bpAttributeValidationErrors: {},\r\n    selectedAttributeAdvList: {},\r\n    advAttributeValidationErrors: {},\r\n    manualEntrySaveEnable: false,\r\n    isBCUTransLoad: false,\r\n    transloadSource: \"\",\r\n    currentCompTopUpReq: {},\r\n    ManualEntryFieldDeatils: [],\r\n    showAuthenticationLayout: false,\r\n    tempUnLoadingDetails: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.setDefaultValues()\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.GetUOMList();\r\n      this.GetBaysandBCUs();\r\n      this.getCompartmentSeqNo();\r\n      this.getmeterCodes();\r\n      this.getTankCodes();\r\n      this.getAttributes();\r\n       this.setState({manualEntrySaveEnable : Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.modify,\r\n        fnTruckReceipt)})\r\n    } catch (error) {\r\n      console.log(\"Error occured on componentDidMount\", error);\r\n    }\r\n  }\r\n\r\n  setDefaultValues() {\r\n    // emptyTruckManualEntryLoadingProductInfo.StartTime = new Date();\r\n    // emptyTruckManualEntryLoadingProductInfo.EndTime = new Date();\r\n    emptyTruckManualEntryLoadingProductInfo.QuantityUOM = this.props.receipt.ReceiptQuantityUOM; // to display Receipt Qty UOM, in place of MOT UOM\r\n    this.setState({\r\n      modTruckManualEntryLoadingFPInfo: lodash.cloneDeep(emptyTruckManualEntryLoadingProductInfo),\r\n      modTruckManualEntryLoadingDetailsCommonInfo: lodash.cloneDeep(\r\n        emptyTruckManualEntryLoadingDetailsCommonInfo\r\n      ),\r\n      modTruckManualEntryLoadingAdvInfo: [],\r\n      productList: [],\r\n    });\r\n  }\r\n  formAttributesforEachTab(attributeMetaDataList) {\r\n    let selectedTerminals = attributeMetaDataList[0].TerminalCode;\r\n\r\n    var selectedAttributeList = [];\r\n\r\n    attributeMetaDataList.forEach(function (attributeMetaData) {\r\n      if (attributeMetaData.TerminalCode === selectedTerminals) {\r\n        selectedAttributeList.push(attributeMetaData);\r\n      }\r\n    });\r\n\r\n    return selectedAttributeList;\r\n  }\r\n  handleAttributes() {\r\n    let attributeMetaDataList = lodash.cloneDeep(\r\n      this.state.attributeMetaDataList.UNLOADINGTRANSACTIONS\r\n    );\r\n    let selectedAttributeList = lodash.cloneDeep(\r\n      this.state.selectedAttributeList\r\n    );\r\n\r\n    if (attributeMetaDataList.length > 0) {\r\n      selectedAttributeList = this.formAttributesforEachTab(\r\n        attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        selectedAttributeList,\r\n      });\r\n      let attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n          (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n        );\r\n      });\r\n    }\r\n  }\r\n  getAttributes() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [receiptManualEntryBPAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n            attributeValidationErrors:\r\n              Utilities.getAttributeInitialValidationErrors(\r\n                result.EntityResult.UNLOADINGTRANSACTIONS\r\n              ),\r\n          });\r\n        } else {\r\n          console.log(\"Failed to get Attributes\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Attributes:\", error);\r\n    }\r\n  }\r\n  GetBaysandBCUs() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetBaysandBCUs,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (result.EntityResult !== null) {\r\n              let Bays = [];\r\n              let BaysandBCUs = result.EntityResult;\r\n              if (Array.isArray(Object.keys(BaysandBCUs))) {\r\n                Object.keys(BaysandBCUs).forEach((element) => {\r\n                  Bays.push(element);\r\n                });\r\n              }\r\n              this.setState({ Bays, BaysandBCUs });\r\n            }\r\n          } else {\r\n            console.log(\r\n              \"TruckShipmentManualEntryDetailsComposite: Error in GetBaysandBCUs:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"TruckShipmentManualEntryDetailsComposite: Error while getting GetBaysandBCUs:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentManualEntryDetailsComposite: Error in GetBaysandBCUs:\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  GetUOMList() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let quantityUOMOptions = [];\r\n            let densityUOMS = [];\r\n            let temperatureUOMs = [];\r\n            let calcValueUOM = [];\r\n\r\n            if (Array.isArray(result.EntityResult.VOLUME)) {\r\n              calcValueUOM = Utilities.transferListtoOptions(\r\n                result.EntityResult.VOLUME\r\n              );\r\n              quantityUOMOptions = Utilities.transferListtoOptions(\r\n                result.EntityResult.VOLUME\r\n              );\r\n            }\r\n            if (Array.isArray(result.EntityResult.MASS)) {\r\n              let massUOMOptions = Utilities.transferListtoOptions(\r\n                result.EntityResult.MASS\r\n              );\r\n              massUOMOptions.forEach((massUOM) => {\r\n                quantityUOMOptions.push(massUOM);\r\n                calcValueUOM.push(massUOM);\r\n              });\r\n            }\r\n            if (Array.isArray(result.EntityResult.DENSITY)) {\r\n              densityUOMS = Utilities.transferListtoOptions(\r\n                result.EntityResult.DENSITY\r\n              );\r\n            }\r\n            if (Array.isArray(result.EntityResult.TEMPERATURE)) {\r\n              temperatureUOMs = Utilities.transferListtoOptions(\r\n                result.EntityResult.TEMPERATURE\r\n              );\r\n            }\r\n\r\n            this.setState({\r\n              quantityUOMOptions,\r\n              densityUOMS,\r\n              calcValueUOM,\r\n              temperatureUOMs,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\r\n            \"TruckShipmentManualEntryDetailsComposite: Error in GetUOMList:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"TruckShipmentManualEntryDetailsComposite: Error while getting GetUOMList:\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n\r\n      let modTruckManualEntryLoadingFPInfo = lodash.cloneDeep(emptyTruckManualEntryLoadingProductInfo);\r\n      modTruckManualEntryLoadingFPInfo.StartTime = new Date();\r\n      modTruckManualEntryLoadingFPInfo.EndTime = new Date();\r\n      modTruckManualEntryLoadingFPInfo.QuantityUOM = this.props.receipt.ReceiptQuantityUOM;\r\n\r\n      this.setState({\r\n        modTruckManualEntryLoadingDetailsCommonInfo: lodash.cloneDeep(\r\n          emptyTruckManualEntryLoadingDetailsCommonInfo\r\n        ),\r\n        modTruckManualEntryLoadingFPInfo,\r\n        modTruckManualEntryLoadingBPInfo: [],\r\n        modTruckManualEntryLoadingAdvInfo: [],\r\n        LoadingArms: [],\r\n        BCUs: [],\r\n        productList: [],\r\n        activeIndex: 0,\r\n        validationErrorsForBP: [],\r\n        manualEntrySaveEnable : Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.modify,\r\n        fnTruckReceipt),\r\n        isBCUTransLoad: false,\r\n        transloadSource: \"\",\r\n        currentCompTopUpReq: {},\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentManualEntryDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  GetLoadingArms(BCUCode) {\r\n    let LoadingArmsForBCU = []\r\n\r\n    try {\r\n      let modTruckManualEntryLoadingFPInfo = lodash.cloneDeep(this.state.modTruckManualEntryLoadingFPInfo)\r\n      axios(\r\n        RestAPIs.GetLoadingArms + \"?bcuCode=\" + BCUCode,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n\r\n          var result = response.data;\r\n\r\n          if (result.IsSuccess === true) {\r\n            if (result.EntityResult !== null) {\r\n\r\n              LoadingArmsForBCU = result.EntityResult;\r\n              if (Array.isArray(LoadingArmsForBCU) && LoadingArmsForBCU.length === 1) {\r\n                modTruckManualEntryLoadingFPInfo.LoadingArmCode = LoadingArmsForBCU[0];\r\n                this.GetMetersForLA(BCUCode, LoadingArmsForBCU[0]);\r\n              }\r\n              else {\r\n                modTruckManualEntryLoadingFPInfo.LoadingArmCode = '';\r\n              }\r\n              this.setState({ LoadingArms: result.EntityResult, modTruckManualEntryLoadingFPInfo });\r\n            }\r\n          } else {\r\n            console.log(\r\n              \"TruckReceiptManualEntryDetailsComposite: Error in GetLoadingArms:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"TruckReceiptManualEntryDetailsComposite: Error while getting GetLoadingArms:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckReceiptManualEntryDetailsComposite: Error while getting GetLoadingArms:\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  getBCUs(BayCode) {\r\n    let BCUs = [];\r\n    try {\r\n      let BaysandBCUs = lodash.cloneDeep(this.state.BaysandBCUs);\r\n\r\n      if (Object.keys(BaysandBCUs).length > 0) {\r\n        BCUs = BaysandBCUs[BayCode];\r\n      }\r\n\r\n      this.setState({ BCUs });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentManualEntryDetailsComposite: Error in getBCUs:\",\r\n        error\r\n      );\r\n    }\r\n    return BCUs;\r\n  }\r\n  getBCUDetails(deviceCode) {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.bcuCode,\r\n          value: deviceCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.bcuCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetBCUDevice,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let bcu = result.EntityResult;\r\n\r\n\r\n          let modTruckManualEntryLoadingBPInfo = lodash.cloneDeep(this.state.modTruckManualEntryLoadingBPInfo);\r\n          modTruckManualEntryLoadingBPInfo.map(item => { item.TemperatureUOM = bcu.TemperatureUOM; item.ProductDensityUOM = bcu.DensityUOM; })\r\n\r\n          let modTruckManualEntryLoadingAdvInfo = lodash.cloneDeep(this.state.modTruckManualEntryLoadingAdvInfo);\r\n          modTruckManualEntryLoadingAdvInfo.map(item => { item.TemperatureUOM = bcu.TemperatureUOM; item.ProductDensityUOM = bcu.DensityUOM; })\r\n\r\n          this.setState({\r\n            modTruckManualEntryLoadingBPInfo, modTruckManualEntryLoadingAdvInfo\r\n          });\r\n\r\n\r\n          if (bcu.ReceiptSource === Constants.TransportationType.RAIL) {\r\n            this.setState({\r\n              isBCUTransLoad: true,\r\n              transloadSource: Constants.TransportationType.RAIL,\r\n            });\r\n          } else if (\r\n            bcu.ReceiptSource === Constants.TransportationType.MARINE\r\n          ) {\r\n            this.setState({\r\n              isBCUTransLoad: true,\r\n              transloadSource: Constants.TransportationType.MARINE,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentManualEntryDetailsComposite:Error while getting getBCUDeviceDetails\"\r\n      );\r\n    }\r\n  }\r\n\r\n  GetMetersForLA(bcuCode, loadingArmCode) {\r\n\r\n\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.siteViewType,\r\n          value: Constants.siteViewType.ROAD_BCUVIEW,\r\n        },\r\n        {\r\n          key: KeyCodes.bcuCode,\r\n          value: bcuCode,\r\n        },\r\n        {\r\n          key: KeyCodes.terminalCode,\r\n          value: this.props.receipt.ActualTerminalCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.siteViewType,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetBCUViewTree,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            Array.isArray(result.EntityResult) &&\r\n            result.EntityResult.length > 0\r\n          ) {\r\n\r\n            let loadingArm = result.EntityResult[0].AssociatedArmsList.find(larm => larm.Code === loadingArmCode);\r\n            if (loadingArm !== null) {\r\n              let mainLineMeters = [];\r\n              let additiveMeters = [];\r\n              mainLineMeters = loadingArm.AssociatedMeterList.find(meter => meter.MeterLineType === \"MAINLINE\");\r\n              additiveMeters = loadingArm.AssociatedMeterList.find(meter => meter.MeterLineType === \"ADDITIVE\");\r\n              let bpMeterCode = '';\r\n              let additiveMeterCode = '';\r\n              if (mainLineMeters.MeterList.length === 1) {\r\n                bpMeterCode = mainLineMeters.MeterList[0].Code;\r\n              }\r\n              if (additiveMeters.MeterList.length === 1) {\r\n                additiveMeterCode = additiveMeters.MeterList[0].Code;\r\n              }\r\n\r\n\r\n              if (bpMeterCode !== '') {\r\n                let modTruckManualEntryLoadingBPInfo = lodash.cloneDeep(this.state.modTruckManualEntryLoadingBPInfo);\r\n                modTruckManualEntryLoadingBPInfo.map(item => { item.MeterCode = bpMeterCode; })\r\n                this.setState({\r\n                  modTruckManualEntryLoadingBPInfo\r\n                });\r\n              }\r\n\r\n              if (additiveMeterCode !== '') {\r\n                let modTruckManualEntryLoadingAdvInfo = lodash.cloneDeep(this.state.modTruckManualEntryLoadingAdvInfo);\r\n                modTruckManualEntryLoadingAdvInfo.map(item => { item.MeterCode = additiveMeterCode; })\r\n                this.setState({\r\n                  modTruckManualEntryLoadingAdvInfo\r\n                });\r\n              }\r\n            }\r\n\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"SiteTreeView:Error occured in GetMetersForLA\", error);\r\n    }\r\n  }\r\n  getFPReceipeDetails(compSequenceNo) {\r\n    try {\r\n      let modTruckManualEntryLoadingFPInfo = lodash.cloneDeep(\r\n        this.state.modTruckManualEntryLoadingFPInfo\r\n      );\r\n      let finishedProd =\r\n        this.props.receipt.ReceiptOriginTerminalCompartmentsInfo.find(\r\n          (comp) => {\r\n            return comp.CompartmentSeqNoInVehicle.toString() === compSequenceNo;\r\n          }\r\n        ).FinishedProductCode;\r\n      modTruckManualEntryLoadingFPInfo.FinishedProductCode = finishedProd;\r\n\r\n      let validationErrorsForFP = lodash.cloneDeep(\r\n        this.state.validationErrorsForFP\r\n      );\r\n      validationErrorsForFP.FinishedProductCode = \"\";\r\n      this.setState({ modTruckManualEntryLoadingFPInfo });\r\n\r\n      axios(\r\n        RestAPIs.getFPReceipeDetails +\r\n        \"?finishedProduct=\" +\r\n        finishedProd +\r\n        \"&shCode=\" +\r\n        this.props.selectedShareholder,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (result.EntityResult !== null) {\r\n              let productList = [];\r\n              let validationErrorsForBP = [];\r\n              let modTruckManualEntryLoadingBPInfo = [];\r\n              if (Array.isArray(result.EntityResult.Table)) {\r\n                result.EntityResult.Table.forEach((item) => {\r\n                  emptyTruckManualEntryLoadingProductInfo.BaseProductCode =\r\n                    item.code;\r\n                  productList.push({\r\n                    code: item.code,\r\n                    productType: item.ProductTYPE,\r\n                    // baseProductCode: null\r\n                  });\r\n                  validationErrorsForBP.push(\r\n                    Utilities.getInitialValidationErrors(\r\n                      truckReceiptManualEntryBaseProdValidationDef\r\n                    )\r\n                  );\r\n                  modTruckManualEntryLoadingBPInfo.push(\r\n                    lodash.cloneDeep(emptyTruckManualEntryLoadingProductInfo)\r\n                  );\r\n                });\r\n              }\r\n              this.setState(\r\n                {\r\n                  productList,\r\n                  validationErrorsForBP, //validationErrorsForAdditive,\r\n                  modTruckManualEntryLoadingFPInfo,\r\n                  modTruckManualEntryLoadingBPInfo,\r\n                  manualEntrySaveEnable : Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.modify,\r\n        fnTruckReceipt)\r\n                },\r\n                () => {\r\n                  this.handleAttributes();\r\n                }\r\n              );\r\n            }\r\n          } else {\r\n            console.log(\r\n              \"TruckShipmentManualEntryDetailsComposite: Error in getFPReceiptDetails:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"TruckShipmentManualEntryDetailsComposite: Error while getting FPReceiptDetails:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentManualEntryDetailsComposite: Error while getting getFPReceiptDetails:\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  handleChange = (type, propertyName, data, additiveCode = null) => {\r\n    try {\r\n      let validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      let validationErrorsForFP = lodash.cloneDeep(\r\n        this.state.validationErrorsForFP\r\n      );\r\n      let validationErrorsForBP = lodash.cloneDeep(\r\n        this.state.validationErrorsForBP\r\n      );\r\n\r\n      if (type === Constants.ViewAllShipmentFields.Common) {\r\n        let modTruckManualEntryLoadingDetailsCommonInfo = lodash.cloneDeep(\r\n          this.state.modTruckManualEntryLoadingDetailsCommonInfo\r\n        );\r\n        modTruckManualEntryLoadingDetailsCommonInfo[propertyName] = data;\r\n        if (propertyName === Constants.ViewAllShipmentFields.BAY) {\r\n          let BCUs = this.getBCUs(data);\r\n\r\n          if (BCUs.length > 0 && BCUs.length === 1) {\r\n            modTruckManualEntryLoadingDetailsCommonInfo.BCUCode = BCUs[0];\r\n\r\n            this.GetLoadingArms(BCUs[0]);\r\n\r\n            this.getBCUDetails(BCUs[0])\r\n          }\r\n        }\r\n        if (propertyName === Constants.ViewAllShipmentFields.BCU) {\r\n\r\n          this.GetLoadingArms(data);\r\n          this.getBCUDetails(data);\r\n        }\r\n        if (\r\n          propertyName ===\r\n          Constants.ViewAllShipmentFields.CompartmentSeqNoInVehicle\r\n        ) {\r\n\r\n          this.getFPReceipeDetails(data);\r\n          // this.getCompartmentSeqNo();\r\n        }\r\n        if (\r\n          truckReceiptManualEntryCommonValidationDef[propertyName] !== undefined\r\n        ) {\r\n          validationErrors[propertyName] = Utilities.validateField(\r\n            truckReceiptManualEntryCommonValidationDef[propertyName],\r\n            data\r\n          );\r\n        }\r\n        this.setState({\r\n          modTruckManualEntryLoadingDetailsCommonInfo,\r\n          validationErrors,\r\n        });\r\n      }\r\n      if (type === Constants.ViewAllShipmentFields.FP) {\r\n        let modTruckManualEntryLoadingFPInfo = lodash.cloneDeep(\r\n          this.state.modTruckManualEntryLoadingFPInfo\r\n        );\r\n        modTruckManualEntryLoadingFPInfo[propertyName] = data;\r\n\r\n\r\n        if (propertyName === Constants.ViewAllShipmentFields.LOADINGARM) {\r\n\r\n          let modTruckManualEntryLoadingDetailsCommonInfo = lodash.cloneDeep(this.state.modTruckManualEntryLoadingDetailsCommonInfo)\r\n          this.GetMetersForLA(modTruckManualEntryLoadingDetailsCommonInfo.BCUCode, data);\r\n        }\r\n\r\n        if (\r\n          truckReceiptManualEntryProdValidationDef[propertyName] !== undefined\r\n        ) {\r\n          validationErrorsForFP[propertyName] = Utilities.validateField(\r\n            truckReceiptManualEntryProdValidationDef[propertyName],\r\n            data\r\n          );\r\n        }\r\n        this.setState({\r\n          modTruckManualEntryLoadingFPInfo,\r\n          validationErrorsForFP,\r\n        });\r\n      }\r\n      if (type === Constants.ViewAllShipmentFields.BP) {\r\n        let index = this.state.activeIndex;\r\n        let modTruckManualEntryLoadingBPInfo = lodash.cloneDeep(\r\n          this.state.modTruckManualEntryLoadingBPInfo\r\n        );\r\n        modTruckManualEntryLoadingBPInfo[index][propertyName] = data;\r\n        if (\r\n          truckReceiptManualEntryBaseProdValidationDef[propertyName] !==\r\n          undefined\r\n        ) {\r\n          validationErrorsForBP[propertyName] = Utilities.validateField(\r\n            truckReceiptManualEntryBaseProdValidationDef[propertyName],\r\n            data\r\n          );\r\n        }\r\n        this.setState({\r\n          modTruckManualEntryLoadingBPInfo,\r\n          validationErrorsForBP,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        this.props.ShipmentType +\r\n        \"TruckShipmentManualEntryDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  fillAttributeDetails() {\r\n    try {\r\n      let attributeList = lodash.cloneDeep(this.state.selectedAttributeList);\r\n      let modTruckManualEntryLoadingBPInfo = lodash.cloneDeep(\r\n        this.state.modTruckManualEntryLoadingBPInfo\r\n      );\r\n      modTruckManualEntryLoadingBPInfo[0].Attributes = [];\r\n      attributeList.forEach((comp) => {\r\n        let attribute = {\r\n          ListOfAttributeData: [],\r\n        };\r\n        attribute.TerminalCode = comp.TerminalCode;\r\n        comp.attributeMetaDataList.forEach((det) => {\r\n          attribute.ListOfAttributeData.push({\r\n            AttributeCode: det.Code,\r\n            AttributeValue: det.DefaultValue,\r\n          });\r\n        });\r\n        modTruckManualEntryLoadingBPInfo[0].Attributes.push(attribute);\r\n      });\r\n      this.setState({ modTruckManualEntryLoadingBPInfo });\r\n      return modTruckManualEntryLoadingBPInfo;\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  addLoadingDetails = () => {\r\n    try {\r\n      this.setState({ manualEntrySaveEnable: false });\r\n      let tempUnLoadingDetails = lodash.cloneDeep(this.state.tempUnLoadingDetails);\r\n      this.CreateManualEntry(tempUnLoadingDetails);\r\n    } catch (error) {\r\n      console.log(\"Truck unLoading DetailsComposite : Error in save Receipt Unloading\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n      //this.setState({ manualEntrySaveEnable: false });\r\n      let modTruckManualEntryLoadingBPInfo = this.fillAttributeDetails();\r\n      // this.fillAttributeDetails(lodash.cloneDeep(this.state))\r\n      let LoadingDetailsInfos = this.fillManualEntryDetails(\r\n        modTruckManualEntryLoadingBPInfo\r\n      );\r\n      if (this.validateSave()) {\r\n        let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempUnLoadingDetails = lodash.cloneDeep(LoadingDetailsInfos);\r\n      this.setState({ showAuthenticationLayout, tempUnLoadingDetails }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.addLoadingDetails();\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ manualEntrySaveEnable : Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.modify,\r\n        fnTruckReceipt), showAuthenticationLayout:false, });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineShipmentDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleAttributeCellDataEditFP = (attribute, value) => {\r\n    try {\r\n      attribute.DefaultValue = value;\r\n      this.setState({\r\n        attribute: attribute,\r\n      });\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentManualEntryDetailsComposite:Error occured on handleAttributeCellDataEditFP\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateSave = () => {\r\n    const {\r\n      modTruckManualEntryLoadingDetailsCommonInfo,\r\n      modTruckManualEntryLoadingFPInfo,\r\n      modTruckManualEntryLoadingBPInfo,\r\n    } = this.state;\r\n\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    const validationErrorsForFP = lodash.cloneDeep(\r\n      this.state.validationErrorsForFP\r\n    );\r\n    const validationErrorsForBP = lodash.cloneDeep(\r\n      this.state.validationErrorsForBP\r\n    );\r\n    // let isWeightBased =\r\n    //   currentCompTopUpReq !== undefined &&\r\n    //   currentCompTopUpReq.IsWeightBased !== \"0\"\r\n    //     ? true\r\n    //     : false;\r\n    Object.keys(truckReceiptManualEntryProdValidationDef).forEach(function (\r\n      key\r\n    ) {\r\n      validationErrorsForFP[key] = Utilities.validateField(\r\n        truckReceiptManualEntryProdValidationDef[key],\r\n        modTruckManualEntryLoadingFPInfo[key]\r\n      );\r\n    });\r\n\r\n    Object.keys(truckReceiptManualEntryCommonValidationDef).forEach(function (\r\n      key\r\n    ) {\r\n      validationErrors[key] = Utilities.validateField(\r\n        truckReceiptManualEntryCommonValidationDef[key],\r\n        modTruckManualEntryLoadingDetailsCommonInfo[key]\r\n      );\r\n    });\r\n\r\n    this.state.productList.map((item, index) => {\r\n      Object.keys(truckReceiptManualEntryBaseProdValidationDef).forEach(\r\n        function (key) {\r\n          validationErrorsForBP[index][key] = Utilities.validateField(\r\n            truckReceiptManualEntryBaseProdValidationDef[key],\r\n            modTruckManualEntryLoadingBPInfo[index][key]\r\n          );\r\n        }\r\n      );\r\n    });\r\n\r\n    if (\r\n      modTruckManualEntryLoadingFPInfo.StartTime >=\r\n      modTruckManualEntryLoadingFPInfo.EndTime\r\n    ) {\r\n      validationErrorsForFP[\"StartTime\"] =\r\n        \"MarineReceiptManualEntry_ErrorUnloadTime\";\r\n    }\r\n\r\n    this.setState({\r\n      validationErrors,\r\n      validationErrorsForFP,\r\n      validationErrorsForBP,\r\n    });\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n    let selectedAttributeList = lodash.cloneDeep(\r\n      this.state.selectedAttributeList\r\n    );\r\n\r\n    selectedAttributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ attributeValidationErrors });\r\n\r\n    var returnValueBase = Object.values(validationErrors).every(function (\r\n      value\r\n    ) {\r\n      return value === \"\";\r\n    });\r\n\r\n    var returnValueFP = Object.values(validationErrorsForFP).every(function (\r\n      value\r\n    ) {\r\n      return value === \"\";\r\n    });\r\n    var returnValueBP = true;\r\n    this.state.productList.map((item, index) => {\r\n      returnValueBP = Object.values(validationErrorsForBP[index]).every(\r\n        function (value) {\r\n          return value === \"\";\r\n        }\r\n      );\r\n    });\r\n    console.log(\"returnValueBP\", returnValueBP);\r\n    return returnValueBase && returnValueFP && returnValueBP;\r\n  };\r\n\r\n  CreateManualEntry(LoadingDetailsInfos) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.receiptCode,\r\n        value: this.props.receipt.ReceiptCode,\r\n      },\r\n    ];\r\n\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"TruckReceipt_ManualEntryCreateStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"MarineDispatchManualEntry_CompSeqNo\"],\r\n          keyValues: [\r\n            this.state.modTruckManualEntryLoadingDetailsCommonInfo\r\n              .CompartmentSeqNoInVehicle,\r\n          ],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.receiptCode,\r\n      KeyCodes: keyCode,\r\n      Entity: LoadingDetailsInfos,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.ReceiptUnloadingTransactions,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ saveEnabled: true,showAuthenticationLayout:false, }, () => {\r\n            this.setDefaultValues()\r\n          });\r\n        } else {\r\n          notification.message = \"MarineReceiptManualEntry_SaveFailure\";\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({ saveEnabled: true,showAuthenticationLayout:false, });\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ showAuthenticationLayout:false });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        console.log(\"Error while handleSave:\", error);\r\n      });\r\n  }\r\n\r\n  fillManualEntryDetails(modTruckManualEntryLoadingBPInfo) {\r\n    let modTruckManualEntryLoadingFPInfo = lodash.cloneDeep(\r\n      this.state.modTruckManualEntryLoadingFPInfo\r\n    );\r\n    let LoadingDetailsInfos = [];\r\n    try {\r\n      let LoadingDetailsInfo = {\r\n        CommonInfo: {},\r\n        LoadingDetailFPinfo: {},\r\n        ArrLoadingDetailAdditive: [],\r\n        ArrLoadingDetailBP: [],\r\n        // IsLocalLoaded: false,\r\n        TerminalCodes: [],\r\n      };\r\n      let { modTruckManualEntryLoadingDetailsCommonInfo } = this.state;\r\n      modTruckManualEntryLoadingDetailsCommonInfo.LoadingDetailsType = \"MANUAL\";\r\n      modTruckManualEntryLoadingDetailsCommonInfo.ReceiptCode =\r\n        this.props.receipt.ReceiptCode;\r\n      modTruckManualEntryLoadingDetailsCommonInfo.ShareHolderCode =\r\n        this.props.selectedShareholder;\r\n\r\n      modTruckManualEntryLoadingBPInfo.forEach((BPInfo) => {\r\n        BPInfo.StartTime = modTruckManualEntryLoadingFPInfo.StartTime;\r\n        BPInfo.EndTime = modTruckManualEntryLoadingFPInfo.EndTime;\r\n        BPInfo.LoadingArmCode = modTruckManualEntryLoadingFPInfo.LoadingArmCode;\r\n        BPInfo.QuantityUOM = modTruckManualEntryLoadingFPInfo.QuantityUOM;\r\n        BPInfo.TransactionID = modTruckManualEntryLoadingFPInfo.TransactionID;\r\n        BPInfo.FinishedProductCode =\r\n          modTruckManualEntryLoadingFPInfo.FinishedProductCode;\r\n      });\r\n      LoadingDetailsInfo.CommonInfo = lodash.cloneDeep(\r\n        modTruckManualEntryLoadingDetailsCommonInfo\r\n      );\r\n      LoadingDetailsInfo.LoadingDetailFPinfo = lodash.cloneDeep(\r\n        modTruckManualEntryLoadingFPInfo\r\n      );\r\n      LoadingDetailsInfo.ArrLoadingDetailBP = lodash.cloneDeep(\r\n        modTruckManualEntryLoadingBPInfo\r\n      );\r\n      LoadingDetailsInfo.CommonInfo[\"CompartmentSeqNoInVehicle\"] =\r\n        Utilities.convertStringtoDecimal(\r\n          LoadingDetailsInfo.CommonInfo[\"CompartmentSeqNoInVehicle\"]\r\n        );\r\n\r\n      LoadingDetailsInfo.ArrLoadingDetailBP.forEach((baseproduct) => {\r\n        Object.keys(baseproduct).forEach((key) => {\r\n          if (\r\n            !(\r\n              key.includes(\"UOM\") ||\r\n              key === \"LoadingArmCode\" ||\r\n              key === \"StartTime\" ||\r\n              key === \"EndTime\" ||\r\n              key === \"FinishedProductCode\" ||\r\n              key === \"MeterCode\" ||\r\n              key === \"TankCode\" ||\r\n              key === \"Attributes\" ||\r\n              key === \"BaseProductCode\" ||\r\n              key === \"AdditiveProductCode\"\r\n            )\r\n          ) {\r\n            baseproduct[key] = Utilities.convertStringtoDecimal(\r\n              baseproduct[key]\r\n            );\r\n          }\r\n        });\r\n      });\r\n\r\n      LoadingDetailsInfos.push(LoadingDetailsInfo);\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentManualEntryDetailsComposite:Error in creating request for Manual Entry\",\r\n        error\r\n      );\r\n    }\r\n\r\n    return LoadingDetailsInfos;\r\n    // console.log(\"LoadingDetailsInfos\",LoadingDetailsInfos)\r\n  }\r\n\r\n  handleTabChange = (index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      var validationErrorsForFP = lodash.cloneDeep(this.state.validationErrors);\r\n      var modTruckManualEntryLoadingFPInfo = lodash.cloneDeep(\r\n        this.state.modTruckManualEntryLoadingFPInfo\r\n      );\r\n      validationErrorsForFP[propertyName] = error;\r\n      modTruckManualEntryLoadingFPInfo[propertyName] = value;\r\n      this.setState({\r\n        validationErrorsForFP,\r\n        modTruckManualEntryLoadingFPInfo,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentManualEntryDetailsComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  getCompartmentSeqNo() {\r\n    let compartmentSeqNoInVehicleList = lodash.cloneDeep(\r\n      this.state.compartmentSeqNoInVehicleList\r\n    );\r\n    let orderedCompartments = this.props.receipt.ReceiptCompartmentsInfo.sort((a, b) => (a.CompartmentSeqNoInVehicle - b.CompartmentSeqNoInVehicle))\r\n    orderedCompartments.map((item) => {\r\n      compartmentSeqNoInVehicleList.push(item.CompartmentSeqNoInVehicle.toString());\r\n      this.setState({\r\n        compartmentSeqNoInVehicleList: compartmentSeqNoInVehicleList,\r\n      });\r\n    });\r\n  }\r\n\r\n  getmeterCodes() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetMeters,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          console.log(\"meterCodes\", result);\r\n          if (result.IsSuccess === true) {\r\n            if (result.EntityResult !== null) {\r\n              let meterCodes = [];\r\n              meterCodes = result.EntityResult;\r\n              this.setState({ meterCodes });\r\n            }\r\n          } else {\r\n            console.log(\r\n              \"TruckShipmentManualEntryDetailsComposite: Error in getmeterCodes:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"TruckShipmentManualEntryDetailsComposite: Error while getting getmeterCodes:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentManualEntryDetailsComposite: Error in getmeterCodes:\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getTankCodes() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetTanks +\r\n        \"?ShareholderCode=\" +\r\n        this.props.selectedShareholder,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (result.EntityResult !== null) {\r\n              let tankCodes = [];\r\n              tankCodes = result.EntityResult;\r\n              this.setState({ tankCodes });\r\n            }\r\n          } else {\r\n            console.log(\r\n              \"TruckShipmentManualEntryDetailsComposite: Error in getTankCodes:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"TruckShipmentManualEntryDetailsComposite: Error while getting getTankCodes:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentManualEntryDetailsComposite: Error in getTankCodes:\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      compartmentSeqNoInVehicleList: this.state.compartmentSeqNoInVehicleList,\r\n      quantityUOMOptions: this.state.quantityUOMOptions,\r\n      densityUOMS: this.state.densityUOMS,\r\n      temperatureUOMs: this.state.temperatureUOMs,\r\n      calcValueUOM: this.state.calcValueUOM,\r\n      LoadingArms: this.state.LoadingArms,\r\n      Bays: this.state.Bays,\r\n      BCUs: this.state.BCUs,\r\n      meterCodes: this.state.meterCodes,\r\n      tankCodes: this.state.tankCodes,\r\n    };\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <TruckReceiptManualEntryDetails\r\n                onFieldChange={this.handleChange}\r\n                onTabChange={this.handleTabChange}\r\n                listOptions={listOptions}\r\n                productList={this.state.productList}\r\n                modTruckManualEntryLoadingDetailsCommonInfo={\r\n                  this.state.modTruckManualEntryLoadingDetailsCommonInfo\r\n                }\r\n                modTruckManualEntryLoadingFPInfo={\r\n                  this.state.modTruckManualEntryLoadingFPInfo\r\n                }\r\n                modTruckManualEntryLoadingBPInfo={\r\n                  this.state.modTruckManualEntryLoadingBPInfo\r\n                }\r\n                modTruckManualEntryLoadingAdvInfo={\r\n                  this.state.modTruckManualEntryLoadingAdvInfo\r\n                }\r\n                validationErrors={this.state.validationErrors}\r\n                validationErrorsForFP={this.state.validationErrorsForFP}\r\n                validationErrorsForBP={this.state.validationErrorsForBP}\r\n                selectedAttributeList={this.state.selectedAttributeList}\r\n                attributeValidationErrors={this.state.attributeValidationErrors}\r\n                selectedAttributeBPList={this.state.selectedAttributeBPList}\r\n                bpAttributeValidationErrors={\r\n                  this.state.bpAttributeValidationErrors\r\n                }\r\n                selectedAttributeAdvList={this.state.selectedAttributeAdvList}\r\n                advAttributeValidationErrors={\r\n                  this.state.advAttributeValidationErrors\r\n                }\r\n                onDateTextChange={this.handleDateTextChange}\r\n                currentCompTopUpReq={this.state.currentCompTopUpReq}\r\n                handleAttributeCellDataEdit={this.handleAttributeCellDataEditFP}\r\n              ></TruckReceiptManualEntryDetails>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n              <TMDetailsUserActions\r\n                handleBack={this.props.handleBack}\r\n                handleSave={this.handleSave}\r\n                handleReset={this.handleReset}\r\n                saveEnabled={this.state.manualEntrySaveEnable}\r\n              ></TMDetailsUserActions>\r\n            </ErrorBoundary>\r\n            {this.state.showAuthenticationLayout ? (\r\n                    <UserAuthenticationLayout\r\n                        Username={this.props.userDetails.EntityResult.UserName}\r\n                        functionName={functionGroups.add}\r\n                        functionGroup={fnUnloadingDetails}\r\n                        handleOperation={this.addLoadingDetails}\r\n                        handleClose={this.handleAuthenticationClose}\r\n                    ></UserAuthenticationLayout>\r\n                    ) : null}\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(\r\n  TruckReceiptManualEntryDetailsComposite\r\n);\r\n\r\nTruckReceiptManualEntryDetailsComposite.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  receipt: PropTypes.string.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n};\r\n"],"names":["TruckReceiptManualEntryDetails","_ref","modTruckManualEntryLoadingDetailsCommonInfo","modTruckManualEntryLoadingFPInfo","modTruckManualEntryLoadingBPInfo","modTruckManualEntryLoadingAdvInfo","validationErrors","validationErrorsForFP","validationErrorsForBP","listOptions","onFieldChange","onTabChange","productList","activeIndex","onDateTextChange","selectedAttributeList","attributeValidationErrors","selectedAttributeBPList","bpAttributeValidationErrors","selectedAttributeAdvList","advAttributeValidationErrors","handleAttributeCellDataEdit","handleAttributeCellDataEditBPandAdditive","currentCompTopUpReq","handleValidationErrorFilter","terminal","attributeValidation","undefined","find","selectedAttribute","TerminalCode","_jsx","TranslationConsumer","children","t","_jsxs","className","Select","fluid","placeholder","value","CompartmentSeqNoInVehicle","label","options","Utilities","compartmentSeqNoInVehicleList","onChange","data","multiple","reserveSpace","search","noResultsMessage","indicator","error","DatePicker","Date","StartTime","disablePast","type","displayFormat","getCurrentDateFormat","disableFuture","minuteStep","onTextChange","EndTime","BayCode","Bays","BCUCode","BCUs","LoadingArmCode","LoadingArms","Input","FinishedProductCode","disabled","QuantityUOM","quantityUOMOptions","TransactionID","Remarks","Tab","index","map","item","title","baseProductCode","productType","code","Pane","GrossQuantity","NetQuantity","Temperature","TemperatureUOM","temperatureUOMs","ProductDensity","ProductDensityUOM","densityUOMS","MeterCode","meterCodes","TankCode","tankCodes","StartTotalizer","EndTotalizer","NetStartTotalizer","NetEndTotalizer","CalculatedGross","CalculatedNet","CalculatedValueUOM","calcValueUOM","length","attire","ErrorBoundary","Accordion","Content","AttributeDetails","attributeMetaDataList","handleCellDataEdit","TruckReceiptManualEntryDetailsComposite","Component","constructor","_this","arguments","this","state","lodash","emptyTruckManualEntryLoadingDetailsCommonInfo","emptyTruckManualEntryLoadingProductInfo","BaysandBCUs","truckReceiptManualEntryCommonValidationDef","truckReceiptManualEntryProdValidationDef","manualEntrySaveEnable","isBCUTransLoad","transloadSource","ManualEntryFieldDeatils","showAuthenticationLayout","tempUnLoadingDetails","handleReset","props","receipt","ReceiptQuantityUOM","setState","userDetails","EntityResult","FunctionsList","functionGroups","modify","fnTruckReceipt","console","log","handleChange","propertyName","Constants","Common","BAY","getBCUs","GetLoadingArms","getBCUDetails","BCU","getFPReceipeDetails","FP","LOADINGARM","GetMetersForLA","BP","truckReceiptManualEntryBaseProdValidationDef","ShipmentType","addLoadingDetails","CreateManualEntry","handleSave","fillAttributeDetails","LoadingDetailsInfos","fillManualEntryDetails","validateSave","IsWebPortalUser","handleAttributeCellDataEditFP","attribute","DefaultValue","forEach","Code","Object","keys","key","attributeMetaData","returnValueBase","values","every","returnValueFP","returnValueBP","handleTabChange","handleDateTextChange","handleAuthenticationClose","componentDidMount","setDefaultValues","IsArchived","GetUOMList","GetBaysandBCUs","getCompartmentSeqNo","getmeterCodes","getTankCodes","getAttributes","formAttributesforEachTab","selectedTerminals","push","handleAttributes","UNLOADINGTRANSACTIONS","axios","RestAPIs","receiptManualEntryBPAttributeEntity","tokenDetails","tokenInfo","then","response","result","IsSuccess","Array","isArray","element","ErrorList","catch","VOLUME","MASS","massUOM","DENSITY","TEMPERATURE","LoadingArmsForBCU","deviceCode","keyCode","KeyCodes","obj","ShareHolderCode","keyDataCode","bcu","DensityUOM","ReceiptSource","RAIL","MARINE","bcuCode","loadingArmCode","ROAD_BCUVIEW","ActualTerminalCode","loadingArm","AssociatedArmsList","larm","mainLineMeters","additiveMeters","AssociatedMeterList","meter","MeterLineType","bpMeterCode","additiveMeterCode","MeterList","compSequenceNo","finishedProd","ReceiptOriginTerminalCompartmentsInfo","comp","toString","selectedShareholder","Table","BaseProductCode","ProductTYPE","attributeList","Attributes","ListOfAttributeData","det","AttributeCode","AttributeValue","ReceiptCode","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","Entity","saveEnabled","toast","NotifyEvent","notificationMessage","autoClose","LoadingDetailsInfo","CommonInfo","LoadingDetailFPinfo","ArrLoadingDetailAdditive","ArrLoadingDetailBP","TerminalCodes","LoadingDetailsType","BPInfo","baseproduct","includes","ReceiptCompartmentsInfo","sort","a","b","render","TMDetailsUserActions","handleBack","UserAuthenticationLayout","Username","UserName","functionName","add","functionGroup","fnUnloadingDetails","handleOperation","handleClose","connect","getUserDetails","TokenAuth"],"sourceRoot":""}