{"version":3,"file":"static/js/8714.3503aac3.chunk.js","mappings":"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","sources":["Components/UIBase/Details/MarineReceiptDetails.jsx","Components/Composite/Details/MarineReceiptDetailsComposite.jsx","Components/Composite/Details/MarineReceiptViewAuditTrailDetailsComposite.jsx","Components/UIBase/Details/MarineReceiptLoadingDetails.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport {\r\n  DatePicker,\r\n  Input,\r\n  Select,\r\n  Icon,\r\n  Tab,\r\n  Modal,\r\n  Button,\r\n  Checkbox,\r\n  Accordion,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport {\r\n  getOptionsWithSelect,\r\n  getCurrentDateFormat,\r\n} from \"../../../JS/functionalUtilities\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"./AttributeDetails\";\r\nimport { handleIsRequiredCompartmentCell } from \"../../../JS/functionalUtilities\";\r\n\r\nMarineReceiptDetails.propTypes = {\r\n  marineReceipt: PropTypes.object.isRequired,\r\n  modMarineReceipt: PropTypes.object.isRequired,\r\n  modAssociations: PropTypes.array.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    shareholders: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    shipmentUOM: PropTypes.array,\r\n    compSeqOptions: PropTypes.array,\r\n    vessels: PropTypes.array,\r\n    FinishedProducts: PropTypes.object,\r\n    supplierDestinationOptions: PropTypes.object,\r\n    shareholderSuppliers: PropTypes.array,\r\n  }).isRequired,\r\n  selectedAssociations: PropTypes.array.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  handleRowSelectionChange: PropTypes.func.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n  handleAddAssociation: PropTypes.func.isRequired,\r\n  handleDeleteAssociation: PropTypes.func.isRequired,\r\n  onVesselSearchChange: PropTypes.func.isRequired,\r\n  onCarrierSearchChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  receiptCompartmentDetails: PropTypes.array.isRequired,\r\n  operationsVisibilty: PropTypes.object.isRequired,\r\n  viewTab: PropTypes.number.isRequired,\r\n  selectedAttributeList: PropTypes.array.isRequired,\r\n  handleAttributeCellDataEdit: PropTypes.func.isRequired,\r\n  attributeValidationErrors: PropTypes.array.isRequired,\r\n  expandedRows: PropTypes.array.isRequired,\r\n  expandedCompDetailRows: PropTypes.array.isRequired,\r\n  toggleExpand: PropTypes.func.isRequired,\r\n  handleCompAttributeCellDataEdit: PropTypes.func.isRequired,\r\n  onCarrierCompanyChange: PropTypes.func.isRequired,\r\n  isHSEInspectionEnable: PropTypes.bool.isRequired,\r\n  isBondShow: PropTypes.bool.isRequired,\r\n  isTransloading: PropTypes.bool.isRequired,\r\n  compDetailsTab: PropTypes.array.isRequired,\r\n  isSlotbookinginUI: PropTypes.bool.isRequired,\r\n  updateEnableForConfigure: PropTypes.bool.isRequired,\r\n};\r\n\r\nMarineReceiptDetails.defaultProps = {\r\n  isEnterpriseNode: false,\r\n  isSlotbookinginUI: false,\r\n};\r\n\r\nexport function MarineReceiptDetails({\r\n  marineReceipt,\r\n  modMarineReceipt,\r\n  modAssociations,\r\n  modTankAssociations,\r\n  validationErrors,\r\n  listOptions,\r\n  selectedAssociations,\r\n  onFieldChange,\r\n  onDateTextChange,\r\n  handleRowSelectionChange,\r\n  handleCellDataEdit,\r\n  handleTankCellDataEdit,\r\n  handleAddAssociation,\r\n  handleDeleteAssociation,\r\n  onVesselSearchChange,\r\n  onCarrierSearchChange,\r\n  isEnterpriseNode,\r\n  receiptCompartmentDetails,\r\n  modReceiptCompartment,\r\n  operationsVisibilty,\r\n  viewTab,\r\n  handleDeleteTankAssociation,\r\n  handleAddTankAssociation,\r\n  onTabChange,\r\n  selectedTankAssociations,\r\n  handleTankAssociationSelectionChange,\r\n  selectedAttributeList,\r\n  handleAttributeCellDataEdit,\r\n  attributeValidationErrors,\r\n  expandedRows,\r\n  expandedCompDetailRows,\r\n  toggleExpand,\r\n  handleCompAttributeCellDataEdit,\r\n  onCarrierCompanyChange,\r\n  isHSEInspectionEnable,\r\n  isBondShow,\r\n  isTransloading,\r\n  compDetailsTab,\r\n  isSlotbookinginUI,\r\n  updateEnableForConfigure,\r\n}) {\r\n  const [t] = useTranslation();\r\n  const [isBondNoShow, setBondNoShow] = useState(false);\r\n  const handleCustomEditDropDown = (cellData, dropDownoptions) => {\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownoptions}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleTankPlanEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={modTankAssociations[cellData.rowIndex][cellData.field]}\r\n        onChange={(value) => handleTankCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleCustomEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        editable={false}\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  const changeBondNo = (checked) => {\r\n    setBondNoShow(checked);\r\n    this.props.onFieldChange(\"Bonded\");\r\n  };\r\n\r\n  const handleTankPlanEditDropDown = (cellData, dropDownoptions) => {\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        value={modTankAssociations[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownoptions}\r\n        onChange={(value) => handleTankCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleBaseProductEditDropDown = (cellData) => {\r\n    let baseProductOptions = [];\r\n    var baseProductDetails = [];\r\n    if (\r\n      listOptions.baseProductDetails !== null &&\r\n      listOptions.baseProductDetails !== undefined\r\n    ) {\r\n      baseProductDetails = listOptions.baseProductDetails.ALLPROD;\r\n    }\r\n    if (\r\n      listOptions.additiveDetails !== null &&\r\n      listOptions.additiveDetails !== undefined\r\n    ) {\r\n      baseProductDetails = baseProductDetails.concat(\r\n        listOptions.additiveDetails.ALLPROD\r\n      );\r\n    }\r\n    if (\r\n      listOptions.baseProductDetails !== undefined &&\r\n      listOptions.baseProductDetails !== null\r\n    ) {\r\n      if (baseProductDetails.length > 0) {\r\n        Object.values(baseProductDetails).forEach((baseProduct) =>\r\n          baseProductOptions.push({ text: baseProduct, value: baseProduct })\r\n        );\r\n      }\r\n    }\r\n    return handleTankPlanEditDropDown(cellData, baseProductOptions);\r\n  };\r\n\r\n  const handleTankCodeEditDropDown = (cellData) => {\r\n    return handleTankPlanEditDropDown(cellData, listOptions.tankCodeOptions);\r\n  };\r\n\r\n  const handleTankProductEditDropDown = (cellData) => {\r\n    let productOptions = [];\r\n    if (\r\n      listOptions.FinishedProducts !== undefined &&\r\n      listOptions.FinishedProducts !== null\r\n    ) {\r\n      if (\r\n        listOptions.FinishedProducts[cellData.rowData.ShareholderCode] !==\r\n        undefined &&\r\n        Array.isArray(\r\n          listOptions.FinishedProducts[cellData.rowData.ShareholderCode]\r\n        )\r\n      ) {\r\n        listOptions.FinishedProducts[cellData.rowData.ShareholderCode].forEach(\r\n          (productcode) =>\r\n            productOptions.push({ text: productcode, value: productcode })\r\n        );\r\n      }\r\n    }\r\n    return handleTankPlanEditDropDown(cellData, productOptions);\r\n  };\r\n\r\n  const handleProductEditDropDown = (cellData) => {\r\n    let productOptions = [];\r\n    if (\r\n      listOptions.FinishedProducts !== undefined &&\r\n      listOptions.FinishedProducts !== null\r\n    ) {\r\n      if (\r\n        listOptions.FinishedProducts[cellData.rowData.ShareholderCode] !==\r\n        undefined &&\r\n        Array.isArray(\r\n          listOptions.FinishedProducts[cellData.rowData.ShareholderCode]\r\n        )\r\n      ) {\r\n        listOptions.FinishedProducts[cellData.rowData.ShareholderCode].forEach(\r\n          (productcode) =>\r\n            productOptions.push({ text: productcode, value: productcode })\r\n        );\r\n      }\r\n    }\r\n    return handleCustomEditDropDown(cellData, productOptions);\r\n  };\r\n\r\n  const handleCustomerEditDropDown = (cellData) => {\r\n    let supplierOptions = [];\r\n    if (\r\n      listOptions.shareholderSuppliers !== undefined &&\r\n      listOptions.shareholderSuppliers !== null\r\n    ) {\r\n      let suppliers = listOptions.shareholderSuppliers.filter(\r\n        (shareholderCust) =>\r\n          shareholderCust.ShareholderCode === cellData.rowData.ShareholderCode\r\n      );\r\n      if (\r\n        suppliers.length > 0 &&\r\n        suppliers[0].SupplierOriginTerminalsList !== null\r\n      ) {\r\n        Object.keys(suppliers[0].SupplierOriginTerminalsList).forEach(\r\n          (customer) =>\r\n            supplierOptions.push({ text: customer, value: customer })\r\n        );\r\n      }\r\n    }\r\n\r\n    return handleCustomEditDropDown(cellData, supplierOptions);\r\n  };\r\n  const handleOriginalTerminalEditDropDown = (cellData) => {\r\n    let destinationOptions = [];\r\n    let supplierDestinationOptions = [];\r\n    if (\r\n      listOptions.shareholderSuppliers !== undefined &&\r\n      listOptions.shareholderSuppliers !== null\r\n    ) {\r\n      let suppliers = listOptions.shareholderSuppliers.filter(\r\n        (shareholderCust) =>\r\n          shareholderCust.ShareholderCode === cellData.rowData.ShareholderCode\r\n      );\r\n      if (\r\n        suppliers.length > 0 &&\r\n        suppliers[0].SupplierOriginTerminalsList !== null\r\n      ) {\r\n        supplierDestinationOptions = suppliers[0].SupplierOriginTerminalsList;\r\n      }\r\n\r\n      if (\r\n        supplierDestinationOptions[cellData.rowData.SupplierCode] !==\r\n        undefined &&\r\n        Array.isArray(supplierDestinationOptions[cellData.rowData.SupplierCode])\r\n      ) {\r\n        supplierDestinationOptions[cellData.rowData.SupplierCode].forEach(\r\n          (destination) =>\r\n            destinationOptions.push({ text: destination, value: destination })\r\n        );\r\n      }\r\n    }\r\n\r\n    return handleCustomEditDropDown(cellData, destinationOptions);\r\n  };\r\n  const decimalDisplayValues = (cellData) => {\r\n    const { value } = cellData;\r\n    if (typeof value === \"number\" && value !== null) {\r\n      return value.toLocaleString();\r\n    } else {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [modCellData, setModCellData] = useState([]);\r\n  const statusDisplayValues = (cellData) => {\r\n    if (cellData.value === 0 && cellData.value !== null) {\r\n      return Constants.ReceiptCompartment_Status.COMPLETED.toLocaleString();\r\n    }\r\n    if (cellData.value === 1 && cellData.value !== null) {\r\n      return Constants.ReceiptCompartment_Status.EMPTY.toLocaleString();\r\n    }\r\n    if (cellData.value === 2 && cellData.value !== null) {\r\n      return Constants.ReceiptCompartment_Status.FORCE_COMPLETED;\r\n    }\r\n    if (cellData.value === 3 && cellData.value !== null) {\r\n      return Constants.ReceiptCompartment_Status.INTERRUPTED.toLocaleString();\r\n    }\r\n    if (cellData.value === 4 && cellData.value !== null) {\r\n      return Constants.ReceiptCompartment_Status.OVER_UNLOADED.toLocaleString();\r\n    }\r\n    if (cellData.value === 5 && cellData.value !== null) {\r\n      return Constants.ReceiptCompartment_Status.PART_UNLOADED.toLocaleString();\r\n    }\r\n    if (cellData.value === 6 && cellData.value !== null) {\r\n      return Constants.ReceiptCompartment_Status.UNLOAD_NOTSTARTED.toLocaleString();\r\n    }\r\n    if (cellData.value === 7 && cellData.value !== null) {\r\n      return Constants.ReceiptCompartment_Status.UNLOADING.toLocaleString();\r\n    } else {\r\n      return cellData.value;\r\n    }\r\n  };\r\n\r\n  const quantityplayValues = (cellData) => {\r\n    if (cellData.value !== null && cellData.value !== \"\") {\r\n      return cellData.value + \" \" + cellData.rowData.PlanQuantityUOM;\r\n    } else {\r\n      return cellData.value;\r\n    }\r\n  };\r\n\r\n  const handleReceiptEditTextBox = (cellData) => {\r\n    let rowIndex = modReceiptCompartment.findIndex(\r\n      (item) =>\r\n        item.CompartmentSeqNoInVehicle ===\r\n        cellData.rowData.CompartmentSeqNoInVehicle\r\n    );\r\n    return (\r\n      <div>\r\n        {operationsVisibilty.adjustPlan &&\r\n          (marineReceipt.ReceiptStatus ===\r\n            Constants.Receipt_Status.PARTIALLY_UNLOADED ||\r\n            marineReceipt.ReceiptStatus ===\r\n            Constants.Receipt_Status.INTERRUPTED ||\r\n            marineReceipt.ReceiptStatus ===\r\n            Constants.Receipt_Status.MANUALLY_UNLOADED ||\r\n            marineReceipt.ReceiptStatus ===\r\n            Constants.Receipt_Status.AUTO_UNLOADED ||\r\n            marineReceipt.ReceiptStatus === Constants.Receipt_Status.QUEUED) &&\r\n          cellData.rowData.ReceiptCompartmentStatus !== 0 &&\r\n          cellData.rowData.ReceiptCompartmentStatus !== 2 &&\r\n          cellData.rowData.ReceiptCompartmentStatus !== 7 &&\r\n          cellData.rowData.ReceiptCompartmentStatus !== 4 &&\r\n          !isEnterpriseNode ? (\r\n          <Input\r\n            fluid\r\n            value={modReceiptCompartment[rowIndex].AdjustPlan}\r\n            disabled={false}\r\n            onChange={(value) => handleCellDataEdit(value, cellData)}\r\n            reserveSpace={false}\r\n          />\r\n        ) : (\r\n          <Input fluid disabled={true} reserveSpace={false} />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleReceiptEdiCheckbox = (cellData) => {\r\n    let rowIndex = modReceiptCompartment.findIndex(\r\n      (item) =>\r\n        item.CompartmentSeqNoInVehicle ===\r\n        cellData.rowData.CompartmentSeqNoInVehicle\r\n    );\r\n    return (\r\n      <div>\r\n        {operationsVisibilty.forceComplete &&\r\n          (marineReceipt.ReceiptStatus ===\r\n            Constants.Receipt_Status.PARTIALLY_UNLOADED ||\r\n            marineReceipt.ReceiptStatus ===\r\n            Constants.Receipt_Status.INTERRUPTED ||\r\n            marineReceipt.ReceiptStatus ===\r\n            Constants.Receipt_Status.MANUALLY_UNLOADED ||\r\n            marineReceipt.ReceiptStatus ===\r\n            Constants.Receipt_Status.AUTO_UNLOADED ||\r\n            marineReceipt.ReceiptStatus === Constants.Receipt_Status.QUEUED) &&\r\n          cellData.rowData.ReceiptCompartmentStatus !== 0 &&\r\n          cellData.rowData.ReceiptCompartmentStatus !== 2 &&\r\n          cellData.rowData.ReceiptCompartmentStatus !== 7 &&\r\n          cellData.rowData.ReceiptCompartmentStatus !== 4 &&\r\n          !isEnterpriseNode ? (\r\n          <Checkbox\r\n            checked={modReceiptCompartment[rowIndex][cellData.field]}\r\n            disabled={false}\r\n            onClick={() => {\r\n              if (!modReceiptCompartment[rowIndex][cellData.field]) {\r\n                setModCellData(cellData);\r\n                setModelOpen(true);\r\n              } else {\r\n                handleCellDataEdit(\"\", cellData);\r\n              }\r\n            }}\r\n          />\r\n        ) : (\r\n          <Checkbox\r\n            checked={modReceiptCompartment[rowIndex][cellData.field]}\r\n            disabled={true}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  const expanderTemplate = (data) => {\r\n    const open =\r\n      expandedRows.findIndex(\r\n        (x) =>\r\n          x.CompartmentSeqNoInVehicle === data.rowData.CompartmentSeqNoInVehicle\r\n      ) >= 0\r\n        ? true\r\n        : false;\r\n    return (\r\n      <div\r\n        onClick={() => toggleExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        <span>{open ? t(\"Hide_Attributes\") : t(\"View_Attributes\")}</span>\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"caret-up\" : \"caret-down\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleIsRequiredCompAttributes = (data) => {\r\n    return data.rowData.IsMandatory ? (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n        <div class=\"ui red circular empty label badge  circle-padding\" />\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  function rowExpansionTemplate(data) {\r\n    return Array.isArray(data.AttributesforUI) &&\r\n      data.AttributesforUI.length > 0 ? (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable data={data.AttributesforUI}>\r\n          {isEnterpriseNode ? (\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"TerminalCode\"\r\n              field=\"TerminalCode\"\r\n              header={t(\"CompartmentTerminal\")}\r\n              editable={false}\r\n            ></DataTable.Column>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"AttributeName\"\r\n            header={t(\"CompartmentAttributeName\")}\r\n            renderer={handleIsRequiredCompAttributes}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            header={t(\"CompartmentAttributeValue\")}\r\n            renderer={handleAttributeType}\r\n          />\r\n        </DataTable>\r\n      </div>\r\n    ) : (\r\n      <div className=\"compartmentIcon\">\r\n        <div style={{ paddingRight: \"87%\" }}>\r\n          {t(\"CustomerInventory_NoRecordsFound\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleAttributeType = (data) => {\r\n    const attribute = data.rowData;\r\n    try {\r\n      return attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.STRING.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.INT.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.FLOAT.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.LONG.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.DOUBLE.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.BOOL.toLowerCase() ? (\r\n        <Checkbox\r\n          checked={\r\n            attribute.AttributeValue.toString().toLowerCase() === \"true\"\r\n              ? true\r\n              : false\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n        ></Checkbox>\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.DATETIME.toLowerCase() ? (\r\n        <DatePicker\r\n          fluid\r\n          minuteStep=\"5\"\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n              attribute.AttributeValue === undefined ||\r\n              attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : new Date(attribute.AttributeValue)\r\n          }\r\n          disabled={attribute.IsReadonly}\r\n          showYearSelector=\"true\"\r\n          onChange={(value) => handleCompAttributeCellDataEdit(data, value)}\r\n          reserveSpace={false}\r\n        />\r\n      ) : null;\r\n    } catch (error) {\r\n      console.log(\"TrailerDetails:Error occured on handleAttributeType\", error);\r\n    }\r\n  };\r\n\r\n  function rowExpansionTemplateDetail(data) {\r\n    let compData = [];\r\n    compData.push(data);\r\n    return Array.isArray(compData) && compData.length > 0 ? (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable data={compData}>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"AdjustPlan\"\r\n            field=\"AdjustPlan\"\r\n            header={t(\"ViewMarineReceiptList_AdjustPlan\")}\r\n            renderer={(cellData) => handleReceiptEditTextBox(cellData)}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"ForceComplete\"\r\n            field=\"ForceComplete\"\r\n            header={t(\"ViewMarineReceiptList_ForceComplete\")}\r\n            renderer={(cellData) => handleReceiptEdiCheckbox(cellData)}\r\n          ></DataTable.Column>\r\n        </DataTable>\r\n      </div>\r\n    ) : (\r\n      <div className=\"compartmentIcon\">\r\n        <div className=\"gridButtonAlignLeft\">\r\n          {t(\"CustomerInventory_NoRecordsFound\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleIsTransloadingCheckbox = (cellData) => {\r\n    return (\r\n      <div>\r\n        <Checkbox\r\n          onChange={(data) => handleCellDataEdit(data, cellData)}\r\n          disabled={!updateEnableForConfigure}\r\n          checked={cellData.rowData.IsTransloading}\r\n        ></Checkbox>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modMarineReceipt.ReceiptCode}\r\n                indicator=\"required\"\r\n                disabled={marineReceipt.ReceiptCode !== \"\"}\r\n                onChange={(data) => onFieldChange(\"ReceiptCode\", data)}\r\n                label={t(\"Marine_ReceiptCompDetail_ShipmentNumber\")}\r\n                error={t(validationErrors.ReceiptCode)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                indicator=\"required\"\r\n                label={t(\"Marine_ShipmentCompDetail_CarrierCompany\")}\r\n                value={modMarineReceipt.CarrierCode}\r\n                disabled={!updateEnableForConfigure}\r\n                options={listOptions.carriers}\r\n                onChange={(data) => {\r\n                  onCarrierCompanyChange(data);\r\n                }}\r\n                error={t(validationErrors.CarrierCode)}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                onSearch={onCarrierSearchChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                indicator=\"required\"\r\n                label={t(\"Marine_ShipmentCompDetail_Vehicle\")}\r\n                value={modMarineReceipt.VesselCode}\r\n                disabled={!updateEnableForConfigure}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.vessels,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                onChange={(data) => {\r\n                  onFieldChange(\"VesselCode\", data);\r\n                }}\r\n                error={t(validationErrors.VesselCode)}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                onSearch={onVesselSearchChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                minuteStep=\"5\"\r\n                value={\r\n                  modMarineReceipt.ScheduledDate === null\r\n                    ? \"\"\r\n                    : new Date(modMarineReceipt.ScheduledDate)\r\n                }\r\n                disabled={!updateEnableForConfigure}\r\n                label={t(\"Marine_ShipmentCompDetail_ScheduledDate\")}\r\n                type=\"datetime\"\r\n                disablePast={false}\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"ScheduledDate\", data)}\r\n                displayFormat={getCurrentDateFormat()}\r\n                error={t(validationErrors.ScheduledDate)}\r\n                onTextChange={(value, error) => {\r\n                  onDateTextChange(\"ScheduledDate\", value, error);\r\n                }}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modMarineReceipt.ReceiptStatus}\r\n                onChange={(data) => onFieldChange(\"ReceiptStatus\", data)}\r\n                label={t(\"Receipt_ReceiptStatus\")}\r\n                reserveSpace={false}\r\n                disabled={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                indicator=\"required\"\r\n                label={t(\"Receipt_QuantityUOM\")}\r\n                value={modMarineReceipt.QuantityUOM}\r\n                disabled={!updateEnableForConfigure}\r\n                options={listOptions.shipmentUOM}\r\n                onChange={(data) => {\r\n                  onFieldChange(\"QuantityUOM\", data);\r\n                }}\r\n                error={t(validationErrors.QuantityUOM)}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modMarineReceipt.Description}\r\n                disabled={!updateEnableForConfigure}\r\n                onChange={(data) => onFieldChange(\"Description\", data)}\r\n                label={t(\"CarrierDetails_Desc\")}\r\n                error={t(validationErrors.Description)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            {marineReceipt.ReceiptCode !== \"\" && isSlotbookinginUI ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4 ddlSelectAll\">\r\n                <div className=\"ui single-input fluid disabled\">\r\n                  <div class=\"ui input-label\">\r\n                    <span className=\"input-label-message\">\r\n                      {t(\"ViewShipment_IsSlotBooked\")}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"input-wrap\">\r\n                    <label style={{ fontWeight: \"bold\" }}>\r\n                      {modMarineReceipt.SlotBooked ? \"Booked\" : \"Not Booked\"}\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {!(updateEnableForConfigure && marineReceipt.ReceiptCode === \"\") &&\r\n              !isEnterpriseNode &&\r\n              isHSEInspectionEnable ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Input\r\n                  fluid\r\n                  value={modMarineReceipt.HSEInspectionStatus}\r\n                  label={t(\"Marine_ShipmentCompDetail_InspectionStatus\")}\r\n                  reserveSpace={false}\r\n                  disabled={true}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"FinishedProductInfo_Select\")}\r\n                label={t(\"Cust_Status\")}\r\n                value={modMarineReceipt.Active}\r\n                options={[\r\n                  { text: t(\"ViewShipment_Ok\"), value: true },\r\n                  { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                ]}\r\n                onChange={(data) => onFieldChange(\"Active\", data)}\r\n                disabled={\r\n                  !updateEnableForConfigure || marineReceipt.ReceiptCode === \"\"\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modMarineReceipt.Remarks}\r\n                label={t(\"Cust_Remarks\")}\r\n                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                indicator={\r\n                  modMarineReceipt.Active !== marineReceipt.Active\r\n                    ? \"required\"\r\n                    : \"\"\r\n                }\r\n                error={t(validationErrors.Remarks)}\r\n                reserveSpace={false}\r\n                disabled={!updateEnableForConfigure}\r\n              />\r\n            </div>\r\n            {isEnterpriseNode ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder=\"Select\"\r\n                  indicator=\"required\"\r\n                  label={t(\"TerminalCodes\")}\r\n                  value={\r\n                    modMarineReceipt.TerminalCodes === null\r\n                      ? \"\"\r\n                      : modMarineReceipt.TerminalCodes.length === 0\r\n                        ? \"\"\r\n                        : modMarineReceipt.TerminalCodes[0]\r\n                  }\r\n                  disabled={!updateEnableForConfigure}\r\n                  options={getOptionsWithSelect(\r\n                    Utilities.transferListtoOptions(listOptions.terminalCodes),\r\n                    t(\"Common_Select\")\r\n                  )}\r\n                  onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n                  error={t(validationErrors.TerminalCodes)}\r\n                  reserveSpace={false}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {!(updateEnableForConfigure && marineReceipt.ReceiptCode === \"\") &&\r\n              isEnterpriseNode ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Input\r\n                  fluid\r\n                  placeholder=\"\"\r\n                  label={t(\"Shipment_LoadedTerminal\")}\r\n                  value={marineReceipt.ActualTerminalCode}\r\n                  disabled={true}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {isBondShow ? (\r\n              <div\r\n                className=\"col-12 col-md-6 col-lg-4\"\r\n                style={{ paddingTop: \"25px\" }}\r\n              >\r\n                <Checkbox\r\n                  label={t(\"ViewReceiptStatus_ReceiptBond\")}\r\n                  checked={isBondNoShow || marineReceipt.BondNumber !== null}\r\n                  onChange={(checked) => changeBondNo(checked)}\r\n                  disabled={!updateEnableForConfigure}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {isBondShow &&\r\n              (isBondNoShow || marineReceipt.BondNumber !== null) ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Input\r\n                  fluid\r\n                  indicator=\"required\"\r\n                  label={t(\"Receipt_BondedNo\")}\r\n                  value={marineReceipt.BondNumber}\r\n                  error={t(validationErrors.BondNumber)}\r\n                  disabled={!updateEnableForConfigure}\r\n                  onChange={(data) => onFieldChange(\"BondNumber\", data)}\r\n                  reserveSpace={false}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          {selectedAttributeList.length > 0\r\n            ? selectedAttributeList.map((attire) => (\r\n              <ErrorBoundary key={attire}>\r\n                <Accordion>\r\n                  <Accordion.Content\r\n                    className=\"attributeAccordian\"\r\n                    title={\r\n                      isEnterpriseNode\r\n                        ? attire.TerminalCode + \" - \" + t(\"Attributes_Header\")\r\n                        : t(\"Attributes_Header\")\r\n                    }\r\n                  >\r\n                    <AttributeDetails\r\n                      selectedAttributeList={attire.attributeMetaDataList}\r\n                      handleCellDataEdit={handleAttributeCellDataEdit}\r\n                      attributeValidationErrors={handleValidationErrorFilter(\r\n                        attributeValidationErrors,\r\n                        attire.TerminalCode\r\n                      )}\r\n                    ></AttributeDetails>\r\n                  </Accordion.Content>\r\n                </Accordion>\r\n              </ErrorBoundary>\r\n            ))\r\n            : null}\r\n          <div>\r\n            <Tab\r\n              defaultActiveIndex={viewTab}\r\n              className=\"col-12\"\r\n              onTabChange={onTabChange}\r\n            >\r\n              <Tab.Pane title={t(\"Shipment_Compartment_Planning_Tab_Header\")}>\r\n                <div className=\"row compartmentRow\">\r\n                  <div className=\"col col-md-12 col-lg-12 col-xl-12\">\r\n                    <div className=\"compartmentIconContainer\">\r\n                      <div\r\n                        onClick={\r\n                          updateEnableForConfigure ? handleAddAssociation : \"\"\r\n                        }\r\n                        className=\"compartmentIcon\"\r\n                      >\r\n                        <div>\r\n                          <Icon root=\"common\" name=\"badge-plus\" size=\"medium\" />\r\n                        </div>\r\n                        <div className=\"margin_l10\">\r\n                          <h5 className=\"font14\">\r\n                            {t(\"FinishedProductInfo_Add\")}\r\n                          </h5>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div\r\n                        onClick={\r\n                          updateEnableForConfigure\r\n                            ? handleDeleteAssociation\r\n                            : \"\"\r\n                        }\r\n                        className=\"compartmentIcon margin_l30\"\r\n                      >\r\n                        <div>\r\n                          <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n                        </div>\r\n                        <div className=\"margin_l10\">\r\n                          <h5 className=\"font14\">{t(\"DestAdd_Delete\")}</h5>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row marginRightZero tableScroll\">\r\n                  <div className=\"col-12 detailsTable\">\r\n                    <DataTable\r\n                      data={modAssociations}\r\n                      selectionMode=\"multiple\"\r\n                      selection={selectedAssociations}\r\n                      expandedRows={expandedRows}\r\n                      rowExpansionTemplate={rowExpansionTemplate}\r\n                      onSelectionChange={handleRowSelectionChange}\r\n                    >\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"ShareholderCode\"\r\n                        field=\"ShareholderCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Receipt_Shareholder\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleCustomEditDropDown(\r\n                            celldata,\r\n                            listOptions.shareholders\r\n                          )\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"CompartmentSeqNoInVehicle\"\r\n                        field=\"CompartmentSeqNoInVehicle\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ShipmentCompDetail_CompSeqInVehicle\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleCustomEditDropDown(\r\n                            celldata,\r\n                            listOptions.compSeqOptions\r\n                          )\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"FinishedProductCode\"\r\n                        field=\"FinishedProductCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ShipmentCompDetail_ProductCode\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleProductEditDropDown(celldata)\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"SupplierCode\"\r\n                        field=\"SupplierCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Receipt_Supplier\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleCustomerEditDropDown(celldata)\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"OriginTerminalCode\"\r\n                        field=\"OriginTerminalCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ReceiptCompDetail_Origin\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleOriginalTerminalEditDropDown(celldata)\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"Quantity\"\r\n                        field=\"Quantity\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ShipmentCompDetail_Quantity\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                        customEditRenderer={handleCustomEditTextBox}\r\n                      ></DataTable.Column>\r\n                      {isTransloading ? (\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          key=\"IsTransloading\"\r\n                          field=\"IsTransloading\"\r\n                          header={t(\"Marine_ReceiptCompDetail_Transloading\")}\r\n                          renderer={(cellData) =>\r\n                            handleIsTransloadingCheckbox(cellData)\r\n                          }\r\n                        ></DataTable.Column>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      <DataTable.Column\r\n                        className=\"compColHeight\"\r\n                        initialWidth=\"170px\"\r\n                        renderer={expanderTemplate}\r\n                      />\r\n                    </DataTable>\r\n                  </div>\r\n                </div>\r\n              </Tab.Pane>\r\n              <Tab.Pane title={t(\"ShipmentTankPlanning\")}>\r\n                <div className=\"row compartmentRow\">\r\n                  <div className=\"col col-md-12 col-lg-12 col-xl-12\">\r\n                    <div className=\"compartmentIconContainer\">\r\n                      <div\r\n                        onClick={\r\n                          updateEnableForConfigure\r\n                            ? handleAddTankAssociation\r\n                            : \"\"\r\n                        }\r\n                        className=\"compartmentIcon\"\r\n                      >\r\n                        <div>\r\n                          <Icon root=\"common\" name=\"badge-plus\" size=\"medium\" />\r\n                        </div>\r\n                        <div className=\"margin_l10\">\r\n                          <h5 className=\"font14\">\r\n                            {t(\"FinishedProductInfo_Add\")}\r\n                          </h5>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div\r\n                        onClick={\r\n                          updateEnableForConfigure\r\n                            ? handleDeleteTankAssociation\r\n                            : \"\"\r\n                        }\r\n                        className=\"compartmentIcon margin_l30\"\r\n                      >\r\n                        <div>\r\n                          <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n                        </div>\r\n                        <div className=\"margin_l10\">\r\n                          <h5 className=\"font14\">{t(\"DestAdd_Delete\")}</h5>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row marginRightZero tableScroll\">\r\n                  <div className=\"col-12 detailsTable\">\r\n                    <DataTable\r\n                      data={modTankAssociations}\r\n                      selectionMode=\"multiple\"\r\n                      selection={selectedTankAssociations}\r\n                      onSelectionChange={handleTankAssociationSelectionChange}\r\n                    >\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"ShareholderCode\"\r\n                        field=\"ShareholderCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Receipt_Shareholder\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleTankPlanEditDropDown(\r\n                            celldata,\r\n                            listOptions.shareholders\r\n                          )\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"CompartmentSeqNoInVehicle\"\r\n                        field=\"CompartmentSeqNoInVehicle\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ReceiptCompDetail_CompSeqInVehicle\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleTankPlanEditDropDown(\r\n                            celldata,\r\n                            listOptions.compSeqOptions\r\n                          )\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"FinishedProductCode\"\r\n                        field=\"FinishedProductCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Receipt_Product\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleTankProductEditDropDown(celldata)\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"BaseProductCode\"\r\n                        field=\"BaseProductCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ReceiptCompDetail_BaseProduct\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleBaseProductEditDropDown(celldata)\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"TankCode\"\r\n                        field=\"TankCode\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ReceiptCompDetail_Tank\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={(celldata) =>\r\n                          handleTankCodeEditDropDown(celldata)\r\n                        }\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"PlannedQuantity\"\r\n                        field=\"PlannedQuantity\"\r\n                        header={handleIsRequiredCompartmentCell(\r\n                          t(\"Marine_ReceiptCompDetail_Quantity\")\r\n                        )}\r\n                        editable={updateEnableForConfigure}\r\n                        editFieldType=\"text\"\r\n                        customEditRenderer={handleTankPlanEditTextBox}\r\n                      ></DataTable.Column>\r\n                    </DataTable>\r\n                  </div>\r\n                </div>\r\n              </Tab.Pane>\r\n              {compDetailsTab.map(() => {\r\n                return (\r\n                  <Tab.Pane\r\n                    title={t(\"ViewReceiptList_CompartmentDetails\")}\r\n                    disabled={\r\n                      updateEnableForConfigure &&\r\n                      marineReceipt.ReceiptCode === \"\"\r\n                    }\r\n                  >\r\n                    <div className=\"row marginRightZero tableScroll\">\r\n                      <div className=\"col-12 detailsTable\">\r\n                        <DataTable\r\n                          data={receiptCompartmentDetails}\r\n                          expandedRows={expandedCompDetailRows}\r\n                          rowExpansionTemplate={rowExpansionTemplateDetail}\r\n                        >\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"CompartmentSeqNoInVehicle\"\r\n                            field=\"CompartmentSeqNoInVehicle\"\r\n                            header={t(\"ViewMarineReceiptList_SeqNo\")}\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"FinishedProductCode\"\r\n                            field=\"FinishedProductCode\"\r\n                            header={t(\"ViewMarineReceiptList_ProductCode\")}\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"ReceiptCompartmentStatus\"\r\n                            field=\"ReceiptCompartmentStatus\"\r\n                            header={t(\"ViewMarineReceiptList_Status\")}\r\n                            renderer={(cellData) =>\r\n                              statusDisplayValues(cellData)\r\n                            }\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"PlannedQuantity\"\r\n                            field=\"PlannedQuantity\"\r\n                            header={t(\"ViewMarineReceiptList_PlannedQuantity\")}\r\n                            renderer={(cellData) =>\r\n                              quantityplayValues(cellData)\r\n                            }\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"AdjustedPlanQuantity\"\r\n                            field=\"AdjustedPlanQuantity\"\r\n                            header={t(\r\n                              \"ViewMarineReceiptList_RevisedPlannedQuantity\"\r\n                            )}\r\n                            renderer={(cellData) =>\r\n                              quantityplayValues(cellData)\r\n                            }\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"UnloadedQuantity\"\r\n                            field=\"UnloadedQuantity\"\r\n                            header={t(\"ViewMarineReceiptList_UnloadedQuantity\")}\r\n                            renderer={(cellData) =>\r\n                              quantityplayValues(cellData)\r\n                            }\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"AdjustPlan\"\r\n                            field=\"AdjustPlan\"\r\n                            header={t(\"ViewMarineReceiptList_AdjustPlan\")}\r\n                            renderer={(cellData) =>\r\n                              handleReceiptEditTextBox(cellData)\r\n                            }\r\n                          ></DataTable.Column>\r\n                          <DataTable.Column\r\n                            className=\"compColHeight colminWidth\"\r\n                            key=\"ForceComplete\"\r\n                            field=\"ForceComplete\"\r\n                            header={t(\"ViewMarineReceiptList_ForceComplete\")}\r\n                            renderer={(cellData) =>\r\n                              handleReceiptEdiCheckbox(cellData)\r\n                            }\r\n                          ></DataTable.Column>\r\n                        </DataTable>\r\n                      </div>\r\n                    </div>\r\n                  </Tab.Pane>\r\n                );\r\n              })}\r\n            </Tab>\r\n          </div>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={modelOpen} size=\"small\">\r\n                <Modal.Content>\r\n                  <div>\r\n                    <b>{t(\"ViewMarineReceipt_ForceCompleteConfirm\")}</b>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    type=\"secondary\"\r\n                    content={t(\"Cancel\")}\r\n                    onClick={() => setModelOpen(false)}\r\n                  />\r\n                  <Button\r\n                    type=\"primary\"\r\n                    content={t(\"PipelineReceipt_BtnSubmit\")}\r\n                    onClick={() => {\r\n                      setModelOpen(false);\r\n                      handleCellDataEdit(\"\", modCellData);\r\n                    }}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { MarineReceiptDetails } from \"../../UIBase/Details/MarineReceiptDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { marineReceiptValidationDef } from \"../../../JS/ValidationDef\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport {\r\n  emptyMarineReceipt,\r\n  emptyReceiptCompartmentPlan,\r\n  emptyReceiptCompartmentTanks,\r\n} from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestApis from \"../../../JS/RestApis\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { functionGroups, fnMarineReceipt, fnKPIInformation, fnMarineReceiptByCompartment } from \"../../../JS/FunctionGroups\";\r\nimport { marineReceiptCompartDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { toast } from \"react-toastify\";\r\nimport MarineReceiptManualEntryDetailsComposite from \"./MarineReceiptManualEntryDetailsComposite\";\r\nimport MarineReceiptViewAuditTrailComposite from \"./MarineReceiptViewAuditTrailDetailsComposite\";\r\nimport MarineReceiptLoadingDetails from \"../../UIBase/Details/MarineReceiptLoadingDetails\";\r\nimport {\r\n  marineReceiptAttributeEntity,\r\n  marineReceiptCompAttributeEntity,\r\n} from \"../../../JS/AttributeEntity\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { kpiMarineReceiptDetails } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass MarineReceiptDetailsComposite extends Component {\r\n  state = {\r\n    marineReceipt: lodash.cloneDeep(emptyMarineReceipt),\r\n    modMarineReceipt: {},\r\n    modAssociations: [],\r\n    modTankAssociations: [],\r\n    modTankPlanAssociations: [],\r\n    tempModTankAssociations: [],\r\n    modTankPlan: [],\r\n    vehicleDetails: { carrierCode: \"\", vehicleCompartments: [] },\r\n    modVehicleDetails: { carrierCode: \"\", vehicleCompartments: [] },\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      marineReceiptValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    shareholders: this.getShareholders(),\r\n    terminalCodes: this.props.terminalCodes,\r\n    shipmentUOM: [],\r\n    Captains: [],\r\n    vessels: [],\r\n    vesselSearchOptions: [],\r\n    FinishedProducts: {},\r\n    baseProductDetails: {},\r\n    tankCodeOptions: [],\r\n    supplierDestinationOptions: {},\r\n    compSeqOptions: [],\r\n    shareholderSuppliers: [],\r\n    associatedCompartments: [],\r\n    saveEnabled: false,\r\n    selectedTankAssociations: [],\r\n    selectedAll: false,\r\n    receiptCompartmentDetails: [],\r\n    modReceiptCompartment: [],\r\n    ViewUnloadingData: [],\r\n    ViewUnloadingHideFields: [],\r\n    isManualEntry: false,\r\n    viewAuditTrail: false,\r\n    isViewUnloading: false,\r\n    isNewReceipt: false,\r\n    clickRow: [],\r\n    operationsVisibilty: {\r\n      save: false,\r\n      authorizeToLoad: false,\r\n      closeReceipt: false,\r\n      viewAuditTrail: false,\r\n      viewUnloadingDetails: false,\r\n      printRAN: false,\r\n      viewBOD: false,\r\n      printBOD: false,\r\n      bSIOutbound: false,\r\n      adjustPlan: false,\r\n      forceComplete: false,\r\n      manualEntry: false,\r\n    },\r\n    finishedProductItems: [],\r\n    attribute: [],\r\n    attributeMetaDataList: [],\r\n    compartmentAttributeMetaDataList: [],\r\n    selectedAttributeList: [],\r\n    selectedAssociations: [],\r\n    attributeValidationErrors: [],\r\n    expandedRows: [],\r\n    expandedCompDetailRows: [],\r\n    additiveDetails: [],\r\n    length: 0,\r\n    carrierCompany: [],\r\n    carrierOptions: [],\r\n    carrierSearchOptions: [],\r\n    isHSEInspectionEnable: false,\r\n    isBondShow: false,\r\n    isTransloading: false,\r\n    carrierShareholderMap: {},\r\n    marineReceiptKPIList: [],\r\n    showAuthenticationLayout: false,\r\n    tempMarineReceipt: {},\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      if (propertyName === \"VesselCode\") {\r\n        if (data === null) {\r\n          this.setState({\r\n            modAssociations: [],\r\n            modTankAssociations: [],\r\n            modTankPlanAssociations: [],\r\n          });\r\n        } else {\r\n          this.getVessel(data, true);\r\n        }\r\n      }\r\n      const modMarineReceipt = lodash.cloneDeep(this.state.modMarineReceipt);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (propertyName === \"TerminalCodes\") {\r\n        if (modMarineReceipt[propertyName] === null) {\r\n          modMarineReceipt[propertyName] = [];\r\n        }\r\n        modMarineReceipt[propertyName][0] = data;\r\n        this.terminalSelectionChange([data]);\r\n        this.getTankListForRole(data);\r\n      } else {\r\n        modMarineReceipt[propertyName] = data;\r\n      }\r\n      if (propertyName === \"Active\") {\r\n        if (modMarineReceipt.Active !== this.state.marineReceipt.Active)\r\n          modMarineReceipt.Remarks = \"\";\r\n      }\r\n      if (propertyName === \"Bonded\") {\r\n        validationErrors[\"BondNumber\"] =\r\n          \"BONDED_NO_CANT_BE_EMPTY_FOR_BONDED_RECEIPT_X\";\r\n      }\r\n      if (propertyName === \"ReceiptCode\") {\r\n        if (\r\n          this.state.modTankAssociations !== undefined &&\r\n          this.state.modTankAssociations !== null &&\r\n          this.state.modTankAssociations.length !== 0\r\n        ) {\r\n          this.state.modTankAssociations.forEach((modTankPlan) => {\r\n            modTankPlan.ReceiptCode = data;\r\n          });\r\n        }\r\n      }\r\n      if (propertyName === \"BondNumber\") {\r\n        modMarineReceipt[propertyName] = data;\r\n      }\r\n      this.setState({ modMarineReceipt });\r\n      if (marineReceiptValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          marineReceiptValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  generateCompartmentCode(compartments) {\r\n    try {\r\n      var maxnumber = 0;\r\n      if (\r\n        compartments === null ||\r\n        compartments.length === 0 ||\r\n        compartments === undefined\r\n      )\r\n        return 1;\r\n      compartments.forEach((comp) => {\r\n        var compCode = comp.CompartmentCode;\r\n        if (compCode !== null || compCode !== \"\") {\r\n          if (!isNaN(parseInt(compCode))) {\r\n            let val = parseInt(compCode);\r\n\r\n            if (val > maxnumber) maxnumber = val;\r\n          }\r\n        }\r\n      });\r\n\r\n      return maxnumber + 1;\r\n    } catch (error) {\r\n      return maxnumber;\r\n    }\r\n  }\r\n\r\n  handleAddAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.modAssociations.length <\r\n          this.state.modVehicleDetails.vehicleCompartments.length\r\n        ) {\r\n          let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n          let newAssociation = {\r\n            AssociatedContractItems: null,\r\n            AssociatedOrderItems: null,\r\n            Attributes: [],\r\n            CarrierCompanyCode: null,\r\n            CompartmentCode: null,\r\n            CompartmentSeqNoInVehicle: \"\",\r\n            FinishedProductCode: null,\r\n            OriginTerminalCode: null,\r\n            Quantity: null,\r\n            QuantityUOM: null,\r\n            ReceiptCode: null,\r\n            SequenceNo: 0,\r\n            ShareholderCode: this.props.selectedShareholder,\r\n            SupplierCode: null,\r\n            TrailerCode: null,\r\n          };\r\n\r\n          var maxnumber = 1;\r\n          modAssociations.forEach((object) => {\r\n            var seqNumber = object.SequenceNo;\r\n            if (\r\n              seqNumber !== null &&\r\n              seqNumber !== \"\" &&\r\n              seqNumber !== undefined\r\n            ) {\r\n              if (!isNaN(parseInt(seqNumber))) {\r\n                let val = parseInt(seqNumber);\r\n\r\n                if (val >= maxnumber) maxnumber = val + 1;\r\n              }\r\n            }\r\n          });\r\n          newAssociation.SequenceNo = maxnumber;\r\n          newAssociation.QuantityUOM = this.state.modMarineReceipt.QuantityUOM;\r\n          modAssociations.push(newAssociation);\r\n          this.setState(\r\n            {\r\n              modAssociations,\r\n              selectedAssociations: [],\r\n            },\r\n            () => {\r\n              if (\r\n                this.props.userDetails.EntityResult.IsEnterpriseNode === false\r\n              ) {\r\n                var attributeMetaDataList = lodash.cloneDeep(\r\n                  this.state.compartmentAttributeMetaDataList\r\n                );\r\n                if (attributeMetaDataList.length > 0)\r\n                  this.formCompartmentAttributes([\r\n                    attributeMetaDataList[0].TerminalCode,\r\n                  ]);\r\n              } else\r\n                this.formCompartmentAttributes(\r\n                  this.state.modMarineReceipt.TerminalCodes\r\n                );\r\n            }\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"MarineReceiptDetailsComposite:Error occured on handleAddAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDeleteAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedAssociations != null &&\r\n          this.state.selectedAssociations.length > 0\r\n        ) {\r\n          if (this.state.modAssociations.length > 0) {\r\n            let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n            let modTankPlanAssociations = lodash.cloneDeep(\r\n              this.state.modTankPlanAssociations\r\n            );\r\n            this.state.selectedAssociations.forEach((obj, index) => {\r\n              modAssociations = modAssociations.filter(\r\n                (association, cindex) => {\r\n                  return association.SequenceNo !== obj.SequenceNo;\r\n                }\r\n              );\r\n              modTankPlanAssociations = modTankPlanAssociations.filter(\r\n                (tankAssociation) => {\r\n                  return (\r\n                    tankAssociation.CompartmentSeqNoInVehicle !==\r\n                    obj.CompartmentSeqNoInVehicle\r\n                  );\r\n                }\r\n              );\r\n            });\r\n            this.setState({\r\n              modAssociations,\r\n              modTankPlanAssociations,\r\n              modTankAssociations: modTankPlanAssociations,\r\n              selectedAssociations: [],\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"MarineReceiptDetailsComposite:Error occured on handleDeleteAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDeleteTankAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        if (\r\n          this.state.selectedTankAssociations != null &&\r\n          this.state.selectedTankAssociations.length > 0\r\n        ) {\r\n          if (this.state.modTankAssociations.length > 0) {\r\n            let modTankAssociations = lodash.cloneDeep(\r\n              this.state.modTankAssociations\r\n            );\r\n\r\n            this.state.selectedTankAssociations.forEach((obj, index) => {\r\n              modTankAssociations = modTankAssociations.filter(\r\n                (tankAssociation, cindex) => {\r\n                  return tankAssociation.SequenceNo !== obj.SequenceNo;\r\n                }\r\n              );\r\n            });\r\n            this.setState({\r\n              modTankPlanAssociations: modTankAssociations,\r\n              modTankAssociations,\r\n              selectedTankAssociations: [],\r\n            });\r\n          }\r\n        }\r\n        this.setState({ selectedTankAssociations: [] });\r\n      } catch (error) {\r\n        console.log(\r\n          \"MarineReceiptDetailsComposite:Error occured on handleDeleteTankAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleAddTankAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        let modTankAssociations = lodash.cloneDeep(\r\n          this.state.modTankAssociations\r\n        );\r\n        let newTankAssociation = lodash.cloneDeep(emptyReceiptCompartmentPlan);\r\n        var maxnumber = 1;\r\n        modTankAssociations.forEach((object) => {\r\n          var seqNumber = object.SequenceNo;\r\n          if (\r\n            seqNumber !== null &&\r\n            seqNumber !== \"\" &&\r\n            seqNumber !== undefined\r\n          ) {\r\n            if (!isNaN(parseInt(seqNumber))) {\r\n              let val = parseInt(seqNumber);\r\n\r\n              if (val >= maxnumber) maxnumber = val + 1;\r\n            }\r\n          }\r\n        });\r\n        newTankAssociation.SequenceNo = maxnumber;\r\n        newTankAssociation.PlanQuantityUOM =\r\n          this.state.modMarineReceipt.QuantityUOM;\r\n        modTankAssociations.push(newTankAssociation);\r\n        this.setState({\r\n          modTankPlanAssociations: modTankAssociations,\r\n          modTankAssociations,\r\n          selectedTankAssociations: [],\r\n        });\r\n      } catch (error) {\r\n        console.log(\r\n          \"MarineReceiptDetailsComposite:Error occured on handleAddAssociation\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      var { validationErrors } = { ...this.state.validationErrors };\r\n      var modMarineReceipt = lodash.cloneDeep(this.state.modMarineReceipt);\r\n      validationErrors[propertyName] = error;\r\n      modMarineReceipt[propertyName] = value;\r\n      this.setState({ validationErrors, modMarineReceipt });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    try {\r\n      let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n      let modReceiptCompartment = lodash.cloneDeep(\r\n        this.state.modReceiptCompartment\r\n      );\r\n      modAssociations[cellData.rowIndex][cellData.field] = newVal;\r\n      if (\r\n        cellData.field === \"SupplierCode\" ||\r\n        cellData.field === \"OriginTerminalCode\" ||\r\n        cellData.field === \"FinishedProductCode\"\r\n      ) {\r\n        this.getFinishedProduct(modAssociations, cellData);\r\n      }\r\n      if (cellData.field === \"ShareholderCode\") {\r\n        modAssociations[cellData.rowIndex][\"SupplierCode\"] = \"\";\r\n        modAssociations[cellData.rowIndex][\"OriginTerminalCode\"] = \"\";\r\n        modAssociations[cellData.rowIndex][\"FinishedProductCode\"] = \"\";\r\n        let suppliers = this.state.shareholderSuppliers.filter(\r\n          (shareholderCust) => shareholderCust.ShareholderCode === newVal\r\n        );\r\n        if (suppliers.length > 0) {\r\n          var supplierDestinationOptions;\r\n          supplierDestinationOptions = suppliers[0].SupplierOriginTerminalsList;\r\n\r\n          this.setState({ supplierDestinationOptions });\r\n        } else {\r\n          console.log(\"no suppliers identified for shareholder\");\r\n        }\r\n      } else if (cellData.field === \"SupplierCode\") {\r\n        let shareholderSupplier = this.state.shareholderSuppliers.filter(\r\n          (shareholderCust) =>\r\n            shareholderCust.ShareholderCode === cellData.rowData.ShareholderCode\r\n        );\r\n        let supplierDestinationOptions =\r\n          shareholderSupplier[0].SupplierOriginTerminalsList;\r\n        if (\r\n          supplierDestinationOptions !== undefined &&\r\n          supplierDestinationOptions !== null\r\n        ) {\r\n          if (\r\n            supplierDestinationOptions[newVal] !== undefined &&\r\n            Array.isArray(supplierDestinationOptions[newVal]) &&\r\n            supplierDestinationOptions[newVal].length === 1\r\n          ) {\r\n            modAssociations[cellData.rowIndex][\"OriginTerminalCode\"] =\r\n              supplierDestinationOptions[newVal][0];\r\n            this.getFinishedProduct(modAssociations, cellData);\r\n          } else {\r\n            modAssociations[cellData.rowIndex][\"OriginTerminalCode\"] = \"\";\r\n          }\r\n        }\r\n      } else if (cellData.field === \"CompartmentSeqNoInVehicle\") {\r\n        let vehicleDetails = this.state.modVehicleDetails;\r\n        let vehicleCompartments = vehicleDetails.vehicleCompartments.filter(\r\n          (vc) => vc.vehCompSeq.toString() === newVal.toString()\r\n        );\r\n        if (vehicleCompartments.length > 0) {\r\n          modAssociations[cellData.rowIndex][\"Quantity\"] =\r\n            vehicleCompartments[0].SFL !== null &&\r\n              vehicleCompartments[0].SFL !== \"\"\r\n              ? vehicleCompartments[0].SFL.toLocaleString()\r\n              : null;\r\n          modAssociations[cellData.rowIndex][\"TrailerCode\"] =\r\n            vehicleCompartments[0].trailerCode;\r\n          modAssociations[cellData.rowIndex][\"CompartmentCode\"] =\r\n            vehicleCompartments[0].compCode;\r\n        }\r\n      } else if (cellData.field === \"AdjustPlan\") {\r\n        let rowIndex = modReceiptCompartment.findIndex(\r\n          (item) =>\r\n            item.CompartmentSeqNoInVehicle ===\r\n            cellData.rowData.CompartmentSeqNoInVehicle\r\n        );\r\n        modReceiptCompartment[rowIndex][cellData.field] = newVal;\r\n      } else if (cellData.field === \"ForceComplete\") {\r\n        let rowIndex = modReceiptCompartment.findIndex(\r\n          (item) =>\r\n            item.CompartmentSeqNoInVehicle ===\r\n            cellData.rowData.CompartmentSeqNoInVehicle\r\n        );\r\n        modReceiptCompartment[rowIndex][cellData.field] =\r\n          !modReceiptCompartment[rowIndex][cellData.field];\r\n      }\r\n      this.toggleExpand(modAssociations[cellData.rowIndex], true, true);\r\n      this.setState({\r\n        modReceiptCompartment,\r\n        modAssociations,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on handleCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAttributeCellDataEdit = (attribute, value) => {\r\n    try {\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors });\r\n      if (\r\n        attribute.DataType === Constants.AttributeTypes.INT ||\r\n        attribute.DataType === Constants.AttributeTypes.LONG ||\r\n        attribute.DataType === Constants.AttributeTypes.FLOAT ||\r\n        attribute.DataType === Constants.AttributeTypes.DOUBLE\r\n      ) {\r\n        value = Utilities.convertStringtoDecimal(value);\r\n      }\r\n      attribute.DefaultValue = value;\r\n      this.setState({\r\n        attribute: attribute,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on handleAttributeCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCompAttributeCellDataEdit = (compAttribute, value) => {\r\n    let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n    let compIndex = modAssociations.findIndex(\r\n      (item) => item.SequenceNo === compAttribute.rowData.compSequenceNo\r\n    );\r\n    if (compIndex >= 0) {\r\n      if (compAttribute.rowData.DataType === \"Bool\") {\r\n        if (compAttribute.rowData.AttributeValue === \"true\") {\r\n          modAssociations[compIndex].AttributesforUI[\r\n            // compAttribute.rowIndex\r\n            compAttribute.rowData.SeqNumber - 1\r\n          ].AttributeValue = \"false\";\r\n        } else {\r\n          modAssociations[compIndex].AttributesforUI[\r\n            // compAttribute.rowIndex\r\n            compAttribute.rowData.SeqNumber - 1\r\n          ].AttributeValue = \"true\";\r\n        }\r\n      } else {\r\n        modAssociations[compIndex].AttributesforUI[\r\n          // compAttribute.rowIndex\r\n          compAttribute.rowData.SeqNumber - 1\r\n        ].AttributeValue = value;\r\n      }\r\n    }\r\n\r\n    this.setState({ modAssociations });\r\n    if (compIndex >= 0)\r\n      this.toggleExpand(modAssociations[compIndex], true, true);\r\n  };\r\n\r\n  handleTankCellDataEdit = (newVal, cellData) => {\r\n    try {\r\n      let modTankAssociations = lodash.cloneDeep(\r\n        this.state.modTankAssociations\r\n      );\r\n      modTankAssociations[cellData.rowIndex][cellData.field] = newVal;\r\n      if (cellData.field === \"ShareholderCode\") {\r\n        modTankAssociations[cellData.rowIndex][\"FinishedProductCode\"] = \"\";\r\n        modTankAssociations[cellData.rowIndex][\"BaseProductCode\"] = \"\";\r\n        modTankAssociations[cellData.rowIndex][\"SupplierCode\"] = \"\";\r\n      } else if (cellData.field === \"CompartmentSeqNoInVehicle\") {\r\n        let vehicleDetails = this.state.modVehicleDetails;\r\n        let vehicleCompartments = vehicleDetails.vehicleCompartments.filter(\r\n          (vc) => vc.vehCompSeq.toString() === newVal.toString()\r\n        );\r\n        if (vehicleCompartments.length > 0) {\r\n          modTankAssociations[cellData.rowIndex][\"PlannedQuantity\"] =\r\n            vehicleCompartments[0].SFL !== null &&\r\n              vehicleCompartments[0].SFL !== \"\"\r\n              ? vehicleCompartments[0].SFL.toLocaleString()\r\n              : null;\r\n          modTankAssociations[cellData.rowIndex][\"TrailerCode\"] =\r\n            vehicleCompartments[0].trailerCode;\r\n          modTankAssociations[cellData.rowIndex][\"CompartmentCode\"] =\r\n            vehicleCompartments[0].compCode;\r\n        }\r\n      } else if (cellData.field === \"FinishedProductCode\") {\r\n        if (modTankAssociations[cellData.rowIndex][cellData.field] === \"\") {\r\n          modTankAssociations[cellData.rowIndex][\"BaseProductCode\"] = \"\";\r\n          modTankAssociations[cellData.rowIndex][\"TankCode\"] = \"\";\r\n        }\r\n      } else if (cellData.field === \"BaseProductCode\") {\r\n        let BPCodeTankCodeList = this.state.tankCodeOptions;\r\n        if (BPCodeTankCodeList !== undefined && BPCodeTankCodeList !== null) {\r\n          if (\r\n            BPCodeTankCodeList[newVal] !== undefined &&\r\n            Array.isArray(BPCodeTankCodeList[newVal]) &&\r\n            BPCodeTankCodeList[newVal].length === 1\r\n          ) {\r\n            modTankAssociations[cellData.rowIndex][\"tankCode\"] =\r\n              BPCodeTankCodeList[newVal][0];\r\n          } else {\r\n            modTankAssociations[cellData.rowIndex][\"tankCode\"] = \"\";\r\n          }\r\n        }\r\n      } else if (cellData.field === \"TankCode\") {\r\n        var receiptCompartmentTanks = [];\r\n        var receiptCompartmentTank = lodash.cloneDeep(\r\n          emptyReceiptCompartmentTanks\r\n        );\r\n        receiptCompartmentTank.CompartmentCode =\r\n          modTankAssociations[cellData.rowIndex].CompartmentCode;\r\n        receiptCompartmentTank.CompartmentSeqNoInVehicle =\r\n          modTankAssociations[cellData.rowIndex].CompartmentSeqNoInVehicle;\r\n        receiptCompartmentTank.PlannedQuantity =\r\n          Utilities.convertStringtoDecimal(\r\n            modTankAssociations[cellData.rowIndex].PlannedQuantity\r\n          );\r\n        receiptCompartmentTank.PlanQuantityUOM =\r\n          modTankAssociations[cellData.rowIndex].PlanQuantityUOM;\r\n        receiptCompartmentTank.ReceiptCode =\r\n          modTankAssociations[cellData.rowIndex].ReceiptCode;\r\n        receiptCompartmentTank.TankCode =\r\n          modTankAssociations[cellData.rowIndex].TankCode;\r\n        receiptCompartmentTanks.push(receiptCompartmentTank);\r\n        modTankAssociations[cellData.rowIndex][\"ReceiptCompartmentTanks\"] =\r\n          receiptCompartmentTanks;\r\n      } else if (cellData.field === \"PlannedQuantity\") {\r\n        if (\r\n          modTankAssociations[cellData.rowIndex][\"ReceiptCompartmentTanks\"] !==\r\n          null &&\r\n          modTankAssociations[cellData.rowIndex][\"ReceiptCompartmentTanks\"] !==\r\n          \"\" &&\r\n          modTankAssociations[cellData.rowIndex][\"ReceiptCompartmentTanks\"]\r\n            .length !== 0\r\n        ) {\r\n          modTankAssociations[cellData.rowIndex][\r\n            \"ReceiptCompartmentTanks\"\r\n          ][0].PlannedQuantity = Utilities.convertStringtoDecimal(\r\n            modTankAssociations[cellData.rowIndex].PlannedQuantity\r\n          );\r\n        }\r\n      }\r\n      this.setState({\r\n        modTankPlanAssociations: modTankAssociations,\r\n        modTankAssociations,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on handleTankCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  onTabChange = (activeIndex) => {\r\n    if (activeIndex === 1) {\r\n      this.setState({\r\n        modTankAssociations: this.state.modTankPlanAssociations,\r\n      });\r\n    }\r\n    this.props.onTabChange(activeIndex);\r\n  };\r\n\r\n  handleTankAssociationSelectionChange = (e) => {\r\n    this.setState({ selectedTankAssociations: e });\r\n  };\r\n\r\n  handleAssociationSelectionChange = (e) => {\r\n    this.setState({ selectedAssociations: e });\r\n  };\r\n\r\n  handleManualEntry = () => {\r\n    this.setState({ isManualEntry: true, isReadyToRender: false });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.marineReceipt.ReceiptCode !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getMarineReceipt(true, nextProps.selectedRow.Common_Code);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getUoms() {\r\n    axios(\r\n      RestApis.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            //let quantityUOMOptions = [];\r\n            let shipmentUOM = lodash.cloneDeep(this.state.shipmentUOM);\r\n            if (Array.isArray(result.EntityResult.VOLUME)) {\r\n              shipmentUOM = Utilities.transferListtoOptions(\r\n                result.EntityResult.VOLUME\r\n              );\r\n            }\r\n            if (Array.isArray(result.EntityResult.MASS)) {\r\n              let massUOMOptions = Utilities.transferListtoOptions(\r\n                result.EntityResult.MASS\r\n              );\r\n              massUOMOptions.forEach((massUOM) => shipmentUOM.push(massUOM));\r\n            }\r\n\r\n            this.setState({ shipmentUOM });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting GetUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getVessel(vehicleCode, vesselChanged) {\r\n    let modMarineReceipt = lodash.cloneDeep(this.state.modMarineReceipt);\r\n    let modVehicleDetails = lodash.cloneDeep(this.state.modVehicleDetails);\r\n    modMarineReceipt.VesselCode = vehicleCode;\r\n    var keyCode = [\r\n      {\r\n        key: \"VehicleCode\",\r\n        value: vehicleCode,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: \"MARINE\",\r\n      },\r\n      {\r\n        key: KeyCodes.carrierCode,\r\n        value: modMarineReceipt.CarrierCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: \"VehicleCode\",\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetVessel,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            // modMarineReceipt.CarrierCode =\r\n            //   result.EntityResult.CarrierCompanyCode;\r\n            modVehicleDetails.carrierCode =\r\n              result.EntityResult.CarrierCompanyCode;\r\n            modVehicleDetails.vehicleCompartments =\r\n              this.getCompartmentDetailsFromVehicle(result.EntityResult);\r\n            let compSeqOptions = [];\r\n            modVehicleDetails.vehicleCompartments.forEach(\r\n              (vehicleCompartment) =>\r\n                compSeqOptions.push({\r\n                  text: vehicleCompartment.vehCompSeq.toString(),\r\n                  value: vehicleCompartment.vehCompSeq.toString(),\r\n                })\r\n            );\r\n\r\n            if (vesselChanged) {\r\n              this.setState({\r\n                modTankAssociations: [],\r\n              });\r\n              let modAssociations =\r\n                this.getShipmentCompartmentFromVehicleCompartment(\r\n                  modVehicleDetails.vehicleCompartments\r\n                );\r\n              if (\r\n                this.state.modMarineReceipt.QuantityUOM != null &&\r\n                this.state.modMarineReceipt.QuantityUOM !== \"\"\r\n              ) {\r\n                modAssociations.forEach((modAssociation) => {\r\n                  modAssociation.QuantityUOM =\r\n                    this.state.modMarineReceipt.QuantityUOM;\r\n                });\r\n              }\r\n              if (\r\n                this.state.modMarineReceipt.ReceiptCode !== null &&\r\n                this.state.modMarineReceipt.ReceiptCode !== \"\"\r\n              ) {\r\n                modAssociations.forEach((modAssociation) => {\r\n                  modAssociation.ReceiptCode =\r\n                    this.state.modMarineReceipt.ReceiptCode;\r\n                });\r\n              }\r\n              this.setState({ modAssociations }, () => {\r\n                var terminalCodes = lodash.cloneDeep(\r\n                  this.state.modMarineReceipt.TerminalCodes\r\n                );\r\n                if (\r\n                  this.props.userDetails.EntityResult.IsEnterpriseNode === false\r\n                ) {\r\n                  var attributeMetaDataList = lodash.cloneDeep(\r\n                    this.state.compartmentAttributeMetaDataList\r\n                  );\r\n                  if (attributeMetaDataList.length > 0)\r\n                    this.formCompartmentAttributes([\r\n                      attributeMetaDataList[0].TerminalCode,\r\n                    ]);\r\n                } else {\r\n                  if (terminalCodes !== undefined && terminalCodes !== null) {\r\n                    this.formCompartmentAttributes(terminalCodes);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            this.setState({\r\n              modMarineReceipt,\r\n              modVehicleDetails,\r\n              compSeqOptions,\r\n            });\r\n\r\n            if (\r\n              this.state.marineReceipt.VehicleCode ===\r\n              modMarineReceipt.VehicleCode\r\n            ) {\r\n              let vehicleDetails = lodash.cloneDeep(modVehicleDetails);\r\n              this.setState({ vehicleDetails });\r\n            }\r\n          }\r\n        } else {\r\n          console.log(\"Error in getVessel:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getVessel:\", error);\r\n      });\r\n  }\r\n\r\n  getFinishedProduct(modAssociations, cellData) {\r\n    var modTankAssociations = lodash.cloneDeep(\r\n      this.state.modTankPlanAssociations\r\n    );\r\n    try {\r\n      if (\r\n        modAssociations[cellData.rowIndex][\"SupplierCode\"] !== null &&\r\n        modAssociations[cellData.rowIndex][\"FinishedProductCode\"] !== null &&\r\n        modAssociations[cellData.rowIndex][\"OriginTerminalCode\"] !== null &&\r\n        modAssociations[cellData.rowIndex][\"Quantity\"] !== null\r\n      ) {\r\n        modTankAssociations = modTankAssociations.filter(\r\n          (modTankPlanAssociation) => {\r\n            return (\r\n              modTankPlanAssociation.CompartmentSeqNoInVehicle !==\r\n              modAssociations[cellData.rowIndex].CompartmentSeqNoInVehicle\r\n            );\r\n          }\r\n        );\r\n        var keyCode = [\r\n          {\r\n            key: KeyCodes.finishedProductCode,\r\n            value: modAssociations[cellData.rowIndex].FinishedProductCode,\r\n          },\r\n        ];\r\n        var obj = {\r\n          ShareHolderCode: cellData.rowData.ShareholderCode,\r\n          keyDataCode: KeyCodes.finishedProductCode,\r\n          KeyCodes: keyCode,\r\n        };\r\n        axios(\r\n          RestApis.GetFinishedProduct,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (result.EntityResult.FinishedProductItems.length !== 0) {\r\n              var finishedProductItems =\r\n                result.EntityResult.FinishedProductItems;\r\n              var totalQuantity = 0;\r\n              for (let k = 0; k < finishedProductItems.length; k++) {\r\n                totalQuantity += finishedProductItems[k].Quantity;\r\n              }\r\n              for (let j = 0; j < finishedProductItems.length; j++) {\r\n                var tankAssociation = lodash.cloneDeep(\r\n                  emptyReceiptCompartmentPlan\r\n                );\r\n                var finishedProductCode = finishedProductItems[j];\r\n                tankAssociation.SequenceNo = this.state.length + j + 1;\r\n                tankAssociation.ShareholderCode =\r\n                  modAssociations[cellData.rowIndex].ShareholderCode;\r\n                tankAssociation.CompartmentCode =\r\n                  modAssociations[cellData.rowIndex].CompartmentCode;\r\n                tankAssociation.CompartmentSeqNoInVehicle =\r\n                  modAssociations[cellData.rowIndex].CompartmentSeqNoInVehicle;\r\n                tankAssociation.FinishedProductCode =\r\n                  modAssociations[cellData.rowIndex].FinishedProductCode;\r\n                tankAssociation.BaseProductCode =\r\n                  finishedProductCode.AdditiveCode === null\r\n                    ? finishedProductCode.BaseProductCode\r\n                    : finishedProductCode.AdditiveCode;\r\n                tankAssociation.PlannedQuantity = (\r\n                  (Utilities.convertStringtoDecimal(\r\n                    modAssociations[cellData.rowIndex].Quantity\r\n                  ) *\r\n                    finishedProductCode.Quantity) /\r\n                  totalQuantity\r\n                ).toLocaleString();\r\n                tankAssociation.PlanQuantityUOM =\r\n                  modAssociations[cellData.rowIndex].QuantityUOM;\r\n                tankAssociation.ReceiptCode =\r\n                  this.state.modMarineReceipt.ReceiptCode;\r\n                modTankAssociations.push(tankAssociation);\r\n              }\r\n              this.setState({\r\n                length: this.state.length + finishedProductItems.length,\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n      this.setState({\r\n        modTankPlanAssociations: modTankAssociations,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  getCompartmentDetailsFromVehicle(vehicleInfo) {\r\n    let vehicleCompartments = [];\r\n    let seqNum = 1;\r\n\r\n    vehicleInfo.VehicleTrailers.forEach((vehicleTrailer) => {\r\n      if (Array.isArray(vehicleTrailer.Trailer.Compartments)) {\r\n        for (let i = 0; i < vehicleTrailer.Trailer.Compartments.length; i++) {\r\n          let trailerCompartment = vehicleTrailer.Trailer.Compartments[i];\r\n          let vehicleCompartment = {\r\n            compCode: trailerCompartment.Code,\r\n            vehCompSeq: seqNum,\r\n            trailerCode: trailerCompartment.TrailerCode,\r\n            trailerCompSeq: trailerCompartment.CompartmentSeqNoInTrailer,\r\n            SFL: trailerCompartment.Capacity,\r\n            UOM: trailerCompartment.UOM,\r\n          };\r\n          vehicleCompartments.push(vehicleCompartment);\r\n          seqNum = seqNum + 1;\r\n        }\r\n      }\r\n    });\r\n    return vehicleCompartments;\r\n  }\r\n\r\n  getShipmentCompartmentFromVehicleCompartment(vehicleCompartments) {\r\n    let shipmentCompartments = [];\r\n    try {\r\n      if (Array.isArray(vehicleCompartments)) {\r\n        for (let i = 0; i < vehicleCompartments.length; i++) {\r\n          let vehicleCompartment = vehicleCompartments[i];\r\n          let shipmentCompartment = {\r\n            AssociatedContractItems: null,\r\n            AssociatedOrderItems: null,\r\n            Attributes: [],\r\n            CarrierCompanyCode: null,\r\n            CompartmentCode: vehicleCompartment.compCode,\r\n            CompartmentSeqNoInVehicle: vehicleCompartment.vehCompSeq,\r\n            CustomerCode: null,\r\n            FinishedProductCode: null,\r\n            OriginTerminalCode: null,\r\n            Quantity:\r\n              vehicleCompartment.SFL !== null && vehicleCompartment.SFL !== \"\"\r\n                ? vehicleCompartment.SFL.toLocaleString()\r\n                : null,\r\n            QuantityUOM: vehicleCompartment.UOM,\r\n            ReceiptCode: null,\r\n            SequenceNo: vehicleCompartment.trailerCompSeq,\r\n            ShareholderCode: this.props.selectedShareholder,\r\n            SupplierCode: null,\r\n            TrailerCode: vehicleCompartment.trailerCode,\r\n            attributesForUI: this.state.modAssociations.attributesForUI,\r\n          };\r\n          shipmentCompartments.push(shipmentCompartment);\r\n        }\r\n      }\r\n      return shipmentCompartments;\r\n    } catch (error) {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  getVesselCodeByCarrier(shareholder) {\r\n    if (\r\n      this.state.modMarineReceipt.CarrierCode !== undefined &&\r\n      this.state.modMarineReceipt.CarrierCode !== null &&\r\n      shareholder !== undefined &&\r\n      shareholder !== null\r\n    ) {\r\n      let { carrierShareholderMap } = this.state;\r\n      axios(\r\n        RestApis.GetVehicleCodesByCarrier +\r\n        \"?ShareholderCode=\" +\r\n        carrierShareholderMap.get(this.state.modMarineReceipt.CarrierCode) +\r\n        \"&Transportationtype=\" +\r\n        Constants.TransportationType.MARINE +\r\n        \"&CarrierCode=\" +\r\n        this.state.modMarineReceipt.CarrierCode,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (\r\n              result.EntityResult !== null &&\r\n              Array.isArray(result.EntityResult)\r\n            ) {\r\n              var vessels = [];\r\n              result.EntityResult.forEach((vessel) => {\r\n                vessels.push({\r\n                  text: vessel,\r\n                  value: vessel,\r\n                });\r\n              });\r\n              let vesselSearchOptions = lodash.cloneDeep(vessels);\r\n              if (vesselSearchOptions.length > Constants.filteredOptionsCount) {\r\n                vesselSearchOptions = vesselSearchOptions.slice(\r\n                  0,\r\n                  Constants.filteredOptionsCount\r\n                );\r\n              }\r\n              this.setState({ vessels, vesselSearchOptions });\r\n            }\r\n          } else {\r\n            console.log(\"Error in getVesselCodeByCarrier:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Vessel List:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  getFinishedProductCodes(shareholder) {\r\n    try {\r\n      axios(\r\n        RestApis.GetFinishedProductListForShareholder +\r\n        \"?ShareholderCode=\" +\r\n        shareholder +\r\n        \"&Transportationtype=\" +\r\n        Constants.TransportationType.MARINE,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (result.EntityResult !== null) {\r\n              var FinishedProducts = result.EntityResult;\r\n              this.setState({ FinishedProducts });\r\n            }\r\n          } else {\r\n            console.log(\"Error in GetFinishedProductCodes:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while GetFinishedProductCodes List:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"GetFinishedProductCodes:Error occured on GetFinishedProductCodes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getSupplierOriginTerminals(shareholder) {\r\n    axios(\r\n      RestApis.GetSupplierOriginTerminals +\r\n      \"?ShareholderCode=\" +\r\n      shareholder +\r\n      \"&Transportationtype=\" +\r\n      Constants.TransportationType.MARINE,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n\r\n        if (result.IsSuccess === true) {\r\n          if (Array.isArray(result.EntityResult)) {\r\n            let shareholderSuppliers = result.EntityResult;\r\n            if (shareholderSuppliers.length > 0) {\r\n              this.setState({ shareholderSuppliers: shareholderSuppliers });\r\n            } else {\r\n              console.log(\"no customers identified for shareholder\");\r\n            }\r\n          } else {\r\n            console.log(\"customerdestinations not identified for shareholder\");\r\n          }\r\n        } else {\r\n          console.log(\"Error in getOriginTerminals:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getOriginTerminals List:\", error);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getUoms();\r\n      this.getBaseProductList();\r\n      this.getAdditivesList();\r\n      this.getFinishedProductCodes(\"\");\r\n      this.getSupplierOriginTerminals(\"\");\r\n      this.getLookUpData();\r\n      this.GetReceiptStatusOperations(this.props.selectedRow);\r\n      this.getReceiptCompartmentDetails(this.props.selectedRow);\r\n      this.getAdjustPlanPermission(this.props.selectedRow);\r\n      this.getForceCompletenPermission(this.props.selectedRow);\r\n      let isNewMarineReceipt = false;\r\n      if (this.props.selectedRow.Common_Code === undefined)\r\n        isNewMarineReceipt = true;\r\n      this.getAttributes(isNewMarineReceipt);\r\n      this.getCarrierList();\r\n      this.getCarrierShareholder();\r\n      this.getTransloading();\r\n      this.getBond();\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getBond() {\r\n    axios(\r\n      RestApis.GetBondLookUpSetting,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let isBondShow = false;\r\n          if (result.EntityResult === \"True\") {\r\n            isBondShow = true;\r\n          }\r\n          this.setState({ isBondShow });\r\n        } else {\r\n          console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"MarineReceiptDetailsComposite: Error occurred on getLookUpData\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getTransloading() {\r\n    axios(\r\n      RestApis.GetLookUpData + \"?LookUpTypeCode=Transloading\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let isTransloading = false;\r\n          if (result.EntityResult.MarineEnable === \"True\") {\r\n            isTransloading = true;\r\n          }\r\n          this.setState({ isTransloading });\r\n        } else {\r\n          console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"MarineReceiptDetailsComposite: Error occurred on getLookUpData\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getLookUpData() {\r\n    axios(\r\n      RestApis.GetLookUpData + \"?LookUpTypeCode=HSEInspection\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let isHSEInspectionEnable = false;\r\n          if (result.EntityResult.EnableMarine === \"True\") {\r\n            isHSEInspectionEnable = true;\r\n          }\r\n          this.setState({ isHSEInspectionEnable });\r\n        } else {\r\n          console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"MarineReceiptDetailsComposite: Error occurred on getLookUpData\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getAttributes(isNewMarineReceipt) {\r\n    try {\r\n      axios(\r\n        RestApis.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [marineReceiptAttributeEntity, marineReceiptCompAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult.marineReceipt === null ||\r\n            result.EntityResult.marineReceipt === undefined\r\n          ) {\r\n            result.EntityResult.marineReceipt = [];\r\n          }\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.marineReceipt\r\n              ),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.marineReceipt\r\n                ),\r\n              compartmentAttributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.marineReceiptCompartmentDetail\r\n              ),\r\n            },\r\n            () =>\r\n              this.getMarineReceipt(\r\n                isNewMarineReceipt,\r\n                this.props.selectedRow.Common_Code\r\n              )\r\n          );\r\n        } else {\r\n          console.log(\"Failed to get Attributes\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Attributes:\", error);\r\n    }\r\n  }\r\n\r\n  GetReceiptStatusOperations(selectedRow) {\r\n    try {\r\n      axios(\r\n        RestApis.GetMarineReceiptOperations +\r\n        \"?MarineReceiptStatus=\" +\r\n        selectedRow.MarineReceiptByCompartmentList_ReceiptStatus,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          let nextOperations = [];\r\n          Object.keys(result.EntityResult).forEach((operation) => {\r\n            if (result.EntityResult[operation]) nextOperations.push(operation);\r\n          });\r\n          this.operationPermissionControl(nextOperations);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting GetReceiptStatusOperations:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  getShareholders() {\r\n    return Utilities.transferListtoOptions(\r\n      this.props.userDetails.EntityResult.ShareholderList\r\n    );\r\n  }\r\n\r\n  getMarineReceipt(isNewMarineReceipt, commonCode) {\r\n    try {\r\n      var transportationType = this.getTransportationType();\r\n      emptyMarineReceipt.TransportationType = transportationType;\r\n      emptyMarineReceipt.Active = true;\r\n      emptyMarineReceipt.QuantityUOM =\r\n        this.props.userDetails.EntityResult.PageAttibutes.DefaultQtyUOMForTransactionUI.MARINE;\r\n      emptyMarineReceipt.TerminalCodes =\r\n        this.props.terminalCodes.length === 1\r\n          ? [...this.props.terminalCodes]\r\n          : [];\r\n      if (isNewMarineReceipt) {\r\n        if (\r\n          emptyMarineReceipt.TerminalCodes !== undefined &&\r\n          emptyMarineReceipt.TerminalCodes !== null &&\r\n          emptyMarineReceipt.TerminalCodes.length !== 0\r\n        ) {\r\n          this.getTankListForRole(emptyMarineReceipt.TerminalCodes[0]);\r\n        } else {\r\n          this.getTankListForRole(\"\");\r\n        }\r\n        this.setState(\r\n          {\r\n            marineReceipt: { ...emptyMarineReceipt },\r\n            modMarineReceipt: { ...emptyMarineReceipt },\r\n            modAssociations: [],\r\n            isReadyToRender: true,\r\n            selectedAttributeList: [],\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnMarineReceiptByCompartment\r\n            ),\r\n            isNewReceipt: true,\r\n          },\r\n          () => {\r\n            if (this.props.userDetails.EntityResult.IsEnterpriseNode === false)\r\n              this.localNodeAttribute();\r\n          }\r\n        );\r\n        return;\r\n      }\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.marineReceiptCode,\r\n          value: commonCode,\r\n        },\r\n        {\r\n          key: KeyCodes.transportationType,\r\n          value: transportationType,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        keyDataCode: KeyCodes.marineReceiptCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestApis.GetMarineReceipt,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            var modTankAssociations = [];\r\n            for (\r\n              let i = 0;\r\n              i <\r\n              result.EntityResult.RailMarineReceiptCompartmentPlanList.length;\r\n              i++\r\n            ) {\r\n              var keyCode = [\r\n                {\r\n                  key: KeyCodes.finishedProductCode,\r\n                  value:\r\n                    result.EntityResult.RailMarineReceiptCompartmentPlanList[i]\r\n                      .FinishedProductCode,\r\n                },\r\n              ];\r\n              var obj = {\r\n                ShareHolderCode:\r\n                  result.EntityResult.RailMarineReceiptCompartmentPlanList[i]\r\n                    .ShareholderCode,\r\n                keyDataCode: KeyCodes.finishedProductCode,\r\n                KeyCodes: keyCode,\r\n              };\r\n              axios(\r\n                RestApis.GetFinishedProduct,\r\n                Utilities.getAuthenticationObjectforPost(\r\n                  obj,\r\n                  this.props.tokenDetails.tokenInfo\r\n                )\r\n              ).then((response) => {\r\n                var result1 = response.data;\r\n                if (result1.IsSuccess === true) {\r\n                  // if (result1.EntityResult.FinishedProductItems.length !== 0) {\r\n                  var finishedProductItems =\r\n                    result1.EntityResult.FinishedProductItems;\r\n                  var totalQuantity = 0;\r\n                  for (\r\n                    let k = 0;\r\n                    k < result1.EntityResult.FinishedProductItems.length;\r\n                    k++\r\n                  ) {\r\n                    totalQuantity +=\r\n                      result1.EntityResult.FinishedProductItems[k].Quantity;\r\n                  }\r\n                  for (let j = 0; j < finishedProductItems.length; j++) {\r\n                    var tankAssociation = lodash.cloneDeep(\r\n                      emptyReceiptCompartmentPlan\r\n                    );\r\n                    tankAssociation.SequenceNo = this.state.length + j + 1;\r\n                    tankAssociation.ShareholderCode =\r\n                      result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                        i\r\n                      ].ShareholderCode;\r\n                    tankAssociation.CompartmentSeqNoInVehicle =\r\n                      result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                        i\r\n                      ].CompartmentSeqNoInVehicle;\r\n                    tankAssociation.FinishedProductCode =\r\n                      result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                        i\r\n                      ].FinishedProductCode;\r\n                    tankAssociation.BaseProductCode =\r\n                      finishedProductItems[j].AdditiveCode === null\r\n                        ? finishedProductItems[j].BaseProductCode\r\n                        : finishedProductItems[j].AdditiveCode;\r\n                    tankAssociation.PlanQuantityUOM =\r\n                      result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                        i\r\n                      ].PlanQuantityUOM;\r\n                    tankAssociation.CompartmentCode =\r\n                      result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                        i\r\n                      ].CompartmentCode;\r\n                    tankAssociation.TankCode =\r\n                      result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                        i\r\n                      ].ReceiptCompartmentTanks !== null &&\r\n                        result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                          i\r\n                        ].ReceiptCompartmentTanks.length !== 0\r\n                        ? result.EntityResult\r\n                          .RailMarineReceiptCompartmentPlanList[i]\r\n                          .ReceiptCompartmentTanks[j].TankCode\r\n                        : \"\";\r\n                    tankAssociation.PlannedQuantity =\r\n                      result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                        i\r\n                      ].ReceiptCompartmentTanks !== null &&\r\n                        result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                          i\r\n                        ].ReceiptCompartmentTanks !== \"\" &&\r\n                        result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                          i\r\n                        ].ReceiptCompartmentTanks.length !== 0\r\n                        ? result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                          i\r\n                        ].ReceiptCompartmentTanks[\r\n                          j\r\n                        ].PlannedQuantity.toLocaleString()\r\n                        : (\r\n                          result.EntityResult\r\n                            .RailMarineReceiptCompartmentDetailPlanList[i]\r\n                            .Quantity *\r\n                          (finishedProductItems[j].Quantity / totalQuantity)\r\n                        ).toLocaleString();\r\n                    // result.EntityResult\r\n                    //   .RailMarineReceiptCompartmentDetailPlanList[i]\r\n                    //   .Quantity !== \"\" &&\r\n                    // result.EntityResult\r\n                    //   .RailMarineReceiptCompartmentDetailPlanList[i]\r\n                    //   .Quantity !== null\r\n                    //   ? (\r\n                    //       result.EntityResult\r\n                    //         .RailMarineReceiptCompartmentDetailPlanList[i]\r\n                    //         .Quantity *\r\n                    //       (finishedProductItems[j].Quantity / totalQuantity)\r\n                    //     ).toLocaleString()\r\n                    //   : \"\";\r\n\r\n                    var receiptCompartmentTanks = [];\r\n                    var receiptCompartmentTank = lodash.cloneDeep(\r\n                      emptyReceiptCompartmentTanks\r\n                    );\r\n                    receiptCompartmentTank.CompartmentCode =\r\n                      result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                        i\r\n                      ].CompartmentCode;\r\n                    receiptCompartmentTank.CompartmentSeqNoInVehicle =\r\n                      result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                        i\r\n                      ].CompartmentSeqNoInVehicle;\r\n                    receiptCompartmentTank.PlannedQuantity =\r\n                      result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                        i\r\n                      ].ReceiptCompartmentTanks !== null &&\r\n                        result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                          i\r\n                        ].ReceiptCompartmentTanks !== \"\" &&\r\n                        result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                          i\r\n                        ].ReceiptCompartmentTanks.length !== 0\r\n                        ? result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                          i\r\n                        ].ReceiptCompartmentTanks[\r\n                          j\r\n                        ].PlannedQuantity.toLocaleString()\r\n                        : result.EntityResult\r\n                          .RailMarineReceiptCompartmentPlanList[i]\r\n                          .PlannedQuantity *\r\n                        (finishedProductItems[j].Quantity / totalQuantity);\r\n                    // result.EntityResult\r\n                    //   .RailMarineReceiptCompartmentDetailPlanList[i]\r\n                    //   .Quantity !== \"\" &&\r\n                    // result.EntityResult\r\n                    //   .RailMarineReceiptCompartmentDetailPlanList[i]\r\n                    //   .Quantity !== null\r\n                    //   ? result.EntityResult\r\n                    //       .RailMarineReceiptCompartmentDetailPlanList[i]\r\n                    //       .Quantity *\r\n                    //     (finishedProductItems[j].Quantity / totalQuantity)\r\n                    //   : \"\";\r\n                    receiptCompartmentTank.PlanQuantityUOM =\r\n                      result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                        i\r\n                      ].PlanQuantityUOM;\r\n                    receiptCompartmentTank.TankCode =\r\n                      result.EntityResult.RailMarineReceiptCompartmentPlanList[\r\n                        i\r\n                      ].ReceiptCompartmentTanks.length === 0\r\n                        ? \"\"\r\n                        : result.EntityResult\r\n                          .RailMarineReceiptCompartmentPlanList[i]\r\n                          .ReceiptCompartmentTanks[j].TankCode;\r\n                    receiptCompartmentTanks.push(receiptCompartmentTank);\r\n                    tankAssociation.ReceiptCompartmentTanks =\r\n                      receiptCompartmentTanks;\r\n                    modTankAssociations.push(tankAssociation);\r\n                  }\r\n                  this.setState({\r\n                    length: this.state.length + finishedProductItems.length,\r\n                  });\r\n                  // } else {\r\n                  //   this.setState({\r\n                  //     finishedProductItems: [],\r\n                  //   });\r\n                  // }\r\n                } else {\r\n                  this.setState({\r\n                    finishedProductItems: [],\r\n                  });\r\n                }\r\n              });\r\n            }\r\n            let marineReceipt = lodash.cloneDeep(result.EntityResult);\r\n            marineReceipt.HSEInspectionStatus = Utilities.getKeyByValue(\r\n              Constants.HSEInpectionStatus,\r\n              marineReceipt.HSEInspectionStatus\r\n            );\r\n            this.setState(\r\n              {\r\n                isNewReceipt: false,\r\n                isReadyToRender: true,\r\n                marineReceipt: marineReceipt,\r\n                modMarineReceipt: marineReceipt,\r\n                modAssociations: this.getAssociationsFromReceipt(\r\n                  result.EntityResult\r\n                ),\r\n                modTankAssociations: modTankAssociations,\r\n                modTankPlanAssociations: modTankAssociations,\r\n                tempModTankAssociations: modTankAssociations,\r\n                saveEnabled:\r\n                  Utilities.isInFunction(\r\n                    this.props.userDetails.EntityResult.FunctionsList,\r\n                    functionGroups.modify,\r\n                    fnMarineReceiptByCompartment\r\n                  ) && this.props.updateEnableForConfigure //result.EntityResult.ReceiptStatus === \"READY\",\r\n              },\r\n              () => {\r\n                if (\r\n                  marineReceipt.TerminalCodes !== undefined &&\r\n                  marineReceipt.TerminalCodes !== null &&\r\n                  marineReceipt.TerminalCodes.length !== 0\r\n                ) {\r\n                  // this.getTerminalsForCarrier(result.EntityResult.CarrierCode);\r\n                  this.getTankListForRole(marineReceipt.TerminalCodes[0]);\r\n                } else {\r\n                  this.getTankListForRole(\"\");\r\n                }\r\n                if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                  this.terminalSelectionChange(\r\n                    result.EntityResult.TerminalCodes\r\n                  );\r\n                } else {\r\n                  this.localNodeAttribute();\r\n                }\r\n              }\r\n            );\r\n            this.getVesselCodeByCarrier(this.props.selectedShareholder);\r\n            this.getVessel(result.EntityResult.VesselCode, false);\r\n            this.getKPIList(result.EntityResult.ReceiptCode)\r\n          } else {\r\n            this.setState({\r\n              isNewReceipt: false,\r\n              marineReceipt: lodash.cloneDeep(emptyMarineReceipt),\r\n              modMarineReceipt: lodash.cloneDeep(emptyMarineReceipt),\r\n              isReadyToRender: true,\r\n            });\r\n            console.log(\"Error in getMarineReceipt:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting marineReceipt:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  getTerminalsForCarrier(carrier) {\r\n    if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n      const modMarineReceipt = lodash.cloneDeep(this.state.modMarineReceipt);\r\n      let terminalCodes = [...this.state.terminalCodes];\r\n      modMarineReceipt.CarrierCode = carrier;\r\n      modMarineReceipt.VesselCode = \"\";\r\n      modMarineReceipt.modAssociations = [];\r\n\r\n      try {\r\n        if (carrier === undefined) {\r\n          terminalCodes = [];\r\n          modMarineReceipt.TerminalCodes = [];\r\n          this.setState({ terminalCodes, modMarineReceipt });\r\n          return;\r\n        }\r\n        let keyCode = [\r\n          {\r\n            key: KeyCodes.carrierCode,\r\n            value: carrier,\r\n          },\r\n          {\r\n            key: KeyCodes.transportationType,\r\n            value: Constants.TransportationType.MARINE,\r\n          },\r\n        ];\r\n        let obj = {\r\n          ShareHolderCode: this.props.selectedShareholder,\r\n          keyDataCode: KeyCodes.carrierCode,\r\n          KeyCodes: keyCode,\r\n        };\r\n        axios(\r\n          RestApis.GetCarrier,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            let result = response.data;\r\n            if (\r\n              result.IsSuccess === true &&\r\n              result.EntityResult !== null &&\r\n              result.EntityResult.TerminalCodes !== null\r\n            ) {\r\n              terminalCodes = [...result.EntityResult.TerminalCodes];\r\n              this.setState({ terminalCodes }, () => { });\r\n            } else {\r\n              terminalCodes = [];\r\n              this.setState({ terminalCodes });\r\n            }\r\n            let marineReceipt = { ...this.state.marineReceipt };\r\n            if (\r\n              marineReceipt.ReceiptCode === undefined ||\r\n              marineReceipt.ReceiptCode === \"\" ||\r\n              marineReceipt.ReceiptCode === null\r\n            ) {\r\n              if (terminalCodes.length === 1) {\r\n                modMarineReceipt.TerminalCodes = [...terminalCodes];\r\n                //this.terminalSelectionChange(modMarineReceipt.TerminalCodes);\r\n              } else {\r\n                modMarineReceipt.TerminalCodes = [];\r\n                //this.terminalSelectionChange([]);\r\n              }\r\n            }\r\n            if (Array.isArray(modMarineReceipt.TerminalCodes)) {\r\n              modMarineReceipt.TerminalCodes = terminalCodes.filter((x) =>\r\n                modMarineReceipt.TerminalCodes.includes(x)\r\n              );\r\n            }\r\n            this.setState({ modMarineReceipt }, () =>\r\n              //this.formCompartmentAttributes());\r\n              this.terminalSelectionChange(modMarineReceipt.TerminalCodes)\r\n            );\r\n          })\r\n          .catch((error) => {\r\n            terminalCodes = [];\r\n            modMarineReceipt.TerminalCodes = [];\r\n            this.setState({ terminalCodes, modMarineReceipt }, () =>\r\n              this.formCompartmentAttributes([])\r\n            );\r\n            console.log(\"Error while getting Carrier:\", error, carrier);\r\n            //throw error;\r\n          });\r\n      } catch (error) {\r\n        terminalCodes = [];\r\n        modMarineReceipt.TerminalCodes = [];\r\n        this.setState({ terminalCodes, modMarineReceipt }, () =>\r\n          this.formCompartmentAttributes([])\r\n        );\r\n        console.log(\r\n          \"TrailerDetailsComposite:Error occured on handleCarrierChange\",\r\n          error\r\n        );\r\n      }\r\n    } else {\r\n      this.formCompartmentAttributes([]);\r\n    }\r\n  }\r\n\r\n  getTransportationType() {\r\n    var transportationType = Constants.TransportationType.MARINE;\r\n    const { genericProps } = this.props;\r\n    if (\r\n      genericProps !== undefined &&\r\n      genericProps.transportationType !== undefined\r\n    ) {\r\n      transportationType = genericProps.transportationType;\r\n    }\r\n    return transportationType;\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (Array.isArray(attributeMetaDataList) && attributeMetaDataList.length > 0) {\r\n        this.terminalSelectionChange([attributeMetaDataList[0].TerminalCode]);\r\n      } else {\r\n        var compAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.compartmentAttributeMetaDataList\r\n        );\r\n        if (Array.isArray(compAttributeMetaDataList) && compAttributeMetaDataList.length > 0)\r\n          this.formCompartmentAttributes([\r\n            compAttributeMetaDataList[0].TerminalCode,\r\n          ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  validateSave(modMarineReceipt) {\r\n    var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n\r\n    Object.keys(marineReceiptValidationDef).forEach(function (key) {\r\n      if (modMarineReceipt[key] !== undefined) {\r\n        validationErrors[key] = Utilities.validateField(\r\n          marineReceiptValidationDef[key],\r\n          modMarineReceipt[key]\r\n        );\r\n      }\r\n    });\r\n    if (modMarineReceipt.Active !== this.state.marineReceipt.Active) {\r\n      if (\r\n        modMarineReceipt.Remarks === null ||\r\n        modMarineReceipt.Remarks === \"\"\r\n      ) {\r\n        validationErrors[\"Remarks\"] =\r\n          \"Marine_ShipmentCompDetail_RemarksRequired\";\r\n      }\r\n    }\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"Receipt_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n    if (\r\n      Array.isArray(\r\n        modMarineReceipt.RailMarineReceiptCompartmentDetailPlanList\r\n      ) &&\r\n      modMarineReceipt.RailMarineReceiptCompartmentDetailPlanList.length > 0\r\n    ) {\r\n      modMarineReceipt.RailMarineReceiptCompartmentDetailPlanList.forEach(\r\n        (compart) => {\r\n          marineReceiptCompartDef.forEach((col) => {\r\n            let err = \"\";\r\n\r\n            if (col.validator !== undefined) {\r\n              err = Utilities.validateField(col.validator, compart[col.field]);\r\n            }\r\n            if (err !== \"\") {\r\n              notification.messageResultDetails.push({\r\n                keyFields: [\r\n                  \"Marine_ReceiptCompDetail_ShipmentNumber\",\r\n                  col.displayName,\r\n                ],\r\n                keyValues: [modMarineReceipt.ReceiptCode, compart[col.field]],\r\n                isSuccess: false,\r\n                errorMessage: err,\r\n              });\r\n            }\r\n          });\r\n\r\n          let updatedAttributes = [];\r\n          if (\r\n            compart.AttributesforUI !== null &&\r\n            compart.AttributesforUI !== undefined\r\n          )\r\n            updatedAttributes = compart.AttributesforUI.filter(function (\r\n              uIAttributes\r\n            ) {\r\n              return compart.Attributes.some(function (selAttribute) {\r\n                let isPresent =\r\n                  selAttribute.ListOfAttributeData.findIndex(\r\n                    (item) => item.AttributeCode === uIAttributes.AttributeCode\r\n                  ) >= 0\r\n                    ? true\r\n                    : false;\r\n                return (\r\n                  uIAttributes.TerminalCode === selAttribute.TerminalCode &&\r\n                  isPresent\r\n                );\r\n              });\r\n            });\r\n\r\n          updatedAttributes.forEach((item) => {\r\n            let errMsg = Utilities.valiateAttributeField(\r\n              item,\r\n              item.AttributeValue\r\n            );\r\n            if (errMsg !== \"\") {\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                notification.messageResultDetails.push({\r\n                  keyFields: [\r\n                    \"CompAttributeComp\",\r\n                    \"CompAttributeTerminal\",\r\n                    item.AttributeName,\r\n                  ],\r\n                  keyValues: [\r\n                    compart.Code,\r\n                    item.TerminalCode,\r\n                    item.AttributeValue,\r\n                  ],\r\n                  isSuccess: false,\r\n                  errorMessage: errMsg,\r\n                });\r\n              } else {\r\n                notification.messageResultDetails.push({\r\n                  keyFields: [\"CompAttributeComp\", item.AttributeName],\r\n                  keyValues: [compart.Code, item.AttributeValue],\r\n                  isSuccess: false,\r\n                  errorMessage: errMsg,\r\n                });\r\n              }\r\n            }\r\n          });\r\n          this.toggleExpand(compart, true, true);\r\n        }\r\n      );\r\n    } else {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [],\r\n        keyValues: [],\r\n        isSuccess: false,\r\n        errorMessage: \"ERRMSG_MARINERECEIPT_COMP_DETAIL_PLAN_LIST_EMPTY\",\r\n      });\r\n    }\r\n    let uniqueRecords = [\r\n      ...new Set(\r\n        modMarineReceipt.RailMarineReceiptCompartmentDetailPlanList.map((a) =>\r\n          a.CompartmentSeqNoInVehicle.toString()\r\n        )\r\n      ),\r\n    ];\r\n    if (\r\n      uniqueRecords.length !==\r\n      modMarineReceipt.RailMarineReceiptCompartmentDetailPlanList.length\r\n    ) {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [],\r\n        keyValues: [],\r\n        isSuccess: false,\r\n        errorMessage: \"ERRMSG_RAILReceipt_ITEMPLAN_DUPLICATE\",\r\n      });\r\n      this.props.onSaved(this.state.modMarineReceipt, \"update\", notification);\r\n      return false;\r\n    }\r\n    this.setState({ validationErrors });\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n    let attributeList = lodash.cloneDeep(this.state.selectedAttributeList);\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n    let returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    else return returnValue;\r\n\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modMarineReceipt, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  handleSave = () => {\r\n    try {\r\n      if (this.state.saveEnabled) {\r\n        var modTankAssociations = lodash.cloneDeep(\r\n          this.state.modTankAssociations\r\n        );\r\n        var tempTankAssociations = modTankAssociations.filter(\r\n          (modTankAssociation) => {\r\n            return modTankAssociation.ReceiptCompartmentTanks.length !== 0;\r\n          }\r\n        );\r\n        tempTankAssociations = tempTankAssociations.filter(\r\n          (tankAssociation) => {\r\n            return tankAssociation.ReceiptCompartmentTanks[0].TankCode !== \"\";\r\n          }\r\n        );\r\n        if (tempTankAssociations.length === 0) {\r\n          var tankAssociations = [];\r\n          this.saveMarineReceipt(tankAssociations);\r\n        } else {\r\n          this.saveMarineReceipt(modTankAssociations);\r\n        }\r\n        return;\r\n      }\r\n      const saveCompartmentDetails = this.handleSaveCompartmentDetailsEnabled();\r\n      if (\r\n        this.state.marineReceipt.ReceiptCode !== \"\" &&\r\n        saveCompartmentDetails\r\n      ) {\r\n        this.handleCompartmentDetailsSave();\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  addUpdateMarineDispatch = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempMarineReceipt = lodash.cloneDeep(this.state.tempMarineReceipt);\r\n\r\n      this.state.marineReceipt.ReceiptCode === \"\"\r\n        ? this.createMarineReceipt(tempMarineReceipt)\r\n        : this.updateMarineReceipt(tempMarineReceipt);\r\n    } catch (error) {\r\n      console.log(\"MarineShipComposite : Error in addUpdateMarineDispatch\");\r\n    }\r\n  };\r\n\r\n  saveMarineReceipt(tankAssociations) {\r\n    let modMarineReceipt = lodash.cloneDeep(this.state.modMarineReceipt);\r\n    modMarineReceipt.RailMarineReceiptCompartmentDetailPlanList =\r\n      this.getCompartmentFromAssociations(this.state.modAssociations);\r\n\r\n    // this.setState({ saveEnabled: false });\r\n    let modMarineReceipts = this.fillAttributeDetails(modMarineReceipt);\r\n    if (this.validateSave(modMarineReceipts)) {\r\n      modMarineReceipt.RailMarineReceiptCompartmentDetailPlanList =\r\n        modMarineReceipt.RailMarineReceiptCompartmentDetailPlanList.map(\r\n          (detailPlan) => {\r\n            detailPlan.Quantity = Utilities.convertStringtoDecimal(\r\n              detailPlan.Quantity\r\n            );\r\n            return detailPlan;\r\n          }\r\n        );\r\n      modMarineReceipt.RailMarineReceiptCompartmentPlanList =\r\n        this.getTankPlanFromTankAssociations(tankAssociations);\r\n\r\n\r\n      let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempMarineReceipt = lodash.cloneDeep(modMarineReceipt);\r\n      this.setState({ showAuthenticationLayout, tempMarineReceipt }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.addUpdateMarineDispatch();\r\n        }\r\n      });\r\n\r\n    } else {\r\n      this.setState({ saveEnabled: true });\r\n    }\r\n  }\r\n\r\n  fillAttributeDetails(modMarineReceipt) {\r\n    try {\r\n      let attributeList = lodash.cloneDeep(this.state.selectedAttributeList);\r\n      modMarineReceipt.Attributes = [];\r\n      attributeList.forEach((comp) => {\r\n        let attribute = {\r\n          ListOfAttributeData: [],\r\n        };\r\n        attribute.TerminalCode = comp.TerminalCode;\r\n        comp.attributeMetaDataList.forEach((det) => {\r\n          attribute.ListOfAttributeData.push({\r\n            AttributeCode: det.Code,\r\n            AttributeValue: det.DefaultValue,\r\n          });\r\n        });\r\n        modMarineReceipt.Attributes.push(attribute);\r\n      });\r\n\r\n      // For Compartment Attributes\r\n      modMarineReceipt.RailMarineReceiptCompartmentDetailPlanList.forEach(\r\n        (comp) => {\r\n          let selectedTerminals = [];\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n            selectedTerminals = lodash.cloneDeep(\r\n              modMarineReceipt.TerminalCodes\r\n            );\r\n          else {\r\n            var compAttributeMetaDataList = lodash.cloneDeep(\r\n              this.state.compartmentAttributeMetaDataList\r\n            );\r\n            if (compAttributeMetaDataList.length > 0)\r\n              selectedTerminals = [compAttributeMetaDataList[0].TerminalCode];\r\n          }\r\n          let terminalAttributes = [];\r\n          comp.Attributes = [];\r\n          if (selectedTerminals !== undefined && selectedTerminals !== null) {\r\n            selectedTerminals.forEach((terminal) => {\r\n              if (\r\n                comp.AttributesforUI !== null &&\r\n                comp.AttributesforUI !== undefined\r\n              )\r\n                terminalAttributes = comp.AttributesforUI.filter(function (\r\n                  attTerminal\r\n                ) {\r\n                  return attTerminal.TerminalCode === terminal;\r\n                });\r\n\r\n              let attribute = {\r\n                ListOfAttributeData: [],\r\n              };\r\n              attribute.TerminalCode = terminal;\r\n              terminalAttributes.forEach((termAtt) => {\r\n                if (\r\n                  termAtt.AttributeValue !== \"\" ||\r\n                  termAtt.IsMandatory === true\r\n                )\r\n                  attribute.ListOfAttributeData.push({\r\n                    AttributeCode: termAtt.AttributeCode,\r\n                    AttributeValue: termAtt.AttributeValue,\r\n                  });\r\n              });\r\n              if (\r\n                attribute.ListOfAttributeData !== null &&\r\n                attribute.ListOfAttributeData !== undefined &&\r\n                attribute.ListOfAttributeData.length > 0\r\n              )\r\n                comp.Attributes.push(attribute);\r\n            });\r\n          }\r\n        }\r\n      );\r\n      this.setState({ modMarineReceipt });\r\n      return modMarineReceipt;\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  createMarineReceipt(modMarineReceipt) {\r\n    this.handleAuthenticationClose();\r\n    modMarineReceipt.RailMarineReceiptCompartmentDetailPlanList.forEach((item) => {\r\n      item.QuantityUOM = modMarineReceipt.QuantityUOM;\r\n    })\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineReceiptCode,\r\n        value: modMarineReceipt.ReceiptCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modMarineReceipt,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"Receipt_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ReceiptCompDetail_ShipmentNumber\"],\r\n          keyValues: [modMarineReceipt.ReceiptCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestApis.CreateMarineReceipt,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          // this.setState({\r\n          //   saveEnabled: Utilities.isInFunction(\r\n          //     this.props.userDetails.EntityResult.FunctionsList,\r\n          //     functionGroups.add,\r\n          //     fnMarineReceipt\r\n          //   ),\r\n          // });\r\n          // this.getMarineReceipt(false, modMarineReceipt.ReceiptCode);\r\n          this.props.handlePageAdd(modMarineReceipt);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: true,\r\n          });\r\n          console.log(\"Error in CreateMarineReceipt:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modMarineReceipt, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: true,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modMarineReceipt, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateMarineReceipt(modMarineReceipt) {\r\n    this.handleAuthenticationClose();\r\n    modMarineReceipt.RailMarineReceiptCompartmentDetailPlanList.forEach((item) => {\r\n      item.QuantityUOM = modMarineReceipt.QuantityUOM;\r\n    })\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineReceiptCode,\r\n        value: modMarineReceipt.ReceiptCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modMarineReceipt,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"Receipt_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ReceiptCompDetail_ShipmentNumber\"],\r\n          keyValues: [modMarineReceipt.ReceiptCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestApis.UpdateMarineReceipt,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          // this.setState({\r\n          //   saveEnabled: Utilities.isInFunction(\r\n          //     this.props.userDetails.EntityResult.FunctionsList,\r\n          //     functionGroups.modify,\r\n          //     fnMarineReceipt\r\n          //   ),\r\n          // });\r\n          this.props.handlePageAdd(modMarineReceipt);\r\n        } else {\r\n          this.setState({\r\n            saveEnabled: true,\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in UpdateMarineReceipt:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modMarineReceipt, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modMarineReceipt, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: true,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      let vehicleDetails = lodash.cloneDeep(this.state.vehicleDetails);\r\n      let modAssociations;\r\n      let compSeqOptions = [];\r\n      let modTankAssociations = [];\r\n      let modTankPlanAssociations = [];\r\n      if (this.state.marineReceipt.ReceiptCode === \"\") {\r\n        modAssociations = [];\r\n        compSeqOptions = [];\r\n      } else {\r\n        modAssociations = this.getAssociationsFromReceipt(\r\n          this.state.marineReceipt\r\n        );\r\n        modTankAssociations = lodash.cloneDeep(\r\n          this.state.tempModTankAssociations\r\n        );\r\n        modTankPlanAssociations = lodash.cloneDeep(\r\n          this.state.tempModTankAssociations\r\n        );\r\n        vehicleDetails.vehicleCompartments.forEach((vehicleCompartment) =>\r\n          compSeqOptions.push({\r\n            text: vehicleCompartment.vehCompSeq.toString(),\r\n            value: vehicleCompartment.vehCompSeq.toString(),\r\n          })\r\n        );\r\n      }\r\n      var modMarineReceipt = lodash.cloneDeep(this.state.marineReceipt);\r\n      this.setState(\r\n        {\r\n          modTankAssociations,\r\n          modTankPlanAssociations,\r\n          modMarineReceipt,\r\n          validationErrors: [],\r\n          modVehicleDetails: lodash.cloneDeep(this.state.vehicleDetails),\r\n          modAssociations,\r\n          compSeqOptions,\r\n          selectedAttributeList: [],\r\n          selectedAssociations: [],\r\n          selectedTankAssociations: [],\r\n          vesselSearchOptions: [],\r\n          terminalCodes: this.props.terminalCodes,\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(modMarineReceipt.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(attributeMetaDataList),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on handleResetAttributeValidationError\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      var modMarineReceipt = lodash.cloneDeep(this.state.modMarineReceipt);\r\n      validationErrors[propertyName] = error;\r\n      modMarineReceipt[propertyName] = value;\r\n      this.setState({ validationErrors, modMarineReceipt });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals !== null && selectedTerminals !== undefined) {\r\n        let attributesTerminalsList = [];\r\n        var attributeMetaDataList = [];\r\n        var selectedAttributeList = [];\r\n\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        selectedAttributeList = lodash.cloneDeep(\r\n          this.state.selectedAttributeList\r\n        );\r\n\r\n        const attributeValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeValidationErrors\r\n        );\r\n\r\n        var modMarineReceipt = lodash.cloneDeep(this.state.modMarineReceipt);\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = selectedAttributeList.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          });\r\n          if (existitem === undefined) {\r\n            attributeMetaDataList.forEach(function (attributeMetaData) {\r\n              if (attributeMetaData.TerminalCode === terminal) {\r\n                var Attributevalue = modMarineReceipt.Attributes.find(\r\n                  (marineReceiptAttribute) => {\r\n                    return marineReceiptAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n                attributesTerminalsList.push(attributeMetaData);\r\n              }\r\n            });\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n\r\n        selectedAttributeList = [];\r\n        selectedAttributeList = attributesTerminalsList;\r\n\r\n        attributeValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n              (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n        this.formCompartmentAttributes(selectedTerminals);\r\n        this.setState({ selectedAttributeList, attributeValidationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  formCompartmentAttributes(selectedTerminals) {\r\n    try {\r\n      let attributes = lodash.cloneDeep(\r\n        this.state.compartmentAttributeMetaDataList\r\n      );\r\n      attributes = attributes.filter(function (attTerminal) {\r\n        return selectedTerminals.some(function (selTerminal) {\r\n          return attTerminal.TerminalCode === selTerminal;\r\n        });\r\n      });\r\n      let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n      let compAttributes = [];\r\n      attributes.forEach((att) => {\r\n        att.attributeMetaDataList.forEach((attribute) => {\r\n          compAttributes.push({\r\n            AttributeCode: attribute.Code,\r\n            AttributeName: attribute.DisplayName,\r\n            AttributeValue: attribute.DefaultValue,\r\n            TerminalCode: attribute.TerminalCode,\r\n            IsMandatory: attribute.IsMandatory,\r\n            DataType: attribute.DataType,\r\n            IsReadonly: attribute.IsReadonly,\r\n            compSequenceNo: \"\",\r\n          });\r\n        });\r\n      });\r\n      let attributesforNewComp = lodash.cloneDeep(compAttributes);\r\n      modAssociations.forEach((comp) => {\r\n        if (\r\n          comp.CompartmentCode === null &&\r\n          (comp.AttributesforUI === null || comp.AttributesforUI === undefined)\r\n        ) {\r\n          comp.AttributesforUI = [];\r\n          attributesforNewComp.forEach((assignedAttributes) => {\r\n            assignedAttributes.compSequenceNo = comp.SequenceNo;\r\n            comp.AttributesforUI.push(assignedAttributes);\r\n          });\r\n        } else {\r\n          if (\r\n            comp.AttributesforUI !== null &&\r\n            comp.AttributesforUI !== undefined\r\n          ) {\r\n            comp.AttributesforUI = comp.AttributesforUI.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n\r\n            compAttributes = compAttributes.filter(function (attTerminal) {\r\n              return !comp.AttributesforUI.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal.TerminalCode;\r\n              });\r\n            });\r\n          } else comp.AttributesforUI = [];\r\n\r\n          let tempCompAttributes = lodash.cloneDeep(compAttributes);\r\n          if (\r\n            Array.isArray(comp.Attributes) &&\r\n            comp.Attributes !== null &&\r\n            comp.Attributes !== undefined &&\r\n            comp.Attributes.length > 0\r\n          ) {\r\n            let selectedTerminalAttributes = comp.Attributes.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return selectedTerminals.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal;\r\n              });\r\n            });\r\n            selectedTerminalAttributes.forEach((att) => {\r\n              att.ListOfAttributeData.forEach((attData) => {\r\n                let tempAttIndex = tempCompAttributes.findIndex(\r\n                  (item) =>\r\n                    item.TerminalCode === att.TerminalCode &&\r\n                    item.AttributeCode === attData.AttributeCode\r\n                );\r\n                if (tempAttIndex >= 0)\r\n                  tempCompAttributes[tempAttIndex].AttributeValue =\r\n                    attData.AttributeValue;\r\n              });\r\n            });\r\n            tempCompAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo =\r\n                comp.CompartmentSeqNoInVehicle;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          } else {\r\n            let temp = lodash.cloneDeep(compAttributes);\r\n            temp.forEach((assignedAttributes) => {\r\n              assignedAttributes.compSequenceNo =\r\n                comp.CompartmentSeqNoInVehicle;\r\n              comp.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          }\r\n        }\r\n        this.toggleExpand(comp, true, true);\r\n        comp.AttributesforUI = Utilities.addSeqNumberToListObject(\r\n          comp.AttributesforUI\r\n        );\r\n      });\r\n      this.setState({ modAssociations });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error in forming Compartment Attributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAssociationsFromReceipt(receipt) {\r\n    try {\r\n      let associations = [];\r\n      if (Array.isArray(receipt.RailMarineReceiptCompartmentDetailPlanList)) {\r\n        receipt.RailMarineReceiptCompartmentDetailPlanList.forEach(\r\n          (receiptCompartment) =>\r\n            associations.push({\r\n              AssociatedContractItems:\r\n                receiptCompartment.AssociatedContractItems,\r\n              AssociatedOrderItems: receiptCompartment.AssociatedOrderItems,\r\n              Attributes: receiptCompartment.Attributes,\r\n              CarrierCompanyCode: receiptCompartment.CarrierCompanyCode,\r\n              CompartmentCode: receiptCompartment.CompartmentCode,\r\n              CompartmentSeqNoInVehicle:\r\n                receiptCompartment.CompartmentSeqNoInVehicle,\r\n              FinishedProductCode: receiptCompartment.FinishedProductCode,\r\n              OriginTerminalCode: receiptCompartment.OriginTerminalCode,\r\n              Quantity:\r\n                receiptCompartment.Quantity !== null &&\r\n                  receiptCompartment.Quantity !== \"\"\r\n                  ? receiptCompartment.Quantity.toLocaleString()\r\n                  : null,\r\n              QuantityUOM: receiptCompartment.QuantityUOM,\r\n              ReceiptCode: receiptCompartment.ReceiptCode,\r\n              SequenceNo: receiptCompartment.CompartmentSeqNoInVehicle,\r\n              ShareholderCode: receiptCompartment.ShareholderCode,\r\n              SupplierCode: receiptCompartment.SupplierCode,\r\n              TrailerCode: receiptCompartment.TrailerCode,\r\n              IsTransloading: receiptCompartment.IsTransloading,\r\n            })\r\n        );\r\n      }\r\n      return associations;\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  getCompartmentFromAssociations(modAssociations) {\r\n    let compartment = [];\r\n    if (Array.isArray(modAssociations)) {\r\n      modAssociations.forEach((modAssociation) => {\r\n        if (\r\n          !(\r\n            modAssociation.FinishedProductCode === null ||\r\n            modAssociation.FinishedProductCode === \"\"\r\n          ) ||\r\n          !(\r\n            modAssociation.SupplierCode === null ||\r\n            modAssociation.SupplierCode === \"\"\r\n          ) ||\r\n          !(\r\n            modAssociation.OriginTerminalCode === null ||\r\n            modAssociation.OriginTerminalCode === \"\"\r\n          )\r\n        ) {\r\n          compartment.push({\r\n            AssociatedContractItems: modAssociation.AssociatedContractItems,\r\n            AssociatedOrderItems: modAssociation.AssociatedOrderItems,\r\n            Attributes: modAssociation.Attributes,\r\n            AttributesforUI: modAssociation.AttributesforUI,\r\n            CarrierCompanyCode: modAssociation.CarrierCompanyCode,\r\n            CompartmentCode: modAssociation.CompartmentCode,\r\n            CompartmentSeqNoInVehicle: modAssociation.CompartmentSeqNoInVehicle,\r\n            CustomerCode: modAssociation.CustomerCode,\r\n            FinishedProductCode: modAssociation.FinishedProductCode,\r\n            OriginTerminalCode: modAssociation.OriginTerminalCode,\r\n            Quantity: modAssociation.Quantity,\r\n            QuantityUOM: modAssociation.QuantityUOM,\r\n            ReceiptCode: this.state.modMarineReceipt.ReceiptCode,\r\n            SequenceNo: modAssociation.SequenceNo,\r\n            ShareholderCode: modAssociation.ShareholderCode,\r\n            SupplierCode: modAssociation.SupplierCode,\r\n            TrailerCode: modAssociation.TrailerCode,\r\n            IsTransloading: modAssociation.IsTransloading,\r\n          });\r\n        }\r\n      });\r\n    }\r\n    return compartment;\r\n  }\r\n\r\n  getTankPlanFromTankAssociations(modTankAssociations) {\r\n    if (Array.isArray(modTankAssociations)) {\r\n      modTankAssociations.forEach((modTankAssociation) => {\r\n        if (modTankAssociation.PlannedQuantity !== null) {\r\n          modTankAssociation.PlannedQuantity = Utilities.convertStringtoDecimal(\r\n            modTankAssociation.PlannedQuantity\r\n          );\r\n        }\r\n        if (\r\n          modTankAssociation.ReceiptCompartmentTanks !== null &&\r\n          modTankAssociation.ReceiptCompartmentTanks !== \"\" &&\r\n          modTankAssociation.ReceiptCompartmentTanks.length !== 0\r\n        ) {\r\n          modTankAssociation.ReceiptCompartmentTanks[0].PlannedQuantity =\r\n            Utilities.convertStringtoDecimal(\r\n              modTankAssociation.ReceiptCompartmentTanks[0].PlannedQuantity\r\n            );\r\n        }\r\n      });\r\n    }\r\n    return modTankAssociations;\r\n  }\r\n\r\n  handleVesselSearchChange = (vesselCode) => {\r\n    try {\r\n      let vesselSearchOptions = this.state.vessels.filter((item) =>\r\n        item.value.toLowerCase().includes(vesselCode.toLowerCase())\r\n      );\r\n\r\n      if (vesselSearchOptions.length > Constants.filteredOptionsCount) {\r\n        vesselSearchOptions = vesselSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n      this.setState({\r\n        vesselSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarinReceiptDetailsComposite:Error occured on handleVesselSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getVesselSearchOptions() {\r\n    let vesselSearchOptions = lodash.cloneDeep(this.state.vesselSearchOptions);\r\n    let modVesselCode = this.state.modMarineReceipt.VesselCode;\r\n    if (\r\n      modVesselCode !== null &&\r\n      modVesselCode !== \"\" &&\r\n      modVesselCode !== undefined\r\n    ) {\r\n      let selectedVesselCode = vesselSearchOptions.find(\r\n        (element) => element.value.toLowerCase() === modVesselCode.toLowerCase()\r\n      );\r\n      if (selectedVesselCode === undefined) {\r\n        vesselSearchOptions.push({\r\n          text: modVesselCode,\r\n          value: modVesselCode,\r\n        });\r\n      }\r\n    }\r\n    return vesselSearchOptions;\r\n  }\r\n\r\n  getCarrierList() {\r\n    axios(\r\n      RestApis.GetCarrierCodes +\r\n      \"?ShareholderCode=\" +\r\n      \"&Transportationtype=\" +\r\n      Constants.TransportationType.MARINE,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let carrierOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            let carrierSearchOptions = lodash.cloneDeep(carrierOptions);\r\n            if (carrierSearchOptions.length > Constants.filteredOptionsCount) {\r\n              carrierSearchOptions = carrierSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({ carrierOptions, carrierSearchOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetCarrierListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Carrier List:\", error);\r\n      });\r\n  }\r\n  getCarrierShareholder() {\r\n    axios(\r\n      RestApis.GetCarrierListForRole +\r\n      \"?ShareholderCode=&Transportationtype=\" +\r\n      Constants.TransportationType.MARINE,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let carrierShareholderMap = new Map();\r\n          let carriers = result.EntityResult.Table;\r\n          carriers.forEach((carrier) => {\r\n            carrierShareholderMap.set(\r\n              carrier.Common_Code,\r\n              carrier.Common_Shareholder\r\n            );\r\n          });\r\n          this.setState({ carrierShareholderMap });\r\n        } else {\r\n          console.log(\"Error in getCarrierShareholder:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting CarrierShareholder:\", error);\r\n      });\r\n  }\r\n\r\n  getCarrierSearchOptions() {\r\n    let carrierSearchOptions = lodash.cloneDeep(\r\n      this.state.carrierSearchOptions\r\n    );\r\n    let modCarrierCode = this.state.modMarineReceipt.CarrierCode;\r\n    if (\r\n      modCarrierCode !== null &&\r\n      modCarrierCode !== \"\" &&\r\n      modCarrierCode !== undefined\r\n    ) {\r\n      let selectedCarrierCode = carrierSearchOptions.find(\r\n        (element) =>\r\n          element.value.toLowerCase() === modCarrierCode.toLowerCase()\r\n      );\r\n      if (selectedCarrierCode === undefined) {\r\n        carrierSearchOptions.push({\r\n          text: modCarrierCode,\r\n          value: modCarrierCode,\r\n        });\r\n      }\r\n    }\r\n    return carrierSearchOptions;\r\n  }\r\n\r\n  onCarrierCompanyChange = (data) => {\r\n    try {\r\n      const modMarineReceipt = lodash.cloneDeep(this.state.modMarineReceipt);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modMarineReceipt.CarrierCode = data;\r\n      modMarineReceipt.VesselCode = \"\";\r\n      this.setState(\r\n        {\r\n          modMarineReceipt,\r\n          modAssociations: [],\r\n          modTankAssociations: [],\r\n          modTankPlanAssociations: [],\r\n        },\r\n        () => this.getVesselCodeByCarrier(this.props.selectedShareholder)\r\n      );\r\n      if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n        this.getTerminalsForCarrier(data);\r\n        // this.terminalSelectionChange([\r\n        //   this.state.modMarineReceipt.TerminalCodes[0],\r\n        // ]);\r\n      }\r\n      validationErrors.CarrierCode = \"\";\r\n      this.setState({ validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ViewMarineReceiptDetailsComposite:Error occured on onCarrierCompanyChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCarrierSearchChange = (carrierCode) => {\r\n    try {\r\n      let carrierSearchOptions = this.state.carrierOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(carrierCode.toLowerCase())\r\n      );\r\n      if (carrierSearchOptions.length > Constants.filteredOptionsCount) {\r\n        carrierSearchOptions = carrierSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        carrierSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ViewMarineReceiptDetailsComposite:Error occured on handleCarrierSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getReceiptCompartmentDetails(selectedRow) {\r\n    try {\r\n      if (selectedRow.Common_Code === undefined) {\r\n        this.setState({\r\n          receiptCompartmentDetails: [],\r\n        });\r\n        return;\r\n      }\r\n      axios(\r\n        RestApis.GetMarineReceiptCompartmentDetails +\r\n        \"?ShareholderCode=\" +\r\n        this.props.selectedShareholder +\r\n        \"&MarineReceiptCode=\" +\r\n        selectedRow.Common_Code,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            for (var i = 0; i < result.EntityResult.length; i++) {\r\n              result.EntityResult[i] = {\r\n                ...result.EntityResult[i],\r\n                ForceComplete: false,\r\n                AdjustPlan: null,\r\n              };\r\n              result.EntityResult[i].AdjustedPlanQuantity =\r\n                result.EntityResult[i].AdjustedPlanQuantity !== \"\" &&\r\n                  result.EntityResult[i].AdjustedPlanQuantity !== null\r\n                  ? result.EntityResult[i].AdjustedPlanQuantity.toLocaleString()\r\n                  : \"\";\r\n              result.EntityResult[i].PlannedQuantity =\r\n                result.EntityResult[i].PlannedQuantity !== \"\" &&\r\n                  result.EntityResult[i].PlannedQuantity !== null\r\n                  ? result.EntityResult[i].PlannedQuantity.toLocaleString()\r\n                  : \"\";\r\n              result.EntityResult[i].UnloadedQuantity =\r\n                result.EntityResult[i].UnloadedQuantity !== \"\" &&\r\n                  result.EntityResult[i].UnloadedQuantity !== null\r\n                  ? result.EntityResult[i].UnloadedQuantity.toLocaleString()\r\n                  : \"\";\r\n            }\r\n            let modReceiptCompartment = lodash.cloneDeep(result.EntityResult);\r\n            this.setState({\r\n              modReceiptCompartment,\r\n              receiptCompartmentDetails: result.EntityResult,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              modReceiptCompartment: [],\r\n              receiptCompartmentDetails: [],\r\n            });\r\n            console.log(\r\n              \"Error in getReceiptCompartmentDetails:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Error while getting receipt compartment details:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  handleBack = () => {\r\n    try {\r\n      this.setState({\r\n        isReadyToRender: true,\r\n        viewAuditTrail: false,\r\n        isViewUnloading: false,\r\n        isManualEntry: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ViewMarineReceiptDetailsComposite:Error occured on handleBack\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getAdjustPlanPermission(selectedRow) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineReceiptCode,\r\n        value: selectedRow.Common_Code,\r\n      },\r\n      {\r\n        key: \"OperationName\",\r\n        value: \"ADJUST_PLAN\",\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetMarineReceiptCompartmentDetailsOperations,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        var { operationsVisibilty } = { ...this.state };\r\n        if (result.IsSuccess === true) {\r\n          operationsVisibilty.adjustPlan =\r\n            response.data.IsSuccess &&\r\n            Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnMarineReceipt\r\n            );\r\n          this.setState({\r\n            operationsVisibilty,\r\n          });\r\n        } else {\r\n          operationsVisibilty.adjustPlan = false;\r\n          this.setState({\r\n            operationsVisibilty,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting operation permission:\", error);\r\n      });\r\n  }\r\n\r\n  getForceCompletenPermission(selectedRow) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineReceiptCode,\r\n        value: selectedRow.Common_Code,\r\n      },\r\n      {\r\n        key: \"OperationName\",\r\n        value: \"FORCE_COMPLETE\",\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetMarineReceiptCompartmentDetailsOperations,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        var { operationsVisibilty } = { ...this.state };\r\n        if (result.IsSuccess === true) {\r\n          operationsVisibilty.forceComplete =\r\n            response.data.IsSuccess &&\r\n            Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnMarineReceipt\r\n            );\r\n          this.setState({\r\n            operationsVisibilty,\r\n          });\r\n        } else {\r\n          operationsVisibilty.forceComplete = false;\r\n          this.setState({\r\n            operationsVisibilty,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting operation permission:\", error);\r\n      });\r\n  }\r\n\r\n  operationPermissionControl = (receiptOperations) => {\r\n    var { operationsVisibilty } = { ...this.state };\r\n    if (\r\n      receiptOperations.indexOf(\r\n        Constants.ViewAllReceiptOperations.ViewReceipt_AuthorizeToUnload\r\n      ) > -1\r\n    ) {\r\n      operationsVisibilty.authorizeToLoad = true;\r\n    }\r\n    if (\r\n      receiptOperations.indexOf(\r\n        Constants.ViewAllReceiptOperations.ViewReceipt_CloseReceipt\r\n      ) > -1\r\n    ) {\r\n      operationsVisibilty.closeReceipt = true;\r\n    }\r\n    if (\r\n      receiptOperations.indexOf(\r\n        Constants.ViewAllReceiptOperations.ViewReceipt_ManualEntry\r\n      ) > -1\r\n    ) {\r\n      operationsVisibilty.manualEntry = true;\r\n    }\r\n    if (\r\n      receiptOperations.indexOf(\r\n        Constants.ViewAllReceiptOperations.ViewReceipt_ViewAuditTrail\r\n      ) > -1\r\n    ) {\r\n      operationsVisibilty.viewAuditTrail = true;\r\n    }\r\n    if (\r\n      receiptOperations.indexOf(\r\n        Constants.ViewAllReceiptOperations.ViewReceipt_ViewTransactions\r\n      ) > -1\r\n    ) {\r\n      operationsVisibilty.viewUnloadingDetails = true;\r\n    }\r\n    if (\r\n      receiptOperations.indexOf(\r\n        Constants.ViewAllReceiptOperations.ViewReceipt_PrintRAN\r\n      ) > -1\r\n    ) {\r\n      operationsVisibilty.printRAN = true;\r\n    }\r\n    if (\r\n      receiptOperations.indexOf(\r\n        Constants.ViewAllReceiptOperations.ViewReceipt_ViewBOD\r\n      ) > -1\r\n    ) {\r\n      operationsVisibilty.viewBOD = true;\r\n    }\r\n    if (\r\n      receiptOperations.indexOf(\r\n        Constants.ViewAllReceiptOperations.ViewReceipt_PrintBOD\r\n      ) > -1\r\n    ) {\r\n      operationsVisibilty.printBOD = true;\r\n    }\r\n    if (\r\n      receiptOperations.indexOf(\r\n        Constants.ViewAllReceiptOperations.ViewReceipt_BISOutbound\r\n      ) > -1\r\n    ) {\r\n      operationsVisibilty.bSIOutbound = true;\r\n    }\r\n    this.setState({ operationsVisibilty });\r\n  };\r\n\r\n  handleCompartmentDetailsSave = () => {\r\n    try {\r\n      let modReceiptCompartment = lodash.cloneDeep(\r\n        this.state.modReceiptCompartment\r\n      );\r\n      var saveMarineReceiptKeys = [];\r\n      for (var i = 0; i < modReceiptCompartment.length; i++) {\r\n        var MarineReceiptCode = modReceiptCompartment[i][\"ReceiptCode\"];\r\n        var CompartmentSeqNoInVehicle =\r\n          modReceiptCompartment[i][\"CompartmentSeqNoInVehicle\"];\r\n        var adjustPlan = modReceiptCompartment[i][\"AdjustPlan\"];\r\n        if (adjustPlan !== null) {\r\n          adjustPlan = Utilities.convertStringtoDecimal(adjustPlan);\r\n        }\r\n        // var adjustPlan = parseFloat(modReceiptCompartment[i][\"AdjustPlan\"]);\r\n        var ForceComplete = modReceiptCompartment[i][\"ForceComplete\"];\r\n        var shCode = this.props.selectedShareholder;\r\n        var KeyData = {\r\n          ShareHolderCode: shCode,\r\n          keyDataCode: CompartmentSeqNoInVehicle,\r\n          KeyCodes: [\r\n            { Key: KeyCodes.marineReceiptCode, Value: MarineReceiptCode },\r\n            {\r\n              Key: \"CompartmentSeqNoInVehicle\",\r\n              Value: CompartmentSeqNoInVehicle,\r\n            },\r\n            { Key: \"AdjustedPlanQuantity\", Value: adjustPlan },\r\n            { Key: \"ForceComplete\", Value: ForceComplete },\r\n          ],\r\n        };\r\n        saveMarineReceiptKeys.push(KeyData);\r\n      }\r\n      var notification = {\r\n        messageType: \"critical\",\r\n        message: \"Receipt_SavedStatus\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"Marine_ReceiptCompDetail_ShipmentNumber\"],\r\n            keyValues: [this.props.selectedRow.Common_Code],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestApis.MarineReceiptCompartmentDetailsSave,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          saveMarineReceiptKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          if (result.IsSuccess === true) {\r\n            this.getReceiptCompartmentDetails(this.props.selectedRow);\r\n            // operationsVisibilty.save = true;\r\n            for (var i = 0; i < modReceiptCompartment.length; i++) {\r\n              if (modReceiptCompartment[i][\"AdjustPlan\"] !== null) {\r\n                modReceiptCompartment[i][\"AdjustPlan\"] = null;\r\n              }\r\n            }\r\n            this.setState({\r\n              // operationsVisibilty,\r\n              modReceiptCompartment,\r\n            });\r\n            this.props.handlePageAdd(this.state.marineReceipt);\r\n          } else {\r\n            if (result.ErrorList !== null && result.ErrorList !== undefined) {\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n            }\r\n            // operationsVisibilty.save = false;\r\n            // this.setState({\r\n            //   operationsVisibilty,\r\n            // });\r\n            console.log(\"Error in Save Compartment Details:\", result.ErrorList);\r\n          }\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ViewMarineReceiptDetailsComposite:Error occured on handleSave\"\r\n      );\r\n    }\r\n  };\r\n\r\n  handleSaveCompartmentDetailsEnabled = () => {\r\n    const { modMarineReceipt } = this.state;\r\n    const { operationsVisibilty } = this.state;\r\n    let abledRow = this.state.modReceiptCompartment.findIndex(\r\n      (item) =>\r\n        item.ReceiptCompartmentStatus !== 0 &&\r\n        item.ReceiptCompartmentStatus !== 2 &&\r\n        item.ReceiptCompartmentStatus !== 4 &&\r\n        item.ReceiptCompartmentStatus !== 7\r\n    );\r\n\r\n    const saveCompartmentDetailsEnabled =\r\n      (modMarineReceipt.ReceiptStatus ===\r\n        Constants.Receipt_Status.PARTIALLY_UNLOADED ||\r\n        modMarineReceipt.ReceiptStatus ===\r\n        Constants.Receipt_Status.INTERRUPTED ||\r\n        modMarineReceipt.ReceiptStatus ===\r\n        Constants.Receipt_Status.MANUALLY_UNLOADED ||\r\n        modMarineReceipt.ReceiptStatus ===\r\n        Constants.Receipt_Status.AUTO_UNLOADED ||\r\n        modMarineReceipt.ReceiptStatus === Constants.Receipt_Status.QUEUED) &&\r\n      abledRow !== -1 &&\r\n      operationsVisibilty.forceComplete &&\r\n      operationsVisibilty.adjustPlan &&\r\n      !this.props.userDetails.EntityResult.IsEnterpriseNode;\r\n    return saveCompartmentDetailsEnabled;\r\n  };\r\n\r\n  handleViewAuditTrail = () => {\r\n    try {\r\n      this.setState({\r\n        viewAuditTrail: true,\r\n        isReadyToRender: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ViewMarineReceiptDetailsComposite:Error occured on handleViewAuditTrail\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleViewUnloading = () => {\r\n    try {\r\n      this.getMarineUnLoadingDetails(this.props.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"ViewMarineReceiptDetailsComposite:Error occured on handleViewUnloading\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getMarineUnLoadingDetails(item) {\r\n    try {\r\n      axios(\r\n        RestApis.GetMarineReceiptUnLoadingDetails +\r\n        \"?ShareholderCode=\" +\r\n        this.props.selectedShareholder +\r\n        \"&MarineReceiptCode=\" +\r\n        item[\"Common_Code\"],\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ ViewUnloadingData: result.EntityResult });\r\n            var { operationsVisibilty } = { ...this.state };\r\n            operationsVisibilty.add = Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnMarineReceipt\r\n            );\r\n            operationsVisibilty.delete = Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.remove,\r\n              fnMarineReceipt\r\n            );\r\n            operationsVisibilty.delete = false;\r\n            operationsVisibilty.add = false;\r\n            operationsVisibilty.shareholder = false;\r\n            this.setState({\r\n              isViewUnloading: true,\r\n              isReadyToRender: false,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n\r\n      axios(\r\n        RestApis.GetMarineUnLoadingDetailConfigFields +\r\n        \"?MarineReceiptCode=\" +\r\n        item[\"Common_Code\"],\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ ViewUnloadingHideFields: result.EntityResult });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  getBaseProductList() {\r\n    axios(\r\n      RestApis.GetBaseProducts,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult !== undefined\r\n          ) {\r\n            let baseProductDetails = result.EntityResult;\r\n            this.setState({ baseProductDetails });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getBaseProductList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Base Product List:\", error);\r\n      });\r\n  }\r\n\r\n  getTankCode() {\r\n    var Shareholder = this.props.userDetails.EntityResult.PrimaryShareholder;\r\n    axios(\r\n      RestApis.GetTanks + \"?ShareholderCode=\" + Shareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            const tankCodeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({\r\n              tankCodeOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getTankCode:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getTankCode:\", error);\r\n      });\r\n  }\r\n\r\n  toggleExpand = (data, open, isTerminalAdded = false) => {\r\n    let expandedRows = this.state.expandedRows;\r\n    let expandedRowIndex = expandedRows.findIndex(\r\n      (item) =>\r\n        item.CompartmentSeqNoInVehicle === data.CompartmentSeqNoInVehicle\r\n    );\r\n    if (open) {\r\n      if (isTerminalAdded && expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n        expandedRows.push(data);\r\n      } else if (expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n      }\r\n    } else {\r\n      if (expandedRowIndex >= 0) {\r\n        expandedRows = expandedRows.filter(\r\n          (x) =>\r\n            x.Code !== data.Code &&\r\n            x.CompartmentSeqNoInVehicle !== data.CompartmentSeqNoInVehicle\r\n        );\r\n      } else expandedRows.push(data);\r\n    }\r\n    this.setState({ expandedRows });\r\n  };\r\n\r\n  getTankListForRole(code) {\r\n    var Shareholder = this.props.userDetails.EntityResult.PrimaryShareholder;\r\n    axios(\r\n      RestApis.GetTankListForRole + \"?ShareholderCode=\" + Shareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var tankCodeOptions = [];\r\n          var tanks = result.EntityResult.Table;\r\n          // if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n          //   for (let i = 0; i < tanks.length; i++) {\r\n          //     if (\r\n          //       tanks[i].TerminalCode ===\r\n          //       this.state.modMarineReceipt.TerminalCodes[0]\r\n          //     ) {\r\n          //       if (\r\n          //         tankCodeOptions.hasOwnProperty(tanks[i].TankList_BaseProduct)\r\n          //       ) {\r\n          //         tankCodeOptions[tanks[i].TankList_BaseProduct].push(\r\n          //           tanks[i].Common_Code\r\n          //         );\r\n          //       } else {\r\n          //         var tankCodeOption = [];\r\n          //         tankCodeOption.push(tanks[i].Common_Code);\r\n          //         tankCodeOptions[\r\n          //           tanks[i].TankList_BaseProduct\r\n          //         ] = tankCodeOption;\r\n          //       }\r\n          //     }\r\n          //   }\r\n          // } else {\r\n          //   for (let i = 0; i < tanks.length; i++) {\r\n          //     if (\r\n          //       tankCodeOptions.hasOwnProperty(tanks[i].TankList_BaseProduct)\r\n          //     ) {\r\n          //       tankCodeOptions[tanks[i].TankList_BaseProduct].push(\r\n          //         tanks[i].Common_Code\r\n          //       );\r\n          //     } else {\r\n          //       var tankCodeOption1 = [];\r\n          //       tankCodeOption1.push(tanks[i].Common_Code);\r\n          //       tankCodeOptions[\r\n          //         tanks[i].TankList_BaseProduct\r\n          //       ] = tankCodeOption1;\r\n          //     }\r\n          //   }\r\n          // }\r\n          // this.setState({ tankCodeOptions });\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            if (code === \"\") {\r\n              for (let i = 0; i < tanks.length; i++) {\r\n                tankCodeOptions.push(tanks[i].Common_Code);\r\n              }\r\n            } else {\r\n              tanks = tanks.filter((tank) => {\r\n                return tank.TerminalCode === code;\r\n              });\r\n              for (let i = 0; i < tanks.length; i++) {\r\n                tankCodeOptions.push(tanks[i].Common_Code);\r\n              }\r\n            }\r\n          } else {\r\n            for (let i = 0; i < tanks.length; i++) {\r\n              tankCodeOptions.push(tanks[i].Common_Code);\r\n            }\r\n          }\r\n          tankCodeOptions = Utilities.transferListtoOptions(tankCodeOptions);\r\n          this.setState({ tankCodeOptions });\r\n        } else {\r\n          this.setState({ tankCodeOptions: [] });\r\n          console.log(\"Error in getTankListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ tankCodeOptions: [] });\r\n        console.log(\"Error while getting TankListForRole:\", error);\r\n      });\r\n  }\r\n\r\n  getAdditivesList() {\r\n    axios(\r\n      RestApis.GetAdditives,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult !== undefined\r\n          ) {\r\n            let additiveDetails = result.EntityResult;\r\n            this.setState({ additiveDetails });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getAdditivesList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Additives List:\", error);\r\n      });\r\n  }\r\n\r\n  getSaveEnabled() {\r\n    var saveCompartmentDetailsEnabled =\r\n      this.handleSaveCompartmentDetailsEnabled();\r\n    var saveAbled = lodash.cloneDeep(this.state.saveEnabled);\r\n    var viewTab = lodash.cloneDeep(this.props.viewTab);\r\n    if (viewTab === 2) {\r\n      return saveCompartmentDetailsEnabled;\r\n    } else {\r\n      return saveAbled;\r\n    }\r\n  }\r\n  getKPIList(marineReceiptCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    )\r\n    if (KPIView === true) {\r\n\r\n      let objKPIRequestData = {\r\n        PageName: kpiMarineReceiptDetails,\r\n        TransportationType: Constants.TransportationType.MARINE,\r\n        InputParameters: [{ key: \"ReceiptCode\", value: marineReceiptCode }],\r\n      };\r\n      axios(\r\n        RestApis.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ marineReceiptKPIList: result.EntityResult.ListKPIDetails });\r\n          } else {\r\n            this.setState({ marineReceiptKPIList: [] });\r\n            console.log(\"Error in pipeline KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting PipelineDispatch KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    var modMarineReceipt = lodash.cloneDeep(this.state.modMarineReceipt);\r\n    const saveEnabled =\r\n      this.getSaveEnabled();\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"Marine_ReceiptCompDetail_LastUpdated\",\r\n        fieldValue:\r\n          new Date(modMarineReceipt.LastUpdatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(modMarineReceipt.LastUpdatedTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"Marine_ReceiptCompDetail_CreatedTime\",\r\n        fieldValue:\r\n          new Date(modMarineReceipt.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(modMarineReceipt.CreatedTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"Terminal_ActiveTime\",\r\n        fieldValue:\r\n          modMarineReceipt.LastActiveTime !== undefined &&\r\n            modMarineReceipt.LastActiveTime !== null\r\n            ? new Date(modMarineReceipt.LastActiveTime).toLocaleDateString() +\r\n            \" \" +\r\n            new Date(modMarineReceipt.LastActiveTime).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.marineReceipt.ReceiptCode}\r\n            newEntityName=\"Marine_ReceiptCompDetail_NewShipmentByCompartment\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <TMDetailsKPILayout KPIList={this.state.marineReceiptKPIList}> </TMDetailsKPILayout>\r\n\r\n        <ErrorBoundary>\r\n          <MarineReceiptDetails\r\n            marineReceipt={this.state.marineReceipt}\r\n            modMarineReceipt={this.state.modMarineReceipt}\r\n            modAssociations={this.state.modAssociations}\r\n            modTankAssociations={this.state.modTankAssociations}\r\n            validationErrors={this.state.validationErrors}\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            selectedAssociations={this.state.selectedAssociations}\r\n            listOptions={{\r\n              shareholders: this.state.shareholders,\r\n              terminalCodes: this.state.terminalCodes,\r\n              shipmentUOM: this.state.shipmentUOM,\r\n              compSeqOptions: this.state.compSeqOptions,\r\n              vessels: this.getVesselSearchOptions(),\r\n              FinishedProducts: this.state.FinishedProducts,\r\n              supplierDestinationOptions: this.state.supplierDestinationOptions,\r\n              shareholderSuppliers: this.state.shareholderSuppliers,\r\n              baseProductDetails: this.state.baseProductDetails,\r\n              tankCodeOptions: this.state.tankCodeOptions,\r\n              additiveDetails: this.state.additiveDetails,\r\n              carriers: this.getCarrierSearchOptions(),\r\n            }}\r\n            onCarrierCompanyChange={this.onCarrierCompanyChange}\r\n            onFieldChange={this.handleChange}\r\n            onDateTextChange={this.handleDateTextChange}\r\n            handleRowSelectionChange={this.handleAssociationSelectionChange}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            handleAttributeCellDataEdit={this.handleAttributeCellDataEdit}\r\n            handleAddAssociation={this.handleAddAssociation}\r\n            handleAddTankAssociation={this.handleAddTankAssociation}\r\n            handleDeleteAssociation={this.handleDeleteAssociation}\r\n            handleDeleteTankAssociation={this.handleDeleteTankAssociation}\r\n            onVesselSearchChange={this.handleVesselSearchChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            isSlotbookinginUI={\r\n              this.props.userDetails.EntityResult.ShowSlotBookedInUI\r\n            }\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            modReceiptCompartment={this.state.modReceiptCompartment}\r\n            receiptCompartmentDetails={this.state.receiptCompartmentDetails}\r\n            handleOperationButtonClick={this.props.handleOperationClick}\r\n            viewTab={this.props.viewTab}\r\n            onViewAuditTrailClick={this.handleViewAuditTrail}\r\n            onViewUnloading={this.handleViewUnloading}\r\n            onManualEntry={this.handleManualEntry}\r\n            onTabChange={this.onTabChange}\r\n            handleTankAssociationSelectionChange={\r\n              this.handleTankAssociationSelectionChange\r\n            }\r\n            selectedTankAssociations={this.state.selectedTankAssociations}\r\n            handleTankCellDataEdit={this.handleTankCellDataEdit}\r\n            selectedAttributeList={this.state.selectedAttributeList}\r\n            toggleExpand={this.toggleExpand}\r\n            expandedRows={this.state.expandedRows}\r\n            expandedCompDetailRows={this.state.expandedCompDetailRows}\r\n            handleCompAttributeCellDataEdit={\r\n              this.handleCompAttributeCellDataEdit\r\n            }\r\n            compartmentDetailsPageSize={\r\n              this.props.userDetails.EntityResult.PageAttibutes\r\n                .WebPortalListPageSize\r\n            }\r\n            isHSEInspectionEnable={this.state.isHSEInspectionEnable}\r\n            isBondShow={this.state.isBondShow}\r\n            onCarrierSearchChange={this.handleCarrierSearchChange}\r\n            isTransloading={this.state.isTransloading}\r\n            compDetailsTab={this.state.isNewReceipt ? [] : [\"\"]}\r\n            updateEnableForConfigure={this.props.updateEnableForConfigure}\r\n          ></MarineReceiptDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.marineReceipt.ReceiptCode === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnMarineReceiptByCompartment}\r\n            handleOperation={this.addUpdateMarineDispatch}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : this.state.isManualEntry === true ? (\r\n      <ErrorBoundary>\r\n        <MarineReceiptManualEntryDetailsComposite\r\n          handleBack={this.handleBack}\r\n          ReceiptCode={this.state.modMarineReceipt.ReceiptCode}\r\n          ReceiptStatus={this.state.modMarineReceipt.ReceiptStatus}\r\n          QuantityUOM={this.state.modMarineReceipt.QuantityUOM}\r\n          ActualTerminalCode={this.state.modMarineReceipt.ActualTerminalCode}\r\n        ></MarineReceiptManualEntryDetailsComposite>\r\n      </ErrorBoundary>\r\n    ) : this.state.viewAuditTrail === true ? (\r\n      <ErrorBoundary>\r\n        <MarineReceiptViewAuditTrailComposite\r\n          receiptCode={this.props.selectedRow.Common_Code}\r\n          selectedShareholder={this.state.selectedShareholder}\r\n          handleBack={this.handleBack}\r\n        ></MarineReceiptViewAuditTrailComposite>\r\n      </ErrorBoundary>\r\n    ) : this.state.isViewUnloading === true ? (\r\n      <ErrorBoundary>\r\n        <MarineReceiptLoadingDetails\r\n          tableData={this.state.ViewUnloadingData.Table}\r\n          loadingDetailsHideFields={this.state.ViewUnloadingHideFields}\r\n          setValid={this.props.setValid}\r\n          handleBack={this.handleBack}\r\n          isWebPortalUser={this.props.userDetails.EntityResult.IsWebPortalUser}\r\n        ></MarineReceiptLoadingDetails>\r\n      </ErrorBoundary>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nconst mapReceiptToProps = (receipt) => {\r\n  return {\r\n    userActions: bindActionCreators(getUserDetails, receipt),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapReceiptToProps\r\n)(MarineReceiptDetailsComposite);\r\n\r\nMarineReceiptDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  handleOperationClick: PropTypes.func.isRequired,\r\n  viewTab: PropTypes.number.isRequired,\r\n  handlePageAdd: PropTypes.func.isRequired,\r\n  onTabChange: PropTypes.func.isRequired,\r\n  updateEnableForConfigure: PropTypes.bool.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button, Modal, Checkbox } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestApis from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport { connect } from \"react-redux\";\r\nimport lodash from \"lodash\";\r\nimport { emptyMarineReceipt } from \"../../../JS/DefaultEntities\";\r\nimport * as wjChart from \"@grapecity/wijmo.react.chart\";\r\nimport * as wjcCore from \"@grapecity/wijmo\";\r\nimport { MARINERECEIPTSTATUSTIME } from \"../../../JS/AttributeEntity\";\r\n\r\nwjcCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nclass MarineReceiptViewAuditTrailDetailsComposite extends Component {\r\n  state = {\r\n    receiptViewAuditTrailData: [],\r\n    modReceiptViewAuditTrailData: [],\r\n    openPrint: false,\r\n    auditTrailAttributeMetaDataList: [],\r\n    compartmentDetailsPageSize:\r\n      this.props.userDetails.EntityResult.PageAttibutes.WebPortalListPageSize,\r\n    ViewAuditTrailList: [],\r\n  };\r\n\r\n  getReceiptViewAuditTrail(receiptCode) {\r\n    if (receiptCode === undefined) {\r\n      this.setState({\r\n        receiptViewAuditTrailData: [],\r\n        modReceiptViewAuditTrailData: [],\r\n      });\r\n      return;\r\n    }\r\n    axios(\r\n      RestApis.GetReceiptAuditTrailList +\r\n        \"?ShareholderCode=\" +\r\n        this.props.userDetails.EntityResult.PrimaryShareholder +\r\n        \"&MarineReceiptCode=\" +\r\n        receiptCode,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            receiptViewAuditTrailData: lodash.cloneDeep(result.EntityResult),\r\n            modReceiptViewAuditTrailData: lodash.cloneDeep(result.EntityResult),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            receiptViewAuditTrailData: lodash.cloneDeep(emptyMarineReceipt),\r\n            modReceiptViewAuditTrailData: lodash.cloneDeep(emptyMarineReceipt),\r\n          });\r\n        }\r\n        var modReceiptViewAuditTrailData = lodash.cloneDeep(\r\n          this.state.modReceiptViewAuditTrailData\r\n        );\r\n        var receiptViewAuditTrailData = lodash.cloneDeep(\r\n          this.state.receiptViewAuditTrailData\r\n        );\r\n        for (let i = 0; i < modReceiptViewAuditTrailData.length; i++) {\r\n          let receiptStatus = modReceiptViewAuditTrailData[i].ReceiptStatus;\r\n          if (receiptStatus === Constants.ViewReceipt_Status.AUTO_UNLOADED) {\r\n            receiptStatus = Constants.ViewReceiptStatus.AUTO_UNLOADED;\r\n          } else if (receiptStatus === Constants.ViewReceipt_Status.CLOSED) {\r\n            receiptStatus = Constants.ViewReceiptStatus.CLOSED;\r\n          } else if (\r\n            receiptStatus === Constants.ViewReceipt_Status.INTERRUPTED\r\n          ) {\r\n            receiptStatus = Constants.ViewReceiptStatus.INTERRUPTED;\r\n          } else if (receiptStatus === Constants.ViewReceipt_Status.UNLOADING) {\r\n            receiptStatus = Constants.ViewReceiptStatus.UNLOADING;\r\n          } else if (\r\n            receiptStatus === Constants.ViewReceipt_Status.MANUALLY_UNLOADED\r\n          ) {\r\n            receiptStatus = Constants.ViewReceiptStatus.MANUALLY_UNLOADED;\r\n          } else if (\r\n            receiptStatus === Constants.ViewReceipt_Status.PARTIALLY_UNLOADED\r\n          ) {\r\n            receiptStatus = Constants.ViewReceiptStatus.PARTIALLY_UNLOADED;\r\n          } else if (receiptStatus === Constants.ViewReceipt_Status.QUEUED) {\r\n            receiptStatus = Constants.ViewReceiptStatus.QUEUED;\r\n          } else if (receiptStatus === Constants.ViewReceipt_Status.READY) {\r\n            receiptStatus = Constants.ViewReceiptStatus.READY;\r\n          }\r\n          modReceiptViewAuditTrailData[i].ReceiptStatus = receiptStatus;\r\n          modReceiptViewAuditTrailData[i].UpdatedTime =\r\n            new Date(\r\n              modReceiptViewAuditTrailData[i].UpdatedTime\r\n            ).toLocaleDateString() +\r\n            \" \" +\r\n            new Date(\r\n              modReceiptViewAuditTrailData[i].UpdatedTime\r\n            ).toLocaleTimeString();\r\n          this.setState({\r\n            receiptViewAuditTrailData,\r\n            modReceiptViewAuditTrailData,\r\n          });\r\n        }\r\n        var ViewAuditTrailList = lodash.cloneDeep(\r\n          this.state.receiptViewAuditTrailData\r\n        );\r\n\r\n        for (let i = 0; i < ViewAuditTrailList.length; i++) {\r\n          ViewAuditTrailList[i].AttributesforUI =\r\n            this.formReadonlyCompAttributes(\r\n              ViewAuditTrailList[i].Attributes,\r\n              this.state.auditTrailAttributeMetaDataList\r\n            );\r\n        }\r\n        this.setState({\r\n          ViewAuditTrailList: ViewAuditTrailList,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting MarineReceiptViewAuditTrail:\", error);\r\n      });\r\n  }\r\n\r\n  formReadonlyCompAttributes(attributes, ViewAuditTrailList) {\r\n    let compAttributes = [];\r\n    if (\r\n      ViewAuditTrailList !== null &&\r\n      ViewAuditTrailList !== undefined &&\r\n      ViewAuditTrailList.length > 0\r\n    ) {\r\n      ViewAuditTrailList.forEach((att) => {\r\n        att.attributeMetaDataList.forEach((attribute) => {\r\n          compAttributes.push({\r\n            AttributeCode: attribute.Code,\r\n            AttributeName: attribute.DisplayName\r\n              ? attribute.DisplayName\r\n              : attribute.Code,\r\n            AttributeValue: attribute.DefaultValue,\r\n            TerminalCode: attribute.TerminalCode,\r\n            IsMandatory: attribute.IsMandatory,\r\n            DataType: attribute.DataType,\r\n            IsReadonly: attribute.IsReadonly,\r\n            MinValue: attribute.MinValue,\r\n            MaxValue: attribute.MaxValue,\r\n            ValidationFormat: attribute.ValidationFormat,\r\n            compSequenceNo: \"\",\r\n          });\r\n        });\r\n      });\r\n    }\r\n    if (\r\n      attributes !== null &&\r\n      attributes !== undefined &&\r\n      attributes.length > 0\r\n    ) {\r\n      attributes.forEach((att) => {\r\n        compAttributes.forEach((compAtt) => {\r\n          if (compAtt.TerminalCode === att.TerminalCode) {\r\n            att.ListOfAttributeData.forEach((selAtt) => {\r\n              if (compAtt.AttributeCode === selAtt.AttributeCode)\r\n                compAtt.AttributeValue = selAtt.AttributeValue;\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n    return compAttributes;\r\n  }\r\n\r\n  handlePrint = () => {\r\n    try {\r\n      this.setState({ openPrint: true }, () => {});\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptViewAuditTrailDetailsComposite:Error occured on handlePrint\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getAttributes();\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptViewAuditTrailDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes() {\r\n    try {\r\n      axios(\r\n        RestApis.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [MARINERECEIPTSTATUSTIME],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult.MARINERECEIPTSTATUSTIME === null ||\r\n            result.EntityResult.MARINERECEIPTSTATUSTIME === undefined\r\n          ) {\r\n            result.EntityResult.MARINERECEIPTSTATUSTIME = [];\r\n          }\r\n          this.setState(\r\n            {\r\n              auditTrailAttributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.MARINERECEIPTSTATUSTIME\r\n              ),\r\n            },\r\n            () => {\r\n              this.getReceiptViewAuditTrail(this.props.receiptCode);\r\n            }\r\n          );\r\n        } else {\r\n          console.log(\"Failed to get Attributes\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Attributes:\", error);\r\n    }\r\n  }\r\n\r\n  displayTMModalforPrintConfirm() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal\r\n            onClose={() => this.setState({ openPrint: false })}\r\n            open={this.state.openPrint}\r\n            className=\"marineModalPrint\"\r\n            closeOnDimmerClick={false}\r\n          >\r\n            <Modal.Content>\r\n              <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n                <h3>\r\n                  {t(\r\n                    \"ViewMarineReceiptAuditTrail_ViewAuditTrailForMarineReceipt\"\r\n                  ) +\r\n                    \" : \" +\r\n                    this.props.receiptCode}\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-md-10 container-fluid\">\r\n                <wjChart.FlexChart\r\n                  itemsSource={this.state.modReceiptViewAuditTrailData}\r\n                  chartType=\"Line\"\r\n                  bindingX=\"UpdatedTime\"\r\n                  palette={[\"red\"]}\r\n                  style={{ width: \"100%\", height: \"450px\" }}\r\n                >\r\n                  <wjChart.FlexChartLegend position=\"Bottom\"></wjChart.FlexChartLegend>\r\n                  <wjChart.FlexChartAxis\r\n                    wjProperty=\"axisY\"\r\n                    majorUnit={1}\r\n                    max={7}\r\n                    min={0}\r\n                    itemFormatter={formatter}\r\n                    axisLine={true}\r\n                  ></wjChart.FlexChartAxis>\r\n                  <wjChart.FlexChartSeries\r\n                    binding=\"ReceiptStatus\"\r\n                    name={t(\"ReceiptStatus\")}\r\n                  ></wjChart.FlexChartSeries>\r\n                </wjChart.FlexChart>\r\n              </div>\r\n              <div className=\"col-12 detailsTable\" id=\"printTable\">\r\n                <DataTable data={this.state.ViewAuditTrailList}>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"ReceiptStatus\"\r\n                    field=\"ReceiptStatus\"\r\n                    header={t(\"ReceiptStatus\")}\r\n                    editable={false}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"UpdatedTime\"\r\n                    field=\"UpdatedTime\"\r\n                    renderer={(cellData) =>\r\n                      formatDate(cellData.rowData.UpdatedTime)\r\n                    }\r\n                    header={t(\"SAAuditTrial_UpdatedTime\")}\r\n                    editable={false}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"CompartmentSeqNoInVehicle\"\r\n                    field=\"CompartmentSeqNoInVehicle\"\r\n                    header={t(\r\n                      \"ViewMarineReceiptAuditTrail_ReceiptCompartmentSeq\"\r\n                    )}\r\n                    editable={false}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"ReceiptCompartmentStatus\"\r\n                    field=\"ReceiptCompartmentStatus\"\r\n                    renderer={(cellData) =>\r\n                      handleStatus(cellData.rowData.ReceiptCompartmentStatus)\r\n                    }\r\n                    header={t(\r\n                      \"ViewMarineReceiptAuditTrail_ReceiptCompartmentStatus\"\r\n                    )}\r\n                    editable={false}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"UserPIN\"\r\n                    field=\"UserPIN\"\r\n                    header={t(\"PIN\")}\r\n                    editable={false}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"OfficerName\"\r\n                    field=\"OfficerName\"\r\n                    header={t(\"ViewAuditTrail_OfficerName\")}\r\n                    editable={false}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  {this.state.ViewAuditTrailList !== undefined &&\r\n                  this.state.ViewAuditTrailList.length > 0\r\n                    ? this.state.ViewAuditTrailList[0].AttributesforUI.map(\r\n                        (att) => {\r\n                          return (\r\n                            <DataTable.Column\r\n                              className=\"compColHeight\"\r\n                              header={t(att.AttributeName)}\r\n                              editable={false}\r\n                              renderer={handleAttributeType}\r\n                            ></DataTable.Column>\r\n                          );\r\n                        }\r\n                      )\r\n                    : []}\r\n                </DataTable>\r\n              </div>\r\n              <Modal.Footer>\r\n                <div className=\"viewPrint\">\r\n                  <Button\r\n                    type=\"secondary\"\r\n                    size=\"small\"\r\n                    content={t(\"MarineEOD_Close\")}\r\n                    onClick={() => {\r\n                      this.setState({ openPrint: false });\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    type=\"primary\"\r\n                    size=\"small\"\r\n                    content={t(\"EOD_Print\")}\r\n                    onClick={() => {\r\n                      let el =\r\n                        window.document.getElementById(\"printTable\").innerHTML;\r\n                      const iframe = window.document.createElement(\"IFRAME\");\r\n                      let doc = null;\r\n                      window.document.body.appendChild(iframe);\r\n                      doc = iframe.contentWindow.document;\r\n                      const str1 = el.substring(0, el.indexOf(\"<table\") + 6);\r\n                      const str2 = el.substring(\r\n                        el.indexOf(\"<table\") + 6,\r\n                        el.length\r\n                      );\r\n                      const str3 =\r\n                        t(\r\n                          \"ViewMarineReceiptAuditTrail_ViewAuditTrailForMarineReceipt\"\r\n                        ) +\r\n                        \" : \" +\r\n                        this.props.receiptCode;\r\n                      el = str3 + str1 + ' border=\"1\" cellspacing=\"0\"' + str2;\r\n                      el = el.replace('<tfoot class=\"p-datatable-tfoot\">', \"\");\r\n                      el = el.replace(\r\n                        '<tr><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td></tr>',\r\n                        \"\"\r\n                      );\r\n                      doc.write(el);\r\n                      console.info(el);\r\n                      doc.close();\r\n                      iframe.contentWindow.focus();\r\n                      iframe.contentWindow.print();\r\n                      setTimeout(() => {\r\n                        document.body.removeChild(iframe);\r\n                      }, 2000);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Modal.Footer>\r\n            </Modal.Content>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <div>\r\n              <div className=\"detailsContainer\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <h3>\r\n                      {t(\r\n                        \"ViewMarineReceiptAuditTrail_ViewAuditTrailForMarineReceipt\"\r\n                      ) +\r\n                        \" : \" +\r\n                        this.props.receiptCode}\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row marginRightZero tableScroll\">\r\n                  <div className=\"col-12 container-fluid\">\r\n                    <wjChart.FlexChart\r\n                      itemsSource={this.state.modReceiptViewAuditTrailData}\r\n                      chartType=\"Line\"\r\n                      bindingX=\"UpdatedTime\"\r\n                      palette={[\"red\"]}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        minWidth: \"800px\",\r\n                        height: \"450px\",\r\n                      }}\r\n                    >\r\n                      <wjChart.FlexChartLegend position=\"Bottom\"></wjChart.FlexChartLegend>\r\n                      <wjChart.FlexChartAxis\r\n                        wjProperty=\"axisY\"\r\n                        majorUnit={1}\r\n                        max={7}\r\n                        min={0}\r\n                        itemFormatter={formatter}\r\n                        axisLine={true}\r\n                      ></wjChart.FlexChartAxis>\r\n                      <wjChart.FlexChartSeries\r\n                        binding=\"ReceiptStatus\"\r\n                        name={t(\"ReceiptStatus\")}\r\n                      ></wjChart.FlexChartSeries>\r\n                    </wjChart.FlexChart>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row marginRightZero tableScroll\">\r\n                  <div className=\"col-12 detailsTable\">\r\n                    <DataTable data={this.state.ViewAuditTrailList}>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"ReceiptStatus\"\r\n                        field=\"ReceiptStatus\"\r\n                        header={t(\"ReceiptStatus\")}\r\n                        editable={false}\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"UpdatedTime\"\r\n                        field=\"UpdatedTime\"\r\n                        renderer={(cellData) =>\r\n                          formatDate(cellData.rowData.UpdatedTime)\r\n                        }\r\n                        header={t(\"SAAuditTrial_UpdatedTime\")}\r\n                        editable={false}\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"CompartmentSeqNoInVehicle\"\r\n                        field=\"CompartmentSeqNoInVehicle\"\r\n                        header={t(\r\n                          \"ViewMarineReceiptAuditTrail_ReceiptCompartmentSeq\"\r\n                        )}\r\n                        editable={false}\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"ReceiptCompartmentStatus\"\r\n                        field=\"ReceiptCompartmentStatus\"\r\n                        renderer={(cellData) =>\r\n                          handleStatus(\r\n                            cellData.rowData.ReceiptCompartmentStatus\r\n                          )\r\n                        }\r\n                        header={t(\r\n                          \"ViewMarineReceiptAuditTrail_ReceiptCompartmentStatus\"\r\n                        )}\r\n                        editable={false}\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"UserPIN\"\r\n                        field=\"UserPIN\"\r\n                        header={t(\"PIN\")}\r\n                        editable={false}\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight colminWidth\"\r\n                        key=\"OfficerName\"\r\n                        field=\"OfficerName\"\r\n                        header={t(\"ViewAuditTrail_OfficerName\")}\r\n                        editable={false}\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n                      {this.state.ViewAuditTrailList !== undefined &&\r\n                      this.state.ViewAuditTrailList.length > 0\r\n                        ? this.state.ViewAuditTrailList[0].AttributesforUI.map(\r\n                            (att) => {\r\n                              return (\r\n                                <DataTable.Column\r\n                                  className=\"compColHeight colminWidth\"\r\n                                  header={t(att.AttributeName)}\r\n                                  editable={false}\r\n                                  renderer={handleAttributeType}\r\n                                ></DataTable.Column>\r\n                              );\r\n                            }\r\n                          )\r\n                        : []}\r\n                    </DataTable>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12 col-sm-6 col-lg-8\">\r\n                    <Button\r\n                      className=\"backButton\"\r\n                      onClick={this.props.handleBack}\r\n                      content={t(\"Back\")}\r\n                    ></Button>\r\n                  </div>\r\n                  {!this.props.userDetails.EntityResult.IsWebPortalUser ? (\r\n                    <div\r\n                      className=\"col-12 col-sm-6 col-lg-4\"\r\n                      style={{ textAlign: \"right\" }}\r\n                    >\r\n                      <Button\r\n                        className=\"printButton\"\r\n                        onClick={this.handlePrint}\r\n                        content={t(\"ViewEAAuditTrail_PrintAuditTrail\")}\r\n                      ></Button>\r\n                    </div>\r\n                  ) : (\r\n                    []\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </TranslationConsumer>\r\n        {this.displayTMModalforPrintConfirm()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst formatDate = (e) => {\r\n  try {\r\n    if (e == null || e === \"\" || e === undefined) {\r\n      return \"\";\r\n    }\r\n    return (\r\n      new Date(e).toLocaleDateString() + \" \" + new Date(e).toLocaleTimeString()\r\n    );\r\n  } catch (error) {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nconst formatter = (engine, label) => {\r\n  label.cls = null;\r\n  engine.fontSize = \"7px\";\r\n  if (label.val === Constants.ViewReceiptStatus.AUTO_UNLOADED) {\r\n    label.text = Constants.ViewReceipt_Status.AUTO_UNLOADED;\r\n  } else if (label.val === Constants.ViewReceiptStatus.CLOSED) {\r\n    label.text = Constants.ViewReceipt_Status.CLOSED;\r\n  } else if (label.val === Constants.ViewReceiptStatus.INTERRUPTED) {\r\n    label.text = Constants.ViewReceipt_Status.INTERRUPTED;\r\n  } else if (label.val === Constants.ViewReceiptStatus.UNLOADING) {\r\n    label.text = Constants.ViewReceipt_Status.UNLOADING;\r\n  } else if (label.val === Constants.ViewReceiptStatus.MANUALLY_UNLOADED) {\r\n    label.text = Constants.ViewReceipt_Status.MANUALLY_UNLOADED;\r\n  } else if (label.val === Constants.ViewReceiptStatus.PARTIALLY_UNLOADED) {\r\n    label.text = Constants.ViewReceipt_Status.PARTIALLY_UNLOADED;\r\n  } else if (label.val === Constants.ViewReceiptStatus.QUEUED) {\r\n    label.text = Constants.ViewReceipt_Status.QUEUED;\r\n  } else if (label.val === Constants.ViewReceiptStatus.READY) {\r\n    label.text = Constants.ViewReceipt_Status.READY;\r\n  }\r\n  return label;\r\n};\r\n\r\nconst handleStatus = (e) => {\r\n  try {\r\n    if (e === 0 && e !== null) {\r\n      return Constants.ReceiptCompartment_Status.COMPLETED.toLocaleString();\r\n    }\r\n    if (e === 1 && e !== null) {\r\n      return Constants.ReceiptCompartment_Status.EMPTY.toLocaleString();\r\n    }\r\n    if (e === 2 && e !== null) {\r\n      return Constants.ReceiptCompartment_Status.FORCE_COMPLETED.toLocaleString();\r\n    }\r\n    if (e === 3 && e !== null) {\r\n      return Constants.ReceiptCompartment_Status.INTERRUPTED.toLocaleString();\r\n    }\r\n    if (e === 4 && e !== null) {\r\n      return Constants.ReceiptCompartment_Status.OVER_UNLOADED.toLocaleString();\r\n    }\r\n    if (e === 5 && e !== null) {\r\n      return Constants.ReceiptCompartment_Status.PART_UNLOADED.toLocaleString();\r\n    }\r\n    if (e === 6 && e !== null) {\r\n      return Constants.ReceiptCompartment_Status.UNLOAD_NOTSTARTED.toLocaleString();\r\n    }\r\n    if (e === 7 && e !== null) {\r\n      return Constants.ReceiptCompartment_Status.UNLOADING.toLocaleString();\r\n    } else {\r\n      return e;\r\n    }\r\n  } catch (error) {\r\n    return e;\r\n  }\r\n};\r\n\r\nconst handleAttributeType = (data) => {\r\n  try {\r\n    const attribute = data.rowData.AttributesforUI.filter(\r\n      (att) => att.AttributeName === data.name\r\n    )[0];\r\n\r\n    return attribute.DataType.toLowerCase() ===\r\n      Constants.DataType.STRING.toLowerCase() ||\r\n      attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.INT.toLowerCase() ||\r\n      attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.LONG.toLowerCase() ||\r\n      attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.FLOAT.toLowerCase() ? (\r\n      <label>{attribute.AttributeValue}</label>\r\n    ) : attribute.DataType.toLowerCase() ===\r\n      Constants.DataType.BOOL.toLowerCase() ? (\r\n      <Checkbox\r\n        checked={\r\n          attribute.AttributeValue.toString().toLowerCase() === \"true\"\r\n            ? true\r\n            : false\r\n        }\r\n        disabled={true}\r\n      ></Checkbox>\r\n    ) : (\r\n      <label>{new Date(attribute.AttributeValue).toLocaleDateString()}</label>\r\n    );\r\n  } catch (error) {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nconst mapReceiptToProps = (receipt) => {\r\n  return {\r\n    userActions: bindActionCreators(getUserDetails, receipt),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapReceiptToProps\r\n)(MarineReceiptViewAuditTrailDetailsComposite);\r\n\r\nMarineReceiptViewAuditTrailDetailsComposite.propTypes = {\r\n  receiptCode: PropTypes.string.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Button, Modal } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport {\r\n  fnViewMarineUnloadingDetails,\r\n  functionGroups,\r\n} from \"../../../JS/FunctionGroups\";\r\n\r\nMarineReceiptLoadingDetails.propTypes = {\r\n  tableData: PropTypes.array,\r\n  loadingDetailsHideFields: PropTypes.array,\r\n  setValid: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  userDetails: PropTypes.object.isRequired,\r\n  status: PropTypes.object.isRequired,\r\n  isWebPortalUser: PropTypes.bool.isRequired,\r\n};\r\n\r\nMarineReceiptLoadingDetails.defaultProps = {};\r\n\r\nexport default function MarineReceiptLoadingDetails({\r\n  tableData,\r\n  loadingDetailsHideFields,\r\n  setValid,\r\n  handleBack,\r\n  onSaved,\r\n  userDetails,\r\n  status,\r\n  isWebPortalUser,\r\n}) {\r\n  const [t] = useTranslation();\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [loadingDetail, setLoadingDetail] = useState({});\r\n\r\n  function displayTMModalforInValidConfirm() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"InValid_Confirm\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  setLoadingDetail({});\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Confirm\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  setLoadingDetail({});\r\n                  setValid(\r\n                    loadingDetail.rowData.fptransactionid,\r\n                    loadingDetail.rowData.ProductCategoryType\r\n                  );\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n\r\n  const handleCustom = (e) => {\r\n    if (\r\n      e.rowData.BaseProductCode == null ||\r\n      e.rowData.BaseProductCode.toString().length === 0\r\n    ) {\r\n      return e.rowData.IsInvalid ? (\r\n        <span>{t(\"ViewMarineUnloadingDetails_Invalid\")}</span>\r\n      ) : status !== \"CLOSED\" ? (\r\n        <button className=\"ValidBtn\" onClick={() => changeValid(e)}>\r\n          {t(\"ViewMarineUnloadingDetails_Valid\")}\r\n        </button>\r\n      ) : (\r\n        <span>{t(\"ViewMarineLoadingDetails_Valid\")}</span>\r\n      );\r\n    }\r\n  };\r\n\r\n  const changeValid = (e) => {\r\n    Utilities.setArchive(userDetails.EntityResult.IsArchived);\r\n    if (\r\n      Utilities.isInFunction(\r\n        userDetails.EntityResult.FunctionsList,\r\n        functionGroups.modify,\r\n        fnViewMarineUnloadingDetails\r\n      )\r\n    ) {\r\n      setModelOpen(true);\r\n      setLoadingDetail(e);\r\n    } else {\r\n      var notification = {\r\n        messageType: \"critical\",\r\n        message: \"ReceiptCompDetail_Permission\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: \"\",\r\n            keyValues: \"\",\r\n            isSuccess: false,\r\n            errorMessage: \"ReceiptCompDetail_UnloadingDetailsPermission\",\r\n          },\r\n        ],\r\n      };\r\n      onSaved([], \"Permission\", notification);\r\n    }\r\n  };\r\n\r\n  const formatDate = (e) => {\r\n    const { value } = e;\r\n    try {\r\n      if (value == null || value.length === 0 || value === \"\") return \"\";\r\n      return (\r\n        new Date(value).toLocaleDateString() +\r\n        \" \" +\r\n        new Date(value).toLocaleTimeString()\r\n      );\r\n    } catch (error) {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  const changeSpace = (e) => {\r\n    const { value } = e;\r\n\r\n    return value.replace(/&nbsp;/g, \" \");\r\n  };\r\n\r\n  const changeNumber = (e) => {\r\n    const { value } = e;\r\n    try {\r\n      if (value != null && value !== \"\") {\r\n        var index = value.indexOf(\" \");\r\n        if (index === 0) {\r\n          return \"\";\r\n        }\r\n        var str1 = value.substr(0, index);\r\n        var str2 = value.substr(index + 1, value.length - index - 1);\r\n        return parseFloat(str1).toLocaleString() + \" \" + str2;\r\n      }\r\n    } catch (error) {\r\n      return value;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const changeNoSpaceNumber = (e) => {\r\n    const { value } = e;\r\n    try {\r\n      if (value != null && value !== \"\") {\r\n        return value.toLocaleString();\r\n      }\r\n    } catch (error) {\r\n      return value;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"detailsContainer\">\r\n        <div className=\"row\">\r\n          <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n            <h3>{t(\"ViewMarineUnloadingDetails_Title\")}</h3>\r\n          </div>\r\n          <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n            <h4>{t(\"ViewMarineUnloadingDetails_Header\")}</h4>\r\n          </div>\r\n          <div className=\"detailsTable loadingTable\">\r\n            <DataTable\r\n              data={tableData}\r\n              scrollable={true}\r\n              scrollWidth=\"100%\"\r\n              resizableColumns={true}\r\n            >\r\n              {loadingDetailsHideFields.indexOf(\"IsInvalid\") > -1 ||\r\n              isWebPortalUser ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"IsInvalid\"\r\n                  field=\"IsInvalid\"\r\n                  header={t(\"ViewMarineUnloadingDetails_Valid\")}\r\n                  initialWidth=\"90px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => handleCustom(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"CompartmentSeqNoInVehicle\") >\r\n              -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"CompartmentSeqNoInVehicle\"\r\n                  field=\"CompartmentSeqNoInVehicle\"\r\n                  header={t(\"ViewMarineUnloadingDetails_CompartmentSeqNo\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNoSpaceNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"ProductCode\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"ProductCode\"\r\n                  field=\"ProductCode\"\r\n                  header={t(\"ViewMarineUnloadingDetails_ProductCode\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeSpace(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"BaseProductCode\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"BaseProductCode\"\r\n                  field=\"BaseProductCode\"\r\n                  header={t(\"ViewMarineUnloadingDetails_BaseProductCode\")}\r\n                  initialWidth=\"170px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"TankCode\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"TankCode\"\r\n                  field=\"TankCode\"\r\n                  header={t(\"ViewMarineUnloadingDetails_TankCode\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"BayCode\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"BayCode\"\r\n                  field=\"BayCode\"\r\n                  header={t(\"ViewMarineUnloadingDetails_BayCode\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"BCUCode\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"BCUCode\"\r\n                  field=\"BCUCode\"\r\n                  header={t(\"ViewMarineUnloadingDetails_BCUCode\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"MeterCode\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"MeterCode\"\r\n                  field=\"MeterCode\"\r\n                  header={t(\"ViewMarineUnloadingDetails_MeterCode\")}\r\n                  initialWidth=\"120px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"GrossQuantity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"GrossQuantity\"\r\n                  field=\"GrossQuantity\"\r\n                  header={t(\"ViewMarineUnloadingDetails_GrossQuantity\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"NetQuantity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"NetQuantity\"\r\n                  field=\"NetQuantity\"\r\n                  header={t(\"ViewMarineUnloadingDetails_NetQuantity\")}\r\n                  initialWidth=\"120px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"Density\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"Density\"\r\n                  field=\"Density\"\r\n                  header={t(\"ViewMarineUnloadingDetails_ProductDensity\")}\r\n                  initialWidth=\"140px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"Pressure\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"Pressure\"\r\n                  field=\"Pressure\"\r\n                  header={t(\"ViewMarineUnloadingDetails_Pressure\")}\r\n                  initialWidth=\"100px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"Temperature\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"Temperature\"\r\n                  field=\"Temperature\"\r\n                  header={t(\"ViewMarineUnloadingDetails_Temperature\")}\r\n                  initialWidth=\"120px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"StartTime\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"StartTime\"\r\n                  field=\"StartTime\"\r\n                  header={t(\"ViewMarineUnloadingDetails_StartTime\")}\r\n                  initialWidth=\"200px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => formatDate(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"EndTime\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"EndTime\"\r\n                  field=\"EndTime\"\r\n                  header={t(\"ViewMarineUnloadingDetails_EndTime\")}\r\n                  initialWidth=\"200px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => formatDate(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"StartTotalizer\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"StartTotalizer\"\r\n                  field=\"StartTotalizer\"\r\n                  header={t(\"ViewMarineUnloadingDetails_StartTotalizer\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNoSpaceNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"EndTotalizer\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"EndTotalizer\"\r\n                  field=\"EndTotalizer\"\r\n                  header={t(\"ViewMarineUnloadingDetails_EndTotalizer\")}\r\n                  initialWidth=\"120px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNoSpaceNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"NetStartTotalizer\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"NetStartTotalizer\"\r\n                  field=\"NetStartTotalizer\"\r\n                  header={t(\"ViewMarineUnloadingDetails_netstarttotalizer\")}\r\n                  initialWidth=\"150px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNoSpaceNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"NetEndtoTalizer\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"NetEndtoTalizer\"\r\n                  field=\"NetEndtoTalizer\"\r\n                  header={t(\"ViewMarineUnloadingDetails_netendtotalizer\")}\r\n                  initialWidth=\"140px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNoSpaceNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"TransactionID\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"TransactionID\"\r\n                  field=\"TransactionID\"\r\n                  header={t(\"ViewMarineUnloadingDetails_TransactionNo\")}\r\n                  initialWidth=\"170px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNoSpaceNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"Mass\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"Mass\"\r\n                  field=\"Mass\"\r\n                  header={t(\"ViewMarineUnloadingDetails_Mass\")}\r\n                  initialWidth=\"100px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"WeightInAir\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"WeightInAir\"\r\n                  field=\"WeightInAir\"\r\n                  header={t(\"ViewMarineUnloadingDetails_WeightInAir\")}\r\n                  initialWidth=\"100px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"WeightInVacuum\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"WeightInVacuum\"\r\n                  field=\"WeightInVacuum\"\r\n                  header={t(\"ViewMarineUnloadingDetails_WeightInVacuum\")}\r\n                  initialWidth=\"100px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"TankStartGrossQuantity\") >\r\n              -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"TankStartGrossQuantity\"\r\n                  field=\"TankStartGrossQuantity\"\r\n                  header={t(\r\n                    \"ViewMarineUnloadingDetails_TankStartGrossQuantity\"\r\n                  )}\r\n                  initialWidth=\"200px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"TankEndGrossQuantity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"TankEndGrossQuantity\"\r\n                  field=\"TankEndGrossQuantity\"\r\n                  header={t(\"ViewMarineUnloadingDetails_TankEndGrossQuantity\")}\r\n                  initialWidth=\"200px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"TankStartNetQuantity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"TankStartNetQuantity\"\r\n                  field=\"TankStartNetQuantity\"\r\n                  header={t(\"ViewMarineUnloadingDetails_TankStartNetQuantity\")}\r\n                  initialWidth=\"200px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"TankEndNetQuantity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"TankEndNetQuantity\"\r\n                  field=\"TankEndNetQuantity\"\r\n                  header={t(\"ViewMarineUnloadingDetails_TankEndNetQuantity\")}\r\n                  initialWidth=\"200px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n\r\n              {loadingDetailsHideFields.indexOf(\"TankStartGrossMass\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"TankStartGrossMass\"\r\n                  field=\"TankStartGrossMass\"\r\n                  header={t(\"ViewMarineUnloadingDetails_TankStartGrossMass\")}\r\n                  initialWidth=\"180px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"TankEndGrossMass\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"TankEndGrossMass\"\r\n                  field=\"TankEndGrossMass\"\r\n                  header={t(\"ViewMarineUnloadingDetails_TankEndGrossMass\")}\r\n                  initialWidth=\"180px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"StartTemperature\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"StartTemperature\"\r\n                  field=\"StartTemperature\"\r\n                  header={t(\"ViewMarineUnloadingDetails_StartTemperature\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"EndTemperature\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"EndTemperature\"\r\n                  field=\"EndTemperature\"\r\n                  header={t(\"ViewMarineUnloadingDetails_EndTemperature\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"StartPressure\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"StartPressure\"\r\n                  field=\"StartPressure\"\r\n                  header={t(\"ViewMarineUnloadingDetails_StartPressure\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"EndPressure\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"EndPressure\"\r\n                  field=\"EndPressure\"\r\n                  header={t(\"ViewMarineUnloadingDetails_EndPressure\")}\r\n                  initialWidth=\"120px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"ReferenceDensity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"ReferenceDensity\"\r\n                  field=\"ReferenceDensity\"\r\n                  header={t(\"ViewMarineUnloadingDetails_ReferenceDensity\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"StartProductDensity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"StartProductDensity\"\r\n                  field=\"StartProductDensity\"\r\n                  header={t(\"ViewMarineUnloadingDetails_StartProductDensity\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"EndProductDensity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"EndProductDensity\"\r\n                  field=\"EndProductDensity\"\r\n                  header={t(\"ViewMarineUnloadingDetails_EndProductDensity\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"StartWeightInAir\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"StartWeightInAir\"\r\n                  field=\"StartWeightInAir\"\r\n                  header={t(\"ViewMarineUnloadingDetails_StartWeightInAir\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"EndWeightInAir\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"EndWeightInAir\"\r\n                  field=\"EndWeightInAir\"\r\n                  header={t(\"ViewMarineUnloadingDetails_EndWeightInAir\")}\r\n                  initialWidth=\"120px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"Remarks\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"Remarks\"\r\n                  field=\"Remarks\"\r\n                  header={t(\"ViewMarineUnloadingDetails_Remarks\")}\r\n                  initialWidth=\"100px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n\r\n              {loadingDetailsHideFields.indexOf(\"PresetQuantity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"PresetQuantity\"\r\n                  field=\"PresetQuantity\"\r\n                  header={t(\"ViewMarineUnloadingDetails_PresetQuantity\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"resetQuantity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"resetQuantity\"\r\n                  field=\"resetQuantity\"\r\n                  header={t(\"ViewMarineUnloadingDetails_resetQuantity\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => changeNumber(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n\r\n              {loadingDetailsHideFields.indexOf(\"CalculatedGross\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"CalculatedGross\"\r\n                  field=\"CalculatedGross\"\r\n                  header={t(\"ViewMarineUnloadingDetails_CalculatedGross\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"CalculatedNet\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"CalculatedNet\"\r\n                  field=\"CalculatedNet\"\r\n                  header={t(\"ViewMarineUnloadingDetails_CalculatedNet\")}\r\n                  initialWidth=\"120px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"CalculatedValueUOM\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"CalculatedValueUOM\"\r\n                  field=\"CalculatedValueUOM\"\r\n                  header={t(\"ViewMarineUnloadingDetails_CalculatedValueUOM\")}\r\n                  initialWidth=\"130px\"\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n            </DataTable>\r\n          </div>\r\n          {displayTMModalforInValidConfirm()}\r\n        </div>\r\n        <div className=\"row\" style={{ paddingTop: \"15px\" }}>\r\n          <div className=\"col col-lg-8\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["MarineReceiptDetails","_ref","marineReceipt","modMarineReceipt","modAssociations","modTankAssociations","validationErrors","listOptions","selectedAssociations","onFieldChange","onDateTextChange","handleRowSelectionChange","handleCellDataEdit","handleTankCellDataEdit","handleAddAssociation","handleDeleteAssociation","onVesselSearchChange","onCarrierSearchChange","isEnterpriseNode","receiptCompartmentDetails","modReceiptCompartment","operationsVisibilty","viewTab","handleDeleteTankAssociation","handleAddTankAssociation","onTabChange","selectedTankAssociations","handleTankAssociationSelectionChange","selectedAttributeList","handleAttributeCellDataEdit","attributeValidationErrors","expandedRows","expandedCompDetailRows","toggleExpand","handleCompAttributeCellDataEdit","onCarrierCompanyChange","isHSEInspectionEnable","isBondShow","isTransloading","compDetailsTab","isSlotbookinginUI","updateEnableForConfigure","t","useTranslation","isBondNoShow","setBondNoShow","useState","handleCustomEditDropDown","cellData","dropDownoptions","_jsx","Select","className","value","rowIndex","field","fluid","options","onChange","indicator","reserveSpace","search","noResultsMessage","handleTankPlanEditTextBox","Input","handleCustomEditTextBox","editable","changeBondNo","checked","this","props","handleTankPlanEditDropDown","modelOpen","setModelOpen","modCellData","setModCellData","quantityplayValues","rowData","PlanQuantityUOM","handleReceiptEditTextBox","findIndex","item","CompartmentSeqNoInVehicle","children","adjustPlan","ReceiptStatus","Constants","PARTIALLY_UNLOADED","INTERRUPTED","MANUALLY_UNLOADED","AUTO_UNLOADED","QUEUED","ReceiptCompartmentStatus","disabled","AdjustPlan","handleReceiptEdiCheckbox","forceComplete","Checkbox","onClick","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","expanderTemplate","data","open","x","_jsxs","Icon","root","name","handleIsRequiredCompAttributes","IsMandatory","AttributeName","class","rowExpansionTemplate","Array","isArray","AttributesforUI","length","DataTable","Column","header","renderer","handleAttributeType","style","paddingRight","attribute","DataType","toLowerCase","STRING","INT","FLOAT","LONG","DOUBLE","AttributeValue","IsReadonly","BOOL","toString","DATETIME","DatePicker","minuteStep","undefined","Date","showYearSelector","error","console","log","rowExpansionTemplateDetail","compData","push","TranslationConsumer","ReceiptCode","label","placeholder","CarrierCode","carriers","onSearch","VesselCode","getOptionsWithSelect","vessels","ScheduledDate","type","disablePast","displayFormat","getCurrentDateFormat","onTextChange","QuantityUOM","shipmentUOM","Description","fontWeight","SlotBooked","HSEInspectionStatus","Active","text","Remarks","TerminalCodes","Utilities","terminalCodes","ActualTerminalCode","paddingTop","BondNumber","map","attire","ErrorBoundary","Accordion","Content","title","AttributeDetails","attributeMetaDataList","Tab","defaultActiveIndex","Pane","size","selectionMode","selection","onSelectionChange","handleIsRequiredCompartmentCell","editFieldType","customEditRenderer","celldata","shareholders","compSeqOptions","productOptions","FinishedProducts","ShareholderCode","forEach","productcode","handleProductEditDropDown","supplierOptions","shareholderSuppliers","suppliers","filter","shareholderCust","SupplierOriginTerminalsList","Object","keys","customer","handleCustomerEditDropDown","destinationOptions","supplierDestinationOptions","SupplierCode","destination","handleOriginalTerminalEditDropDown","toLocaleString","decimalDisplayValues","IsTransloading","handleIsTransloadingCheckbox","initialWidth","handleTankProductEditDropDown","baseProductOptions","baseProductDetails","ALLPROD","additiveDetails","concat","values","baseProduct","handleBaseProductEditDropDown","tankCodeOptions","COMPLETED","EMPTY","FORCE_COMPLETED","OVER_UNLOADED","PART_UNLOADED","UNLOAD_NOTSTARTED","UNLOADING","statusDisplayValues","Modal","Footer","Button","content","defaultProps","MarineReceiptDetailsComposite","Component","constructor","_this","arguments","state","lodash","emptyMarineReceipt","modTankPlanAssociations","tempModTankAssociations","modTankPlan","vehicleDetails","carrierCode","vehicleCompartments","modVehicleDetails","marineReceiptValidationDef","isReadyToRender","getShareholders","Captains","vesselSearchOptions","associatedCompartments","saveEnabled","selectedAll","ViewUnloadingData","ViewUnloadingHideFields","isManualEntry","viewAuditTrail","isViewUnloading","isNewReceipt","clickRow","save","authorizeToLoad","closeReceipt","viewUnloadingDetails","printRAN","viewBOD","printBOD","bSIOutbound","manualEntry","finishedProductItems","compartmentAttributeMetaDataList","carrierCompany","carrierOptions","carrierSearchOptions","carrierShareholderMap","marineReceiptKPIList","showAuthenticationLayout","tempMarineReceipt","handleChange","propertyName","setState","getVessel","terminalSelectionChange","getTankListForRole","userDetails","EntityResult","IsArchived","newAssociation","AssociatedContractItems","AssociatedOrderItems","Attributes","CarrierCompanyCode","CompartmentCode","FinishedProductCode","OriginTerminalCode","Quantity","SequenceNo","selectedShareholder","TrailerCode","maxnumber","object","seqNumber","isNaN","parseInt","val","IsEnterpriseNode","formCompartmentAttributes","obj","index","association","cindex","tankAssociation","newTankAssociation","emptyReceiptCompartmentPlan","handleDateTextChange","newVal","getFinishedProduct","vc","vehCompSeq","SFL","trailerCode","compCode","Code","DefaultValue","compAttribute","compIndex","compSequenceNo","SeqNumber","BPCodeTankCodeList","receiptCompartmentTanks","receiptCompartmentTank","emptyReceiptCompartmentTanks","PlannedQuantity","TankCode","activeIndex","e","handleAssociationSelectionChange","handleManualEntry","handleSave","tempTankAssociations","modTankAssociation","ReceiptCompartmentTanks","saveMarineReceipt","saveCompartmentDetails","handleSaveCompartmentDetailsEnabled","handleCompartmentDetailsSave","addUpdateMarineDispatch","createMarineReceipt","updateMarineReceipt","handleReset","getAssociationsFromReceipt","vehicleCompartment","handleResetAttributeValidationError","localNodeAttribute","handleVesselSearchChange","vesselCode","includes","slice","getVesselCodeByCarrier","getTerminalsForCarrier","handleCarrierSearchChange","handleBack","operationPermissionControl","receiptOperations","indexOf","ViewReceipt_AuthorizeToUnload","ViewReceipt_CloseReceipt","ViewReceipt_ManualEntry","ViewReceipt_ViewAuditTrail","ViewReceipt_ViewTransactions","ViewReceipt_PrintRAN","ViewReceipt_ViewBOD","ViewReceipt_PrintBOD","ViewReceipt_BISOutbound","saveMarineReceiptKeys","i","MarineReceiptCode","ForceComplete","KeyData","ShareHolderCode","keyDataCode","KeyCodes","Key","Value","notification","messageType","message","messageResultDetails","keyFields","keyValues","selectedRow","Common_Code","isSuccess","errorMessage","axios","RestApis","tokenDetails","tokenInfo","then","response","result","IsSuccess","getReceiptCompartmentDetails","handlePageAdd","ErrorList","toast","NotifyEvent","notificationMessage","autoClose","catch","abledRow","handleViewAuditTrail","handleViewUnloading","getMarineUnLoadingDetails","isTerminalAdded","expandedRowIndex","splice","handleAuthenticationClose","generateCompartmentCode","compartments","comp","componentWillReceiveProps","nextProps","getMarineReceipt","key","getUoms","VOLUME","MASS","massUOM","vehicleCode","vesselChanged","keyCode","getCompartmentDetailsFromVehicle","getShipmentCompartmentFromVehicleCompartment","modAssociation","VehicleCode","modTankPlanAssociation","FinishedProductItems","totalQuantity","k","j","finishedProductCode","BaseProductCode","AdditiveCode","vehicleInfo","seqNum","VehicleTrailers","vehicleTrailer","Trailer","Compartments","trailerCompartment","trailerCompSeq","CompartmentSeqNoInTrailer","Capacity","UOM","shipmentCompartments","shipmentCompartment","CustomerCode","attributesForUI","shareholder","get","MARINE","vessel","getFinishedProductCodes","getSupplierOriginTerminals","componentDidMount","getBaseProductList","getAdditivesList","getLookUpData","GetReceiptStatusOperations","getAdjustPlanPermission","getForceCompletenPermission","isNewMarineReceipt","getAttributes","getCarrierList","getCarrierShareholder","getTransloading","getBond","MarineEnable","EnableMarine","marineReceiptAttributeEntity","marineReceiptCompAttributeEntity","marineReceiptCompartmentDetail","MarineReceiptByCompartmentList_ReceiptStatus","nextOperations","operation","ShareholderList","commonCode","transportationType","getTransportationType","TransportationType","PageAttibutes","DefaultQtyUOMForTransactionUI","FunctionsList","functionGroups","add","fnMarineReceiptByCompartment","RailMarineReceiptCompartmentPlanList","result1","RailMarineReceiptCompartmentDetailPlanList","modify","getKPIList","carrier","genericProps","compAttributeMetaDataList","validateSave","compart","marineReceiptCompartDef","col","err","validator","displayName","updatedAttributes","uIAttributes","some","selAttribute","isPresent","ListOfAttributeData","AttributeCode","errMsg","Set","a","onSaved","attributeMetaData","returnValue","every","tankAssociations","getCompartmentFromAssociations","modMarineReceipts","fillAttributeDetails","detailPlan","getTankPlanFromTankAssociations","IsWebPortalUser","attributeList","det","selectedTerminals","terminalAttributes","attTerminal","termAtt","PrimaryShareholder","Entity","attributesTerminalsList","existitem","Attributevalue","marineReceiptAttribute","valueAttribute","attributes","selTerminal","compAttributes","att","DisplayName","attributesforNewComp","tempCompAttributes","attData","tempAttIndex","assignedAttributes","receipt","associations","receiptCompartment","compartment","getVesselSearchOptions","modVesselCode","element","Map","Table","set","Common_Shareholder","getCarrierSearchOptions","modCarrierCode","AdjustedPlanQuantity","UnloadedQuantity","fnMarineReceipt","delete","remove","getTankCode","Shareholder","code","tanks","tank","getSaveEnabled","saveCompartmentDetailsEnabled","saveAbled","marineReceiptCode","view","fnKPIInformation","objKPIRequestData","PageName","kpiMarineReceiptDetails","InputParameters","ListKPIDetails","render","popUpContents","fieldName","fieldValue","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","CreatedTime","LastActiveTime","TMDetailsHeader","entityCode","newEntityName","TMDetailsKPILayout","KPIList","ShowSlotBookedInUI","handleOperationButtonClick","handleOperationClick","onViewAuditTrailClick","onViewUnloading","onManualEntry","compartmentDetailsPageSize","WebPortalListPageSize","TMDetailsUserActions","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","MarineReceiptManualEntryDetailsComposite","MarineReceiptViewAuditTrailComposite","receiptCode","MarineReceiptLoadingDetails","tableData","loadingDetailsHideFields","setValid","isWebPortalUser","LoadingPage","connect","getUserDetails","TokenAuth","userActions","bindActionCreators","wjcCore","MarineReceiptViewAuditTrailDetailsComposite","receiptViewAuditTrailData","modReceiptViewAuditTrailData","openPrint","auditTrailAttributeMetaDataList","ViewAuditTrailList","handlePrint","getReceiptViewAuditTrail","receiptStatus","CLOSED","READY","UpdatedTime","formReadonlyCompAttributes","MinValue","MaxValue","ValidationFormat","compAtt","selAtt","MARINERECEIPTSTATUSTIME","displayTMModalforPrintConfirm","onClose","closeOnDimmerClick","wjChart","itemsSource","chartType","bindingX","palette","width","height","position","wjProperty","majorUnit","max","min","itemFormatter","formatter","axisLine","binding","id","formatDate","handleStatus","el","window","document","getElementById","innerHTML","iframe","createElement","doc","body","appendChild","contentWindow","str1","substring","str2","replace","write","info","close","focus","print","setTimeout","removeChild","minWidth","textAlign","engine","cls","fontSize","status","loadingDetail","setLoadingDetail","changeValid","fnViewMarineUnloadingDetails","changeNumber","substr","parseFloat","changeNoSpaceNumber","scrollable","scrollWidth","resizableColumns","IsInvalid","handleCustom","changeSpace","fptransactionid","ProductCategoryType"],"sourceRoot":""}