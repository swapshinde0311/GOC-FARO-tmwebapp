{"version":3,"file":"static/js/6452.576d4e6e.chunk.js","mappings":"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","sources":["Components/UIBase/Details/PipelineHeaderSiteViewDetails.jsx","Components/Composite/Details/PipelineHeaderSiteViewDetailsComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/functionalUtilities.js"],"sourcesContent":["import React from 'react';\r\nimport { Select, Input, Accordion } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\n\r\n\r\n\r\nPipelineHeaderSiteViewDetails.propTypes = {\r\n    pipelineHeader: PropTypes.object.isRequired,\r\n    modPipelineHeader: PropTypes.object.isRequired,\r\n    validationErrors: PropTypes.object.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    onActiveStatusChange: PropTypes.func.isRequired,\r\n    listOptions: PropTypes.shape({\r\n        pipelineHeaderTypeOptions: PropTypes.array,\r\n        volumeUOMOptions: PropTypes.array,\r\n        lengthUOMOptions: PropTypes.array,\r\n        pipelineMeterList: PropTypes.array,\r\n    }).isRequired,\r\n    modAttributeMetaDataList: PropTypes.array.isRequired,\r\n    attributeValidationErrors: PropTypes.array.isRequired,\r\n    onAttributeDataChange: PropTypes.func.isRequired,\r\n    isEnterpriseNode: PropTypes.bool.isRequired,\r\n}\r\nPipelineHeaderSiteViewDetails.defaultProps = {\r\n    listOptions: {\r\n        pipelineHeaderTypeOptions: [],\r\n        volumeUOMOptions: [],\r\n        lengthUOMOptions: [],\r\n        pipelineMeterList: []\r\n    },\r\n\r\n}\r\n\r\nexport function PipelineHeaderSiteViewDetails({\r\n    pipelineHeader,\r\n    modPipelineHeader,\r\n    validationErrors,\r\n    onFieldChange,\r\n    onActiveStatusChange,\r\n    listOptions,\r\n    modAttributeMetaDataList,\r\n    attributeValidationErrors,\r\n    onAttributeDataChange,\r\n    isEnterpriseNode\r\n}) {\r\n\r\n    const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n        let attributeValidation = [];\r\n        attributeValidation = attributeValidationErrors.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n        })\r\n        return attributeValidation.attributeValidationErrors;\r\n    }\r\n\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"detailsContainer\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modPipelineHeader.Code}\r\n                                indicator=\"required\"\r\n                                disabled={pipelineHeader.Code !== \"\"}\r\n                                onChange={(data) => onFieldChange(\"Code\", data)}\r\n                                label={t(\"PipeLineHeaderInfo_Code\")}\r\n                                error={t(validationErrors.Code)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modPipelineHeader.Name}\r\n                                indicator=\"required\"\r\n                                onChange={(data) => onFieldChange(\"Name\", data)}\r\n                                label={t(\"PipeLineHeaderInfo_Name\")}\r\n                                error={t(validationErrors.Name)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                value={modPipelineHeader.PipelineHeaderType}\r\n                                label={t(\"PipeLineHeaderInfo_Type\")}\r\n                                indicator=\"required\"\r\n                                options={listOptions.pipelineHeaderTypeOptions}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"PipelineHeaderType\", data);\r\n                                }}\r\n                                error={t(validationErrors.PipelineHeaderType)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modPipelineHeader.PointName}\r\n                                onChange={(data) => onFieldChange(\"PointName\", data)}\r\n                                indicator=\"required\"\r\n                                label={t(\"PipeLineHeaderInfo_PointName\")}\r\n                                error={t(validationErrors.PointName)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modPipelineHeader.OuterDiameter}\r\n                                onChange={(data) => onFieldChange(\"OuterDiameter\", data)}\r\n                                label={t(\"PipeLineHeaderInfo_OuterDiameter\")}\r\n                                error={t(validationErrors.OuterDiameter)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                indicator={((modPipelineHeader.OuterDiameter !== null && modPipelineHeader.OuterDiameter !== \"\")) ? \"required\" : \"\"}\r\n                                value={modPipelineHeader.OuterDiameterUOM}\r\n                                label={t(\"PipeLineHeaderInfo_OuterDiameterUOM\")}\r\n                                options={listOptions.lengthUOMOptions}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"OuterDiameterUOM\", data);\r\n                                }}\r\n                                error={t(validationErrors.OuterDiameterUOM)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modPipelineHeader.WallThickness}\r\n                                onChange={(data) => onFieldChange(\"WallThickness\", data)}\r\n                                label={t(\"PipeLineHeaderInfo_PipeThickness\")}\r\n                                error={t(validationErrors.WallThickness)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                value={modPipelineHeader.WallThicknessUOM}\r\n                                indicator={((modPipelineHeader.WallThickness !== null && modPipelineHeader.WallThickness !== \"\")) ? \"required\" : \"\"}\r\n                                label={t(\"PipeLineHeaderInfo_PipeThicknessUOM\")}\r\n                                options={listOptions.lengthUOMOptions}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"WallThicknessUOM\", data);\r\n                                }}\r\n                                error={t(validationErrors.WallThicknessUOM)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modPipelineHeader.TypicalFlowRatePerHour}\r\n                                onChange={(data) => onFieldChange(\"TypicalFlowRatePerHour\", data)}\r\n                                label={t(\"PipeLineHeaderInfo_ProductFlowRate\")}\r\n                                error={t(validationErrors.TypicalFlowRatePerHour)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                value={modPipelineHeader.FlowRateUOM}\r\n                                indicator={((modPipelineHeader.TypicalFlowRatePerHour !== null && modPipelineHeader.TypicalFlowRatePerHour !== \"\")) ? \"required\" : \"\"}\r\n                                label={t(\"PipeLineHeaderInfo_ProductFlowRateUOM\")}\r\n                                options={listOptions.volumeUOMOptions}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"FlowRateUOM\", data);\r\n                                }}\r\n                                error={t(validationErrors.FlowRateUOM)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                value={modPipelineHeader.AssociatedMeterCodes}\r\n                                label={t(\"Associated_Meters\")}\r\n                                options={listOptions.pipelineMeterList}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"AssociatedMeterCodes\", data);\r\n                                }}\r\n                                error={t(validationErrors.AssociatedMeterCodes)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                multiple={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"PipeLineHeaderInfo_Status\")}\r\n                                value={modPipelineHeader.Active}\r\n                                options={[\r\n                                    { text: t(\"PipeLineHeaderInfo_Active\"), value: true },\r\n                                    { text: t(\"PipeLineHeaderInfo_Inactive\"), value: false },\r\n                                ]}\r\n                                onChange={(data) => onActiveStatusChange(data)}\r\n                                error={t(validationErrors.Active)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modPipelineHeader.Description}\r\n                                onChange={(data) => onFieldChange(\"Description\", data)}\r\n                                label={t(\"PipeLineHeaderInfo_Remarks\")}\r\n                                error={t(validationErrors.Description)}\r\n                                indicator={modPipelineHeader.Active !== pipelineHeader.Active ? \"required\" : \"\"}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {\r\n                        modAttributeMetaDataList.length > 0 ?\r\n                            modAttributeMetaDataList.map((attribute) =>\r\n                                <ErrorBoundary>\r\n                                    <Accordion >\r\n                                        <Accordion.Content\r\n                                            className=\"attributeAccordian\"\r\n                                            title={isEnterpriseNode ? (attribute.TerminalCode + ' - ' + t(\"Attributes_Header\")) : (t(\"Attributes_Header\"))}\r\n                                        >\r\n                                            <AttributeDetails\r\n                                                selectedAttributeList={attribute.attributeMetaDataList}\r\n                                                handleCellDataEdit={onAttributeDataChange}\r\n                                                attributeValidationErrors={handleValidationErrorFilter(attributeValidationErrors, attribute.TerminalCode)}\r\n                                            ></AttributeDetails>\r\n                                        </Accordion.Content>\r\n                                    </Accordion>\r\n                                </ErrorBoundary>\r\n                            ) : null\r\n                    }\r\n\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { PipelineHeaderSiteViewDetails } from \"../../UIBase/Details/PipelineHeaderSiteViewDetails\";\r\nimport { emptyPipelineHeader } from \"../../../JS/DefaultEntities\";\r\nimport { pipelineHeaderValidationDef } from \"../../../JS/ValidationDef\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport PropTypes from \"prop-types\";\r\nimport lodash from \"lodash\";\r\nimport {\r\n  functionGroups,\r\n  fnPipelineHeaderSiteView,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport { pipelineHeaderAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass PipelineHeaderSiteViewDetailsComposite extends Component {\r\n  state = {\r\n    pipelineHeader: lodash.cloneDeep(emptyPipelineHeader),\r\n    modPipelineHeader: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      pipelineHeaderValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    attributeValidationErrors: [],\r\n    modAttributeMetaDataList: [],\r\n    pipelineHeaderTypeOptions: [],\r\n    lengthUOMOptions: [],\r\n    volumeUOMOptions: [],\r\n    pipelineMeterList: [],\r\n    showAuthenticationLayout: false,\r\n    tempPipelineHeader: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getAttributes(this.props.selectedRow);\r\n      this.getPipelineHeaderType();\r\n      this.getUOMList();\r\n      this.getMeterList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.pipelineHeader.Code !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getAttributes(nextProps.selectedRow);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(pipelineHeaderRow) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [pipelineHeaderAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.PIPELINEHEADER\r\n              ),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.PIPELINEHEADER\r\n                ),\r\n            },\r\n            () => this.getPipelineHeader(pipelineHeaderRow)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n  getPipelineHeader(pipelineHeaderRow) {\r\n    emptyPipelineHeader.PipelineHeaderType = \"BOTH\";\r\n    if (pipelineHeaderRow.Common_Code === undefined) {\r\n      this.setState(\r\n        {\r\n          pipelineHeader: lodash.cloneDeep(emptyPipelineHeader),\r\n          modPipelineHeader: lodash.cloneDeep(emptyPipelineHeader),\r\n          isReadyToRender: true,\r\n          modAttributeMetaDataList: [],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnPipelineHeaderSiteView\r\n          ),\r\n        },\r\n        () => {\r\n          if (!this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.localNodeAttribute();\r\n          }\r\n        }\r\n      );\r\n      return;\r\n    }\r\n\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.pipelineHeaderCode,\r\n        value: pipelineHeaderRow.Common_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.terminalCode,\r\n        value:\r\n          this.props.selectedTerminal !== \"\"\r\n            ? this.props.selectedTerminal\r\n            : null,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.pipelineHeaderCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetPipelineHeader,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              pipelineHeader: lodash.cloneDeep(result.EntityResult),\r\n              modPipelineHeader: lodash.cloneDeep(result.EntityResult),\r\n              saveEnabled:\r\n                Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnPipelineHeaderSiteView\r\n                ) && !this.props.userDetails.EntityResult.IsEnterpriseNode,\r\n            },\r\n            () => {\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange([this.props.selectedTerminal]);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            pipelineHeader: lodash.cloneDeep(emptyPipelineHeader),\r\n            modPipelineHeader: lodash.cloneDeep(emptyPipelineHeader),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in getPipelineHeader:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error while getting PipelineHeader:\",\r\n          error,\r\n          pipelineHeaderRow\r\n        );\r\n      });\r\n  }\r\n  getPipelineHeaderType() {\r\n    axios(\r\n      RestAPIs.GetPipelineHeaderType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let pipelineHeaderTypeOptions = [];\r\n          if (result.EntityResult !== null) {\r\n            Object.keys(result.EntityResult).forEach((key) =>\r\n              pipelineHeaderTypeOptions.push({\r\n                text: key,\r\n                value: result.EntityResult[key],\r\n              })\r\n            );\r\n            this.setState({ pipelineHeaderTypeOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getPipelineHeaderType:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getPipelineHeaderType:\", error);\r\n      });\r\n  }\r\n  getUOMList() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let volumeUOMOptions = [];\r\n\r\n            let flowrateVolumeUOMs = result.EntityResult.FLOWRATE_VOLUME;\r\n            let flowrateMassUOMs = result.EntityResult.FLOWRATE_MASS;\r\n\r\n            flowrateVolumeUOMs.forEach((volumeOption) => {\r\n              volumeUOMOptions.push({\r\n                text: volumeOption,\r\n                value: volumeOption,\r\n              });\r\n            });\r\n            flowrateMassUOMs.forEach((massOption) => {\r\n              volumeUOMOptions.push({\r\n                text: massOption,\r\n                value: massOption,\r\n              });\r\n            });\r\n\r\n            let lengthUOMs = result.EntityResult.LENGTH;\r\n            let lengthUOMOptions = [];\r\n            lengthUOMs.forEach((lengthOption) => {\r\n              lengthUOMOptions.push({\r\n                text: lengthOption,\r\n                value: lengthOption,\r\n              });\r\n            });\r\n\r\n            this.setState({\r\n              volumeUOMOptions,\r\n              lengthUOMOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getUOM:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getUOM:\", error);\r\n      });\r\n  }\r\n  getMeterList() {\r\n    axios(\r\n      RestAPIs.GetAllPipelineMeterList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let pipelineMeterList = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ pipelineMeterList });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getMeterList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getMeterList:\", error);\r\n      });\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modPipelineHeader = lodash.cloneDeep(this.state.modPipelineHeader);\r\n\r\n      modPipelineHeader[propertyName] = data;\r\n      this.setState({ modPipelineHeader });\r\n\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (pipelineHeaderValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          pipelineHeaderValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modPipelineHeader = lodash.cloneDeep(this.state.modPipelineHeader);\r\n      modPipelineHeader.Active = value;\r\n      if (modPipelineHeader.Active !== this.state.pipelineHeader.Active)\r\n        modPipelineHeader.Description = \"\";\r\n      this.setState({ modPipelineHeader });\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on handleActiveStatusChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  savePipelineHeader = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempPipelineHeader = lodash.cloneDeep(this.state.tempPipelineHeader);\r\n\r\n      this.state.pipelineHeader.Code === \"\"\r\n          ? this.createPipelineHeader(tempPipelineHeader)\r\n          : this.updatePipelineHeader(tempPipelineHeader);\r\n    } catch (error) {\r\n      console.log(\"pipelineheaderComposite : Error in savePrimeMover\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n     // this.setState({ saveEnabled: false });\r\n      let modPipelineHeader = this.fillDetails();\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n\r\n      if (this.validateSave(modPipelineHeader, attributeList)) {\r\n        modPipelineHeader = this.convertStringtoDecimal(\r\n          modPipelineHeader,\r\n          attributeList\r\n        );\r\n\r\n        let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempPipelineHeader = lodash.cloneDeep(modPipelineHeader);\r\n      this.setState({ showAuthenticationLayout, tempPipelineHeader }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.savePipelineHeader();\r\n        }\r\n    });\r\n\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modPipelineHeader = lodash.cloneDeep(this.state.modPipelineHeader);\r\n\r\n      if (\r\n        modPipelineHeader.OuterDiameter !== null &&\r\n        modPipelineHeader.OuterDiameter !== \"\"\r\n      )\r\n        modPipelineHeader.OuterDiameter =\r\n          modPipelineHeader.OuterDiameter.toLocaleString();\r\n\r\n      if (\r\n        modPipelineHeader.WallThickness !== null &&\r\n        modPipelineHeader.WallThickness !== \"\"\r\n      )\r\n        modPipelineHeader.WallThickness =\r\n          modPipelineHeader.WallThickness.toLocaleString();\r\n\r\n      if (\r\n        modPipelineHeader.TypicalFlowRatePerHour !== null &&\r\n        modPipelineHeader.TypicalFlowRatePerHour !== \"\"\r\n      )\r\n        modPipelineHeader.TypicalFlowRatePerHour =\r\n          modPipelineHeader.TypicalFlowRatePerHour.toLocaleString();\r\n\r\n      if (\r\n        modPipelineHeader.OuterDiameter === null ||\r\n        modPipelineHeader.OuterDiameter === \"\"\r\n      )\r\n        modPipelineHeader.OuterDiameterUOM = null;\r\n\r\n      if (\r\n        modPipelineHeader.WallThickness === null ||\r\n        modPipelineHeader.WallThickness === \"\"\r\n      )\r\n        modPipelineHeader.WallThicknessUOM = null;\r\n\r\n      if (\r\n        modPipelineHeader.TypicalFlowRatePerHour === null ||\r\n        modPipelineHeader.TypicalFlowRatePerHour === \"\"\r\n      )\r\n        modPipelineHeader.FlowRateUOM = null;\r\n\r\n      this.setState({ modPipelineHeader });\r\n      return modPipelineHeader;\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on fillDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  validateSave(modPipelineHeader, attributeList) {\r\n    try {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      Object.keys(pipelineHeaderValidationDef).forEach(function (key) {\r\n        if (modPipelineHeader[key] !== undefined)\r\n          validationErrors[key] = Utilities.validateField(\r\n            pipelineHeaderValidationDef[key],\r\n            modPipelineHeader[key]\r\n          );\r\n      });\r\n\r\n      if (modPipelineHeader.Active !== this.state.pipelineHeader.Active) {\r\n        if (\r\n          modPipelineHeader.Description === null ||\r\n          modPipelineHeader.Description === \"\"\r\n        ) {\r\n          validationErrors[\"Description\"] = \"BaseProductInfo_EnterRemarks\";\r\n        }\r\n      }\r\n\r\n      if (\r\n        modPipelineHeader.OuterDiameter !== null &&\r\n        modPipelineHeader.OuterDiameter !== \"\"\r\n      ) {\r\n        if (\r\n          modPipelineHeader.OuterDiameterUOM === null ||\r\n          modPipelineHeader.OuterDiameterUOM === \"\"\r\n        ) {\r\n          validationErrors[\"OuterDiameterUOM\"] = \"PipelineHeader_UOM_Required\";\r\n        }\r\n      }\r\n      if (\r\n        modPipelineHeader.WallThickness !== null &&\r\n        modPipelineHeader.WallThickness !== \"\"\r\n      ) {\r\n        if (\r\n          modPipelineHeader.WallThicknessUOM === null ||\r\n          modPipelineHeader.WallThicknessUOM === \"\"\r\n        ) {\r\n          validationErrors[\"WallThicknessUOM\"] = \"PipelineHeader_UOM_Required\";\r\n        }\r\n      }\r\n      if (\r\n        modPipelineHeader.TypicalFlowRatePerHour !== null &&\r\n        modPipelineHeader.TypicalFlowRatePerHour !== \"\"\r\n      ) {\r\n        if (\r\n          modPipelineHeader.FlowRateUOM === null ||\r\n          modPipelineHeader.FlowRateUOM === \"\"\r\n        ) {\r\n          validationErrors[\"FlowRateUOM\"] = \"PipelineHeader_UOM_Required\";\r\n        }\r\n      }\r\n\r\n      var attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeList.forEach((attribute) => {\r\n        attributeValidationErrors.forEach((attributeValidation) => {\r\n          if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n            attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n              attributeValidation.attributeValidationErrors[\r\n                attributeMetaData.Code\r\n              ] = Utilities.valiateAttributeField(\r\n                attributeMetaData,\r\n                attributeMetaData.DefaultValue\r\n              );\r\n            });\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({ validationErrors, attributeValidationErrors });\r\n\r\n      var returnValue = true;\r\n      attributeValidationErrors.forEach((x) => {\r\n        if (returnValue) {\r\n          returnValue = Object.values(x.attributeValidationErrors).every(\r\n            function (value) {\r\n              return value === \"\";\r\n            }\r\n          );\r\n        } else {\r\n          return returnValue;\r\n        }\r\n      });\r\n\r\n      if (returnValue)\r\n        returnValue = Object.values(validationErrors).every(function (value) {\r\n          return value === \"\";\r\n        });\r\n\r\n      return returnValue;\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on validateSave\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  convertStringtoDecimal(modPipelineHeader, attributeList) {\r\n    try {\r\n      if (\r\n        modPipelineHeader.OuterDiameter !== null &&\r\n        modPipelineHeader.OuterDiameter !== \"\"\r\n      ) {\r\n        modPipelineHeader.OuterDiameter = Utilities.convertStringtoDecimal(\r\n          modPipelineHeader.OuterDiameter\r\n        );\r\n      }\r\n      if (\r\n        modPipelineHeader.WallThickness !== null &&\r\n        modPipelineHeader.WallThickness !== \"\"\r\n      ) {\r\n        modPipelineHeader.WallThickness = Utilities.convertStringtoDecimal(\r\n          modPipelineHeader.WallThickness\r\n        );\r\n      }\r\n      if (\r\n        modPipelineHeader.TypicalFlowRatePerHour !== null &&\r\n        modPipelineHeader.TypicalFlowRatePerHour !== \"\"\r\n      ) {\r\n        modPipelineHeader.TypicalFlowRatePerHour =\r\n          Utilities.convertStringtoDecimal(\r\n            modPipelineHeader.TypicalFlowRatePerHour\r\n          );\r\n      }\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modPipelineHeader.Attributes =\r\n        Utilities.fillAttributeDetails(attributeList);\r\n      return modPipelineHeader;\r\n    } catch (error) {\r\n      console.log(\"convertStringtoDecimal error Pipline Header Details\", error);\r\n    }\r\n  }\r\n\r\n  createPipelineHeader(modPipelineHeader) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.pipelineHeaderCode,\r\n        value: modPipelineHeader.Code,\r\n      },\r\n    ];\r\n    let obj = {\r\n      keyDataCode: KeyCodes.pipelineHeaderCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modPipelineHeader,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"PipeLineHeaderInfo_AddUpdateStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"PipeLineHeaderInfo_Code\"],\r\n          keyValues: [modPipelineHeader.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.CreatePipelineHeader,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnPipelineHeaderSiteView\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () =>\r\n              this.getPipelineHeader({ Common_Code: modPipelineHeader.Code })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnPipelineHeaderSiteView\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in createPipelineHeader:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(this.state.modPipelineHeader, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnPipelineHeaderSiteView\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modPipelineHeader, \"add\", notification);\r\n      });\r\n  }\r\n  updatePipelineHeader(modPipelineHeader) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.pipelineHeaderCode,\r\n        value: modPipelineHeader.Code,\r\n      },\r\n    ];\r\n    let obj = {\r\n      keyDataCode: KeyCodes.pipelineHeaderCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modPipelineHeader,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"PipeLineHeaderInfo_AddUpdateStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"PipeLineHeaderInfo_Code\"],\r\n          keyValues: [modPipelineHeader.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.UpdatePipelineHeader,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnPipelineHeaderSiteView\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () =>\r\n              this.getPipelineHeader({ Common_Code: modPipelineHeader.Code })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnPipelineHeaderSiteView\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in update PipelineHeader:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(\r\n          this.state.modPipelineHeader,\r\n          \"update\",\r\n          notification\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnPipelineHeaderSiteView\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(\r\n          this.state.modPipelineHeader,\r\n          \"modify\",\r\n          notification\r\n        );\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const { validationErrors } = { ...this.state };\r\n      const pipelineHeader = lodash.cloneDeep(this.state.pipelineHeader);\r\n\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState(\r\n        {\r\n          modPipelineHeader: { ...pipelineHeader },\r\n          selectedCompRow: [],\r\n          validationErrors,\r\n          modAttributeMetaDataList: [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange([this.props.selectedTerminal]);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList) &&\r\n        attributeMetaDataList.length > 0\r\n      ) {\r\n        this.terminalSelectionChange([attributeMetaDataList[0].TerminalCode]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals !== undefined && selectedTerminals !== null) {\r\n        let attributesTerminalsList = [];\r\n        var attributeMetaDataList = [];\r\n        var modAttributeMetaDataList = [];\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        modAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.modAttributeMetaDataList\r\n        );\r\n        const attributeValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeValidationErrors\r\n        );\r\n        var modPipelineHeader = lodash.cloneDeep(this.state.modPipelineHeader);\r\n\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          });\r\n\r\n          if (existitem === undefined) {\r\n            attributeMetaDataList.forEach(function (attributeMetaData) {\r\n              if (attributeMetaData.TerminalCode === terminal) {\r\n                var Attributevalue = modPipelineHeader.Attributes.find(\r\n                  (baseproductAttribute) => {\r\n                    return baseproductAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n                attributesTerminalsList.push(attributeMetaData);\r\n              }\r\n            });\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n        modAttributeMetaDataList = [];\r\n        modAttributeMetaDataList = attributesTerminalsList;\r\n        modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n          modAttributeMetaDataList\r\n        );\r\n        attributeValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n              (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n        this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors, modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(attributeMetaDataList),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      pipelineHeaderTypeOptions: this.state.pipelineHeaderTypeOptions,\r\n      volumeUOMOptions: this.state.volumeUOMOptions,\r\n      lengthUOMOptions: this.state.lengthUOMOptions,\r\n      pipelineMeterList: this.state.pipelineMeterList,\r\n    };\r\n\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"PipeLineHeaderInfo_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modPipelineHeader.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modPipelineHeader.LastUpdatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"PipeLineHeaderInfo_CreatedTime\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modPipelineHeader.CreatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modPipelineHeader.CreatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"PipeLineHeaderInfo_LastActive\",\r\n        fieldValue:\r\n          this.state.modPipelineHeader.LastActive !== undefined &&\r\n          this.state.modPipelineHeader.LastActive !== null\r\n            ? new Date(\r\n                this.state.modPipelineHeader.LastActive\r\n              ).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(\r\n                this.state.modPipelineHeader.LastActive\r\n              ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n    ];\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.pipelineHeader.Code}\r\n            newEntityName={\"PipeLineHeaderInfo_NewPipeLineHeader\"}\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <PipelineHeaderSiteViewDetails\r\n            pipelineHeader={this.state.pipelineHeader}\r\n            modPipelineHeader={this.state.modPipelineHeader}\r\n            listOptions={listOptions}\r\n            validationErrors={this.state.validationErrors}\r\n            onFieldChange={this.handleChange}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            onAttributeDataChange={this.handleAttributeDataChange}\r\n          ></PipelineHeaderSiteViewDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.pipelineHeader.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnPipelineHeaderSiteView}\r\n            handleOperation={this.savePipelineHeader}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PipelineHeaderSiteViewDetailsComposite);\r\n\r\nPipelineHeaderSiteViewDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  selectedTerminal: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["PipelineHeaderSiteViewDetails","_ref","pipelineHeader","modPipelineHeader","validationErrors","onFieldChange","onActiveStatusChange","listOptions","modAttributeMetaDataList","attributeValidationErrors","onAttributeDataChange","isEnterpriseNode","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","_jsx","TranslationConsumer","children","t","_jsxs","className","Input","fluid","value","Code","indicator","disabled","onChange","data","label","error","reserveSpace","Name","Select","placeholder","PipelineHeaderType","options","pipelineHeaderTypeOptions","search","noResultsMessage","PointName","OuterDiameter","OuterDiameterUOM","lengthUOMOptions","WallThickness","WallThicknessUOM","TypicalFlowRatePerHour","FlowRateUOM","volumeUOMOptions","AssociatedMeterCodes","pipelineMeterList","multiple","Active","text","Description","length","map","attribute","ErrorBoundary","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","handleCellDataEdit","defaultProps","PipelineHeaderSiteViewDetailsComposite","Component","constructor","arguments","state","lodash","emptyPipelineHeader","Utilities","pipelineHeaderValidationDef","isReadyToRender","saveEnabled","showAuthenticationLayout","tempPipelineHeader","handleChange","propertyName","this","setState","undefined","console","log","handleActiveStatusChange","savePipelineHeader","createPipelineHeader","updatePipelineHeader","handleSave","fillDetails","attributeList","validateSave","convertStringtoDecimal","props","userDetails","EntityResult","IsWebPortalUser","handleReset","Object","keys","forEach","key","selectedCompRow","IsEnterpriseNode","terminalSelectionChange","selectedTerminal","handleResetAttributeValidationError","localNodeAttribute","handleAttributeDataChange","matchedAttributes","matchedAttributesList","filter","modattribute","Array","isArray","DefaultValue","handleAuthenticationClose","componentDidMount","IsArchived","getAttributes","selectedRow","getPipelineHeaderType","getUOMList","getMeterList","componentWillReceiveProps","nextProps","Common_Code","tokenDetails","tokenInfo","pipelineHeaderRow","axios","RestAPIs","pipelineHeaderAttributeEntity","then","response","result","IsSuccess","PIPELINEHEADER","getPipelineHeader","keyCode","KeyCodes","obj","keyDataCode","FunctionsList","functionGroups","modify","fnPipelineHeaderSiteView","ErrorList","catch","add","push","flowrateVolumeUOMs","FLOWRATE_VOLUME","flowrateMassUOMs","FLOWRATE_MASS","volumeOption","massOption","lengthUOMs","LENGTH","lengthOption","toLocaleString","attributeMetaData","returnValue","x","values","every","Attributes","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","selectedTerminals","attributesTerminalsList","existitem","Attributevalue","baseproductAttribute","valueAttribute","ListOfAttributeData","AttributeCode","AttributeValue","render","popUpContents","fieldName","fieldValue","Date","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","CreatedTime","LastActive","TMDetailsHeader","entityCode","newEntityName","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","style","margin","Popup","element","Icon","marginLeft","root","name","size","position","List","content","Button","onClick","float","handleAttributeDateValue","convertAttributeDatetoString","chars","split","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","Constants","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","Checkbox","checked","toString","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","getOptionsWithSelect","ddlOptions","selectOptionText","option","unshift","language","window","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}