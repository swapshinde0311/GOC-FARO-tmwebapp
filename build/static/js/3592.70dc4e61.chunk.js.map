{"version":3,"file":"static/js/3592.70dc4e61.chunk.js","mappings":"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","sources":["Components/Composite/Common/TMDetailsKPILayout.jsx","Components/UIBase/Details/RailWagonDetails.jsx","Components/Composite/Details/RailWagonDetailsComposite.jsx","Components/UIBase/Common/AssociatedTerminals.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/DateFieldsInEntities.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nexport default function TMDetailsKPILayout({\r\n    KPIList,\r\n    pageName,\r\n    rowHeight,\r\n    widgetHeight,\r\n    isDraggable,\r\n    isResizable,\r\n    kpiDisplayTopBreakpoint\r\n}) {\r\n    const [KPIDisplays, setKPIDisplays] = useState(1);\r\n\r\n    const kpiDiv = React.useRef(null);\r\n\r\n    const hideKpis = () => {\r\n        let currentScrollPos = window.pageYOffset;\r\n        let KPIDisplay = KPIDisplays;\r\n\r\n        // hide kpis based on div position to top of the window \r\n        if (kpiDiv.current && kpiDiv.current.getBoundingClientRect().top < kpiDisplayTopBreakpoint) {\r\n            KPIDisplay = 0;\r\n        }\r\n        // show the kpis once at top of the screen\r\n        else if (currentScrollPos === 0) {\r\n            KPIDisplay = 1\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n        setKPIDisplays(KPIDisplay);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\") {\r\n            window.addEventListener(\"scroll\", hideKpis);\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // remove listener on unmount\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", hideKpis)\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={kpiDiv}>\r\n            {KPIDisplays === 1 ? <TranslationConsumer>\r\n                {(t) => (\r\n                    <div style={{ marginTop: \"6px\" }}>\r\n                        <ErrorBoundary>\r\n                            <KPIDashboardLayout\r\n                                kpiList={KPIList}\r\n                                isDraggable={isDraggable}\r\n                                isResizable={isResizable}\r\n                                rowHeight={rowHeight}\r\n                                widgetHeight={widgetHeight}\r\n                                pageName={pageName}\r\n                            ></KPIDashboardLayout>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n                )}\r\n            </TranslationConsumer> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nTMDetailsKPILayout.propTypes = {\r\n    kpiDisplayTopBreakpoint: PropTypes.number\r\n}\r\n\r\nTMDetailsKPILayout.defaultProps = {\r\n    kpiDisplayTopBreakpoint: 100\r\n}","import React from \"react\";\r\nimport { DatePicker, Input, Select, Checkbox, Accordion } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\n\r\nRailWagonDetails.propTypes = {\r\n  railWagon: PropTypes.object.isRequired,\r\n  modRailWagon: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    shareholders: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    carrierCompanyOptions: PropTypes.array,\r\n    railWagonCategoryOptions: PropTypes.array,\r\n    productTypeOptions: PropTypes.array,\r\n    loadingTypeOptiongs: PropTypes.array,\r\n    volumeUOMOptions: PropTypes.array,\r\n    weightUOMOptions: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCheckChange: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  modAttributeMetaDataList: PropTypes.array.isRequired,\r\n  attributeValidationErrors: PropTypes.array.isRequired,\r\n  onAttributeDataChange: PropTypes.func.isRequired,\r\n};\r\n\r\nRailWagonDetails.defaultProps = {\r\n  isEnterpriseNode: false,\r\n};\r\n\r\nexport function RailWagonDetails({\r\n  railWagon,\r\n  modRailWagon,\r\n  validationErrors,\r\n  listOptions,\r\n  onFieldChange,\r\n  onCheckChange,\r\n  onAllTerminalsChange,\r\n  isEnterpriseNode,\r\n  modAttributeMetaDataList,\r\n  attributeValidationErrors,\r\n  onAttributeDataChange,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modRailWagon.Code}\r\n                indicator=\"required\"\r\n                disabled={railWagon.Code !== \"\"}\r\n                onChange={(data) => onFieldChange(\"Code\", data)}\r\n                label={t(\"RailWagonConfigurationDetails_RailWagonCode\")}\r\n                error={t(validationErrors.Code)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modRailWagon.Name}\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"Name\", data)}\r\n                label={t(\"RailWagonConfigurationDetails_RailWagonName\")}\r\n                error={t(validationErrors.Name)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modRailWagon.Description}\r\n                onChange={(data) => onFieldChange(\"Description\", data)}\r\n                label={t(\"RailWagonConfigurationDetails_Description\")}\r\n                error={t(validationErrors.Description)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"RailWagonConfigurationDetails_Select\")}\r\n                indicator=\"required\"\r\n                value={modRailWagon.CarrierCompanyCode}\r\n                options={listOptions.carrierCompanyOptions}\r\n                onChange={(data) => onFieldChange(\"CarrierCompanyCode\", data)}\r\n                label={t(\"RailWagonConfigurationDetails_CarrierCompany\")}\r\n                error={t(validationErrors.CarrierCompanyCode)}\r\n                disabled={railWagon.Code !== \"\"}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"RailWagonConfigurationDetails_Select\")}\r\n                indicator=\"required\"\r\n                value={modRailWagon.RailWagonCategory}\r\n                options={listOptions.railWagonCategoryOptions}\r\n                onChange={(data) => onFieldChange(\"RailWagonCategory\", data)}\r\n                label={t(\"RailWagonConfigurationDetails_RailWagonCategory\")}\r\n                error={t(validationErrors.RailWagonCategory)}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"RailWagonConfigurationDetails_Select\")}\r\n                indicator=\"required\"\r\n                value={modRailWagon.ProductType}\r\n                options={listOptions.productTypeOptions}\r\n                onChange={(data) => onFieldChange(\"ProductType\", data)}\r\n                label={t(\"RailWagonConfigurationDetails_ProductType\")}\r\n                error={t(validationErrors.ProductType)}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"RailWagonConfigurationDetails_Select\")}\r\n                indicator=\"required\"\r\n                value={modRailWagon.LoadingType}\r\n                options={listOptions.loadingTypeOptiongs}\r\n                onChange={(data) => onFieldChange(\"LoadingType\", data)}\r\n                label={t(\"RailWagonConfigurationDetails_LoadingType\")}\r\n                error={t(validationErrors.LoadingType)}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modRailWagon.NoOfSeals === null\r\n                    ? \"\"\r\n                    : modRailWagon.NoOfSeals.toLocaleString()\r\n                }\r\n                onChange={(data) => onFieldChange(\"NoOfSeals\", data)}\r\n                label={t(\"Trailer_NoOfSeals\")}\r\n                error={t(validationErrors.NoOfSeals)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                value={\r\n                  modRailWagon.LicenseExpiryDate === null\r\n                    ? \"\"\r\n                    : Utilities.convertStringToCommonDateFormat(\r\n                        modRailWagon.LicenseExpiryDate\r\n                      )\r\n                }\r\n                label={t(\"RailWagonConfigurationDetails_LicenseExpiryDate\")}\r\n                type=\"date\"\r\n                disablePast={true}\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"LicenseExpiryDate\", data)}\r\n                displayFormat={getCurrentDateFormat()}\r\n                error={t(validationErrors.LicenseExpiryDate)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                indicator=\"required\"\r\n                value={\r\n                  modRailWagon.TareWeight === null\r\n                    ? \"0\"\r\n                    : modRailWagon.TareWeight\r\n                }\r\n                onChange={(data) => onFieldChange(\"TareWeight\", data)}\r\n                label={t(\"RailWagonConfigurationDetails_TareWeight\")}\r\n                error={t(validationErrors.TareWeight)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modRailWagon.MaxLoadableVolume === null\r\n                    ? \"\"\r\n                    : modRailWagon.MaxLoadableVolume\r\n                }\r\n                label={t(\"RailWagonConfigurationDetails_MaxSFL\")}\r\n                disabled={true}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                indicator=\"required\"\r\n                value={\r\n                  modRailWagon.MaxLoadableWeight === null\r\n                    ? \"\"\r\n                    : modRailWagon.MaxLoadableWeight\r\n                }\r\n                onChange={(data) => onFieldChange(\"MaxLoadableWeight\", data)}\r\n                label={t(\"RailWagonConfigurationDetails_MaxLoadableWeight\")}\r\n                error={t(validationErrors.MaxLoadableWeight)}\r\n                disabled={railWagon.Code ? true : false}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"RailWagonConfigurationDetails_Select\")}\r\n                value={modRailWagon.VolumeUOM}\r\n                options={listOptions.volumeUOMOptions}\r\n                onChange={(data) => onFieldChange(\"VolumeUOM\", data)}\r\n                label={t(\"RailWagonConfigurationDetails_UnitOfMeasure\")}\r\n                error={t(validationErrors.VolumeUOM)}\r\n                disabled={true}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                indicator=\"required\"\r\n                placeholder={t(\"RailWagonConfigurationDetails_Select\")}\r\n                value={modRailWagon.WeightUOM}\r\n                options={listOptions.weightUOMOptions}\r\n                onChange={(data) => onFieldChange(\"WeightUOM\", data)}\r\n                label={t(\"RailWagonConfigurationDetails_UnitforWeight\")}\r\n                error={t(validationErrors.WeightUOM)}\r\n                disabled={true}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4 checkboxSelect\">\r\n              <Checkbox\r\n                label={t(\"RailWagonConfigurationDetails_OnSite\")}\r\n                checked={modRailWagon.InUse}\r\n                onChange={(checked) => onCheckChange(\"InUse\", checked)}\r\n                disabled={true}\r\n              ></Checkbox>\r\n              <Checkbox\r\n                label={t(\"RailWagonConfigurationDetails_Crippled\")}\r\n                checked={modRailWagon.Crippled}\r\n                onChange={(checked) => onCheckChange(\"Crippled\", checked)}\r\n                disabled={railWagon.Code ? false : true}\r\n              ></Checkbox>\r\n              <Checkbox\r\n                label={t(\"RailWagonConfigurationDetails_Abandoned\")}\r\n                checked={modRailWagon.Abandoned}\r\n                onChange={(checked) => onCheckChange(\"Abandoned\", checked)}\r\n                disabled={true}\r\n              ></Checkbox>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modRailWagon.RemarksForCripple}\r\n                onChange={(data) => onFieldChange(\"RemarksForCripple\", data)}\r\n                label={t(\"RailWagonConfigurationDetails_RemarksForCripple\")}\r\n                indicator={modRailWagon.Crippled ? \"required\" : \"\"}\r\n                error={t(validationErrors.RemarksForCripple)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"RailWagonConfigurationDetails_Select\")}\r\n                label={t(\"Cust_Status\")}\r\n                value={modRailWagon.Active}\r\n                options={[\r\n                  {\r\n                    text: t(\"RailWagonConfigurationDetails_Active\"),\r\n                    value: true,\r\n                  },\r\n                  {\r\n                    text: t(\"RailWagonConfigurationDetails_Inactive\"),\r\n                    value: false,\r\n                  },\r\n                ]}\r\n                onChange={(data) => onFieldChange(\"Active\", data)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modRailWagon.Remarks}\r\n                label={t(\"Cust_Remarks\")}\r\n                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                indicator={\r\n                  modRailWagon.Active !== railWagon.Active ? \"required\" : \"\"\r\n                }\r\n                error={t(validationErrors.Remarks)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            {isEnterpriseNode ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <AssociatedTerminals\r\n                  terminalList={listOptions.terminalCodes}\r\n                  selectedTerminal={modRailWagon.TerminalCodes}\r\n                  error={validationErrors.TerminalCodes}\r\n                  onFieldChange={onFieldChange}\r\n                  onCheckChange={onAllTerminalsChange}\r\n                ></AssociatedTerminals>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"col-12 col-md-12 col-lg-12\">\r\n              {modAttributeMetaDataList.length > 0\r\n                ? modAttributeMetaDataList.map((attribute) => (\r\n                    <ErrorBoundary>\r\n                      <Accordion>\r\n                        <Accordion.Content\r\n                          className=\"attributeAccordian\"\r\n                          title={\r\n                            isEnterpriseNode\r\n                              ? attribute.TerminalCode +\r\n                                \" - \" +\r\n                                t(\"Attributes_Header\")\r\n                              : t(\"Attributes_Header\")\r\n                          }\r\n                        >\r\n                          <AttributeDetails\r\n                            selectedAttributeList={\r\n                              attribute.attributeMetaDataList\r\n                            }\r\n                            handleCellDataEdit={onAttributeDataChange}\r\n                            attributeValidationErrors={handleValidationErrorFilter(\r\n                              attributeValidationErrors,\r\n                              attribute.TerminalCode\r\n                            )}\r\n                          ></AttributeDetails>\r\n                        </Accordion.Content>\r\n                      </Accordion>\r\n                    </ErrorBoundary>\r\n                  ))\r\n                : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { RailWagonDetails } from \"../../UIBase/Details/RailWagonDetails\";\r\n\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { railWagonValidationDef } from \"../../../JS/ValidationDef\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { emptyRailWagon } from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"./../../../Components/ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"./../../../JS/KeyCodes\";\r\nimport { functionGroups, fnRailWagon, fnKPIInformation } from \"../../../JS/FunctionGroups\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { railWagonAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport * as DateFieldsInEntities from \"../../../JS/DateFieldsInEntities\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { kpiRailWagonDetail } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass RailWagonDetailsComposite extends Component {\r\n  state = {\r\n    railWagon: lodash.cloneDeep(emptyRailWagon),\r\n    modRailWagon: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      railWagonValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    shareholders: this.getShareholders(),\r\n    carrierCompanyOptions: [],\r\n    railWagonCategoryOptions: [],\r\n    productTypeOptions: [],\r\n    loadingTypeOptiongs: [],\r\n    volumeUOMOptions: [],\r\n    weightUOMOptions: [],\r\n    saveEnabled: false,\r\n    attributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    railWagonKPIList: [],\r\n    showAuthenticationLayout: false,\r\n    tempRailWagon: {},\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.railWagon.Code !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined\r\n      )\r\n        this.getRailWagon(nextProps.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailWagonDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getLookUpData();\r\n      this.getCarrierCompany();\r\n      this.getRailWagonCategory();\r\n      this.getLoadingTypes();\r\n      this.getProductTypes();\r\n      this.getUoms();\r\n      this.getAttributes(this.props.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailWagonDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getCarrierCompany() {\r\n    axios(\r\n      RestAPIs.GetCarrierCodes +\r\n      \"?ShareholderCode=\" +\r\n      \"&Transportationtype=\" +\r\n      Constants.TransportationType.RAIL,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult) &&\r\n            result.EntityResult.length > 0\r\n          ) {\r\n            let carrierCompanyOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ carrierCompanyOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetCarrierList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Carrier List:\", error);\r\n      });\r\n  }\r\n\r\n  getRailWagonCategory() {\r\n    axios(\r\n      RestAPIs.GetRailWagonCategory,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let railWagonCategoryOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ railWagonCategoryOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getRailWagonCategory:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getRailWagonCategory:\", error);\r\n      });\r\n  }\r\n\r\n  getProductTypes() {\r\n    axios(\r\n      RestAPIs.GetProductType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let productTypeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ productTypeOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getProductTypes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getProductTypes:\", error);\r\n      });\r\n  }\r\n\r\n  getLoadingTypes() {\r\n    axios(\r\n      RestAPIs.GetLoadingType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let loadingTypeOptiongs = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ loadingTypeOptiongs });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getLoadingTypes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getLoadingTypes:\", error);\r\n      });\r\n  }\r\n\r\n  getUoms() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let volumeUOMOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult.VOLUME\r\n            );\r\n            let weightUOMOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult.MASS\r\n            );\r\n            this.setState({ volumeUOMOptions, weightUOMOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in GetUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getAttributes(selectedRow) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [railWagonAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.railwagon\r\n                ),\r\n            },\r\n            () => this.getRailWagon(selectedRow)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals !== undefined && selectedTerminals !== null) {\r\n        let attributesTerminalsList = [];\r\n        var attributeMetaDataList = [];\r\n        var modAttributeMetaDataList = [];\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        modAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.modAttributeMetaDataList\r\n        );\r\n        const attributeValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeValidationErrors\r\n        );\r\n        var modRailWagon = lodash.cloneDeep(this.state.modRailWagon);\r\n\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          });\r\n\r\n          if (existitem === undefined) {\r\n            attributeMetaDataList.railwagon.forEach(function (\r\n              attributeMetaData\r\n            ) {\r\n              if (attributeMetaData.TerminalCode === terminal) {\r\n                var Attributevalue = modRailWagon.Attributes.find(\r\n                  (baseproductAttribute) => {\r\n                    return baseproductAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n                attributesTerminalsList.push(attributeMetaData);\r\n              }\r\n            });\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n        modAttributeMetaDataList = [];\r\n        modAttributeMetaDataList = attributesTerminalsList;\r\n        modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n          modAttributeMetaDataList\r\n        );\r\n        attributeValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n              (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n        this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailWagonDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList.railwagon) &&\r\n        attributeMetaDataList.railwagon.length > 0\r\n      ) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.railwagon[0].TerminalCode,\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailWagonDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getLookUpData() {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=Rail\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result !== undefined &&\r\n          result !== null &&\r\n          result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== undefined &&\r\n            result.EntityResult !== null\r\n          ) {\r\n            emptyRailWagon.VolumeUOM = result.EntityResult.VolumeUOM;\r\n            emptyRailWagon.WeightUOM = result.EntityResult.WeightUOM;\r\n            this.setState({\r\n              railWagon: lodash.cloneDeep(emptyRailWagon),\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getLookUpData: \", result ? result.ErrorList : \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"RailWagonDetailsComposite: Error occurred on getLookUpData\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getRailWagon(selectedRow) {\r\n    var transportationType = this.getTransportationType();\r\n    emptyRailWagon.TransportationType = transportationType;\r\n    emptyRailWagon.ShareholderCode =\r\n      this.props.userDetails.EntityResult.PrimaryShareholder;\r\n    emptyRailWagon.TrailerType = Constants.TrailerType.RAILWAGON;\r\n    // emptyRailWagon.VolumeUOM =\r\n    //   this.props.userDetails.EntityResult.PageAttibutes.DefaultUOMS.QuantityUOM;\r\n    // emptyRailWagon.WeightUOM =\r\n    //   this.props.userDetails.EntityResult.PageAttibutes.DefaultUOMS.MassUOM;\r\n    emptyRailWagon.TareWeight = 0;\r\n    emptyRailWagon.MaxLoadableVolume = 0;\r\n    emptyRailWagon.MaxLoadableWeight = 0;\r\n\r\n    if (selectedRow.Common_Code === undefined) {\r\n      this.setState(\r\n        {\r\n          railWagon: { ...emptyRailWagon },\r\n          modRailWagon: { ...emptyRailWagon },\r\n          isReadyToRender: true,\r\n          modAttributeMetaDataList: [],\r\n          railWagonKPIList: [],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnRailWagon\r\n          ),\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode === false)\r\n            this.localNodeAttribute();\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.trailerCode,\r\n        value: selectedRow.Common_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: transportationType,\r\n      },\r\n      {\r\n        key: KeyCodes.carrierCode,\r\n        value: selectedRow.Vehicle_CarrierCompany,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.trailerCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailWagon,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          // this.getTerminalsList(\r\n          //     transportationType === Constants.TransportationType.RAIL\r\n          //         ? [result.EntityResult.ShareholderCode]\r\n          //         : result.EntityResult.ShareholderCodes\r\n          // );\r\n          result.EntityResult.TareWeight =\r\n            result.EntityResult.TareWeight.toLocaleString();\r\n          result.EntityResult.MaxLoadableVolume =\r\n            result.EntityResult.MaxLoadableVolume.toLocaleString();\r\n          result.EntityResult.MaxLoadableWeight =\r\n            result.EntityResult.MaxLoadableWeight.toLocaleString();\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              railWagon: lodash.cloneDeep(result.EntityResult),\r\n              modRailWagon: lodash.cloneDeep(result.EntityResult),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnRailWagon\r\n              ),\r\n            },\r\n            () => {\r\n              this.getKPIList(result.EntityResult.Code);\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            railWagon: lodash.cloneDeep(emptyRailWagon),\r\n            modRailWagon: lodash.cloneDeep(emptyRailWagon),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetRailWagon:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting railWagon:\", error);\r\n      });\r\n  }\r\n\r\n  getRailWagonCategoryDetails(railWagonCategoryCode, productType) {\r\n    axios(\r\n      RestAPIs.GetRailWagonCategoryDetails +\r\n      \"?RailWagonCategoryCode=\" +\r\n      railWagonCategoryCode +\r\n      \"&ProductType=\" +\r\n      productType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let modRailWagon = lodash.cloneDeep(this.state.modRailWagon);\r\n            modRailWagon.MaxLoadableVolume = Utilities.convertStringtoDecimal(\r\n              result.EntityResult.MaxLoadableVolume\r\n            ).toLocaleString();\r\n            modRailWagon.MaxLoadableWeight = Utilities.convertStringtoDecimal(\r\n              result.EntityResult.MaxLoadableWeight\r\n            ).toLocaleString();\r\n            this.setState({ modRailWagon });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getRailWagonCategory:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getRailWagonCategory:\", error);\r\n      });\r\n  }\r\n\r\n  getTransportationType() {\r\n    var transportationType = Constants.TransportationType.RAIL;\r\n    const { genericProps } = this.props;\r\n    if (\r\n      genericProps !== undefined &&\r\n      genericProps.transportationType !== undefined\r\n    ) {\r\n      transportationType = genericProps.transportationType;\r\n    }\r\n    return transportationType;\r\n  }\r\n\r\n  getShareholders() {\r\n    return Utilities.transferListtoOptions(\r\n      this.props.userDetails.EntityResult.ShareholderList\r\n    );\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modRailWagon = lodash.cloneDeep(this.state.modRailWagon);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n\r\n      if (propertyName === \"Active\") {\r\n        if (data !== this.state.railWagon.Active) modRailWagon.Remarks = \"\";\r\n      }\r\n      modRailWagon[propertyName] = data;\r\n      this.setState({ modRailWagon });\r\n      if (\r\n        (propertyName === \"RailWagonCategory\" ||\r\n          propertyName === \"ProductType\") &&\r\n        modRailWagon.RailWagonCategory !== \"\" &&\r\n        modRailWagon.ProductType !== \"\"\r\n      ) {\r\n        this.getRailWagonCategoryDetails(\r\n          modRailWagon.RailWagonCategory,\r\n          modRailWagon.ProductType\r\n        );\r\n      }\r\n      if (railWagonValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          railWagonValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n      if (propertyName === \"TerminalCodes\") {\r\n        this.terminalSelectionChange(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailWagonDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCheckChange = (propertyName, checked) => {\r\n    try {\r\n      let modRailWagon = lodash.cloneDeep(this.state.modRailWagon);\r\n      if (propertyName === \"Crippled\") {\r\n        if (modRailWagon.Crippled !== this.state.railWagon.Crippled)\r\n          modRailWagon.RemarksForCripple = \"\";\r\n      }\r\n      modRailWagon[propertyName] = checked;\r\n      this.setState({ modRailWagon });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailWagonDetailsComposite:Error occured on handleCheckChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      var { validationErrors } = { ...this.state.validationErrors };\r\n      var modRailWagon = lodash.cloneDeep(this.state.modRailWagon);\r\n      validationErrors[propertyName] = error;\r\n      modRailWagon[propertyName] = value;\r\n      this.setState({ validationErrors, modRailWagon: modRailWagon });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailWagonDetailsComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleshareholderChange = (shareholderList) => {\r\n    try {\r\n      this.getTerminalsList(shareholderList);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailWagonDetailsComposite:Error occured on handleshareholderChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      let modRailWagon = lodash.cloneDeep(this.state.modRailWagon);\r\n      if (checked) modRailWagon.TerminalCodes = [...this.props.terminalCodes];\r\n      else modRailWagon.TerminalCodes = [];\r\n      this.setState({ modRailWagon: modRailWagon });\r\n      this.terminalSelectionChange(modRailWagon.TerminalCodes);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailWagonDetailsComposite:Error occured on handleAllTerminasChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const { validationErrors } = { ...this.state };\r\n      const railWagon = lodash.cloneDeep(this.state.railWagon);\r\n      //var transportationType = this.getTransportationType();\r\n\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState(\r\n        {\r\n          modRailWagon: { ...railWagon },\r\n          validationErrors,\r\n          modAttributeMetaDataList: [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(railWagon.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailWagonDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.railwagon\r\n          ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  saveRailWagon = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempRailWagon = lodash.cloneDeep(this.state.tempRailWagon);\r\n\r\n      this.state.railWagon.Code === \"\"\r\n      ? this.createRailWagon(tempRailWagon)\r\n      : this.updateRailWagon(tempRailWagon);\r\n    } catch (error) {\r\n      console.log(\"RailWagonsComposite : Error in saveRailWagon\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n     // this.setState({ saveEnabled: false });\r\n      let modRailWagon = lodash.cloneDeep(this.state.modRailWagon);\r\n      modRailWagon.TareWeight = Utilities.convertStringtoDecimal(\r\n        modRailWagon.TareWeight\r\n      );\r\n      modRailWagon.MaxLoadableVolume = Utilities.convertStringtoDecimal(\r\n        modRailWagon.MaxLoadableVolume\r\n      );\r\n      modRailWagon.MaxLoadableWeight = Utilities.convertStringtoDecimal(\r\n        modRailWagon.MaxLoadableWeight\r\n      );\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n\r\n      if (this.validateSave(modRailWagon, attributeList)) {\r\n        modRailWagon = this.convertStringtoDecimal(modRailWagon, attributeList);\r\n        modRailWagon = Utilities.convertDatesToString(\r\n          DateFieldsInEntities.DatesInEntity.Wagon,\r\n          modRailWagon\r\n        );\r\n\r\n        let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempRailWagon = lodash.cloneDeep(modRailWagon);\r\n      this.setState({ showAuthenticationLayout, tempRailWagon }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.saveRailWagon();\r\n        }\r\n    });\r\n         \r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailWagonDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateSave(modRailWagon, attributeList) {\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(railWagonValidationDef).forEach(function (key) {\r\n      if (modRailWagon[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          railWagonValidationDef[key],\r\n          modRailWagon[key]\r\n        );\r\n    });\r\n\r\n    if (modRailWagon.Crippled) {\r\n      if (modRailWagon.RemarksForCripple === \"\") {\r\n        validationErrors[\"RemarksForCripple\"] =\r\n          \"RailWagonConfigurationDetails_MandatoryRemarksForCripple\";\r\n      }\r\n    }\r\n    if (modRailWagon.TareWeight >= modRailWagon.MaxLoadableWeight) {\r\n      validationErrors[\"TareWeight\"] = \"TrailerInfo_MaxWtLesser\";\r\n    }\r\n    if (modRailWagon.Active !== this.state.railWagon.Active) {\r\n      if (modRailWagon.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] =\r\n          \"RailWagonConfigurationDetails_RemarkRequired\";\r\n      }\r\n    }\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"RailWagonDetails_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n\r\n    var returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modRailWagon, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  convertStringtoDecimal(modRailWagon, attributeList) {\r\n    try {\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modRailWagon.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n      return modRailWagon;\r\n    } catch (err) {\r\n      console.log(\r\n        \"convertStringtoDecimal error RailWagonDetailsComposite\",\r\n        err\r\n      );\r\n    }\r\n  }\r\n\r\n  createRailWagonCompartments(modRailWagon) {\r\n    modRailWagon.Compartments = [];\r\n    let newComp = {\r\n      Attributes: [],\r\n      Capacity: modRailWagon.MaxLoadableVolume,\r\n      CarrierCompanyCode: modRailWagon.CarrierCompanyCode,\r\n      Code: \"1\",\r\n      CompartmentSeqNoInTrailer: 1,\r\n      CreatedTime: modRailWagon.CreatedTime,\r\n      Description: modRailWagon.Description,\r\n      FRUOM: modRailWagon.VolumeUOM,\r\n      FinishedProductCode: null,\r\n      FlangeNo: null,\r\n      LastUpdatedTime: modRailWagon.LastUpdatedTime,\r\n      LogicMasterCode: null,\r\n      MaxFR: null,\r\n      Name: \"\",\r\n      NoOfSeals: modRailWagon.NoOfSeals,\r\n      ShareholderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      TrailerCode: modRailWagon.Code,\r\n      UOM: modRailWagon.VolumeUOM,\r\n    };\r\n    modRailWagon.Compartments.push(newComp);\r\n    return modRailWagon;\r\n  }\r\n\r\n  createRailWagon(modRailWagon) {\r\n    var keyCode = [\r\n      { key: KeyCodes.trailerCode, value: modRailWagon.Code },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: Constants.TransportationType.RAIL,\r\n      },\r\n      { key: KeyCodes.carrierCode, value: this.state.selectedCarrierCompany },\r\n    ];\r\n\r\n    modRailWagon = this.createRailWagonCompartments(modRailWagon);\r\n    var obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.trailerCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modRailWagon,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"RailWagonDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RailWagonConfigurationDetails_RailWagonCode\"],\r\n          keyValues: [modRailWagon.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateRailWagon,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          // this.setState({\r\n          //     railWagon: lodash.cloneDeep(modRailWagon),\r\n          //     modRailWagon: lodash.cloneDeep(modRailWagon),\r\n          //     saveEnabled: Utilities.isInFunction(\r\n          //         this.props.userDetails.EntityResult.FunctionsList,\r\n          //         functionGroups.modify,\r\n          //         fnRailWagon\r\n          //     ),\r\n          // });\r\n\r\n          this.setState({\r\n            showAuthenticationLayout: false,\r\n          });\r\n\r\n          this.getRailWagon({\r\n            Common_Code: modRailWagon.Code,\r\n            Vehicle_CarrierCompany: modRailWagon.CarrierCompanyCode,\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: true,\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in CreateRailWagon:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modRailWagon, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnRailWagon\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modRailWagon, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateRailWagon(modRailWagon) {\r\n    var keyCode = [\r\n      { key: KeyCodes.trailerCode, value: modRailWagon.Code },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: Constants.TransportationType.RAIL,\r\n      },\r\n      { key: KeyCodes.carrierCode, value: this.state.selectedCarrierCompany },\r\n    ];\r\n\r\n    modRailWagon.Compartments[0].CarrierCompanyCode =\r\n      modRailWagon.CarrierCompanyCode;\r\n\r\n    var obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.trailerCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modRailWagon,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"RailWagonDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RailWagonConfigurationDetails_RailWagonCode\"],\r\n          keyValues: [modRailWagon.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.UpdateRailWagon,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            showAuthenticationLayout: false,\r\n          });\r\n          this.getRailWagon({\r\n            Common_Code: modRailWagon.Code,\r\n            Vehicle_CarrierCompany: modRailWagon.CarrierCompanyCode,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            saveEnabled: true,\r\n            showAuthenticationLayout: false,\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in UpdateRailWagon:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modRailWagon, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modRailWagon, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnRailWagon\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors, modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailWagonDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  //Get KPI for Rail Wagon\r\n  getKPIList(railWagonCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      let objKPIRequestData = {\r\n        PageName: kpiRailWagonDetail,\r\n        InputParameters: [{ key: \"WagonCode\", value: railWagonCode }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              railWagonKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ railWagonKPIList: [] });\r\n            console.log(\"Error in rail wagon KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Rail Wagon KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"RailWagonConfigurationDetails_LastUpdatedTime\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modRailWagon.LastUpdateTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modRailWagon.LastUpdateTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"RailWagonConfigurationDetails_LastActiveTime\",\r\n        fieldValue:\r\n          this.state.modRailWagon.LastActiveTime !== undefined &&\r\n            this.state.modRailWagon.LastActiveTime !== null\r\n            ? new Date(\r\n              this.state.modRailWagon.LastActiveTime\r\n            ).toLocaleDateString() +\r\n            \" \" +\r\n            new Date(\r\n              this.state.modRailWagon.LastActiveTime\r\n            ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"RailWagonConfigurationDetails_CreatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.modRailWagon.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modRailWagon.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.railWagon.Code}\r\n            newEntityName=\"RailWagonConfigurationDetails_NewRailWagon\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <TMDetailsKPILayout KPIList={this.state.railWagonKPIList}> </TMDetailsKPILayout>\r\n        <ErrorBoundary>\r\n          <RailWagonDetails\r\n            railWagon={this.state.railWagon}\r\n            modRailWagon={this.state.modRailWagon}\r\n            validationErrors={this.state.validationErrors}\r\n            listOptions={{\r\n              shareholders: this.state.shareholders,\r\n              terminalCodes: this.props.terminalCodes,\r\n              carrierCompanyOptions: this.state.carrierCompanyOptions,\r\n              railWagonCategoryOptions: this.state.railWagonCategoryOptions,\r\n              productTypeOptions: this.state.productTypeOptions,\r\n              loadingTypeOptiongs: this.state.loadingTypeOptiongs,\r\n              volumeUOMOptions: this.state.volumeUOMOptions,\r\n              weightUOMOptions: this.state.weightUOMOptions,\r\n            }}\r\n            onFieldChange={this.handleChange}\r\n            onCheckChange={this.handleCheckChange}\r\n            onDateTextChange={this.handleDateTextChange}\r\n            onShareholderChange={this.handleshareholderChange}\r\n            onAllTerminalsChange={this.handleAllTerminalsChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            onAttributeDataChange={this.handleAttributeDataChange}\r\n          ></RailWagonDetails>\r\n        </ErrorBoundary>\r\n\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.railWagon.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnRailWagon}\r\n            handleOperation={this.saveRailWagon}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n        \r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nconst mapWagonToProps = (dispatch) => {\r\n  return {\r\n    userActions: bindActionCreators(getUserDetails, dispatch),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapWagonToProps\r\n)(RailWagonDetailsComposite);\r\n\r\nRailWagonDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Select, Checkbox } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nAssociatedTerminals.propTypes = {\r\n  terminalList: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedTerminal: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  validationError: PropTypes.string,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCheckChange: PropTypes.func.isRequired,\r\n};\r\nAssociatedTerminals.defaultProps = {\r\n  terminalList: [],\r\n  selectedTerminal: [],\r\n  validationError: \"\",\r\n};\r\nexport function AssociatedTerminals({\r\n  terminalList,\r\n  selectedTerminal,\r\n  validationError,\r\n  onFieldChange,\r\n  onCheckChange,\r\n}) {\r\n  //console.log(\"component terminalList\", terminalList);\r\n  if (selectedTerminal === null) selectedTerminal = [];\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div style={{ width: \"80%\" }}>\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"TerminalCodes\")}\r\n              value={selectedTerminal}\r\n              multiple={true}\r\n              options={Utilities.transferListtoOptions(terminalList)}\r\n              onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n              error={t(validationError)}\r\n              disabled={terminalList.length === 0}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"ddlSelectAll\">\r\n            <Checkbox\r\n              label={t(\"Common_All\")}\r\n              checked={\r\n                Array.isArray(selectedTerminal) &&\r\n                selectedTerminal.length === terminalList.length\r\n              }\r\n              onChange={(checked) => onCheckChange(checked)}\r\n            ></Checkbox>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","export const DatesInEntity={\r\n    Driver : [\r\n    \"License1ExpiryDate\",\r\n    \"License1IssueDate\",\r\n    \"License2IssueDate\",\r\n    \"License2ExpiryDate\",\r\n    \"License3IssueDate\",\r\n    \"License3ExpiryDate\",\r\n    \"HazardousLicenseExpiry\"\r\n  ],\r\n  CarrierCompany:[\"PermitExpiryDate\"],\r\n  PrimeMover:[\"RoadTaxNoIssueDate\",\"RoadTaxNoExpiryDate\",\"licenseExpiryDate\"],\r\n  Wagon:[\"LicenseExpiryDate\"],\r\n  Vehicle:[\"LicenseNoIssueDate\",\"LicenseNoExpiryDate\",\r\n  \"RoadTaxNoIssueDate\",\"RoadTaxNoExpiryDate\",\"Bondexpirydate\",\"HazardousLicenseExpiry\"],\r\n  Contract:[\"StartDate\",\"EndDate\"],\r\n  ContractItem:[\"StartDate\",\"EndDate\"],\r\n  Order:[\"OrderStartDate\",\"OrderEndDate\",\"OrderDate\",\"DeliveryDate\"],\r\n  AccessCard:[\"ExpiryDate\",\"IssueDate\",\"PasswordExpiryDate\"],\r\n  Trailer:[\"HazardousLicenseExpiry\"],\r\n  };","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMDetailsKPILayout","_ref","KPIList","pageName","rowHeight","widgetHeight","isDraggable","isResizable","kpiDisplayTopBreakpoint","KPIDisplays","setKPIDisplays","useState","kpiDiv","React","hideKpis","currentScrollPos","window","pageYOffset","KPIDisplay","current","getBoundingClientRect","top","useEffect","addEventListener","removeEventListener","_jsx","ref","children","TranslationConsumer","t","style","marginTop","ErrorBoundary","KPIDashboardLayout","kpiList","defaultProps","RailWagonDetails","railWagon","modRailWagon","validationErrors","listOptions","onFieldChange","onCheckChange","onAllTerminalsChange","isEnterpriseNode","modAttributeMetaDataList","attributeValidationErrors","onAttributeDataChange","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","className","_jsxs","Input","fluid","value","Code","indicator","disabled","onChange","data","label","error","reserveSpace","Name","Description","Select","placeholder","CarrierCompanyCode","options","carrierCompanyOptions","noResultsMessage","RailWagonCategory","railWagonCategoryOptions","ProductType","productTypeOptions","LoadingType","loadingTypeOptiongs","NoOfSeals","toLocaleString","DatePicker","LicenseExpiryDate","Utilities","type","disablePast","displayFormat","getCurrentDateFormat","TareWeight","MaxLoadableVolume","MaxLoadableWeight","VolumeUOM","volumeUOMOptions","WeightUOM","weightUOMOptions","Checkbox","checked","InUse","Crippled","Abandoned","RemarksForCripple","Active","text","Remarks","AssociatedTerminals","terminalList","terminalCodes","selectedTerminal","TerminalCodes","length","map","attribute","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","handleCellDataEdit","RailWagonDetailsComposite","Component","constructor","arguments","state","lodash","emptyRailWagon","railWagonValidationDef","isReadyToRender","shareholders","this","getShareholders","saveEnabled","railWagonKPIList","showAuthenticationLayout","tempRailWagon","handleChange","propertyName","setState","getRailWagonCategoryDetails","undefined","terminalSelectionChange","console","log","handleCheckChange","handleDateTextChange","handleshareholderChange","shareholderList","getTerminalsList","handleAllTerminalsChange","props","handleReset","Object","keys","forEach","key","userDetails","EntityResult","IsEnterpriseNode","handleResetAttributeValidationError","localNodeAttribute","saveRailWagon","createRailWagon","updateRailWagon","handleSave","attributeList","validateSave","convertStringtoDecimal","DateFieldsInEntities","Wagon","IsWebPortalUser","handleAttributeDataChange","matchedAttributes","matchedAttributesList","filter","modattribute","Array","isArray","DefaultValue","handleAuthenticationClose","componentWillReceiveProps","nextProps","selectedRow","Common_Code","getRailWagon","componentDidMount","IsArchived","getLookUpData","getCarrierCompany","getRailWagonCategory","getLoadingTypes","getProductTypes","getUoms","getAttributes","axios","RestAPIs","Constants","RAIL","tokenDetails","tokenInfo","then","response","result","IsSuccess","ErrorList","catch","VOLUME","MASS","railWagonAttributeEntity","railwagon","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","Attributes","baseproductAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","push","transportationType","getTransportationType","TransportationType","ShareholderCode","PrimaryShareholder","TrailerType","RAILWAGON","keyCode","KeyCodes","Vehicle_CarrierCompany","obj","ShareHolderCode","selectedShareholder","keyDataCode","FunctionsList","functionGroups","modify","fnRailWagon","getKPIList","add","railWagonCategoryCode","productType","genericProps","ShareholderList","notification","messageType","message","messageResultDetails","returnValue","values","every","onSaved","err","createRailWagonCompartments","Compartments","newComp","Capacity","CompartmentSeqNoInTrailer","CreatedTime","FRUOM","FinishedProductCode","FlangeNo","LastUpdatedTime","LogicMasterCode","MaxFR","TrailerCode","UOM","selectedCarrierCompany","Entity","keyFields","keyValues","isSuccess","errorMessage","railWagonCode","view","fnKPIInformation","objKPIRequestData","PageName","kpiRailWagonDetail","InputParameters","ListKPIDetails","render","popUpContents","fieldName","fieldValue","Date","LastUpdateTime","toLocaleDateString","toLocaleTimeString","LastActiveTime","TMDetailsHeader","entityCode","newEntityName","onDateTextChange","onShareholderChange","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","dispatch","userActions","bindActionCreators","validationError","display","justifyContent","width","multiple","margin","Popup","element","Icon","marginLeft","root","name","size","position","List","content","Button","onClick","float","handleAttributeDateValue","convertAttributeDatetoString","chars","split","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","toString","DATETIME","showYearSelector","onTextChange","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","DatesInEntity","Driver","CarrierCompany","PrimeMover","Vehicle","Contract","ContractItem","Order","AccessCard","Trailer","getOptionsWithSelect","ddlOptions","selectOptionText","option","unshift","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}