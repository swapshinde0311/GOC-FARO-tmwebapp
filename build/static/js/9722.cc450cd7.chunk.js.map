{"version":3,"file":"static/js/9722.cc450cd7.chunk.js","mappings":"2MAoDO,SAASA,EAAaC,GAazB,IAb0B,oBAC5BC,EAAmB,eACnBC,EAAc,aACdC,EAAY,oBACZC,EAAmB,oBACnBC,EAAmB,SACnBC,EAAQ,MACRC,EAAK,aACLC,EAAY,WACZC,EAAU,sBACVC,EAAqB,WACrBC,EAAU,cACVC,GACDZ,EACC,MAAOa,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GA2C3C,SAASG,IACHjB,EAAoBkB,MAClBX,EAAaY,OAAS,EACCH,GAAP,IAAdD,GAGJT,IAGN,CAgHA,OACEc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAMC,MAAO,CAAEC,WAAY,aAAcC,QAAS,OAAQC,SAAA,EACvEC,EAAAA,EAAAA,KAAA,OACEL,UAAU,8CACVC,MAAO,CAAEE,QAAS,OAAQC,UAE1BL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAMC,MAAO,CAAEK,UAAW,OAAQJ,WAAY,IAAKE,SAAA,EAChEC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,+CAA8CI,UAC3DL,EAAAA,EAAAA,MAACQ,EAAAA,EAAa,CAAAH,SAAA,CAAC,KAhKrBC,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAACW,EAAAA,WAAU,CAAAN,SAAA,CACRxB,EAAe+B,QAAQC,KAAKC,IAEzBR,EAAAA,EAAAA,KAACK,EAAAA,WAAWI,KAAI,CACdC,QAASA,UAEqBC,IAA1B5B,GAC0B,OAA1BA,GAEAA,EACEyB,EAAWI,SACXrC,EAAe+B,QAEnB,EACAP,SAGDK,EAAEI,EAAWK,eAFTL,EAAWI,aAMtBZ,EAAAA,EAAAA,KAACK,EAAAA,WAAWI,KAAI,CAAAV,SACbK,EAAE7B,EAAesC,eADEtC,EAAeqC,qBA2IvCZ,EAAAA,EAAAA,KAAA,OACEL,UAAU,+CACZI,UAEEC,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAJ,EAAAA,EAAAA,KAAA,OACEL,UAAU,kBACVC,MAAO,CAAEkB,eAAgB,cAAef,UAExB,IAAfjB,EACC,IAEAY,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAAhB,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEL,EAAAA,EAAAA,MAAA,MAAIC,UAAU,UAASI,SAAA,CAAEK,EAAE,sBAAsB,UAEnDJ,EAAAA,EAAAA,KAAA,OAAKL,UAAU,WAAUI,UACvBC,EAAAA,EAAAA,KAACgB,EAAAA,OACC,CACAC,YAAab,EAAE,sBACfc,MAAOzC,EACP0C,UAAW7C,EAAoB8C,YAC/BC,QAnMfC,EAAAA,GAAgC9C,GAoMjB+C,SAAWL,GAAUxC,EAAoBwC,iBAhE7DlB,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAAC8B,EAAAA,MAAK,CAACC,KAAMvC,EAAWwC,KAAK,QAAO3B,SAAA,EAClCC,EAAAA,EAAAA,KAACwB,EAAAA,MAAMG,QAAO,CAAA5B,UACZC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAIK,EAAE,yBAGVV,EAAAA,EAAAA,MAAC8B,EAAAA,MAAMI,OAAM,CAAA7B,SAAA,EACXC,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLC,KAAK,YACLC,QAAS3B,EAAE,UACXM,QAASA,IAAMvB,GAAa,MAE9Ba,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLC,KAAK,UACLC,QAAS3B,EAAE,8BACXM,QAASA,KACPvB,GAAa,GACbR,GAAU,kBA0DtBqB,EAAAA,EAAAA,KAAA,OAAKL,UAAU,4CAA2CI,UAvJ1DL,EAAAA,EAAAA,MAAA,OACEE,MAAO,CAAEoC,MAAO,QAASC,QAAS,eAAgBhC,UAAW,QAASF,SAAA,CAErEf,GAAagB,EAAAA,EAAAA,KAACkC,EAAAA,MAAK,CAClBC,SAAS,eACTxC,UAAU,mBACVyC,SACEpC,EAAAA,EAAAA,KAAA,OACEL,WACGrB,EAAoBkB,IACjB,cACA,sBAAwB,YAE9BkB,QAASnB,EAAiBQ,UAE1BC,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CACHC,KAAK,SACLC,KAAK,aACLb,KAAK,QACLc,MAAM,YAIZC,GAAG,QACHhB,KAAMpC,EAAUU,UAEhBC,EAAAA,EAAAA,KAAA,OAAK0C,aAAcA,IAAMpD,GAAa,GAAOS,UAC3CC,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAJ,EAAAA,EAAAA,KAAC2C,EAAAA,aAAY,CAAA5C,UACXL,EAAAA,EAAAA,MAACiD,EAAAA,aAAY,CAAA5C,SAAA,EACXC,EAAAA,EAAAA,KAAC2C,EAAAA,aAAaC,OAAM,CAAA7C,SACjBK,EAAE,mBAEJvB,EAAa0B,KAAKsC,IAEf7C,EAAAA,EAAAA,KAAC2C,EAAAA,aAAalC,KAAI,CAChBC,QAASA,KAAMoC,OA3CfC,EA2C8BF,EAAKG,UA1CzD1D,GAAa,QACbV,EAAMmE,GAFR,IAAwBA,CA2C8C,EAAAhD,SAE7CK,EAAEyC,EAAKI,2BASf,GACVhE,GAAgBe,EAAAA,EAAAA,KAAA,OACfJ,MAAO,CAAEsD,WAAY,QACrBxC,QAASA,KACHpC,EAAoB6E,QACtBhE,GAAa,EAGf,EAEFQ,WACGrB,EAAoB6E,OACjB,cACA,sBAAwB,YAC7BpD,UAEDC,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CAACC,KAAK,SAASC,KAAK,SAASb,KAAK,QAAQc,MAAM,YAC9C,UA2FjB,CAxPApE,EAAcgF,aAAe,CAC3B9E,oBAAqB,CAAEkB,KAAK,EAAO2D,QAAQ,EAAO/B,aAAa,GAC/D7C,eAAgB,CACd8E,SAAU,GACVzC,SAAU,GACVC,aAAc,GACdyC,UAAW,CAAC,EACZhD,QAAS,GACTiD,aAAa,GAEf/E,aAAc,GACdC,oBAAqB,GACrBI,aAAc,GACdC,YAAY,EACZE,YAAY,EACZC,eAAe,G,SC/CV,SAASuE,EAAsBnF,GAclC,IAdmC,oBACrCC,EAAmB,eACnBC,EAAc,aACdC,EAAY,oBACZC,EAAmB,oBACnBC,EAAmB,SACnBC,EAAQ,MACRC,EAAK,aACLC,EAAY,WACZC,EAAU,sBACVC,EAAqB,WACrBC,EAAU,cACVC,GAEDZ,EACC,OACE2B,EAAAA,EAAAA,KAAC5B,EAAa,CACZE,oBAAqBA,EACrBC,eAAgBA,EAChBC,aAAcA,EACdC,oBAAqBA,EACrBC,oBAAqBA,EACrBC,SAAUA,EACVC,MAAOA,EACPC,aAAcA,EACdC,WAAYA,EACZC,sBAAuBA,EACvBC,WAAYA,EACZC,cAAeA,GAGrB,C,wMCtBA,MAAMwE,UAAiCC,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KAC/CC,MAAQ,CACNC,oBAAoB,EACpBC,SAAU,GACVC,iBAAkB1C,EAAAA,GAChB2C,EAAAA,IAEFC,uBAAwB,GACxBC,wBAAwB,GACxB,KA4BFC,cAAgB,CAACC,EAAcC,KAC7BC,KAAKC,SAAS,CAAET,SAAUO,IAC1B,MAAMN,EAAmBS,IAAAA,UAAiBF,KAAKV,MAAMG,uBACCrD,IAAlDsD,EAAAA,GAAgCI,KAClCL,EAAiBK,GAAgB/C,EAAAA,GAC/B2C,EAAAA,GAAgCI,GAChCC,GAEFC,KAAKC,SAAS,CAAER,mBAAkBE,uBAAwB,KAC5D,EAEA,KAEFQ,iBAAoBX,IAClBQ,KAAKC,SAAS,CAAEL,wBAAwB,IACxC,MAAMH,EAAmB,IAAKO,KAAKV,MAAMG,kBACxB,OAAbD,GAAkC,KAAbA,IACvBC,EAA2B,SAAI,wCAEjCO,KAAKC,SAAS,CAAER,qBAChB,IAAIW,GAAc,EAMlB,OALIA,IACFA,EAAcC,OAAOC,OAAOb,GAAkBc,OAAM,SAAU5D,GAC5D,MAAiB,KAAVA,CACT,KAEKyD,CAAW,EAOpB,KACAI,aAAe,KACbR,KAAKC,SACH,CACEV,oBAAoB,EACpBI,uBAAwB,GACxBC,wBAAwB,IAE1B,IAAMI,KAAKS,MAAMC,eAClB,EASH,KAEAC,iBAAmB,KACjB,GAAIX,KAAKG,iBAAiBH,KAAKV,MAAME,UAAW,CAC9CQ,KAAKC,SAAS,CAAEN,uBAAwB,KAExC,IACE,IAGIiB,EAAMZ,KAAKV,MAAME,SAEjBqB,EAAOb,KAAKS,MAAMK,SAClBC,EAAOC,IAAAA,IAAaC,UAAUC,OAAO,IAErCC,EAAMH,IAAAA,OAAgBH,EAAME,EAAM,CACpCK,QAASA,EACTC,WATe,MAYbC,EAAKN,IAAAA,IAAaC,UAAUC,OAAO,IAEnCK,EAAYP,IAAAA,IAAaQ,QAAQZ,EAAKO,EAAK,CAC7CG,GAAIA,EACJ/F,QAASyF,IAAAA,IAAaS,MACtBC,KAAMV,IAAAA,KAAcW,MAElBC,EACFb,EAAKc,WAAaP,EAAGO,WAAaN,EAAUM,WAG9CC,IACEC,EAAAA,IACA,sBACAC,mBAAmBJ,GACnB7E,EAAAA,GACEiD,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,MACG,IAArBsC,EAAOC,WACiC,SAAtCD,EAAOE,aAAaC,eACtBxC,KAAKC,SAAS,CAAEV,oBAAoB,IACpCS,KAAKS,MAAMgC,mBAQbzC,KAAKC,SAAS,CACZN,uBAAwB0C,EAAOK,UAAU,GACzC9C,wBAAwB,GAE5B,IAED+C,OAAOC,IACN5C,KAAKC,SAAS,CACZN,uBAAwBiD,EACxBhD,wBAAwB,GACxB,GAER,CAAE,MAAOgD,GACP5C,KAAKC,SAAS,CACZN,uBAAwBiD,EACxBhD,wBAAwB,GAE5B,CACF,MACEI,KAAKC,SAAS,CAAEL,wBAAwB,GAC1C,CACA,CAtJFiD,iBAAAA,GACE,IACE7C,KAAK8C,oBACP,CAAE,MAAOF,GACPG,QAAQC,IACN,iEACAJ,EAEJ,CACF,CAEAE,kBAAAA,GACE,IACE,IAAIvD,EAAqBxC,EAAAA,GACvBiD,KAAKS,MAAMwC,YAAYV,aAAaW,iBACpClD,KAAKS,MAAM0C,aACXnD,KAAKS,MAAM2C,eAEbpD,KAAKC,SAAS,CAAEV,wBAEW,IAAvBA,GAA8BS,KAAKS,MAAMgC,iBAC/C,CAAE,MAAOG,GACPG,QAAQC,IAAI,sCAAuCJ,EACrD,CACF,CA+HAS,MAAAA,GACE,OACE5H,EAAAA,EAAAA,KAAA,OAAAD,UACqC,IAAlCwE,KAAKV,MAAMC,oBACV9D,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAAC8B,EAAAA,MAAK,CAACC,MAAM,EAAMC,KAAK,OAAM3B,SAAA,EAC5BL,EAAAA,EAAAA,MAAC8B,EAAAA,MAAMG,QAAO,CAAA5B,SAAA,EACZL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKI,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OACEL,UAAU,eACVC,MAAO,CAAEsD,WAAY,QAASnD,UAE9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAKK,EAAE,4BAETJ,EAAAA,EAAAA,KAAA,OACEL,UAAU,kBACVC,MAAO,CAAEiI,UAAW,SACpBnH,QAAS6D,KAAKQ,aAAahF,UAE3BC,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CAACC,KAAK,SAASC,KAAK,gBAI7B7C,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEqC,QAAS,OAAQ6F,SAAU,QAAS/H,SAAA,EAChDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAAA,SAAAD,UACEL,EAAAA,EAAAA,MAAA,MAAAK,SAAA,CACGK,EAAE,mCAAmC,IACrCmE,KAAKS,MAAMK,iBAIlBrF,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAAC+H,EAAAA,MAAK,CACJC,OAAK,EACLlG,KAAK,WACLmG,uBAAuB,EACvB/G,MAAOqD,KAAKV,MAAME,SAClBmE,UAAU,WACV3G,SAAW+C,GACTC,KAAKH,cAAc,WAAYE,GAEjC6D,MAAO/H,EAAE,wBACT+G,MAAO/G,EAAEmE,KAAKV,MAAMG,iBAAiBD,UACrCqE,cAAc,aAKtB1I,EAAAA,EAAAA,MAAC8B,EAAAA,MAAMI,OAAM,CAAA7B,SAAA,EACXC,EAAAA,EAAAA,KAAA,QAAML,UAAU,gCAA+BI,SAC5CK,EAAEmE,KAAKV,MAAMK,2BAEhBlE,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLC,KAAK,UACLX,UAAWoD,KAAKV,MAAMM,uBACtBpC,QAAS3B,EAAE,qCACXM,QAAS6D,KAAKW,2BAMtB,MAGV,EAEF,MAOA,GAAemD,EAAAA,EAAAA,KAPUxE,IAChB,CACL2D,YAAa3D,EAAMyE,eAAed,YAClChB,aAAc3C,EAAMyE,eAAeC,aAIvC,CAAwC9E,E,wPC/NxC,MAAM+E,EAAaxD,IACjB,MAAOyD,EAAMC,IAAWtJ,EAAAA,EAAAA,UAAS,OAC1BuJ,IAAcC,EAAAA,EAAAA,kBACfC,EAAYC,GACT,IAAIC,EAAAA,eAAe/D,EAAMgE,WAAY,CAC1CC,SAAUH,KAIPxE,EAAM4E,IAAW9J,EAAAA,EAAAA,UAASyJ,EAAS7D,EAAMmE,cAC1CC,EAAUC,EAAAA,YACVC,EAAYD,EAAAA,YACZE,EAAaF,EAAAA,YACbG,EAAkBH,EAAAA,YAClBI,EAAYJ,EAAAA,SAGZK,EAAeL,EAAAA,OAAarE,EAAM2E,kBAAoB,GAAK,MAGjE,IAAIC,EAAW,KAGf,MAAMC,EAAmBC,IACvB,IA2BE,GAzBAC,IAEI/E,EAAMgF,YAERF,EAAKG,iBAAiBH,EAAKI,YAAa,SAAUC,IAChD,IAAIC,EAAKN,EAAKO,QAAQF,GAEtB,GACEC,EAAGE,OAAOC,QAAQ,cACjB,IAAIH,EAAGE,OAAOC,QAAQ,YAAYC,WAAWC,SAC5C,aAEFL,EAAGM,WAAaC,EAAAA,SAAgBC,KAChC,CAEA,MAAMC,EAAUf,EAAKgB,KAAKV,EAAGW,KAAKC,SAClChG,EAAMgF,WAAWa,EACnB,KAIJf,EAAKmB,cAAgBC,EAAAA,OAAc,OAAQP,EAAAA,eAC3Cb,EAAKqB,QAAQ,GAAI,GAEjBzC,EAAQoB,GACJ9E,EAAM2E,kBAAmB,CAE3BC,EAAW,IAAIwB,EAAAA,SAAStB,EAAM,CAC5BuB,YAAaA,CAACC,EAAGnB,KAEXnF,EAAMuG,iBACRzB,EAAKgB,KACFU,QAAQT,GAELA,EAAIU,YAGS,IAFb/B,EAAagC,QAAQF,QAAQ3I,GAC3B8I,EAAAA,QAAgB9I,EAAMkI,EAAIC,YAC1BvL,SAGLmM,SAASb,IACRA,EAAIU,YAAa,CAAK,IAK5BzG,EAAM6G,kBACJ/B,EAAKgB,KACFU,QAAQM,GAAMA,EAAEL,aAChBlL,KAAKwL,GAAgBA,EAAYf,WACrC,EAGHgB,cAAehH,EAAMuG,kBAGvB,IAAInC,EAAUQ,EAASqC,OAAOnC,KAC9BF,EAASqC,OAAS7C,EAAQ8C,WAAWC,QAAQ,GAC7C/C,EAAQgD,kBAAoBC,EAAAA,kBAAkBC,IAC9ClD,EAAQ6B,cAAgBC,EAAAA,OAAc,OAAQP,EAAAA,cAChD,CACF,CAAE,MAAOxD,GACPG,QAAQC,IAAI,6BAA+BJ,EAC7C,IAIFoF,EAAAA,EAAAA,YAAU,KACR,IACE,GAAe,MAAXnD,EAAiB,CAEnB,IAAIU,EAAOV,EAAQsC,QAAQc,QACdlD,EAAUoC,QAAQc,QACxB1C,KAAOA,CAChB,CAEAZ,EAAQL,EAAS7D,EAAMmE,aACzB,CAAE,MAAOhC,GACPG,QAAQC,IAAI,wBAAyBJ,EACvC,IACC,CAACnC,EAAMgE,cAGVuD,EAAAA,EAAAA,YAAU,KACR,IACM9D,GAAQzD,EAAM2E,oBAEhBD,EAAagC,QAAQjM,OAAS,EAE9BiK,EAAagC,QAAQe,QAAQzH,EAAM0H,eAEnCjE,EAAKqC,KAAKc,SAASb,IAIF,IAFb/F,EAAM0H,cAAclB,QAAQ3I,GAC1B8I,EAAAA,QAAgB9I,EAAMkI,EAAIC,YAC1BvL,OAGFsL,EAAIU,YAAa,EAGjBV,EAAIU,YAAa,CACnB,IAGFhD,EAAKkE,UAET,CAAE,MAAOxF,GACPG,QAAQC,IAAI,+BAAgCJ,EAC9C,IACC,CAACnC,EAAM0H,iBAGVH,EAAAA,EAAAA,YAAU,KACR,IACE,GACEK,aAAaC,QAAQ7H,EAAM8H,gBAAkB,cACiB,SAA9DF,aAAaC,QAAQ7H,EAAM8H,gBAAkB,cAC7CrE,EACA,CAEA,IAAIsE,EAAYC,KAAKC,MACnBL,aAAaC,QAAQ7H,EAAM8H,gBAAkB,cAE3CI,EAAUzE,EAGdyE,EAAQf,QAAQP,SAASuB,IACvB,IAAIC,EAAaL,EAAUZ,QAAQX,QAChC6B,GAAeA,EAAWC,UAAYH,EAAIG,UAE7CH,EAAII,QACFH,EAAW3N,OAAS,EAAI2N,EAAW,GAAGG,QAAUJ,EAAII,OAAO,IAI/DhE,EAAWmC,QAAQc,QAAQgB,iBACzBT,EAAUS,iBAGZN,EAAQO,eAAeC,aAAY,KACjCR,EAAQO,eAAeE,iBAAiBC,QACxC,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAUY,iBAAiBlO,OAAQoO,IAAK,CAC1D,IAAIC,EAAWf,EAAUY,iBAAiBE,GAC1CX,EAAQO,eAAeE,iBAAiBlB,KACtC,IAAIvB,EAAAA,gBAAuB4C,EAASC,SAAUD,EAASE,WAE3D,KAIF,IAAK,IAAIH,EAAI,EAAGA,EAAId,EAAUkB,kBAAkBxO,OAAQoO,IACtDX,EAAQO,eAAeQ,kBAAkBxB,KACvC,IAAIvB,EAAAA,yBAAgC6B,EAAUkB,kBAAkBJ,KAElEX,EAAQf,QAAQX,QACb2B,GAAQA,EAAIG,UAAYP,EAAUkB,kBAAkBJ,KACrD,GAAGN,SAAU,EAGjB,GACEW,eAAerB,QAAQ7H,EAAM8H,gBAAkB,cACiB,SAAhEoB,eAAerB,QAAQ7H,EAAM8H,gBAAkB,aAC/C,CACA,IAAIqB,EAAmBnB,KAAKC,MAC1BiB,eAAerB,QAAQ7H,EAAM8H,gBAAkB,cAGjDI,EAAQO,eAAeW,WACrBlB,EAAQO,eAAeY,UAAY,GAAKF,EAAiBG,UACrDH,EAAiBG,UACjBpB,EAAQO,eAAeY,UAAY,GAIrC/E,IACFA,EAAUoC,QAAQc,QAAQ+B,KAAOJ,EAAiBK,WAEtD,CAEA9F,EAAQwE,GACRzE,EAAKkE,SACP,CACF,CAAE,MAAOxF,GACPG,QAAQC,IAAI,8CAA+CJ,EAC7D,IACC,CAAC7C,KAGJiI,EAAAA,EAAAA,YAAU,KACR,IACM9D,GAAQgB,EAAUiC,SAAW1G,EAAMyJ,uBACrChF,EAAUiC,QAAQgD,YAAcjG,EAAK0D,QACrC1C,EAAUiC,QAAQiD,kBAAoB,UACtClF,EAAUiC,QAAQkD,kBAAoB,SACtCnF,EAAUiC,QAAQmD,UAAUC,YAAW,MACrCC,EAAAA,EAAAA,WAAUtF,EAAUiC,QAAQxB,YAAY,IAG9C,CAAE,MAAO/C,GACPG,QAAQC,IAAI,kDAAmDJ,EACjE,IACC,CAACsC,EAAUiC,WAEda,EAAAA,EAAAA,YAAU,IAED,KACDvH,EAAMyJ,sBAAwBhF,EAAUiC,UAC1CqD,EAAAA,EAAAA,WAAUtF,EAAUiC,QAAQxB,YAC9B,GAED,IAGH,MAAM8E,EAAcA,KAClB,IACE,IAAIC,EAAWxG,EAEfwG,EAASP,YAAYzF,SAAWjE,EAAMgE,WAAWvJ,OACjDiJ,EAAQuG,GACRC,EAAAA,sBAAkCC,UAChC1G,EACA,CACE2G,sBAAsB,EACtBC,mBAAmB,EACnBC,WAAY,MAEdtK,EAAMuK,gBAIRN,EAASP,YAAYzF,SAAWjE,EAAMmE,YACtCT,EAAQuG,EACV,CAAE,MAAO9H,GACPG,QAAQC,IAAI,iCAAkCJ,EAChD,GAqBIqI,EAAgBA,CAACtO,EAAOuO,KAC5B,QAAqB9O,IAAjB8O,GAA+C,OAAjBA,EAAuB,CACvD,GAAqB,mBAAVvO,GAA6C,WAAtBuO,EAAaC,KAC7C,OAAIxO,GAAclB,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CAACE,KAAK,QAAQb,KAAK,QAAQc,MAAM,WAC5CxC,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CAACE,KAAK,QAAQb,KAAK,QAAQc,MAAM,QAC7C,GAAc,KAAVtB,GAA0B,OAAVA,QAA4BP,IAAVO,EAC3C,OAAOA,EACF,IACkB,kBAAtBuO,EAAaC,MACa,MAAzBD,EAAaE,UACL,OAAVzO,EAEA,OA9BmB0O,EA8BI1O,GA7BT2O,MAAM,KAAKpQ,OAASuF,EAAM8K,iBAExC9P,EAAAA,EAAAA,KAACkC,EAAAA,MAAK,CACJvC,UAAU,mBACV8C,GAAG,QACHL,QAASwN,EAAcC,MAAM,KAAKpQ,OAAOM,UAEzCC,EAAAA,EAAAA,KAAC+P,EAAAA,KAAI,CAAAhQ,UACHC,EAAAA,EAAAA,KAAC+P,EAAAA,KAAKpO,QAAO,CAAA5B,SAAE6P,QAKdA,EAuBF,QACuBjP,IAA1B8O,EAAaO,UACa,aAA1BP,EAAaO,SAEb,OACE,IAAIC,KAAK/O,GAAOgP,qBAChB,IACA,IAAID,KAAK/O,GAAOiP,qBAEb,QACqBxP,IAA1B8O,EAAaO,UACa,SAA1BP,EAAaO,SAEb,OAAO,IAAIC,KAAK/O,GAAOgP,qBAClB,QACqBvP,IAA1B8O,EAAaO,UACa,SAA1BP,EAAaO,SAEb,OAAO,IAAIC,KAAK/O,GAAOiP,oBAE3B,CAzDuBP,MA2DvB,OAAO1O,CAAK,EA6BRkP,EAAgBA,KACpB,IACE,GAAI3H,GAAQc,EAAWmC,QAAS,CAE9B,IAAIqB,EAAY,CACdZ,QAAS1D,EAAK0D,QAAQ5L,KAAK4M,IAClB,CACLG,QAASH,EAAIG,QACbC,QAASJ,EAAII,YAGjBC,iBAAkBjE,EAAWmC,QAAQc,QAAQgB,iBAC7CG,iBAAkBlF,EAAKgF,eAAeE,iBAAiBpN,KACpDuN,IACQ,CACLC,SAAUD,EAASC,SACnBC,UAAWF,EAASE,cAI1BC,kBAAmBxF,EAAKgF,eAAeQ,kBAAkB1N,KACtD8P,GACKA,EAAMhM,aACDgM,EAAMhM,aAGR,QAMb,GACEoE,EAAKgF,eAAeQ,mBACpBxF,EAAKgF,eAAeQ,kBAAkBxO,OAAS,EAC/C,CACwB,IACnB6Q,SAASC,uBAAuB,6BAEnB3E,SAAS4E,IACzBA,EAAMC,WAAWA,WAAWjG,UAAUhL,IAAI,sBAAsB,GAEpE,CAGA,IAAIkR,EAAe,CACjBpC,UAAW7F,EAAKgF,eAAea,UAC/BE,WAAYlF,EAAUoC,QAAQc,QAAQ+B,MAGxC3B,aAAa+D,QACX3L,EAAM8H,gBAAkB,YACxBE,KAAK4D,UAAU7D,IAEjBmB,eAAeyC,QACb3L,EAAM8H,gBAAkB,YACxBE,KAAK4D,UAAUF,GAEnB,CACF,CAAE,MAAOvJ,GACPG,QAAQC,IAAI,6BACd,GAIIwC,EAA4BA,KAEhC,IAAIyB,EAASN,EAAAA,QAAe2F,eAC1BC,EAAWC,EAAAA,SACb7F,EAAAA,QAAe2F,eAAeG,OAASrI,EAAW,yBAClDuC,EAAAA,QAAe2F,eAAe7C,UAC5B,UAAYrF,EAAW,4BACzBuC,EAAAA,QAAe2F,eAAeI,WAC5B,UAAYtI,EAAW,6BACzBuC,EAAAA,QAAe2F,eAAeK,MAAQvI,EAAW,uBACjDuC,EAAAA,QAAe2F,eAAejD,MAAQjF,EAAW,wBACjDuC,EAAAA,QAAe2F,eAAeM,WAAaxI,EACzC,4BAEFuC,EAAAA,QAAe2F,eAAehM,OAAS8D,EAAW,wBAClDuC,EAAAA,QAAe2F,eAAeO,OAASzI,EACrC,iCAEFuC,EAAAA,QAAe2F,eAAeQ,UAAY1I,EACxC,4BAEFuC,EAAAA,QAAe2F,eAAeS,IAAM3I,EAAW,sBAC/CuC,EAAAA,QAAe2F,eAAeU,GAAK5I,EAAW,qBAC9CuC,EAAAA,QAAe2F,eAAeW,OAAS7I,EAAW,yBAelD6C,EAAOiG,gBAAkB,CACvB,CAAElP,KAAMoG,EAAW,wBAAyB+I,GAAI,MAChD,CAAEnP,KAAMoG,EAAW,wBAAyB+I,GAAIZ,EAASa,IACzD,CAAEpP,KAAMoG,EAAW,2BAA4B+I,GAAIZ,EAASc,IAC5D,CAAErP,KAAMoG,EAAW,6BAA8B+I,GAAIZ,EAASe,IAC9D,CAAEtP,KAAMoG,EAAW,2BAA4B+I,GAAIZ,EAASgB,IAC5D,CAAEvP,KAAMoG,EAAW,2BAA4B+I,GAAIZ,EAASiB,IAC5D,CAAExP,KAAMoG,EAAW,iCAAkC+I,GAAIZ,EAASkB,KAEpExG,EAAOyG,gBAAkB,CACvB,CAAE1P,KAAMoG,EAAW,wBAAyB+I,GAAI,MAChD,CAAEnP,KAAMoG,EAAW,wBAAyB+I,GAAIZ,EAASa,IACzD,CAAEpP,KAAMoG,EAAW,2BAA4B+I,GAAIZ,EAASc,IAC5D,CAAErP,KAAMoG,EAAW,8BAA+B+I,GAAIZ,EAASoB,IAC/D,CAAE3P,KAAMoG,EAAW,2BAA4B+I,GAAIZ,EAASqB,IAC5D,CACE5P,KAAMoG,EAAW,qCACjB+I,GAAIZ,EAASsB,IAEf,CAAE7P,KAAMoG,EAAW,kCAAmC+I,GAAIZ,EAASuB,KAErE7G,EAAO8G,cAAgB,CACrB,CAAE/P,KAAMoG,EAAW,wBAAyB+I,GAAI,MAChD,CAAEnP,KAAMoG,EAAW,wBAAyB+I,GAAIZ,EAASa,IACzD,CAAEpP,KAAMoG,EAAW,kCAAmC+I,GAAIZ,EAASqB,IACnE,CAAE5P,KAAMoG,EAAW,gCAAiC+I,GAAIZ,EAASoB,KAEnE1G,EAAO+G,iBAAmB,CACxB,CAAEhQ,KAAMoG,EAAW,wBAAyB+I,GAAI,MAChD,CAAEnP,KAAMoG,EAAW,wBAAyB+I,GAAIZ,EAASa,IACzD,CAAEpP,KAAMoG,EAAW,2BAA4B+I,GAAIZ,EAASc,IAC7D,EAIGY,EAAYC,IAChB,IAEE,GADoBC,OAAOC,OAAOC,MAChB,MACZH,EAAcI,SAAqC,KAA1BJ,EAAcI,QACzC,OAAOC,SAASL,EAAcI,QAEpC,CAAE,MAAO1L,GACPG,QAAQC,IAAI,kBAAmBJ,EACjC,CAEA,OAAOsL,EAAcM,gBAAgBtI,SAAS,KAC1CgI,EAAcM,gBACdD,SAASL,EAAcM,gBAAgB,EAG7C,OACE/S,EAAAA,EAAAA,KAAA,OAAKL,UAAU,OAAMI,UACnBC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAAC2J,EAAAA,SAAc,CAAAtJ,SAAA,EACbL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUI,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,qCAAoCI,UACjDC,EAAAA,EAAAA,KAACgT,EAAAA,EAAc,CACbC,MAAM,kBACNC,IAAK5J,EACLrI,YAAab,EAAE,sCAGnBJ,EAAAA,EAAAA,KAAA,OAAKL,UAAU,qCAAoCI,UACjDL,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEoC,MAAO,SAAUjC,SAAA,CAC5BiF,EAAMyJ,sBACL/O,EAAAA,EAAAA,MAACmC,EAAAA,OAAM,CACLsR,GAAG,YACHC,WAAW,SACXtR,KAAK,UACLpB,QAAU2S,GAjMDA,KAC7B,IACE,IAAIC,EAAO7J,EAAUiC,QAAQxB,YACxBoJ,EAAKC,eAIRxE,EAAAA,EAAAA,WAAUuE,GAAM,GAAM,GACtB7K,EAAK+K,WAJLC,EAAAA,EAAAA,WAAUH,EAAMD,EAAM/I,OAAQoJ,EAAAA,cAAcC,OAAO,GAAM,GACzDlK,EAAUiC,QAAQ8H,SAMpB/J,EAAUiC,QAAQ8H,QAClBH,EAAMO,gBACR,CAAE,MAAOzM,GACPG,QAAQC,IAAI,sCAAuCJ,EACrD,GAkLwC0M,CAAsBR,GAAOtT,SAAA,EAEjDC,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CAAEqC,QAAS,gBAAiBlC,SACrCK,EAAE,4BAELJ,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CAAEqC,QAAS,gBAAiBlC,UACtCC,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CACHE,KAAK,aACL5C,UAAU,UACV+B,KAAK,eAIT,KACHsD,EAAM8O,gBACLpU,EAAAA,EAAAA,MAACmC,EAAAA,OAAM,CACLuR,WAAW,SACXtR,KAAK,UACLnC,UAAU,eACVe,QAASsO,EAAYjP,SAAA,EAErBC,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CAAEqC,QAAS,gBAAiBlC,SACrCK,EAAE,sBAELJ,EAAAA,EAAAA,KAAA,OACEJ,MAAO,CACLqC,QAAS,eACTiB,WAAY,UACZnD,UAEFC,EAAAA,EAAAA,KAAA,QACEL,UAAU,WACVC,MAAO,CACLmU,SAAU,OACV5R,SAAU,WACV6R,IAAK,cAKX,cAIVtU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaI,SAAA,CACzBiF,EAAMiP,wBACLjU,EAAAA,EAAAA,KAACkU,EAAAA,EAAU,CACTvU,UAAU,cACVmK,KAAMrB,EACNxH,YAAab,EAAE,oCAEf,MACJJ,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZL,EAAAA,EAAAA,MAACyU,EAAAA,GAAQ,CACPjB,IAAK9J,EACLgL,qBAAqB,EACrBC,mBAAoB,EACpBC,gBAAgB,EAChBlI,kBAAkB,SAClBsC,YAAapK,EACb2G,cAAeC,EAAAA,OAAc,OAAQP,EAAAA,eACrC4J,YAAa1K,EACb2K,wBAAyB,CAAC,EAAG,KAC7BC,cAAerE,EAAcrQ,SAAA,EAE7BC,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAc,CAACqC,IAAK3J,IACpBvE,EAAMmH,QAAQ5L,KAAK0L,IAEhBjM,EAAAA,EAAAA,KAAC0U,EAAAA,GAAc,CACb1D,OAAQ5Q,EAAE6L,EAAOyD,MAEjBpC,QAASrB,EAAOyD,KAChBkD,MAAOJ,EAASvG,GAChB0I,SAAU,IACVC,YAAY,EACZC,UAAU,EACVC,MAAM,OAAM/U,UAEZC,EAAAA,EAAAA,KAAC+U,EAAAA,GAAoB,CACnBrK,SAAS,OACTsK,SAAWC,IAEPjV,EAAAA,EAAAA,KAAA,QACEJ,MACoC,MAAlCoF,EAAMkQ,0BACLlQ,EAAMkQ,yBACLD,EAAQpS,MAGN,IAAKmC,EAAMmQ,sBADX,KAELpV,SAEAyP,EACCyF,EAAQpS,KAAKoJ,EAAOyD,MACpBzD,QAxBLA,EAAOyD,aAmCrB1K,EAAMyJ,sBACLzO,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oBAAmBI,UAChCC,EAAAA,EAAAA,KAACoV,EAAAA,GAAO,CACNzV,UAAU,gBACV4U,YAAcc,GArTPA,KACrBrQ,EAAMyJ,uBACRhF,EAAUiC,QAAU2J,EACtB,EAkT2CC,CAAkBD,OAG7C,SAENrV,EAAAA,EAAAA,KAAA,OAAKL,UAAU,MAAKI,UAClBC,EAAAA,EAAAA,KAACuV,EAAAA,GAAuB,CACtBrC,IAAK1J,EACL7J,UAAU,uBACV6V,aAAcpV,EAAE,2BAChBqV,QAAQ,EACRC,GAAIpR,cAOZ,EAuBVkE,EAAUpF,aAAe,CACvB4F,WAAY,GACZmD,QAAS,GACT2H,gBAAgB,EAChBvE,eAAgB,YAChB5F,mBAAmB,EACnB8E,sBAAsB,EACtBwF,wBAAwB,EACxB9K,YAAa,GACb2G,gBAAiB,EACjBvE,iBAAiB,EACjBmB,cAAe,IAGjB,UChqBA,EA1C4B1H,IAEpBhF,EAAAA,EAAAA,KAACwI,EAAS,CACNQ,WAAYhE,EAAMV,KAClB6H,QAASnH,EAAMmH,QACf2H,eAAgB9O,EAAM8O,eACtBvE,eAAgBvK,EAAMuK,eACtBd,qBAAsBzJ,EAAMyJ,qBAC5B9E,kBAAmB3E,EAAM2E,kBACzBsK,uBAAwBjP,EAAMiP,uBAC9BiB,yBAA0BlQ,EAAMkQ,yBAChCC,qBAAsBnQ,EAAMmQ,qBAC5BhM,YAAanE,EAAMmE,YACnB0C,kBAAmB7G,EAAM6G,kBACzB7B,WAAYhF,EAAMgF,WAClB8C,gBAAiB9H,EAAM8H,gBACvBgD,gBAAiB9K,EAAM8K,gBACvBvE,gBAAiBvG,EAAMuG,gBACvBmB,cAAe1H,EAAM0H,e,6GCnB1B,SAASiJ,EAAkCtX,GAc9C,IAd+C,UACjDuX,EAAS,cACTnD,EAAa,SACbxJ,EAAQ,eACR6K,EAAc,eACdvE,EAAc,qBACdd,EAAoB,uBACpBwF,EAAsB,kBACtBtK,EAAiB,gBACjBmG,EAAe,cACfpD,EAAa,kBACbmJ,EAAiB,WACjB7L,EAAU,gBACV8C,GACDzO,EACC,OACE2B,EAAAA,EAAAA,KAAC8V,EAAAA,EAAkB,CACnBxR,KAAMsR,EACNzJ,QAASsG,EACTtJ,YAAaF,EACb6K,eAAgBA,EAChBvE,eAAgBA,EAChBd,qBAAsBA,EACtBwF,uBAAwBA,EACxBtK,kBAAmBA,EACnB+C,cAAeA,EACfb,kBAAmBgK,EACnB7L,WAAYA,EACZ8C,gBAAiBA,EACjBgD,gBAAiBA,GAGrB,C,iFCZe,SAASiG,EAAoB1X,GASxC,IATyC,UAC3CuX,EAAS,yBACTI,EAAwB,SACxBC,EAAQ,QACRC,EAAO,YACP1O,EAAW,WACX2O,EAAU,OACVC,EAAM,gBACNC,GACDhY,EACC,MAAO+B,IAAKwI,EAAAA,EAAAA,mBACL1J,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCkX,EAAeC,IAAoBnX,EAAAA,EAAAA,UAAS,CAAC,GAwCpD,MAAMoX,EAAgBC,IACpB,IACE,MAAMC,EAAQD,EAAS5L,QAAQ4L,EAASC,OACxC,YAAc/V,IAAV+V,GAAiC,OAAVA,GAA4B,KAAVA,EACpC,GAGP,IAAIzG,KAAKyG,GAAOxG,qBAChB,IACA,IAAID,KAAKyG,GAAOvG,oBAEpB,CAAE,MAAOhJ,GACP,MAAO,EACT,GAGIwP,EAAcF,IAClB,IACE,MAAMC,EAAQD,EAAS5L,QAAQ4L,EAASC,OACxC,YAAc/V,IAAV+V,GAAiC,OAAVA,GAA4B,KAAVA,EACpC,GAEFA,EAAME,gBACf,CAAE,MAAOzP,GACP,MAAO,EACT,GAoBI0P,EAAe1M,IAEnB,GADA7I,EAAAA,GAAqBkG,EAAYV,aAAagQ,YAE5CxV,EAAAA,GACEkG,EAAYV,aAAaiQ,cACzBC,EAAAA,EAAeC,OACfC,EAAAA,IAGF/X,GAAa,GACboX,EAAiBpM,OACZ,CAaL+L,EAAQ,GAAI,aAZO,CACjBiB,YAAa,WACbC,QAAS,gCACTC,qBAAsB,CACpB,CACEC,UAAW,GACXC,UAAW,GACXC,WAAW,EACXC,aAAc,iDAKtB,GAGIC,EAAgBvN,IACpB,IAAI,MAAEjJ,GAAUiJ,EAChB,IACE,GAAa,MAATjJ,GAA2B,KAAVA,EAAc,CACjC,IAAIyW,EAAQzW,EAAM0W,QAAQ,KAC1B,GAAc,IAAVD,EACF,MAAO,GAET,IAAIE,EAAO3W,EAAM4W,OAAO,EAAGH,GACvBI,EAAO7W,EAAM4W,OAAOH,EAAQ,EAAGzW,EAAMzB,OAASkY,EAAQ,GAC1D,OAAOK,WAAWH,GAAMjB,iBAAmB,IAAMmB,CACnD,CACF,CAAE,MAAO5Q,GACP,OAAOjG,CACT,CACA,MAAO,EAAE,EAGX,OACExB,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAACiY,EAAAA,EAAe,CACdC,WAAY9X,EAAE,qCAEhBV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBI,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,MAAKI,UAClBC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,qCAAoCI,UACjDC,EAAAA,EAAAA,KAAA,MAAAD,SAAKK,EAAE,sCAGXV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKI,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,4BAA2BI,UACxCL,EAAAA,EAAAA,MAACyY,EAAAA,GAAS,CACR7T,KAAMsR,EACNwC,YAAY,EACZC,kBAAkB,EAAKtY,SAAA,CAEtBiW,EAAyB4B,QAAQ,cAAgB,GAClDvB,EACE,IAEArW,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,OAEb7B,MAAM,YACN1F,OAAQ5Q,EAAE,kCACVoY,UAAU,EACVC,cAAc,OACdC,SAAWC,GA7FLxO,KACpB,GAC+B,MAA7BA,EAAEU,QAAQ+N,iBACsC,IAAhDzO,EAAEU,QAAQ+N,gBAAgBxS,WAAW3G,OAErC,OAAO0K,EAAEU,QAAQgO,WACf7Y,EAAAA,EAAAA,KAAA,QAAAD,SAAOK,EAAE,sCACI,WAAXgW,GACFpW,EAAAA,EAAAA,KAAA,UAAQL,UAAU,WAAWe,QAASA,IAAMmW,EAAY1M,GAAGpK,SACxDK,EAAE,qCAGLJ,EAAAA,EAAAA,KAAA,QAAAD,SAAOK,EAAE,mCAEb,EA+EsC0Y,CAAaH,IALjC,aAQP3C,EAAyB4B,QAAQ,8BACjC,EACC,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,4BACN1F,OAAQ5Q,EAAE,6CACVoY,UAAU,EACVC,cAAc,QAJV,6BAOPzC,EAAyB4B,QAAQ,gBAAkB,EAClD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,cACN1F,OAAQ5Q,EAAE,wCACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GACFA,EAAS5L,QAAQkO,YAAYC,QAAQ,UAAW,MANrD,eAUPhD,EAAyB4B,QAAQ,oBAAsB,EACtD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,kBACN1F,OAAQ5Q,EAAE,4CACVoY,UAAU,EACVC,cAAc,QAJV,mBAOPzC,EAAyB4B,QAAQ,aAAe,EAC/C,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,WACN1F,OAAQ5Q,EAAE,qCACVoY,UAAU,EACVC,cAAc,QAJV,YAOPzC,EAAyB4B,QAAQ,YAAc,EAC9C,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,UACN1F,OAAQ5Q,EAAE,oCACVoY,UAAU,EACVC,cAAc,QAJV,WAOPzC,EAAyB4B,QAAQ,YAAc,EAC9C,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,UACN1F,OAAQ5Q,EAAE,oCACVoY,UAAU,EACVC,cAAc,QAJV,WAOPzC,EAAyB4B,QAAQ,cAAgB,EAChD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,YACN1F,OAAQ5Q,EAAE,sCACVoY,UAAU,EACVC,cAAc,QAJV,aAOPzC,EAAyB4B,QAAQ,kBAAoB,EACpD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,gBACN1F,OAAQ5Q,EAAE,0CACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaiB,EAAajB,IALjC,iBAQPT,EAAyB4B,QAAQ,gBAAkB,EAClD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,cACN1F,OAAQ5Q,EAAE,wCACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaiB,EAAajB,IALjC,eAQPT,EAAyB4B,QAAQ,YAAc,EAC9C,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,UACN1F,OAAQ5Q,EAAE,2CACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaiB,EAAajB,IALjC,WAQPT,EAAyB4B,QAAQ,aAAe,EAC/C,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,WACN1F,OAAQ5Q,EAAE,qCACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaiB,EAAajB,IALjC,YAQPT,EAAyB4B,QAAQ,gBAAkB,EAClD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,cACN1F,OAAQ5Q,EAAE,wCACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaiB,EAAajB,IALjC,eAQPT,EAAyB4B,QAAQ,cAAgB,EAChD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,YACN1F,OAAQ5Q,EAAE,sCACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaD,EAAaC,IALjC,aAQPT,EAAyB4B,QAAQ,YAAc,EAC9C,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,UACN1F,OAAQ5Q,EAAE,oCACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaD,EAAaC,IALjC,WAQPT,EAAyB4B,QAAQ,mBAAqB,EACrD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,iBACN1F,OAAQ5Q,EAAE,2CACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaE,EAAWF,IAL/B,kBAQPT,EAAyB4B,QAAQ,iBAAmB,EACnD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,eACN1F,OAAQ5Q,EAAE,yCACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaE,EAAWF,IAL/B,gBAQPT,EAAyB4B,QAAQ,sBAAwB,EACxD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,oBACN1F,OAAQ5Q,EAAE,8CACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaE,EAAWF,IAL/B,qBAQPT,EAAyB4B,QAAQ,oBAAsB,EACtD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,kBACN1F,OAAQ5Q,EAAE,4CACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaE,EAAWF,IAL/B,mBAQPT,EAAyB4B,QAAQ,kBAAoB,EACpD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,gBACN1F,OAAQ5Q,EAAE,0CACVoY,UAAU,EACVC,cAAc,QAJV,iBAOPzC,EAAyB4B,QAAQ,SAAW,EAC3C,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,OACN1F,OAAQ5Q,EAAE,iCACVoY,UAAU,EACVC,cAAc,QAJV,QAOPzC,EAAyB4B,QAAQ,gBAAkB,EAClD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,cACN1F,OAAQ5Q,EAAE,wCACVoY,UAAU,EACVC,cAAc,QAJV,eAOPzC,EAAyB4B,QAAQ,mBAAqB,EACrD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,iBACN1F,OAAQ5Q,EAAE,2CACVoY,UAAU,EACVC,cAAc,QAJV,kBAOPzC,EAAyB4B,QAAQ,2BACjC,EACC,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,yBACN1F,OAAQ5Q,EAAE,mDACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaiB,EAAajB,IALjC,0BAQPT,EAAyB4B,QAAQ,yBAA2B,EAC3D,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,uBACN1F,OAAQ5Q,EAAE,iDACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaiB,EAAajB,IALjC,wBAQPT,EAAyB4B,QAAQ,yBAA2B,EAC3D,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,uBACN1F,OAAQ5Q,EAAE,iDACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaE,EAAWF,IAL/B,wBAQPT,EAAyB4B,QAAQ,uBAAyB,EACzD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,qBACN1F,OAAQ5Q,EAAE,+CACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaE,EAAWF,IAL/B,sBAQPT,EAAyB4B,QAAQ,uBAAyB,EACzD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,qBACN1F,OAAQ5Q,EAAE,+CACVoY,UAAU,EACVC,cAAc,QAJV,sBAOPzC,EAAyB4B,QAAQ,qBAAuB,EACvD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,mBACN1F,OAAQ5Q,EAAE,6CACVoY,UAAU,EACVC,cAAc,QAJV,oBAOPzC,EAAyB4B,QAAQ,mBAAqB,EACrD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,iBACN1F,OAAQ5Q,EAAE,2CACVoY,UAAU,EACVC,cAAc,QAJV,kBAOPzC,EAAyB4B,QAAQ,kBAAoB,EACpD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,gBACN1F,OAAQ5Q,EAAE,0CACVoY,UAAU,EACVC,cAAc,QAJV,iBAOPzC,EAAyB4B,QAAQ,gBAAkB,EAClD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,cACN1F,OAAQ5Q,EAAE,wCACVoY,UAAU,EACVC,cAAc,QAJV,eAOPzC,EAAyB4B,QAAQ,qBAAuB,EACvD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,mBACN1F,OAAQ5Q,EAAE,6CACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaiB,EAAajB,IALjC,oBAQPT,EAAyB4B,QAAQ,wBAA0B,EAC1D,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,sBACN1F,OAAQ5Q,EAAE,gDACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaiB,EAAajB,IALjC,uBAQPT,EAAyB4B,QAAQ,sBAAwB,EACxD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,oBACN1F,OAAQ5Q,EAAE,8CACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaiB,EAAajB,IALjC,qBAQPT,EAAyB4B,QAAQ,qBAAuB,EACvD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,mBACN1F,OAAQ5Q,EAAE,6CACVoY,UAAU,EACVC,cAAc,QAJV,oBAOPzC,EAAyB4B,QAAQ,mBAAqB,EACrD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,iBACN1F,OAAQ5Q,EAAE,2CACVoY,UAAU,EACVC,cAAc,QAJV,kBAOPzC,EAAyB4B,QAAQ,YAAc,EAC9C,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,UACN1F,OAAQ5Q,EAAE,oCACVoY,UAAU,EACVC,cAAc,QAJV,WAOPzC,EAAyB4B,QAAQ,mBAAqB,EACrD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,iBACN1F,OAAQ5Q,EAAE,2CACVoY,UAAU,EACVC,cAAc,QAJV,kBAOPzC,EAAyB4B,QAAQ,kBAAoB,EACpD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,gBACN1F,OAAQ5Q,EAAE,0CACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaiB,EAAajB,IALjC,iBAQPT,EAAyB4B,QAAQ,oBAAsB,EACtD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,kBACN1F,OAAQ5Q,EAAE,4CACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaiB,EAAajB,IALjC,mBAQPT,EAAyB4B,QAAQ,kBAAoB,EACpD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,gBACN1F,OAAQ5Q,EAAE,0CACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaiB,EAAajB,IALjC,iBAQPT,EAAyB4B,QAAQ,uBAAyB,EACzD,IAEA5X,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACV4Y,aAAa,QAEb7B,MAAM,qBACN1F,OAAQ5Q,EAAE,+CACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaiB,EAAajB,IALjC,4BArtBhBzW,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAAC8B,EAAAA,MAAK,CAACC,KAAMvC,EAAWwC,KAAK,QAAO3B,SAAA,EAClCC,EAAAA,EAAAA,KAACwB,EAAAA,MAAMG,QAAO,CAAA5B,UACZC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAIK,EAAE,0BAGVV,EAAAA,EAAAA,MAAC8B,EAAAA,MAAMI,OAAM,CAAA7B,SAAA,EACXC,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLC,KAAK,YACLC,QAAS3B,EAAE,UACXM,QAASA,KACPvB,GAAa,GACboX,EAAiB,CAAC,EAAE,KAGxBvW,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLC,KAAK,UACLC,QAAS3B,EAAE,WACXM,QAASA,KACPvB,GAAa,GACboX,EAAiB,CAAC,GAClBN,EACEK,EAAczL,QAAQoO,gBACtB3C,EAAczL,QAAQqO,oBACvB,gBAusBXlZ,EAAAA,EAAAA,KAAA,OAAKL,UAAU,MAAMC,MAAO,CAAEuZ,WAAY,QAASpZ,UACjDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,eAAcI,UAC3BC,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLlC,UAAU,aACVe,QAASyV,EACTpU,QAAS3B,EAAE,mBAOzB,CA/vBA2V,EAAqB3S,aAAe,CAAC,E,gPCG9B,SAASgW,EAAmC/a,GAQ/C,IARgD,aAClDgb,EAAY,eACZC,EAAc,WACdnD,EAAU,kBACVoD,EAAiB,kBACjBC,EAAiB,WACjBC,EAAU,gBACVpD,GACDhY,EACC,MAAO+B,IAAKwI,EAAAA,EAAAA,kBACN8Q,EAAgBvP,GAChBA,IAAMwP,EAAAA,GAAoCC,MACrC,QACEzP,IAAMwP,EAAAA,GAAoCE,QAC5C,UACE1P,IAAMwP,EAAAA,GAAoCG,YAC5C,cACE3P,IAAMwP,EAAAA,GAAoCI,YAC5C,cACE5P,IAAMwP,EAAAA,GAAoCK,gBAC5C,kBACE7P,IAAMwP,EAAAA,GAAoCM,UAC5C,YACE9P,IAAMwP,EAAAA,GAAoCO,YAC5C,cAEA,IAIJhb,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GAErC+a,EAAYA,CAACC,EAAQjS,KACzBA,EAAMkS,IAAM,KACZD,EAAOrG,SAAW,MACd5L,EAAMmS,MAAQC,EAAAA,GAAmBC,YACnCrS,EAAMoG,KAAOkM,EAAAA,GAAoBD,YACxBrS,EAAMmS,MAAQC,EAAAA,GAAmBG,OAC1CvS,EAAMoG,KAAOkM,EAAAA,GAAoBC,OACxBvS,EAAMmS,MAAQC,EAAAA,GAAmBL,YAC1C/R,EAAMoG,KAAOkM,EAAAA,GAAoBP,YACxB/R,EAAMmS,MAAQC,EAAAA,GAAmBV,QAC1C1R,EAAMoG,KAAOkM,EAAAA,GAAoBZ,QACxB1R,EAAMmS,MAAQC,EAAAA,GAAmBI,gBAC1CxS,EAAMoG,KAAOkM,EAAAA,GAAoBE,gBACxBxS,EAAMmS,MAAQC,EAAAA,GAAmBK,iBAC1CzS,EAAMoG,KAAOkM,EAAAA,GAAoBG,iBACxBzS,EAAMmS,MAAQC,EAAAA,GAAmBM,OAC1C1S,EAAMoG,KAAOkM,EAAAA,GAAoBI,OACxB1S,EAAMmS,MAAQC,EAAAA,GAAmBO,QAC1C3S,EAAMoG,KAAOkM,EAAAA,GAAoBK,OAE5B3S,GAGHqO,EAAgBC,IACpB,IACE,MAAMC,EAAQD,EAAS5L,QAAQ4L,EAASC,OACxC,YAAc/V,IAAV+V,GAAiC,OAAVA,GAA4B,KAAVA,EACpC,GAGP,IAAIzG,KAAKyG,GAAOxG,qBAChB,IACA,IAAID,KAAKyG,GAAOvG,oBAEpB,CAAE,MAAOhJ,GACP,MAAO,EACT,GAgKF,SAAS4T,EAAqBzW,GAC5B,OAAO0W,MAAMC,QAAQ3W,EAAK4W,kBACxB5W,EAAK4W,gBAAgBzb,OAAS,GAC9BO,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oDAAmDI,UAChEL,EAAAA,EAAAA,MAACyY,EAAAA,GAAS,CAAC7T,KAAMA,EAAK4W,gBAAgBnb,SAAA,EACpCC,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBAEVqR,OAAQ5Q,EAAE,4BACVsY,SAAUyC,EACV3C,UAAU,GAHN,kBAKNxY,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACVqR,OAAQ5Q,EAAE,6BACVsY,SAAU0C,UAKhBpb,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BC,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CAAEyb,aAAc,OAAQtb,SACjCK,EAAE,uCAIX,CAEA,MAAM+a,EAAmC7W,IAErCtE,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAOuE,EAAKuG,QAAQyQ,kBAKpBF,EAAuB9W,IAC3B,MAAMiX,EAAYjX,EAAKuG,QACvB,IACE,OAAO0Q,EAAUvL,SAASjJ,gBACxByU,EAAAA,GAAmBC,OAAO1U,eAOxBwU,EAAUvL,SAASjJ,gBACrByU,EAAAA,GAAmBE,IAAI3U,eAOrBwU,EAAUvL,SAASjJ,gBACrByU,EAAAA,GAAmBG,MAAM5U,eACzBwU,EAAUvL,SAASjJ,gBACnByU,EAAAA,GAAmBI,KAAK7U,eACxBwU,EAAUvL,SAASjJ,gBACnByU,EAAAA,GAAmBK,OAAO9U,eAnB1B/G,EAAAA,EAAAA,KAAC+H,EAAAA,MAAK,CACJC,OAAK,EACL9G,MAAOqa,EAAUO,eACjB3a,UAAU,EACViH,cAAc,IAsBdmT,EAAUvL,SAASjJ,gBACrByU,EAAAA,GAAmBO,KAAKhV,eACxB/G,EAAAA,EAAAA,KAACgc,EAAAA,SAAQ,CACPC,QAA+D,SAAtDV,EAAUO,eAAe1V,WAAWW,cAC7C5F,UAAU,IAEVoa,EAAUvL,SAASjJ,gBACrByU,EAAAA,GAAmBU,SAASnV,eAC5B/G,EAAAA,EAAAA,KAACmc,EAAAA,WAAU,CACTnU,OAAK,EACLoU,WAAW,IACXlb,MAC+B,OAA7Bqa,EAAUO,qBACqBnb,IAA7B4a,EAAUO,gBACmB,KAA7BP,EAAUO,eACR,GACA,IAAI7L,KAAKsL,EAAUO,gBAEzB3a,UAAU,EACVkb,iBAAiB,OACjBjU,cAAc,IAEd,IACN,CAAE,MAAOjB,GACPG,QAAQC,IAAI,sDAAuDJ,EACrE,GAGF,OACEzH,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAJ,EAAAA,EAAAA,KAAA,OAAAD,UACEL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBI,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,MAAKI,UAClBC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,SAAQI,UACrBC,EAAAA,EAAAA,KAAA,MAAAD,SACGK,EAAE,kCACD,MACAiZ,SAIRrZ,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kCAAiCI,UAC9CC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,yBAAwBI,UACrCL,EAAAA,EAAAA,MAAC4c,EAAAA,GAAiB,CAChB5N,YAAa6K,EACbgD,UAAU,OACVC,SAAS,cACTC,QAAS,CAAC,OACV7c,MAAO,CACLgT,MAAO,OACP+B,SAAU,QACV+H,OAAQ,SACR3c,SAAA,EAEFC,EAAAA,EAAAA,KAACsc,EAAAA,GAAuB,CAACna,SAAS,YAClCnC,EAAAA,EAAAA,KAACsc,EAAAA,GAAqB,CACpBK,WAAW,QACXC,UAAW,EACXC,IAAK,EACLC,IAAK,EACLC,cAAe5C,EACf6C,UAAU,KAEZhd,EAAAA,EAAAA,KAACsc,EAAAA,GAAuB,CACtBhP,QAAQ,iBACR/K,KAAMnC,EAAE,4DAKhBJ,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kCAAiCI,UAC9CC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,sBAAsBwT,GAAG,aAAYpT,UAClDL,EAAAA,EAAAA,MAACyY,EAAAA,GAAS,CACR7T,KAAMgV,EACNlB,YAAY,EACZ2C,qBAAsBA,EACtBkC,aAAczD,EAAkBzZ,SAAA,EAEhCC,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,4BAEV+W,MAAM,iBACN1F,OAAQ5Q,EACN,kDAEFoY,UAAU,EACVC,cAAc,QANV,mBAQNzY,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,4BAEV+W,MAAM,cACN1F,OAAQ5Q,EAAE,2CACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaD,EAAaC,IALjC,8BAONzW,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,4BACVqR,OAAQ5Q,EACN,qDAEFsW,MAAO,4BACP8B,UAAU,EACVC,cAAc,UAEhBzY,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,4BAEV+W,MAAM,4BACN1F,OAAQ5Q,EACN,wDAEFoY,UAAU,EACVE,SAAWjC,GACTiD,EAAajD,EAAS5L,QAAQqS,2BAEhCzE,cAAc,QATV,8BAWNzY,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,4BACVqR,OAAQ5Q,EAAE,OACVoY,UAAU,EACV9B,MAAO,UACP+B,cAAc,UAEhBzY,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,4BACVqR,OAAQ5Q,EAAE,8BACVoY,UAAU,EACV9B,MAAO,cACP+B,cAAc,SAEfgB,EAAWlZ,KAAK4c,IAEbnd,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,4BACVqR,OAAQ5Q,EAAE+c,EAAI7B,eACd9C,UAAU,cAOtB9Y,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKI,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCC,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLlC,UAAU,aACVe,QAASyV,EACTpU,QAAS3B,EAAE,YAIdiW,EACC,IAEArW,EAAAA,EAAAA,KAAA,OACEL,UAAU,2BACVC,MAAO,CAAEiI,UAAW,SAAU9H,UAE9BC,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLlC,UAAU,cACVe,QAASA,KACPvB,GAAa,EAAK,EAEpB4C,QAAS3B,EAAE,iDAtY3BJ,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAJ,EAAAA,EAAAA,KAACwB,EAAAA,MAAK,CAACC,KAAMvC,EAAWS,UAAU,mBAAkBI,UAClDL,EAAAA,EAAAA,MAAC8B,EAAAA,MAAMG,QAAO,CAAA5B,SAAA,EACZC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,qCAAoCI,UACjDC,EAAAA,EAAAA,KAAA,MAAAD,SACGK,EAAE,kCACD,MACAiZ,OAGNrZ,EAAAA,EAAAA,KAAA,OAAKL,UAAU,4BAA2BI,UACxCL,EAAAA,EAAAA,MAAC4c,EAAAA,GAAiB,CAChB5N,YAAa6K,EACbgD,UAAU,OACVC,SAAS,cACTC,QAAS,CAAC,OACV7c,MAAO,CAAEgT,MAAO,OAAQ8J,OAAQ,SAAU3c,SAAA,EAE1CC,EAAAA,EAAAA,KAACsc,EAAAA,GAAuB,CAACna,SAAS,YAClCnC,EAAAA,EAAAA,KAACsc,EAAAA,GAAqB,CACpBK,WAAW,QACXC,UAAW,EACXC,IAAK,EACLC,IAAK,EACLC,cAAe5C,EACf6C,UAAU,KAEZhd,EAAAA,EAAAA,KAACsc,EAAAA,GAAuB,CACtBhP,QAAQ,iBACR/K,KAAMnC,EAAE,0DAIdJ,EAAAA,EAAAA,KAAA,OAAKL,UAAU,sBAAqBI,UAClCL,EAAAA,EAAAA,MAACyY,EAAAA,GAAS,CAAC7T,KAAMgV,EAAevZ,SAAA,EAC9BC,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBAEV+W,MAAM,iBACN1F,OAAQ5Q,EAAE,kDACVoY,UAAU,EACVC,cAAc,QAJV,mBAMNzY,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBAEV+W,MAAM,cACN1F,OAAQ5Q,EAAE,2CACVoY,UAAU,EACVC,cAAc,OACdC,SAAWjC,GAAaD,EAAaC,IALjC,8BAONzW,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACVqR,OAAQ5Q,EACN,qDAEFsW,MAAO,4BACP8B,UAAU,EACVC,cAAc,UAEhBzY,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBAEV+W,MAAM,4BACN1F,OAAQ5Q,EACN,wDAEFoY,UAAU,EACVE,SAAWjC,GACTiD,EAAajD,EAAS5L,QAAQqS,2BAEhCzE,cAAc,QATV,8BAWNzY,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACVqR,OAAQ5Q,EAAE,OACVoY,UAAU,EACV9B,MAAO,UACP+B,cAAc,UAEhBzY,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACVqR,OAAQ5Q,EAAE,8BACVoY,UAAU,EACV9B,MAAO,cACP+B,cAAc,SAEfgB,EAAWlZ,KAAK4c,IAEbnd,EAAAA,EAAAA,KAACmY,EAAAA,GAAUG,OAAM,CACf3Y,UAAU,gBACVqR,OAAQ5Q,EAAE+c,EAAI7B,eACd9C,UAAU,YAMpBxY,EAAAA,EAAAA,KAACwB,EAAAA,MAAMI,OAAM,CAAA7B,UACXL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWI,SAAA,EACxBC,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLC,KAAK,YACLJ,KAAK,QACLK,QAAS3B,EAAE,mBACXM,QAASA,KACPvB,GAAa,EAAM,KAGvBa,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLC,KAAK,UACLJ,KAAK,QACLK,QAAS3B,EAAE,wBACXM,QAASA,KACP,IAAI0c,EACF1K,OAAOpC,SAAS+M,eAAe,cAAcC,UAC/C,MAAMC,EAAS7K,OAAOpC,SAASkN,cAAc,UAC7C,IAAIC,EAAM,KACV/K,OAAOpC,SAASoN,KAAKC,YAAYJ,GACjCE,EAAMF,EAAOK,cAActN,SAC3B,MAAMuH,EAAOuF,EAAGS,UAAU,EAAGT,EAAGxF,QAAQ,UAAY,GAC9CG,EAAOqF,EAAGS,UACdT,EAAGxF,QAAQ,UAAY,EACvBwF,EAAG3d,QAML2d,EAHEhd,EAAE,4CACF,MACAiZ,EACUxB,EAAO,8BAAgCE,EACnDqF,EAAKA,EAAGpE,QAAQ,oCAAqC,IACrDoE,EAAKA,EAAGpE,QACN,sMACA,IAEFyE,EAAIK,MAAMV,GAEVK,EAAIM,QACJR,EAAOK,cAAcpK,QACrB+J,EAAOK,cAAcI,QACrBC,YAAW,KACTvL,OAAOpC,SAASoN,KAAKQ,YAAYX,EAAO,GACvC,IAAK,kBAmQ9B,C,OAteAY,cAAsB3C,EAAAA,I,2DCkCtB,MAAM4C,UAAgC1a,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KAC9CC,MAAQ,CACNwa,WAAW,EACXC,iBAAiB,EACjBC,mBAAmB,EACnBjgB,oBAAqB,CAAEkB,KAAK,EAAO2D,QAAQ,EAAO/B,aAAa,GAC/D2K,YAAa,CAAC,EACdW,cAAe,GACfjO,oBAAqB,GACrB6F,KAAM,GACNka,eAAgB,GAChBC,yBAA0B,GAC1B7O,cAAe,GACf8O,SAAU,IAAIzO,KACd0O,OAAQ,IAAI1O,KACZ2O,UAAW,GACXC,uBAAwB,GACxBC,wBAAyB,GACzB9I,yBAA0B,GAC1B+I,WAAY,GACZC,OAAQ,GACRC,SAAS,EACTC,aAAa,EACbC,eAAe,EACfC,iBAAiB,EACjBC,kBAAkB,EAClBC,yBAAyB,EACzBC,sBAAsB,EACtBC,eAAe,EACfC,oBAAoB,EACpBnG,eAAgB,GAChBoG,2BAA4B,GAC5BnG,kBAAmB,GACnBC,kBAAmB,GACnBxV,iBAAkB1C,EAAAA,GAChBqe,EAAAA,IAEFC,QAAS,EACTC,kBAAmB,CAAC,EACpBC,aAAa,EACbC,yBAAyB,EACzBC,cAAc,EACdC,YAAY,EACZC,sBAAuB,GACvBC,yBAA0B,GAC1BC,aAAc,GACdC,gCAAgC,EAChCC,yCAAyC,EACzCC,uCAAuC,EACvCC,iCAAiC,EACjCC,kCAAiC,EACjCC,6BAA6B,GAC7B,KAEFC,cAAgB,0BAA0B,KAE1CC,UAAY,KACV,IACE,IAAI,oBAAEtiB,GAAwB,IAAKiG,KAAKV,OACxCvF,EAAoB6E,QAAS,EAC7B7E,EAAoBkB,KAAM,EAC1BlB,EAAoB8C,aAAc,EAClCmD,KAAKC,SACH,CACEwb,cAAc,EACd3B,WAAW,IAEb,KACE9Z,KAAKC,SAAS,CACZob,QAAS,EACTvB,WAAW,EACXyB,aAAa,EACb/T,YAAa,CAAC,EACdzN,uBACA,GAGR,CAAE,MAAO6I,GACPG,QAAQC,IAAIJ,GACZG,QAAQC,IAAI,oDACd,GACA,KA0BFsZ,aAAe,KACbtc,KAAKuc,4BACL,IACE,IAAI,oBAAExiB,GAAwB,IAAKiG,KAAKV,OACxCvF,EAAoB6E,QAAS,EAC7BoB,KAAKC,SAAS,CAAElG,sBAAqB6hB,yBAA0B,KAE/D,IADA,IAAIY,EAA2B,GACtBlT,EAAI,EAAGA,EAAItJ,KAAKV,MAAM6I,cAAcjN,OAAQoO,IAAK,CACxD,IAAImT,EAAqBzc,KAAKV,MAAM6I,cAAcmB,GAAgB,YAC9DoT,EAAU,CACZC,SAAU,CACR,CAAEC,IAAKD,EAAAA,GAA6BE,MAAOJ,KAG/CD,EAAyBtU,KAAKwU,EAChC,CAEA5a,IACEgb,EAAAA,IACA/f,EAAAA,GACEyf,EACAxc,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,KAelBgd,EAAehgB,EAAAA,GACjBsF,EACA,0BACA,CAAC,uBAGHrC,KAAKgd,wBACLhd,KAAKid,aACLljB,EAAoB6E,QAAS,EAC7BoB,KAAKC,SACH,CACEkI,cAAe,GACfpO,sBACAyN,YAAa,CAAC,EACdsS,WAAW,EACX8B,yBAA0B,KAE5B,KACM5b,KAAKV,MAAMic,aACbvb,KAAKC,SAAS,CACZ6Z,WAAW,EACXyB,aAAa,EACbxB,iBAAiB,GAErB,IAIJgD,EAAajK,qBAAqBzL,SAAS6V,IACrCA,EAAcnK,UAAU7X,OAAS,IACnCgiB,EAAcnK,UAAU,GAAK,kCAC/B,KAEFoK,EAAAA,EAAAA,QACE1hB,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAAC2hB,EAAAA,EAAW,CAACC,oBAAqBN,MAEpC,CACEO,UAAwC,YAA7BP,EAAanK,aAA4B,KAEvD,IAEFjQ,OAAOC,IACN,MAAMA,CAAK,GAEjB,CAAE,MAAOA,GACPG,QAAQC,IAAI,uDACd,GACA,KAEF4O,WAAa,KACX,IACE,IAAI,oBAAE7X,GAAwB,IAAKiG,KAAKV,OASxC,GARAvF,EAAoBkB,IAAM8B,EAAAA,GACxBiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAexX,IACfsiB,EAAAA,IAEFxjB,EAAoB6E,QAAS,EAC7BoB,KAAKgd,wBACLhd,KAAKid,aAEHjd,KAAKV,MAAMwa,YACV9Z,KAAKV,MAAMwb,kBACV9a,KAAKV,MAAM0b,sBACXhb,KAAKV,MAAM2b,eACXjb,KAAKV,MAAMyb,yBACb,CAEA,IAAIyC,EAAa,CACf1I,aAAc9U,KAAKV,MAAM6I,cAAc,GAAGsV,aAE5Czd,KAAK0d,mBAAmBF,GACxBxd,KAAKC,SACH,CACE6Z,WAAW,EACXc,eAAe,EACfE,kBAAkB,EAClBE,sBAAsB,EACtBC,eAAe,EACfM,aAAa,EACbR,yBAAyB,EACzBU,cAAc,EACdG,yBAA0B,KAE5B,KACE5b,KAAKC,SAAS,CACZ6Z,WAAW,EACXyB,aAAa,GACb,GAGR,MACEvb,KAAKC,SAAS,CACZ6Z,WAAW,EACXc,eAAe,EACfW,aAAa,EACbT,kBAAkB,EAClBC,yBAAyB,EACzBC,sBAAsB,EACtBC,eAAe,EACfzT,YAAa,CAAC,EACdW,cAAe,GACfpO,sBACA0hB,cAAc,EACdG,yBAA0B,GAC1B7B,iBAAiB,GAGvB,CAAE,MAAOnX,GACPG,QAAQC,IAAI,sDAAuDJ,EACrE,GACA,KAEF+a,kBAAoB7jB,IAAmB,IAAlB,GAAE8jB,EAAE,KAAEC,GAAM/jB,OACpBsC,IAAPwhB,GAAkB5d,KAAKC,SAAS,CAAEma,OAAQwD,SACjCxhB,IAATyhB,GAAoB7d,KAAKC,SAAS,CAAEka,SAAU0D,GAAO,EACzD,KAEFC,qBAAuB,CAACnhB,EAAOiG,KACf,KAAVjG,GACFqD,KAAKC,SAAS,CAAEoa,UAAW,GAAID,OAAQ,GAAID,SAAU,KACzC,OAAVvX,GAA4B,KAAVA,EACpB5C,KAAKC,SAAS,CACZoa,UAAW,qBACXD,OAAQ,GACRD,SAAU,KAGZna,KAAKC,SAAS,CAAEoa,UAAW,GAAID,OAAQzd,EAAMihB,GAAIzD,SAAUxd,EAAMkhB,MACnE,EACA,KAEFE,iBAAmB,KACjB,IAAInb,EAAQ7F,EAAAA,GACViD,KAAKV,MAAM8a,OACXpa,KAAKV,MAAM6a,UAGC,KAAVvX,EACF5C,KAAKC,SAAS,CAAEoa,UAAWzX,KAE3B5C,KAAKC,SAAS,CAAEoa,UAAW,KAC3Bra,KAAKgd,wBACP,EACA,KAEFgB,gBAAkB,KAChBhe,KAAKC,SAAS,CAAEyb,YAAY,GAAQ,EACpC,KAgCFuC,cAAe,KAEbje,KAAKC,SAAS,CAAEib,oBAAoB,IACpCxB,YAAW,KACT1Z,KAAKC,SAAS,CAAEib,oBAAoB,GAAQ,GAC3C,MACH,IAAIT,EAASva,IAAAA,UAAiBF,KAAKV,MAAMmb,QACzC,GAAKza,KAAKH,cAAc,SAAU4a,GAE3B,CAGL,IAAIuB,GACoD,IAAxDhc,KAAKS,MAAMwC,YAAYV,aAAa2b,gBAIpCle,KAAKC,SAAS,CAAE+b,0CAA0C,MACV,IAA1CA,GACFhc,KAAKme,qBACP,GAEJ,MAdEne,KAAKC,SAAS,CAAEya,SAAS,GAc3B,EACD,KAEDyD,oBAAqB,KACnBne,KAAKuc,4BACL,IAAI9B,EAASva,IAAAA,UAAiBF,KAAKV,MAAMmb,QACrCnc,EAAO4B,IAAAA,UAAiBF,KAAKV,MAAM6I,cAAc,IACjDiW,EAAU,CACZ,CACEjd,IAAKwb,EAAAA,GACLhgB,MAAO2B,EAAKmf,aAEd,CACEtc,IAAKwb,EAAAA,GACLhgB,MAAO8d,IAGP4D,EAAM,CACRC,YAAa3B,EAAAA,GACbA,SAAUyB,GAERrB,EAAe,CACjBnK,YAAa,WACbC,QAAS,0CACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,4CACZC,UAAW,CAAC1U,EAAKmf,aACjBxK,WAAW,EACXC,aAAc,MAIpBpR,IACEgb,EAAAA,IACA/f,EAAAA,GACEshB,EACAre,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,KAWtB,GAVAgd,EAAanK,YAAcvQ,EAAOC,UAAY,UAAY,WAC1Dya,EAAajK,qBAAqB,GAAGG,UAAY5Q,EAAOC,WAC/B,IAArBD,EAAOC,UACTtC,KAAKC,SAAS,CAAE4a,iBAAiB,EAAOJ,OAAQ,MAEhDsC,EAAajK,qBAAqB,GAAGI,aACnC7Q,EAAOK,UAAU,GAAKuU,EAAAA,GAAsB,GAC9ClU,QAAQC,IAAI,0BAA2BX,EAAOK,YAEhD1C,KAAKue,WAAWjgB,EAAM,gBAAiBye,IACV,IAAzB/c,KAAKV,MAAMwa,UAAoB,CACjC,IAAI0D,EAAa,CACf1I,aAAc9U,KAAKV,MAAM6I,cAAc,GAAGsV,aAE5Czd,KAAK0d,mBAAmBF,EAC1B,MACExd,KAAK6C,mBACP,IAEDF,OAAOC,IACNma,EAAajK,qBAAqB,GAAGI,aAAetQ,EACpD5C,KAAKue,WAAWjgB,EAAM,gBAAiBye,GACvCha,QAAQC,IAAI,6BAA8BJ,EAAM,GAChD,EACL,KAED4b,aAAc,KACZ,IAAIvC,GACoD,IAAxDjc,KAAKS,MAAMwC,YAAYV,aAAa2b,gBAIpCle,KAAKC,SAAS,CAAEgc,oCAAoC,MACV,IAApCA,GACFjc,KAAKye,eACP,GAAG,EAEJ,KAEHA,cAAgB,KACdze,KAAKuc,iCACyBngB,IAA1B4D,KAAK0e,iBACP5c,IACEgb,EAAAA,IACA/f,EAAAA,GACEiD,KAAKS,MAAMwB,aAAaC,YAE1BC,MAAMC,IACFA,EAASrC,KAAKuC,YAChBtC,KAAK0e,iBAAmBtc,EAASrC,KAAKwC,aACtCvC,KAAKC,SAAS,CAAEyb,YAAY,IAC9B,IAGF1b,KAAKC,SAAS,CAAEyb,YAAY,GAC9B,EACA,KAEFiD,qBAAwBC,IACtB5e,KAAKC,SAAS,CACZub,yBAAyB,IAE3B9B,YAAW,KACT1Z,KAAKC,SAAS,CAAEub,yBAAyB,GAAQ,GAChD,KAEDoD,IACA3H,EAAAA,GACG4H,uCAEH7e,KAAK8e,yBAELF,IACA3H,EAAAA,GACG8H,2CAEH/e,KAAKC,SAAS,CAAE4a,iBAAiB,IAEjC+D,IACA3H,EAAAA,GACG+H,sCAEHhf,KAAKif,kBAAkBjf,KAAKV,MAAM6I,cAAc,IAEhDyW,IACA3H,EAAAA,GACGiI,wCAEHlf,KAAKmf,iCAELP,IACA3H,EAAAA,GAA0CmI,gCAE1Cpf,KAAKqf,gBAELT,IACA3H,EAAAA,GAA0CqI,+BAE1Ctf,KAAKwe,eAELI,IACA3H,EAAAA,GAA0CsI,gCAE1Cvf,KAAKwf,gBAGLZ,IACA3H,EAAAA,GACGwI,mCAEHzf,KAAK0f,cAELd,IACA3H,EAAAA,GACG0I,oCAEH3f,KAAK4f,kBAAkB5f,KAAKV,MAAM6I,cAAc,GAClD,EACA,KAEF0X,eAAkBvhB,IAChB,IACE,IACGvB,EAAAA,GACCiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAeqN,KACfvC,EAAAA,IAEF,CAcA,YADAvd,KAAKue,WAAWjgB,EAAM,aAZH,CACjBsU,YAAa,WACbC,QAAS,gCACTC,qBAAsB,CACpB,CACEC,UAAW,GACXC,UAAW,GACXC,WAAW,EACXC,aAAc,+BAMtB,CACA,IAAI,oBAAEnZ,EAAmB,aAAE8hB,GAAiB,IAAM7b,KAAKV,OACvDvF,EAAoBkB,IAAM8B,EAAAA,GACxBiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAexX,IACfsiB,EAAAA,IAGF,IAAIwC,EAAqBlE,EAAa5U,QAAQ3I,GAE1CA,EAAK0hB,eACL/I,EAAAA,GAA+BgJ,+BAC/B3hB,EAAK4hB,iBAAmBjJ,EAAAA,GAAyBkJ,QAIrD,IAAIC,EAAuB,QAGFhkB,IAAvB2jB,GACAA,EAAmB7kB,OAAS,IAE5BklB,EACEL,EAAmB,GAAGM,gBAE1BtmB,EAAoB6E,QAASoB,KAAKS,MAAMwC,YACrCV,aAAa2b,kBAEZkC,EAAqB/M,QACrB/U,EAAKgiB,+CAA+CC,gBACjD,GACLxjB,EAAAA,GACEiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAe+N,OACfjD,EAAAA,KAGJxjB,EAAoB8C,aAAc,EAClCmD,KAAKygB,4BAA4B,CAACniB,IAElC0B,KAAK0gB,oBAAoB,CAACpiB,IAC1B0B,KAAKC,SAAS,CACZ6Z,WAAW,EACXtS,YAAalJ,EACbqiB,YAAa,CAACriB,GACd6J,cAAe,CAAC7J,GAChBid,aAAa,EACbxhB,uBAEJ,CAAE,MAAO6I,GACPG,QAAQC,IACN,0DACAJ,EAEJ,GACA,KAEFge,gBAAmBtiB,IACjB,IACE,IACGvB,EAAAA,GACCiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAeqN,KACfvC,EAAAA,IAEF,CAcA,YADAvd,KAAKue,WAAWjgB,EAAM,aAZH,CACjBsU,YAAa,WACbC,QAAS,gCACTC,qBAAsB,CACpB,CACEC,UAAW,GACXC,UAAW,GACXC,WAAW,EACXC,aAAc,+BAMtB,CACA,IAAI,oBAAEnZ,GAAwBiG,KAAKV,MAMnCvF,EAAoB8C,aAAc,OAC0BT,IAAxDkC,EAAKgiB,gDACPtgB,KAAKygB,4BAA4B,CAACniB,IAGpC0B,KAAK0gB,oBAAoB,CAACpiB,IAC1B0B,KAAKC,SAAS,CACZ6Z,WAAW,EACXyB,aAAa,EACb/T,YAAalJ,EACb+c,QAAS,EAETthB,wBAEFiG,KAAKC,SAAS,CAAE0a,aAAa,GAC/B,CAAE,MAAO/X,GACPG,QAAQC,IACN,0DACAJ,EAEJ,GACA,KAEFie,gBAAmBC,IACjB,IACE,IAAI,oBAAE/mB,EAAmB,aAAE0hB,EAAY,aAAEI,GAAiB,IAAK7b,KAAKV,OACpE,IAAIygB,EAAqBlE,EAAa5U,QAAQ3I,GAE1CA,EAAK0hB,eACL/I,EAAAA,GAA+BgJ,+BAC/B3hB,EAAK4hB,iBAAmBjJ,EAAAA,GAAyBkJ,QAGrD,IAAIC,EAAuB,QACAhkB,IAAvB2jB,GAAoCA,EAAmB7kB,OAAS,IAClEklB,EAAuBL,EAAmB,GAAGM,gBAE/C,IAAIU,IACFD,EAAME,WACHC,GACCb,EAAqB/M,QACnB4N,EAAEX,+CAA+CC,eAC/C,KACH,GAIPxmB,EAAoB6E,QAASoB,KAAKS,MAAMwC,YAAYV,aACjD2b,kBAEC6C,GACFD,EAAM5lB,OAAS,GACf6B,EAAAA,GACEiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAe+N,OACfjD,EAAAA,KAGJ9B,GAAe,EACfzb,KAAKC,SAAS,CACZkI,cAAe2Y,EACf/mB,sBACA4gB,aAAa,EACbiB,yBAA0B,GAC1BH,iBAKmB,IAAjBqF,EAAM5lB,SACR8E,KAAKygB,4BAA4BK,GACjC9gB,KAAK0gB,oBAAoBI,GACzB9gB,KAAKC,SAAS,CAAE0a,aAAa,IAEjC,CAAE,MAAO/X,GACPG,QAAQC,IACN,2DACAJ,EAEJ,GACA,KAsOF2b,WAAa,CAACxe,EAAMmhB,EAAUnE,KAC5B,IACE,IAAI,oBAAEhjB,EAAmB,aAAE8hB,GAAiB,IAAK7b,KAAKV,OAEtD,IAAIygB,EAAqBlE,EAAa5U,QAAQ3I,GAE1CA,EAAK0hB,eACL/I,EAAAA,GAA+BgJ,+BAC/B3hB,EAAK4hB,iBAAmBjJ,EAAAA,GAAyBkJ,QAIrD,IAAIC,EAAuB,QACAhkB,IAAvB2jB,GAAoCA,EAAmB7kB,OAAS,IAClEklB,EAAuBL,EAAmB,GAAGM,gBAE7C,IAAIc,OAAuE/kB,IAAtD2D,EAAKugB,gDAAoH,OAAtDvgB,EAAKugB,+CAA0DvgB,EAAKqhB,eAAgBrhB,EAAKugB,+CAiBnL,GAhBiC,YAA7BvD,EAAanK,cACf7Y,EAAoBkB,IAAM8B,EAAAA,GACxBiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAexX,IACfsiB,EAAAA,IAEFxjB,EAAoB6E,QAASoB,KAAKS,MAAMwC,YAAYV,aAAa2b,kBAAsBkC,EAAqB/M,QAAQ8N,EAAeZ,gBAAkB,GACnJxjB,EAAAA,GACEiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAe+N,OACfjD,EAAAA,KAEJvd,KAAKC,SAAS,CAAE+Z,mBAAmB,EAAMjgB,yBAIV,YAA7BgjB,EAAanK,aAA0C,QAAbsO,EAAoB,CAChE,IAAI/Y,EAAgB,CAClB,CACEsU,mBAAoB1c,EAAK+U,aACzBuM,mBAAoBthB,EAAKuhB,gBACzB7D,YAAa1d,EAAK+U,aAClBwL,+CAAgDa,IAGpDnhB,KAAKC,SAAS,CACZkI,iBAEJ,EACAgV,EAAAA,EAAAA,QACE1hB,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAAC2hB,EAAAA,EAAW,CAACC,oBAAqBN,MAEpC,CACEO,UAAwC,YAA7BP,EAAanK,aAA4B,KAG1D,CAAE,MAAOhQ,GACPG,QAAQC,IAAI,sDAAuDJ,EACrE,GACA,KAsDF2e,cAAiBjjB,IACf,IAAIkjB,EAAqBxhB,KAAKyhB,wBAC1BrD,EAAU,CACZ,CACEjd,IAAKwb,EAAAA,GACLhgB,MAAO2B,EAAKwW,cAEd,CACE3T,IAAKwb,EAAAA,GACLhgB,MAAO6kB,IAGPnD,EAAM,CACRC,YAAa3B,EAAAA,GACbA,SAAUyB,GAEZtc,IACEgb,EAAAA,IACA/f,EAAAA,GACEshB,EACAre,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,KACtB,IAAyB,IAArBsC,EAAOC,UAAoB,CAC7B,IAAImE,EAAW,CACbgX,YAAapb,EAAOE,aAAauS,aACjCwL,+CACEje,EAAOE,aAAa6e,gBAExBphB,KAAKC,SACH,CACE6Z,WAAW,EACXyB,aAAa,IAEf,KACEvb,KAAKC,SAAS,CACZ6Z,WAAW,EACXyB,aAAa,EACbpT,cAAe,CAAC1B,KAElBzG,KAAK6f,eAAepZ,EAAS,GAGnC,KAED9D,OAAOC,IACNG,QAAQC,IAAI,sCAAuCJ,EAAM,GACzD,EACJ,KA6FFkc,uBAAwB,KACtB,IAAI/C,GACoD,IAAxD/b,KAAKS,MAAMwC,YAAYV,aAAa2b,gBAIpCle,KAAKC,SAAS,CAAE8b,4CAA4C,MACV,IAA5CA,GACF/b,KAAK0hB,iBACP,GAAG,EACJ,KAEDA,gBAAiB,KACjB1hB,KAAKuc,4BACL,IAAIje,EAAO4B,IAAAA,UAAiBF,KAAKV,MAAM6I,cAAc,IACjDiW,EAAU,CACZ,CACEjd,IAAKwb,EAAAA,GACLhgB,MAAO2B,EAAKmf,aAEd,CACEtc,IAAKwb,EAAAA,GACLhgB,MAAO2B,EAAKgiB,iDAGZjC,EAAM,CACRC,YAAa3B,EAAAA,GACbA,SAAUyB,GAERrB,EAAe,CACjBnK,YAAa,WACbC,QAAS,0CACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,4CACZC,UAAW,CAAC1U,EAAKmf,aACjBxK,WAAW,EACXC,aAAc,MAIpBpR,IACEgb,EAAAA,IACA/f,EAAAA,GACEshB,EACAre,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,KAGtB,GAFAgd,EAAanK,YAAcvQ,EAAOC,UAAY,UAAY,WAC1Dya,EAAajK,qBAAqB,GAAGG,UAAY5Q,EAAOC,WAC/B,IAArBD,EAAOC,UAAoB,CAC7B,IAAIqf,EAAY,CAAElE,YAAanf,EAAKmf,aACpCzd,KAAKC,SACH,CACEuH,YAAama,EACbhH,aAAa,IAEf,KACE,IAA6B,IAAzB3a,KAAKV,MAAMwa,UAAoB,CACjC,IAAI0D,EAAa,CACf1I,aAAc9U,KAAKV,MAAM6I,cAAc,GAAGsV,aAE5Czd,KAAK0d,mBAAmBF,EAC1B,MACExd,KAAK6C,mBACP,KAGyB,IAAzB7C,KAAKV,MAAMwa,WACb9Z,KAAKC,SACH,CACE6Z,WAAW,EACXyB,aAAa,IAEf,KACEvb,KAAKC,SAAS,CACZ6Z,WAAW,EACXyB,aAAa,GACb,GAIV,MACExY,QAAQC,IAAI,4BAA6BX,EAAOK,WAChDqa,EAAajK,qBAAqB,GAAGI,aACnC7Q,EAAOK,UAAU,GAAKuU,EAAAA,GAAsB,GAEhDjX,KAAKue,WAAWjgB,EAAM,kBAAmBye,EAAa,IAEvDpa,OAAOC,IACNma,EAAajK,qBAAqB,GAAGI,aAAetQ,EACpD5C,KAAKue,WAAWjgB,EAAM,kBAAmBye,GACzCha,QAAQC,IAAI,+BAAgCJ,EAAM,GAClD,EACL,KAEDyc,cAAe,KACb,IAAIlD,GACoD,IAAxDnc,KAAKS,MAAMwC,YAAYV,aAAa2b,gBAIpCle,KAAKC,SAAS,CAAEkc,gCAAgC,MACV,IAAhCA,GACFnc,KAAK4hB,UACP,GAAG,EAEJ,KAEHA,SAAU,KACR5hB,KAAKuc,4BACL,IAAIje,EAAO4B,IAAAA,UAAiBF,KAAKV,MAAM6I,cAAc,IACjDiW,EAAU,CACZ,CACEjd,IAAKwb,EAAAA,GACLhgB,MAAO2B,EAAKmf,cAGZY,EAAM,CACRC,YAAa3B,EAAAA,GACbA,SAAUyB,GAERrB,EAAe,CACjBnK,YAAa,WACbC,QAAS,mCACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,4CACZC,UAAW,CAAC1U,EAAKmf,aACjBxK,WAAW,EACXC,aAAc,MAIpBpR,IACEgb,EAAAA,IACA/f,EAAAA,GACEshB,EACAre,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,KACtBgd,EAAanK,YAAcvQ,EAAOC,UAAY,UAAY,WAC1Dya,EAAajK,qBAAqB,GAAGG,UAAY5Q,EAAOC,WAC/B,IAArBD,EAAOC,YAETya,EAAajK,qBAAqB,GAAGI,aACnC7Q,EAAOK,UAAU,GAAKuU,EAAAA,GAAsB,GAC9ClU,QAAQC,IAAI,qBAAsBX,EAAOK,YAE3C1C,KAAKue,WAAWjgB,EAAM,WAAYye,EAAa,IAEhDpa,OAAOC,IACNma,EAAajK,qBAAqB,GAAGI,aAAetQ,EACpD5C,KAAKue,WAAWjgB,EAAM,WAAYye,GAClCha,QAAQC,IAAI,wBAAyBJ,EAAM,GAC3C,EACL,KAED4c,cAAe,KACb,IAAItD,GACoD,IAAxDlc,KAAKS,MAAMwC,YAAYV,aAAa2b,gBAIpCle,KAAKC,SAAS,CAAEic,qCAAqC,MACV,IAArCA,GACFlc,KAAK6hB,UACP,GAAG,EAEJ,KAEHA,SAAU,KACR7hB,KAAKuc,4BACL,IAAIje,EAAO4B,IAAAA,UAAiBF,KAAKV,MAAM6I,cAAc,IACjDiW,EAAU,CACZ,CACEjd,IAAKwb,EAAAA,GACLhgB,MAAO2B,EAAKmf,cAGZY,EAAM,CACRC,YAAa3B,EAAAA,GACbA,SAAUyB,GAERrB,EAAe,CACjBnK,YAAa,WACbC,QAAS,mCACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,4CACZC,UAAW,CAAC1U,EAAKmf,aACjBxK,WAAW,EACXC,aAAc,MAIpBpR,IACEgb,EAAAA,IACA/f,EAAAA,GACEshB,EACAre,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,KACtBgd,EAAanK,YAAcvQ,EAAOC,UAAY,UAAY,WAC1Dya,EAAajK,qBAAqB,GAAGG,UAAY5Q,EAAOC,WAC/B,IAArBD,EAAOC,YAETya,EAAajK,qBAAqB,GAAGI,aACnC7Q,EAAOK,UAAU,GAAKuU,EAAAA,GAAsB,GAC9ClU,QAAQC,IAAI,qBAAsBX,EAAOK,YAE3C1C,KAAKue,WAAWjgB,EAAM,WAAYye,EAAa,IAEhDpa,OAAOC,IACNma,EAAajK,qBAAqB,GAAGI,aAAetQ,EACpD5C,KAAKue,WAAWjgB,EAAM,WAAYye,GAClCha,QAAQC,IAAI,wBAAyBJ,EAAM,GAC3C,EACL,KAsPD8O,SAAW,CAACgD,EAAiBC,KAC3B,IAAIyJ,EAAU,CACZ,CACEjd,IAAKwb,EAAAA,GACLhgB,MAAOqD,KAAKV,MAAM6I,cAAc,GAAGsV,aAErC,CACEtc,IAAKwb,EAAAA,GACLhgB,MAAO+X,GAET,CACEvT,IAAKwb,EAAAA,GACLhgB,MAAOgY,IAGP0J,EAAM,CACRC,YAAa3B,EAAAA,GACbA,SAAUyB,GAEZtc,IACEgb,EAAAA,IACA/f,EAAAA,GACEshB,EACAre,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACQA,EAASrC,KACXuC,WACTtC,KAAKmf,gCACP,IAEDxc,OAAOC,IACNG,QAAQC,IAAI,mDAAoDJ,EAAM,GACtE,EACJ,KAmCFkf,qBAAuB,KAErB9hB,KAAK+hB,eAGL5T,OAAO6T,oBAAoB,eAAgBhiB,KAAK+hB,aAAa,EAC9D,KAEDA,aAAe,KACbpY,eAAesY,WAAWjiB,KAAKoc,cAAgB,YAAY,EAC5D,KAuBD8F,iCAAoCrlB,IAClC,IACEmD,KAAKC,SAAS,CAAE/F,oBAAqB2C,IACrCmD,KAAKgd,wBACLhd,KAAKmiB,iBAAiBtlB,EACxB,CAAE,MAAO+F,GACPG,QAAQC,IACN,4EACAJ,EAEJ,GACA,KA+FFwf,oBAAuBC,IACrB,IACE,IAAIC,EAAapiB,IAAAA,UAAiBF,KAAKV,MAAM6b,4BAC7CmH,EAAaA,EAAWrb,QAAO,SAAUsb,GACvC,OAAOA,EAAYC,eAAiBH,CACtC,IACA,IAAItN,EAAiB7U,IAAAA,UAAiBF,KAAKV,MAAMyV,gBAC7C0N,EAAkB,GACtBH,EAAWjb,SAASuR,IAClBA,EAAI8J,sBAAsBrb,SAAS2P,IACjCyL,EAAgBva,KAAK,CACnBya,cAAe3L,EAAU4L,KACzB7L,cAAeC,EAAU6L,YACzBtL,eAAgBP,EAAU8L,aAC1BN,aAAcxL,EAAUwL,aACxBO,YAAa/L,EAAU+L,YACvBtX,SAAUuL,EAAUvL,SACpBuX,WAAYhM,EAAUgM,WACtBC,gBAAiB,IACjB,GACF,IAGJ,IAAIC,EAAwBhjB,IAAAA,UAAiBuiB,GAC7C1N,EAAe1N,SAAS8b,IACtB,GACkB,OAAhBA,EAAM/P,OACqB,OAA1B+P,EAAMxM,sBACqBva,IAA1B+mB,EAAMxM,gBAOH,CAEuB,OAA1BwM,EAAMxM,sBACoBva,IAA1B+mB,EAAMxM,iBAENwM,EAAMxM,gBAAkBwM,EAAMxM,gBAAgB1P,QAAO,SACnDsb,GAEA,OAAOA,EAAYC,eAAiBH,CACtC,IACAI,EAAkBA,EAAgBxb,QAAO,SAAUsb,GACjD,OAAQY,EAAMxM,gBAAgByM,MAAK,SAAUC,GAC3C,OAAOd,EAAYC,eAAiBa,EAAYb,YAClD,GACF,KAEAW,EAAMxM,gBAAkB,GAE1B,IAAI2M,EAAsBpjB,IAAAA,UAAiBuiB,GAC3C,GACEhM,MAAMC,QAAQyM,EAAMjO,aACC,OAArBiO,EAAMjO,iBACe9Y,IAArB+mB,EAAMjO,YACNiO,EAAMjO,WAAWha,OAAS,EAC1B,CACiCioB,EAAMjO,WAAWjO,QAAO,SACvDsb,GAEA,OAAOA,EAAYC,eAAiBH,CACtC,IAC2Bhb,SAASuR,IAClCA,EAAI2K,oBAAoBlc,SAASmc,IAC/B,IAAIC,EAAeH,EAAoBtC,WACpC1iB,GACCA,EAAKkkB,eAAiB5J,EAAI4J,cAC1BlkB,EAAKqkB,gBAAkBa,EAAQb,gBAE/Bc,GAAgB,IAClBH,EAAoBG,GAAclM,eAChCiM,EAAQjM,eAAc,GAC1B,IAEJ+L,EAAoBjc,SAASqc,IAC3BA,EAAmBT,gBAAkBE,EAAM/P,MAC3C+P,EAAMxM,gBAAgBzO,KAAKwb,EAAmB,GAElD,KAAO,CACMxjB,IAAAA,UAAiBuiB,GACvBpb,SAASqc,IACZA,EAAmBT,gBAAkBE,EAAM/P,MAC3C+P,EAAMxM,gBAAgBzO,KAAKwb,EAAmB,GAElD,CACF,MA1DEP,EAAMxM,gBAAkB,GACxBuM,EAAsB7b,SAASqc,IAC7BA,EAAmBT,gBAAkBE,EAAM/P,MAC3C+P,EAAMxM,gBAAgBzO,KAAKwb,EAAmB,GAuDlD,IAEF1jB,KAAKC,SAAS,CAAE8U,kBAClB,CAAE,MAAOnS,GACPG,QAAQC,IACN,kEACAJ,EAEJ,GACA,KAkDF+gB,YAAeC,IACb5jB,KAAKC,SAAS,CACZob,QAASuI,GACT,EACF,KAEFC,aAAe,KACb,IAAIpI,EAAevb,IAAAA,UAAiBF,KAAKV,MAAMmc,cAC/Czb,KAAKC,SAAS,CACZwb,cAAeA,GACf,EAiIJ,KAIAqI,mBAAqB,KACnB,IACE,IAAIhI,GACsD,IAAxD9b,KAAKS,MAAMwC,YAAYV,aAAa2b,gBAGtCle,KAAKC,SAAS,CAAE6b,oCACuB,IAAnCA,GACF9b,KAAKsc,cAET,CAAE,MAAO1Z,GACPG,QAAQC,IAAI,0DACd,GACA,KAIFuZ,0BAA4B,KAE1Bvc,KAAKC,SAAS,CACZ6b,gCAAgC,EAChCC,yCAAyC,EACzCC,uCAAuC,EACvCC,iCAAiC,EACjCC,kCAAiC,EACjCC,6BAA6B,GAC7B,CACF,CAnjEF4H,aAAAA,GACE,IACEjiB,IACEgb,EAAAA,IACA/f,EAAAA,GACE,CAACinB,EAAAA,IACDhkB,KAAKS,MAAMwB,aAAaC,YAE1BC,MAAMC,IACN,IAAIC,EAASD,EAASrC,KAClBsC,EAAOC,UACTtC,KAAKC,SAAS,CACZkb,2BACE9Y,EAAOE,aAAayhB,2BAGxBjhB,QAAQC,IAAI,2BACd,GAEJ,CAAE,MAAOJ,GACPG,QAAQC,IAAI,kCAAmCJ,EACjD,CACF,CAgMAqhB,WAAAA,GACE,IAAIC,EAAO,KAETA,EADElkB,KAAKS,MAAMwC,YAAYV,aAAagQ,WAC/B,MAAQ0E,EAAAA,GAA4B,aAEpC,MAAQA,EAAAA,GAAsB,aAEvC,IAAIkN,EAAc,CAChBC,QAASpkB,KAAKS,MAAMwC,YAAYV,aAAa8hB,UAE7CvP,aACsC,IAApC9U,KAAKV,MAAM6I,cAAcjN,OACrB8E,KAAKV,MAAM6I,cAAc,GAAGsV,YAC5Bzd,KAAKV,MAAMkI,YAAYiW,aAG/B,OACEhiB,EAAAA,EAAAA,KAAC6oB,EAAAA,EAAa,CACZ5I,WAAY1b,KAAKV,MAAMoc,WACvB9J,WAAY5R,KAAKge,gBACjBuG,iBAAkBvkB,KAAKge,gBAEvBwG,gBAAiB1H,EAAAA,IACjB2H,kBAAmBzkB,KAAK0e,iBACxBgG,SAAUR,EACVS,WAAYR,GAGlB,CA2XA1D,2BAAAA,CAA4BK,GAC1B,IACEhf,IACEgb,EAAAA,GACA,mBACAgE,EAAM,GAAGR,+CACTvjB,EAAAA,GACEiD,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,KACtB,IAAI6kB,EAAiB,GAMrB,GALAvkB,OAAOwkB,KAAKxiB,EAAOE,cAAc8E,SAASuX,IACpCvc,EAAOE,aAAaqc,IACtBgG,EAAe1c,KAAK0W,EACtB,IAEE5e,KAAKS,MAAMwC,YAAYV,aAAa2b,gBAAiB,CACvD,IAAI4G,EAAkBF,EAAe3d,QAAO,SAAU3I,GACpD,OACEA,IACA2Y,EAAAA,GACGmI,iCACH9gB,IACA2Y,EAAAA,GACGsI,+BAEP,IACAqF,EAAiBE,CACnB,CACA,GACE9kB,KAAKS,MAAMwC,YAAYV,aAAagQ,YACpCvS,KAAKS,MAAMwC,YAAYV,aAAa2b,gBACpC,CACA,IAAI4G,EAAkBF,EAAe3d,QAAO,SAAU3I,GACpD,OACEA,IACA2Y,EAAAA,GACG+H,uCACH1gB,IACA2Y,EAAAA,GACGqI,gCACHhhB,IACA2Y,EAAAA,GACGiI,uCAEP,IACA0F,EAAiBE,CACnB,CACA,IAAIC,EAAUH,EAAe3d,QAAQ3I,GAEjCA,IACA2Y,EAAAA,GACGiI,0CAGDniB,EAAAA,GACEiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAeqN,KACfnN,EAAAA,IASJrU,IACA2Y,EAAAA,GACG+H,wCAGDjiB,EAAAA,GACEiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAeqN,KACfkF,EAAAA,IASJ1mB,IACA2Y,EAAAA,GACG8H,6CAGDhiB,EAAAA,GACEiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAeC,OACfuS,EAAAA,IASJ3mB,IACA2Y,EAAAA,GACGmI,kCAGDriB,EAAAA,GACEiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAeqN,KACfoF,EAAAA,IASJ5mB,IACA2Y,EAAAA,GACGqI,iCAGDviB,EAAAA,GACEiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAeqN,KACfqF,EAAAA,IASJ7mB,IACA2Y,EAAAA,GACGsI,mCAGDxiB,EAAAA,GACEiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAeqN,KACfqF,EAAAA,MAWLnlB,KAAKS,MAAMwC,YAAYV,aAAa6iB,kBACkB,UAAvDtE,EAAMuE,8CACsB,OAA5BvE,EAAMwE,oBAENP,EAAU,IAEZ/kB,KAAKC,SAAS,CAAEqa,uBAAwByK,GAAU,IAEnDpiB,OAAOC,IACNG,QAAQC,IACN,mDACAJ,EACD,GAEP,CAAE,MAAOA,GACPG,QAAQC,IAAIJ,EACd,CACF,CAEA8d,mBAAAA,CAAoBI,GAClB,IACEhf,IACEgb,EAAAA,IACA,uBACAgE,EAAM,GAAGrD,YACT,4BACA1gB,EAAAA,GACEiD,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,KACtBC,KAAKC,SAAS,CACZsa,wBAAyBlY,EAAOE,eAE9BF,EAAOC,SAEX,IAEDK,OAAOC,IACNG,QAAQC,IAAI,2CAA4CJ,EAAM,GAEpE,CAAE,MAAOA,GACPG,QAAQC,IAAIJ,EACd,CACF,CAEAuf,gBAAAA,CAAiBtlB,GACf,IACsB,OAAhBA,GAAwC,KAAhBA,EAC1BiF,IACEgb,EAAAA,IACA/f,EAAAA,GACE,CAACF,GACDmD,KAAKS,MAAMwB,aAAaC,YAE1BC,MAAMC,IACFA,EAASrC,KAAKuC,WAChBtC,KAAKC,SAAS,CAAEoL,cAAejJ,EAASrC,KAAKwC,cAC/C,IAGFvC,KAAKC,SAAS,CAAEoL,cAAe,IAEnC,CAAE,MAAOzI,GACPG,QAAQC,IACN,4DACAJ,EAEJ,CACF,CA6DA8a,kBAAAA,CAAmBpf,GACjB,IAAIkjB,EAAqBxhB,KAAKyhB,wBAC1BrD,EAAU,CACZ,CACEjd,IAAKwb,EAAAA,GACLhgB,MAAO2B,EAAKwW,cAEd,CACE3T,IAAKwb,EAAAA,GACLhgB,MAAO6kB,IAGPnD,EAAM,CACRC,YAAa3B,EAAAA,GACbA,SAAUyB,GAEZtc,IACEgb,EAAAA,IACA/f,EAAAA,GACEshB,EACAre,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,KACtB,IAAyB,IAArBsC,EAAOC,UAAoB,CAC7B,IAAImE,EAAW,CACbgX,YAAapb,EAAOE,aAAauS,aACjCwL,+CACEje,EAAOE,aAAa6e,gBAExBphB,KAAKC,SACH,CACE6Z,WAAW,EACXyB,aAAa,IAEf,KACEvb,KAAKC,SAAS,CACZkI,cAAe,CAAC1B,KAElBzG,KAAK6f,eAAepZ,GACpBzG,KAAKygB,4BAA4B,CAACha,GAAU,GAIlD,KAED9D,OAAOC,IACNG,QAAQC,IAAI,sCAAuCJ,EAAM,GAE/D,CAsDAoa,qBAAAA,GACEhd,KAAKC,SAAS,CAAE8Z,iBAAiB,IACjC,IAAII,EAAW,IAAIzO,KAAK1L,KAAKV,MAAM6a,UAC/BC,EAAS,IAAI1O,KAAK1L,KAAKV,MAAM8a,QACjCD,EAASoL,SAAS,EAAG,EAAG,GACxBnL,EAAOmL,SAAS,GAAI,GAAI,IAExB,IAAIlH,EAAM,CACRmH,WAAYrL,EACZsL,SAAUrL,EACVsL,mBAAoB,UAGtB5jB,IACEgb,EAAAA,IACA/f,EAAAA,GACEshB,EACAre,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,MACG,IAArBsC,EAAOC,UACTtC,KAAKC,SACH,CACEF,KAAMsC,EAAOE,aACbwX,iBAAiB,IAEnB,KACE,IAC6B,IAA3B/Z,KAAKV,MAAMqb,aACyB,IAApC3a,KAAKV,MAAM6I,cAAcjN,OACzB,CACA,IAAIyqB,EAAe3lB,KAAKV,MAAM6I,cAAc,GAC5C,IAAIyd,EAAsBvjB,EAAOE,aAAasjB,MAAM5e,QAClD,SAAU3I,GACR,OAAOA,EAAKmf,cAAgBkI,EAAalI,WAC3C,IAGF,IAAI,oBAAE1jB,EAAmB,aAAE8hB,GAAiB,IAAK7b,KAAKV,OAClDygB,EAAqBlE,EAAa5U,QAAQ3I,GAE1CA,EAAK0hB,eACL/I,EAAAA,GAA+BgJ,+BAC/B3hB,EAAK4hB,iBAAmBjJ,EAAAA,GAAyBkJ,QAIrD,IAAIC,EAAuB,QAGFhkB,IAAvB2jB,GACAA,EAAmB7kB,OAAS,IAE5BklB,EACEL,EAAmB,GAAGM,gBAE1BtmB,EAAoB6E,QAASoB,KAAKS,MAAMwC,YACrCV,aAAa2b,kBAEZkC,EAAqB/M,QACrBuS,EAAoB,GAAGtF,+CAA+CC,gBACnE,GACLxjB,EAAAA,GACEiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAe+N,OACfjD,EAAAA,KAIJvd,KAAKC,SAAS,CAAEkI,cAAeyd,EAAqB7rB,wBACpDiG,KAAKygB,4BAA4BmF,GACjC5lB,KAAK0gB,oBAAoBkF,EAC3B,MAIJ5lB,KAAKC,SAAS,CAAEF,KAAM,GAAIga,iBAAiB,IAC3ChX,QAAQC,IACN,yCACAX,EAAOK,WAEX,IAEDC,OAAOC,IACN5C,KAAKC,SAAS,CAAEF,KAAM,GAAIga,iBAAiB,IAC3ChX,QAAQC,IAAI,0CAA2CJ,EAAM,GAEnE,CAoOA8c,WAAAA,GACE,IAAIphB,EAAO4B,IAAAA,UAAiBF,KAAKV,MAAM6I,cAAc,IACjDiW,EAAU,CACZ,CACEjd,IAAKwb,EAAAA,GACLhgB,MAAO2B,EAAKmf,cAGZY,EAAM,CACRC,YAAa3B,EAAAA,GACbA,SAAUyB,GAERrB,EAAe,CACjBnK,YAAa,WACbC,QAAS,wCACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,4CACZC,UAAW,CAAC1U,EAAKmf,aACjBxK,WAAW,EACXC,aAAc,MAIpBpR,IACEgb,EAAAA,GACA/f,EAAAA,GACEshB,EACAre,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,KACtBgd,EAAanK,YAAcvQ,EAAOC,UAAY,UAAY,WAC1Dya,EAAajK,qBAAqB,GAAGG,UAAY5Q,EAAOC,WAC/B,IAArBD,EAAOC,YAETya,EAAajK,qBAAqB,GAAGI,aACnC7Q,EAAOK,UAAU,GACnBK,QAAQC,IAAI,wBAAyBX,EAAOK,YAE9C1C,KAAKue,WAAWjgB,EAAM,cAAeye,EAAa,IAEnDpa,OAAOC,IACNma,EAAajK,qBAAqB,GAAGI,aAAetQ,EACpD5C,KAAKue,WAAWjgB,EAAM,cAAeye,GACrCha,QAAQC,IAAI,2BAA4BJ,EAAM,GAEpD,CAEAgd,iBAAAA,CAAkBpY,GAChBse,EAAAA,GAAoBC,YAClB/lB,KAAKS,MAAMwC,YAAYV,aAAayjB,cAAcC,YAAYF,YAChED,EAAAA,GAAoBI,cACkB,IAApClmB,KAAKV,MAAM+L,cAAcnQ,OACrB,IAAI8E,KAAKV,MAAM+L,eACf,GAEN,IAAImW,EAAqBxhB,KAAKyhB,wBAG9B,GAFAqE,EAAAA,GAAoBJ,mBAAqBlE,OAETplB,IAA5BoL,EAAYiW,YAAhB,CAOA,IAAIW,EAAU,CACZ,CACEjd,IAAKwb,EAAAA,GACLhgB,MAAO6K,EAAYiW,aAErB,CACEtc,IAAKwb,EAAAA,GACLhgB,MAAO6kB,IAGPnD,EAAM,CACRC,YAAa3B,EAAAA,GACbA,SAAUyB,GAERrB,EAAe,CACjBnK,YAAa,WACbC,QAAS,uCACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,4CACZC,UAAW,CAACxL,EAAYiW,aACxBxK,WAAW,EACXC,aAAc,MAIpBpR,IACEgb,EAAAA,IACA/f,EAAAA,GACEshB,EACAre,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,KACtB,IAAI,oBAAEhG,GAAwBiG,KAAKV,OACV,IAArB+C,EAAOC,WACTvI,EAAoB6E,QAAS,EAC7B7E,EAAoBkB,KAAM,EAC1B+E,KAAKC,SAAS,CACZqb,kBAAmBpb,IAAAA,UAAiBmC,EAAOE,cAC3C0Y,eAAe,EACflhB,sBACA6hB,yBAA0B,OAG5BmB,EAAajK,qBAAqB,GAAGI,aACnC7Q,EAAOK,UAAU,GACnB1C,KAAKue,WAAW/W,EAAa,gBAAiBuV,GAC9Cha,QAAQC,IAAI,8BAA+BX,EAAOK,WACpD,IAEDC,OAAOC,IACNma,EAAajK,qBAAqB,GAAGI,aAAetQ,EACpD5C,KAAKue,WAAW/W,EAAa,gBAAiBuV,GAC9Cha,QAAQC,IAAI,sCAAuCJ,EAAM,GAxD7D,MALE5C,KAAKC,SAAS,CACZqb,kBAAmBpb,IAAAA,UAAiB4lB,EAAAA,IACpC7K,eAAe,GA8DrB,CAIApb,aAAAA,CAAcC,EAAcC,GAC1B,IACE,MAAMN,EAAmBS,IAAAA,UAAiBF,KAAKV,MAAMG,kBAErD,GADAO,KAAKC,SAAS,CAAEwa,OAAQ1a,SAC0B3D,IAA9Cgf,EAAAA,GAA4Btb,GAM9B,OALAL,EAAiBK,GAAgB/C,EAAAA,GAC/Bqe,EAAAA,GAA4Btb,GAC5BC,GAEFC,KAAKC,SAAS,CAAER,qBAEc,KAA5BA,EAAiB0mB,aACW/pB,IAA5BqD,EAAiB0mB,MAOvB,CAAE,MAAOvjB,GACPG,QAAQC,IACN,8DACAJ,EAEJ,CACF,CAEAuc,8BAAAA,GACE,IAAI7gB,EAAO4B,IAAAA,UAAiBF,KAAKV,MAAM6I,cAAc,IACjD4U,EAAe,CACjBnK,YAAa,WACbC,QAAS,iCACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,4CACZC,UAAW,CAAC1U,EAAKmf,aACjBxK,WAAW,EACXC,aAAc,MAIpBpR,IACEgb,EAAAA,IACA,uBACAxe,EAAKmf,YACL1gB,EAAAA,GAAwCiD,KAAKS,MAAMwB,aAAaC,YAE/DC,MAAMC,IACL,IAAIC,EAASD,EAASrC,KACtBgd,EAAanK,YAAcvQ,EAAOC,UAAY,UAAY,WAC1Dya,EAAajK,qBAAqB,GAAGG,UAAY5Q,EAAOC,WAC/B,IAArBD,EAAOC,UACTtC,KAAKC,SAAS,CAAEga,eAAgB5X,EAAOE,gBAEvCvC,KAAKC,SAAS,CAAEga,eAAgB,KAChC8C,EAAajK,qBAAqB,GAAGI,aACnC7Q,EAAOK,UAAU,GACnB1C,KAAKC,SAAS,CAAEF,KAAM,GAAIga,iBAAiB,IAC3C/Z,KAAKue,WAAWjgB,EAAM,8BAA+Bye,GACvD,IAEDpa,OAAOC,IACN5C,KAAKC,SAAS,CAAEga,eAAgB,KAChC8C,EAAajK,qBAAqB,GAAGI,aAAetQ,EACpD5C,KAAKue,WAAWjgB,EAAM,8BAA+Bye,GACrD/c,KAAKC,SAAS,CAAEF,KAAM,GAAIga,iBAAiB,IAC3ChX,QAAQC,IAAI,mDAAoDJ,EAAM,IAG1Ed,IACEgb,EAAAA,IACA,uBACAxe,EAAKmf,YACL1gB,EAAAA,GAAwCiD,KAAKS,MAAMwB,aAAaC,YAE/DC,MAAMC,IACL,IAAIC,EAASD,EAASrC,KACtBgd,EAAanK,YAAcvQ,EAAOC,UAAY,UAAY,WAC1Dya,EAAajK,qBAAqB,GAAGG,UAAY5Q,EAAOC,UACxD,IAAI,oBAAEvI,GAAwB,IAAKiG,KAAKV,OACxCvF,EAAoB6E,QAAS,EAC7B7E,EAAoBkB,KAAM,EAC1BlB,EAAoB8C,aAAc,GACT,IAArBwF,EAAOC,UACTtC,KAAKC,SAAS,CACZwR,yBAA0BpP,EAAOE,aACjCwX,iBAAiB,EACjBiB,sBAAsB,EACtBjhB,yBAGFiG,KAAKC,SAAS,CACZwR,yBAA0B,GAC1BsI,iBAAiB,EACjBiB,sBAAsB,EACtBjhB,wBAEFgjB,EAAajK,qBAAqB,GAAGI,aACnC7Q,EAAOK,UAAU,GACnB1C,KAAKue,WAAWjgB,EAAM,8BAA+Bye,GACvD,IAEDpa,OAAOC,IACN5C,KAAKC,SAAS,CACZwR,yBAA0B,GAC1BsI,iBAAiB,EACjBiB,sBAAsB,IAExB+B,EAAajK,qBAAqB,GAAGI,aAAetQ,EACpD5C,KAAKue,WAAWjgB,EAAM,8BAA+Bye,GACrDha,QAAQC,IAAI,mDAAoDJ,EAAM,GAE5E,CAuCAC,iBAAAA,GACE,IACE9F,EAAAA,GAAqBiD,KAAKS,MAAMwC,YAAYV,aAAagQ,YACzD,IAAI,oBAAExY,GAAwB,IAAKiG,KAAKV,OACxCvF,EAAoBkB,IAAM8B,EAAAA,GACxBiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAexX,IACfsiB,EAAAA,IAEFvd,KAAK+jB,gBACL/jB,KAAKC,SAAS,CACZlG,sBACAG,oBACE8F,KAAKS,MAAMwC,YAAYV,aAAa6jB,qBAExCpmB,KAAKmiB,iBACHniB,KAAKS,MAAMwC,YAAYV,aAAa6jB,oBAEtCpmB,KAAKgd,sBACHhd,KAAKS,MAAMwC,YAAYV,aAAa6jB,oBAEtCpmB,KAAKid,aACLjd,KAAKqmB,yBACP,CAAE,MAAOzjB,GACPG,QAAQC,IACN,6DACAJ,EAEJ,CAEAuL,OAAOzI,iBAAiB,eAAgB1F,KAAK+hB,aAC/C,CAcAsE,uBAAAA,GACE,IACEvkB,IACEgb,EAAAA,IACA/f,EAAAA,GACEiD,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACDA,EAASrC,KAAKuC,WAChBtC,KAAKC,SAAS,CAAE4b,aAAczZ,EAASrC,KAAKwC,cAC9C,IAEDI,OAAOC,IACNG,QAAQC,IAAI,6CAA8CJ,EAAM,GAEtE,CAAE,MAAOA,GACPG,QAAQC,IAAI,oCAAqCJ,EACnD,CACF,CAeA6e,qBAAAA,GACE,IAAID,EAAqBvK,EAAAA,GAA6BqP,OACtD,MAAM,UAAEvnB,GAAciB,KAAKS,MAAM8lB,WAIjC,YAHkBnqB,IAAd2C,QAA4D3C,IAAjC2C,EAAUyiB,qBACvCA,EAAqBziB,EAAUyiB,oBAE1BA,CACT,CAEAvC,iBAAAA,CAAkBzB,GAChB,IAAI,oBAAEzjB,GAAwB,IAAKiG,KAAKV,OACxCvF,EAAoBkB,KAAM,EAC1BlB,EAAoB6E,QAAS,EAE7BkD,IACEgb,EAAAA,IACA,uBACAU,EAAWC,YACX1gB,EAAAA,GAAwCiD,KAAKS,MAAMwB,aAAaC,YAE/DC,MAAMC,IACL,IAAIC,EAASD,EAASrC,KACtB,IAAyB,IAArBsC,EAAOC,UAAoB,CAC7B,IAAI0S,EAAoB9U,IAAAA,UAAiBmC,EAAOE,cAC5CwS,EAAiB7U,IAAAA,UAAiBmC,EAAOE,cAC7C,IAAK,IAAI+G,EAAI,EAAGA,EAAI0L,EAAkB9Z,OAAQoO,IAAK,CACjD,IAAI6X,EAAiBnM,EAAkB1L,GAAG8X,eACtCD,IAAmBlK,EAAAA,GAA8BhB,YACnDkL,EAAiBlK,EAAAA,GAA6BhB,YAE9CkL,IAAmBlK,EAAAA,GAA8Bd,OAEjDgL,EAAiBlK,EAAAA,GAA6Bd,OAE9CgL,IAAmBlK,EAAAA,GAA8BtB,YAEjDwL,EAAiBlK,EAAAA,GAA6BtB,YAE9CwL,IAAmBlK,EAAAA,GAA8B3B,QAEjD6L,EAAiBlK,EAAAA,GAA6B3B,QAE9C6L,IAAmBlK,EAAAA,GAA8Bb,gBAEjD+K,EAAiBlK,EAAAA,GAA6Bb,gBAE9C+K,IAAmBlK,EAAAA,GAA8BZ,iBAEjD8K,EAAiBlK,EAAAA,GAA6BZ,iBAE9C8K,IAAmBlK,EAAAA,GAA8BX,OAEjD6K,EAAiBlK,EAAAA,GAA6BX,OACrC6K,IAAmBlK,EAAAA,GAA8BV,QAC1D4K,EAAiBlK,EAAAA,GAA6BV,OAEhDvB,EAAkB1L,GAAG8X,eAAiBD,EACtCnM,EAAkB1L,GAAGkd,YACnB,IAAI9a,KAAKsJ,EAAkB1L,GAAGkd,aAAa7a,qBAC3C,IACA,IAAID,KAAKsJ,EAAkB1L,GAAGkd,aAAa5a,qBAC7CmJ,EAAezL,GAAG8J,MAAQ9J,CAC5B,CACAtJ,KAAKC,SACH,CACElG,sBACAgb,iBACAC,oBACA8F,kBAAkB,EAClBc,yBAA0B,KAE5B,KACE,IAAIT,EAA6Bjb,IAAAA,UAC/BF,KAAKV,MAAM6b,4BAEb,IAAK,IAAI7R,EAAI,EAAGA,EAAIyL,EAAe7Z,OAAQoO,IACzCyL,EAAezL,GAAGqN,gBAChB3W,KAAKymB,2BACH1R,EAAezL,GAAG4L,WAClBiG,EAEN,GAGN,MACEpY,QAAQC,IAAI,8BAA+BX,EAAOK,UACpD,IAEDC,OAAOC,IACNG,QAAQC,IAAI,yCAA0CJ,EAAM,GAElE,CAqGA6jB,0BAAAA,CAA2BnE,EAAYnH,GACrC,IAAIuL,EAAiB,GA4CrB,OA1CiC,OAA/BvL,QAC+B/e,IAA/B+e,GACAA,EAA2BjgB,OAAS,GAEpCigB,EAA2B9T,SAASuR,IAClCA,EAAI8J,sBAAsBrb,SAAS2P,IAEjC0P,EAAexe,KAAK,CAClBya,cAAe3L,EAAU4L,KACzB7L,cAAeC,EAAU6L,YACrB7L,EAAU6L,YACV7L,EAAU4L,KACdrL,eAAgBP,EAAU8L,aAC1BN,aAAcxL,EAAUwL,aACxBO,YAAa/L,EAAU+L,YACvBtX,SAAUuL,EAAUvL,SACpBuX,WAAYhM,EAAUgM,WACtB2D,SAAU3P,EAAU2P,SACpBC,SAAU5P,EAAU4P,SACpBC,iBAAkB7P,EAAU6P,iBAC5BC,eAAgB,IAChB,GACF,IAKW,OAAfxE,QACelmB,IAAfkmB,GACAA,EAAWpnB,OAAS,GAEpBonB,EAAWjb,SAASuR,IAClB8N,EAAerf,SAAS0f,IAClBA,EAAQvE,eAAiB5J,EAAI4J,cAC/B5J,EAAI2K,oBAAoBlc,SAAS2f,IAC3BD,EAAQpE,gBAAkBqE,EAAOrE,gBACnCoE,EAAQxP,eAAiByP,EAAOzP,eAAc,GAEpD,GACA,IAGCmP,CACT,CAgBAzJ,UAAAA,GAME,IAAgB,IALFlgB,EAAAA,GACZiD,KAAKS,MAAMwC,YAAYV,aAAaiQ,cACpCC,EAAAA,EAAeqN,KACfmH,EAAAA,IAEoB,CACpB,IAAIlK,EAAe,CACjBlK,QAAS,GACTD,YAAa,WACbE,qBAAsB,IAExB,IAAIoU,EAAoB,CACtBC,SAAUC,EAAAA,GACVC,gBAAiB,IAGnBvlB,IACEgb,EAAAA,IACA/f,EAAAA,GACEmqB,EACAlnB,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,MACG,IAArBsC,EAAOC,UACTtC,KAAKC,SAAS,CACZ0b,sBAAuBtZ,EAAOE,aAAa+kB,kBAG7CtnB,KAAKC,SAAS,CAAE0b,sBAAuB,KACvC5Y,QAAQC,IAAI,oCAAqCX,EAAOK,WACxDqa,EAAajK,qBAAqB5K,KAAK,CACrC6K,UAAW,GACXC,UAAW,GACXC,WAAW,EACXC,aAAc7Q,EAAOK,UAAU,MAG/Bqa,EAAajK,qBAAqB5X,OAAS,IAC7CiiB,EAAAA,EAAAA,QACE1hB,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAAC2hB,EAAAA,EAAW,CAACC,oBAAqBN,MAEpC,CACEO,UAC+B,YAA7BP,EAAanK,aAA4B,KAGjD,IAEDjQ,OAAOC,IACNG,QAAQC,IAAI,+CAAgDJ,EAAM,GAExE,CACF,CAuGA2kB,oBAAAA,GACE,OAAGvnB,KAAKV,MAAMwc,+BACLyB,EAAAA,GACDvd,KAAKV,MAAM0c,sCACViJ,EAAAA,GACDjlB,KAAKV,MAAMyc,wCACVyL,EAAAA,GACDxnB,KAAKV,MAAM2c,iCAAmCjc,KAAKV,MAAM4c,iCACxDiJ,EAAAA,GACCnlB,KAAKV,MAAM6c,4BACZ+I,EAAAA,QADF,CAER,CAEAuC,mBAAAA,GACC,OAAGznB,KAAKV,MAAMwc,+BACLrJ,EAAAA,EAAe+N,OAEf/N,EAAAA,EAAeC,MACzB,CAEAjQ,eAAAA,GAEC,OAAGzC,KAAKV,MAAMwc,+BACL9b,KAAKsc,aACNtc,KAAKV,MAAMyc,wCACV/b,KAAK0hB,gBACN1hB,KAAKV,MAAM0c,sCACVhc,KAAKme,oBACNne,KAAKV,MAAM6c,4BACVnc,KAAK4hB,SACN5hB,KAAKV,MAAM2c,gCACVjc,KAAKye,cACJze,KAAKV,MAAM4c,iCACZlc,KAAK6hB,cADP,CAEV,CAECxe,MAAAA,GACE,IAAIqkB,EAAuD,IAApC1nB,KAAKV,MAAM6I,cAAcjN,OAC5CysB,GAAW,OAEiBvrB,IAA9B4D,KAAKS,MAAMmnB,gBACmB,KAA9B5nB,KAAKS,MAAMmnB,gBACmB,OAA9B5nB,KAAKS,MAAMmnB,iBAEXD,GAAW,GAEb,IAAIE,GAA2B,EAE/B,GAAIH,QAA2DtrB,IAAvC4D,KAAKV,MAAMkI,YAAYiW,YAA2B,CACxE,IAAIqK,EAAqB9nB,KAAKV,MAAMuc,aAAa5U,QAAQ3I,GAErDA,EAAK0hB,eACL/I,EAAAA,GAA+B8Q,+BAC/BzpB,EAAK4hB,iBAAmBjJ,EAAAA,GAAyBkJ,QAIjD6H,EAAuB,QAEA5rB,IAAvB0rB,GACFA,EAAmB5sB,OAAS,IAC5B8sB,EAAuBF,EAAmB,GAAGzH,gBAE/CwH,EAA2BG,EAAqB3U,QAC9CrT,KAAKV,MAAM6I,cAAc,GAAGmY,+CAA+CC,gBACxE,CACP,CACA,OACEplB,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAAC8B,EAAAA,MAAK,CACJ7B,UAAU,mBACV6sB,WAAW,EACXC,QAASA,IACPloB,KAAKC,SAAS,CAAE4a,iBAAiB,EAAOJ,OAAQ,KAElDvd,KAAM8C,KAAKV,MAAMub,gBACjBsN,oBAAoB,EACpBC,sBAAsB,EACtBjrB,KAAK,QAAO3B,SAAA,EAEZC,EAAAA,EAAAA,KAACwB,EAAAA,MAAMoB,OAAM,CAAA7C,SAAEK,EAAE,qCACjBJ,EAAAA,EAAAA,KAACwB,EAAAA,MAAMG,QAAO,CAAA5B,UACZC,EAAAA,EAAAA,KAAC+H,EAAAA,MAAK,CACJC,OAAK,EACL9G,MAAOqD,KAAKV,MAAMmb,OAClB9W,UAAU,WACV3G,SAAW+C,GAASC,KAAKH,cAAc,SAAUE,GACjD6D,MAAO/H,EAAE,iCACT+G,MAAO/G,EAAEmE,KAAKV,MAAMG,iBAAiB0mB,aAGzChrB,EAAAA,EAAAA,MAAC8B,EAAAA,MAAMI,OAAM,CAAA7B,SAAA,EACXC,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLC,KAAK,YACLJ,KAAK,QACLK,QAAS3B,EAAE,iCACXM,QAASA,IACP6D,KAAKC,SAAS,CACZ4a,iBAAiB,EACjBJ,OAAQ,GACRhb,iBAAkB,QAIxBhE,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLC,KAAK,UACLJ,KAAK,QACLP,SAAUoD,KAAKV,MAAM4b,mBACrB1d,QAAS3B,EAAE,iCACXM,QAASA,IAAM6D,KAAKie,2BAM9BxiB,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACwD,EAAAA,EAAsB,CACrBlF,oBAAqBiG,KAAKV,MAAMvF,oBAChCC,eAAgBgG,KAAKS,MAAM8lB,WAC3BhsB,YAAY,EACZN,aAAc+F,KAAKS,MAAMwC,YAAYV,aAAa8lB,gBAClDnuB,oBAAqB8F,KAAKV,MAAMpF,oBAChCC,oBAAqB6F,KAAKkiB,iCAC1B7nB,MAAO2F,KAAKqc,UACZjiB,SAAU4F,KAAK8jB,mBACftpB,sBAAuBwF,KAAKS,MAAMjG,0BAGrCwF,KAAKV,MAAM0b,sBACVvf,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAAC+V,EAAoB,CACnBH,UAAWrR,KAAKV,MAAM2a,eAAe4L,MACrCpU,yBAA0BzR,KAAKV,MAAMmS,yBACrCC,SAAU1R,KAAK0R,SACfE,WAAY5R,KAAK4R,WACjBD,QAAS3R,KAAKue,WACdtb,YAAajD,KAAKS,MAAMwC,YACxB4O,OACE7R,KAAKV,MAAM6I,cAAc,GACtBmY,+CAELxO,gBACE9R,KAAKS,MAAMwC,YAAYV,aAAa2b,oBAIxCle,KAAKV,MAAMwb,kBACbrf,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACoZ,EAAmC,CAClCC,aAAc9U,KAAKV,MAAM6I,cAAc,GAAGsV,YAC1C1I,eAAgB/U,KAAKV,MAAMyV,eAC3BC,kBAAmBhV,KAAKV,MAAM0V,kBAC9BpD,WAAY5R,KAAK4R,WACjBqD,kBAAmBjV,KAAKV,MAAM2V,kBAC9BqT,kBAAmBtoB,KAAKsoB,kBACxBlD,iBAAkBplB,KAAKS,MAAM2kB,iBAC7BtT,gBACE9R,KAAKS,MAAMwC,YAAYV,aAAa2b,gBAEtChJ,gBACgC9Y,IAA9B4D,KAAKV,MAAMyV,gBACT/U,KAAKV,MAAMyV,eAAe7Z,OAAS,QACgBkB,IAAjD4D,KAAKV,MAAMyV,eAAe,GAAG4B,gBAC3B3W,KAAKV,MAAMyV,eAAe,GAAG4B,gBAE/B,OAIR3W,KAAKV,MAAM2b,eACbxf,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAAC8sB,EAAAA,QAAyC,CACxCC,aAAcxoB,KAAKV,MAAMgc,kBAAkBxG,aAC3ClD,WAAY5R,KAAK4R,WACjB6W,SAAUzoB,KAAKV,MAAMgc,kBAAkBmN,SACvCrH,eAAgBphB,KAAKV,MAAMgc,kBAAkB8F,eAC7C2E,YAAa/lB,KAAKV,MAAMgc,kBAAkByK,YAC1C2C,mBAAoB1oB,KAAKV,MAAMgc,kBAAkBoN,0BAI5B,IAAzB1oB,KAAKV,MAAMwa,WACb3e,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEL,UACE4E,KAAKV,MAAMic,YACNvb,KAAKV,MAAMmc,aAEV,cADA,8BAEF,GACLjgB,UAEDC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACktB,EAAAA,QAA8B,CAC7BnhB,YAAaxH,KAAKV,MAAMkI,YACxBtN,oBAAqB8F,KAAKV,MAAMpF,oBAChCmR,cAAerL,KAAKV,MAAM+L,cAC1Bud,OAAQ5oB,KAAK4R,WACbD,QAAS3R,KAAKue,WACdsK,aAAc7oB,KAAKS,MAAM8lB,WAAWxnB,UACpCsc,QAASrb,KAAKV,MAAM+b,QACpBsI,YAAa3jB,KAAK2jB,YAClBpC,cAAevhB,KAAKuhB,cACpBsG,yBAA0BA,QAI/B7nB,KAAKV,MAAMic,aACV9f,EAAAA,EAAAA,KAAA,OACEL,UACE4E,KAAKV,MAAMmc,aAAe,uBAAyB,GACpDjgB,UAEDC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACqtB,EAAAA,EAA4B,CAC3BnD,aAAc,CACZ,CAAElI,YAAazd,KAAKV,MAAM6I,cAAc,GAAGsV,cAE7CnD,uBAAwBta,KAAKV,MAAMgb,uBACnCyO,uBAAwB/oB,KAAK4gB,gBAC7BoI,2BAA4BhpB,KAAK2e,qBACjCsK,gBAAiBjpB,KAAKV,MAAMib,wBAC5BT,WAAW,EACXoP,iBACElpB,KAAKS,MAAMwC,YAAYV,aAAa6iB,iBAEtCtT,gBACE9R,KAAKS,MAAMwC,YAAYV,aAAa2b,gBAEtC2F,aAAc7jB,KAAK6jB,aACnBsF,MAAO,0BACPC,oBAAqB,CACnB,yCACA,6CACA,kCACA,kCACA,sCAEFC,2BAA4B,CAC1B,0CACA,iCACA,+CAqBR,MAGFrpB,KAAKV,MAAMya,iBACb5e,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,sBAAqBI,UAClCC,EAAAA,EAAAA,KAAC6tB,EAAAA,EAAkB,CACjBC,QAASvpB,KAAKV,MAAMqc,sBACpB6N,SAAS,wBAIfruB,EAAAA,EAAAA,MAAA,OACEC,UACEssB,EACK1nB,KAAKV,MAAMmc,aAEV,cADA,8BAEF,GACLjgB,SAAA,EAEDC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACguB,EAAAA,EAAoB,CACnBC,UAAW,CACT7L,KAAM7d,KAAKV,MAAM6a,SACjByD,GAAI5d,KAAKV,MAAM8a,QAEjBC,UAAWra,KAAKV,MAAM+a,UACtByD,qBAAsB9d,KAAK8d,qBAC3BH,kBAAmB3d,KAAK2d,kBACxBI,iBAAkB/d,KAAK+d,iBACvB4L,WAAW,qBAGfluB,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAAA,OACEL,WACe,IAAbusB,EAAoB,2BAA6B,GAClDnsB,UAEDC,EAAAA,EAAAA,KAAC2V,EAAkC,CACjCC,UAAWrR,KAAKV,MAAMS,KAAK8lB,MAC3B3X,cAAelO,KAAKV,MAAMS,KAAKgU,OAC/BrP,SACE1E,KAAKS,MAAMwC,YAAYV,aAAayjB,cACjC4D,sBAELra,gBAAgB,EAChBvE,eAAe,qBACfd,sBAAsB,EACtBqB,gBACEvL,KAAKS,MAAMwC,YAAYV,aAAayjB,cACjC6D,oBAELzkB,mBAAmB,EACnBsK,wBAAwB,EACxB4B,kBAAmBtR,KAAK6gB,gBACxBpb,WAAYzF,KAAK6f,eACjBtX,gBAAiBvI,KAAKoc,uBAK7BsL,GACCjsB,EAAAA,EAAAA,KAAA,OACEL,UACE4E,KAAKV,MAAMmc,aAAe,uBAAyB,GACpDjgB,UAEDC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACqtB,EAAAA,EAA4B,CAC3BnD,aAAc,CACZ,CAAElI,YAAazd,KAAKV,MAAM6I,cAAc,GAAGsV,cAE7CnD,uBAAwBta,KAAKV,MAAMgb,uBACnCyO,uBAAwB/oB,KAAK4gB,gBAC7BoI,2BAA4BhpB,KAAK2e,qBACjCsK,gBAAiBjpB,KAAKV,MAAMib,wBAC5BT,WAAW,EACXoP,iBACElpB,KAAKS,MAAMwC,YAAYV,aAAa6iB,iBAEtCtT,gBACE9R,KAAKS,MAAMwC,YAAYV,aAAa2b,gBAEtC2F,aAAc7jB,KAAK6jB,aACnBsF,MAAO,0BACPC,oBAAqB,CACnB,yCACA,6CACA,kCACA,kCACA,sCAEFC,2BAA4B,CAC1B,0CACA,iCACA,+CAsBR,OAIJ5tB,EAAAA,EAAAA,KAACquB,EAAAA,EAAW,CAACjX,QAAQ,YAEtBxS,OAAOwkB,KAAK7kB,KAAKV,MAAMkI,aAAatM,OAAS,GACR,IAApC8E,KAAKV,MAAM6I,cAAcjN,OACvB8E,KAAKikB,cACL,GAEHjkB,KAAKV,MAAMwc,gCACT9b,KAAKV,MAAMyc,yCACX/b,KAAKV,MAAM0c,uCACXhc,KAAKV,MAAM2c,iCACXjc,KAAKV,MAAM4c,kCACXlc,KAAKV,MAAM6c,6BAEZ1gB,EAAAA,EAAAA,KAACyD,EAAAA,EAAwB,CACvB4B,SAAUd,KAAKS,MAAMwC,YAAYV,aAAawnB,SAC9C5mB,aAAcnD,KAAKynB,sBACnBrkB,cAAepD,KAAKunB,uBACpB7mB,YAAaV,KAAKuc,0BAClB9Z,gBAAiBzC,KAAKyC,oBAEtB,MAEJhH,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACuuB,EAAAA,eAAc,CACbC,iBAAiB,EACjBC,cAAc,EACdC,aAAa,EACbC,aAAa,EACbxsB,SAAS,eACTysB,eAAe,gCAKzB,EAGF,MAYA,GAAevmB,EAAAA,EAAAA,KAZUxE,IAChB,CACL2D,YAAa3D,EAAMyE,eAAed,YAClChB,aAAc3C,EAAMyE,eAAeC,cAIXsmB,IACnB,CACLC,aAAaC,EAAAA,EAAAA,IAAmBzmB,EAAgBumB,MAGpD,CAGEzQ,E,yGC7mFK,SAAS4P,EAAoB3vB,GAOhC,IAPiC,qBACnCgkB,EAAoB,kBACpBH,EAAiB,iBACjBI,EAAgB,UAChB1D,EAAS,UACTqP,EAAS,WACTC,GACD7vB,EAGC,OACE2B,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBI,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BC,EAAAA,EAAAA,KAACmc,EAAAA,WAAU,CACTra,KAAK,YACLktB,kBAAkB,EAClB7nB,MAAO/G,EAAEwe,GACTqQ,eAAeC,EAAAA,EAAAA,MAEfC,WAAYlB,EACZmB,aAAc/M,EACdgN,cAAenN,EACf9Z,cAAc,OAGlBpI,EAAAA,EAAAA,KAAA,OAAKL,UAAU,aAAYI,UACzBC,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CAACE,QAAS3B,EAAE8tB,GAAaxtB,QAAS4hB,UAMrD,C,kJClBA,SAASgN,EAAcjxB,GAMnB,IANoB,gBACtB0qB,EAAe,kBACfC,EAAiB,WACjBE,EAAU,SACVD,KACGjkB,GACJ3G,EAWC,MAAMkxB,EAAYxG,EAAkB,aAG9ByG,EAAuBA,CAAClkB,EAAG+H,KAE/B,MAAMoc,EAAiBpc,EAAMqc,SAASC,WACtCtc,EAAMqc,SAASC,WAAa,SAAUC,GACpCH,GAAkBA,EAAeG,GAE5B5qB,EAAMwC,YAAYV,aAAa2b,kBAClCmN,EAAIC,iBAAkB,GACpBD,EAAIE,UAAUlY,QAAQ,eAAiB,IACzCgY,EAAIG,mBAAqB,WACvB,GAAwB,IAApBxrB,KAAKyrB,YAAoC,MAAhBzrB,KAAK6R,OAAgB,CAChD,IAAI9C,EAAOhI,EAAEpB,YACb+T,YAAW,KACT,IAAIgS,EAAW3c,EAAK4c,cAAc,uBAC9BC,EAAQ7c,EACT4c,cAAc,uBACdE,iBAAiB,MAAM,GACrBD,EAAMhvB,WACTgvB,EAAMxwB,UAAY,SAClBswB,EAASI,QACX,GACC,IACL,CACF,EAEJ,CAAC,EAEH,IAAIrf,EAAS,CACXsf,cAAe,UAAYtrB,EAAMwB,aAAaC,WAOhD,MAAM8pB,EAAaA,CAACjlB,EAAG+H,KACrBmd,EAAAA,eAAwBC,UAAUC,KAAO,SAAUpsB,GACjD,IAAIqsB,EAAQpsB,KACRqsB,EAAU,IAAIJ,EAAAA,SAClB,OAAKjsB,KAAKssB,uBAAuBD,IAGjCrsB,KAAKusB,YAAYvsB,KAAKwsB,yBAA0B,CAC9CC,OAAQ,OACR1sB,KAAMA,IACLoC,MACD,SAAUkpB,GACR,IAAIqB,EAAIT,EAAAA,0BAAmCZ,EAAIsB,cAC/CP,EAAMQ,YAAcF,EAAE9d,GACtBwd,EAAMS,QAAUZ,EAAAA,iBAA0Ba,OAC1CV,EAAMW,kBAAoBL,EAAEM,iBAC5BZ,EAAMa,gBAAkBP,EAAEQ,eAAezY,QACvCgQ,EACAD,GAEF4H,EAAMe,sBAAwBT,EAAEU,qBAChChB,EAAMiB,kBAAoBX,EAAEY,iBAC5BlB,EAAMmB,oBAAsBb,EAAEc,mBAC9BnB,EAAQoB,QAAQf,EAClB,IACA,SAAUrB,GACRgB,EAAQqB,OAAOtB,EAAMuB,UAAUtC,GACjC,IAEKgB,GAxBEA,CAyBX,CAAC,EAIH,OACE5wB,EAAAA,EAAAA,KAAA,OAAAD,SACGiF,EAAMwC,YAAYV,aAAa2b,iBAC9BziB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACmyB,EAAAA,EAAY,CACXC,eAAgBphB,EAChBpR,MAAO,CAAE8c,OAAQ,QACjBwM,WAAYA,EACZmJ,WAAY9C,EACZtG,SAAUA,EACV1U,YAAagc,EACb+B,kBAAmB9C,OAIvBxvB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACmyB,EAAAA,EACC,CACAvyB,MAAO,CAAE8c,OAAQ,QACjBwM,WAAYA,EACZmJ,WAAY9C,EACZtG,SAAUA,EACV1U,YAAagc,EACb+B,kBAAmB9C,OAM/B,CA5HAF,EAAelsB,aAAe,CAC5B8lB,WAAY,CAAC,GAGfqJ,EAAAA,cAAqB/W,EAAAA,IA0HrB,MAOA,GAAenT,EAAAA,EAAAA,KAPUxE,IAChB,CACL2D,YAAa3D,EAAMyE,eAAed,YAClChB,aAAc3C,EAAMyE,eAAeC,aAIvC,CAAwC+mB,G,eClIzB,SAASzG,EAAaxqB,GAQjC,IARkC,gBACpC0qB,EAAe,kBACfC,EAAiB,SACjBC,EAAQ,WACR9S,EAAU,WACV8J,EAAU,iBACV6I,EAAgB,WAChBI,GACD7qB,EACC,MAAO+B,IAAKwI,EAAAA,EAAAA,kBAEZ,OACE5I,EAAAA,EAAAA,KAACwB,EAAAA,MAAK,CACJ5B,MAAO,CAAEE,QAAS,OAClB4B,KAAK,aACLD,KAAMwe,EACNlgB,UAEAL,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAAC4C,EAAAA,OAAM,CAAC8qB,MAAOttB,EAAE,0BAA2BoyB,MAAM,KAClDxyB,EAAAA,EAAAA,KAACsvB,EAAc,CACbvG,gBAAiBA,EACjBC,kBAAmBA,EACnBC,SAAUA,EACVC,WAAYA,KAEdlpB,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CAAEK,UAAW,OAAQiD,WAAY,QAASnD,UACpDC,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLlC,UAAU,aACVe,QAASyV,EACTpU,QAAS3B,EAAE,uBAMvB,CAvCAyoB,EAAczlB,aAAe,CAC3B8lB,WAAY,CAAC,E,u1CChBR,MAAMlS,EAAiB,CAC5BqN,KAAM,OACN7kB,IAAK,MACLyX,OAAQ,SACR8N,OAAQ,UAEG0N,EAAmB,iBACnBC,EAAW,SACXC,EAAa,WACbC,EAAY,UACZC,EAAmB,iBACnBC,EAAgB,cAChBC,EAAe,aACfC,EAAY,UACZC,EAAQ,wBACRC,EAAQ,oBACRC,EAAmB,qBACnBC,EAAW,SACXC,EAAU,QACVC,EAAoB,kBAEpBC,EAAa,WACbC,EAAiB,2BACjBzH,EAAmB,qBACnBjK,EAAgC,8BAChC2R,EAAkB,oBAClBC,EAAa,WACbC,EAAoB,kBACpBC,EAAiB,eACjBC,EAAgB,cAChBC,EAAc,YACdC,EAAc,YAEdC,EAAsB,oBACtBC,EAAiB,eACjBC,EAAiB,eACjBC,EAAmC,iCACnCC,EAAkC,gCAClCC,EAAqB,mBACrBC,EAA2B,yBAE3BC,EAAqB,mBACrBC,EAAiB,eACjBC,EAAiB,eACjBC,EAAoB,kBACpBC,EAA6B,2BAE7BC,EAAqB,MACrBC,EAA+B,6BAC/BC,EAAgC,8BAChCC,EAAqB,mBACrBC,EAAoB,kBAEpBC,EAAgC,8BAChCC,EAA+B,6BAE/BC,EAAe,aAIfC,EAAkB,gBAClBC,EAAqB,sBAErBC,EAAuB,QACvBC,EAAgB,cAChBC,EAAa,iBACbC,GAAW,eACXC,GAAgB,cAChBC,GAAa,WACbC,GAAuB,qBACvBC,GAAa,WACbC,GAAoB,kBACpBC,GAAc,YACdC,GAAS,OACTC,GAAe,aACfC,GAAiB,eACjBC,GAA+B,6BAC/BC,GAAe,aACfC,GAAa,WACbC,GAAsB,oBAEtB7M,GAAmB,iBACnBC,GAAmB,iBACnBxS,GAA6B,2BAC7BqS,GAAiC,+BACjCC,GAAwB,sBACxB+M,GAAc,YACdC,GAAiB,eACjBC,GAAe,aACfC,GAAsB,oBACtBC,GAA+B,6BAC/BC,GAAmB,iBACnBC,GAAmB,iBACnBC,GAA+B,6BAC/BC,GAAgC,8BAEhCC,GAAuB,qBACvBC,GAAkB,gBAClBC,GAAa,WACbC,GAAa,WACbC,GAAa,WACbC,GAAa,WACbC,GAAkB,gBAClBC,GAAiB,eACjBC,GAAuB,qBACvBC,GAAY,UACZC,GAAwB,2BACxBlM,GAAmB,iBAEnBmM,GAAa,WACbC,GAAqB,mBACrBC,GAAa,WACbC,GAA2B,yBAG3BC,GAAgB,cAChBC,GAAS,cACTC,GAAiC,+BAEjCC,GAAwB,sBACxBC,GAAyB,mBAEzBC,GAA0B,wBAC1BC,GAAsB,oBACtBC,GAA4B,0BAC5BC,GAAuB,qBAKvBC,GAAgC,8BAGhCC,GAAsB,oBACtBC,GAA8B,4BAC9BC,GAAyB,uBACzBC,GAAiC,+BACjCC,GAAc,YACdC,GAAgB,cAChBC,GAAyB,uBACzBC,GAAsB,oBACtBC,GAA0B,wBAC1BC,GACX,kCACWC,GAAiB,gBACjBC,GAA0B,wBAC1BC,GAAiB,eACjBC,GAAmB,iBACnBC,GAAmB,iBACnBC,GAAqB,mBAIrBC,GAAsB,oBACtBC,GAAyB,0BAEzBC,GAAwB,sBACxBC,GAA2B,4BAE3BC,GAAsB,oBACtBC,GAAyB,0BAEzBC,GAA0B,wBAC1BC,GAA6B,8BAC7BC,GAAa,WACbC,GAAsB,oBAEtBC,GAAmB,iBAEnBC,GAAiB,eACjBC,GAAgB,cAChBC,GAAkB,gBAElBC,GAAgB,cAChBC,GAAkB,gBAKlBC,GAAiC,8B,oqCCnLvC,MAAMC,EAAc,cACd3U,EAAqB,qBACrB4U,EAAkB,kBAClBC,EAAa,aACbC,EAAe,eACfC,EAAc,cACdC,EAAqB,qBACrBC,EAAiB,iBACjBC,EAAc,cACdC,EAAkB,kBAClBC,EAAsB,sBACtBC,EAAe,eACfC,EAAY,YACZC,EAAc,cAEdC,EAAqB,qBACrBC,EAAoB,oBACpBC,EAAe,eACfC,EAAe,eAEfC,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAgB,gBAChBC,EAAY,YAEZC,EAAkB,kBAElBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAsB,sBACtBC,EAAyB,yBAEzBC,EAAkB,kBAClBC,EAAe,eAGfC,EAAe,eAEfpkB,EAAa,aAEbqkB,EAAa,aACbC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAU,UACVC,EAAU,UACVC,EAAkB,kBAClBC,EAAS,SACTC,EAAwB,wBAExBC,EAAiB,iBACjBC,EAAoB,qBACpBC,EAAU,UACVC,EAAoB,oBACpBC,EAAc,cACdC,EAAe,eACfC,EAAgB,gBAChBC,EAAW,WACXC,EAAY,YAEZC,EAAe,eACfC,EAAiB,iBACjBC,EAAgB,gBAChB3Q,GAAe,eAEf4Q,GAAgB,gBAChBC,GAAkB,kBAClBC,GAAsB,sBACtBC,GAAe,SAEfC,GAAiB,iBACjBC,GAAuB,SACvBC,GAAgB,gBAChBC,GAAkB,kBAClBhlB,GAAsB,sBACtBilB,GAA4B,4BAC5BC,GAAuB,uBACvBC,GAAgB,gBAChB3Y,GAAiB,iBACjB4Y,GAAc,cACdC,GAAW,WACXC,GAAc,cACdC,GAAiB,iBACjBC,GAAU,UACVC,GAAgB,gBAChBC,GAAc,cACdC,GAAW,oBACXC,GAAoB,oBACpBC,GAAa,aACbC,GAAqB,qBACrBC,GAAiB,iBACjBC,GAAgB,gBAEhBC,GAAa,aACbC,GAAa,aACbC,GAAW,WACXC,GAAqB,qBACrBC,GAAsB,kBACtBC,GAAW,WACXC,GAAW,WACXC,GAAmB,mBACnBC,GAAmB,mBACnBC,GAAc,cACdC,GAAc,cACdC,GAAqB,qBACrBC,GAAwB,wBACxBC,GAA0B,0BAC1BC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAyB,yBACzBC,GAA4B,4BAC5BC,GAA6B,6BAC7BC,GAA0B,0BAC1BC,GAAe,eAEfC,GAAwB,wBACxBC,GAA+B,+BAC/BC,GAA6B,6BAC7BC,GAAuB,uBACvBC,GAAoB,oBACpBC,GAAc,cACdC,GAAwB,wBACxBC,GAAU,UACVC,GAAY,YACZC,GAAc,cACdC,GAAe,eACfC,GAAqB,qBACrBC,GAAkB,kBAClBC,GAAqB,qBAErBC,GAAkB,kBAClBC,GAAoB,oBACpBC,GAAmB,mBACnBC,GAAmC,mCAMnCC,GAAe,eACfC,GAAe,eACfC,GAAgB,e","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Common/WijmoGrid.jsx","Components/Composite/Common/WijmoGridComposite.jsx","Components/Composite/Summary/MarineDispatchSummaryComposite.jsx","Components/UIBase/Details/MarineLoadingDetails.jsx","Components/UIBase/Details/MarineShipmentViewAuditTrailDetails.jsx","Components/Composite/Entity/MarineDispatchComposite.jsx","Components/UIBase/Common/TMTransactionFilters.jsx","Components/UIBase/Common/TMReportViewer.jsx","Components/UIBase/Details/ReportDetails.jsx","JS/FunctionGroups.js","JS/KeyCodes.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as wjCore from \"@grapecity/wijmo\";\r\nimport * as wjGrid from \"@grapecity/wijmo.grid\";\r\nimport {\r\n  FlexGrid,\r\n  FlexGridColumn,\r\n  FlexGridCellTemplate,\r\n} from \"@grapecity/wijmo.react.grid\";\r\nimport { FlexGridFilter } from \"@grapecity/wijmo.react.grid.filter\";\r\nimport { Operator } from \"@grapecity/wijmo.grid.filter\";\r\nimport { FlexGridSearch } from \"@grapecity/wijmo.react.grid.search\";\r\nimport { CollectionView } from \"@grapecity/wijmo\";\r\nimport { CollectionViewNavigator, ListBox } from \"@grapecity/wijmo.react.input\";\r\nimport { Selector } from \"@grapecity/wijmo.grid.selector\";\r\nimport { HeadersVisibility } from \"@grapecity/wijmo.grid\";\r\nimport { showPopup, hidePopup, PopupPosition } from \"@grapecity/wijmo\";\r\nimport * as wjcGridXlsx from \"@grapecity/wijmo.grid.xlsx\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport { GroupPanel } from \"@grapecity/wijmo.react.grid.grouppanel\";\r\nimport { Button, Card, Popup } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as loadash from \"lodash\";\r\nimport \"@grapecity/wijmo.touch\";\r\n\r\nconst WijmoGrid = (props) => {\r\n  const [flex, setFlex] = useState(null);\r\n  const [translator] = useTranslation();\r\n  const _getData = (pageLength) => {\r\n    return new CollectionView(props.sourceData, {\r\n      pageSize: pageLength,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState(_getData(props.rowsPerPage));\r\n  const theGrid = React.createRef();\r\n  const theSearch = React.createRef();\r\n  const gridFilter = React.createRef();\r\n  const pagingComponent = React.createRef();\r\n  const colPicker = React.useRef();\r\n\r\n  // to keep track of selected rows\r\n  const selectedRows = React.useRef(props.selectionRequired ? [] : null);\r\n\r\n  // to initialize grid checkbox selection\r\n  let selector = null;\r\n\r\n  //Initialize grid\r\n  const gridInitialized = (grid) => {\r\n    try {\r\n      // localize grid filter\r\n      customizeFilterConditions();\r\n\r\n      if (props.onRowClick) {\r\n        // add row click event handler\r\n        grid.addEventListener(grid.hostElement, \"click\", (e) => {\r\n          let ht = grid.hitTest(e);\r\n          // condition to check if cell is not a grouped cell and a data cell\r\n          if (\r\n            ht.target.closest(\".wj-cell\") &&\r\n            ![...ht.target.closest(\".wj-cell\").classList].includes(\r\n              \"wj-group\"\r\n            ) &&\r\n            ht.cellType === wjGrid.CellType.Cell\r\n          ) {\r\n            // fetch row data\r\n            const rowData = grid.rows[ht.row].dataItem;\r\n            props.onRowClick(rowData);\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      grid.select(-1, -1);\r\n\r\n      setFlex(grid);\r\n      if (props.selectionRequired) {\r\n        // enable checkbox selection\r\n        selector = new Selector(grid, {\r\n          itemChecked: (s, e) => {\r\n            // if only single checkbox selection is required\r\n            if (props.singleSelection) {\r\n              grid.rows\r\n                .filter((row) => {\r\n                  return (\r\n                    row.isSelected &&\r\n                    selectedRows.current.filter((item) =>\r\n                      loadash.isEqual(item, row.dataItem)\r\n                    ).length === 1\r\n                  );\r\n                })\r\n                .forEach((row) => {\r\n                  row.isSelected = false;\r\n                });\r\n            }\r\n\r\n            // pass row data as parameter to checkbox selection handler\r\n            props.onSelectionHandle(\r\n              grid.rows\r\n                .filter((r) => r.isSelected)\r\n                .map((selectedRow) => selectedRow.dataItem)\r\n            );\r\n          },\r\n          // if only single checkbox selection is required\r\n          showCheckAll: !props.singleSelection,\r\n        });\r\n\r\n        let theGrid = selector.column.grid;\r\n        selector.column = theGrid.rowHeaders.columns[0];\r\n        theGrid.headersVisibility = HeadersVisibility.All;\r\n        theGrid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in gridInitialized: \" + error);\r\n    }\r\n  };\r\n\r\n  //Update grid when data changes\r\n  useEffect(() => {\r\n    try {\r\n      if (theGrid != null) {\r\n        //Connect search to the grid\r\n        let grid = theGrid.current.control;\r\n        let search = theSearch.current.control;\r\n        search.grid = grid;\r\n      }\r\n\r\n      setData(_getData(props.rowsPerPage));\r\n    } catch (error) {\r\n      console.log(\"Error in grid update:\", error);\r\n    }\r\n  }, [props.sourceData]);\r\n\r\n  // Pre-select grid rows based on selectedItems props\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && props.selectionRequired) {\r\n        // clear the selectedRows array\r\n        selectedRows.current.length = 0;\r\n        // add selectedItems array items to selectedRows\r\n        selectedRows.current.push(...props.selectedItems);\r\n\r\n        flex.rows.forEach((row) => {\r\n          if (\r\n            props.selectedItems.filter((item) =>\r\n              loadash.isEqual(item, row.dataItem)\r\n            ).length === 1\r\n          ) {\r\n            // checks the row checkbox\r\n            row.isSelected = true;\r\n          } else {\r\n            // unchecks the row checkbox\r\n            row.isSelected = false;\r\n          }\r\n        });\r\n\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in pre-selecting rows:\", error);\r\n    }\r\n  }, [props.selectedItems]);\r\n\r\n  //Load the state of grid\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(props.parentComponent + \"GridState\") &&\r\n        localStorage.getItem(props.parentComponent + \"GridState\") !== \"null\" &&\r\n        flex\r\n      ) {\r\n        // restore grid settings\r\n        let gridState = JSON.parse(\r\n          localStorage.getItem(props.parentComponent + \"GridState\")\r\n        );\r\n        let newFlex = flex;\r\n\r\n        // restore column picker settings\r\n        newFlex.columns.forEach((col) => {\r\n          let matchedCol = gridState.columns.filter(\r\n            (colSetting) => colSetting.binding === col.binding\r\n          );\r\n          col.visible =\r\n            matchedCol.length > 0 ? matchedCol[0].visible : col.visible;\r\n        });\r\n\r\n        // restore filter settings\r\n        gridFilter.current.control.filterDefinition =\r\n          gridState.filterDefinition;\r\n\r\n        // restore sort settings\r\n        newFlex.collectionView.deferUpdate(() => {\r\n          newFlex.collectionView.sortDescriptions.clear();\r\n          for (let i = 0; i < gridState.sortDescriptions.length; i++) {\r\n            let sortDesc = gridState.sortDescriptions[i];\r\n            newFlex.collectionView.sortDescriptions.push(\r\n              new wjCore.SortDescription(sortDesc.property, sortDesc.ascending)\r\n            );\r\n          }\r\n        });\r\n\r\n        // restore grouping settings\r\n        for (let i = 0; i < gridState.groupDescriptions.length; i++) {\r\n          newFlex.collectionView.groupDescriptions.push(\r\n            new wjCore.PropertyGroupDescription(gridState.groupDescriptions[i])\r\n          );\r\n          newFlex.columns.filter(\r\n            (col) => col.binding === gridState.groupDescriptions[i]\r\n          )[0].visible = false;\r\n        }\r\n\r\n        if (\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") &&\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") !== \"null\"\r\n        ) {\r\n          let gridSessionState = JSON.parse(\r\n            sessionStorage.getItem(props.parentComponent + \"GridState\")\r\n          );\r\n          // restore paging settings\r\n          newFlex.collectionView.moveToPage(\r\n            newFlex.collectionView.pageCount - 1 >= gridSessionState.pageIndex\r\n              ? gridSessionState.pageIndex\r\n              : newFlex.collectionView.pageCount - 1\r\n          );\r\n\r\n          // restore search settings\r\n          if (theSearch) {\r\n            theSearch.current.control.text = gridSessionState.searchText;\r\n          }\r\n        }\r\n\r\n        setFlex(newFlex);\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in restoring local storage settings: \", error);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set Column Picker Properties\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && colPicker.current && props.columnPickerRequired) {\r\n        colPicker.current.itemsSource = flex.columns;\r\n        colPicker.current.checkedMemberPath = \"visible\";\r\n        colPicker.current.displayMemberPath = \"header\";\r\n        colPicker.current.lostFocus.addHandler(() => {\r\n          hidePopup(colPicker.current.hostElement);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in initializing column picker properties:\", error);\r\n    }\r\n  }, [colPicker.current]);\r\n\r\n  useEffect(() => {\r\n    // remove column picker pop-up on component unmount\r\n    return () => {\r\n      if (props.columnPickerRequired && colPicker.current) {\r\n        hidePopup(colPicker.current.hostElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // export grid data to excel\r\n  const exportExcel = () => {\r\n    try {\r\n      let gridFlex = flex;\r\n      //to download all rows from all pages\r\n      gridFlex.itemsSource.pageSize = props.sourceData.length;\r\n      setFlex(gridFlex);\r\n      wjcGridXlsx.FlexGridXlsxConverter.saveAsync(\r\n        flex,\r\n        {\r\n          includeColumnHeaders: true,\r\n          includeCellStyles: false,\r\n          formatItem: null,\r\n        },\r\n        props.exportFileName\r\n      );\r\n\r\n      //to restore paging\r\n      gridFlex.itemsSource.pageSize = props.rowsPerPage;\r\n      setFlex(gridFlex);\r\n    } catch (error) {\r\n      console.log(\"Error in export grid to excel:\", error);\r\n    }\r\n  };\r\n\r\n  const terminalPopOver = (terminalCodes) => {\r\n    if (terminalCodes.split(\",\").length > props.terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={terminalCodes.split(\",\").length}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return terminalCodes;\r\n    }\r\n  };\r\n\r\n  const displayValues = (value, columnDetail) => {\r\n    if (columnDetail !== undefined && columnDetail !== null) {\r\n      if (typeof value === \"boolean\" || columnDetail.Name === \"Active\") {\r\n        if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n        else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n      } else if (value === \"\" || value === null || value === undefined) {\r\n        return value;\r\n      } else if (\r\n        (columnDetail.Name === \"TerminalCodes\" ||\r\n          columnDetail.PopOver === \"1\") &&\r\n        value !== null\r\n      ) {\r\n        return terminalPopOver(value);\r\n      }\r\n      // var columnType = columnDetails.find(function (detail) {\r\n      //   if (detail.Name === field) {\r\n      //     return detail;\r\n      //   }\r\n      // });\r\n      else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"DateTime\"\r\n      ) {\r\n        return (\r\n          new Date(value).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(value).toLocaleTimeString()\r\n        );\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Date\"\r\n      ) {\r\n        return new Date(value).toLocaleDateString();\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Time\"\r\n      ) {\r\n        return new Date(value).toLocaleTimeString();\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  //Initialize Column Picker\r\n  const initializedPicker = (picker) => {\r\n    if (props.columnPickerRequired) {\r\n      colPicker.current = picker;\r\n    }\r\n  };\r\n\r\n  // Column Picker Handler\r\n  const colPickerClickHandler = (event) => {\r\n    try {\r\n      let host = colPicker.current.hostElement;\r\n      if (!host.offsetHeight) {\r\n        showPopup(host, event.target, PopupPosition.Below, true, false);\r\n        colPicker.current.focus();\r\n      } else {\r\n        hidePopup(host, true, true);\r\n        flex.focus();\r\n      }\r\n\r\n      colPicker.current.focus();\r\n      event.preventDefault();\r\n    } catch (error) {\r\n      console.log(\"Error in Column Picker click event:\", error);\r\n    }\r\n  };\r\n\r\n  const saveGridState = () => {\r\n    try {\r\n      if (flex && gridFilter.current) {\r\n        // grid column, filter, sort and grouping settings\r\n        let gridState = {\r\n          columns: flex.columns.map((col) => {\r\n            return {\r\n              binding: col.binding,\r\n              visible: col.visible,\r\n            };\r\n          }),\r\n          filterDefinition: gridFilter.current.control.filterDefinition,\r\n          sortDescriptions: flex.collectionView.sortDescriptions.map(\r\n            (sortDesc) => {\r\n              return {\r\n                property: sortDesc.property,\r\n                ascending: sortDesc.ascending,\r\n              };\r\n            }\r\n          ),\r\n          groupDescriptions: flex.collectionView.groupDescriptions.map(\r\n            (group) => {\r\n              if (group.propertyName) {\r\n                return group.propertyName;\r\n              }\r\n\r\n              return null;\r\n            }\r\n          ),\r\n        };\r\n\r\n        // add class to grouped checkbox div element\r\n        if (\r\n          flex.collectionView.groupDescriptions &&\r\n          flex.collectionView.groupDescriptions.length > 0\r\n        ) {\r\n          let groupedCheckboxes = [\r\n            ...document.getElementsByClassName(\"wj-column-selector-group\"),\r\n          ];\r\n          groupedCheckboxes.forEach((chkbx) => {\r\n            chkbx.parentNode.parentNode.classList.add(\"wj-grouped-checkbox\");\r\n          });\r\n        }\r\n\r\n        // grid paging and search settings\r\n        let sessionState = {\r\n          pageIndex: flex.collectionView.pageIndex,\r\n          searchText: theSearch.current.control.text,\r\n        };\r\n\r\n        localStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(gridState)\r\n        );\r\n        sessionStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(sessionState)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in saving grid state\");\r\n    }\r\n  };\r\n\r\n  // customize grid filter text and dropdowns\r\n  const customizeFilterConditions = () => {\r\n    // localize the FlexGrid filter\r\n    let filter = wjCore.culture.FlexGridFilter,\r\n      operator = Operator;\r\n    wjCore.culture.FlexGridFilter.header = translator(\"WijmoGridFilterHeader\");\r\n    wjCore.culture.FlexGridFilter.ascending =\r\n      \"\\u2191 \" + translator(\"WijmoGridFilterAscending\");\r\n    wjCore.culture.FlexGridFilter.descending =\r\n      \"\\u2193 \" + translator(\"WijmoGridFilterDescending\");\r\n    wjCore.culture.FlexGridFilter.apply = translator(\"RoleAdminEdit_Apply\");\r\n    wjCore.culture.FlexGridFilter.clear = translator(\"OrderCreate_btnClear\");\r\n    wjCore.culture.FlexGridFilter.conditions = translator(\r\n      \"WijmoGridFilterCondition\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.values = translator(\"WijmoGridFilterValue\");\r\n    wjCore.culture.FlexGridFilter.search = translator(\r\n      \"LoadingDetailsView_SearchGrid\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.selectAll = translator(\r\n      \"WijmoGridFilterSelectAll\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.and = translator(\"WijmoGridFilterAnd\");\r\n    wjCore.culture.FlexGridFilter.or = translator(\"WijmoGridFilterOr\");\r\n    wjCore.culture.FlexGridFilter.cancel = translator(\"AccessCardInfo_Cancel\");\r\n    // wjCore.culture.FlexGridFilter.null = 'test';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.and = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.asc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dialog = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dsc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.edit = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op2 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.or = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.search = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val2 = '';\r\n\r\n    // localize FlexGrid filter operators\r\n    filter.stringOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterBeginsWith\"), op: operator.BW },\r\n      { name: translator(\"WijmoGridFilterEndsWith\"), op: operator.EW },\r\n      { name: translator(\"WijmoGridFilterContains\"), op: operator.CT },\r\n      { name: translator(\"WijmoGridFilterDoesNotContain\"), op: operator.NC },\r\n    ];\r\n    filter.numberOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterGreaterThan\"), op: operator.GT },\r\n      { name: translator(\"WijmoGridFilterLessThan\"), op: operator.LT },\r\n      {\r\n        name: translator(\"WijmoGridFilterGreaterThanOrEqual\"),\r\n        op: operator.GE,\r\n      },\r\n      { name: translator(\"WijmoGridFilterLessThanOrEqual\"), op: operator.LE },\r\n    ];\r\n    filter.dateOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterDateEarlierThan\"), op: operator.LT },\r\n      { name: translator(\"WijmoGridFilterDateLaterThan\"), op: operator.GT },\r\n    ];\r\n    filter.booleanOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n    ];\r\n  };\r\n\r\n  // set column width based on screen size\r\n  const getWidth = (columnDetails) => {\r\n    try {\r\n      const screenWidth = window.screen.width;\r\n      if (screenWidth < 1024) {\r\n        if (columnDetails.WidthPx && columnDetails.WidthPx !== \"\")\r\n          return parseInt(columnDetails.WidthPx);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in width:\", error);\r\n    }\r\n\r\n    return columnDetails.WidthPercentage.includes(\"*\")\r\n      ? columnDetails.WidthPercentage\r\n      : parseInt(columnDetails.WidthPercentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pl-1\">\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <React.Fragment>\r\n              <div className=\"row pl-0\">\r\n                <div className=\"col-10 col-sm-12 col-md-5 col-lg-6\">\r\n                  <FlexGridSearch\r\n                    class=\"ui single-input\"\r\n                    ref={theSearch}\r\n                    placeholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-10 col-sm-12 col-md-7 col-lg-6\">\r\n                  <div style={{ float: \"right\" }}>\r\n                    {props.columnPickerRequired ? (\r\n                      <Button\r\n                        id=\"colPicker\"\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        onClick={(event) => colPickerClickHandler(event)}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridColumnPicker\")}\r\n                        </div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          <Icon\r\n                            name=\"caret-down\"\r\n                            className=\"btnIcon\"\r\n                            size=\"small\"\r\n                          />\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.exportRequired ? (\r\n                      <Button\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        className=\"mt-3 mt-md-0\"\r\n                        onClick={exportExcel}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridExport\")}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            className=\"icon-Xls\"\r\n                            style={{\r\n                              fontSize: \"17px\",\r\n                              position: \"absolute\",\r\n                              top: \"3px\",\r\n                            }}\r\n                          ></span>\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tableScroll\">\r\n                {props.columnGroupingRequired ? (\r\n                  <GroupPanel\r\n                    className=\"group-panel\"\r\n                    grid={flex}\r\n                    placeholder={t(\"WijmoGridGroupPanelPlaceholder\")}\r\n                  />\r\n                ) : null}\r\n                <ErrorBoundary>\r\n                  <FlexGrid\r\n                    ref={theGrid}\r\n                    autoGenerateColumns={false}\r\n                    alternatingRowStep={0}\r\n                    autoRowHeights={true}\r\n                    headersVisibility=\"Column\"\r\n                    itemsSource={data}\r\n                    selectionMode={wjCore.asEnum(\"None\", wjGrid.SelectionMode)}\r\n                    initialized={gridInitialized}\r\n                    virtualizationThreshold={[0, 10000]}\r\n                    onUpdatedView={saveGridState}\r\n                  >\r\n                    <FlexGridFilter ref={gridFilter} />\r\n                    {props.columns.map((column) => {\r\n                      return (\r\n                        <FlexGridColumn\r\n                          header={t(column.Name)}\r\n                          key={column.Name}\r\n                          binding={column.Name}\r\n                          width={getWidth(column)}\r\n                          minWidth={100}\r\n                          isReadOnly={true}\r\n                          wordWrap={true}\r\n                          align=\"left\"\r\n                        >\r\n                          <FlexGridCellTemplate\r\n                            cellType=\"Cell\"\r\n                            template={(context) => {\r\n                              return (\r\n                                <span\r\n                                  style={\r\n                                    props.conditionalRowStyleCheck == null ||\r\n                                    !props.conditionalRowStyleCheck(\r\n                                      context.item\r\n                                    )\r\n                                      ? null\r\n                                      : { ...props.conditionalRowStyles }\r\n                                  }\r\n                                >\r\n                                  {displayValues(\r\n                                    context.item[column.Name],\r\n                                    column\r\n                                  )}\r\n                                </span>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FlexGridColumn>\r\n                      );\r\n                    })}\r\n                  </FlexGrid>\r\n                </ErrorBoundary>\r\n                {props.columnPickerRequired ? (\r\n                  <div className=\"column-picker-div\">\r\n                    <ListBox\r\n                      className=\"column-picker\"\r\n                      initialized={(picker) => initializedPicker(picker)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"row\">\r\n                <CollectionViewNavigator\r\n                  ref={pagingComponent}\r\n                  className=\"ml-auto mr-auto mt-3\"\r\n                  headerFormat={t(\"WijmoGridPagingTemplate\")}\r\n                  byPage={true}\r\n                  cv={data}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nWijmoGrid.propTypes = {\r\n  sourceData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  exportRequired: PropTypes.bool.isRequired,\r\n  exportFileName: PropTypes.string,\r\n  selectionRequired: PropTypes.bool,\r\n  columnPickerRequired: PropTypes.bool,\r\n  columnGroupingRequired: PropTypes.bool,\r\n  conditionalRowStyleCheck: PropTypes.func,\r\n  conditionalRowStyles: PropTypes.object,\r\n  rowsPerPage: PropTypes.number,\r\n  onSelectionHandle: PropTypes.func,\r\n  parentComponent: PropTypes.string.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  terminalsToShow: PropTypes.number,\r\n  singleSelection: PropTypes.bool,\r\n  selectedItems: PropTypes.array,\r\n};\r\n\r\nWijmoGrid.defaultProps = {\r\n  sourceData: [],\r\n  columns: [],\r\n  exportRequired: true,\r\n  exportFileName: \"Grid.xlsx\",\r\n  selectionRequired: false,\r\n  columnPickerRequired: false,\r\n  columnGroupingRequired: false,\r\n  rowsPerPage: 10,\r\n  terminalsToShow: 2,\r\n  singleSelection: false,\r\n  selectedItems: [],\r\n};\r\n\r\nexport default WijmoGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WijmoGrid from '../../UIBase/Common/WijmoGrid';\r\n\r\nconst WijmoGridComposite = (props) => {\r\n    return (\r\n        <WijmoGrid\r\n            sourceData={props.data}\r\n            columns={props.columns}\r\n            exportRequired={props.exportRequired}\r\n            exportFileName={props.exportFileName}\r\n            columnPickerRequired={props.columnPickerRequired}\r\n            selectionRequired={props.selectionRequired}\r\n            columnGroupingRequired={props.columnGroupingRequired}\r\n            conditionalRowStyleCheck={props.conditionalRowStyleCheck}\r\n            conditionalRowStyles={props.conditionalRowStyles}\r\n            rowsPerPage={props.rowsPerPage}\r\n            onSelectionHandle={props.onSelectionHandle}\r\n            onRowClick={props.onRowClick}\r\n            parentComponent={props.parentComponent}\r\n            terminalsToShow={props.terminalsToShow}\r\n            singleSelection={props.singleSelection}\r\n            selectedItems={props.selectedItems}\r\n        />\r\n    )\r\n}\r\n\r\nWijmoGridComposite.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n    exportRequired: PropTypes.bool.isRequired,\r\n    exportFileName: PropTypes.string,\r\n    selectionRequired: PropTypes.bool,\r\n    columnPickerRequired: PropTypes.bool,\r\n    columnGroupingRequired: PropTypes.bool,\r\n    conditionalRowStyleCheck: PropTypes.func,\r\n    conditionalRowStyles: PropTypes.object,\r\n    rowsPerPage: PropTypes.number,\r\n    onSelectionHandle: PropTypes.func,\r\n    parentComponent: PropTypes.string.isRequired,\r\n    onRowClick: PropTypes.func,\r\n    terminalsToShow: PropTypes.number,\r\n    singleSelection: PropTypes.bool,\r\n    selectedItems: PropTypes.array\r\n}\r\n\r\nexport default WijmoGridComposite;","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nexport function MarineDispatchSummaryPageComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  selectionRequired,\r\n  terminalsToShow,\r\n  selectedItems,\r\n  onSelectionChange,\r\n  onRowClick,\r\n  parentComponent,\r\n}) {\r\n  return (\r\n    <WijmoGridComposite\r\n    data={tableData}\r\n    columns={columnDetails}\r\n    rowsPerPage={pageSize}\r\n    exportRequired={exportRequired}\r\n    exportFileName={exportFileName}\r\n    columnPickerRequired={columnPickerRequired}\r\n    columnGroupingRequired={columnGroupingRequired}\r\n    selectionRequired={selectionRequired}\r\n    selectedItems={selectedItems}\r\n    onSelectionHandle={onSelectionChange}\r\n    onRowClick={onRowClick}\r\n    parentComponent={parentComponent}\r\n    terminalsToShow={terminalsToShow}\r\n  ></WijmoGridComposite>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Button, Modal } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport TMDetailsHeader from \"../Common/TMDetailsHeader\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport {\r\n  fnViewMarineLoadingDetails,\r\n  functionGroups,\r\n} from \"../../../JS/FunctionGroups\";\r\n\r\nMarineLoadingDetails.propTypes = {\r\n  setValid: PropTypes.func.isRequired,\r\n  tableData: PropTypes.array,\r\n  onSaved: PropTypes.func.isRequired,\r\n  userDetails: PropTypes.object.isRequired,\r\n  status: PropTypes.object.isRequired,\r\n  isWebPortalUser: PropTypes.bool.isRequired,\r\n};\r\n\r\nMarineLoadingDetails.defaultProps = {};\r\n\r\nexport default function MarineLoadingDetails({\r\n  tableData,\r\n  loadingDetailsHideFields,\r\n  setValid,\r\n  onSaved,\r\n  userDetails,\r\n  handleBack,\r\n  status,\r\n  isWebPortalUser,\r\n}) {\r\n  const [t] = useTranslation();\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [loadingDetail, setLoadingDetail] = useState({});\r\n\r\n  function displayTMModalforInValidConfirm() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"InValid_Confirm\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  setLoadingDetail({});\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Confirm\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  setLoadingDetail({});\r\n                  setValid(\r\n                    loadingDetail.rowData.fptransactionid,\r\n                    loadingDetail.rowData.ProductCategoryType\r\n                  );\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n\r\n  const disPlayValue = (cellData) => {\r\n    try {\r\n      const field = cellData.rowData[cellData.field];\r\n      if (field === undefined || field === null || field === \"\") {\r\n        return \"\";\r\n      }\r\n      return (\r\n        new Date(field).toLocaleDateString() +\r\n        \" \" +\r\n        new Date(field).toLocaleTimeString()\r\n      );\r\n    } catch (error) {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const displayNum = (cellData) => {\r\n    try {\r\n      const field = cellData.rowData[cellData.field];\r\n      if (field === undefined || field === null || field === \"\") {\r\n        return \"\";\r\n      }\r\n      return field.toLocaleString();\r\n    } catch (error) {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const handleCustom = (e) => {\r\n    if (\r\n      e.rowData.BaseProductCode == null ||\r\n      e.rowData.BaseProductCode.toString().length === 0\r\n    ) {\r\n      return e.rowData.IsInvalid ? (\r\n        <span>{t(\"ViewMarineLoadingDetails_Invalid\")}</span>\r\n      ) : status !== \"CLOSED\" ? (\r\n        <button className=\"ValidBtn\" onClick={() => changeValid(e)}>\r\n          {t(\"ViewMarineLoadingDetails_Valid\")}\r\n        </button>\r\n      ) : (\r\n        <span>{t(\"ViewMarineLoadingDetails_Valid\")}</span>\r\n      );\r\n    }\r\n  };\r\n\r\n  const changeValid = (e) => {\r\n    Utilities.setArchive(userDetails.EntityResult.IsArchived);\r\n    if (\r\n      Utilities.isInFunction(\r\n        userDetails.EntityResult.FunctionsList,\r\n        functionGroups.modify,\r\n        fnViewMarineLoadingDetails\r\n      )\r\n    ) {\r\n      setModelOpen(true);\r\n      setLoadingDetail(e);\r\n    } else {\r\n      var notification = {\r\n        messageType: \"critical\",\r\n        message: \"ShipmentCompDetail_Permission\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: \"\",\r\n            keyValues: \"\",\r\n            isSuccess: false,\r\n            errorMessage: \"ShipmentCompDetail_LoadingDetailsPermission\",\r\n          },\r\n        ],\r\n      };\r\n      onSaved([], \"Permission\", notification);\r\n    }\r\n  };\r\n\r\n  const changeNumber = (e) => {\r\n    let { value } = e;\r\n    try {\r\n      if (value != null && value !== \"\") {\r\n        var index = value.indexOf(\" \");\r\n        if (index === 0) {\r\n          return \"\";\r\n        }\r\n        var str1 = value.substr(0, index);\r\n        var str2 = value.substr(index + 1, value.length - index - 1);\r\n        return parseFloat(str1).toLocaleString() + \" \" + str2;\r\n      }\r\n    } catch (error) {\r\n      return value;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TMDetailsHeader\r\n        entityCode={t(\"ViewMarineLoadingDetails_Title\")}\r\n      ></TMDetailsHeader>\r\n      <div className=\"detailsContainer\">\r\n        <div className=\"row\">\r\n          <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n            <h4>{t(\"ViewShipment_LoadingDetails\")}</h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"detailsTable loadingTable\">\r\n            <DataTable\r\n              data={tableData}\r\n              scrollable={true}\r\n              resizableColumns={true}\r\n            >\r\n              {loadingDetailsHideFields.indexOf(\"IsInvalid\") > -1 ||\r\n              isWebPortalUser ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"90px\"\r\n                  key=\"IsInvalid\"\r\n                  field=\"IsInvalid\"\r\n                  header={t(\"ViewMarineLoadingDetails_Valid\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(celldata) => handleCustom(celldata)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"CompartmentSeqNoInVehicle\") >\r\n              -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"CompartmentSeqNoInVehicle\"\r\n                  field=\"CompartmentSeqNoInVehicle\"\r\n                  header={t(\"ViewMarineLoadingDetails_CompartmentSeqNo\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"productcode\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"productcode\"\r\n                  field=\"productcode\"\r\n                  header={t(\"ViewMarineLoadingDetails_ProductCode\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => {\r\n                    return cellData.rowData.productcode.replace(/&nbsp;/g, \" \");\r\n                  }}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"BaseProductCode\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"170px\"\r\n                  key=\"BaseProductCode\"\r\n                  field=\"BaseProductCode\"\r\n                  header={t(\"ViewMarineLoadingDetails_BaseProductCode\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"TankCode\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"TankCode\"\r\n                  field=\"TankCode\"\r\n                  header={t(\"ViewMarineLoadingDetails_TankCode\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"BayCode\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"BayCode\"\r\n                  field=\"BayCode\"\r\n                  header={t(\"ViewMarineLoadingDetails_BayCode\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"BCUCode\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"BCUCode\"\r\n                  field=\"BCUCode\"\r\n                  header={t(\"ViewMarineLoadingDetails_BCUCode\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"MeterCode\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"120px\"\r\n                  key=\"MeterCode\"\r\n                  field=\"MeterCode\"\r\n                  header={t(\"ViewMarineLoadingDetails_MeterCode\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"GrossQuantity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"GrossQuantity\"\r\n                  field=\"GrossQuantity\"\r\n                  header={t(\"ViewMarineLoadingDetails_GrossQuantity\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => changeNumber(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"NetQuantity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"120px\"\r\n                  key=\"NetQuantity\"\r\n                  field=\"NetQuantity\"\r\n                  header={t(\"ViewMarineLoadingDetails_NetQuantity\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => changeNumber(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"Density\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"140px\"\r\n                  key=\"Density\"\r\n                  field=\"Density\"\r\n                  header={t(\"ViewMarineLoadingDetails_ProductDensity\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => changeNumber(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"Pressure\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"100px\"\r\n                  key=\"Pressure\"\r\n                  field=\"Pressure\"\r\n                  header={t(\"ViewMarineLoadingDetails_Pressure\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => changeNumber(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"Temperature\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"120px\"\r\n                  key=\"Temperature\"\r\n                  field=\"Temperature\"\r\n                  header={t(\"ViewMarineLoadingDetails_Temperature\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => changeNumber(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"StartTime\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"200px\"\r\n                  key=\"StartTime\"\r\n                  field=\"StartTime\"\r\n                  header={t(\"ViewMarineLoadingDetails_StartTime\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => disPlayValue(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"EndTime\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"200px\"\r\n                  key=\"EndTime\"\r\n                  field=\"EndTime\"\r\n                  header={t(\"ViewMarineLoadingDetails_EndTime\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => disPlayValue(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"StartTotalizer\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"StartTotalizer\"\r\n                  field=\"StartTotalizer\"\r\n                  header={t(\"ViewMarineLoadingDetails_StartTotalizer\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => displayNum(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"EndTotalizer\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"120px\"\r\n                  key=\"EndTotalizer\"\r\n                  field=\"EndTotalizer\"\r\n                  header={t(\"ViewMarineLoadingDetails_EndTotalizer\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => displayNum(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"NetStartTotalizer\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"150px\"\r\n                  key=\"NetStartTotalizer\"\r\n                  field=\"NetStartTotalizer\"\r\n                  header={t(\"ViewMarineLoadingDetails_netstarttotalizer\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => displayNum(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"NetEndtoTalizer\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"140px\"\r\n                  key=\"NetEndtoTalizer\"\r\n                  field=\"NetEndtoTalizer\"\r\n                  header={t(\"ViewMarineLoadingDetails_netendtotalizer\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => displayNum(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"TransactionID\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"170px\"\r\n                  key=\"TransactionID\"\r\n                  field=\"TransactionID\"\r\n                  header={t(\"ViewMarineLoadingDetails_TransactionNo\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"Mass\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"100px\"\r\n                  key=\"Mass\"\r\n                  field=\"Mass\"\r\n                  header={t(\"ViewMarineLoadingDetails_Mass\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"WeightInAir\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"100px\"\r\n                  key=\"WeightInAir\"\r\n                  field=\"WeightInAir\"\r\n                  header={t(\"ViewMarineLoadingDetails_WeightInAir\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"WeightInVacuum\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"100px\"\r\n                  key=\"WeightInVacuum\"\r\n                  field=\"WeightInVacuum\"\r\n                  header={t(\"ViewMarineLoadingDetails_WeightInVacuum\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"TankStartGrossQuantity\") >\r\n              -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"200px\"\r\n                  key=\"TankStartGrossQuantity\"\r\n                  field=\"TankStartGrossQuantity\"\r\n                  header={t(\"ViewMarineLoadingDetails_TankStartGrossQuantity\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => changeNumber(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"TankEndGrossQuantity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"200px\"\r\n                  key=\"TankEndGrossQuantity\"\r\n                  field=\"TankEndGrossQuantity\"\r\n                  header={t(\"ViewMarineLoadingDetails_TankEndGrossQuantity\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => changeNumber(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"TankStartNetQuantity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"200px\"\r\n                  key=\"TankStartNetQuantity\"\r\n                  field=\"TankStartNetQuantity\"\r\n                  header={t(\"ViewMarineLoadingDetails_TankStartNetQuantity\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => displayNum(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"TankEndNetQuantity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"200px\"\r\n                  key=\"TankEndNetQuantity\"\r\n                  field=\"TankEndNetQuantity\"\r\n                  header={t(\"ViewMarineLoadingDetails_TankEndNetQuantity\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => displayNum(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"TankStartGrossMass\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"180px\"\r\n                  key=\"TankStartGrossMass\"\r\n                  field=\"TankStartGrossMass\"\r\n                  header={t(\"ViewMarineLoadingDetails_TankStartGrossMass\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"TankEndGrossMass\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"180px\"\r\n                  key=\"TankEndGrossMass\"\r\n                  field=\"TankEndGrossMass\"\r\n                  header={t(\"ViewMarineLoadingDetails_TankEndGrossMass\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"EndTemperature\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"EndTemperature\"\r\n                  field=\"EndTemperature\"\r\n                  header={t(\"ViewMarineLoadingDetails_EndTemperature\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"StartPressure\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"StartPressure\"\r\n                  field=\"StartPressure\"\r\n                  header={t(\"ViewMarineLoadingDetails_StartPressure\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"EndPressure\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"120px\"\r\n                  key=\"EndPressure\"\r\n                  field=\"EndPressure\"\r\n                  header={t(\"ViewMarineLoadingDetails_EndPressure\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"ReferenceDensity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"ReferenceDensity\"\r\n                  field=\"ReferenceDensity\"\r\n                  header={t(\"ViewMarineLoadingDetails_ReferenceDensity\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => changeNumber(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"StartProductDensity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"StartProductDensity\"\r\n                  field=\"StartProductDensity\"\r\n                  header={t(\"ViewMarineLoadingDetails_StartProductDensity\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => changeNumber(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"EndProductDensity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"EndProductDensity\"\r\n                  field=\"EndProductDensity\"\r\n                  header={t(\"ViewMarineLoadingDetails_EndProductDensity\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => changeNumber(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"StartWeightInAir\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"StartWeightInAir\"\r\n                  field=\"StartWeightInAir\"\r\n                  header={t(\"ViewMarineLoadingDetails_StartWeightInAir\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"EndWeightInAir\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"120px\"\r\n                  key=\"EndWeightInAir\"\r\n                  field=\"EndWeightInAir\"\r\n                  header={t(\"ViewMarineLoadingDetails_EndWeightInAir\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"Remarks\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"100px\"\r\n                  key=\"Remarks\"\r\n                  field=\"Remarks\"\r\n                  header={t(\"ViewMarineLoadingDetails_Remarks\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"PresetQuantity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"PresetQuantity\"\r\n                  field=\"PresetQuantity\"\r\n                  header={t(\"ViewMarineLoadingDetails_PresetQuantity\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"resetQuantity\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"resetQuantity\"\r\n                  field=\"resetQuantity\"\r\n                  header={t(\"ViewMarineLoadingDetails_resetQuantity\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => changeNumber(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"CalculatedGross\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"CalculatedGross\"\r\n                  field=\"CalculatedGross\"\r\n                  header={t(\"ViewMarineLoadingDetails_CalculatedGross\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => changeNumber(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"CalculatedNet\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"120px\"\r\n                  key=\"CalculatedNet\"\r\n                  field=\"CalculatedNet\"\r\n                  header={t(\"ViewMarineLoadingDetails_CalculatedNet\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => changeNumber(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n              {loadingDetailsHideFields.indexOf(\"CalculatedValueUOM\") > -1 ? (\r\n                \"\"\r\n              ) : (\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  initialWidth=\"130px\"\r\n                  key=\"CalculatedValueUOM\"\r\n                  field=\"CalculatedValueUOM\"\r\n                  header={t(\"ViewMarineLoadingDetails_CalculatedValueUOM\")}\r\n                  editable={false}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => changeNumber(cellData)}\r\n                ></DataTable.Column>\r\n              )}\r\n            </DataTable>\r\n          </div>\r\n          {displayTMModalforInValidConfirm()}\r\n        </div>\r\n        <div className=\"row\" style={{ paddingTop: \"15px\" }}>\r\n          <div className=\"col col-lg-8\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Button, Modal, Input, Checkbox, DatePicker } from \"@scuf/common\";\r\nimport {\r\n  MarineDispatchCompartmentDetailType,\r\n  ViewDispatchStatus,\r\n  ViewDispatch_Status,\r\n} from \"../../../JS/Constants\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport * as wjChart from \"@grapecity/wijmo.react.chart\";\r\nimport * as wjcCore from \"@grapecity/wijmo\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nwjcCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nMarineShipmentViewAuditTrailDetails.propTypes = {\r\n  auditTrailList: PropTypes.array.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  DispatchCode: PropTypes.string,\r\n  modAuditTrailList: PropTypes.array.isRequired,\r\n  Attributes: PropTypes.array.isRequired,\r\n  isWebPortalUser: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport function MarineShipmentViewAuditTrailDetails({\r\n  DispatchCode,\r\n  auditTrailList,\r\n  handleBack,\r\n  modAuditTrailList,\r\n  auditExpandedRows,\r\n  Attributes,\r\n  isWebPortalUser,\r\n}) {\r\n  const [t] = useTranslation();\r\n  const handleStatus = (e) => {\r\n    if (e === MarineDispatchCompartmentDetailType.EMPTY) {\r\n      return \"EMPTY\";\r\n    } else if (e === MarineDispatchCompartmentDetailType.LOADING) {\r\n      return \"LOADING\";\r\n    } else if (e === MarineDispatchCompartmentDetailType.PART_FILLED) {\r\n      return \"PART_FILLED\";\r\n    } else if (e === MarineDispatchCompartmentDetailType.OVER_FILLED) {\r\n      return \"OVER_FILLED\";\r\n    } else if (e === MarineDispatchCompartmentDetailType.FORCE_COMPLETED) {\r\n      return \"FORCE_COMPLETED\";\r\n    } else if (e === MarineDispatchCompartmentDetailType.COMPLETED) {\r\n      return \"COMPLETED\";\r\n    } else if (e === MarineDispatchCompartmentDetailType.INTERRUPTED) {\r\n      return \"INTERRUPTED\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n\r\n  const formatter = (engine, label) => {\r\n    label.cls = null;\r\n    engine.fontSize = \"7px\";\r\n    if (label.val === ViewDispatchStatus.AUTO_LOADED) {\r\n      label.text = ViewDispatch_Status.AUTO_LOADED;\r\n    } else if (label.val === ViewDispatchStatus.CLOSED) {\r\n      label.text = ViewDispatch_Status.CLOSED;\r\n    } else if (label.val === ViewDispatchStatus.INTERRUPTED) {\r\n      label.text = ViewDispatch_Status.INTERRUPTED;\r\n    } else if (label.val === ViewDispatchStatus.LOADING) {\r\n      label.text = ViewDispatch_Status.LOADING;\r\n    } else if (label.val === ViewDispatchStatus.MANUALLY_LOADED) {\r\n      label.text = ViewDispatch_Status.MANUALLY_LOADED;\r\n    } else if (label.val === ViewDispatchStatus.PARTIALLY_LOADED) {\r\n      label.text = ViewDispatch_Status.PARTIALLY_LOADED;\r\n    } else if (label.val === ViewDispatchStatus.QUEUED) {\r\n      label.text = ViewDispatch_Status.QUEUED;\r\n    } else if (label.val === ViewDispatchStatus.READY) {\r\n      label.text = ViewDispatch_Status.READY;\r\n    }\r\n    return label;\r\n  };\r\n\r\n  const disPlayValue = (cellData) => {\r\n    try {\r\n      const field = cellData.rowData[cellData.field];\r\n      if (field === undefined || field === null || field === \"\") {\r\n        return \"\";\r\n      }\r\n      return (\r\n        new Date(field).toLocaleDateString() +\r\n        \" \" +\r\n        new Date(field).toLocaleTimeString()\r\n      );\r\n    } catch (error) {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  function displayTMModalforPrintConfirm() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} className=\"marineModalPrint\">\r\n            <Modal.Content>\r\n              <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n                <h3>\r\n                  {t(\"Transaction_AuditTrail_Heading\") +\r\n                    \" : \" +\r\n                    DispatchCode}\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-md-10 container-fluid\">\r\n                <wjChart.FlexChart\r\n                  itemsSource={modAuditTrailList}\r\n                  chartType=\"Line\"\r\n                  bindingX=\"UpdatedTime\"\r\n                  palette={[\"red\"]}\r\n                  style={{ width: \"100%\", height: \"450px\" }}\r\n                >\r\n                  <wjChart.FlexChartLegend position=\"Bottom\"></wjChart.FlexChartLegend>\r\n                  <wjChart.FlexChartAxis\r\n                    wjProperty=\"axisY\"\r\n                    majorUnit={1}\r\n                    max={7}\r\n                    min={0}\r\n                    itemFormatter={formatter}\r\n                    axisLine={true}\r\n                  ></wjChart.FlexChartAxis>\r\n                  <wjChart.FlexChartSeries\r\n                    binding=\"DispatchStatus\"\r\n                    name={t(\"MarineShipmentByCompartmentList_ShipmentStatus\")}\r\n                  ></wjChart.FlexChartSeries>\r\n                </wjChart.FlexChart>\r\n              </div>\r\n              <div className=\"col-12 detailsTable\">\r\n                <DataTable data={auditTrailList}>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"DispatchStatus\"\r\n                    field=\"DispatchStatus\"\r\n                    header={t(\"MarineShipmentByCompartmentList_ShipmentStatus\")}\r\n                    editable={false}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"DispatchCompartmentStatus\"\r\n                    field=\"UpdatedTime\"\r\n                    header={t(\"ViewMarineReceiptAuditTrail_UpdatedTime\")}\r\n                    editable={false}\r\n                    editFieldType=\"text\"\r\n                    renderer={(cellData) => disPlayValue(cellData)}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    header={t(\r\n                      \"ViewMarineReceiptAuditTrail_ReceiptCompartmentSeq\"\r\n                    )}\r\n                    field={\"CompartmentSeqNoInVehicle\"}\r\n                    editable={false}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"CompartmentSeqNoInVehicle\"\r\n                    field=\"DispatchCompartmentStatus\"\r\n                    header={t(\r\n                      \"ViewMarineReceiptAuditTrail_ReceiptCompartmentStatus\"\r\n                    )}\r\n                    editable={false}\r\n                    renderer={(cellData) =>\r\n                      handleStatus(cellData.rowData.DispatchCompartmentStatus)\r\n                    }\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    header={t(\"PIN\")}\r\n                    editable={false}\r\n                    field={\"UserPIN\"}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    header={t(\"ViewAuditTrail_OfficerName\")}\r\n                    editable={false}\r\n                    field={\"OfficerName\"}\r\n                    editFieldType=\"text\"\r\n                  ></DataTable.Column>\r\n                  {Attributes.map((att) => {\r\n                    return (\r\n                      <DataTable.Column\r\n                        className=\"compColHeight\"\r\n                        header={t(att.AttributeName)}\r\n                        editable={false}\r\n                      ></DataTable.Column>\r\n                    );\r\n                  })}\r\n                </DataTable>\r\n              </div>\r\n              <Modal.Footer>\r\n                <div className=\"viewPrint\">\r\n                  <Button\r\n                    type=\"secondary\"\r\n                    size=\"small\"\r\n                    content={t(\"MarineEOD_Close\")}\r\n                    onClick={() => {\r\n                      setModelOpen(false);\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    type=\"primary\"\r\n                    size=\"small\"\r\n                    content={t(\"ViewAuditTrail_Print\")}\r\n                    onClick={() => {\r\n                      let el =\r\n                        window.document.getElementById(\"printTable\").innerHTML;\r\n                      const iframe = window.document.createElement(\"IFRAME\");\r\n                      let doc = null;\r\n                      window.document.body.appendChild(iframe);\r\n                      doc = iframe.contentWindow.document;\r\n                      const str1 = el.substring(0, el.indexOf(\"<table\") + 6);\r\n                      const str2 = el.substring(\r\n                        el.indexOf(\"<table\") + 6,\r\n                        el.length\r\n                      );\r\n                      const str3 =\r\n                        t(\"ViewAuditTrail_ViewAuditTrailForShipment\") +\r\n                        \" : \" +\r\n                        DispatchCode;\r\n                      el = str3 + str1 + ' border=\"1\" cellspacing=\"0\"' + str2;\r\n                      el = el.replace('<tfoot class=\"p-datatable-tfoot\">', \"\");\r\n                      el = el.replace(\r\n                        '<tr><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td></tr>',\r\n                        \"\"\r\n                      );\r\n                      doc.write(el);\r\n                      // console.info(el);\r\n                      doc.close();\r\n                      iframe.contentWindow.focus();\r\n                      iframe.contentWindow.print();\r\n                      setTimeout(() => {\r\n                        window.document.body.removeChild(iframe);\r\n                      }, 2000);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Modal.Footer>\r\n            </Modal.Content>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n\r\n  function rowExpansionTemplate(data) {\r\n    return Array.isArray(data.AttributesforUI) &&\r\n      data.AttributesforUI.length > 0 ? (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable data={data.AttributesforUI}>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"AttributeName\"\r\n            header={t(\"CompartmentAttributeName\")}\r\n            renderer={handleIsRequiredAuditAttributes}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            header={t(\"CompartmentAttributeValue\")}\r\n            renderer={handleAttributeType}\r\n          />\r\n        </DataTable>\r\n      </div>\r\n    ) : (\r\n      <div className=\"compartmentIcon\">\r\n        <div style={{ paddingRight: \"87%\" }}>\r\n          {t(\"CustomerInventory_NoRecordsFound\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleIsRequiredAuditAttributes = (data) => {\r\n    return (\r\n      <div>\r\n        <span>{data.rowData.AttributeName}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleAttributeType = (data) => {\r\n    const attribute = data.rowData;\r\n    try {\r\n      return attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.STRING.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={true}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.INT.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={true}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.FLOAT.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.LONG.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.DOUBLE.toLowerCase() ? (\r\n        <Input\r\n          fluid\r\n          value={attribute.AttributeValue}\r\n          disabled={true}\r\n          reserveSpace={false}\r\n        />\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.BOOL.toLowerCase() ? (\r\n        <Checkbox\r\n          checked={attribute.AttributeValue.toString().toLowerCase() === \"true\"}\r\n          disabled={true}\r\n        ></Checkbox>\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.DATETIME.toLowerCase() ? (\r\n        <DatePicker\r\n          fluid\r\n          minuteStep=\"5\"\r\n          value={\r\n            attribute.AttributeValue === null ||\r\n              attribute.AttributeValue === undefined ||\r\n              attribute.AttributeValue === \"\"\r\n              ? \"\"\r\n              : new Date(attribute.AttributeValue)\r\n          }\r\n          disabled={true}\r\n          showYearSelector=\"true\"\r\n          reserveSpace={false}\r\n        />\r\n      ) : null;\r\n    } catch (error) {\r\n      console.log(\"TrailerDetails:Error occured on handleAttributeType\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div>\r\n            <div className=\"detailsContainer\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <h3>\r\n                    {t(\"Transaction_AuditTrail_Heading\") +\r\n                      \" : \" +\r\n                      DispatchCode}\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n              <div className=\"row marginRightZero tableScroll\">\r\n                <div className=\"col-12 container-fluid\">\r\n                  <wjChart.FlexChart\r\n                    itemsSource={modAuditTrailList}\r\n                    chartType=\"Line\"\r\n                    bindingX=\"UpdatedTime\"\r\n                    palette={[\"red\"]}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      minWidth: \"800px\",\r\n                      height: \"450px\",\r\n                    }}\r\n                  >\r\n                    <wjChart.FlexChartLegend position=\"Bottom\"></wjChart.FlexChartLegend>\r\n                    <wjChart.FlexChartAxis\r\n                      wjProperty=\"axisY\"\r\n                      majorUnit={1}\r\n                      max={7}\r\n                      min={0}\r\n                      itemFormatter={formatter}\r\n                      axisLine={true}\r\n                    ></wjChart.FlexChartAxis>\r\n                    <wjChart.FlexChartSeries\r\n                      binding=\"DispatchStatus\"\r\n                      name={t(\"MarineShipmentByCompartmentList_ShipmentStatus\")}\r\n                    ></wjChart.FlexChartSeries>\r\n                  </wjChart.FlexChart>\r\n                </div>\r\n              </div>\r\n              <div className=\"row marginRightZero tableScroll\">\r\n                <div className=\"col-12 detailsTable\" id=\"printTable\">\r\n                  <DataTable\r\n                    data={auditTrailList}\r\n                    scrollable={true}\r\n                    rowExpansionTemplate={rowExpansionTemplate}\r\n                    expandedRows={auditExpandedRows}\r\n                  >\r\n                    <DataTable.Column\r\n                      className=\"compColHeight colminWidth\"\r\n                      key=\"DispatchStatus\"\r\n                      field=\"DispatchStatus\"\r\n                      header={t(\r\n                        \"MarineShipmentByCompartmentList_ShipmentStatus\"\r\n                      )}\r\n                      editable={false}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      className=\"compColHeight colminWidth\"\r\n                      key=\"DispatchCompartmentStatus\"\r\n                      field=\"UpdatedTime\"\r\n                      header={t(\"ViewMarineReceiptAuditTrail_UpdatedTime\")}\r\n                      editable={false}\r\n                      editFieldType=\"text\"\r\n                      renderer={(cellData) => disPlayValue(cellData)}\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      className=\"compColHeight colminWidth\"\r\n                      header={t(\r\n                        \"ViewMarineReceiptAuditTrail_ReceiptCompartmentSeq\"\r\n                      )}\r\n                      field={\"CompartmentSeqNoInVehicle\"}\r\n                      editable={false}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      className=\"compColHeight colminWidth\"\r\n                      key=\"CompartmentSeqNoInVehicle\"\r\n                      field=\"DispatchCompartmentStatus\"\r\n                      header={t(\r\n                        \"ViewMarineReceiptAuditTrail_ReceiptCompartmentStatus\"\r\n                      )}\r\n                      editable={false}\r\n                      renderer={(cellData) =>\r\n                        handleStatus(cellData.rowData.DispatchCompartmentStatus)\r\n                      }\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      className=\"compColHeight colminWidth\"\r\n                      header={t(\"PIN\")}\r\n                      editable={false}\r\n                      field={\"UserPIN\"}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      className=\"compColHeight colminWidth\"\r\n                      header={t(\"ViewAuditTrail_OfficerName\")}\r\n                      editable={false}\r\n                      field={\"OfficerName\"}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    {Attributes.map((att) => {\r\n                      return (\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          header={t(att.AttributeName)}\r\n                          editable={false}\r\n                        ></DataTable.Column>\r\n                      );\r\n                    })}\r\n                  </DataTable>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-sm-6 col-lg-8\">\r\n                  <Button\r\n                    className=\"backButton\"\r\n                    onClick={handleBack}\r\n                    content={t(\"Back\")}\r\n                  ></Button>\r\n                </div>\r\n\r\n                {isWebPortalUser ? (\r\n                  \"\"\r\n                ) : (\r\n                  <div\r\n                    className=\"col-12 col-sm-6 col-lg-4\"\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    <Button\r\n                      className=\"printButton\"\r\n                      onClick={() => {\r\n                        setModelOpen(true);\r\n                      }}\r\n                      content={t(\"ViewAuditTrail_PrintAuditTrail\")}\r\n                    ></Button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n      {displayTMModalforPrintConfirm()}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { MarineDispatchSummaryPageComposite } from \"../Summary/MarineDispatchSummaryComposite\";\r\nimport MarineDispatchDetailsComposite from \"../Details/MarineDispatchDetailsComposite\";\r\nimport MarineLoadingDetails from \"../../UIBase/Details/MarineLoadingDetails\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport axios from \"axios\";\r\nimport { Button, Modal, Input } from \"@scuf/common\";\r\nimport * as RestApis from \"../../../JS/RestApis\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport ReportDetails from \"../../UIBase/Details/ReportDetails\";\r\nimport \"../../../CSS/styles.css\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { MARINEDISPATCHSTATUSTIME } from \"../../../JS/AttributeEntity\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nimport {\r\n  functionGroups,\r\n  fnMarineShipmentByCompartment,\r\n  fnPrintMarineFAN,\r\n  fnPrintMarineBOL,\r\n  fnViewMarineLoadingDetails,\r\n  fnViewMarineShipmentAuditTrail,\r\n  fnCloseMarineShipment,\r\n  fnKPIInformation,\r\n  fnMarineDispatch\r\n} from \"../../../JS/FunctionGroups\";\r\nimport { marineDispatchValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TMTransactionFilters } from \"../../UIBase/Common/TMTransactionFilters\";\r\nimport lodash from \"lodash\";\r\nimport { MarineShipmentViewAuditTrailDetails } from \"../../UIBase/Details/MarineShipmentViewAuditTrailDetails\";\r\nimport MarineDispatchManualEntryDetailsComposite from \"../Details/MarineDispatchManualEntryDetailsComposite\";\r\nimport { emptyMarineDispatch } from \"../../../JS/DefaultEntities\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport TransactionSummaryOperations from \"../Common/TransactionSummaryOperations\";\r\n//import TransactionSummaryOperationsMarine from \"../Common/TransactionSummaryOperationsMarine\";\r\nimport { kpiMarineShipmentList } from \"../../../JS/KPIPageName\";\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\n\r\nclass MarineDispatchComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    selectedShareholder: \"\",\r\n    data: [],\r\n    loadingDetails: [],\r\n    productAllocationDetails: [],\r\n    terminalCodes: [],\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    dateError: \"\",\r\n    shipmentNextOperations: [],\r\n    currentShipmentStatuses: [],\r\n    loadingDetailsHideFields: [],\r\n    lastStatus: \"\",\r\n    reason: \"\",\r\n    isError: false,\r\n    isOperation: false,\r\n    isViewDetails: false,\r\n    isCloseShipment: false,\r\n    isViewAuditTrail: false,\r\n    isViewProductAllocation: false,\r\n    isViewLoadingDetails: false,\r\n    isManualEntry: false,\r\n    isCloseShipmentBtn: false,\r\n    auditTrailList: [],\r\n    auditAttributeMetaDataList: [],\r\n    modAuditTrailList: [],\r\n    auditExpandedRows: [],\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      marineDispatchValidationDef\r\n    ),\r\n    viewTab: 0,\r\n    modMarineDispatch: {},\r\n    isShowPanle: false,\r\n    marineDispatchBtnStatus: false,\r\n    drawerStatus: false,\r\n    showReport: false,\r\n    marineShipmentKPIList: [],\r\n    deleteEnableForConfigure: [],\r\n    activityInfo: [],\r\n    showDeleteAuthenticationLayout: false,\r\n    showAuthorizeToLoadAuthenticationLayout: false,\r\n    showCloseShipmentAuthenticationLayout: false,\r\n    showViewBOLAuthenticationLayout: false,\r\n    showPrintBOLAuthenticationLayout:false,\r\n    showFANAuthenticationLayout: false,\r\n  };\r\n\r\n  componentName = \"MarineDispatchComponent\";\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState(\r\n        {\r\n          drawerStatus: false,\r\n          isDetails: false,\r\n        },\r\n        () => {\r\n          this.setState({\r\n            viewTab: 0,\r\n            isDetails: true,\r\n            isShowPanle: false,\r\n            selectedRow: {},\r\n            operationsVisibilty,\r\n          });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.log(\"MarineDisatchComposite:Error occured on handleAdd\");\r\n    }\r\n  };\r\n\r\n  getAttributes() {\r\n    try {\r\n      axios(\r\n        RestApis.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [MARINEDISPATCHSTATUSTIME],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess) {\r\n          this.setState({\r\n            auditAttributeMetaDataList:\r\n              result.EntityResult.MARINEDISPATCHSTATUSTIME,\r\n          });\r\n        } else {\r\n          console.log(\"Failed to get Attributes\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Attributes:\", error);\r\n    }\r\n  }\r\n\r\n  handleDelete = () => {\r\n    this.handleAuthenticationClose();\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty, deleteEnableForConfigure: [] });\r\n      var deleteMarineDispatchKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        var MarineDispatchCode = this.state.selectedItems[i][\"Common_Code\"];\r\n        var KeyData = {\r\n          KeyCodes: [\r\n            { Key: KeyCodes.marineDispatchCode, Value: MarineDispatchCode },\r\n          ],\r\n        };\r\n        deleteMarineDispatchKeys.push(KeyData);\r\n      }\r\n\r\n      axios(\r\n        RestApis.DeleteMarineDispatch,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteMarineDispatchKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          // var isRefreshDataRequire = result.isSuccess;\r\n          // if (\r\n          //   response.ResultDataList !== null &&\r\n          //   result.ResultDataList !== undefined\r\n          // ) {\r\n          //   var failedResultsCount = result.ResultDataList.filter(function (\r\n          //     res\r\n          //   ) {\r\n          //     return !res.isSuccess;\r\n          //   }).length;\r\n          //   if (failedResultsCount === result.ResultDataList.length) {\r\n          //     isRefreshDataRequire = false;\r\n          //   } else isRefreshDataRequire = true;\r\n          // }\r\n          var notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"Shipment_DeletionStatus\",\r\n            [\"MarineDispatchCode\"]\r\n          );\r\n          // if (isRefreshDataRequire) {\r\n          this.getMarineDispatchList();\r\n          this.getKPIList();\r\n          operationsVisibilty.delete = false;\r\n          this.setState(\r\n            {\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n              isDetails: false,\r\n              deleteEnableForConfigure: [],\r\n            },\r\n            () => {\r\n              if (this.state.isShowPanle) {\r\n                this.setState({\r\n                  isDetails: true,\r\n                  isShowPanle: false,\r\n                  isReadyToRender: false,\r\n                });\r\n              }\r\n            }\r\n          );\r\n          // }\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0) {\r\n              messageResult.keyFields[0] = \"ViewShipmentStatus_ShipmentCode\";\r\n            }\r\n          });\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    } catch (error) {\r\n      console.log(\"MarineDisatchComposite:Error occured on handleDelete\");\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnMarineShipmentByCompartment\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      this.getMarineDispatchList();\r\n      this.getKPIList();\r\n      if (\r\n        this.state.isDetails &&\r\n        (this.state.isViewAuditTrail ||\r\n          this.state.isViewLoadingDetails ||\r\n          this.state.isManualEntry ||\r\n          this.state.isViewProductAllocation)\r\n      ) {\r\n        // this.componentDidMount();\r\n        var selectItem = {\r\n          DispatchCode: this.state.selectedItems[0].Common_Code,\r\n        };\r\n        this.handleClickRefresh(selectItem);\r\n        this.setState(\r\n          {\r\n            isDetails: false,\r\n            isViewDetails: false,\r\n            isViewAuditTrail: false,\r\n            isViewLoadingDetails: false,\r\n            isManualEntry: false,\r\n            isShowPanle: false,\r\n            isViewProductAllocation: false,\r\n            drawerStatus: false,\r\n            deleteEnableForConfigure: [],\r\n          },\r\n          () => {\r\n            this.setState({\r\n              isDetails: true,\r\n              isShowPanle: true,\r\n            });\r\n          }\r\n        );\r\n      } else {\r\n        this.setState({\r\n          isDetails: false,\r\n          isViewDetails: false,\r\n          isShowPanle: false,\r\n          isViewAuditTrail: false,\r\n          isViewProductAllocation: false,\r\n          isViewLoadingDetails: false,\r\n          isManualEntry: false,\r\n          selectedRow: {},\r\n          selectedItems: [],\r\n          operationsVisibilty,\r\n          drawerStatus: false,\r\n          deleteEnableForConfigure: [],\r\n          isReadyToRender: false,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"MarineDispatchComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n\r\n  handleRangeSelect = ({ to, from }) => {\r\n    if (to !== undefined) this.setState({ toDate: to });\r\n    if (from !== undefined) this.setState({ fromDate: from });\r\n  };\r\n\r\n  handleDateTextChange = (value, error) => {\r\n    if (value === \"\")\r\n      this.setState({ dateError: \"\", toDate: \"\", fromDate: \"\" });\r\n    if (error !== null && error !== \"\")\r\n      this.setState({\r\n        dateError: \"Common_InvalidDate\",\r\n        toDate: \"\",\r\n        fromDate: \"\",\r\n      });\r\n    else {\r\n      this.setState({ dateError: \"\", toDate: value.to, fromDate: value.from });\r\n    }\r\n  };\r\n\r\n  handleLoadOrders = () => {\r\n    let error = Utilities.validateDateRange(\r\n      this.state.toDate,\r\n      this.state.fromDate\r\n    );\r\n\r\n    if (error !== \"\") {\r\n      this.setState({ dateError: error });\r\n    } else {\r\n      this.setState({ dateError: \"\" });\r\n      this.getMarineDispatchList();\r\n    }\r\n  };\r\n\r\n  handleModalBack = () => {\r\n    this.setState({ showReport: false });\r\n  };\r\n  renderModal() {\r\n    let path = null;\r\n    if (this.props.userDetails.EntityResult.IsArchived) {\r\n      path = \"TM/\" + Constants.TMReportArchive + \"/MarineBOL\";\r\n    } else {\r\n      path = \"TM/\" + Constants.TMReports + \"/MarineBOL\";\r\n    }\r\n    let paramValues = {\r\n      Culture: this.props.userDetails.EntityResult.UICulture,\r\n      //ShareholderCode: this.state.selectedShareholder,\r\n      DispatchCode:\r\n        this.state.selectedItems.length === 1\r\n          ? this.state.selectedItems[0].Common_Code\r\n          : this.state.selectedRow.Common_Code,\r\n    };\r\n\r\n    return (\r\n      <ReportDetails\r\n        showReport={this.state.showReport}\r\n        handleBack={this.handleModalBack}\r\n        handleModalClose={this.handleModalBack}\r\n        // proxyServerHost=\"http://epksr5115dit:3625/TMWebAPI/\"\r\n        proxyServerHost={RestApis.WebAPIURL}\r\n        reportServiceHost={this.reportServiceURI}\r\n        filePath={path}\r\n        parameters={paramValues}\r\n      />\r\n    );\r\n  }\r\n\r\n\r\n  CloseShipment= () => {\r\n     \r\n    this.setState({ isCloseShipmentBtn: true });\r\n    setTimeout(() => {\r\n      this.setState({ isCloseShipmentBtn: false });\r\n    }, 1500);\r\n    var reason = lodash.cloneDeep(this.state.reason);\r\n    if (!this.onFieldChange(\"Reason\", reason)) {\r\n      this.setState({ isError: true });\r\n    } else {\r\n     \r\n\r\n      let showCloseShipmentAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n    \r\n      this.setState({ showCloseShipmentAuthenticationLayout, }, () => {\r\n        if (showCloseShipmentAuthenticationLayout === false) {\r\n          this.handleShipmentClose();\r\n        }})\r\n\r\n    }\r\n  }\r\n\r\n  handleShipmentClose= () => {\r\n    this.handleAuthenticationClose();\r\n    var reason = lodash.cloneDeep(this.state.reason);\r\n    var item = lodash.cloneDeep(this.state.selectedItems[0]);\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineDispatchCode,\r\n        value: item.Common_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.marineDispatchReason,\r\n        value: reason,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineDispatchCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewMarineDispatch_CloseShipment_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [item.Common_Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestApis.MarineDispatchCloseShipment,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ isCloseShipment: false, reason: \"\" });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0] + Constants.delimiter + \"\";\r\n          console.log(\"Error in CloseShipment:\", result.ErrorList);\r\n        }\r\n        this.savedEvent(item, \"CloseShipment\", notification);\r\n        if (this.state.isDetails === true) {\r\n          var selectItem = {\r\n            DispatchCode: this.state.selectedItems[0].Common_Code,\r\n          };\r\n          this.handleClickRefresh(selectItem);\r\n        } else {\r\n          this.componentDidMount();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.savedEvent(item, \"CloseShipment\", notification);\r\n        console.log(\"Error while CloseShipment:\", error);\r\n      });\r\n  }\r\n\r\n  viewBOLClick= () => {\r\n    let showViewBOLAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n  \r\n    this.setState({ showViewBOLAuthenticationLayout, }, () => {\r\n      if (showViewBOLAuthenticationLayout === false) {\r\n        this.handleViewBOL();\r\n      }})\r\n     \r\n    }\r\n\r\n  handleViewBOL = () => {\r\n    this.handleAuthenticationClose();\r\n    if (this.reportServiceURI === undefined) {\r\n      axios(\r\n        RestApis.GetReportServiceURI,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        if (response.data.IsSuccess) {\r\n          this.reportServiceURI = response.data.EntityResult;\r\n          this.setState({ showReport: true });\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ showReport: true });\r\n    }\r\n  };\r\n\r\n  handleOperationClick = (operation) => {\r\n    this.setState({\r\n      marineDispatchBtnStatus: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ marineDispatchBtnStatus: false });\r\n    }, 800);\r\n    if (\r\n      operation ===\r\n      Constants.ViewAllMarineShipmentOperations\r\n        .ViewMarineShipmentList_AuthorizeToLoad\r\n    ) {\r\n      this.authorizeToLoadOnClick();\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllMarineShipmentOperations\r\n        .ViewMarineShipmentList_CloseMarineShipment\r\n    ) {\r\n      this.setState({ isCloseShipment: true });\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllMarineShipmentOperations\r\n        .ViewMarineShipmentList_ViewAuditTrail\r\n    ) {\r\n      this.getAuditTrailList(this.state.selectedItems[0]);\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllMarineShipmentOperations\r\n        .ViewMarineShipmentList_ViewTransactions\r\n    ) {\r\n      this.getMarineDispatchLoadingDetail();\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllMarineShipmentOperations.ViewMarineShipmentList_PrintFAN\r\n    ) {\r\n      this.printFANClick();\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllMarineShipmentOperations.ViewMarineShipmentList_ViewBOL\r\n    ) {\r\n      this.viewBOLClick();\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllMarineShipmentOperations.ViewMarineShipmentList_PrintBOL\r\n    ) {\r\n      this.printBOLClick();\r\n        \r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllMarineShipmentOperations\r\n        .ViewMarineShipmentList_BSIOutbound\r\n    ) {\r\n      this.BSIOutbound();\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllMarineShipmentOperations\r\n        .ViewMarineShipmentList_ManualEntry\r\n    ) {\r\n      this.getMarineDispatch(this.state.selectedItems[0]);\r\n    }\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      if (\r\n        !Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.view,\r\n          fnMarineShipmentByCompartment\r\n        )\r\n      ) {\r\n        var notification = {\r\n          messageType: \"critical\",\r\n          message: \"ShipmentCompDetail_Permission\",\r\n          messageResultDetails: [\r\n            {\r\n              keyFields: \"\",\r\n              keyValues: \"\",\r\n              isSuccess: false,\r\n              errorMessage: \"BSI_SHIPMENTSECURITYERROR\",\r\n            },\r\n          ],\r\n        };\r\n        this.savedEvent(item, \"Permission\", notification);\r\n        return;\r\n      }\r\n      var { operationsVisibilty, activityInfo } = { ... this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnMarineShipmentByCompartment\r\n      );\r\n\r\n      let dispatchDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ShipmentActivityInfo.MARINE_SHIPMENT_ENABLE_DELETE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      var dispatchDeleteStates = [];\r\n\r\n      if (\r\n        dispatchDeleteInfo !== undefined &&\r\n        dispatchDeleteInfo.length > 0\r\n      )\r\n        dispatchDeleteStates =\r\n          dispatchDeleteInfo[0].ShipmentStates;\r\n\r\n      operationsVisibilty.delete = this.props.userDetails\r\n        .EntityResult.IsWebPortalUser\r\n        ? false\r\n        : dispatchDeleteStates.indexOf(\r\n          item.MarineShipmentByCompartmentList_ShipmentStatus.toUpperCase()\r\n        ) > -1 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnMarineShipmentByCompartment\r\n        );\r\n\r\n      operationsVisibilty.shareholder = false;\r\n      this.GetShipmentStatusOperations([item]);\r\n      // this.GetViewAllMarineDispatchCustomData(item, true);\r\n      this.GetShipmentStatuses([item]);\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: item,\r\n        selectItems: [item],\r\n        selectedItems: [item],\r\n        isShowPanle: true,\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchComposite:Error occured on handleRowClick\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleGoDetails = (item) => {\r\n    try {\r\n      if (\r\n        !Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.view,\r\n          fnMarineShipmentByCompartment\r\n        )\r\n      ) {\r\n        var notification = {\r\n          messageType: \"critical\",\r\n          message: \"ShipmentCompDetail_Permission\",\r\n          messageResultDetails: [\r\n            {\r\n              keyFields: \"\",\r\n              keyValues: \"\",\r\n              isSuccess: false,\r\n              errorMessage: \"BSI_SHIPMENTSECURITYERROR\",\r\n            },\r\n          ],\r\n        };\r\n        this.savedEvent(item, \"Permission\", notification);\r\n        return;\r\n      }\r\n      var { operationsVisibilty } = this.state;\r\n      // operationsVisibilty.add = Utilities.isInFunction(\r\n      //   this.props.userDetails.EntityResult.FunctionsList,\r\n      //   functionGroups.add,\r\n      //   fnMarineShipmentByCompartment\r\n      // );\r\n      operationsVisibilty.shareholder = false;\r\n      if (item.MarineShipmentByCompartmentList_ShipmentStatus !== undefined) {\r\n        this.GetShipmentStatusOperations([item]);\r\n        // this.GetViewAllMarineDispatchCustomData(item, true);\r\n      }\r\n      this.GetShipmentStatuses([item]);\r\n      this.setState({\r\n        isDetails: true,\r\n        isShowPanle: true,\r\n        selectedRow: item,\r\n        viewTab: 2,\r\n        // selectItems: [item],\r\n        operationsVisibilty,\r\n      });\r\n      this.setState({ isOperation: true });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchComposite:Error occured on handleRowClick\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleSelection = (items) => {\r\n    try {\r\n      var { operationsVisibilty, drawerStatus, activityInfo } = { ...this.state };\r\n      let dispatchDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ShipmentActivityInfo.MARINE_SHIPMENT_ENABLE_DELETE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n      var dispatchDeleteStates = [];\r\n      if (dispatchDeleteInfo !== undefined && dispatchDeleteInfo.length > 0)\r\n        dispatchDeleteStates = dispatchDeleteInfo[0].ShipmentStates;\r\n\r\n      let isReady =\r\n        items.findIndex(\r\n          (x) =>\r\n            dispatchDeleteStates.indexOf(\r\n              x.MarineShipmentByCompartmentList_ShipmentStatus.toUpperCase()\r\n            ) < 0\r\n        ) >= 0\r\n          ? false\r\n          : true;\r\n\r\n      operationsVisibilty.delete = this.props.userDetails.EntityResult\r\n        .IsWebPortalUser\r\n        ? false\r\n        : isReady &&\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnMarineShipmentByCompartment\r\n        );\r\n\r\n      drawerStatus = false;\r\n      this.setState({\r\n        selectedItems: items,\r\n        operationsVisibilty,\r\n        isOperation: false,\r\n        deleteEnableForConfigure: [],\r\n        drawerStatus,\r\n      });\r\n      // for (let i = 0; i < items.length; i++) {\r\n      //   this.GetViewAllMarineDispatchCustomData(items[i], false);\r\n      // }\r\n      if (items.length === 1) {\r\n        this.GetShipmentStatusOperations(items);\r\n        this.GetShipmentStatuses(items);\r\n        this.setState({ isOperation: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchComposite:Error occured on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  GetShipmentStatusOperations(items) {\r\n    try {\r\n      axios(\r\n        RestApis.GetMarineDispatchOperations +\r\n        \"?DispatchStatus=\" +\r\n        items[0].MarineShipmentByCompartmentList_ShipmentStatus,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          let nextOperations = [];\r\n          Object.keys(result.EntityResult).forEach((operation) => {\r\n            if (result.EntityResult[operation]) {\r\n              nextOperations.push(operation);\r\n            }\r\n          });\r\n          if (this.props.userDetails.EntityResult.IsWebPortalUser) {\r\n            let filteredOptions = nextOperations.filter(function (item) {\r\n              return (\r\n                item !==\r\n                Constants.ViewAllMarineShipmentOperations\r\n                  .ViewMarineShipmentList_PrintFAN &&\r\n                item !==\r\n                Constants.ViewAllMarineShipmentOperations\r\n                  .ViewMarineShipmentList_PrintBOL\r\n              );\r\n            });\r\n            nextOperations = filteredOptions;\r\n          }\r\n          if (\r\n            this.props.userDetails.EntityResult.IsArchived ||\r\n            this.props.userDetails.EntityResult.IsWebPortalUser\r\n          ) {\r\n            let filteredOptions = nextOperations.filter(function (item) {\r\n              return (\r\n                item ===\r\n                Constants.ViewAllMarineShipmentOperations\r\n                  .ViewMarineShipmentList_ViewAuditTrail ||\r\n                item ===\r\n                Constants.ViewAllMarineShipmentOperations\r\n                  .ViewMarineShipmentList_ViewBOL ||\r\n                item ===\r\n                Constants.ViewAllMarineShipmentOperations\r\n                  .ViewMarineShipmentList_ViewTransactions\r\n              );\r\n            });\r\n            nextOperations = filteredOptions;\r\n          }\r\n          let results = nextOperations.filter((item) => {\r\n            if (\r\n              item ===\r\n              Constants.ViewAllMarineShipmentOperations\r\n                .ViewMarineShipmentList_ViewTransactions\r\n            ) {\r\n              if (\r\n                Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.view,\r\n                  fnViewMarineLoadingDetails\r\n                )\r\n              ) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n            if (\r\n              item ===\r\n              Constants.ViewAllMarineShipmentOperations\r\n                .ViewMarineShipmentList_ViewAuditTrail\r\n            ) {\r\n              if (\r\n                Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.view,\r\n                  fnViewMarineShipmentAuditTrail\r\n                )\r\n              ) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n            if (\r\n              item ===\r\n              Constants.ViewAllMarineShipmentOperations\r\n                .ViewMarineShipmentList_CloseMarineShipment\r\n            ) {\r\n              if (\r\n                Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnCloseMarineShipment\r\n                )\r\n              ) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n            if (\r\n              item ===\r\n              Constants.ViewAllMarineShipmentOperations\r\n                .ViewMarineShipmentList_PrintFAN\r\n            ) {\r\n              if (\r\n                Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.view,\r\n                  fnPrintMarineFAN\r\n                )\r\n              ) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n            if (\r\n              item ===\r\n              Constants.ViewAllMarineShipmentOperations\r\n                .ViewMarineShipmentList_ViewBOL\r\n            ) {\r\n              if (\r\n                Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.view,\r\n                  fnPrintMarineBOL\r\n                )\r\n              ) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n            if (\r\n              item ===\r\n              Constants.ViewAllMarineShipmentOperations\r\n                .ViewMarineShipmentList_PrintBOL\r\n            ) {\r\n              if (\r\n                Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.view,\r\n                  fnPrintMarineBOL\r\n                )\r\n              ) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n            return true;\r\n          });\r\n          if (\r\n            !this.props.userDetails.EntityResult.IsEnterpriseNode &&\r\n            items.MarineReceiptByCompartmentList_ReceiptStatus !== \"READY\" &&\r\n            items.localTerminalCode === null\r\n          ) {\r\n            results = [];\r\n          }\r\n          this.setState({ shipmentNextOperations: results });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Error while getting GetShipmentStatusOperations:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  GetShipmentStatuses(items) {\r\n    try {\r\n      axios(\r\n        RestApis.GetMarineDispatchAllStatuses +\r\n        \"?MarineDispatchCode=\" +\r\n        items[0].Common_Code +\r\n        \"&ShipmentType=COMPARTMENT\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          this.setState({\r\n            currentShipmentStatuses: result.EntityResult,\r\n          });\r\n          if (result.IsSuccess === true) {\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting GetShipmentStatuses:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  getTerminalsList(shareholder) {\r\n    try {\r\n      if (shareholder !== null && shareholder !== \"\") {\r\n        axios(\r\n          RestApis.GetTerminals,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            [shareholder],\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ terminalCodes: response.data.EntityResult });\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ terminalCodes: [] });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchComposite:Error occured on getTerminalsList\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      var { operationsVisibilty, activityInfo } = { ...this.state };\r\n\r\n      let dispatchDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ShipmentActivityInfo.MARINE_SHIPMENT_ENABLE_DELETE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      var dispatchDeleteStates = [];\r\n      if (dispatchDeleteInfo !== undefined && dispatchDeleteInfo.length > 0)\r\n        dispatchDeleteStates = dispatchDeleteInfo[0].ShipmentStates;\r\n\r\n        let dispatchStatus= (data.MarineShipmentByCompartmentList_ShipmentStatus===undefined || data.MarineShipmentByCompartmentList_ShipmentStatus===null ) ? data.DispatchStatus: data.MarineShipmentByCompartmentList_ShipmentStatus;\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnMarineShipmentByCompartment\r\n        );\r\n        operationsVisibilty.delete = this.props.userDetails.EntityResult.IsWebPortalUser?false:dispatchDeleteStates.indexOf(dispatchStatus.toUpperCase()) > -1 &&\r\n          Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.remove,\r\n            fnMarineShipmentByCompartment\r\n          );\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      \r\n    \r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            MarineDispatchCode: data.DispatchCode,\r\n            Common_Shareholder: data.ShareholderCode,\r\n            Common_Code: data.DispatchCode,\r\n            MarineShipmentByCompartmentList_ShipmentStatus: dispatchStatus,\r\n          },\r\n        ];\r\n        this.setState({\r\n          selectedItems,\r\n        });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"MarineDispatchComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  handleClickRefresh(item) {\r\n    var transportationType = this.getTransportationType();\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineDispatchCode,\r\n        value: item.DispatchCode,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: transportationType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineDispatchCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetMarineDispatch,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let dataItem = {\r\n            Common_Code: result.EntityResult.DispatchCode,\r\n            MarineShipmentByCompartmentList_ShipmentStatus:\r\n              result.EntityResult.DispatchStatus,\r\n          };\r\n          this.setState(\r\n            {\r\n              isDetails: false,\r\n              isShowPanle: false,\r\n            },\r\n            () => {\r\n              this.setState({\r\n                selectedItems: [dataItem],\r\n              });\r\n              this.handleRowClick(dataItem);\r\n              this.GetShipmentStatusOperations([dataItem]);\r\n              // this.GetViewAllMarineDispatchCustomData(dataItem, true);\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting marineDispatch:\", error);\r\n      });\r\n  }\r\n\r\n  handlePageAdd = (item) => {\r\n    var transportationType = this.getTransportationType();\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineDispatchCode,\r\n        value: item.DispatchCode,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: transportationType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineDispatchCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetMarineDispatch,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let dataItem = {\r\n            Common_Code: result.EntityResult.DispatchCode,\r\n            MarineShipmentByCompartmentList_ShipmentStatus:\r\n              result.EntityResult.DispatchStatus,\r\n          };\r\n          this.setState(\r\n            {\r\n              isDetails: false,\r\n              isShowPanle: false,\r\n            },\r\n            () => {\r\n              this.setState({\r\n                isDetails: true,\r\n                isShowPanle: true,\r\n                selectedItems: [dataItem],\r\n              });\r\n              this.handleRowClick(dataItem);\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting marineDispatch:\", error);\r\n      });\r\n  };\r\n\r\n  getMarineDispatchList() {\r\n    this.setState({ isReadyToRender: false });\r\n    let fromDate = new Date(this.state.fromDate);\r\n    let toDate = new Date(this.state.toDate);\r\n    fromDate.setHours(0, 0, 0);\r\n    toDate.setHours(23, 59, 59);\r\n\r\n    let obj = {\r\n      startRange: fromDate,\r\n      endRange: toDate,\r\n      TransportationType: \"MARINE\",\r\n    };\r\n\r\n    axios(\r\n      RestApis.GetMarineDispatchListForRole,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              data: result.EntityResult,\r\n              isReadyToRender: true,\r\n            },\r\n            () => {\r\n              if (\r\n                this.state.isOperation === true &&\r\n                this.state.selectedItems.length === 1\r\n              ) {\r\n                let selectedItem = this.state.selectedItems[0];\r\n                var updatedselectedItem = result.EntityResult.Table.filter(\r\n                  function (item) {\r\n                    return item.Common_Code === selectedItem.Common_Code;\r\n                  }\r\n                );\r\n\r\n                let { operationsVisibilty, activityInfo } = { ...this.state };\r\n                let dispatchDeleteInfo = activityInfo.filter((item) => {\r\n                  return (\r\n                    item.ActivityCode ===\r\n                    Constants.ShipmentActivityInfo.MARINE_SHIPMENT_ENABLE_DELETE &&\r\n                    item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n                  );\r\n                });\r\n\r\n                var dispatchDeleteStates = [];\r\n\r\n                if (\r\n                  dispatchDeleteInfo !== undefined &&\r\n                  dispatchDeleteInfo.length > 0\r\n                )\r\n                  dispatchDeleteStates =\r\n                    dispatchDeleteInfo[0].ShipmentStates;\r\n\r\n                operationsVisibilty.delete = this.props.userDetails\r\n                  .EntityResult.IsWebPortalUser\r\n                  ? false\r\n                  : dispatchDeleteStates.indexOf(\r\n                    updatedselectedItem[0].MarineShipmentByCompartmentList_ShipmentStatus.toUpperCase()\r\n                  ) > -1 &&\r\n                  Utilities.isInFunction(\r\n                    this.props.userDetails.EntityResult.FunctionsList,\r\n                    functionGroups.remove,\r\n                    fnMarineShipmentByCompartment\r\n                  );\r\n\r\n\r\n                this.setState({ selectedItems: updatedselectedItem, operationsVisibilty });\r\n                this.GetShipmentStatusOperations(updatedselectedItem);\r\n                this.GetShipmentStatuses(updatedselectedItem);\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\r\n            \"Error in GetMarineDispatchListForRole:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: [], isReadyToRender: true });\r\n        console.log(\"Error while geting MarineDispatch List:\", error);\r\n      });\r\n  }\r\n\r\n  authorizeToLoadOnClick= () => {\r\n    let showAuthorizeToLoadAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n  \r\n    this.setState({ showAuthorizeToLoadAuthenticationLayout, }, () => {\r\n      if (showAuthorizeToLoadAuthenticationLayout === false) {\r\n        this.authorizeToLoad();\r\n      }})\r\n    }\r\n\r\n    authorizeToLoad= () => {\r\n    this.handleAuthenticationClose();\r\n    var item = lodash.cloneDeep(this.state.selectedItems[0]);\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineDispatchCode,\r\n        value: item.Common_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.dispatchStatus,\r\n        value: item.MarineShipmentByCompartmentList_ShipmentStatus,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineDispatchCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewMarineDispatch_AuthorizeLoad_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [item.Common_Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestApis.MarineDispatchAuthorizeToLoad,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          var selectRow = { Common_Code: item.Common_Code };\r\n          this.setState(\r\n            {\r\n              selectedRow: selectRow,\r\n              isOperation: true,\r\n            },\r\n            () => {\r\n              if (this.state.isDetails === true) {\r\n                var selectItem = {\r\n                  DispatchCode: this.state.selectedItems[0].Common_Code,\r\n                };\r\n                this.handleClickRefresh(selectItem);\r\n              } else {\r\n                this.componentDidMount();\r\n              }\r\n            }\r\n          );\r\n          if (this.state.isDetails === true) {\r\n            this.setState(\r\n              {\r\n                isDetails: false,\r\n                isShowPanle: false,\r\n              },\r\n              () => {\r\n                this.setState({\r\n                  isDetails: true,\r\n                  isShowPanle: true,\r\n                });\r\n              }\r\n            );\r\n          }\r\n        } else {\r\n          console.log(\"Error in AuthorizeToLoad:\", result.ErrorList);\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0] + Constants.delimiter + \"\";\r\n        }\r\n        this.savedEvent(item, \"AuthorizeToLoad\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.savedEvent(item, \"AuthorizeToLoad\", notification);\r\n        console.log(\"Error while AuthorizeToLoad:\", error);\r\n      });\r\n  }\r\n\r\n  printFANClick= () => {\r\n    let showFANAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n  \r\n    this.setState({ showFANAuthenticationLayout, }, () => {\r\n      if (showFANAuthenticationLayout === false) {\r\n        this.printFAN();\r\n      }})\r\n     \r\n    }\r\n    \r\n  printFAN= () =>  {\r\n    this.handleAuthenticationClose();\r\n    var item = lodash.cloneDeep(this.state.selectedItems[0]);\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineDispatchCode,\r\n        value: item.Common_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineDispatchCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"MarineDispatchDetail_PrintStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [item.Common_Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestApis.MarineDispatchPrintFAN,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0] + Constants.delimiter + \"\";\r\n          console.log(\"Error in printFAN:\", result.ErrorList);\r\n        }\r\n        this.savedEvent(item, \"printFAN\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.savedEvent(item, \"printFAN\", notification);\r\n        console.log(\"Error while printFAN:\", error);\r\n      });\r\n  }\r\n\r\n  printBOLClick= () => {\r\n    let showPrintBOLAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n  \r\n    this.setState({ showPrintBOLAuthenticationLayout, }, () => {\r\n      if (showPrintBOLAuthenticationLayout === false) {\r\n        this.printBOL();\r\n      }})\r\n     \r\n    }\r\n\r\n  printBOL= () => {\r\n    this.handleAuthenticationClose();\r\n    var item = lodash.cloneDeep(this.state.selectedItems[0]);\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineDispatchCode,\r\n        value: item.Common_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineDispatchCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"MarineDispatchDetail_PrintStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [item.Common_Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestApis.MarineDispatchPrintBOL,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0] + Constants.delimiter + \"\";\r\n          console.log(\"Error in printBOL:\", result.ErrorList);\r\n        }\r\n        this.savedEvent(item, \"printBOL\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.savedEvent(item, \"printBOL\", notification);\r\n        console.log(\"Error while printBOL:\", error);\r\n      });\r\n  }\r\n\r\n  BSIOutbound() {\r\n    var item = lodash.cloneDeep(this.state.selectedItems[0]);\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineDispatchCode,\r\n        value: item.Common_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineDispatchCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewMarineDispatch_BSIOutbound_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [item.Common_Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestApis.MarineDispatchBSIOutbound,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in BSIOutbound:\", result.ErrorList);\r\n        }\r\n        this.savedEvent(item, \"BSIOutbound\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.savedEvent(item, \"BSIOutbound\", notification);\r\n        console.log(\"Error while BSIOutbound:\", error);\r\n      });\r\n  }\r\n\r\n  getMarineDispatch(selectedRow) {\r\n    emptyMarineDispatch.QuantityUOM =\r\n      this.props.userDetails.EntityResult.PageAttibutes.DefaultUOMS.QuantityUOM;\r\n    emptyMarineDispatch.TerminalCodes =\r\n      this.state.terminalCodes.length === 1\r\n        ? [...this.state.terminalCodes]\r\n        : [];\r\n\r\n    var transportationType = this.getTransportationType();\r\n    emptyMarineDispatch.TransportationType = transportationType;\r\n\r\n    if (selectedRow.Common_Code === undefined) {\r\n      this.setState({\r\n        modMarineDispatch: lodash.cloneDeep(emptyMarineDispatch),\r\n        isManualEntry: true,\r\n      });\r\n      return;\r\n    }\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineDispatchCode,\r\n        value: selectedRow.Common_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: transportationType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineDispatchCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewMarineDispatchManualEntry_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [selectedRow.Common_Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestApis.GetMarineDispatch,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        let { operationsVisibilty } = this.state;\r\n        if (result.IsSuccess === true) {\r\n          operationsVisibilty.delete = false;\r\n          operationsVisibilty.add = false;\r\n          this.setState({\r\n            modMarineDispatch: lodash.cloneDeep(result.EntityResult),\r\n            isManualEntry: true,\r\n            operationsVisibilty,\r\n            deleteEnableForConfigure: [],\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.savedEvent(selectedRow, \"CloseShipment\", notification);\r\n          console.log(\"Error in GetMarineDispatch:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.savedEvent(selectedRow, \"CloseShipment\", notification);\r\n        console.log(\"Error while getting marineDispatch:\", error);\r\n        //throw error;\r\n      });\r\n  }\r\n\r\n  \r\n\r\n  onFieldChange(propertyName, data) {\r\n    try {\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      this.setState({ reason: data });\r\n      if (marineDispatchValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          marineDispatchValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n        if (\r\n          validationErrors.Reason === \"\" ||\r\n          validationErrors.Reason === undefined\r\n        ) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getMarineDispatchLoadingDetail() {\r\n    var item = lodash.cloneDeep(this.state.selectedItems[0]);\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ShipmentCompDetail_ShipmentNumber\"],\r\n          keyValues: [item.Common_Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestApis.GetMarineLoadingDetails +\r\n      \"?MarineDispatchCode=\" +\r\n      item.Common_Code,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ loadingDetails: result.EntityResult });\r\n        } else {\r\n          this.setState({ loadingDetails: [] });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          this.savedEvent(item, \"MarineDispatchLoadingDetail\", notification);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ loadingDetails: [] });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.savedEvent(item, \"MarineDispatchLoadingDetail\", notification);\r\n        this.setState({ data: [], isReadyToRender: true });\r\n        console.log(\"Error while getting MarineDispatchLoadingDetail:\", error);\r\n      });\r\n\r\n    axios(\r\n      RestApis.GetMarineLoadingDetailConfigFields +\r\n      \"?MarineDispatchCode=\" +\r\n      item.Common_Code,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        var { operationsVisibilty } = { ...this.state };\r\n        operationsVisibilty.delete = false;\r\n        operationsVisibilty.add = false;\r\n        operationsVisibilty.shareholder = false;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            loadingDetailsHideFields: result.EntityResult,\r\n            isReadyToRender: true,\r\n            isViewLoadingDetails: true,\r\n            operationsVisibilty,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            loadingDetailsHideFields: [],\r\n            isReadyToRender: true,\r\n            isViewLoadingDetails: true,\r\n            operationsVisibilty,\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.savedEvent(item, \"MarineDispatchLoadingDetail\", notification);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          loadingDetailsHideFields: [],\r\n          isReadyToRender: true,\r\n          isViewLoadingDetails: true,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.savedEvent(item, \"MarineDispatchLoadingDetail\", notification);\r\n        console.log(\"Error while getting MarineDispatchLoadingDetail:\", error);\r\n      });\r\n  }\r\n\r\n  setValid = (fptransactionid, ProductCategoryType) => {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineDispatchCode,\r\n        value: this.state.selectedItems[0].Common_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.FPTransactionID,\r\n        value: fptransactionid,\r\n      },\r\n      {\r\n        key: KeyCodes.ProductCategoryType,\r\n        value: ProductCategoryType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineDispatchCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.MarineDispatchSetValid,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess) {\r\n          this.getMarineDispatchLoadingDetail();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"MarineDisatchComposite:Error occured on setValid\", error);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnMarineShipmentByCompartment\r\n      );\r\n      this.getAttributes();\r\n      this.setState({\r\n        operationsVisibilty,\r\n        selectedShareholder:\r\n          this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      });\r\n      this.getTerminalsList(\r\n        this.props.userDetails.EntityResult.PrimaryShareholder\r\n      );\r\n      this.getMarineDispatchList(\r\n        this.props.userDetails.EntityResult.PrimaryShareholder\r\n      );\r\n      this.getKPIList();\r\n      this.GetShipmentActivityInfo();\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n    // clear session storage on window refresh event\r\n    window.addEventListener(\"beforeunload\", this.clearStorage)\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    // clear session storage\r\n    this.clearStorage();\r\n\r\n    // remove event listener\r\n    window.removeEventListener(\"beforeunload\", this.clearStorage)\r\n  }\r\n\r\n  clearStorage = () => {\r\n    sessionStorage.removeItem(this.componentName + \"GridState\");\r\n  }\r\n\r\n  GetShipmentActivityInfo() {\r\n    try {\r\n      axios(\r\n        RestApis.GetShipmentActivityInfo,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ activityInfo: response.data.EntityResult });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting shipment activityInfo:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in GetShipmentActivityInfo:\", error);\r\n    }\r\n  }\r\n\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      this.setState({ selectedShareholder: shareholder });\r\n      this.getMarineDispatchList();\r\n      this.getTerminalsList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getTransportationType() {\r\n    var transportationType = Constants.TransportationType.MARINE;\r\n    const { itemProps } = this.props.activeItem;\r\n    if (itemProps !== undefined && itemProps.transportationType !== undefined) {\r\n      transportationType = itemProps.transportationType;\r\n    }\r\n    return transportationType;\r\n  }\r\n\r\n  getAuditTrailList(selectItem) {\r\n    var { operationsVisibilty } = { ...this.state };\r\n    operationsVisibilty.add = false;\r\n    operationsVisibilty.delete = false;\r\n\r\n    axios(\r\n      RestApis.GetMarineDispatchAuditTrailList +\r\n      \"?MarineDispatchCode=\" +\r\n      selectItem.Common_Code,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var modAuditTrailList = lodash.cloneDeep(result.EntityResult);\r\n          var auditTrailList = lodash.cloneDeep(result.EntityResult);\r\n          for (let i = 0; i < modAuditTrailList.length; i++) {\r\n            let dispatchStatus = modAuditTrailList[i].DispatchStatus;\r\n            if (dispatchStatus === Constants.ViewDispatch_Status.AUTO_LOADED) {\r\n              dispatchStatus = Constants.ViewDispatchStatus.AUTO_LOADED;\r\n            } else if (\r\n              dispatchStatus === Constants.ViewDispatch_Status.CLOSED\r\n            ) {\r\n              dispatchStatus = Constants.ViewDispatchStatus.CLOSED;\r\n            } else if (\r\n              dispatchStatus === Constants.ViewDispatch_Status.INTERRUPTED\r\n            ) {\r\n              dispatchStatus = Constants.ViewDispatchStatus.INTERRUPTED;\r\n            } else if (\r\n              dispatchStatus === Constants.ViewDispatch_Status.LOADING\r\n            ) {\r\n              dispatchStatus = Constants.ViewDispatchStatus.LOADING;\r\n            } else if (\r\n              dispatchStatus === Constants.ViewDispatch_Status.MANUALLY_LOADED\r\n            ) {\r\n              dispatchStatus = Constants.ViewDispatchStatus.MANUALLY_LOADED;\r\n            } else if (\r\n              dispatchStatus === Constants.ViewDispatch_Status.PARTIALLY_LOADED\r\n            ) {\r\n              dispatchStatus = Constants.ViewDispatchStatus.PARTIALLY_LOADED;\r\n            } else if (\r\n              dispatchStatus === Constants.ViewDispatch_Status.QUEUED\r\n            ) {\r\n              dispatchStatus = Constants.ViewDispatchStatus.QUEUED;\r\n            } else if (dispatchStatus === Constants.ViewDispatch_Status.READY) {\r\n              dispatchStatus = Constants.ViewDispatchStatus.READY;\r\n            }\r\n            modAuditTrailList[i].DispatchStatus = dispatchStatus;\r\n            modAuditTrailList[i].UpdatedTime =\r\n              new Date(modAuditTrailList[i].UpdatedTime).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(modAuditTrailList[i].UpdatedTime).toLocaleTimeString();\r\n            auditTrailList[i].index = i;\r\n          }\r\n          this.setState(\r\n            {\r\n              operationsVisibilty,\r\n              auditTrailList,\r\n              modAuditTrailList,\r\n              isViewAuditTrail: true,\r\n              deleteEnableForConfigure: [],\r\n            },\r\n            () => {\r\n              let auditAttributeMetaDataList = lodash.cloneDeep(\r\n                this.state.auditAttributeMetaDataList\r\n              );\r\n              for (let i = 0; i < auditTrailList.length; i++) {\r\n                auditTrailList[i].AttributesforUI =\r\n                  this.formReadonlyCompAttributes(\r\n                    auditTrailList[i].Attributes,\r\n                    auditAttributeMetaDataList\r\n                  );\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAuditTrailList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getAuditTrailList:\", error);\r\n      });\r\n  }\r\n\r\n  formAuditAttributes = (selectedTerminal) => {\r\n    try {\r\n      let attributes = lodash.cloneDeep(this.state.auditAttributeMetaDataList);\r\n      attributes = attributes.filter(function (attTerminal) {\r\n        return attTerminal.TerminalCode === selectedTerminal;\r\n      });\r\n      let auditTrailList = lodash.cloneDeep(this.state.auditTrailList);\r\n      let auditAttributes = [];\r\n      attributes.forEach((att) => {\r\n        att.attributeMetaDataList.forEach((attribute) => {\r\n          auditAttributes.push({\r\n            AttributeCode: attribute.Code,\r\n            AttributeName: attribute.DisplayName,\r\n            AttributeValue: attribute.DefaultValue,\r\n            TerminalCode: attribute.TerminalCode,\r\n            IsMandatory: attribute.IsMandatory,\r\n            DataType: attribute.DataType,\r\n            IsReadonly: attribute.IsReadonly,\r\n            auditSequenceNo: \"\",\r\n          });\r\n        });\r\n      });\r\n\r\n      let attributesforNewAudit = lodash.cloneDeep(auditAttributes);\r\n      auditTrailList.forEach((audit) => {\r\n        if (\r\n          audit.index === null &&\r\n          (audit.AttributesforUI === null ||\r\n            audit.AttributesforUI === undefined)\r\n        ) {\r\n          audit.AttributesforUI = [];\r\n          attributesforNewAudit.forEach((assignedAttributes) => {\r\n            assignedAttributes.auditSequenceNo = audit.index;\r\n            audit.AttributesforUI.push(assignedAttributes);\r\n          });\r\n        } else {\r\n          if (\r\n            audit.AttributesforUI !== null &&\r\n            audit.AttributesforUI !== undefined\r\n          ) {\r\n            audit.AttributesforUI = audit.AttributesforUI.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return attTerminal.TerminalCode === selectedTerminal;\r\n            });\r\n            auditAttributes = auditAttributes.filter(function (attTerminal) {\r\n              return !audit.AttributesforUI.some(function (selTerminal) {\r\n                return attTerminal.TerminalCode === selTerminal.TerminalCode;\r\n              });\r\n            });\r\n          } else {\r\n            audit.AttributesforUI = [];\r\n          }\r\n          let tempAuditAttributes = lodash.cloneDeep(auditAttributes);\r\n          if (\r\n            Array.isArray(audit.Attributes) &&\r\n            audit.Attributes !== null &&\r\n            audit.Attributes !== undefined &&\r\n            audit.Attributes.length > 0\r\n          ) {\r\n            let selectedTerminalAttributes = audit.Attributes.filter(function (\r\n              attTerminal\r\n            ) {\r\n              return attTerminal.TerminalCode === selectedTerminal;\r\n            });\r\n            selectedTerminalAttributes.forEach((att) => {\r\n              att.ListOfAttributeData.forEach((attData) => {\r\n                let tempAttIndex = tempAuditAttributes.findIndex(\r\n                  (item) =>\r\n                    item.TerminalCode === att.TerminalCode &&\r\n                    item.AttributeCode === attData.AttributeCode\r\n                );\r\n                if (tempAttIndex >= 0)\r\n                  tempAuditAttributes[tempAttIndex].AttributeValue =\r\n                    attData.AttributeValue;\r\n              });\r\n            });\r\n            tempAuditAttributes.forEach((assignedAttributes) => {\r\n              assignedAttributes.auditSequenceNo = audit.index;\r\n              audit.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          } else {\r\n            let temp = lodash.cloneDeep(auditAttributes);\r\n            temp.forEach((assignedAttributes) => {\r\n              assignedAttributes.auditSequenceNo = audit.index;\r\n              audit.AttributesforUI.push(assignedAttributes);\r\n            });\r\n          }\r\n        }\r\n      });\r\n      this.setState({ auditTrailList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error in forming Compartment Attributes\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  formReadonlyCompAttributes(attributes, auditAttributeMetaDataList) {\r\n    let compAttributes = [];\r\n    if (\r\n      auditAttributeMetaDataList !== null &&\r\n      auditAttributeMetaDataList !== undefined &&\r\n      auditAttributeMetaDataList.length > 0\r\n    ) {\r\n      auditAttributeMetaDataList.forEach((att) => {\r\n        att.attributeMetaDataList.forEach((attribute) => {\r\n          //if (attribute.TerminalCode)\r\n          compAttributes.push({\r\n            AttributeCode: attribute.Code,\r\n            AttributeName: attribute.DisplayName\r\n              ? attribute.DisplayName\r\n              : attribute.Code,\r\n            AttributeValue: attribute.DefaultValue,\r\n            TerminalCode: attribute.TerminalCode,\r\n            IsMandatory: attribute.IsMandatory,\r\n            DataType: attribute.DataType,\r\n            IsReadonly: attribute.IsReadonly,\r\n            MinValue: attribute.MinValue,\r\n            MaxValue: attribute.MaxValue,\r\n            ValidationFormat: attribute.ValidationFormat,\r\n            compSequenceNo: \"\",\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    if (\r\n      attributes !== null &&\r\n      attributes !== undefined &&\r\n      attributes.length > 0\r\n    ) {\r\n      attributes.forEach((att) => {\r\n        compAttributes.forEach((compAtt) => {\r\n          if (compAtt.TerminalCode === att.TerminalCode) {\r\n            att.ListOfAttributeData.forEach((selAtt) => {\r\n              if (compAtt.AttributeCode === selAtt.AttributeCode)\r\n                compAtt.AttributeValue = selAtt.AttributeValue;\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n    return compAttributes;\r\n  }\r\n\r\n  onTabChange = (activeIndex) => {\r\n    this.setState({\r\n      viewTab: activeIndex,\r\n    });\r\n  };\r\n\r\n  handleDrawer = () => {\r\n    var drawerStatus = lodash.cloneDeep(this.state.drawerStatus);\r\n    this.setState({\r\n      drawerStatus: !drawerStatus,\r\n    });\r\n  };\r\n\r\n  //Get KPI for Marine Shipment\r\n  getKPIList() {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      var notification = {\r\n        message: \"\",\r\n        messageType: \"critical\",\r\n        messageResultDetails: [],\r\n      };\r\n      let objKPIRequestData = {\r\n        PageName: kpiMarineShipmentList,\r\n        InputParameters: [],\r\n      };\r\n\r\n      axios(\r\n        RestApis.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              marineShipmentKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ marineShipmentKPIList: [] });\r\n            console.log(\"Error in Marine Shipment KPIList:\", result.ErrorList);\r\n            notification.messageResultDetails.push({\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: result.ErrorList[0],\r\n            });\r\n          }\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Marine Shipment KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n  // GetViewAllMarineDispatchCustomData(item, GoDetails) {\r\n  //   let keyCode = [\r\n  //     {\r\n  //       key: KeyCodes.dispatchStatus,\r\n  //       value: item.MarineShipmentByCompartmentList_ShipmentStatus,\r\n  //     },\r\n  //   ];\r\n  //   let obj = {\r\n  //     KeyCodes: keyCode,\r\n  //   };\r\n  //   axios(\r\n  //     RestApis.GetViewAllMarineDispatchCustomData,\r\n  //     Utilities.getAuthenticationObjectforPost(\r\n  //       obj,\r\n  //       this.props.tokenDetails.tokenInfo\r\n  //     )\r\n  //   )\r\n  //     .then((response) => {\r\n  //       const result = response.data;\r\n  //       let { deleteEnableForConfigure, operationsVisibilty } = this.state;\r\n  //       if (result.IsSuccess) {\r\n  //         if (result.EntityResult.MarineShipmentUpdateAllow === \"TRUE\") {\r\n  //           this.setState({\r\n  //             updateEnableForConfigure: true,\r\n  //           });\r\n  //         } else {\r\n  //           this.setState({\r\n  //             updateEnableForConfigure: false,\r\n  //           });\r\n  //         }\r\n  //         if (result.EntityResult.MarineShipmentDeleteAllow === \"TRUE\") {\r\n  //           deleteEnableForConfigure.push(true);\r\n  //         } else {\r\n  //           deleteEnableForConfigure.push(false);\r\n  //         }\r\n  //         operationsVisibilty.add = Utilities.isInFunction(\r\n  //           this.props.userDetails.EntityResult.FunctionsList,\r\n  //           functionGroups.add,\r\n  //           fnMarineShipmentByCompartment\r\n  //         );\r\n  //         if (GoDetails) {\r\n  //           operationsVisibilty.delete =\r\n  //             deleteEnableForConfigure[deleteEnableForConfigure.length - 1] &&\r\n  //             Utilities.isInFunction(\r\n  //               this.props.userDetails.EntityResult.FunctionsList,\r\n  //               functionGroups.remove,\r\n  //               fnMarineShipmentByCompartment\r\n  //             );\r\n  //         } else {\r\n  //           let isAllDeleteEnable = deleteEnableForConfigure.every(\r\n  //             (deleteEnable) => deleteEnable === true\r\n  //           );\r\n  //           operationsVisibilty.delete =\r\n  //             isAllDeleteEnable &&\r\n  //             Utilities.isInFunction(\r\n  //               this.props.userDetails.EntityResult.FunctionsList,\r\n  //               functionGroups.remove,\r\n  //               fnMarineShipmentByCompartment\r\n  //             );\r\n  //         }\r\n  //         this.setState({ deleteEnableForConfigure, operationsVisibilty });\r\n  //       } else {\r\n  //         console.log(\"error in GetViewAllMarineDispatchCustomData\");\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(\"error in GetViewAllMarineDispatchCustomData\", error);\r\n  //     });\r\n  // }\r\n\r\n\r\n  \r\n  authenticateDelete = () => {\r\n    try {\r\n      let showDeleteAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showDeleteAuthenticationLayout });\r\n      if (showDeleteAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Marine Shipment Composite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n \r\n\r\n  handleAuthenticationClose = () => {\r\n    \r\n    this.setState({\r\n      showDeleteAuthenticationLayout: false,\r\n      showAuthorizeToLoadAuthenticationLayout: false,\r\n      showCloseShipmentAuthenticationLayout: false,\r\n      showViewBOLAuthenticationLayout: false,\r\n      showPrintBOLAuthenticationLayout:false,\r\n      showFANAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  \r\n  getFunctionGroupName() {\r\n    if(this.state.showDeleteAuthenticationLayout )\r\n      return fnMarineShipmentByCompartment\r\n    else if(this.state.showCloseShipmentAuthenticationLayout)\r\n      return fnCloseMarineShipment\r\n    else if(this.state.showAuthorizeToLoadAuthenticationLayout)\r\n      return fnMarineDispatch\r\n    else if(this.state.showViewBOLAuthenticationLayout || this.state.showPrintBOLAuthenticationLayout)\r\n      return fnPrintMarineBOL\r\n      else if(this.state.showFANAuthenticationLayout)\r\n      return fnPrintMarineFAN\r\n   };\r\n\r\n   getDeleteorEditMode() {\r\n    if(this.state.showDeleteAuthenticationLayout)\r\n      return functionGroups.remove;\r\n    else  \r\n      return functionGroups.modify;\r\n   };\r\n\r\n   handleOperation()  {\r\n  \r\n    if(this.state.showDeleteAuthenticationLayout)\r\n      return this.handleDelete\r\n    else if(this.state.showAuthorizeToLoadAuthenticationLayout)\r\n      return this.authorizeToLoad\r\n    else if(this.state.showCloseShipmentAuthenticationLayout)\r\n      return this.handleShipmentClose\r\n    else if(this.state.showFANAuthenticationLayout)\r\n      return this.printFAN\r\n    else if(this.state.showViewBOLAuthenticationLayout)\r\n      return this.handleViewBOL;\r\n      else if(this.state.showPrintBOLAuthenticationLayout)\r\n      return this.printBOL;\r\n };\r\n\r\n  render() {\r\n    let shipmentSelected = this.state.selectedItems.length === 1;\r\n    let fillPage = true;\r\n    if (\r\n      this.props.shipmentSource !== undefined &&\r\n      this.props.shipmentSource !== \"\" &&\r\n      this.props.shipmentSource !== null\r\n    ) {\r\n      fillPage = false;\r\n    }\r\n    let updateEnableForConfigure = true;\r\n\r\n    if (shipmentSelected && this.state.selectedRow.Common_Code !== undefined) {\r\n      let dispatchUpdateInfo = this.state.activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ShipmentActivityInfo.MARINE_SHIPMENT_ENABLE_UPDATE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      let dispatchUpdateStates = []\r\n\r\n      if (dispatchUpdateInfo !== undefined &&\r\n        dispatchUpdateInfo.length > 0)\r\n        dispatchUpdateStates = dispatchUpdateInfo[0].ShipmentStates;\r\n\r\n      updateEnableForConfigure = dispatchUpdateStates.indexOf(\r\n        this.state.selectedItems[0].MarineShipmentByCompartmentList_ShipmentStatus.toUpperCase()\r\n      ) > -1\r\n    }\r\n    return (\r\n      <div>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <Modal\r\n              className=\"popup-theme-wrap\"\r\n              closeIcon={true}\r\n              onClose={() =>\r\n                this.setState({ isCloseShipment: false, reason: \"\" })\r\n              }\r\n              open={this.state.isCloseShipment}\r\n              closeOnDimmerClick={false}\r\n              closeOnDocumentClick={false}\r\n              size=\"small\"\r\n            >\r\n              <Modal.Header>{t(\"ViewMarineShipment_CloseHeader\")}</Modal.Header>\r\n              <Modal.Content>\r\n                <Input\r\n                  fluid\r\n                  value={this.state.reason}\r\n                  indicator=\"required\"\r\n                  onChange={(data) => this.onFieldChange(\"Reason\", data)}\r\n                  label={t(\"ViewMarineShipmentList_Reason\")}\r\n                  error={t(this.state.validationErrors.Reason)}\r\n                />\r\n              </Modal.Content>\r\n              <Modal.Footer>\r\n                <Button\r\n                  type=\"secondary\"\r\n                  size=\"small\"\r\n                  content={t(\"ViewMarineShipmentList_Cancel\")}\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      isCloseShipment: false,\r\n                      reason: \"\",\r\n                      validationErrors: [],\r\n                    })\r\n                  }\r\n                />\r\n                <Button\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  disabled={this.state.isCloseShipmentBtn}\r\n                  content={t(\"ViewMarineShipmentList_Active\")}\r\n                  onClick={() => this.CloseShipment()}\r\n                />\r\n              </Modal.Footer>\r\n            </Modal>\r\n          )}\r\n        </TranslationConsumer>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            breadcrumbItem={this.props.activeItem}\r\n            shrVisible={false}\r\n            shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n            selectedShareholder={this.state.selectedShareholder}\r\n            onShareholderChange={this.handleShareholderSelectionChange}\r\n            onAdd={this.handleAdd}\r\n            onDelete={this.authenticateDelete}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isViewLoadingDetails ? (\r\n          <ErrorBoundary>\r\n            <MarineLoadingDetails\r\n              tableData={this.state.loadingDetails.Table}\r\n              loadingDetailsHideFields={this.state.loadingDetailsHideFields}\r\n              setValid={this.setValid}\r\n              handleBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n              userDetails={this.props.userDetails}\r\n              status={\r\n                this.state.selectedItems[0]\r\n                  .MarineShipmentByCompartmentList_ShipmentStatus\r\n              }\r\n              isWebPortalUser={\r\n                this.props.userDetails.EntityResult.IsWebPortalUser\r\n              }\r\n            ></MarineLoadingDetails>\r\n          </ErrorBoundary>\r\n        ) : this.state.isViewAuditTrail ? (\r\n          <ErrorBoundary>\r\n            <MarineShipmentViewAuditTrailDetails\r\n              DispatchCode={this.state.selectedItems[0].Common_Code}\r\n              auditTrailList={this.state.auditTrailList}\r\n              modAuditTrailList={this.state.modAuditTrailList}\r\n              handleBack={this.handleBack}\r\n              auditExpandedRows={this.state.auditExpandedRows}\r\n              auditToggleExpand={this.auditToggleExpand}\r\n              IsEnterpriseNode={this.props.IsEnterpriseNode}\r\n              isWebPortalUser={\r\n                this.props.userDetails.EntityResult.IsWebPortalUser\r\n              }\r\n              Attributes={\r\n                this.state.auditTrailList !== undefined &&\r\n                  this.state.auditTrailList.length > 0\r\n                  ? this.state.auditTrailList[0].AttributesforUI !== undefined\r\n                    ? this.state.auditTrailList[0].AttributesforUI\r\n                    : []\r\n                  : []\r\n              }\r\n            ></MarineShipmentViewAuditTrailDetails>\r\n          </ErrorBoundary>\r\n        ) : this.state.isManualEntry ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <MarineDispatchManualEntryDetailsComposite\r\n                dispatchCode={this.state.modMarineDispatch.DispatchCode}\r\n                handleBack={this.handleBack}\r\n                IsBonded={this.state.modMarineDispatch.IsBonded}\r\n                DispatchStatus={this.state.modMarineDispatch.DispatchStatus}\r\n                QuantityUOM={this.state.modMarineDispatch.QuantityUOM}\r\n                ActualTerminalCode={this.state.modMarineDispatch.ActualTerminalCode}\r\n              ></MarineDispatchManualEntryDetailsComposite>\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : this.state.isDetails === true ? (\r\n          <div>\r\n            <div\r\n              className={\r\n                this.state.isShowPanle\r\n                  ? !this.state.drawerStatus\r\n                    ? \"showShipmentStatusRightPane\"\r\n                    : \"drawerClose\"\r\n                  : \"\"\r\n              }\r\n            >\r\n              <ErrorBoundary>\r\n                <MarineDispatchDetailsComposite\r\n                  selectedRow={this.state.selectedRow}\r\n                  selectedShareholder={this.state.selectedShareholder}\r\n                  terminalCodes={this.state.terminalCodes}\r\n                  onBack={this.handleBack}\r\n                  onSaved={this.savedEvent}\r\n                  genericProps={this.props.activeItem.itemProps}\r\n                  viewTab={this.state.viewTab}\r\n                  onTabChange={this.onTabChange}\r\n                  handlePageAdd={this.handlePageAdd}\r\n                  updateEnableForConfigure={updateEnableForConfigure}\r\n                ></MarineDispatchDetailsComposite>\r\n              </ErrorBoundary>\r\n            </div>\r\n            {this.state.isShowPanle ? (\r\n              <div\r\n                className={\r\n                  this.state.drawerStatus ? \"marineStatusLeftPane\" : \"\"\r\n                }\r\n              >\r\n                <ErrorBoundary>\r\n                  <TransactionSummaryOperations\r\n                    selectedItem={[\r\n                      { Common_Code: this.state.selectedItems[0].Common_Code },\r\n                    ]}\r\n                    shipmentNextOperations={this.state.shipmentNextOperations}\r\n                    handleDetailsPageClick={this.handleGoDetails}\r\n                    handleOperationButtonClick={this.handleOperationClick}\r\n                    currentStatuses={this.state.currentShipmentStatuses}\r\n                    isDetails={true}\r\n                    isEnterpriseNode={\r\n                      this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                    }\r\n                    isWebPortalUser={\r\n                      this.props.userDetails.EntityResult.IsWebPortalUser\r\n                    }\r\n                    handleDrawer={this.handleDrawer}\r\n                    title={\"ViewAllShipment_Details\"}\r\n                    unAllowedOperations={[\r\n                      \"ViewMarineShipmentList_AuthorizeToLoad\",\r\n                      \"ViewMarineShipmentList_CloseMarineShipment\",\r\n                      \"ViewMarineShipmentList_PrintFAN\",\r\n                      \"ViewMarineShipmentList_PrintBOL\",\r\n                      \"ViewMarineShipmentList_ManualEntry\",\r\n                    ]}\r\n                    webPortalAllowedOperations={[\r\n                      \"ViewMarineShipmentList_ViewTransactions\",\r\n                      \"ViewMarineShipmentList_ViewBOL\",\r\n                      \"ViewMarineShipmentList_ViewAuditTrail\",\r\n                    ]}\r\n                  />\r\n                  {/*<TransactionSummaryOperationsMarine\r\n                    selectedItem={[\r\n                      { Common_Code: this.state.selectedItems[0].Common_Code },\r\n                    ]}\r\n                    shipmentNextOperations={this.state.shipmentNextOperations}\r\n                    handleDetailsPageClick={this.handleGoDetails}\r\n                    handleOperationButtonClick={this.handleOperationClick}\r\n                    currentStatuses={this.state.currentShipmentStatuses}\r\n                    isDetails={true}\r\n                    isEnterpriseNode={\r\n                      this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                    }\r\n                    unAllowedOperations={[]}\r\n                    handleDrawer={this.handleDrawer}\r\n                  />*/}\r\n                </ErrorBoundary>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        ) : this.state.isReadyToRender ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <div className=\"kpiSummaryContainer\">\r\n                <KPIDashboardLayout\r\n                  kpiList={this.state.marineShipmentKPIList}\r\n                  pageName=\"MarineDispatch\"\r\n                ></KPIDashboardLayout>\r\n              </div>\r\n            </ErrorBoundary>\r\n            <div\r\n              className={\r\n                shipmentSelected\r\n                  ? !this.state.drawerStatus\r\n                    ? \"showShipmentStatusRightPane\"\r\n                    : \"drawerClose\"\r\n                  : \"\"\r\n              }\r\n            >\r\n              <ErrorBoundary>\r\n                <TMTransactionFilters\r\n                  dateRange={{\r\n                    from: this.state.fromDate,\r\n                    to: this.state.toDate,\r\n                  }}\r\n                  dateError={this.state.dateError}\r\n                  handleDateTextChange={this.handleDateTextChange}\r\n                  handleRangeSelect={this.handleRangeSelect}\r\n                  handleLoadOrders={this.handleLoadOrders}\r\n                  filterText=\"LoadShipments\"\r\n                ></TMTransactionFilters>\r\n              </ErrorBoundary>\r\n              <ErrorBoundary>\r\n                <div\r\n                  className={\r\n                    fillPage === true ? \"compositeTransactionList\" : \"\"\r\n                  }\r\n                >\r\n                  <MarineDispatchSummaryPageComposite\r\n                    tableData={this.state.data.Table}\r\n                    columnDetails={this.state.data.Column}\r\n                    pageSize={\r\n                      this.props.userDetails.EntityResult.PageAttibutes\r\n                        .WebPortalListPageSize\r\n                    }\r\n                    exportRequired={true}\r\n                    exportFileName=\"MarineDispatchList\"\r\n                    columnPickerRequired={true}\r\n                    terminalsToShow={\r\n                      this.props.userDetails.EntityResult.PageAttibutes\r\n                        .NoOfTerminalsToShow\r\n                    }\r\n                    selectionRequired={true}\r\n                    columnGroupingRequired={true}\r\n                    onSelectionChange={this.handleSelection}\r\n                    onRowClick={this.handleRowClick}\r\n                    parentComponent={this.componentName}\r\n                  ></MarineDispatchSummaryPageComposite>\r\n                </div>\r\n              </ErrorBoundary>\r\n            </div>\r\n            {shipmentSelected ? (\r\n              <div\r\n                className={\r\n                  this.state.drawerStatus ? \"marineStatusLeftPane\" : \"\"\r\n                }\r\n              >\r\n                <ErrorBoundary>\r\n                  <TransactionSummaryOperations\r\n                    selectedItem={[\r\n                      { Common_Code: this.state.selectedItems[0].Common_Code },\r\n                    ]}\r\n                    shipmentNextOperations={this.state.shipmentNextOperations}\r\n                    handleDetailsPageClick={this.handleGoDetails}\r\n                    handleOperationButtonClick={this.handleOperationClick}\r\n                    currentStatuses={this.state.currentShipmentStatuses}\r\n                    isDetails={false}\r\n                    isEnterpriseNode={\r\n                      this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                    }\r\n                    isWebPortalUser={\r\n                      this.props.userDetails.EntityResult.IsWebPortalUser\r\n                    }\r\n                    handleDrawer={this.handleDrawer}\r\n                    title={\"ViewAllShipment_Details\"}\r\n                    unAllowedOperations={[\r\n                      \"ViewMarineShipmentList_AuthorizeToLoad\",\r\n                      \"ViewMarineShipmentList_CloseMarineShipment\",\r\n                      \"ViewMarineShipmentList_PrintFAN\",\r\n                      \"ViewMarineShipmentList_PrintBOL\",\r\n                      \"ViewMarineShipmentList_ManualEntry\",\r\n                    ]}\r\n                    webPortalAllowedOperations={[\r\n                      \"ViewMarineShipmentList_ViewTransactions\",\r\n                      \"ViewMarineShipmentList_ViewBOL\",\r\n                      \"ViewMarineShipmentList_ViewAuditTrail\",\r\n                    ]}\r\n                  />\r\n                  {/*\r\n                  <TransactionSummaryOperationsMarine\r\n                    selectedItem={[\r\n                      { Common_Code: this.state.selectedItems[0].Common_Code },\r\n                    ]}\r\n                    shipmentNextOperations={this.state.shipmentNextOperations}\r\n                    handleDetailsPageClick={this.handleGoDetails}\r\n                    handleOperationButtonClick={this.handleOperationClick}\r\n                    currentStatuses={this.state.currentShipmentStatuses}\r\n                    isDetails={false}\r\n                    isEnterpriseNode={\r\n                      this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                    }\r\n                    unAllowedOperations={[]}\r\n                    handleDrawer={this.handleDrawer}\r\n                  />*/}\r\n                </ErrorBoundary>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <LoadingPage message=\"Loading\"></LoadingPage>\r\n        )}\r\n        {Object.keys(this.state.selectedRow).length > 0 ||\r\n          this.state.selectedItems.length === 1\r\n          ? this.renderModal()\r\n          : \"\"}\r\n\r\n        {this.state.showDeleteAuthenticationLayout  ||\r\n           this.state.showAuthorizeToLoadAuthenticationLayout ||\r\n           this.state.showCloseShipmentAuthenticationLayout ||\r\n           this.state.showViewBOLAuthenticationLayout ||\r\n           this.state.showPrintBOLAuthenticationLayout ||\r\n           this.state.showFANAuthenticationLayout \r\n          ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={this.getDeleteorEditMode()}\r\n            functionGroup={this.getFunctionGroupName()}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleOperation()}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    userActions: bindActionCreators(getUserDetails, dispatch),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MarineDispatchComposite);\r\n\r\nMarineDispatchComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { DatePicker, Button } from \"@scuf/common\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function TMTransactionFilters({\r\n  handleDateTextChange,\r\n  handleRangeSelect,\r\n  handleLoadOrders,\r\n  dateError,\r\n  dateRange,\r\n  filterText,\r\n}) {\r\n  //console.log(dateError);\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"dateRangeContainer\">\r\n          <div className=\"dateRangeMargin\">\r\n            <DatePicker\r\n              type=\"daterange\"\r\n              closeOnSelection={true}\r\n              error={t(dateError)}\r\n              displayFormat={getCurrentDateFormat()}\r\n              //value={dateRange}\r\n              rangeValue={dateRange}\r\n              onTextChange={handleDateTextChange}\r\n              onRangeSelect={handleRangeSelect}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"dateSearch\">\r\n            <Button content={t(filterText)} onClick={handleLoadOrders} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as WjCore from \"@grapecity/wijmo\";\r\nimport { ReportViewer } from \"@grapecity/wijmo.react.viewer\";\r\nimport * as wjViewer from \"@grapecity/wijmo.viewer\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { connect } from \"react-redux\";\r\n\r\nTMReportViewer.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\n\r\nTMReportViewer.defaultProps = {\r\n  parameters: {},\r\n};\r\n\r\nWjCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nfunction TMReportViewer({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  parameters,\r\n  filePath,\r\n  ...props\r\n}) {\r\n  //   const [proxyHost, setProxyHost] = useState(\r\n  //     \"http://localhost:8888/TMWebProxyAPI/\"\r\n  //   );\r\n  //   const [reportServiceHost, setReportServiceHost] = useState(\r\n  //     \"http://localhost:5632/\"\r\n  //   );\r\n  //   const [reportUrl, setReportUrl] = useState(proxyHost + \"api/report\");\r\n  //   const [filePath, setFilePath] = useState(\r\n  //     \"TM/\" + \"TMReports/\" + \"CarrierCompanyReport\"\r\n  //   );\r\n  const reportUrl = proxyServerHost + \"api/report\";\r\n  //const filePath = \"TM/\" + \"TMReports/\" + reportName;\r\n\r\n  const beforeXhrRequestSend = (s, event) => {\r\n    // use this event for Authorization purpose\r\n    const prevBeforeSend = event.settings.beforeSend;\r\n    event.settings.beforeSend = function (xhr) {\r\n      prevBeforeSend && prevBeforeSend(xhr);\r\n      //here you may add the params for XMLHttpRequest as required\r\n      if (!props.userDetails.EntityResult.IsWebPortalUser)\r\n        xhr.withCredentials = true;\r\n      if (xhr.URL_DEBUG.indexOf(\"parameters\") > -1) {\r\n        xhr.onreadystatechange = function () {\r\n          if (this.readyState === 4 && this.status === 200) {\r\n            var host = s.hostElement;\r\n            setTimeout(() => {\r\n              var splitter = host.querySelector(\".wj-viewer-splitter\");\r\n              var param = host\r\n                .querySelector(\".wj-viewer-tabsleft\")\r\n                .querySelectorAll(\"li\")[2];\r\n              if (!param.disabled) {\r\n                param.className = \"hidden\";\r\n                splitter.click();\r\n              }\r\n            }, 1000);\r\n          }\r\n        };\r\n      }\r\n    };\r\n  };\r\n  let header = {\r\n    Authorization: \"Bearer \" + props.tokenDetails.tokenInfo,\r\n  };\r\n\r\n  // let header = {\r\n  //   Authorization: \"Bearer \" + \"fiewjfjewifi\",\r\n  // };\r\n\r\n  const initViewer = (s, event) => {\r\n    wjViewer._ReportService.prototype.load = function (data) {\r\n      var _this = this;\r\n      var promise = new wjViewer._Promise();\r\n      if (!this._checkReportController(promise)) {\r\n        return promise;\r\n      }\r\n      this.httpRequest(this._getReportInstancesUrl(), {\r\n        method: \"POST\",\r\n        data: data,\r\n      }).then(\r\n        function (xhr) {\r\n          var v = wjViewer._parseReportExecutionInfo(xhr.responseText);\r\n          _this._instanceId = v.id;\r\n          _this._status = wjViewer._ExecutionStatus.loaded;\r\n          _this._outlinesLocation = v.outlinesLocation;\r\n          _this._statusLocation = v.statusLocation.replace(\r\n            reportServiceHost,\r\n            proxyServerHost\r\n          );\r\n          _this._pageSettingsLocation = v.pageSettingsLocation;\r\n          _this._featuresLocation = v.featuresLocation;\r\n          _this._parametersLocation = v.parametersLocation;\r\n          promise.resolve(v);\r\n        },\r\n        function (xhr) {\r\n          promise.reject(_this._getError(xhr));\r\n        }\r\n      );\r\n      return promise;\r\n    };\r\n  };\r\n\r\n  //console.log(props.userDetails.EntityResult.IsWebPortalUser, header);\r\n  return (\r\n    <div>\r\n      {props.userDetails.EntityResult.IsWebPortalUser ? (\r\n        <div>\r\n          <ReportViewer\r\n            requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <ReportViewer\r\n            //requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TMReportViewer);\r\n","import React from \"react\";\r\nimport { Modal, Button, Header } from \"@scuf/common\";\r\nimport TMReportViewer from \"../Common/TMReportViewer\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nReportDetails.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  filePath: PropTypes.string.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  showReport: PropTypes.bool.isRequired,\r\n  handleModalClose: PropTypes.func.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\nReportDetails.defaultProps = {\r\n  parameters: {},\r\n};\r\nexport default function ReportDetails({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  filePath,\r\n  handleBack,\r\n  showReport,\r\n  handleModalClose,\r\n  parameters,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <Modal\r\n      style={{ padding: \"0px\" }}\r\n      size=\"fullscreen\"\r\n      open={showReport}\r\n      // onClose={handleModalClose}\r\n    >\r\n      <div>\r\n        <Header title={t(\"Header_TerminalManager\")} menu={false} />\r\n        <TMReportViewer\r\n          proxyServerHost={proxyServerHost}\r\n          reportServiceHost={reportServiceHost}\r\n          filePath={filePath}\r\n          parameters={parameters}\r\n        />\r\n        <div style={{ marginTop: \"10px\", marginLeft: \"20px\" }}>\r\n          <Button\r\n            className=\"backButton\"\r\n            onClick={handleBack}\r\n            content={t(\"Report_Back\")}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","WijmoGrid","flex","setFlex","translator","useTranslation","_getData","pageLength","CollectionView","sourceData","pageSize","setData","rowsPerPage","theGrid","React","theSearch","gridFilter","pagingComponent","colPicker","selectedRows","selectionRequired","selector","gridInitialized","grid","customizeFilterConditions","onRowClick","addEventListener","hostElement","e","ht","hitTest","target","closest","classList","includes","cellType","wjGrid","Cell","rowData","rows","row","dataItem","selectionMode","wjCore","select","Selector","itemChecked","s","singleSelection","filter","isSelected","current","loadash","forEach","onSelectionHandle","r","selectedRow","showCheckAll","column","rowHeaders","columns","headersVisibility","HeadersVisibility","All","useEffect","control","push","selectedItems","refresh","localStorage","getItem","parentComponent","gridState","JSON","parse","newFlex","col","matchedCol","colSetting","binding","visible","filterDefinition","collectionView","deferUpdate","sortDescriptions","clear","i","sortDesc","property","ascending","groupDescriptions","sessionStorage","gridSessionState","moveToPage","pageCount","pageIndex","text","searchText","columnPickerRequired","itemsSource","checkedMemberPath","displayMemberPath","lostFocus","addHandler","hidePopup","exportExcel","gridFlex","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","exportFileName","displayValues","columnDetail","Name","PopOver","terminalCodes","split","terminalsToShow","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","saveGridState","group","document","getElementsByClassName","chkbx","parentNode","sessionState","setItem","stringify","FlexGridFilter","operator","Operator","header","descending","apply","conditions","search","selectAll","and","or","cancel","stringOperators","op","EQ","NE","BW","EW","CT","NC","numberOperators","GT","LT","GE","LE","dateOperators","booleanOperators","getWidth","columnDetails","window","screen","width","WidthPx","parseInt","WidthPercentage","FlexGridSearch","class","ref","id","actionType","event","host","offsetHeight","focus","showPopup","PopupPosition","Below","preventDefault","colPickerClickHandler","exportRequired","fontSize","top","columnGroupingRequired","GroupPanel","FlexGrid","autoGenerateColumns","alternatingRowStep","autoRowHeights","initialized","virtualizationThreshold","onUpdatedView","FlexGridColumn","minWidth","isReadOnly","wordWrap","align","FlexGridCellTemplate","template","context","conditionalRowStyleCheck","conditionalRowStyles","ListBox","picker","initializedPicker","CollectionViewNavigator","headerFormat","byPage","cv","MarineDispatchSummaryPageComposite","tableData","onSelectionChange","WijmoGridComposite","MarineLoadingDetails","loadingDetailsHideFields","setValid","onSaved","handleBack","status","isWebPortalUser","loadingDetail","setLoadingDetail","disPlayValue","cellData","field","displayNum","toLocaleString","changeValid","IsArchived","FunctionsList","functionGroups","modify","fnViewMarineLoadingDetails","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","changeNumber","index","indexOf","str1","substr","str2","parseFloat","TMDetailsHeader","entityCode","DataTable","scrollable","resizableColumns","Column","initialWidth","editable","editFieldType","renderer","celldata","BaseProductCode","IsInvalid","handleCustom","productcode","replace","fptransactionid","ProductCategoryType","paddingTop","MarineShipmentViewAuditTrailDetails","DispatchCode","auditTrailList","modAuditTrailList","auditExpandedRows","Attributes","handleStatus","MarineDispatchCompartmentDetailType","EMPTY","LOADING","PART_FILLED","OVER_FILLED","FORCE_COMPLETED","COMPLETED","INTERRUPTED","formatter","engine","cls","val","ViewDispatchStatus","AUTO_LOADED","ViewDispatch_Status","CLOSED","MANUALLY_LOADED","PARTIALLY_LOADED","QUEUED","READY","rowExpansionTemplate","Array","isArray","AttributesforUI","handleIsRequiredAuditAttributes","handleAttributeType","paddingRight","AttributeName","attribute","Constants","STRING","INT","FLOAT","LONG","DOUBLE","AttributeValue","BOOL","Checkbox","checked","DATETIME","DatePicker","minuteStep","showYearSelector","wjChart","chartType","bindingX","palette","height","wjProperty","majorUnit","max","min","itemFormatter","axisLine","expandedRows","DispatchCompartmentStatus","att","el","getElementById","innerHTML","iframe","createElement","doc","body","appendChild","contentWindow","substring","write","close","print","setTimeout","removeChild","wjcCore","MarineDispatchComposite","isDetails","isReadyToRender","isDetailsModified","loadingDetails","productAllocationDetails","fromDate","toDate","dateError","shipmentNextOperations","currentShipmentStatuses","lastStatus","reason","isError","isOperation","isViewDetails","isCloseShipment","isViewAuditTrail","isViewProductAllocation","isViewLoadingDetails","isManualEntry","isCloseShipmentBtn","auditAttributeMetaDataList","marineDispatchValidationDef","viewTab","modMarineDispatch","isShowPanle","marineDispatchBtnStatus","drawerStatus","showReport","marineShipmentKPIList","deleteEnableForConfigure","activityInfo","showDeleteAuthenticationLayout","showAuthorizeToLoadAuthenticationLayout","showCloseShipmentAuthenticationLayout","showViewBOLAuthenticationLayout","showPrintBOLAuthenticationLayout","showFANAuthenticationLayout","componentName","handleAdd","handleDelete","handleAuthenticationClose","deleteMarineDispatchKeys","MarineDispatchCode","KeyData","KeyCodes","Key","Value","RestApis","notification","getMarineDispatchList","getKPIList","messageResult","toast","NotifyEvent","notificationMessage","autoClose","fnMarineShipmentByCompartment","selectItem","Common_Code","handleClickRefresh","handleRangeSelect","to","from","handleDateTextChange","handleLoadOrders","handleModalBack","CloseShipment","IsWebPortalUser","handleShipmentClose","keyCode","obj","keyDataCode","savedEvent","viewBOLClick","handleViewBOL","reportServiceURI","handleOperationClick","operation","ViewMarineShipmentList_AuthorizeToLoad","authorizeToLoadOnClick","ViewMarineShipmentList_CloseMarineShipment","ViewMarineShipmentList_ViewAuditTrail","getAuditTrailList","ViewMarineShipmentList_ViewTransactions","getMarineDispatchLoadingDetail","ViewMarineShipmentList_PrintFAN","printFANClick","ViewMarineShipmentList_ViewBOL","ViewMarineShipmentList_PrintBOL","printBOLClick","ViewMarineShipmentList_BSIOutbound","BSIOutbound","ViewMarineShipmentList_ManualEntry","getMarineDispatch","handleRowClick","view","dispatchDeleteInfo","ActivityCode","MARINE_SHIPMENT_ENABLE_DELETE","ActionTypeCode","CHECK","dispatchDeleteStates","ShipmentStates","MarineShipmentByCompartmentList_ShipmentStatus","toUpperCase","remove","GetShipmentStatusOperations","GetShipmentStatuses","selectItems","handleGoDetails","handleSelection","items","isReady","findIndex","x","saveType","dispatchStatus","DispatchStatus","Common_Shareholder","ShareholderCode","handlePageAdd","transportationType","getTransportationType","authorizeToLoad","selectRow","printFAN","printBOL","componentWillUnmount","clearStorage","removeEventListener","removeItem","handleShareholderSelectionChange","getTerminalsList","formAuditAttributes","selectedTerminal","attributes","attTerminal","TerminalCode","auditAttributes","attributeMetaDataList","AttributeCode","Code","DisplayName","DefaultValue","IsMandatory","IsReadonly","auditSequenceNo","attributesforNewAudit","audit","some","selTerminal","tempAuditAttributes","ListOfAttributeData","attData","tempAttIndex","assignedAttributes","onTabChange","activeIndex","handleDrawer","authenticateDelete","getAttributes","MARINEDISPATCHSTATUSTIME","renderModal","path","paramValues","Culture","UICulture","ReportDetails","handleModalClose","proxyServerHost","reportServiceHost","filePath","parameters","nextOperations","keys","filteredOptions","results","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnPrintMarineFAN","fnPrintMarineBOL","IsEnterpriseNode","MarineReceiptByCompartmentList_ReceiptStatus","localTerminalCode","setHours","startRange","endRange","TransportationType","selectedItem","updatedselectedItem","Table","emptyMarineDispatch","QuantityUOM","PageAttibutes","DefaultUOMS","TerminalCodes","Reason","PrimaryShareholder","GetShipmentActivityInfo","MARINE","activeItem","UpdatedTime","formReadonlyCompAttributes","compAttributes","MinValue","MaxValue","ValidationFormat","compSequenceNo","compAtt","selAtt","fnKPIInformation","objKPIRequestData","PageName","kpiMarineShipmentList","InputParameters","ListKPIDetails","getFunctionGroupName","fnMarineDispatch","getDeleteorEditMode","shipmentSelected","fillPage","shipmentSource","updateEnableForConfigure","dispatchUpdateInfo","MARINE_SHIPMENT_ENABLE_UPDATE","dispatchUpdateStates","closeIcon","onClose","closeOnDimmerClick","closeOnDocumentClick","ShareholderList","auditToggleExpand","MarineDispatchManualEntryDetailsComposite","dispatchCode","IsBonded","ActualTerminalCode","MarineDispatchDetailsComposite","onBack","genericProps","TransactionSummaryOperations","handleDetailsPageClick","handleOperationButtonClick","currentStatuses","isEnterpriseNode","title","unAllowedOperations","webPortalAllowedOperations","KPIDashboardLayout","kpiList","pageName","TMTransactionFilters","dateRange","filterText","WebPortalListPageSize","NoOfTerminalsToShow","LoadingPage","UserName","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","dispatch","userActions","bindActionCreators","closeOnSelection","displayFormat","getCurrentDateFormat","rangeValue","onTextChange","onRangeSelect","TMReportViewer","reportUrl","beforeXhrRequestSend","prevBeforeSend","settings","beforeSend","xhr","withCredentials","URL_DEBUG","onreadystatechange","readyState","splitter","querySelector","param","querySelectorAll","click","Authorization","initViewer","wjViewer","prototype","load","_this","promise","_checkReportController","httpRequest","_getReportInstancesUrl","method","v","responseText","_instanceId","_status","loaded","_outlinesLocation","outlinesLocation","_statusLocation","statusLocation","_pageSettingsLocation","pageSettingsLocation","_featuresLocation","featuresLocation","_parametersLocation","parametersLocation","resolve","reject","_getError","ReportViewer","requestHeaders","serviceUrl","beforeSendRequest","WjCore","menu","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","shareholderCode","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","shipmentCode","orderCode","receiptCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","bayCode","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","TransactionType","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks"],"sourceRoot":""}