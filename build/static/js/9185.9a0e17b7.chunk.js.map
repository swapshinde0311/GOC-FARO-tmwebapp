{"version":3,"file":"static/js/9185.9a0e17b7.chunk.js","mappings":"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","sources":["Components/Composite/Details/NonFillingVehicleDetailsComposite.jsx","Components/UIBase/Common/AssociatedTerminals.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","Components/UIBase/Details/VehicleBasicFields.jsx","JS/AttributeEntity.js","JS/DateFieldsInEntities.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { nonFillingVehicleValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport { functionGroups, fnVehicle } from \"../../../JS/FunctionGroups\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport lodash from \"lodash\";\r\nimport VehicleBasicFields from \"../../UIBase/Details/VehicleBasicFields\";\r\nimport { emptyNonFillingVehicle } from \"../../../JS/DefaultEntities\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { vehicleAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport * as DateFieldsInEntities from \"../../../JS/DateFieldsInEntities\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass NonFillingVehicleDetailsComposite extends Component {\r\n  state = {\r\n    nonFillingVehicle: {},\r\n    modNonFillingVehicle: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      nonFillingVehicleValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    carrierOptions: [],\r\n    terminalOptions: [],\r\n    saveEnabled: false,\r\n    attributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    showAuthenticationLayout: false,\r\n    tempNonFillingVehicle: {},\r\n  };\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      let isNewVehicle = false;\r\n      if (this.props.selectedRow.Common_Code === undefined) isNewVehicle = true;\r\n      this.getAttributes(isNewVehicle);\r\n      this.getCarrierList(this.props.selectedShareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"nonFillingVehicleDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  getCarrierList(shareholder) {\r\n    axios(\r\n      RestAPIs.GetCarrierCodes +\r\n        \"?ShareholderCode=\" +\r\n        shareholder +\r\n        \"&Transportationtype=\" +\r\n        Constants.TransportationType.ROAD,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            // const carrierOptions = [];\r\n            // result.EntityResult.Table.forEach((carrier) => {\r\n            //   carrierOptions.push({\r\n            //     text: carrier.Common_Code,\r\n            //     value: carrier.Common_Name,\r\n            //   });\r\n            // });\r\n            let carrierOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n\r\n            this.setState({ carrierOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error while getting Carrier List:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Carrier List:\", error);\r\n      });\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.nonFillingVehicle.Code !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getNonFillingVehicle(true);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"nonFillingVehicleDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCarrierChange = (carrier) => {\r\n    if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n      this.getTerminalsForCarrier(carrier);\r\n    else {\r\n      const modNonFillingVehicle = lodash.cloneDeep(\r\n        this.state.modNonFillingVehicle\r\n      );\r\n      modNonFillingVehicle.CarrierCompanyCode = carrier;\r\n      const terminalOptions = [];\r\n      modNonFillingVehicle.TerminalCodes = [];\r\n      this.setState({ terminalOptions, modNonFillingVehicle });\r\n    }\r\n    if (nonFillingVehicleValidationDef[\"CarrierCompanyCode\"] !== undefined) {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      validationErrors[\"CarrierCompanyCode\"] = Utilities.validateField(\r\n        nonFillingVehicleValidationDef[\"CarrierCompanyCode\"],\r\n        carrier\r\n      );\r\n\r\n      this.setState({ validationErrors });\r\n    }\r\n  };\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modNonFillingVehicle = lodash.cloneDeep(\r\n        this.state.modNonFillingVehicle\r\n      );\r\n      modNonFillingVehicle.Active = value;\r\n      if (modNonFillingVehicle.Active !== this.state.nonFillingVehicle.Active)\r\n        modNonFillingVehicle.Remarks = \"\";\r\n      this.setState({ modNonFillingVehicle });\r\n    } catch (error) {\r\n      console.log(\r\n        \"nonFillingVehicleDetailsComposite:Error occured in handleActiveStatusChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    const modNonFillingVehicle = lodash.cloneDeep(\r\n      this.state.modNonFillingVehicle\r\n    );\r\n    try {\r\n      modNonFillingVehicle[propertyName] = data;\r\n      const validationErrors = { ...this.state.validationErrors };\r\n\r\n      if (\r\n        propertyName === \"RoadTaxNo\" ||\r\n        propertyName === \"RoadTaxNoIssueDate\" ||\r\n        propertyName === \"RoadTaxNoExpiryDate\"\r\n      ) {\r\n        //validationErrors[propertyName] = \"\";\r\n        validationErrors.RoadTaxNo = \"\";\r\n        validationErrors.RoadTaxNoExpiryDate = \"\";\r\n        validationErrors.RoadTaxNoIssueDate = \"\";\r\n      }\r\n\r\n      if (nonFillingVehicleValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          nonFillingVehicleValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n      this.setState({ validationErrors, modNonFillingVehicle });\r\n\r\n      if (propertyName === \"TerminalCodes\") {\r\n        this.terminalSelectionChange(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"nonFillingVehicleDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getAttributes(isNewVehicle) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [vehicleAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.vehicle\r\n                ),\r\n            },\r\n            () => this.getNonFillingVehicle(isNewVehicle)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals !== undefined && selectedTerminals !== null) {\r\n        let attributesTerminalsList = [];\r\n        var attributeMetaDataList = [];\r\n        var modAttributeMetaDataList = [];\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        modAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.modAttributeMetaDataList\r\n        );\r\n        const attributeValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeValidationErrors\r\n        );\r\n        var modNonFillingVehicle = lodash.cloneDeep(\r\n          this.state.modNonFillingVehicle\r\n        );\r\n\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          });\r\n\r\n          if (existitem === undefined) {\r\n            attributeMetaDataList.vehicle.forEach(function (attributeMetaData) {\r\n              if (attributeMetaData.TerminalCode === terminal) {\r\n                var Attributevalue = modNonFillingVehicle.Attributes.find(\r\n                  (baseproductAttribute) => {\r\n                    return baseproductAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n                attributesTerminalsList.push(attributeMetaData);\r\n              }\r\n            });\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n        modAttributeMetaDataList = [];\r\n        modAttributeMetaDataList = attributesTerminalsList;\r\n        modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n          modAttributeMetaDataList\r\n        );\r\n        attributeValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n              (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n        this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"NonFillingVehicleDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList.vehicle) &&\r\n        attributeMetaDataList.vehicle.length > 0\r\n      ) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.vehicle[0].TerminalCode,\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"NonFillingVehicleDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getNonFillingVehicle(isNewVehicle) {\r\n    if (isNewVehicle) {\r\n      let terminalOptions = [];\r\n      this.setState(\r\n        {\r\n          nonFillingVehicle: lodash.cloneDeep(emptyNonFillingVehicle),\r\n          modNonFillingVehicle: lodash.cloneDeep(emptyNonFillingVehicle),\r\n          isReadyToRender: true,\r\n          terminalOptions,\r\n          modAttributeMetaDataList: [],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnVehicle\r\n          ),\r\n        },\r\n        () => {\r\n          if (!this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n            this.localNodeAttribute();\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value:\r\n          this.props.selectedRow.Common_Code === undefined\r\n            ? this.state.modNonFillingVehicle.Code\r\n            : this.props.selectedRow.Common_Code,\r\n      },\r\n    ];\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetVehicle,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        // console.log(response);\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              nonFillingVehicle: lodash.cloneDeep(result.EntityResult),\r\n              modNonFillingVehicle: lodash.cloneDeep(result.EntityResult),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnVehicle\r\n              ),\r\n            },\r\n            () => {\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n              this.getTerminalsForCarrier(\r\n                result.EntityResult.CarrierCompanyCode\r\n              );\r\n            }\r\n          );\r\n        } else {\r\n          emptyNonFillingVehicle.ShareholderCode =\r\n            this.props.selectedShareholder;\r\n\r\n          this.setState({\r\n            modNonFillingVehicle: lodash.cloneDeep(emptyNonFillingVehicle),\r\n            nonFillingVehicle: lodash.cloneDeep(emptyNonFillingVehicle),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetVehicle:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Vehicle:\", error);\r\n      });\r\n  }\r\n\r\n  getTerminalsForCarrier(carrier) {\r\n    if (!this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n      const modNonFillingVehicle = lodash.cloneDeep(\r\n        this.state.modNonFillingVehicle\r\n      );\r\n      modNonFillingVehicle.CarrierCompanyCode = carrier;\r\n      const terminalOptions = [];\r\n      //modNonFillingVehicle.TerminalCodes = [];\r\n      this.setState({ terminalOptions, modNonFillingVehicle });\r\n    } else {\r\n      const modNonFillingVehicle = lodash.cloneDeep(\r\n        this.state.modNonFillingVehicle\r\n      );\r\n      let terminalOptions = [...this.state.terminalOptions];\r\n\r\n      modNonFillingVehicle.CarrierCompanyCode = carrier;\r\n\r\n      try {\r\n        if (carrier === undefined) {\r\n          terminalOptions = [];\r\n          modNonFillingVehicle.TerminalCodes = [];\r\n          this.setState({ terminalOptions, modNonFillingVehicle });\r\n          this.terminalSelectionChange([]);\r\n          return;\r\n        }\r\n        let keyCode = [\r\n          {\r\n            key: KeyCodes.carrierCode,\r\n            value: carrier,\r\n          },\r\n          {\r\n            key: KeyCodes.transportationType,\r\n            value: Constants.TransportationType.ROAD,\r\n          },\r\n        ];\r\n        let obj = {\r\n          ShareHolderCode: this.props.selectedShareholder,\r\n          keyDataCode: KeyCodes.carrierCode,\r\n          KeyCodes: keyCode,\r\n        };\r\n        axios(\r\n          RestAPIs.GetCarrier,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            let result = response.data;\r\n            //console.log(result);\r\n            //console.log(\"IsSuccess-\", result.IsSuccess);\r\n\r\n            if (\r\n              result.IsSuccess === true &&\r\n              result.EntityResult !== null &&\r\n              result.EntityResult.TerminalCodes !== null\r\n            ) {\r\n              terminalOptions = [...result.EntityResult.TerminalCodes];\r\n              this.setState({ terminalOptions });\r\n            } else {\r\n              terminalOptions = [];\r\n\r\n              this.setState({ terminalOptions });\r\n              console.log(\"Error in GetCarrier:\", result.ErrorList);\r\n            }\r\n            let nonFillingVehicle = { ...this.state.nonFillingVehicle };\r\n            if (\r\n              nonFillingVehicle.Code === undefined ||\r\n              nonFillingVehicle.Code === \"\" ||\r\n              nonFillingVehicle.Code === null\r\n            ) {\r\n              if (terminalOptions.length === 1) {\r\n                modNonFillingVehicle.TerminalCodes = [...terminalOptions];\r\n                this.terminalSelectionChange(\r\n                  modNonFillingVehicle.TerminalCodes\r\n                );\r\n              } else {\r\n                modNonFillingVehicle.TerminalCodes = [];\r\n                this.terminalSelectionChange([]);\r\n              }\r\n            }\r\n\r\n            if (Array.isArray(modNonFillingVehicle.TerminalCodes)) {\r\n              modNonFillingVehicle.TerminalCodes = terminalOptions.filter((x) =>\r\n                modNonFillingVehicle.TerminalCodes.includes(x)\r\n              );\r\n            }\r\n\r\n            this.setState({ modNonFillingVehicle });\r\n          })\r\n          .catch((error) => {\r\n            terminalOptions = [];\r\n            modNonFillingVehicle.TerminalCodes = [];\r\n            this.setState({ terminalOptions, modNonFillingVehicle });\r\n            console.log(\"Error while getting Carrier:\", error, carrier);\r\n            //throw error;\r\n          });\r\n      } catch (error) {\r\n        terminalOptions = [];\r\n        modNonFillingVehicle.TerminalCodes = [];\r\n        this.setState({ terminalOptions, modNonFillingVehicle });\r\n        console.log(\r\n          \"nonFillingVehicleDetailsComposite:Error occured on handleCarrierChange\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  }\r\n  handleReset = () => {\r\n    try {\r\n      this.setState(\r\n        {\r\n          modNonFillingVehicle: lodash.cloneDeep(this.state.nonFillingVehicle),\r\n          modAttributeMetaDataList: [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(\r\n              this.state.modNonFillingVehicle.TerminalCodes\r\n            );\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n      if (this.state.nonFillingVehicle.Code === \"\") {\r\n        //let terminalOptions = { ...this.state.terminalOptions };\r\n        let terminalOptions = [];\r\n        this.setState({ terminalOptions });\r\n      }\r\n\r\n      let validationErrors = { ...this.state.validationErrors };\r\n      Object.keys(validationErrors).forEach((key) => {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState({ validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"nonFillingVehicleDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.vehicle\r\n          ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      let modNonFillingVehicle = lodash.cloneDeep(\r\n        this.state.modNonFillingVehicle\r\n      );\r\n      let terminalOptions = [...this.state.terminalOptions];\r\n      if (checked) modNonFillingVehicle.TerminalCodes = terminalOptions;\r\n      else modNonFillingVehicle.TerminalCodes = [];\r\n      this.setState({ modNonFillingVehicle });\r\n      this.terminalSelectionChange(modNonFillingVehicle.TerminalCodes);\r\n    } catch (error) {\r\n      console.log(\r\n        \"nonFillingVehicleDetailsComposite:Error occured on handleAllTerminalsChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  saveNonFillingVehicle = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempNonFillingVehicle = lodash.cloneDeep(this.state.tempNonFillingVehicle);\r\n\r\n    \r\n      this.state.nonFillingVehicle.Code === \"\"\r\n        ? this.createVehicle(tempNonFillingVehicle)\r\n        : this.updateVehicle(tempNonFillingVehicle);\r\n    } catch (error) {\r\n      console.log(\"NonFillingVehicleComposite : Error in saveNonFillingVehicle\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n      let returnValue = Object.values(this.state.validationErrors).every(\r\n        function (value) {\r\n          return value === \"\";\r\n        }\r\n      );\r\n      if (returnValue) {\r\n       // this.setState({ saveEnabled: false });\r\n        let attributeList = Utilities.attributesConverttoLocaleString(\r\n          this.state.modAttributeMetaDataList\r\n        );\r\n        let modNonFillingVehicle = this.fillDetails();\r\n        if (this.validateSave(modNonFillingVehicle, attributeList)) {\r\n          modNonFillingVehicle = this.convertStringtoDecimal(\r\n            modNonFillingVehicle,\r\n            attributeList\r\n            );\r\n          modNonFillingVehicle = Utilities.convertDatesToString(\r\n            DateFieldsInEntities.DatesInEntity.Vehicle,\r\n            modNonFillingVehicle\r\n           );\r\n\r\n            let showAuthenticationLayout =\r\n            this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n              ? true\r\n              : false;\r\n          let tempNonFillingVehicle = lodash.cloneDeep(modNonFillingVehicle);\r\n          this.setState({ showAuthenticationLayout, tempNonFillingVehicle }, () => {\r\n            if (showAuthenticationLayout === false) {\r\n              this.saveNonFillingVehicle();\r\n            }\r\n        });\r\n        } else this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"nonFillingVehicle DetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modNonFillingVehicle = lodash.cloneDeep(\r\n        this.state.modNonFillingVehicle\r\n      );\r\n      modNonFillingVehicle.ShareholderCode = this.props.selectedShareholder;\r\n      var licDate = new Date();\r\n      modNonFillingVehicle.LicenseNoIssueDate = licDate.getUTCDate();\r\n      //modNonFillingVehicle.LicenseNoIssueDate.setHours(0, 0, 0, 0);\r\n\r\n      let vehiclePrimerInfo = {\r\n        PrimeMoverCode: null,\r\n        VehicleCode: null,\r\n        ShareholderCode: null,\r\n        CarrierCompanyCode: null,\r\n        PrimeMoverSequence: null,\r\n      };\r\n      vehiclePrimerInfo.VehicleCode = modNonFillingVehicle.Code;\r\n      vehiclePrimerInfo.ShareholderCode = this.props.selectedShareholder;\r\n      vehiclePrimerInfo.CarrierCompanyCode =\r\n        modNonFillingVehicle.CarrierCompanyCode;\r\n      vehiclePrimerInfo.PrimeMoverSequence = 1;\r\n      vehiclePrimerInfo.PrimeMoverCode = \"\";\r\n\r\n      // modNonFillingVehicle.VehiclePrimeMovers.push(vehiclePrimerInfo);\r\n\r\n      // modNonFillingVehicle.VehiclePrimeMovers[0].VehicleCode = modNonFillingVehicle.Code;\r\n      // modNonFillingVehicle.VehiclePrimeMovers[0].PrimeMoverCode = \"\";\r\n      // modNonFillingVehicle.VehiclePrimeMovers[0].ShareholderCode = this.props.selectedShareholder;\r\n      // modNonFillingVehicle.VehiclePrimeMovers[0].CarrierCompanyCode =\r\n      //     modNonFillingVehicle.CarrierCompanyCode;\r\n      // modNonFillingVehicle.VehiclePrimeMovers[0].PrimeMoverSequence = 1;\r\n\r\n      return modNonFillingVehicle;\r\n    } catch (error) {\r\n      console.log(\r\n        \"nonFillingVehicleDetailsComposite:Error occured on fillDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  convertStringtoDecimal(modNonFillingVehicle, attributeList) {\r\n    try {\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modNonFillingVehicle.Attributes =\r\n        Utilities.fillAttributeDetails(attributeList);\r\n      return modNonFillingVehicle;\r\n    } catch (err) {\r\n      console.log(\r\n        \"convertStringtoDecimal error NonFillingVehicleDetailsComposite\",\r\n        err\r\n      );\r\n    }\r\n  }\r\n\r\n  validateSave(modNonFillingVehicle, attributeList) {\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(nonFillingVehicleValidationDef).forEach(function (key) {\r\n      if (modNonFillingVehicle[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          nonFillingVehicleValidationDef[key],\r\n          modNonFillingVehicle[key]\r\n        );\r\n    });\r\n\r\n    if (modNonFillingVehicle.Active !== this.state.nonFillingVehicle.Active) {\r\n      if (\r\n        modNonFillingVehicle.Remarks === null ||\r\n        modNonFillingVehicle.Remarks === \"\"\r\n      ) {\r\n        validationErrors[\"Remarks\"] = \"Vehicle_RemarksRequired\";\r\n      }\r\n    }\r\n\r\n    if (\r\n      modNonFillingVehicle.LicenseNo !== \"\" &&\r\n      modNonFillingVehicle.LicenseNo !== null &&\r\n      modNonFillingVehicle.LicenseNo !== undefined\r\n    ) {\r\n      if (isNaN(Date.parse(modNonFillingVehicle.LicenseNoExpiryDate))) {\r\n        validationErrors[\"LicenseNoExpiryDate\"] = \"Vehicle_LicExpRequired\";\r\n      }\r\n    }\r\n\r\n    if (\r\n      (modNonFillingVehicle.RoadTaxNo !== null &&\r\n        modNonFillingVehicle.RoadTaxNo !== \"\") ||\r\n      !isNaN(Date.parse(modNonFillingVehicle.RoadTaxNoIssueDate)) ||\r\n      !isNaN(Date.parse(modNonFillingVehicle.RoadTaxNoExpiryDate))\r\n    ) {\r\n      if (\r\n        modNonFillingVehicle.RoadTaxNo === null ||\r\n        modNonFillingVehicle.RoadTaxNo === \"\"\r\n      ) {\r\n        validationErrors[\"RoadTaxNo\"] = \"Vehicle_RoadTaxNoRequired\";\r\n      }\r\n\r\n      if (isNaN(Date.parse(modNonFillingVehicle.RoadTaxNoIssueDate))) {\r\n        validationErrors[\"RoadTaxNoIssueDate\"] = \"Vehicle_RoadTaxIssRequired\";\r\n      }\r\n      if (isNaN(Date.parse(modNonFillingVehicle.RoadTaxNoExpiryDate))) {\r\n        validationErrors[\"RoadTaxNoExpiryDate\"] = \"Vehicle_RoadTaxExpRequired\";\r\n      }\r\n    }\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"VehicleInfo_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n\r\n    var returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    if (returnValue)\r\n      if (notification.messageResultDetails.length > 0) {\r\n        this.props.onSaved(\r\n          this.state.modNonFillingVehicle,\r\n          \"update\",\r\n          notification\r\n        );\r\n        return false;\r\n      }\r\n    return returnValue;\r\n  }\r\n\r\n  createVehicle(modNonFillingVehicle) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: modNonFillingVehicle.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modNonFillingVehicle,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"VehicleInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Vehicle_Code\"],\r\n          keyValues: [modNonFillingVehicle.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateVehicle,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnVehicle\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          this.getNonFillingVehicle(false);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnVehicle\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in CreateVehicle:\", result.ErrorList);\r\n        }\r\n\r\n        this.props.onSaved(\r\n          this.state.modNonFillingVehicle,\r\n          \"add\",\r\n          notification\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnVehicle\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(\r\n          this.state.modNonFillingVehicle,\r\n          \"add\",\r\n          notification\r\n        );\r\n      });\r\n  }\r\n  updateVehicle(modNonFillingVehicle) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: modNonFillingVehicle.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modNonFillingVehicle,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"VehicleInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Vehicle_Code\"],\r\n          keyValues: [modNonFillingVehicle.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateVehicle,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnVehicle\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          this.getNonFillingVehicle(false);\r\n        } else {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnVehicle\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in UpdateVehicle:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(\r\n          this.state.modNonFillingVehicle,\r\n          \"update\",\r\n          notification\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(\r\n          this.state.modNonFillingVehicle,\r\n          \"modify\",\r\n          notification\r\n        );\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnVehicle\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n      });\r\n  }\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      let validationErrors = { ...this.state.validationErrors };\r\n      let modNonFillingVehicle = lodash.cloneDeep(\r\n        this.state.modNonFillingVehicle\r\n      );\r\n      validationErrors[propertyName] = error;\r\n      modNonFillingVehicle[propertyName] = value;\r\n      this.setState({ validationErrors, modNonFillingVehicle });\r\n    } catch (error) {\r\n      console.log(\r\n        \"nonFillingVehicleDetailsComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors, modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"NonFillingVehicleDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      carriers: this.state.carrierOptions,\r\n      terminalCodes: this.state.terminalOptions,\r\n    };\r\n\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"Vehicle_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modNonFillingVehicle.LastUpdateTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modNonFillingVehicle.LastUpdateTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"Vehicle_LastActiveTime\",\r\n        fieldValue:\r\n          this.state.modNonFillingVehicle.LastActiveTime !== undefined &&\r\n          this.state.modNonFillingVehicle.LastActiveTime !== null\r\n            ? new Date(\r\n                this.state.modNonFillingVehicle.LastActiveTime\r\n              ).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(\r\n                this.state.modNonFillingVehicle.LastActiveTime\r\n              ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"Vehicle_CreateTime\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modNonFillingVehicle.CreatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modNonFillingVehicle.CreatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.nonFillingVehicle.Code}\r\n            newEntityName=\"NFVehicle_title\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <div className=\"detailsContainer\">\r\n            <div className=\"row\">\r\n              <VehicleBasicFields\r\n                data={this.state.nonFillingVehicle}\r\n                modData={this.state.modNonFillingVehicle}\r\n                validationErrors={this.state.validationErrors}\r\n                listOptions={listOptions}\r\n                onFieldChange={this.handleChange}\r\n                onDateTextChange={this.handleDateTextChange}\r\n                onAllTerminalsChange={this.handleAllTerminalsChange}\r\n                onActiveStatusChange={this.handleActiveStatusChange}\r\n                onCarrierChange={this.handleCarrierChange}\r\n                isEnterpriseNode={\r\n                  this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                }\r\n                attributeValidationErrors={this.state.attributeValidationErrors}\r\n                modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n                onAttributeDataChange={this.handleAttributeDataChange}\r\n              ></VehicleBasicFields>\r\n            </div>\r\n          </div>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.nonFillingVehicle.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnVehicle}\r\n            handleOperation={this.saveNonFillingVehicle}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NonFillingVehicleDetailsComposite);\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Select, Checkbox } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nAssociatedTerminals.propTypes = {\r\n  terminalList: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedTerminal: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  validationError: PropTypes.string,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCheckChange: PropTypes.func.isRequired,\r\n};\r\nAssociatedTerminals.defaultProps = {\r\n  terminalList: [],\r\n  selectedTerminal: [],\r\n  validationError: \"\",\r\n};\r\nexport function AssociatedTerminals({\r\n  terminalList,\r\n  selectedTerminal,\r\n  validationError,\r\n  onFieldChange,\r\n  onCheckChange,\r\n}) {\r\n  //console.log(\"component terminalList\", terminalList);\r\n  if (selectedTerminal === null) selectedTerminal = [];\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div style={{ width: \"80%\" }}>\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"TerminalCodes\")}\r\n              value={selectedTerminal}\r\n              multiple={true}\r\n              options={Utilities.transferListtoOptions(terminalList)}\r\n              onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n              error={t(validationError)}\r\n              disabled={terminalList.length === 0}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"ddlSelectAll\">\r\n            <Checkbox\r\n              label={t(\"Common_All\")}\r\n              checked={\r\n                Array.isArray(selectedTerminal) &&\r\n                selectedTerminal.length === terminalList.length\r\n              }\r\n              onChange={(checked) => onCheckChange(checked)}\r\n            ></Checkbox>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Select, Input, DatePicker, Accordion, Checkbox } from \"@scuf/common\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getCurrentDateFormat,\r\n  getOptionsWithSelect,\r\n} from \"../../../JS/functionalUtilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport { convertStringToCommonDateFormat } from \"../../../JS/Utilities\";\r\n\r\nVehicleBasicInputs.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  modData: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    carriers: PropTypes.array,\r\n    productType: PropTypes.array,\r\n    unitOfWeight: PropTypes.array,\r\n    unitOfVolume: PropTypes.array,\r\n    unitOfDimension: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    hazardousTankerCategoryOptions: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  onActiveStatusChange: PropTypes.func.isRequired,\r\n  onCarrierChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  modAttributeMetaDataList: PropTypes.array.isRequired,\r\n  attributeValidationErrors: PropTypes.array.isRequired,\r\n  onAttributeDataChange: PropTypes.func.isRequired,\r\n  isBonded: PropTypes.bool.isRequired,\r\n  hazardousEnabled: PropTypes.bool,\r\n};\r\nVehicleBasicInputs.defaultProps = {\r\n  listOptions: {\r\n    carriers: [],\r\n    productType: [],\r\n    unitOfWeight: [],\r\n    unitOfVolume: [],\r\n    unitOfDimension: [],\r\n    terminalCodes: [],\r\n    hazardousTankerCategoryOptions: [],\r\n  },\r\n  isEnterpriseNode: false,\r\n  hazardousEnabled: false,\r\n};\r\nexport default function VehicleBasicInputs({\r\n  data,\r\n  modData,\r\n  onFieldChange,\r\n  validationErrors,\r\n  listOptions,\r\n  onDateTextChange,\r\n  onAllTerminalsChange,\r\n  onActiveStatusChange,\r\n  onCarrierChange,\r\n  children,\r\n  isEnterpriseNode,\r\n  modAttributeMetaDataList,\r\n  attributeValidationErrors,\r\n  onAttributeDataChange,\r\n  isBonded,\r\n  hazardousEnabled,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n  const [t] = useTranslation();\r\n  // useEffect(() => {\r\n  //   const unitOfDimension = listOptions.unitOfDimension;\r\n  //   unitOfDimension.unshift({ text: t(\"Common_Select\"), value: null });\r\n  // }, [listOptions.unitOfDimension]);\r\n  return (\r\n    // <TranslationConsumer>\r\n    //   {(t) => (\r\n    <>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Code}\r\n          label={t(\"Vehicle_Code\")}\r\n          indicator=\"required\"\r\n          disabled={data.Code !== \"\"}\r\n          onChange={(data) => onFieldChange(\"Code\", data)}\r\n          error={t(validationErrors.Code)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Name}\r\n          label={t(\"Vehicle_Name\")}\r\n          indicator=\"required\"\r\n          onChange={(data) => onFieldChange(\"Name\", data)}\r\n          error={t(validationErrors.Name, {\r\n            label: t(\"Vehicle_Name\"),\r\n          })}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Description === null ? \"\" : modData.Description}\r\n          label={t(`Vehicle_Desc`)}\r\n          onChange={(data) => onFieldChange(\"Description\", data)}\r\n          error={t(validationErrors.Description)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Select\r\n          fluid\r\n          placeholder={t(\"Common_Select\")}\r\n          label={t(\"Vehicle_CarrierCompany\")}\r\n          value={modData.CarrierCompanyCode}\r\n          options={listOptions.carriers}\r\n          onChange={(data) => {\r\n            onCarrierChange(data);\r\n          }}\r\n          indicator=\"required\"\r\n          error={t(validationErrors.CarrierCompanyCode)}\r\n          reserveSpace={false}\r\n          disabled={data.Code !== \"\"}\r\n          search={true}\r\n          noResultsMessage={t(\"noResultsMessage\")}\r\n        />\r\n      </div>\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_ProductType`)}\r\n            value={modData.ProductType}\r\n            options={listOptions.productType}\r\n            onChange={(data) => {\r\n              onFieldChange(\"ProductType\", data);\r\n            }}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.ProductType)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {children}\r\n\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.LicenseNo === null ? \"\" : modData.LicenseNo}\r\n          label={t(`Vehicle_LicenseNo`)}\r\n          indicator={\r\n            modData.VehicleType !== Constants.VehicleType.NonFillingVehicle\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          onChange={(data) => onFieldChange(\"LicenseNo\", data)}\r\n          error={t(validationErrors.LicenseNo)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            modData.LicenseNoExpiryDate === null\r\n              ? \"\"\r\n              : convertStringToCommonDateFormat(modData.LicenseNoExpiryDate)\r\n          }\r\n          displayFormat={getCurrentDateFormat()}\r\n          label={t(`Vehicle_LicenseExpiry`)}\r\n          showYearSelector=\"true\"\r\n          indicator={\r\n            modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ||\r\n            (modData.VehicleType === Constants.VehicleType.NonFillingVehicle &&\r\n              modData.LicenseNo !== null &&\r\n              modData.LicenseNo.trim() !== \"\")\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          disablePast={true}\r\n          onChange={(data) => onFieldChange(\"LicenseNoExpiryDate\", data)}\r\n          onTextChange={(value, error) => {\r\n            onDateTextChange(\"LicenseNoExpiryDate\", value, error);\r\n          }}\r\n          error={t(validationErrors.LicenseNoExpiryDate)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.RoadTaxNo === null ? \"\" : modData.RoadTaxNo}\r\n          label={t(`Vehicle_RoadTaxNo`)}\r\n          indicator={\r\n            (modData.RoadTaxNo !== null && modData.RoadTaxNo.trim() !== \"\") ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoIssueDate)) ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoExpiryDate))\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          onChange={(data) => onFieldChange(\"RoadTaxNo\", data)}\r\n          error={t(validationErrors.RoadTaxNo)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            modData.RoadTaxNoIssueDate === null\r\n              ? \"\"\r\n              : convertStringToCommonDateFormat(modData.RoadTaxNoIssueDate)\r\n          }\r\n          displayFormat={getCurrentDateFormat()}\r\n          label={t(`Vehicle_RoadTaxIssue`)}\r\n          showYearSelector=\"true\"\r\n          indicator={\r\n            (modData.RoadTaxNo !== null && modData.RoadTaxNo.trim() !== \"\") ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoIssueDate)) ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoExpiryDate))\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          onChange={(data) => onFieldChange(\"RoadTaxNoIssueDate\", data)}\r\n          onTextChange={(value, error) => {\r\n            onDateTextChange(\"RoadTaxNoIssueDate\", value, error);\r\n          }}\r\n          error={t(validationErrors.RoadTaxNoIssueDate)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            modData.RoadTaxNoExpiryDate === null\r\n              ? \"\"\r\n              : convertStringToCommonDateFormat(modData.RoadTaxNoExpiryDate)\r\n          }\r\n          displayFormat={getCurrentDateFormat()}\r\n          label={t(`Vehicle_RoadTaxExpiry`)}\r\n          showYearSelector=\"true\"\r\n          indicator={\r\n            (modData.RoadTaxNo !== null && modData.RoadTaxNo.trim() !== \"\") ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoIssueDate)) ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoExpiryDate))\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          disablePast={true}\r\n          onChange={(data) => onFieldChange(\"RoadTaxNoExpiryDate\", data)}\r\n          onTextChange={(value, error) => {\r\n            onDateTextChange(\"RoadTaxNoExpiryDate\", value, error);\r\n          }}\r\n          error={t(validationErrors.RoadTaxNoExpiryDate)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Owner === null ? \"\" : modData.Owner}\r\n          label={t(`Vehicle_owner`)}\r\n          onChange={(data) => onFieldChange(\"Owner\", data)}\r\n          error={t(validationErrors.Owner)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.TareWeight === null\r\n                ? \"\"\r\n                : modData.TareWeight.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_Tareweight`)}\r\n            indicator={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? null\r\n                : \"required\"\r\n            }\r\n            onChange={(data) => onFieldChange(\"TareWeight\", data)}\r\n            error={t(validationErrors.TareWeight, {\r\n              label: t(\"Vehicle_Tareweight\"),\r\n            })}\r\n            disabled={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? true\r\n                : false\r\n            }\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.MaxLoadableWeight === null\r\n                ? \"\"\r\n                : modData.MaxLoadableWeight.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_MaxLoadWeight`)}\r\n            indicator={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? null\r\n                : \"required\"\r\n            }\r\n            onChange={(data) => onFieldChange(\"MaxLoadableWeight\", data)}\r\n            error={t(validationErrors.MaxLoadableWeight, {\r\n              label: t(\"Vehicle_MaxLoadWeight\"),\r\n            })}\r\n            disabled={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? true\r\n                : false\r\n            }\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_UOMWeight`)}\r\n            value={modData.WeightUOM}\r\n            options={listOptions.unitOfWeight}\r\n            onChange={(data) => {\r\n              onFieldChange(\"WeightUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            indicator={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? null\r\n                : \"required\"\r\n            }\r\n            error={t(validationErrors.WeightUOM)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n            disabled={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? true\r\n                : false\r\n            }\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.Height === null ? \"\" : modData.Height.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_height`)}\r\n            onChange={(data) => onFieldChange(\"Height\", data)}\r\n            error={t(validationErrors.Height, {\r\n              label: t(\"Vehicle_height\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modData.Width === null ? \"\" : modData.Width.toLocaleString()}\r\n            label={t(`Vehicle_Width`)}\r\n            onChange={(data) => onFieldChange(\"Width\", data)}\r\n            error={t(validationErrors.Width, {\r\n              label: t(\"Vehicle_Width\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.Length === null ? \"\" : modData.Length.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_Length`)}\r\n            onChange={(data) => onFieldChange(\"Length\", data)}\r\n            error={t(validationErrors.Length, {\r\n              label: t(\"Vehicle_Length\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_UOMDimemsion`)}\r\n            value={modData.LWHUOM}\r\n            options={getOptionsWithSelect(\r\n              listOptions.unitOfDimension,\r\n              t(\"Common_Select\")\r\n            )}\r\n            onChange={(data) => {\r\n              onFieldChange(\"LWHUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            error={t(validationErrors.LWHUOM)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.MaxLoadableVolume === null\r\n                ? \"\"\r\n                : modData.MaxLoadableVolume.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_MaxLoadVolume`)}\r\n            onChange={(data) => onFieldChange(\"MaxLoadableVolume\", data)}\r\n            error={t(validationErrors.MaxLoadableVolume)}\r\n            reserveSpace={false}\r\n            disabled={true}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_UOMVolume`)}\r\n            value={modData.VolumeUOM}\r\n            options={listOptions.unitOfVolume}\r\n            onChange={(data) => {\r\n              onFieldChange(\"VolumeUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            error={t(validationErrors.VolumeUOM)}\r\n            reserveSpace={false}\r\n            //search={true}\r\n            disabled={true}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {isBonded &&\r\n      modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <div\r\n            className=\"ui single-input fluid disabled\"\r\n            style={{ width: \"30%\", float: \"left\" }}\r\n          >\r\n            <div class=\"ui input-label\">\r\n              <span className=\"input-label-message\">\r\n                {t(\"VehicleInfo_Bonded\")}\r\n              </span>\r\n            </div>\r\n            <div className=\"input-wrap\">\r\n              <Checkbox\r\n                //className=\"LabelEnabled\"\r\n                //label={t(\"ViewShipment_IsForceClosed\")}\r\n                onChange={(data) => onFieldChange(\"IsBonded\", data)}\r\n                checked={modData.IsBonded}\r\n              />\r\n            </div>\r\n          </div>\r\n          {modData.IsBonded &&\r\n          modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n            <div style={{ width: \"70%\", float: \"right\" }}>\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modData.VehicleCustomsBondNo === null\r\n                    ? \"\"\r\n                    : modData.VehicleCustomsBondNo\r\n                }\r\n                onChange={(data) => onFieldChange(\"VehicleCustomsBondNo\", data)}\r\n                label={t(\"VehicleInfo_VehicleCustomsBondNo\")}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.VehicleCustomsBondNo)}\r\n                indicator={modData.IsBonded ? \"required\" : \"\"}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.IsBonded &&\r\n      modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <DatePicker\r\n            fluid\r\n            value={\r\n              modData.BondExpiryDate === null\r\n                ? \"\"\r\n                : convertStringToCommonDateFormat(modData.BondExpiryDate)\r\n            }\r\n            displayFormat={getCurrentDateFormat()}\r\n            label={t(`VehicleInfo_BondExpiryDate`)}\r\n            showYearSelector=\"true\"\r\n            indicator={modData.IsBonded ? \"required\" : \"\"}\r\n            disablePast={true}\r\n            onChange={(data) => onFieldChange(\"BondExpiryDate\", data)}\r\n            onTextChange={(value, error) => {\r\n              onDateTextChange(\"BondExpiryDate\", value, error);\r\n            }}\r\n            error={t(validationErrors.BondExpiryDate)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {hazardousEnabled &&\r\n      modData.VehicleType === Constants.VehicleType.RigidTruck ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div style={{ width: \"48%\" }}>\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"FP_HazardousCategory\")}\r\n                value={\r\n                  modData.HazardousCategory === null\r\n                    ? \"\"\r\n                    : modData.HazardousCategory\r\n                }\r\n                options={getOptionsWithSelect(\r\n                  listOptions.hazardousTankerCategoryOptions,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                onChange={(data) => onFieldChange(\"HazardousCategory\", data)}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.HazardousCategory)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"48%\" }}>\r\n              <DatePicker\r\n                fluid\r\n                value={\r\n                  modData.HazardousLicenseExpiry === null\r\n                    ? \"\"\r\n                    : convertStringToCommonDateFormat(\r\n                        modData.HazardousLicenseExpiry\r\n                      )\r\n                }\r\n                displayFormat={getCurrentDateFormat()}\r\n                label={t(\"DriverInfo_HazardousLicExpiry\")}\r\n                disablePast={true}\r\n                showYearSelector=\"true\"\r\n                onChange={(data) =>\r\n                  onFieldChange(\"HazardousLicenseExpiry\", data)\r\n                }\r\n                onTextChange={(value, error) => {\r\n                  onDateTextChange(\"HazardousLicenseExpiry\", value, error);\r\n                }}\r\n                error={t(validationErrors.HazardousLicenseExpiry)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Select\r\n          fluid\r\n          placeholder={t(\"Common_Select\")}\r\n          label={t(\"Vehicle_Status\")}\r\n          value={modData.Active}\r\n          options={[\r\n            { text: t(\"ViewShipment_Ok\"), value: true },\r\n            { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n          ]}\r\n          onChange={(data) => onActiveStatusChange(data)}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Remarks === null ? \"\" : modData.Remarks}\r\n          label={t(\"Vehicle_Remarks\")}\r\n          onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n          indicator={\r\n            modData.Active !== data.Active ||\r\n            (data.Code !== \"\" &&\r\n              isBonded &&\r\n              modData.IsBonded &&\r\n              modData.IsBonded !== data.IsBonded)\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          error={t(validationErrors.Remarks)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      {isEnterpriseNode ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <AssociatedTerminals\r\n            terminalList={listOptions.terminalCodes}\r\n            selectedTerminal={modData.TerminalCodes}\r\n            error={t(validationErrors.TerminalCodes)}\r\n            onFieldChange={onFieldChange}\r\n            onCheckChange={onAllTerminalsChange}\r\n          ></AssociatedTerminals>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div></div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType === Constants.VehicleType.NonFillingVehicle ? (\r\n        modAttributeMetaDataList.length > 0 ? (\r\n          modAttributeMetaDataList.map((attribute) => (\r\n            <ErrorBoundary>\r\n              <div className=\"col-12 col-md-12 col-lg-12\">\r\n                <Accordion>\r\n                  <Accordion.Content\r\n                    className=\"attributeAccordian\"\r\n                    title={\r\n                      isEnterpriseNode\r\n                        ? attribute.TerminalCode +\r\n                          \" - \" +\r\n                          t(\"Attributes_Header\")\r\n                        : t(\"Attributes_Header\")\r\n                    }\r\n                  >\r\n                    <AttributeDetails\r\n                      selectedAttributeList={attribute.attributeMetaDataList}\r\n                      handleCellDataEdit={onAttributeDataChange}\r\n                      attributeValidationErrors={handleValidationErrorFilter(\r\n                        attributeValidationErrors,\r\n                        attribute.TerminalCode\r\n                      )}\r\n                    ></AttributeDetails>\r\n                  </Accordion.Content>\r\n                </Accordion>\r\n              </div>\r\n            </ErrorBoundary>\r\n          ))\r\n        ) : null\r\n      ) : modAttributeMetaDataList.length > 0 ? (\r\n        <div className=\"col-12 col-md-12 col-lg-12\">\r\n          <Accordion>\r\n            <Accordion.Content\r\n              className=\"attributeAccordian\"\r\n              title={t(\"VEHICLE_Attributes\")}\r\n            >\r\n              {modAttributeMetaDataList.length > 0\r\n                ? modAttributeMetaDataList.map((attribute) => (\r\n                    <ErrorBoundary>\r\n                      <div className=\"col-12 col-md-12 col-lg-12\">\r\n                        <Accordion>\r\n                          <Accordion.Content\r\n                            className=\"attributeAccordian\"\r\n                            title={\r\n                              isEnterpriseNode\r\n                                ? attribute.TerminalCode +\r\n                                  \" - \" +\r\n                                  t(\"Attributes_Header\")\r\n                                : t(\"Attributes_Header\")\r\n                            }\r\n                          >\r\n                            <AttributeDetails\r\n                              selectedAttributeList={\r\n                                attribute.attributeMetaDataList\r\n                              }\r\n                              handleCellDataEdit={onAttributeDataChange}\r\n                              attributeValidationErrors={handleValidationErrorFilter(\r\n                                attributeValidationErrors,\r\n                                attribute.TerminalCode\r\n                              )}\r\n                            ></AttributeDetails>\r\n                          </Accordion.Content>\r\n                        </Accordion>\r\n                      </div>\r\n                    </ErrorBoundary>\r\n                  ))\r\n                : null}\r\n            </Accordion.Content>\r\n          </Accordion>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n    //   )}\r\n    // </TranslationConsumer>\r\n  );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","export const DatesInEntity={\r\n    Driver : [\r\n    \"License1ExpiryDate\",\r\n    \"License1IssueDate\",\r\n    \"License2IssueDate\",\r\n    \"License2ExpiryDate\",\r\n    \"License3IssueDate\",\r\n    \"License3ExpiryDate\",\r\n    \"HazardousLicenseExpiry\"\r\n  ],\r\n  CarrierCompany:[\"PermitExpiryDate\"],\r\n  PrimeMover:[\"RoadTaxNoIssueDate\",\"RoadTaxNoExpiryDate\",\"licenseExpiryDate\"],\r\n  Wagon:[\"LicenseExpiryDate\"],\r\n  Vehicle:[\"LicenseNoIssueDate\",\"LicenseNoExpiryDate\",\r\n  \"RoadTaxNoIssueDate\",\"RoadTaxNoExpiryDate\",\"Bondexpirydate\",\"HazardousLicenseExpiry\"],\r\n  Contract:[\"StartDate\",\"EndDate\"],\r\n  ContractItem:[\"StartDate\",\"EndDate\"],\r\n  Order:[\"OrderStartDate\",\"OrderEndDate\",\"OrderDate\",\"DeliveryDate\"],\r\n  AccessCard:[\"ExpiryDate\",\"IssueDate\",\"PasswordExpiryDate\"],\r\n  Trailer:[\"HazardousLicenseExpiry\"],\r\n  };","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["NonFillingVehicleDetailsComposite","Component","constructor","arguments","state","nonFillingVehicle","modNonFillingVehicle","validationErrors","Utilities","nonFillingVehicleValidationDef","isReadyToRender","carrierOptions","terminalOptions","saveEnabled","attributeMetaDataList","modAttributeMetaDataList","attributeValidationErrors","showAuthenticationLayout","tempNonFillingVehicle","handleCarrierChange","carrier","this","props","userDetails","EntityResult","IsEnterpriseNode","getTerminalsForCarrier","lodash","CarrierCompanyCode","TerminalCodes","setState","undefined","handleActiveStatusChange","value","Active","Remarks","error","console","log","handleChange","propertyName","data","RoadTaxNo","RoadTaxNoExpiryDate","RoadTaxNoIssueDate","terminalSelectionChange","handleReset","handleResetAttributeValidationError","localNodeAttribute","Code","Object","keys","forEach","key","handleAllTerminalsChange","checked","saveNonFillingVehicle","createVehicle","updateVehicle","handleSave","values","every","attributeList","fillDetails","validateSave","convertStringtoDecimal","DateFieldsInEntities","Vehicle","IsWebPortalUser","handleDateTextChange","handleAttributeDataChange","attribute","matchedAttributes","matchedAttributesList","filter","modattribute","TerminalCode","length","Array","isArray","DefaultValue","attributeValidation","handleAuthenticationClose","componentDidMount","IsArchived","isNewVehicle","selectedRow","Common_Code","getAttributes","getCarrierList","selectedShareholder","shareholder","axios","RestAPIs","Constants","ROAD","tokenDetails","tokenInfo","then","response","result","IsSuccess","ErrorList","catch","componentWillReceiveProps","nextProps","getNonFillingVehicle","vehicleAttributeEntity","vehicle","selectedTerminals","attributesTerminalsList","terminal","existitem","find","selectedAttribute","attributeMetaData","Attributevalue","Attributes","baseproductAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","push","emptyNonFillingVehicle","FunctionsList","functionGroups","add","fnVehicle","keyCode","KeyCodes","obj","ShareHolderCode","keyDataCode","modify","ShareholderCode","includes","licDate","Date","LicenseNoIssueDate","getUTCDate","vehiclePrimerInfo","PrimeMoverCode","VehicleCode","PrimeMoverSequence","err","LicenseNo","isNaN","parse","LicenseNoExpiryDate","notification","messageType","message","messageResultDetails","returnValue","onSaved","Entity","keyFields","keyValues","isSuccess","errorMessage","render","listOptions","carriers","terminalCodes","popUpContents","fieldName","fieldValue","LastUpdateTime","toLocaleDateString","toLocaleTimeString","LastActiveTime","CreatedTime","_jsxs","children","_jsx","ErrorBoundary","TMDetailsHeader","entityCode","newEntityName","className","VehicleBasicFields","modData","onFieldChange","onDateTextChange","onAllTerminalsChange","onActiveStatusChange","onCarrierChange","isEnterpriseNode","onAttributeDataChange","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","AssociatedTerminals","_ref","terminalList","selectedTerminal","validationError","onCheckChange","TranslationConsumer","t","style","display","justifyContent","width","Select","fluid","placeholder","label","multiple","options","onChange","disabled","reserveSpace","Checkbox","defaultProps","margin","Popup","element","Icon","marginLeft","root","name","size","position","List","map","content","Content","Button","onClick","float","AttributeDetails","selectedAttributeList","handleCellDataEdit","handleAttributeDateValue","convertAttributeDatetoString","chars","split","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","STRING","IsVisible","Input","DisplayName","indicator","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","toString","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","toLocaleString","VehicleBasicInputs","isBonded","hazardousEnabled","handleValidationErrorFilter","useTranslation","_Fragment","Name","Description","search","noResultsMessage","VehicleType","NonFillingVehicle","ProductType","productType","convertStringToCommonDateFormat","trim","disablePast","Owner","TareWeight","RigidTruck","MaxLoadableWeight","WeightUOM","unitOfWeight","Height","Width","Length","LWHUOM","getOptionsWithSelect","unitOfDimension","MaxLoadableVolume","VolumeUOM","unitOfVolume","class","IsBonded","VehicleCustomsBondNo","BondExpiryDate","HazardousCategory","hazardousTankerCategoryOptions","HazardousLicenseExpiry","text","Accordion","title","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","DatesInEntity","Driver","CarrierCompany","PrimeMover","Wagon","Contract","ContractItem","Order","AccessCard","Trailer","ddlOptions","selectOptionText","option","unshift","language","window","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell"],"sourceRoot":""}