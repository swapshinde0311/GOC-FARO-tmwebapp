{"version":3,"file":"static/js/9551.d00e4fba.chunk.js","mappings":"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","sources":["Components/Composite/Common/TMDetailsKPILayout.jsx","Components/UIBase/Details/FinishedProductDetails.jsx","Components/Composite/Details/FinishedProductDetailsComposite.jsx","Components/UIBase/Common/AssociatedTerminals.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nexport default function TMDetailsKPILayout({\r\n    KPIList,\r\n    pageName,\r\n    rowHeight,\r\n    widgetHeight,\r\n    isDraggable,\r\n    isResizable,\r\n    kpiDisplayTopBreakpoint\r\n}) {\r\n    const [KPIDisplays, setKPIDisplays] = useState(1);\r\n\r\n    const kpiDiv = React.useRef(null);\r\n\r\n    const hideKpis = () => {\r\n        let currentScrollPos = window.pageYOffset;\r\n        let KPIDisplay = KPIDisplays;\r\n\r\n        // hide kpis based on div position to top of the window \r\n        if (kpiDiv.current && kpiDiv.current.getBoundingClientRect().top < kpiDisplayTopBreakpoint) {\r\n            KPIDisplay = 0;\r\n        }\r\n        // show the kpis once at top of the screen\r\n        else if (currentScrollPos === 0) {\r\n            KPIDisplay = 1\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n        setKPIDisplays(KPIDisplay);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\") {\r\n            window.addEventListener(\"scroll\", hideKpis);\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // remove listener on unmount\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", hideKpis)\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={kpiDiv}>\r\n            {KPIDisplays === 1 ? <TranslationConsumer>\r\n                {(t) => (\r\n                    <div style={{ marginTop: \"6px\" }}>\r\n                        <ErrorBoundary>\r\n                            <KPIDashboardLayout\r\n                                kpiList={KPIList}\r\n                                isDraggable={isDraggable}\r\n                                isResizable={isResizable}\r\n                                rowHeight={rowHeight}\r\n                                widgetHeight={widgetHeight}\r\n                                pageName={pageName}\r\n                            ></KPIDashboardLayout>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n                )}\r\n            </TranslationConsumer> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nTMDetailsKPILayout.propTypes = {\r\n    kpiDisplayTopBreakpoint: PropTypes.number\r\n}\r\n\r\nTMDetailsKPILayout.defaultProps = {\r\n    kpiDisplayTopBreakpoint: 100\r\n}","import React from \"react\";\r\nimport {\r\n  Accordion,\r\n  Select,\r\n  Input,\r\n  Icon,\r\n  Checkbox,\r\n  Button,\r\n  ColorPicker,\r\n  Radio,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { getOptionsWithSelect } from \"../../../JS/functionalUtilities\";\r\n\r\nFinishedProductDetails.propTypes = {\r\n  finishedProduct: PropTypes.object.isRequired,\r\n  modFinishedProduct: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  additiveDetails: PropTypes.object.isRequired,\r\n  baseProductDetails: PropTypes.object.isRequired,\r\n  selectedColor: PropTypes.object,\r\n  listOptions: PropTypes.shape({\r\n    productTypeOptions: PropTypes.array,\r\n    densityUOMOptions: PropTypes.array,\r\n    volumeUOMOptions: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    prodFamilyOptions: PropTypes.array,\r\n    hazardousProductCategoryOptions: PropTypes.array,\r\n  }).isRequired,\r\n  modAssociations: PropTypes.array.isRequired,\r\n  expandedRows: PropTypes.array.isRequired,\r\n  selectedAssociationRows: PropTypes.array.isRequired,\r\n  onColorPickerChange: PropTypes.func.isRequired,\r\n  onColorPickerClose: PropTypes.func.isRequired,\r\n  onApplyColor: PropTypes.func.isRequired,\r\n  onChangeColor: PropTypes.func.isRequired,\r\n  toggleExpand: PropTypes.func.isRequired,\r\n  handleAddAssociation: PropTypes.func.isRequired,\r\n  handleDeleteAssociation: PropTypes.func.isRequired,\r\n  handleAddAdditive: PropTypes.func.isRequired,\r\n  handleDeleteAdditive: PropTypes.func.isRequired,\r\n  handleRowSelectionChange: PropTypes.func.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  bindAdditives: PropTypes.func.isRequired,\r\n  onActiveStatusChange: PropTypes.func.isRequired,\r\n  onHexValueChange: PropTypes.func.isRequired,\r\n  colorPickerState: PropTypes.bool,\r\n  isValidHex: PropTypes.bool.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  isDCHEnabled: PropTypes.bool.isRequired,\r\n  isValidShareholderSysExtCode: PropTypes.bool.isRequired,\r\n  hazardousEnabled: PropTypes.bool,\r\n};\r\n\r\nFinishedProductDetails.defaultProps = {\r\n  listOptions: {\r\n    productTypeOptions: [],\r\n    densityUOMOptions: [],\r\n    volumeUOMOptions: [],\r\n    terminalCodes: [],\r\n    prodFamilyOptions: [],\r\n    hazardousProductCategoryOptions: [],\r\n  },\r\n  modAssociations: [],\r\n  isEnterpriseNode: false,\r\n  isDCHEnabled: false,\r\n  isValidShareholderSysExtCode: false,\r\n  hazardousEnabled: false,\r\n};\r\n\r\nexport default function FinishedProductDetails({\r\n  finishedProduct,\r\n  modFinishedProduct,\r\n  validationErrors,\r\n  additiveDetails,\r\n  baseProductDetails,\r\n  selectedColor,\r\n  listOptions,\r\n  modAssociations,\r\n  expandedRows,\r\n  selectedAssociationRows,\r\n  onColorPickerChange,\r\n  onColorPickerClose,\r\n  onApplyColor,\r\n  onChangeColor,\r\n  toggleExpand,\r\n  handleAddAssociation,\r\n  handleDeleteAssociation,\r\n  handleAddAdditive,\r\n  handleDeleteAdditive,\r\n  handleRowSelectionChange,\r\n  handleCellDataEdit,\r\n  onFieldChange,\r\n  onAllTerminalsChange,\r\n  onActiveStatusChange,\r\n  colorPickerState,\r\n  onHexValueChange,\r\n  isValidHex,\r\n  isEnterpriseNode,\r\n  isDCHEnabled,\r\n  isValidShareholderSysExtCode,\r\n  modAttributeMetaDataList,\r\n  attributeValidationErrors,\r\n  onAttributeDataChange,\r\n  hazardousEnabled,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n  const [t] = useTranslation();\r\n  const expanderTemplate = (data) => {\r\n    const open =\r\n      expandedRows.findIndex((x) => x.SeqNumber === data.rowData.SeqNumber) >= 0\r\n        ? true\r\n        : false;\r\n    return (\r\n      <div\r\n        onClick={() => toggleExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        <span>{open ? t(\"Hide_Additives\") : t(\"View_Additives\")}</span>\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"caret-up\" : \"caret-down\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const deleteAdditive = (data) => {\r\n    return (\r\n      <div\r\n        onClick={() => handleDeleteAdditive(data.rowData)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        <span>{t(\"FinishedProductList_Delete\")}</span>\r\n        <Icon root=\"common\" name=\"delete\" className=\"margin_l10\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  function rowExpansionTemplate(data) {\r\n    return Array.isArray(data.addtiveAssociations) &&\r\n      data.addtiveAssociations.length > 0 ? (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable data={data.addtiveAssociations}>\r\n          <DataTable.Column\r\n            className=\"expandedchildColumn\"\r\n            initialWidth=\"10px\"\r\n          />\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"AdditiveCode\"\r\n            field=\"AdditiveCode\"\r\n            header={t(\"UnmatchedLocalTrans_Additive\")}\r\n            editable={true}\r\n            editFieldType=\"text\"\r\n            customEditRenderer={handleAdvDropdownEdit}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            key=\"Quantity\"\r\n            field=\"Quantity\"\r\n            header={t(\"FinishedProductInfo_Quantity\")}\r\n            editable={true}\r\n            editFieldType=\"text\"\r\n            customEditRenderer={handleCustomEditTextBox}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"compColHeight\"\r\n            initialWidth=\"200px\"\r\n            header={\r\n              <div\r\n                onClick={() => handleAddAdditive(data)}\r\n                className=\"compartmentIcon gridButtonFontColor\"\r\n              >\r\n                <span>{t(\"FinishedProduct_Add_Additive\")}</span>\r\n                <Icon\r\n                  root=\"common\"\r\n                  name=\"badge-plus\"\r\n                  size=\"small\"\r\n                  className=\"margin_l10\"\r\n                />\r\n              </div>\r\n            }\r\n            //header={editableTemplate}\r\n            renderer={deleteAdditive}\r\n          />\r\n        </DataTable>\r\n      </div>\r\n    ) : (\r\n      <div className=\"compartmentIcon\">\r\n        <div className=\"gridButtonAlignLeft\">\r\n          {t(\"CustomerInventory_NoRecordsFound\")}\r\n        </div>\r\n        <div\r\n          onClick={() => handleAddAdditive(data)}\r\n          className=\"gridButtonFontColor\"\r\n        >\r\n          <span>{t(\"FinishedProduct_Add_Additive\")}</span>\r\n          <Icon\r\n            root=\"common\"\r\n            name=\"badge-plus\"\r\n            size=\"small\"\r\n            className=\"margin_l10 margin_r30\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleBPDropdownEdit = (cellData) => {\r\n    let dropDownOptions = [];\r\n    if (modFinishedProduct.ProductType === \"ALLPROD\") {\r\n      Object.keys(baseProductDetails).forEach((prodType) => {\r\n        if (\r\n          baseProductDetails[prodType] !== undefined &&\r\n          Array.isArray(baseProductDetails[prodType])\r\n        ) {\r\n          baseProductDetails[prodType].forEach((baseProduct) =>\r\n            dropDownOptions.push({ text: baseProduct, value: baseProduct })\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      if (\r\n        baseProductDetails[modFinishedProduct.ProductType] !== undefined &&\r\n        Array.isArray(baseProductDetails[modFinishedProduct.ProductType])\r\n      ) {\r\n        baseProductDetails[modFinishedProduct.ProductType].forEach(\r\n          (baseProduct) =>\r\n            dropDownOptions.push({ text: baseProduct, value: baseProduct })\r\n        );\r\n      }\r\n      if (\r\n        baseProductDetails[\"ALLPROD\"] !== undefined &&\r\n        Array.isArray(baseProductDetails[\"ALLPROD\"])\r\n      ) {\r\n        baseProductDetails[\"ALLPROD\"].forEach((baseProduct) =>\r\n          dropDownOptions.push({ text: baseProduct, value: baseProduct })\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        placeholder=\"Select\"\r\n        value={modAssociations[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownOptions}\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleAdvDropdownEdit = (cellData) => {\r\n    try {\r\n      let dropDownOptions = [];\r\n      let bpIndex = 0;\r\n      bpIndex = modAssociations.findIndex(\r\n        (item) => item.SeqNumber === cellData.rowData.baseSeqNumber\r\n      );\r\n      let bPProdType = \"\";\r\n      // Finding the ProdType of the BaseProduct\r\n      Object.keys(baseProductDetails).forEach((prodType) => {\r\n        let prodIndex = baseProductDetails[prodType].findIndex(\r\n          (bp) => bp === cellData.rowData.BaseProductCode\r\n        );\r\n        if (prodIndex >= 0) {\r\n          bPProdType = prodType;\r\n        }\r\n      });\r\n\r\n      if (bPProdType === \"ALLPROD\") {\r\n        if (modFinishedProduct.ProductType === \"ALLPROD\") {\r\n          Object.keys(additiveDetails).forEach((prodType) => {\r\n            if (\r\n              additiveDetails[prodType] !== undefined &&\r\n              Array.isArray(additiveDetails[prodType])\r\n            ) {\r\n              additiveDetails[prodType].forEach((advProduct) =>\r\n                dropDownOptions.push({ text: advProduct, value: advProduct })\r\n              );\r\n            }\r\n          });\r\n        } else {\r\n          if (\r\n            additiveDetails[modFinishedProduct.ProductType] !== undefined &&\r\n            Array.isArray(additiveDetails[modFinishedProduct.ProductType])\r\n          ) {\r\n            additiveDetails[modFinishedProduct.ProductType].forEach(\r\n              (advProduct) =>\r\n                dropDownOptions.push({ text: advProduct, value: advProduct })\r\n            );\r\n          }\r\n          if (\r\n            additiveDetails[\"ALLPROD\"] !== undefined &&\r\n            Array.isArray(additiveDetails[\"ALLPROD\"])\r\n          ) {\r\n            additiveDetails[\"ALLPROD\"].forEach((advProduct) =>\r\n              dropDownOptions.push({ text: advProduct, value: advProduct })\r\n            );\r\n          }\r\n        }\r\n      } else {\r\n        if (\r\n          additiveDetails[bPProdType] !== undefined &&\r\n          Array.isArray(additiveDetails[bPProdType])\r\n        ) {\r\n          additiveDetails[bPProdType].forEach((advProduct) =>\r\n            dropDownOptions.push({ text: advProduct, value: advProduct })\r\n          );\r\n        }\r\n        if (\r\n          additiveDetails[\"ALLPROD\"] !== undefined &&\r\n          Array.isArray(additiveDetails[\"ALLPROD\"])\r\n        ) {\r\n          additiveDetails[\"ALLPROD\"].forEach((advProduct) =>\r\n            dropDownOptions.push({ text: advProduct, value: advProduct })\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <Select\r\n          className=\"selectDropwdown\"\r\n          placeholder=\"Select\"\r\n          value={\r\n            modAssociations[bpIndex].addtiveAssociations[cellData.rowIndex][\r\n              cellData.field\r\n            ]\r\n          }\r\n          fluid\r\n          options={dropDownOptions}\r\n          onChange={(value) => handleCellDataEdit(value, cellData)}\r\n          indicator=\"required\"\r\n          reserveSpace={false}\r\n          search={true}\r\n        />\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"FinishedProductDetails:Error occured on handleAdvDropdownEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleCustomEditTextBox = (cellData) => {\r\n    let bpIndex = 0;\r\n    if (cellData.rowData.AdditiveCode !== null) {\r\n      bpIndex = modAssociations.findIndex(\r\n        (item) => item.BaseProductCode === cellData.rowData.BaseProductCode\r\n      );\r\n    }\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={\r\n          cellData.rowData.AdditiveCode === null\r\n            ? modAssociations[cellData.rowIndex][cellData.field]\r\n            : modAssociations[bpIndex].addtiveAssociations[cellData.rowIndex][\r\n                cellData.field\r\n              ]\r\n        }\r\n        onChange={(value) => handleCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modFinishedProduct.Code}\r\n                indicator=\"required\"\r\n                disabled={finishedProduct.Code !== \"\"}\r\n                onChange={(data) => onFieldChange(\"Code\", data)}\r\n                label={t(\"FinishedProductList_Code\")}\r\n                error={t(validationErrors.Code)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modFinishedProduct.Name}\r\n                onChange={(data) => onFieldChange(\"Name\", data)}\r\n                indicator=\"required\"\r\n                label={t(\"FinishedProductList_Name\")}\r\n                error={t(validationErrors.Name)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modFinishedProduct.AliasName === null\r\n                    ? \"\"\r\n                    : modFinishedProduct.AliasName\r\n                }\r\n                onChange={(data) => onFieldChange(\"AliasName\", data)}\r\n                label={t(\"FinishedProductList_AliasName\")}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.AliasName)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"FinishedProductList_ProductType\")}\r\n                value={modFinishedProduct.ProductType}\r\n                options={listOptions.productTypeOptions}\r\n                onChange={(data) => onFieldChange(\"ProductType\", data)}\r\n                indicator=\"required\"\r\n                error={t(validationErrors.ProductType)}\r\n                reserveSpace={false}\r\n                search={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                className={`color-picker-input ${\r\n                  selectedColor && selectedColor !== \"#ffffff\"\r\n                    ? \"color-selected\"\r\n                    : \"\"\r\n                }`}\r\n                label={t(\"FinishedProdut_colorCode\")}\r\n                onFocus={() => onColorPickerChange()}\r\n                value={\r\n                  modFinishedProduct.Color === null\r\n                    ? \"\"\r\n                    : modFinishedProduct.Color\r\n                }\r\n                style={{ backgroundColor: selectedColor }}\r\n                reserveSpace={false}\r\n                error={isValidHex ? \"\" : t(validationErrors.Color)}\r\n                onChange={(color) => onHexValueChange(color)}\r\n              />\r\n\r\n              {colorPickerState ? (\r\n                <>\r\n                  <ColorPicker\r\n                    onApply={() => onApplyColor({ hex: selectedColor })}\r\n                    onChange={(color) => onChangeColor(color)}\r\n                    value={selectedColor}\r\n                  />\r\n                  <Button\r\n                    type=\"primary\"\r\n                    iconRoot=\"common\"\r\n                    icon=\"close\"\r\n                    className=\"color-picker-close\"\r\n                    content=\"\"\r\n                    onClick={() => onColorPickerClose()}\r\n                    iconPosition=\"left\"\r\n                  />\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modFinishedProduct.Description === null\r\n                    ? \"\"\r\n                    : modFinishedProduct.Description\r\n                }\r\n                onChange={(data) => onFieldChange(\"Description\", data)}\r\n                label={t(\"FinishedProductList_Description\")}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.Description)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4 checkboxSelect\">\r\n              <Checkbox\r\n                label={t(\"BaseProductInfo_ExportGrade\")}\r\n                checked={modFinishedProduct.ExportGrade}\r\n                disabled={false}\r\n                onChange={(data) => onFieldChange(\"ExportGrade\", data)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <div style={{ width: \"48%\" }}>\r\n                  <Input\r\n                    fluid\r\n                    value={\r\n                      modFinishedProduct.Density === null\r\n                        ? \"\"\r\n                        : modFinishedProduct.Density.toLocaleString()\r\n                    }\r\n                    disabled={modFinishedProduct.ExportGrade ? false : true}\r\n                    indicator={modFinishedProduct.ExportGrade ? \"required\" : \"\"}\r\n                    onChange={(data) => onFieldChange(\"Density\", data)}\r\n                    label={t(\"BaseProductInfo_Density\")}\r\n                    error={\r\n                      modFinishedProduct.ExportGrade\r\n                        ? t(validationErrors.Density)\r\n                        : \"\"\r\n                    }\r\n                    reserveSpace={false}\r\n                  />\r\n                </div>{\" \"}\r\n                <div style={{ width: \"48%\" }}>\r\n                  <Select\r\n                    fluid\r\n                    placeholder={t(\"Common_Select\")}\r\n                    label={t(\"BaseProductInfox_UOM\")}\r\n                    value={modFinishedProduct.DensityUOM}\r\n                    options={listOptions.densityUOMOptions}\r\n                    disabled={modFinishedProduct.ExportGrade ? false : true}\r\n                    onChange={(data) => onFieldChange(\"DensityUOM\", data)}\r\n                    indicator={modFinishedProduct.ExportGrade ? \"required\" : \"\"}\r\n                    reserveSpace={false}\r\n                    search={true}\r\n                    noResultsMessage={t(\"noResultsMessage\")}\r\n                    error={\r\n                      modFinishedProduct.ExportGrade\r\n                        ? t(validationErrors.DensityUOM)\r\n                        : \"\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {isDCHEnabled && isValidShareholderSysExtCode ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder={t(\"Common_Select\")}\r\n                  label={t(\"FP_ProdFamily\")}\r\n                  value={modFinishedProduct.ProductFamilyCode}\r\n                  options={listOptions.prodFamilyOptions}\r\n                  onChange={(data) => onFieldChange(\"ProductFamilyCode\", data)}\r\n                  indicator=\"required\"\r\n                  reserveSpace={false}\r\n                  search={true}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                  error={t(validationErrors.ProductFamilyCode)}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {hazardousEnabled ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <div style={{ width: \"48%\" }}>\r\n                    <Select\r\n                      fluid\r\n                      placeholder={t(\"Common_Select\")}\r\n                      label={t(\"FP_HazardousCategory\")}\r\n                      value={\r\n                        modFinishedProduct.HazardousCategory === null\r\n                          ? \"\"\r\n                          : modFinishedProduct.HazardousCategory\r\n                      }\r\n                      options={getOptionsWithSelect(\r\n                        listOptions.hazardousProductCategoryOptions,\r\n                        t(\"Common_Select\")\r\n                      )}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"HazardousCategory\", data)\r\n                      }\r\n                      reserveSpace={false}\r\n                      search={true}\r\n                      noResultsMessage={t(\"noResultsMessage\")}\r\n                      error={t(validationErrors.HazardousCategory)}\r\n                    />\r\n                  </div>\r\n                  <div style={{ width: \"48%\" }}>\r\n                    <Input\r\n                      // placeholder=\"Input\"\r\n                      fluid\r\n                      label={t(\"FP_SFLPercentage\")}\r\n                      value={\r\n                        modFinishedProduct.SFLPercent === null\r\n                          ? \"\"\r\n                          : modFinishedProduct.SFLPercent.toLocaleString()\r\n                      }\r\n                      reserveSpace={false}\r\n                      onChange={(data) => onFieldChange(\"SFLPercent\", data)}\r\n                      error={t(validationErrors.SFLPercent)}\r\n                      indicator={\r\n                        modFinishedProduct.HazardousCategory !== null &&\r\n                        modFinishedProduct.HazardousCategory !== \"\"\r\n                          ? \"required\"\r\n                          : \"\"\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {hazardousEnabled ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Input\r\n                  // placeholder=\"Input\"\r\n                  fluid\r\n                  label={t(\"FP_HazardousNumber\")}\r\n                  value={\r\n                    modFinishedProduct.HazardousNumber === null\r\n                      ? \"\"\r\n                      : modFinishedProduct.HazardousNumber\r\n                  }\r\n                  reserveSpace={false}\r\n                  onChange={(data) => onFieldChange(\"HazardousNumber\", data)}\r\n                  error={t(validationErrors.HazardousNumber)}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modFinishedProduct.ToleranceQuantity === null\r\n                    ? \"\"\r\n                    : modFinishedProduct.ToleranceQuantity.toLocaleString()\r\n                }\r\n                label={t(\"FinishedProductInfo_ToleranceQuantityRoad\")}\r\n                reserveSpace={false}\r\n                onChange={(data) => onFieldChange(\"ToleranceQuantity\", data)}\r\n                error={t(validationErrors.ToleranceQuantity)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modFinishedProduct.ToleranceQuantityForMarine === null\r\n                    ? \"\"\r\n                    : modFinishedProduct.ToleranceQuantityForMarine.toLocaleString()\r\n                }\r\n                label={t(\"FinishedProductInfo_ToleranceQuantityMarine\")}\r\n                reserveSpace={false}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"ToleranceQuantityForMarine\", data)\r\n                }\r\n                error={t(validationErrors.ToleranceQuantityForMarine)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modFinishedProduct.ToleranceQuantityForRail === null\r\n                    ? \"\"\r\n                    : modFinishedProduct.ToleranceQuantityForRail.toLocaleString()\r\n                }\r\n                label={t(\"FinishedProductInfo_ToleranceQuantityRail\")}\r\n                reserveSpace={false}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"ToleranceQuantityForRail\", data)\r\n                }\r\n                error={t(validationErrors.ToleranceQuantityForRail)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modFinishedProduct.ToleranceQuantityForPipeline === null\r\n                    ? \"\"\r\n                    : modFinishedProduct.ToleranceQuantityForPipeline.toLocaleString()\r\n                }\r\n                label={t(\"FinishedProductInfo_ToleranceQuantityPipeline\")}\r\n                reserveSpace={false}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"ToleranceQuantityForPipeline\", data)\r\n                }\r\n                error={t(validationErrors.ToleranceQuantityForPipeline)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"ProductType_ToleranceQuantityUOM\")}\r\n                value={modFinishedProduct.ToleranceQuantityUOM}\r\n                options={listOptions.volumeUOMOptions}\r\n                onChange={(data) => onFieldChange(\"ToleranceQuantityUOM\", data)}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.ToleranceQuantityUOM)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"Cust_Status\")}\r\n                value={modFinishedProduct.Active}\r\n                options={[\r\n                  { text: t(\"ViewShipment_Ok\"), value: true },\r\n                  { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                ]}\r\n                onChange={(data) => onActiveStatusChange(data)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modFinishedProduct.Remarks === null\r\n                    ? \"\"\r\n                    : modFinishedProduct.Remarks\r\n                }\r\n                label={t(\"Cust_Remarks\")}\r\n                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                reserveSpace={false}\r\n                indicator={\r\n                  modFinishedProduct.Active !== finishedProduct.Active\r\n                    ? \"required\"\r\n                    : \"\"\r\n                }\r\n                error={t(validationErrors.Remarks)}\r\n              />\r\n            </div>\r\n\r\n            {isEnterpriseNode ? (\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <AssociatedTerminals\r\n                  terminalList={listOptions.terminalCodes}\r\n                  selectedTerminal={modFinishedProduct.TerminalCodes}\r\n                  error=\"\"\r\n                  onFieldChange={onFieldChange}\r\n                  onCheckChange={onAllTerminalsChange}\r\n                ></AssociatedTerminals>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <p>{t(\"FP_CaptureLoadingDetails\")}</p>\r\n              <Radio\r\n                label={t(\"ViewMarineUnloadingDetails_BCUCode\")}\r\n                checked={\r\n                  modFinishedProduct.WeighBridgeWeighingRequired ? false : true\r\n                }\r\n                onChange={() =>\r\n                  onFieldChange(\"WeighBridgeWeighingRequired\", false)\r\n                }\r\n              />\r\n              <Radio\r\n                label={t(\"FP_weighBridge\")}\r\n                checked={\r\n                  modFinishedProduct.WeighBridgeWeighingRequired ? true : false\r\n                }\r\n                onChange={() =>\r\n                  onFieldChange(\"WeighBridgeWeighingRequired\", true)\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <p>{t(\"FP_MeasurementType\")}</p>\r\n              <Radio\r\n                label={t(\"LoadType_Volumetric\")}\r\n                checked={modFinishedProduct.WeighingRequired ? false : true}\r\n                onChange={() => onFieldChange(\"WeighingRequired\", false)}\r\n                disabled={\r\n                  modFinishedProduct.WeighBridgeWeighingRequired ? true : false\r\n                }\r\n              />\r\n              <Radio\r\n                label={t(\"FB_weighBased\")}\r\n                checked={modFinishedProduct.WeighingRequired ? true : false}\r\n                onChange={() => onFieldChange(\"WeighingRequired\", true)}\r\n              />\r\n            </div>\r\n          </div>\r\n          {modAttributeMetaDataList.length > 0\r\n            ? modAttributeMetaDataList.map((attire) => (\r\n                <ErrorBoundary>\r\n                  <Accordion>\r\n                    <Accordion.Content\r\n                      className=\"attributeAccordian\"\r\n                      title={\r\n                        isEnterpriseNode\r\n                          ? attire.TerminalCode + \" - \" + t(\"Attributes_Header\")\r\n                          : t(\"Attributes_Header\")\r\n                      }\r\n                    >\r\n                      <AttributeDetails\r\n                        selectedAttributeList={attire.attributeMetaDataList}\r\n                        handleCellDataEdit={onAttributeDataChange}\r\n                        attributeValidationErrors={handleValidationErrorFilter(\r\n                          attributeValidationErrors,\r\n                          attire.TerminalCode\r\n                        )}\r\n                      ></AttributeDetails>\r\n                    </Accordion.Content>\r\n                  </Accordion>\r\n                </ErrorBoundary>\r\n              ))\r\n            : null}\r\n          <div className=\"row\">\r\n            <div className=\"col-12 detailsTable havingchildTable\">\r\n              <DataTable\r\n                data={modAssociations}\r\n                rowExpansionTemplate={rowExpansionTemplate}\r\n                expandedRows={expandedRows}\r\n                scrollable={true}\r\n                scrollHeight=\"320px\"\r\n                selectionMode=\"multiple\"\r\n                selection={selectedAssociationRows}\r\n                onSelectionChange={handleRowSelectionChange}\r\n              >\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"BaseProductCode\"\r\n                  field=\"BaseProductCode\"\r\n                  header={t(\"FinishedProductInfo_BaseProduct\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={handleBPDropdownEdit}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"Quantity\"\r\n                  field=\"Quantity\"\r\n                  header={t(\"FinishedProductInfo_Quantity\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={handleCustomEditTextBox}\r\n                ></DataTable.Column>\r\n                <DataTable.Column\r\n                  className=\"expandedColumn\"\r\n                  initialWidth=\"200px\"\r\n                  field=\"BaseProductCode\"\r\n                  header={\r\n                    <div className=\"compartmentIconContainer gridButtonFontColor\">\r\n                      <div\r\n                        onClick={handleAddAssociation}\r\n                        className=\"compartmentIcon\"\r\n                      >\r\n                        <div>\r\n                          <h5 className=\"font14\">\r\n                            {t(\"FinishedProductInfo_Add\")}\r\n                          </h5>\r\n                        </div>\r\n                        <div className=\"margin_l10\">\r\n                          <Icon root=\"common\" name=\"badge-plus\" size=\"small\" />\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        onClick={handleDeleteAssociation}\r\n                        className=\"compartmentIcon\"\r\n                      >\r\n                        <div className=\"margin_l10\">\r\n                          <h5 className=\"font14\">\r\n                            {t(\"FinishedProductList_Delete\")}\r\n                          </h5>\r\n                        </div>\r\n                        <div className=\"margin_l10\">\r\n                          <Icon root=\"common\" name=\"delete\" size=\"small\" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                  renderer={expanderTemplate}\r\n                />\r\n              </DataTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { emptyFinishedProduct } from \"../../../JS/DefaultEntities\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { connect } from \"react-redux\";\r\nimport lodash from \"lodash\";\r\nimport axios from \"axios\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport FinishedProductDetails from \"../../UIBase/Details/FinishedProductDetails\";\r\nimport { functionGroups, fnFinishedProduct,fnKPIInformation } from \"../../../JS/FunctionGroups\";\r\nimport { finishedProductValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { fPAssociationInfoValidationDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport { finishedProductAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { kpiFinishedProductDetail } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nclass FinishedProductDetailsComposite extends Component {\r\n  state = {\r\n    finishedProduct: {},\r\n    baseProductDetails: {},\r\n    additiveDetails: {},\r\n    modFinishedProduct: {},\r\n    appliedColor: \"\",\r\n    selColor: \"\",\r\n    modAssociations: [],\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      finishedProductValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    showColorPicker: false,\r\n    isValidHex: true,\r\n    productTypeOptions: [],\r\n    densityUOMOptions: [],\r\n    volumeUOMOptions: [],\r\n    expandedRows: [],\r\n    selectedAssociationRows: [],\r\n    prodFamilyOptions: [],\r\n    isValidShareholderSysExtCode: false,\r\n    attributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    finishedProductKPIList: [],\r\n    hazardousEnabled: false,\r\n    hazardousProductCategoryOptions: [],\r\n    showAuthenticationLayout: false,\r\n    tempFinishedProduct: {},\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.finishedProduct.Code !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getFinishedProduct(nextProps.selectedRow);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"FinishedProductDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList.finishedproduct) &&\r\n        attributeMetaDataList.finishedproduct.length > 0\r\n      ) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.finishedproduct[0].TerminalCode,\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"DriverDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  getAttributes(finishedProductRow) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [finishedProductAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.finishedproduct\r\n                ),\r\n            },\r\n            () => this.getFinishedProduct(finishedProductRow)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      if (this.props.userDetails.EntityResult.IsDCHEnabled) {\r\n        this.GetProdFamilyList();\r\n        this.getShareholderDetail(this.props.selectedShareholder);\r\n      }\r\n      this.getHazardousLookup();\r\n      this.getBaseProductList();\r\n      this.getAdditivesList();\r\n      // this.getFinishedProduct(this.props.selectedRow);\r\n      this.getAttributes(this.props.selectedRow);\r\n      this.getProductTypes();\r\n      this.GetUOMList();\r\n      // this.getHazardousCategories();\r\n    } catch (error) {\r\n      console.log(\r\n        \"FinishedProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modAttributeMetaDataList = [];\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n      var modFinishedProduct = lodash.cloneDeep(this.state.modFinishedProduct);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        });\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.finishedproduct.forEach(function (\r\n            attributeMetaData\r\n          ) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue = modFinishedProduct.Attributes.find(\r\n                (finishedProcductAttribute) => {\r\n                  return finishedProcductAttribute.TerminalCode === terminal;\r\n                }\r\n              );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modAttributeMetaDataList = [];\r\n      modAttributeMetaDataList = attributesTerminalsList;\r\n      modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modAttributeMetaDataList\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n\r\n      this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"FinishedProductDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getShareholderDetail(shareHolder) {\r\n    //console.log(\"DCH\", this.props.userDetails.EntityResult.IsDCHEnabled);\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shareHolder,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shareHolder,\r\n      keyDataCode: KeyCodes.shareholderCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetShareholder,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            isValidShareholderSysExtCode:\r\n              result.EntityResult.ExternalSystemCode > 1 ? true : false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isValidShareholderSysExtCode: false,\r\n          });\r\n          console.log(\"Error in GetDestination:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error while getting Shareholder detail:\",\r\n          error,\r\n          shareHolder\r\n        );\r\n      });\r\n    //console.log(\"Shareholder state : \", this.state.isValidShareholderSysExtCode)\r\n  }\r\n\r\n  createFinishedProduct(modFinishedProduct) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.finishedProductCode,\r\n        value: modFinishedProduct.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.finishedProductCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modFinishedProduct,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"FinishedProduct_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"FinishedProductList_Code\"],\r\n          keyValues: [modFinishedProduct.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateFinishedProduct,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnFinishedProduct\r\n              ),\r\n              expandedRows: [],\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () =>\r\n              this.getFinishedProduct({ Common_Code: modFinishedProduct.Code })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          modFinishedProduct.Color = \"#\" + modFinishedProduct.Color;\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnFinishedProduct,\r\n              modFinishedProduct\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in CreateFinishedProduct:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modFinishedProduct, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        modFinishedProduct.Color = \"#\" + modFinishedProduct.Color;\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnFinishedProduct,\r\n            modFinishedProduct\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modFinishedProduct, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  fillDetails(modAssociations) {\r\n    let AssociationDetails = [];\r\n    try {\r\n      if (Array.isArray(modAssociations)) {\r\n        modAssociations.forEach((association) => {\r\n          if (\r\n            !(\r\n              association.BaseProductCode === null ||\r\n              association.BaseProductCode === \"\"\r\n            ) ||\r\n            !(association.Quantity === null || association.Quantity === \"\")\r\n          ) {\r\n            AssociationDetails.push({\r\n              AdditiveCode: association.AdditiveCode,\r\n              BaseProductCode: association.BaseProductCode,\r\n              FinishedProductCode: this.state.modFinishedProduct.Code,\r\n              Quantity: association.Quantity,\r\n              SequenceNumber: association.SeqNumber,\r\n              Version: association.Version,\r\n            });\r\n          }\r\n\r\n          if (Array.isArray(association.addtiveAssociations)) {\r\n            association.addtiveAssociations.forEach((addv) => {\r\n              if (\r\n                !(addv.AdditiveCode === null || addv.AdditiveCode === \"\") ||\r\n                !(addv.Quantity === null || addv.Quantity === \"\")\r\n              ) {\r\n                AssociationDetails.push({\r\n                  AdditiveCode: addv.AdditiveCode,\r\n                  BaseProductCode: addv.BaseProductCode,\r\n                  FinishedProductCode: this.state.modFinishedProduct.Code,\r\n                  Quantity: addv.Quantity,\r\n                  SequenceNumber: addv.SequenceNumber,\r\n                  Version: addv.Version,\r\n                });\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error while making Finished Product body:\", error);\r\n    }\r\n    return AssociationDetails;\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modFinishedProduct = lodash.cloneDeep(\r\n        this.state.modFinishedProduct\r\n      );\r\n      if (propertyName === \"WeighBridgeWeighingRequired\" && data === true)\r\n        modFinishedProduct.WeighingRequired = true;\r\n      modFinishedProduct[propertyName] = data;\r\n\r\n      if (propertyName === \"ProductType\") {\r\n        this.handleProductTypeChange(data);\r\n      }\r\n\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      if (finishedProductValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          finishedProductValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n      this.setState({ validationErrors, modFinishedProduct });\r\n\r\n      if (propertyName === \"TerminalCodes\") {\r\n        this.terminalSelectionChange(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"FinishedProductDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleProductTypeChange = (prodType) => {\r\n    try {\r\n      var modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n      const baseProductDetails = lodash.cloneDeep(\r\n        this.state.baseProductDetails\r\n      );\r\n      if (prodType !== \"ALLPROD\") {\r\n        if (baseProductDetails !== undefined && baseProductDetails !== null) {\r\n          var bpList = baseProductDetails[prodType];\r\n          if (bpList === undefined || bpList === null) bpList = [];\r\n          (baseProductDetails[\"ALLPROD\"] || []).forEach((bp) => {\r\n            bpList.push(bp);\r\n          });\r\n\r\n          modAssociations = modAssociations.filter(\r\n            (x) => bpList.indexOf(x.BaseProductCode) >= 0\r\n          );\r\n        }\r\n      }\r\n      this.setState({ modAssociations });\r\n    } catch (error) {\r\n      console.log(\r\n        \"FinishedProductDetailsComposite : Error in handleProductTypeChange\"\r\n      );\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    try {\r\n      let modAssociations = [];\r\n      if (this.state.finishedProduct.Code === \"\") {\r\n        modAssociations = [];\r\n      } else {\r\n        modAssociations = this.getFinishedProductAssociations(\r\n          this.state.finishedProduct.FinishedProductItems\r\n        );\r\n      }\r\n      var modFinishedProduct = lodash.cloneDeep(this.state.finishedProduct);\r\n      let color = \"\";\r\n      if (\r\n        this.state.finishedProduct.Color !== null &&\r\n        this.state.finishedProduct.Color !== \"\"\r\n      ) {\r\n        color = \"#\" + this.state.finishedProduct.Color;\r\n      }\r\n      modFinishedProduct.Color = color;\r\n\r\n      this.setState(\r\n        {\r\n          modFinishedProduct,\r\n          validationErrors: [],\r\n          modAssociations,\r\n          modAttributeMetaDataList: [],\r\n          selColor: color,\r\n          appliedColor: color,\r\n          showColorPicker: false,\r\n          isValidHex: true,\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(modFinishedProduct.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n      if (this.state.finishedProduct.Code === \"\") {\r\n        var terminalCodes = [...this.state.terminalCodes];\r\n        terminalCodes = [];\r\n        this.setState({ terminalCodes });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"FinishedProductDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  saveFinishProduct = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempFinishedProduct = lodash.cloneDeep(this.state.tempFinishedProduct);\r\n\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n\r\n      tempFinishedProduct = this.convertStringtoDecimal(\r\n        tempFinishedProduct,\r\n        attributeList\r\n      );\r\n      this.state.finishedProduct.Code === \"\"\r\n        ? this.createFinishedProduct(tempFinishedProduct)\r\n        : this.updateFinishedProduct(tempFinishedProduct);\r\n    } catch (error) {\r\n      console.log(\"BaseProductDetailsComposite : Error in saveFinishProduct\");\r\n    }\r\n  };\r\n  handleSave = () => {\r\n    try {\r\n      let modFinishedProduct = lodash.cloneDeep(this.state.modFinishedProduct);\r\n      let color = \"\";\r\n      //\r\n      modFinishedProduct.FinishedProductItems = this.fillDetails(\r\n        this.state.modAssociations\r\n      );\r\n      // this.setState({ saveEnabled: false });\r\n      if (\r\n        modFinishedProduct.Color !== null &&\r\n        modFinishedProduct.Color !== \"\"\r\n      ) {\r\n        color = lodash.cloneDeep(modFinishedProduct.Color);\r\n        modFinishedProduct.Color = modFinishedProduct.Color.substring(1);\r\n        //modFinishedProduct.Color = color.length == 2 ? color[1] : color[0]\r\n      } else modFinishedProduct.Color = \"\";\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      if (this.validateSave(modFinishedProduct, attributeList)) {\r\n        modFinishedProduct = this.convertStringtoDecimal(\r\n          modFinishedProduct,\r\n          attributeList\r\n        );\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempFinishedProduct = lodash.cloneDeep(modFinishedProduct);\r\n        this.setState({ showAuthenticationLayout, tempFinishedProduct }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveFinishProduct();\r\n          }\r\n      });\r\n\r\n        \r\n      } else {\r\n        if (\r\n          modFinishedProduct.Color !== null &&\r\n          modFinishedProduct.Color !== \"\"\r\n        ) {\r\n          modFinishedProduct.Color = color;\r\n        } else modFinishedProduct.Color = \"\";\r\n        this.setState({ modFinishedProduct });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"FinishedProductDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  convertStringtoDecimal(modFinishedProduct, attributeList) {\r\n    try {\r\n      if (\r\n        modFinishedProduct.Density !== null &&\r\n        modFinishedProduct.Density !== \"\"\r\n      ) {\r\n        modFinishedProduct.Density = Utilities.convertStringtoDecimal(\r\n          modFinishedProduct.Density\r\n        );\r\n      }\r\n      if (\r\n        modFinishedProduct.ToleranceQuantity !== null &&\r\n        modFinishedProduct.ToleranceQuantity !== \"\"\r\n      ) {\r\n        modFinishedProduct.ToleranceQuantity = Utilities.convertStringtoDecimal(\r\n          modFinishedProduct.ToleranceQuantity\r\n        );\r\n      }\r\n      if (\r\n        modFinishedProduct.ToleranceQuantityForMarine !== null &&\r\n        modFinishedProduct.ToleranceQuantityForMarine !== \"\"\r\n      ) {\r\n        modFinishedProduct.ToleranceQuantityForMarine =\r\n          Utilities.convertStringtoDecimal(\r\n            modFinishedProduct.ToleranceQuantityForMarine\r\n          );\r\n      }\r\n      if (\r\n        modFinishedProduct.ToleranceQuantityForPipeline !== null &&\r\n        modFinishedProduct.ToleranceQuantityForPipeline !== \"\"\r\n      ) {\r\n        modFinishedProduct.ToleranceQuantityForPipeline =\r\n          Utilities.convertStringtoDecimal(\r\n            modFinishedProduct.ToleranceQuantityForPipeline\r\n          );\r\n      }\r\n      if (\r\n        modFinishedProduct.ToleranceQuantityForRail !== null &&\r\n        modFinishedProduct.ToleranceQuantityForRail !== \"\"\r\n      ) {\r\n        modFinishedProduct.ToleranceQuantityForRail =\r\n          Utilities.convertStringtoDecimal(\r\n            modFinishedProduct.ToleranceQuantityForRail\r\n          );\r\n      }\r\n\r\n      if (this.state.hazardousEnabled) {\r\n        if (\r\n          modFinishedProduct.SFLPercent !== null &&\r\n          modFinishedProduct.SFLPercent !== \"\"\r\n        ) {\r\n          modFinishedProduct.SFLPercent = Utilities.convertStringtoDecimal(\r\n            modFinishedProduct.SFLPercent\r\n          );\r\n        }\r\n      }\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modFinishedProduct.Attributes =\r\n        Utilities.fillAttributeDetails(attributeList);\r\n      return modFinishedProduct;\r\n    } catch (err) {\r\n      console.log(\"convertStringtoDecimal error finishedProduct details\", err);\r\n    }\r\n  }\r\n\r\n  getProductTypes() {\r\n    axios(\r\n      RestAPIs.GetProductType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            var productTypeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ productTypeOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getProductTypes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getProductTypes:\", error);\r\n      });\r\n  }\r\n\r\n  updateFinishedProduct(modFinishedProduct) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.finishedProductCode,\r\n        value: modFinishedProduct.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.finishedProductCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modFinishedProduct,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"FinishedProduct_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"FinishedProductList_Code\"],\r\n          keyValues: [modFinishedProduct.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateFinishedProduct,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnFinishedProduct\r\n              ),\r\n              showAuthenticationLayout: false,\r\n              expandedRows: [],\r\n            },\r\n            () =>\r\n              this.getFinishedProduct({ Common_Code: modFinishedProduct.Code })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          modFinishedProduct.Color = \"#\" + modFinishedProduct.Color;\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnFinishedProduct,\r\n              modFinishedProduct\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\r\n            \"Error in UpdateFinishedProduct Update:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n        this.props.onSaved(modFinishedProduct, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        modFinishedProduct.Color = \"#\" + modFinishedProduct.Color;\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnFinishedProduct,\r\n            modFinishedProduct\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modFinishedProduct, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  validateSave(modFinishedProduct, attributeList) {\r\n    try {\r\n      var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      Object.keys(finishedProductValidationDef).forEach(function (key) {\r\n        validationErrors[key] = Utilities.validateField(\r\n          finishedProductValidationDef[key],\r\n          modFinishedProduct[key]\r\n        );\r\n      });\r\n      if (modFinishedProduct.Active !== this.state.finishedProduct.Active) {\r\n        if (\r\n          modFinishedProduct.Remarks === null ||\r\n          modFinishedProduct.Remarks === \"\"\r\n        ) {\r\n          validationErrors[\"Remarks\"] = \"Receipt_RemarksRequired\";\r\n        }\r\n      }\r\n      if (this.state.hazardousEnabled) {\r\n        if (\r\n          modFinishedProduct.HazardousCategory !== null &&\r\n          modFinishedProduct.HazardousCategory !== \"\"\r\n        ) {\r\n          if (\r\n            modFinishedProduct.SFLPercent === \"\" ||\r\n            modFinishedProduct.SFLPercent === null\r\n          ) {\r\n            validationErrors[\"SFLPercent\"] = \"Common_InvalidValue\";\r\n          }\r\n        }\r\n      }\r\n\r\n      if (\r\n        (modFinishedProduct.ToleranceQuantity !== \"\" &&\r\n          modFinishedProduct.ToleranceQuantity !== null) ||\r\n        (modFinishedProduct.ToleranceQuantityForMarine !== \"\" &&\r\n          modFinishedProduct.ToleranceQuantityForMarine !== null) ||\r\n        (modFinishedProduct.ToleranceQuantityForPipeline !== \"\" &&\r\n          modFinishedProduct.ToleranceQuantityForPipeline !== null) ||\r\n        (modFinishedProduct.ToleranceQuantityForRail !== \"\" &&\r\n          modFinishedProduct.ToleranceQuantityForRail !== null)\r\n      ) {\r\n        if (\r\n          modFinishedProduct.ToleranceQuantityUOM === null ||\r\n          modFinishedProduct.ToleranceQuantityUOM === \"\"\r\n        ) {\r\n          validationErrors[\"ToleranceQuantityUOM\"] =\r\n            \"ERRMSG_FP_TOLERANCEQTYUOM_REQUIRED\";\r\n        }\r\n      }\r\n\r\n      if (modFinishedProduct.ExportGrade) {\r\n        if (\r\n          modFinishedProduct.Density === null ||\r\n          modFinishedProduct.Density === \"\"\r\n        ) {\r\n          validationErrors[\"Density\"] = \"DENSITY_EMPTY_X\";\r\n        }\r\n        if (\r\n          modFinishedProduct.DensityUOM === null ||\r\n          modFinishedProduct.DensityUOM === \"\"\r\n        ) {\r\n          validationErrors[\"DensityUOM\"] =\r\n            \"BSI_PRODUCTDENSITY_DENSITYUOM_MANDATORY_FOR_EXPORTGRADE_FP\";\r\n        }\r\n      }\r\n\r\n      if (\r\n        this.state.isValidShareholderSysExtCode &&\r\n        this.props.userDetails.EntityResult.IsDCHEnabled\r\n      ) {\r\n        if (\r\n          modFinishedProduct.ProductFamilyCode === null ||\r\n          modFinishedProduct.ProductFamilyCode === \"\"\r\n        )\r\n          validationErrors[\"ProductFamilyCode\"] = \"FP_ProdFamily_required\";\r\n      }\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"FinishedProduct_SavedStatus\",\r\n        messageResultDetails: [],\r\n      };\r\n\r\n      let uniqueBPRecords = [\r\n        ...new Set(\r\n          modFinishedProduct.FinishedProductItems.map((a) => a.BaseProductCode)\r\n        ),\r\n      ];\r\n\r\n      if (\r\n        uniqueBPRecords.length !==\r\n        modFinishedProduct.FinishedProductItems.filter(\r\n          (d) => d.AdditiveCode === null\r\n        ).length\r\n      ) {\r\n        notification.messageResultDetails.push({\r\n          keyFields: [],\r\n          keyValues: [],\r\n          isSuccess: false,\r\n          errorMessage: \"Duplicate_FP_BP_Details\",\r\n        });\r\n        this.props.onSaved(\r\n          this.state.modFinishedProduct,\r\n          \"update\",\r\n          notification\r\n        );\r\n        return false;\r\n      }\r\n\r\n      let uniqueAddvRecords = [];\r\n      modFinishedProduct.FinishedProductItems.forEach((e) => {\r\n        if (e.AdditiveCode !== null && e.AdditiveCode !== \"\") {\r\n          let uinqueAdvIndex = uniqueAddvRecords.findIndex(\r\n            (data) =>\r\n              e.AdditiveCode === data.Code && e.BaseProductCode === data.BCode\r\n          );\r\n          if (uinqueAdvIndex < 0) {\r\n            uniqueAddvRecords.push({\r\n              Code: e.AdditiveCode,\r\n              BCode: e.BaseProductCode,\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      if (\r\n        uniqueAddvRecords.length !==\r\n        modFinishedProduct.FinishedProductItems.filter(\r\n          (d) => d.AdditiveCode !== null && d.AdditiveCode !== \"\"\r\n        ).length\r\n      ) {\r\n        notification.messageResultDetails.push({\r\n          keyFields: [],\r\n          keyValues: [],\r\n          isSuccess: false,\r\n          errorMessage: \"Duplicate_FP_Addv_Details\",\r\n        });\r\n        this.props.onSaved(\r\n          this.state.modFinishedProduct,\r\n          \"update\",\r\n          notification\r\n        );\r\n        return false;\r\n      }\r\n\r\n      if (\r\n        Array.isArray(modFinishedProduct.FinishedProductItems) &&\r\n        modFinishedProduct.FinishedProductItems.length > 0\r\n      ) {\r\n        modFinishedProduct.FinishedProductItems.forEach((fpAssociation) => {\r\n          fPAssociationInfoValidationDef.forEach((col) => {\r\n            let err = \"\";\r\n\r\n            if (col.validator !== undefined) {\r\n              err = Utilities.validateField(\r\n                col.validator,\r\n                fpAssociation[col.field]\r\n              );\r\n            }\r\n            if (\r\n              err !== \"\" &&\r\n              col.field === \"AdditiveCode\" &&\r\n              fpAssociation[col.field] === null\r\n            )\r\n              err = \"\";\r\n            if (err !== \"\") {\r\n              notification.messageResultDetails.push({\r\n                keyFields:\r\n                  fpAssociation.AdditiveCode === null\r\n                    ? [\"FinishedProductInfo_BaseProduct\", col.displayName]\r\n                    : [\r\n                        \"FinishedProductInfo_BaseProduct\",\r\n                        \"UnmatchedLocalTrans_Additive\",\r\n                        col.displayName,\r\n                      ],\r\n                keyValues:\r\n                  fpAssociation.AdditiveCode === null\r\n                    ? [fpAssociation.BaseProductCode, fpAssociation[col.field]]\r\n                    : [\r\n                        fpAssociation.BaseProductCode,\r\n                        fpAssociation.AdditiveCode,\r\n                        fpAssociation[col.field],\r\n                      ],\r\n                isSuccess: false,\r\n                errorMessage: err,\r\n              });\r\n            }\r\n          });\r\n        });\r\n      } else {\r\n        notification.messageResultDetails.push({\r\n          keyFields: [],\r\n          keyValues: [],\r\n          isSuccess: false,\r\n          errorMessage: \"BP_Associtaion_Required\",\r\n        });\r\n      }\r\n\r\n      var attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeList.forEach((attribute) => {\r\n        attributeValidationErrors.forEach((attributeValidation) => {\r\n          if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n            attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n              attributeValidation.attributeValidationErrors[\r\n                attributeMetaData.Code\r\n              ] = Utilities.valiateAttributeField(\r\n                attributeMetaData,\r\n                attributeMetaData.DefaultValue\r\n              );\r\n            });\r\n          }\r\n        });\r\n      });\r\n      this.setState({ validationErrors, attributeValidationErrors });\r\n      var returnValue = true;\r\n      attributeValidationErrors.forEach((x) => {\r\n        if (returnValue) {\r\n          returnValue = Object.values(x.attributeValidationErrors).every(\r\n            function (value) {\r\n              return value === \"\";\r\n            }\r\n          );\r\n        } else {\r\n          return returnValue;\r\n        }\r\n      });\r\n\r\n      if (returnValue)\r\n        returnValue = Object.values(validationErrors).every(function (value) {\r\n          return value === \"\";\r\n        });\r\n\r\n      if (notification.messageResultDetails.length > 0) {\r\n        this.props.onSaved(\r\n          this.state.modFinishedProduct,\r\n          \"update\",\r\n          notification\r\n        );\r\n        return false;\r\n      }\r\n\r\n      return returnValue;\r\n    } catch (error) {\r\n      console.log(\r\n        \"FinishedProductDetailsComposite:Error occured on ValidateSave\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modFinishedProduct = lodash.cloneDeep(this.state.modFinishedProduct);\r\n      modFinishedProduct.Active = value;\r\n      if (modFinishedProduct.Active !== this.state.finishedProduct.Active)\r\n        modFinishedProduct.Remarks = \"\";\r\n      this.setState({ modFinishedProduct });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleHexValueChange = (value) => {\r\n    try {\r\n      let modFinishedProduct = lodash.cloneDeep(this.state.modFinishedProduct);\r\n      var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modFinishedProduct.Color = value;\r\n      this.setState({ modFinishedProduct });\r\n      var regex = /^#[0-9A-Fa-f]{6}$/;\r\n      let isValidHex = regex.test(value);\r\n\r\n      if (isValidHex) {\r\n        this.setState({\r\n          selColor: value,\r\n        });\r\n      } else {\r\n        if (\r\n          (value !== undefined || value !== \"\") &&\r\n          (modFinishedProduct.Color !== \"\" ||\r\n            modFinishedProduct.Color !== undefined)\r\n        )\r\n          validationErrors[\"Color\"] = \"FP_Color_hex\";\r\n        this.setState({\r\n          selColor: \"#ffffff\",\r\n        });\r\n      }\r\n      this.setState({ validationErrors, isValidHex });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  GetProdFamilyList() {\r\n    axios(\r\n      RestAPIs.GetProdFamily + this.props.selectedShareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        //console.log(response);\r\n        var result = response.data;\r\n\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let prodFamilyOptions = [];\r\n            if (\r\n              result.EntityResult !== undefined &&\r\n              result.EntityResult !== null\r\n            ) {\r\n              prodFamilyOptions = Utilities.transferDictionarytoOptions(\r\n                result.EntityResult\r\n              );\r\n            }\r\n\r\n            this.setState({ prodFamilyOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetProdFamilyList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting GetProdFamilyList:\", error);\r\n      });\r\n  }\r\n\r\n  GetUOMList() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        //console.log(response);\r\n        var result = response.data;\r\n\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let densityUOMOptions = [];\r\n            let volumeUOMOptions = [];\r\n            if (Array.isArray(result.EntityResult.DENSITY)) {\r\n              densityUOMOptions = Utilities.transferListtoOptions(\r\n                result.EntityResult.DENSITY\r\n              );\r\n            }\r\n            if (Array.isArray(result.EntityResult.VOLUME)) {\r\n              volumeUOMOptions = Utilities.transferListtoOptions(\r\n                result.EntityResult.VOLUME\r\n              );\r\n            }\r\n            if (Array.isArray(result.EntityResult.MASS)) {\r\n              let massUOMOptions = Utilities.transferListtoOptions(\r\n                result.EntityResult.MASS\r\n              );\r\n              massUOMOptions.forEach((massUOM) =>\r\n                volumeUOMOptions.push(massUOM)\r\n              );\r\n            }\r\n\r\n            this.setState({ volumeUOMOptions, densityUOMOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting GetUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getFinishedProductAssociations(rawAssociations) {\r\n    if (Array.isArray(rawAssociations) && rawAssociations.length > 0) {\r\n      //Get Only Base Products\r\n      let baseProducts = rawAssociations.filter(\r\n        (association) => association.AdditiveCode === null\r\n      );\r\n      //Add unique number to each base product\r\n      baseProducts = Utilities.addSeqNumberToListObject(\r\n        lodash.cloneDeep(baseProducts)\r\n      );\r\n\r\n      baseProducts.sort((a, b) => {\r\n        if (a.SequenceNumber > b.SequenceNumber) return 1;\r\n        else if (a.SequenceNumber < b.SequenceNumber) return -1;\r\n        else return 0;\r\n      });\r\n      //Get Additives for each base product\r\n      baseProducts.forEach((baseProduct) => {\r\n        baseProduct.addtiveAssociations = rawAssociations.filter(\r\n          (association) =>\r\n            association.BaseProductCode === baseProduct.BaseProductCode &&\r\n            association.AdditiveCode !== null\r\n        );\r\n        //get unique number for each additive in base product\r\n        baseProduct.addtiveAssociations = Utilities.addSeqNumberToListObject(\r\n          lodash.cloneDeep(baseProduct.addtiveAssociations)\r\n        );\r\n\r\n        baseProduct.addtiveAssociations.sort((a, b) => {\r\n          if (a.SeqNumber > b.SeqNumber) return 1;\r\n          else if (a.SeqNumber < b.SeqNumber) return -1;\r\n          else return 0;\r\n        });\r\n\r\n        //assign reference of base product to each additive\r\n        baseProduct.addtiveAssociations.forEach(\r\n          (additive) => (additive.baseSeqNumber = baseProduct.SeqNumber)\r\n        );\r\n      });\r\n      return baseProducts;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n  getHazardousLookup() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=HazardousMaterial\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult[\"RoadEnabled\"] &&\r\n            result.EntityResult[\"RoadEnabled\"].toLowerCase() === \"true\"\r\n          ) {\r\n            this.setState({ hazardousEnabled: true });\r\n            this.getHazardousCategories();\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"FInishedProductDetailsComposite:Error occured on getHazardousLookup\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  getHazardousCategories() {\r\n    axios(\r\n      RestAPIs.GetHazardousProductCategories,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    ).then((response) => {\r\n      var result = response.data;\r\n      if (result.IsSuccess === true) {\r\n        if (\r\n          result.EntityResult !== null &&\r\n          Array.isArray(result.EntityResult)\r\n        ) {\r\n          let categoryOptions = Utilities.transferListtoOptions(\r\n            result.EntityResult\r\n          );\r\n          this.setState({ hazardousProductCategoryOptions: categoryOptions });\r\n        }\r\n      } else {\r\n        console.log(\"Error in getHazardousCategories:\", result.ErrorList);\r\n      }\r\n    });\r\n  }\r\n  catch(error) {\r\n    console.log(\r\n      \"FInishedProductDetailsComposite:Error occured on getHazardousCategories\",\r\n      error\r\n    );\r\n  }\r\n\r\n  getFinishedProduct(finishedProductRow) {\r\n    emptyFinishedProduct.Shareholdercode = this.props.selectedShareholder;\r\n    emptyFinishedProduct.TerminalCodes =\r\n      this.props.terminalCodes.length === 1\r\n        ? [...this.props.terminalCodes]\r\n        : [];\r\n    if (finishedProductRow.Common_Code === undefined) {\r\n      this.setState(\r\n        {\r\n          finishedProduct: lodash.cloneDeep(emptyFinishedProduct),\r\n          modFinishedProduct: lodash.cloneDeep(emptyFinishedProduct),\r\n          modAttributeMetaDataList: [],\r\n          isReadyToRender: true,\r\n          modAssociations: [],\r\n          finishedProductKPIList:[],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnFinishedProduct\r\n          ),\r\n          selColor: \"\",\r\n          appliedColor: \"\",\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode === false)\r\n            this.localNodeAttribute();\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.finishedProductCode,\r\n        value: finishedProductRow.Common_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.finishedProductCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetFinishedProduct,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        // console.log(result);\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              finishedProduct: lodash.cloneDeep(result.EntityResult),\r\n              modFinishedProduct: lodash.cloneDeep(result.EntityResult),\r\n              modAssociations: this.getFinishedProductAssociations(\r\n                result.EntityResult.FinishedProductItems\r\n              ),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnFinishedProduct\r\n              ),\r\n            },\r\n            () => {\r\n              // this.getTerminalsForCarrier(result.EntityResult.CarrierCode)\r\n              this.getKPIList(this.props.selectedShareholder, result.EntityResult.Code)\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult !== undefined\r\n          ) {\r\n            //this.hexToRGB(result.EntityResult.Color)\r\n            this.assignColor(result.EntityResult.Color);\r\n            //this.bindBaseProducts(result.EntityResult.ProductType)\r\n          }\r\n        } else {\r\n          this.setState({\r\n            finishedProduct: lodash.cloneDeep(emptyFinishedProduct),\r\n            modFinishedProduct: lodash.cloneDeep(emptyFinishedProduct),\r\n            modAssociations: [],\r\n            isReadyToRender: true,\r\n            selColor: \"\",\r\n          });\r\n          console.log(\"Error in GetFinishedProduct:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error while getting Finished Product:\",\r\n          error,\r\n          finishedProductRow\r\n        );\r\n      });\r\n  }\r\n\r\n  // hexToRGB = (hex) => {\r\n  //   if (hex !== null && hex !== \"\") {\r\n  //     let hex1 = '0x' + hex\r\n  //     let r = hex1 >> 16 & 0xFF\r\n  //     let g = hex1 >> 8 & 0xFF\r\n  //     let b = hex1 & 0xFF\r\n\r\n  //     var selColor = {\r\n  //       \"rgb\": `rgb(${r}, ${g}, ${b})`,\r\n  //       \"hex\": '#' + hex\r\n  //     }\r\n  //     var modFinishedProduct = lodash.cloneDeep(this.state.modFinishedProduct);\r\n  //     modFinishedProduct.Color = '#' + hex;\r\n  //     this.setState({\r\n  //       selColor,\r\n  //       modFinishedProduct,\r\n  //       appliedColor: selColor\r\n  //     })\r\n  //   }\r\n  //   else {\r\n  //     this.setState({\r\n  //       selColor: {},\r\n  //       appliedColor: selColor\r\n  //     })\r\n  //   }\r\n\r\n  // }\r\n\r\n  assignColor = (hex) => {\r\n    if (hex !== null && hex !== \"\") {\r\n      var selColor = \"#\" + hex;\r\n      var modFinishedProduct = lodash.cloneDeep(this.state.modFinishedProduct);\r\n      modFinishedProduct.Color = selColor;\r\n      this.setState({\r\n        selColor,\r\n        modFinishedProduct,\r\n        appliedColor: selColor,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        selColor: \"\",\r\n        appliedColor: selColor,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleRowSelectionChange = (associationRow) => {\r\n    this.setState({ selectedAssociationRows: associationRow });\r\n  };\r\n\r\n  handleColorPicker = () => {\r\n    try {\r\n      this.setState({\r\n        showColorPicker: true,\r\n        isValidHex: true,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"FinishedProductDetailsProject:Error occured on handleColorPicker\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleColorPickerClose = () => {\r\n    var modFinishedProduct = lodash.cloneDeep(this.state.modFinishedProduct);\r\n    try {\r\n      modFinishedProduct.Color =\r\n        this.state.appliedColor !== undefined ? this.state.appliedColor : \"\";\r\n\r\n      this.setState({\r\n        showColorPicker: false,\r\n        selColor:\r\n          this.state.appliedColor !== undefined ? this.state.appliedColor : \"\",\r\n        modFinishedProduct,\r\n        isValidHex: true,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"FinishedProductDetailsProject:Error occured on handleColorPickerClose\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleApplyColor = (color) => {\r\n    let isValidHex = this.state.isValidHex;\r\n    if (isValidHex) {\r\n      var modFinishedProduct = lodash.cloneDeep(this.state.modFinishedProduct);\r\n      modFinishedProduct.Color = color.hex;\r\n      this.setState({\r\n        appliedColor: color.hex,\r\n        showColorPicker: false,\r\n        selColor: color.hex,\r\n        modFinishedProduct,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnColorChange = (color) => {\r\n    var modFinishedProduct = lodash.cloneDeep(this.state.modFinishedProduct);\r\n    modFinishedProduct.Color = color.hex;\r\n    this.setState({\r\n      selColor: color.hex,\r\n      modFinishedProduct,\r\n      isValidHex: true,\r\n    });\r\n  };\r\n\r\n  handleAddAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      let addEnabled = this.state.saveEnabled;\r\n      if (addEnabled && this.state.modFinishedProduct.ProductType !== null) {\r\n        try {\r\n          let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n          let newAssociation = {\r\n            AdditiveCode: null,\r\n            BaseProductCode: null,\r\n            FinishedProductCode: this.state.modFinishedProduct.Code,\r\n            Quantity: \"1\",\r\n            SequenceNumber: null,\r\n            Version: \"1\",\r\n            addtiveAssociations: [],\r\n          };\r\n\r\n          newAssociation.SeqNumber =\r\n            Utilities.getMaxSeqNumberfromListObject(modAssociations);\r\n          modAssociations.push(newAssociation);\r\n          this.setState({\r\n            modAssociations,\r\n            selectedAssociationRows: [],\r\n          });\r\n        } catch (error) {\r\n          console.log(\r\n            \"FinishedProductDetailsComposite:Error occured on handleAddAssociation\",\r\n            error\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDeleteAssociation = () => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      let deleteEnabled = this.state.saveEnabled;\r\n      if (deleteEnabled) {\r\n        try {\r\n          if (\r\n            this.state.selectedAssociationRows != null &&\r\n            this.state.selectedAssociationRows.length > 0\r\n          ) {\r\n            if (this.state.modAssociations.length > 0) {\r\n              let modAssociations = lodash.cloneDeep(\r\n                this.state.modAssociations\r\n              );\r\n\r\n              this.state.selectedAssociationRows.forEach((obj) => {\r\n                modAssociations = modAssociations.filter((association) => {\r\n                  return association.SeqNumber !== obj.SeqNumber;\r\n                });\r\n              });\r\n\r\n              modAssociations =\r\n                Utilities.removeSeqNumberFromListObject(modAssociations);\r\n              modAssociations =\r\n                Utilities.addSeqNumberToListObject(modAssociations);\r\n\r\n              modAssociations.forEach((association) => {\r\n                association.addtiveAssociations.forEach((addv) => {\r\n                  addv.baseSeqNumber = association.SeqNumber;\r\n                });\r\n              });\r\n\r\n              this.setState({ modAssociations });\r\n            }\r\n          }\r\n\r\n          this.setState({ selectedAssociationRows: [] });\r\n        } catch (error) {\r\n          console.log(\r\n            \"FinishedProductDetailsComposite:Error occured on handleDeleteAssociation\",\r\n            error\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleAddAdditive = (data) => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      try {\r\n        let addEnabled = lodash.cloneDeep(this.state.saveEnabled);\r\n        if (addEnabled) {\r\n          let newAdditiveAssociation = {\r\n            AdditiveCode: \"\",\r\n            BaseProductCode: data.BaseProductCode,\r\n            FinishedProductCode: data.FinishedProductCode,\r\n            Quantity: \"1\",\r\n            SequenceNumber: \"0\",\r\n            Version: \"0\",\r\n          };\r\n\r\n          let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n\r\n          let associationIndex = modAssociations.findIndex(\r\n            (item) =>\r\n              item.BaseProductCode === data.BaseProductCode &&\r\n              item.SeqNumber === data.SeqNumber\r\n          );\r\n\r\n          if (\r\n            associationIndex >= 0 &&\r\n            modAssociations[associationIndex].BaseProductCode !== null &&\r\n            modAssociations[associationIndex].BaseProductCode !== \"\" &&\r\n            modAssociations[associationIndex].BaseProductCode !== undefined\r\n          ) {\r\n            newAdditiveAssociation.baseSeqNumber =\r\n              modAssociations[associationIndex].SeqNumber;\r\n            newAdditiveAssociation.SeqNumber =\r\n              Utilities.getMaxSeqNumberfromListObject(\r\n                modAssociations[associationIndex].addtiveAssociations\r\n              );\r\n            modAssociations[associationIndex].addtiveAssociations.push(\r\n              newAdditiveAssociation\r\n            );\r\n            this.toggleExpand(modAssociations[associationIndex], true, true);\r\n          }\r\n          this.setState({\r\n            modAssociations,\r\n            selectedAssociationRows: [],\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(\r\n          \"FinishedProductDetailsComposite:Error occured on handleAddAdditive\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      var terminalCodes = [...this.props.terminalCodes];\r\n      var modFinishedProduct = lodash.cloneDeep(this.state.modFinishedProduct);\r\n\r\n      if (checked) modFinishedProduct.TerminalCodes = [...terminalCodes];\r\n      else modFinishedProduct.TerminalCodes = [];\r\n      this.setState({ modFinishedProduct });\r\n      this.terminalSelectionChange(modFinishedProduct.TerminalCodes);\r\n    } catch (error) {\r\n      console.log(\r\n        \"FinishedProductDetailsComposite:Error occured on handleAllTerminasChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDeleteAdditive = (rowData) => {\r\n    if (!this.props.userDetails.EntityResult.IsArchived) {\r\n      let deleteEnabled = this.state.saveEnabled;\r\n      if (deleteEnabled) {\r\n        try {\r\n          let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n\r\n          let associationIndex = modAssociations.findIndex(\r\n            (item) =>\r\n              item.BaseProductCode === rowData.BaseProductCode &&\r\n              item.SeqNumber === rowData.baseSeqNumber\r\n          );\r\n\r\n          if (associationIndex >= 0) {\r\n            modAssociations[associationIndex].addtiveAssociations =\r\n              modAssociations[associationIndex].addtiveAssociations.filter(\r\n                (additive) => {\r\n                  return additive.SeqNumber !== rowData.SeqNumber;\r\n                }\r\n              );\r\n            this.toggleExpand(modAssociations[associationIndex], true, true);\r\n          }\r\n          this.setState({ modAssociations });\r\n        } catch (error) {\r\n          console.log(\r\n            \"FinishedProductDetailsComposite:Error occured on handleDeleteAdditive\",\r\n            error\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    let modAssociations = lodash.cloneDeep(this.state.modAssociations);\r\n    let data = {};\r\n    if (\r\n      cellData.field === \"AdditiveCode\" ||\r\n      cellData.rowData.AdditiveCode !== null\r\n    ) {\r\n      let bpIndex = modAssociations.findIndex(\r\n        (item) =>\r\n          item.BaseProductCode === cellData.rowData.BaseProductCode &&\r\n          item.SeqNumber === cellData.rowData.baseSeqNumber\r\n      );\r\n\r\n      modAssociations[bpIndex].addtiveAssociations[cellData.rowIndex][\r\n        cellData.field\r\n      ] = newVal;\r\n      data = modAssociations[bpIndex];\r\n    } else {\r\n      modAssociations[cellData.rowIndex][cellData.field] = newVal;\r\n      if (cellData.field === \"BaseProductCode\")\r\n        modAssociations[cellData.rowIndex].addtiveAssociations = [];\r\n      data = modAssociations[cellData.rowIndex];\r\n    }\r\n    this.setState({ modAssociations });\r\n    //this.toggleExpand(cellData.rowData, true)\r\n    this.toggleExpand(data, true, true);\r\n  };\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors, modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"FinishedProductDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.finishedproduct\r\n          ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getBaseProductList() {\r\n    axios(\r\n      RestAPIs.GetBaseProducts,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult !== undefined\r\n          ) {\r\n            let baseProductDetails = result.EntityResult;\r\n            this.setState({ baseProductDetails });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getBaseProductList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Base Product List:\", error);\r\n      });\r\n  }\r\n\r\n  getAdditivesList() {\r\n    axios(\r\n      RestAPIs.GetAdditives,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult !== undefined\r\n          ) {\r\n            let additiveDetails = result.EntityResult;\r\n            this.setState({ additiveDetails });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getAdditivesList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Additives List:\", error);\r\n      });\r\n  }\r\n\r\n  toggleExpand = (data, open, isAdditiveAdded = false) => {\r\n    let expandedRows = lodash.cloneDeep(this.state.expandedRows);\r\n    let expandedRowIndex = expandedRows.findIndex(\r\n      (item) => item.SeqNumber === data.SeqNumber\r\n    );\r\n    if (open) {\r\n      if (isAdditiveAdded && expandedRowIndex >= 0) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n        expandedRows.push(data);\r\n      } else {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n      }\r\n    } else {\r\n      if (expandedRowIndex >= 0) {\r\n        expandedRows = expandedRows.filter(\r\n          (x) =>\r\n            x.BaseProductCode !== data.BaseProductCode &&\r\n            x.SeqNumber !== data.SeqNumber\r\n        );\r\n      } else expandedRows.push(data);\r\n    }\r\n    this.setState({ expandedRows });\r\n  };\r\n  //Get KPI for Finished Product\r\n  getKPIList(shareholder, finishProductCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      let objKPIRequestData = {\r\n        PageName: kpiFinishedProductDetail,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder },{ key: \"FinishedProductCode\", value: finishProductCode }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              finishedProductKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ finishedProductKPIList: [] });\r\n            console.log(\r\n              \"Error in finished products KPIList:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Finished Products KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n  render() {\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"DriverInfo_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modFinishedProduct.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modFinishedProduct.LastUpdatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_LastActive\",\r\n        fieldValue:\r\n          this.state.modFinishedProduct.LastActiveTime !== undefined &&\r\n          this.state.modFinishedProduct.LastActiveTime !== null\r\n            ? new Date(\r\n                this.state.modFinishedProduct.LastActiveTime\r\n              ).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(\r\n                this.state.modFinishedProduct.LastActiveTime\r\n              ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_CreatedTime\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modFinishedProduct.CreatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modFinishedProduct.CreatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.finishedProduct.Code}\r\n            newEntityName=\"FinishedProductInfo_NewProduct\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <TMDetailsKPILayout KPIList={this.state.finishedProductKPIList}> </TMDetailsKPILayout>\r\n        <ErrorBoundary>\r\n          <FinishedProductDetails\r\n            finishedProduct={this.state.finishedProduct}\r\n            modFinishedProduct={this.state.modFinishedProduct}\r\n            validationErrors={this.state.validationErrors}\r\n            additiveDetails={this.state.additiveDetails}\r\n            baseProductDetails={this.state.baseProductDetails}\r\n            selectedColor={this.state.selColor}\r\n            listOptions={{\r\n              productTypeOptions: this.state.productTypeOptions,\r\n              densityUOMOptions: this.state.densityUOMOptions,\r\n              volumeUOMOptions: this.state.volumeUOMOptions,\r\n              terminalCodes: this.props.terminalCodes,\r\n              prodFamilyOptions: this.state.prodFamilyOptions,\r\n              hazardousProductCategoryOptions:\r\n                this.state.hazardousProductCategoryOptions,\r\n            }}\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            attributeMetaDataList={this.state.attributeMetaDataList}\r\n            modAssociations={this.state.modAssociations}\r\n            expandedRows={this.state.expandedRows}\r\n            selectedAssociationRows={this.state.selectedAssociationRows}\r\n            onAttributeDataChange={this.handleAttributeDataChange}\r\n            onColorPickerChange={this.handleColorPicker}\r\n            onColorPickerClose={this.handleColorPickerClose}\r\n            onApplyColor={this.handleApplyColor}\r\n            onChangeColor={this.handleOnColorChange}\r\n            toggleExpand={this.toggleExpand}\r\n            handleAddAdditive={this.handleAddAdditive}\r\n            handleAddAssociation={this.handleAddAssociation}\r\n            handleDeleteAssociation={this.handleDeleteAssociation}\r\n            handleDeleteAdditive={this.handleDeleteAdditive}\r\n            handleRowSelectionChange={this.handleRowSelectionChange}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            onFieldChange={this.handleChange}\r\n            onAllTerminalsChange={this.handleAllTerminalsChange}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n            onHexValueChange={this.handleHexValueChange}\r\n            colorPickerState={this.state.showColorPicker}\r\n            isValidHex={this.state.isValidHex}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            isDCHEnabled={this.props.userDetails.EntityResult.IsDCHEnabled}\r\n            isValidShareholderSysExtCode={\r\n              this.state.isValidShareholderSysExtCode\r\n            }\r\n            hazardousEnabled={this.state.hazardousEnabled}\r\n          ></FinishedProductDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.finishedProduct.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnFinishedProduct}\r\n            handleOperation={this.saveFinishProduct}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(FinishedProductDetailsComposite);\r\n\r\nFinishedProductDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Select, Checkbox } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nAssociatedTerminals.propTypes = {\r\n  terminalList: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedTerminal: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  validationError: PropTypes.string,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCheckChange: PropTypes.func.isRequired,\r\n};\r\nAssociatedTerminals.defaultProps = {\r\n  terminalList: [],\r\n  selectedTerminal: [],\r\n  validationError: \"\",\r\n};\r\nexport function AssociatedTerminals({\r\n  terminalList,\r\n  selectedTerminal,\r\n  validationError,\r\n  onFieldChange,\r\n  onCheckChange,\r\n}) {\r\n  //console.log(\"component terminalList\", terminalList);\r\n  if (selectedTerminal === null) selectedTerminal = [];\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div style={{ width: \"80%\" }}>\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"TerminalCodes\")}\r\n              value={selectedTerminal}\r\n              multiple={true}\r\n              options={Utilities.transferListtoOptions(terminalList)}\r\n              onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n              error={t(validationError)}\r\n              disabled={terminalList.length === 0}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"ddlSelectAll\">\r\n            <Checkbox\r\n              label={t(\"Common_All\")}\r\n              checked={\r\n                Array.isArray(selectedTerminal) &&\r\n                selectedTerminal.length === terminalList.length\r\n              }\r\n              onChange={(checked) => onCheckChange(checked)}\r\n            ></Checkbox>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMDetailsKPILayout","_ref","KPIList","pageName","rowHeight","widgetHeight","isDraggable","isResizable","kpiDisplayTopBreakpoint","KPIDisplays","setKPIDisplays","useState","kpiDiv","React","hideKpis","currentScrollPos","window","pageYOffset","KPIDisplay","current","getBoundingClientRect","top","useEffect","addEventListener","removeEventListener","_jsx","ref","children","TranslationConsumer","t","style","marginTop","ErrorBoundary","KPIDashboardLayout","kpiList","defaultProps","FinishedProductDetails","finishedProduct","modFinishedProduct","validationErrors","additiveDetails","baseProductDetails","selectedColor","listOptions","modAssociations","expandedRows","selectedAssociationRows","onColorPickerChange","onColorPickerClose","onApplyColor","onChangeColor","toggleExpand","handleAddAssociation","handleDeleteAssociation","handleAddAdditive","handleDeleteAdditive","handleRowSelectionChange","handleCellDataEdit","onFieldChange","onAllTerminalsChange","onActiveStatusChange","colorPickerState","onHexValueChange","isValidHex","isEnterpriseNode","isDCHEnabled","isValidShareholderSysExtCode","modAttributeMetaDataList","attributeValidationErrors","onAttributeDataChange","hazardousEnabled","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","useTranslation","expanderTemplate","data","open","findIndex","x","SeqNumber","rowData","_jsxs","onClick","className","Icon","root","name","deleteAdditive","rowExpansionTemplate","Array","isArray","addtiveAssociations","length","DataTable","Column","initialWidth","field","header","editable","editFieldType","customEditRenderer","handleAdvDropdownEdit","handleCustomEditTextBox","size","renderer","handleBPDropdownEdit","cellData","dropDownOptions","ProductType","Object","keys","forEach","prodType","undefined","baseProduct","push","text","value","Select","placeholder","rowIndex","fluid","options","onChange","indicator","reserveSpace","search","bpIndex","item","baseSeqNumber","bPProdType","bp","BaseProductCode","advProduct","error","console","log","AdditiveCode","Input","Code","disabled","label","Name","AliasName","productTypeOptions","noResultsMessage","concat","onFocus","Color","backgroundColor","color","_Fragment","ColorPicker","onApply","hex","Button","type","iconRoot","icon","content","iconPosition","Description","Checkbox","checked","ExportGrade","display","justifyContent","width","Density","toLocaleString","DensityUOM","densityUOMOptions","ProductFamilyCode","prodFamilyOptions","HazardousCategory","getOptionsWithSelect","hazardousProductCategoryOptions","SFLPercent","HazardousNumber","ToleranceQuantity","ToleranceQuantityForMarine","ToleranceQuantityForRail","ToleranceQuantityForPipeline","ToleranceQuantityUOM","volumeUOMOptions","Active","Remarks","AssociatedTerminals","terminalList","terminalCodes","selectedTerminal","TerminalCodes","onCheckChange","Radio","WeighBridgeWeighingRequired","WeighingRequired","map","attire","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","scrollable","scrollHeight","selectionMode","selection","onSelectionChange","FinishedProductDetailsComposite","Component","constructor","_this","arguments","this","state","appliedColor","selColor","Utilities","finishedProductValidationDef","isReadyToRender","saveEnabled","showColorPicker","finishedProductKPIList","showAuthenticationLayout","tempFinishedProduct","handleChange","propertyName","lodash","handleProductTypeChange","setState","terminalSelectionChange","bpList","filter","indexOf","handleReset","getFinishedProductAssociations","FinishedProductItems","props","userDetails","EntityResult","IsEnterpriseNode","handleResetAttributeValidationError","localNodeAttribute","saveFinishProduct","attributeList","convertStringtoDecimal","createFinishedProduct","updateFinishedProduct","handleSave","fillDetails","substring","validateSave","IsWebPortalUser","handleActiveStatusChange","handleHexValueChange","test","assignColor","associationRow","handleColorPicker","handleColorPickerClose","handleApplyColor","handleOnColorChange","IsArchived","newAssociation","FinishedProductCode","Quantity","SequenceNumber","Version","obj","association","addv","newAdditiveAssociation","associationIndex","handleAllTerminalsChange","additive","newVal","handleAttributeDataChange","attribute","matchedAttributes","matchedAttributesList","modattribute","DefaultValue","isAdditiveAdded","expandedRowIndex","splice","handleAuthenticationClose","componentWillReceiveProps","nextProps","selectedRow","Common_Code","tokenDetails","tokenInfo","getFinishedProduct","finishedproduct","getAttributes","finishedProductRow","axios","RestAPIs","finishedProductAttributeEntity","then","response","result","IsSuccess","componentDidMount","IsDCHEnabled","GetProdFamilyList","getShareholderDetail","selectedShareholder","getHazardousLookup","getBaseProductList","getAdditivesList","getProductTypes","GetUOMList","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","Attributes","finishedProcductAttribute","valueAttribute","ListOfAttributeData","AttributeCode","AttributeValue","key","shareHolder","keyCode","KeyCodes","ShareHolderCode","keyDataCode","ExternalSystemCode","ErrorList","catch","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","FunctionsList","functionGroups","modify","fnFinishedProduct","add","onSaved","AssociationDetails","err","Set","a","d","uniqueAddvRecords","e","BCode","fpAssociation","fPAssociationInfoValidationDef","col","validator","displayName","returnValue","values","every","DENSITY","VOLUME","MASS","massUOM","rawAssociations","baseProducts","sort","b","toLowerCase","getHazardousCategories","categoryOptions","emptyFinishedProduct","Shareholdercode","getKPIList","shareholder","finishProductCode","view","fnKPIInformation","objKPIRequestData","PageName","kpiFinishedProductDetail","InputParameters","ListKPIDetails","render","popUpContents","fieldName","fieldValue","Date","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","LastActiveTime","CreatedTime","TMDetailsHeader","entityCode","newEntityName","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","validationError","multiple","margin","Popup","element","marginLeft","position","List","float","handleAttributeDateValue","convertAttributeDatetoString","chars","split","Dateval","getFullYear","getMonth","slice","getDate","DataType","Constants","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","toString","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","ddlOptions","selectOptionText","option","unshift","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}