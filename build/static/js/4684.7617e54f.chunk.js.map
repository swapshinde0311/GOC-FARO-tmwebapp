{"version":3,"file":"static/js/4684.7617e54f.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/UIBase/Common/WijmoGrid.jsx","Components/Composite/Common/WijmoGridComposite.jsx","Components/UIBase/Details/RailTransloadingDetails.jsx","Components/Composite/Details/RailTransloadingDetailsComposite.jsx","Components/Composite/Summary/RailTransloadingSummaryComposite.jsx","Components/Composite/Entity/RailTransloadingComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMTransactionFilters.jsx","JS/FunctionGroups.js","JS/KeyCodes.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as wjCore from \"@grapecity/wijmo\";\r\nimport * as wjGrid from \"@grapecity/wijmo.grid\";\r\nimport {\r\n  FlexGrid,\r\n  FlexGridColumn,\r\n  FlexGridCellTemplate,\r\n} from \"@grapecity/wijmo.react.grid\";\r\nimport { FlexGridFilter } from \"@grapecity/wijmo.react.grid.filter\";\r\nimport { Operator } from \"@grapecity/wijmo.grid.filter\";\r\nimport { FlexGridSearch } from \"@grapecity/wijmo.react.grid.search\";\r\nimport { CollectionView } from \"@grapecity/wijmo\";\r\nimport { CollectionViewNavigator, ListBox } from \"@grapecity/wijmo.react.input\";\r\nimport { Selector } from \"@grapecity/wijmo.grid.selector\";\r\nimport { HeadersVisibility } from \"@grapecity/wijmo.grid\";\r\nimport { showPopup, hidePopup, PopupPosition } from \"@grapecity/wijmo\";\r\nimport * as wjcGridXlsx from \"@grapecity/wijmo.grid.xlsx\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport { GroupPanel } from \"@grapecity/wijmo.react.grid.grouppanel\";\r\nimport { Button, Card, Popup } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as loadash from \"lodash\";\r\nimport \"@grapecity/wijmo.touch\";\r\n\r\nconst WijmoGrid = (props) => {\r\n  const [flex, setFlex] = useState(null);\r\n  const [translator] = useTranslation();\r\n  const _getData = (pageLength) => {\r\n    return new CollectionView(props.sourceData, {\r\n      pageSize: pageLength,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState(_getData(props.rowsPerPage));\r\n  const theGrid = React.createRef();\r\n  const theSearch = React.createRef();\r\n  const gridFilter = React.createRef();\r\n  const pagingComponent = React.createRef();\r\n  const colPicker = React.useRef();\r\n\r\n  // to keep track of selected rows\r\n  const selectedRows = React.useRef(props.selectionRequired ? [] : null);\r\n\r\n  // to initialize grid checkbox selection\r\n  let selector = null;\r\n\r\n  //Initialize grid\r\n  const gridInitialized = (grid) => {\r\n    try {\r\n      // localize grid filter\r\n      customizeFilterConditions();\r\n\r\n      if (props.onRowClick) {\r\n        // add row click event handler\r\n        grid.addEventListener(grid.hostElement, \"click\", (e) => {\r\n          let ht = grid.hitTest(e);\r\n          // condition to check if cell is not a grouped cell and a data cell\r\n          if (\r\n            ht.target.closest(\".wj-cell\") &&\r\n            ![...ht.target.closest(\".wj-cell\").classList].includes(\r\n              \"wj-group\"\r\n            ) &&\r\n            ht.cellType === wjGrid.CellType.Cell\r\n          ) {\r\n            // fetch row data\r\n            const rowData = grid.rows[ht.row].dataItem;\r\n            props.onRowClick(rowData);\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      grid.select(-1, -1);\r\n\r\n      setFlex(grid);\r\n      if (props.selectionRequired) {\r\n        // enable checkbox selection\r\n        selector = new Selector(grid, {\r\n          itemChecked: (s, e) => {\r\n            // if only single checkbox selection is required\r\n            if (props.singleSelection) {\r\n              grid.rows\r\n                .filter((row) => {\r\n                  return (\r\n                    row.isSelected &&\r\n                    selectedRows.current.filter((item) =>\r\n                      loadash.isEqual(item, row.dataItem)\r\n                    ).length === 1\r\n                  );\r\n                })\r\n                .forEach((row) => {\r\n                  row.isSelected = false;\r\n                });\r\n            }\r\n\r\n            // pass row data as parameter to checkbox selection handler\r\n            props.onSelectionHandle(\r\n              grid.rows\r\n                .filter((r) => r.isSelected)\r\n                .map((selectedRow) => selectedRow.dataItem)\r\n            );\r\n          },\r\n          // if only single checkbox selection is required\r\n          showCheckAll: !props.singleSelection,\r\n        });\r\n\r\n        let theGrid = selector.column.grid;\r\n        selector.column = theGrid.rowHeaders.columns[0];\r\n        theGrid.headersVisibility = HeadersVisibility.All;\r\n        theGrid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in gridInitialized: \" + error);\r\n    }\r\n  };\r\n\r\n  //Update grid when data changes\r\n  useEffect(() => {\r\n    try {\r\n      if (theGrid != null) {\r\n        //Connect search to the grid\r\n        let grid = theGrid.current.control;\r\n        let search = theSearch.current.control;\r\n        search.grid = grid;\r\n      }\r\n\r\n      setData(_getData(props.rowsPerPage));\r\n    } catch (error) {\r\n      console.log(\"Error in grid update:\", error);\r\n    }\r\n  }, [props.sourceData]);\r\n\r\n  // Pre-select grid rows based on selectedItems props\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && props.selectionRequired) {\r\n        // clear the selectedRows array\r\n        selectedRows.current.length = 0;\r\n        // add selectedItems array items to selectedRows\r\n        selectedRows.current.push(...props.selectedItems);\r\n\r\n        flex.rows.forEach((row) => {\r\n          if (\r\n            props.selectedItems.filter((item) =>\r\n              loadash.isEqual(item, row.dataItem)\r\n            ).length === 1\r\n          ) {\r\n            // checks the row checkbox\r\n            row.isSelected = true;\r\n          } else {\r\n            // unchecks the row checkbox\r\n            row.isSelected = false;\r\n          }\r\n        });\r\n\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in pre-selecting rows:\", error);\r\n    }\r\n  }, [props.selectedItems]);\r\n\r\n  //Load the state of grid\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(props.parentComponent + \"GridState\") &&\r\n        localStorage.getItem(props.parentComponent + \"GridState\") !== \"null\" &&\r\n        flex\r\n      ) {\r\n        // restore grid settings\r\n        let gridState = JSON.parse(\r\n          localStorage.getItem(props.parentComponent + \"GridState\")\r\n        );\r\n        let newFlex = flex;\r\n\r\n        // restore column picker settings\r\n        newFlex.columns.forEach((col) => {\r\n          let matchedCol = gridState.columns.filter(\r\n            (colSetting) => colSetting.binding === col.binding\r\n          );\r\n          col.visible =\r\n            matchedCol.length > 0 ? matchedCol[0].visible : col.visible;\r\n        });\r\n\r\n        // restore filter settings\r\n        gridFilter.current.control.filterDefinition =\r\n          gridState.filterDefinition;\r\n\r\n        // restore sort settings\r\n        newFlex.collectionView.deferUpdate(() => {\r\n          newFlex.collectionView.sortDescriptions.clear();\r\n          for (let i = 0; i < gridState.sortDescriptions.length; i++) {\r\n            let sortDesc = gridState.sortDescriptions[i];\r\n            newFlex.collectionView.sortDescriptions.push(\r\n              new wjCore.SortDescription(sortDesc.property, sortDesc.ascending)\r\n            );\r\n          }\r\n        });\r\n\r\n        // restore grouping settings\r\n        for (let i = 0; i < gridState.groupDescriptions.length; i++) {\r\n          newFlex.collectionView.groupDescriptions.push(\r\n            new wjCore.PropertyGroupDescription(gridState.groupDescriptions[i])\r\n          );\r\n          newFlex.columns.filter(\r\n            (col) => col.binding === gridState.groupDescriptions[i]\r\n          )[0].visible = false;\r\n        }\r\n\r\n        if (\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") &&\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") !== \"null\"\r\n        ) {\r\n          let gridSessionState = JSON.parse(\r\n            sessionStorage.getItem(props.parentComponent + \"GridState\")\r\n          );\r\n          // restore paging settings\r\n          newFlex.collectionView.moveToPage(\r\n            newFlex.collectionView.pageCount - 1 >= gridSessionState.pageIndex\r\n              ? gridSessionState.pageIndex\r\n              : newFlex.collectionView.pageCount - 1\r\n          );\r\n\r\n          // restore search settings\r\n          if (theSearch) {\r\n            theSearch.current.control.text = gridSessionState.searchText;\r\n          }\r\n        }\r\n\r\n        setFlex(newFlex);\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in restoring local storage settings: \", error);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set Column Picker Properties\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && colPicker.current && props.columnPickerRequired) {\r\n        colPicker.current.itemsSource = flex.columns;\r\n        colPicker.current.checkedMemberPath = \"visible\";\r\n        colPicker.current.displayMemberPath = \"header\";\r\n        colPicker.current.lostFocus.addHandler(() => {\r\n          hidePopup(colPicker.current.hostElement);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in initializing column picker properties:\", error);\r\n    }\r\n  }, [colPicker.current]);\r\n\r\n  useEffect(() => {\r\n    // remove column picker pop-up on component unmount\r\n    return () => {\r\n      if (props.columnPickerRequired && colPicker.current) {\r\n        hidePopup(colPicker.current.hostElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // export grid data to excel\r\n  const exportExcel = () => {\r\n    try {\r\n      let gridFlex = flex;\r\n      //to download all rows from all pages\r\n      gridFlex.itemsSource.pageSize = props.sourceData.length;\r\n      setFlex(gridFlex);\r\n      wjcGridXlsx.FlexGridXlsxConverter.saveAsync(\r\n        flex,\r\n        {\r\n          includeColumnHeaders: true,\r\n          includeCellStyles: false,\r\n          formatItem: null,\r\n        },\r\n        props.exportFileName\r\n      );\r\n\r\n      //to restore paging\r\n      gridFlex.itemsSource.pageSize = props.rowsPerPage;\r\n      setFlex(gridFlex);\r\n    } catch (error) {\r\n      console.log(\"Error in export grid to excel:\", error);\r\n    }\r\n  };\r\n\r\n  const terminalPopOver = (terminalCodes) => {\r\n    if (terminalCodes.split(\",\").length > props.terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={terminalCodes.split(\",\").length}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return terminalCodes;\r\n    }\r\n  };\r\n\r\n  const displayValues = (value, columnDetail) => {\r\n    if (columnDetail !== undefined && columnDetail !== null) {\r\n      if (typeof value === \"boolean\" || columnDetail.Name === \"Active\") {\r\n        if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n        else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n      } else if (value === \"\" || value === null || value === undefined) {\r\n        return value;\r\n      } else if (\r\n        (columnDetail.Name === \"TerminalCodes\" ||\r\n          columnDetail.PopOver === \"1\") &&\r\n        value !== null\r\n      ) {\r\n        return terminalPopOver(value);\r\n      }\r\n      // var columnType = columnDetails.find(function (detail) {\r\n      //   if (detail.Name === field) {\r\n      //     return detail;\r\n      //   }\r\n      // });\r\n      else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"DateTime\"\r\n      ) {\r\n        return (\r\n          new Date(value).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(value).toLocaleTimeString()\r\n        );\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Date\"\r\n      ) {\r\n        return new Date(value).toLocaleDateString();\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Time\"\r\n      ) {\r\n        return new Date(value).toLocaleTimeString();\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  //Initialize Column Picker\r\n  const initializedPicker = (picker) => {\r\n    if (props.columnPickerRequired) {\r\n      colPicker.current = picker;\r\n    }\r\n  };\r\n\r\n  // Column Picker Handler\r\n  const colPickerClickHandler = (event) => {\r\n    try {\r\n      let host = colPicker.current.hostElement;\r\n      if (!host.offsetHeight) {\r\n        showPopup(host, event.target, PopupPosition.Below, true, false);\r\n        colPicker.current.focus();\r\n      } else {\r\n        hidePopup(host, true, true);\r\n        flex.focus();\r\n      }\r\n\r\n      colPicker.current.focus();\r\n      event.preventDefault();\r\n    } catch (error) {\r\n      console.log(\"Error in Column Picker click event:\", error);\r\n    }\r\n  };\r\n\r\n  const saveGridState = () => {\r\n    try {\r\n      if (flex && gridFilter.current) {\r\n        // grid column, filter, sort and grouping settings\r\n        let gridState = {\r\n          columns: flex.columns.map((col) => {\r\n            return {\r\n              binding: col.binding,\r\n              visible: col.visible,\r\n            };\r\n          }),\r\n          filterDefinition: gridFilter.current.control.filterDefinition,\r\n          sortDescriptions: flex.collectionView.sortDescriptions.map(\r\n            (sortDesc) => {\r\n              return {\r\n                property: sortDesc.property,\r\n                ascending: sortDesc.ascending,\r\n              };\r\n            }\r\n          ),\r\n          groupDescriptions: flex.collectionView.groupDescriptions.map(\r\n            (group) => {\r\n              if (group.propertyName) {\r\n                return group.propertyName;\r\n              }\r\n\r\n              return null;\r\n            }\r\n          ),\r\n        };\r\n\r\n        // add class to grouped checkbox div element\r\n        if (\r\n          flex.collectionView.groupDescriptions &&\r\n          flex.collectionView.groupDescriptions.length > 0\r\n        ) {\r\n          let groupedCheckboxes = [\r\n            ...document.getElementsByClassName(\"wj-column-selector-group\"),\r\n          ];\r\n          groupedCheckboxes.forEach((chkbx) => {\r\n            chkbx.parentNode.parentNode.classList.add(\"wj-grouped-checkbox\");\r\n          });\r\n        }\r\n\r\n        // grid paging and search settings\r\n        let sessionState = {\r\n          pageIndex: flex.collectionView.pageIndex,\r\n          searchText: theSearch.current.control.text,\r\n        };\r\n\r\n        localStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(gridState)\r\n        );\r\n        sessionStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(sessionState)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in saving grid state\");\r\n    }\r\n  };\r\n\r\n  // customize grid filter text and dropdowns\r\n  const customizeFilterConditions = () => {\r\n    // localize the FlexGrid filter\r\n    let filter = wjCore.culture.FlexGridFilter,\r\n      operator = Operator;\r\n    wjCore.culture.FlexGridFilter.header = translator(\"WijmoGridFilterHeader\");\r\n    wjCore.culture.FlexGridFilter.ascending =\r\n      \"\\u2191 \" + translator(\"WijmoGridFilterAscending\");\r\n    wjCore.culture.FlexGridFilter.descending =\r\n      \"\\u2193 \" + translator(\"WijmoGridFilterDescending\");\r\n    wjCore.culture.FlexGridFilter.apply = translator(\"RoleAdminEdit_Apply\");\r\n    wjCore.culture.FlexGridFilter.clear = translator(\"OrderCreate_btnClear\");\r\n    wjCore.culture.FlexGridFilter.conditions = translator(\r\n      \"WijmoGridFilterCondition\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.values = translator(\"WijmoGridFilterValue\");\r\n    wjCore.culture.FlexGridFilter.search = translator(\r\n      \"LoadingDetailsView_SearchGrid\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.selectAll = translator(\r\n      \"WijmoGridFilterSelectAll\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.and = translator(\"WijmoGridFilterAnd\");\r\n    wjCore.culture.FlexGridFilter.or = translator(\"WijmoGridFilterOr\");\r\n    wjCore.culture.FlexGridFilter.cancel = translator(\"AccessCardInfo_Cancel\");\r\n    // wjCore.culture.FlexGridFilter.null = 'test';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.and = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.asc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dialog = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dsc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.edit = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op2 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.or = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.search = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val2 = '';\r\n\r\n    // localize FlexGrid filter operators\r\n    filter.stringOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterBeginsWith\"), op: operator.BW },\r\n      { name: translator(\"WijmoGridFilterEndsWith\"), op: operator.EW },\r\n      { name: translator(\"WijmoGridFilterContains\"), op: operator.CT },\r\n      { name: translator(\"WijmoGridFilterDoesNotContain\"), op: operator.NC },\r\n    ];\r\n    filter.numberOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterGreaterThan\"), op: operator.GT },\r\n      { name: translator(\"WijmoGridFilterLessThan\"), op: operator.LT },\r\n      {\r\n        name: translator(\"WijmoGridFilterGreaterThanOrEqual\"),\r\n        op: operator.GE,\r\n      },\r\n      { name: translator(\"WijmoGridFilterLessThanOrEqual\"), op: operator.LE },\r\n    ];\r\n    filter.dateOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterDateEarlierThan\"), op: operator.LT },\r\n      { name: translator(\"WijmoGridFilterDateLaterThan\"), op: operator.GT },\r\n    ];\r\n    filter.booleanOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n    ];\r\n  };\r\n\r\n  // set column width based on screen size\r\n  const getWidth = (columnDetails) => {\r\n    try {\r\n      const screenWidth = window.screen.width;\r\n      if (screenWidth < 1024) {\r\n        if (columnDetails.WidthPx && columnDetails.WidthPx !== \"\")\r\n          return parseInt(columnDetails.WidthPx);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in width:\", error);\r\n    }\r\n\r\n    return columnDetails.WidthPercentage.includes(\"*\")\r\n      ? columnDetails.WidthPercentage\r\n      : parseInt(columnDetails.WidthPercentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pl-1\">\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <React.Fragment>\r\n              <div className=\"row pl-0\">\r\n                <div className=\"col-10 col-sm-12 col-md-5 col-lg-6\">\r\n                  <FlexGridSearch\r\n                    class=\"ui single-input\"\r\n                    ref={theSearch}\r\n                    placeholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-10 col-sm-12 col-md-7 col-lg-6\">\r\n                  <div style={{ float: \"right\" }}>\r\n                    {props.columnPickerRequired ? (\r\n                      <Button\r\n                        id=\"colPicker\"\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        onClick={(event) => colPickerClickHandler(event)}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridColumnPicker\")}\r\n                        </div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          <Icon\r\n                            name=\"caret-down\"\r\n                            className=\"btnIcon\"\r\n                            size=\"small\"\r\n                          />\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.exportRequired ? (\r\n                      <Button\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        className=\"mt-3 mt-md-0\"\r\n                        onClick={exportExcel}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridExport\")}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            className=\"icon-Xls\"\r\n                            style={{\r\n                              fontSize: \"17px\",\r\n                              position: \"absolute\",\r\n                              top: \"3px\",\r\n                            }}\r\n                          ></span>\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tableScroll\">\r\n                {props.columnGroupingRequired ? (\r\n                  <GroupPanel\r\n                    className=\"group-panel\"\r\n                    grid={flex}\r\n                    placeholder={t(\"WijmoGridGroupPanelPlaceholder\")}\r\n                  />\r\n                ) : null}\r\n                <ErrorBoundary>\r\n                  <FlexGrid\r\n                    ref={theGrid}\r\n                    autoGenerateColumns={false}\r\n                    alternatingRowStep={0}\r\n                    autoRowHeights={true}\r\n                    headersVisibility=\"Column\"\r\n                    itemsSource={data}\r\n                    selectionMode={wjCore.asEnum(\"None\", wjGrid.SelectionMode)}\r\n                    initialized={gridInitialized}\r\n                    virtualizationThreshold={[0, 10000]}\r\n                    onUpdatedView={saveGridState}\r\n                  >\r\n                    <FlexGridFilter ref={gridFilter} />\r\n                    {props.columns.map((column) => {\r\n                      return (\r\n                        <FlexGridColumn\r\n                          header={t(column.Name)}\r\n                          key={column.Name}\r\n                          binding={column.Name}\r\n                          width={getWidth(column)}\r\n                          minWidth={100}\r\n                          isReadOnly={true}\r\n                          wordWrap={true}\r\n                          align=\"left\"\r\n                        >\r\n                          <FlexGridCellTemplate\r\n                            cellType=\"Cell\"\r\n                            template={(context) => {\r\n                              return (\r\n                                <span\r\n                                  style={\r\n                                    props.conditionalRowStyleCheck == null ||\r\n                                    !props.conditionalRowStyleCheck(\r\n                                      context.item\r\n                                    )\r\n                                      ? null\r\n                                      : { ...props.conditionalRowStyles }\r\n                                  }\r\n                                >\r\n                                  {displayValues(\r\n                                    context.item[column.Name],\r\n                                    column\r\n                                  )}\r\n                                </span>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FlexGridColumn>\r\n                      );\r\n                    })}\r\n                  </FlexGrid>\r\n                </ErrorBoundary>\r\n                {props.columnPickerRequired ? (\r\n                  <div className=\"column-picker-div\">\r\n                    <ListBox\r\n                      className=\"column-picker\"\r\n                      initialized={(picker) => initializedPicker(picker)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"row\">\r\n                <CollectionViewNavigator\r\n                  ref={pagingComponent}\r\n                  className=\"ml-auto mr-auto mt-3\"\r\n                  headerFormat={t(\"WijmoGridPagingTemplate\")}\r\n                  byPage={true}\r\n                  cv={data}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nWijmoGrid.propTypes = {\r\n  sourceData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  exportRequired: PropTypes.bool.isRequired,\r\n  exportFileName: PropTypes.string,\r\n  selectionRequired: PropTypes.bool,\r\n  columnPickerRequired: PropTypes.bool,\r\n  columnGroupingRequired: PropTypes.bool,\r\n  conditionalRowStyleCheck: PropTypes.func,\r\n  conditionalRowStyles: PropTypes.object,\r\n  rowsPerPage: PropTypes.number,\r\n  onSelectionHandle: PropTypes.func,\r\n  parentComponent: PropTypes.string.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  terminalsToShow: PropTypes.number,\r\n  singleSelection: PropTypes.bool,\r\n  selectedItems: PropTypes.array,\r\n};\r\n\r\nWijmoGrid.defaultProps = {\r\n  sourceData: [],\r\n  columns: [],\r\n  exportRequired: true,\r\n  exportFileName: \"Grid.xlsx\",\r\n  selectionRequired: false,\r\n  columnPickerRequired: false,\r\n  columnGroupingRequired: false,\r\n  rowsPerPage: 10,\r\n  terminalsToShow: 2,\r\n  singleSelection: false,\r\n  selectedItems: [],\r\n};\r\n\r\nexport default WijmoGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WijmoGrid from '../../UIBase/Common/WijmoGrid';\r\n\r\nconst WijmoGridComposite = (props) => {\r\n    return (\r\n        <WijmoGrid\r\n            sourceData={props.data}\r\n            columns={props.columns}\r\n            exportRequired={props.exportRequired}\r\n            exportFileName={props.exportFileName}\r\n            columnPickerRequired={props.columnPickerRequired}\r\n            selectionRequired={props.selectionRequired}\r\n            columnGroupingRequired={props.columnGroupingRequired}\r\n            conditionalRowStyleCheck={props.conditionalRowStyleCheck}\r\n            conditionalRowStyles={props.conditionalRowStyles}\r\n            rowsPerPage={props.rowsPerPage}\r\n            onSelectionHandle={props.onSelectionHandle}\r\n            onRowClick={props.onRowClick}\r\n            parentComponent={props.parentComponent}\r\n            terminalsToShow={props.terminalsToShow}\r\n            singleSelection={props.singleSelection}\r\n            selectedItems={props.selectedItems}\r\n        />\r\n    )\r\n}\r\n\r\nWijmoGridComposite.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n    exportRequired: PropTypes.bool.isRequired,\r\n    exportFileName: PropTypes.string,\r\n    selectionRequired: PropTypes.bool,\r\n    columnPickerRequired: PropTypes.bool,\r\n    columnGroupingRequired: PropTypes.bool,\r\n    conditionalRowStyleCheck: PropTypes.func,\r\n    conditionalRowStyles: PropTypes.object,\r\n    rowsPerPage: PropTypes.number,\r\n    onSelectionHandle: PropTypes.func,\r\n    parentComponent: PropTypes.string.isRequired,\r\n    onRowClick: PropTypes.func,\r\n    terminalsToShow: PropTypes.number,\r\n    singleSelection: PropTypes.bool,\r\n    selectedItems: PropTypes.array\r\n}\r\n\r\nexport default WijmoGridComposite;","import React from \"react\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Icon } from \"@scuf/common\";\r\nRailTransloadingDetails.propTypes = {\r\n  railTransloading: PropTypes.object.isRequired,\r\n  railReceipt: PropTypes.object.isRequired,\r\n  selectedCompRow: PropTypes.array.isRequired,\r\n  railTransloadingAssociatedShipmentsColumns: PropTypes.array.isRequired,\r\n  railTransloadingDetailsColumns: PropTypes.array.isRequired,\r\n  dsCompartmentsBaseProduct: PropTypes.array.isRequired,\r\n  dsTransloadingShipments: PropTypes.array.isRequired,\r\n  dsTransloadingShipmentLoadingDetails: PropTypes.array.isRequired,\r\n  handleRowSelectionChange: PropTypes.func.isRequired,\r\n  setCurrentList: PropTypes.func.isRequired,\r\n  isSelect: PropTypes.object.isRequired,\r\n  onRowClick: PropTypes.func.isRequired,\r\n  expandedRows: PropTypes.array.isRequired,\r\n  toggleExpand: PropTypes.func.isRequired,\r\n};\r\nexport function RailTransloadingDetails({\r\n  railTransloading,\r\n  railReceipt,\r\n  dsCompartmentsBaseProduct,\r\n  dsTransloadingShipments,\r\n  dsTransloadingShipmentLoadingDetails,\r\n  railTransloadingAssociatedShipmentsColumns,\r\n  railTransloadingDetailsColumns,\r\n  handleRowSelectionChange,\r\n  selectedCompRow,\r\n  setCurrentList,\r\n  isSelect,\r\n  onRowClick,\r\n  expandedRows,\r\n  toggleExpand,\r\n}) {\r\n  const [t] = useTranslation();\r\n  // const decimalDisplayValues = (cellData) => {\r\n  //   const { value } = cellData;\r\n  //   if (typeof value === \"number\") {\r\n  //     return value.toLocaleString();\r\n  //   } else {\r\n  //     return value;\r\n  //   }\r\n  // };\r\n  const expanderTemplate = (data) => {\r\n    const open =\r\n      expandedRows.findIndex((x) => x.compSeqNo === data.rowData.compSeqNo) >= 0\r\n        ? true\r\n        : false;\r\n    return (\r\n      <div\r\n        onClick={() => toggleExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"slidercontrols-minus\" : \"ellipsis-horizontal\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  const rowExpansionTemplate = (data) => {\r\n    let CompData = [];\r\n    CompData.push(data);\r\n    return (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable data={CompData}>\r\n          <DataTable.Column\r\n            className=\"starttotalizer\"\r\n            key=\"starttotalizer\"\r\n            field=\"starttotalizer\"\r\n            header={t(\"StartTotalizer\")}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"endtotalizer\"\r\n            key=\"endtotalizer\"\r\n            field=\"endtotalizer\"\r\n            header={t(\"EndTotalizer\")}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"productdensity\"\r\n            key=\"productdensity\"\r\n            field=\"productdensity\"\r\n            header={t(\"Density\")}\r\n            editable={false}\r\n            renderer={(cellData) => convertNumberWithUOM(cellData.value)}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"temperature\"\r\n            key=\"temperature\"\r\n            field=\"temperature\"\r\n            header={t(\"Temperature\")}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"pressure\"\r\n            key=\"pressure\"\r\n            field=\"pressure\"\r\n            header={t(\"Pressure\")}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n        </DataTable>\r\n      </div>\r\n    );\r\n  };\r\n  const convertNumberWithUOM = (quantityString) => {\r\n    if (quantityString === null || quantityString === undefined) {\r\n      return \"\";\r\n    }\r\n    const quantityList = quantityString.split(\" \", 2);\r\n    if (quantityList.length !== 2) {\r\n      return \"\";\r\n    }\r\n    if (quantityList[0] === \"\") {\r\n      return \"\";\r\n    }\r\n    return parseFloat(quantityList[0]).toLocaleString() + \" \" + quantityList[1];\r\n  };\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"BayAllocationReceiptSearch_ReceiptCode\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>{railReceipt.ReceiptCode}</label>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"BayAllocationReceiptSearch_ReceiptStatus\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>{railReceipt.ReceiptStatus}</label>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-2\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"viewTransloading_NoOfComps\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>{railTransloading.totalNoOfTransWagons}</label>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-2\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"viewTransloading_NoOfBps\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>{railTransloading.NoOfProducts}</label>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"viewTransloading_TotalReceiptQty\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>\r\n                {railTransloading.receiptPlannedQty.toLocaleString() +\r\n                  \" \" +\r\n                  railTransloading.PlanQuantityUOM}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"viewTransloading_ReceiptPlannedQty\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>\r\n                {railTransloading.totalPlannedQtyForTransloadingWagons.toLocaleString() +\r\n                  \" \" +\r\n                  railTransloading.PlanQuantityUOM}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"viewTransloading_ReceiptUnloadedQty\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>\r\n                {railTransloading.totalUnloadedQtyForTransloadingWagons.toLocaleString() +\r\n                  \" \" +\r\n                  railTransloading.UnloadedQuantityUOM}\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\" style={{ alignItems: \"stretch\" }}>\r\n            <div\r\n              className=\"col-12 col-md-6 col-lg-2\"\r\n              style={{ border: \"1px solid #c8c8c8\", minHeight: \"400px\" }}\r\n            >\r\n              <div>\r\n                <label className=\"headerLabel\">\r\n                  {t(\"viewTransloading_Compartments\")}\r\n                </label>\r\n              </div>\r\n\r\n              <ul>\r\n                {railTransloading.lstCompartmentList.map((item, i) => {\r\n                  return (\r\n                    <li\r\n                      index={i}\r\n                      className={isSelect === i ? \"activeted\" : \"\"}\r\n                      onClick={(e) => setCurrentList(e, item.CompartmentCode)}\r\n                      key={item.CompartmentCode}\r\n                    >\r\n                      {item.compartBP}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-10\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 col-lg-10\">\r\n                  <br></br>\r\n                  <br></br>\r\n                  <label className=\"TransloadingheaderLabel\">\r\n                    {t(\"ViewShipment_Compartment\")}\r\n                  </label>\r\n                  <label>:</label>\r\n                  <label> </label>\r\n                  <label className=\"TransloadingheaderLabel\">\r\n                    {railTransloading.selectCompartment.CompartmentCode}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 col-lg-3\">\r\n                  <b>\r\n                    <label>{t(\"viewTransloading_BPCode\")}</label>\r\n                  </b>\r\n                  <label>:</label>\r\n                  <label> </label>\r\n                  <label>\r\n                    {railTransloading.selectCompartment.CompartmentProduct}\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-3\">\r\n                  <b>\r\n                    <label>\r\n                      {t(\"LocalTransactionsMapping_PlannedQuantity\")}\r\n                    </label>\r\n                  </b>\r\n                  <label>:</label>\r\n                  <label> </label>\r\n                  <label>\r\n                    {railTransloading.selectCompartment.PlannedQuantity.toLocaleString() +\r\n                      \" \" +\r\n                      railTransloading.selectCompartment.PlanQuantityUOM}\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-3\">\r\n                  <b>\r\n                    <label>{t(\"UnLoadingInfo_UnloadQuantity\")}</label>\r\n                  </b>\r\n                  <label>:</label>\r\n                  <label> </label>\r\n                  <label>\r\n                    {railTransloading.selectCompartment.UnloadedQuantity.toLocaleString() +\r\n                      \" \" +\r\n                      railTransloading.selectCompartment.UnloadedQuantityUOM}\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-3\">\r\n                  <b>\r\n                    <label>{t(\"UserAdmin_Status\")}</label>\r\n                  </b>\r\n                  <label>:</label>\r\n                  <label> </label>\r\n                  <label>\r\n                    {\r\n                      railTransloading.selectCompartment\r\n                        .ReceiptCompartmentStatus\r\n                    }\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <br></br>\r\n              <div\r\n                className=\"row\"\r\n                style={{\r\n                  display: railTransloading.showShipment ? \"block\" : \"none\",\r\n                }}\r\n              >\r\n                <label className=\"TransloadingheaderLabel\">\r\n                  {t(\"viewTransloading_AssocShips\")}\r\n                </label>\r\n                <label>:</label>\r\n                <label> </label>\r\n              </div>\r\n              <div\r\n                className=\"row\"\r\n                style={{\r\n                  display: railTransloading.showShipment ? \"block\" : \"none\",\r\n                }}\r\n              >\r\n                <DataTable\r\n                  data={dsTransloadingShipments}\r\n                  selectionMode=\"multiple\"\r\n                  onCellClick={(data) =>\r\n                    onRowClick !== undefined ? onRowClick(data.rowData) : {}\r\n                  }\r\n                  onSelectionChange={handleRowSelectionChange}\r\n                >\r\n                  {dsTransloadingShipments !== null &&\r\n                  dsTransloadingShipments.length > 0\r\n                    ? railTransloadingAssociatedShipmentsColumns.map(function (\r\n                        key\r\n                      ) {\r\n                        return (\r\n                          <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            key={key.displayName}\r\n                            field={key.field}\r\n                            header={t(key.displayName)}\r\n                            editable={false}\r\n                            rowHeader={false}\r\n                            editFieldType=\"text\"\r\n                          ></DataTable.Column>\r\n                        );\r\n                      })\r\n                    : \"\"}\r\n                </DataTable>\r\n              </div>\r\n              <br></br>\r\n              <div\r\n                className=\"row\"\r\n                style={{\r\n                  display: railTransloading.showLoadingDetails\r\n                    ? \"block\"\r\n                    : \"none\",\r\n                }}\r\n              >\r\n                <label className=\"TransloadingheaderLabel\">\r\n                  {t(\"viewTransloading_ShipLoadingDetails\")}\r\n                </label>\r\n                <label>:</label>\r\n                <label>{\"\"}</label>\r\n              </div>\r\n              <div\r\n                className=\"row\"\r\n                style={{\r\n                  display: railTransloading.showLoadingDetails\r\n                    ? \"block\"\r\n                    : \"none\",\r\n                }}\r\n              >\r\n                <DataTable\r\n                  data={dsTransloadingShipmentLoadingDetails}\r\n                  selectionMode=\"multiple\"\r\n                  rowExpansionTemplate={rowExpansionTemplate}\r\n                  expandedRows={expandedRows}\r\n                >\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"trailercode\"\r\n                    field=\"trailercode\"\r\n                    header={t(\"Trailer\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"compSeqNo\"\r\n                    field=\"compSeqNo\"\r\n                    header={t(\"ViewMarineLoadingDetails_CompartmentSeqNo\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"compartmentcode\"\r\n                    field=\"compartmentcode\"\r\n                    header={t(\"ViewShipment_CompartmentCode\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"productcode\"\r\n                    field=\"productcode\"\r\n                    header={t(\"UnloadingDetails_BaseProductCode\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"bcuCode\"\r\n                    field=\"bcuCode\"\r\n                    header={t(\"BCU_BCU\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"meterCode\"\r\n                    field=\"meterCode\"\r\n                    header={t(\"Meter_Meter\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"grossquantity\"\r\n                    field=\"grossquantity\"\r\n                    header={t(\"GrossQuantity\")}\r\n                    editable={false}\r\n                    renderer={(cellData) =>\r\n                      convertNumberWithUOM(cellData.value)\r\n                    }\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"netquantity\"\r\n                    field=\"netquantity\"\r\n                    header={t(\"NetQuantity\")}\r\n                    editable={false}\r\n                    renderer={(cellData) =>\r\n                      convertNumberWithUOM(cellData.value)\r\n                    }\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"starttime\"\r\n                    field=\"starttime\"\r\n                    header={t(\"StartTime\")}\r\n                    editable={false}\r\n                    renderer={(cellData) => {\r\n                      return new Date(cellData.value).toLocaleString();\r\n                    }}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"endtime\"\r\n                    field=\"endtime\"\r\n                    header={t(\"EndTime\")}\r\n                    editable={false}\r\n                    renderer={(cellData) => {\r\n                      return new Date(cellData.value).toLocaleString();\r\n                    }}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    renderer={expanderTemplate}\r\n                  />\r\n                </DataTable>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { RailTransloadingDetails } from \"../../UIBase/Details/RailTransloadingDetails\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport {\r\n  emptyMarineTransloading as emptyRailTransloading,\r\n  emptyRailReceipt,\r\n} from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport {\r\n  marineTransloadingDetailsColumns as railTransloadingDetailsColumns,\r\n  marineTransloadingAssociatedShipmentsColumns as railTransloadingAssociatedShipmentsColumns,\r\n} from \"../../../JS/DetailsTableValidationDef\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { getKeyByValue } from \"../../../JS/Utilities\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button } from \"@scuf/common\";\r\nclass RailTransloadingDetailsComposite extends Component {\r\n  state = {\r\n    railReceipt: lodash.cloneDeep(emptyRailReceipt),\r\n    railTransloading: lodash.cloneDeep(emptyRailTransloading),\r\n    modMarineReceipt: {},\r\n    railTransloadingAssociatedShipmentsColumns: lodash.cloneDeep(\r\n      railTransloadingAssociatedShipmentsColumns\r\n    ),\r\n    railTransloadingDetailsColumns: lodash.cloneDeep(\r\n      railTransloadingDetailsColumns\r\n    ),\r\n    isReadyToRender: false,\r\n    listOptions: {\r\n      shareholders: this.getShareholders(),\r\n      terminalCodes: this.props.terminalCodes,\r\n    },\r\n    dsCompartmentsBaseProduct: [],\r\n    dsTransloadingShipments: [],\r\n    dsTransloadingShipmentLoadingDetails: [],\r\n    saveEnabled: false,\r\n    selectedCompRow: [],\r\n    selectedAll: false,\r\n    isSelect: -1,\r\n    expandedRows: [],\r\n    selectCompartmentCode: \"\",\r\n  };\r\n  handleRowSelectionChange = (e) => {\r\n    this.setState({ selectedCompRow: e });\r\n  };\r\n  setCurrentList = (e, CompartmentCode) => {\r\n    try {\r\n      var selectCompartmentCode = lodash.cloneDeep(\r\n        this.state.selectCompartmentCode\r\n      );\r\n      var railTransloading = lodash.cloneDeep(this.state.railTransloading);\r\n      var railReceipt = lodash.cloneDeep(this.state.railReceipt);\r\n      if (selectCompartmentCode !== CompartmentCode) {\r\n        railTransloading.showLoadingDetails = false;\r\n        railReceipt.RailMarineReceiptCompartmentPlanList.forEach((element) => {\r\n          if (CompartmentCode === element.TrailerCode) {\r\n            railTransloading.selectCompartment.CompartmentCode =\r\n              element.TrailerCode;\r\n            railTransloading.selectCompartment.CompartmentProduct =\r\n              this.GetBaseProductForCompartment(element.SequenceNo);\r\n            railTransloading.selectCompartment.PlanQuantityUOM =\r\n              element.PlanQuantityUOM;\r\n            railTransloading.selectCompartment.PlannedQuantity =\r\n              element.PlannedQuantity.toLocaleString();\r\n            if (\r\n              element.UnloadedQuantityUOM !== undefined &&\r\n              element.UnloadedQuantityUOM !== null\r\n            )\r\n              railTransloading.selectCompartment.UnloadedQuantityUOM =\r\n                element.UnloadedQuantityUOM;\r\n            else railTransloading.selectCompartment.UnloadedQuantityUOM = \"\";\r\n            if (\r\n              element.UnloadedQuantity !== undefined &&\r\n              element.UnloadedQuantity !== null\r\n            )\r\n              railTransloading.selectCompartment.UnloadedQuantity =\r\n                element.UnloadedQuantity.toLocaleString();\r\n            else railTransloading.selectCompartment.UnloadedQuantity = \"0\";\r\n            railTransloading.selectCompartment.ReceiptCompartmentStatus =\r\n              getKeyByValue(\r\n                Constants.ReceiptCompartmentStatus,\r\n                element.ReceiptCompartmentStatus\r\n              );\r\n            this.setState({\r\n              isSelect: Number(e.currentTarget.getAttribute(\"index\")),\r\n              railTransloading: railTransloading,\r\n              selectCompartmentCode: CompartmentCode,\r\n            });\r\n            this.getReceiptShipments(\r\n              element.TrailerCode,\r\n              element.ReceiptCode,\r\n              element.CompartmentCode,\r\n              railTransloading\r\n            );\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingDetailsComposite:Error occured on setCurrentList\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  getReceiptShipments = (\r\n    TrailerCode,\r\n    ReceiptCode,\r\n    CompartmentCode,\r\n    railTransloading\r\n  ) => {\r\n    try {\r\n      var dsTransloadingShipments = [];\r\n      this.setState({\r\n        dsTransloadingShipments: dsTransloadingShipments,\r\n        railTransloading: railTransloading,\r\n      });\r\n      let obj = {\r\n        trailerCode: TrailerCode,\r\n        receiptCode: ReceiptCode,\r\n        compartmentCode: CompartmentCode,\r\n        transportationType: this.getTransportationType(),\r\n      };\r\n      axios(\r\n        RestAPIs.GetTransloadingShipments,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let dsTransloadingShipmentTable = result.EntityResult.Table;\r\n\r\n            if (\r\n              dsTransloadingShipmentTable != null &&\r\n              dsTransloadingShipmentTable.length > 0\r\n            ) {\r\n              railTransloading.showShipment = true;\r\n              dsTransloadingShipmentTable.forEach((element) => {\r\n                var loadedQuantity;\r\n                if (\r\n                  element.LoadedQty !== null &&\r\n                  element.LoadedQty !== undefined\r\n                ) {\r\n                  loadedQuantity =\r\n                    element.LoadedQty.toLocaleString() +\r\n                    \" \" +\r\n                    element.LoadedQuantityUOM;\r\n                }\r\n                var Quantity;\r\n                if (\r\n                  element.quantity !== null &&\r\n                  element.quantity !== undefined\r\n                ) {\r\n                  Quantity =\r\n                    element.quantity.toLocaleString() +\r\n                    \" \" +\r\n                    element.QuantityUOM;\r\n                }\r\n                dsTransloadingShipments.push({\r\n                  driver: element.driver,\r\n                  id: element.id,\r\n                  id1: element.id1,\r\n                  LoadedQty: loadedQuantity,\r\n                  LoadedQuantityUOM: element.LoadedQuantityUOM,\r\n                  quantity: Quantity,\r\n                  QuantityUOM: element.QuantityUOM,\r\n                  shipmentCode: element.shipmentCode,\r\n                  shipmentStatus: element.shipmentStatus,\r\n                  vehicle: element.vehicle,\r\n                });\r\n              });\r\n              this.setState({\r\n                dsTransloadingShipments: dsTransloadingShipments,\r\n                railTransloading: railTransloading,\r\n                isReadyToRender: true,\r\n              });\r\n            }\r\n          } else {\r\n            railTransloading.showShipment = false;\r\n            this.setState({\r\n              dsTransloadingShipments: dsTransloadingShipments,\r\n              railTransloading: railTransloading,\r\n              isReadyToRender: true,\r\n            });\r\n            console.log(\"Error in GetTransloadingShipments:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\r\n            \"Error while geting GetTransloadingShipments List:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingDetailsComposite:Error occured on getReceiptShipments\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  getShipmentLoadingDetails(\r\n    ShipmentCode,\r\n    ReceiptCode,\r\n    TrailerCode,\r\n    CompartmentCode\r\n  ) {\r\n    try {\r\n      var railTransloading = lodash.cloneDeep(this.state.railTransloading);\r\n      var dsTransloadingShipmentLoadingDetails = lodash.cloneDeep(\r\n        this.state.dsTransloadingShipmentLoadingDetails\r\n      );\r\n      var dsTransloadingShipments = lodash.cloneDeep(\r\n        this.state.dsTransloadingShipments\r\n      );\r\n      this.setState({\r\n        dsTransloadingShipmentLoadingDetails:\r\n          dsTransloadingShipmentLoadingDetails,\r\n        railTransloading: railTransloading,\r\n        dsTransloadingShipments,\r\n      });\r\n      let obj = {\r\n        shipmentCode: ShipmentCode,\r\n        trailerCode: TrailerCode,\r\n        receiptCode: ReceiptCode,\r\n        compartmentCode: CompartmentCode,\r\n        transportationType: this.getTransportationType(),\r\n      };\r\n      axios(\r\n        RestAPIs.GetShipmentLoadingDetails,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            dsTransloadingShipmentLoadingDetails = lodash.cloneDeep(\r\n              result.EntityResult.Table\r\n            );\r\n            if (\r\n              dsTransloadingShipmentLoadingDetails != null &&\r\n              dsTransloadingShipmentLoadingDetails.length > 0\r\n            ) {\r\n              railTransloading.showLoadingDetails = true;\r\n              this.setState({\r\n                dsTransloadingShipmentLoadingDetails:\r\n                  dsTransloadingShipmentLoadingDetails,\r\n                marineTransloading: railTransloading,\r\n                isReadyToRender: true,\r\n              });\r\n            }\r\n          } else {\r\n            railTransloading.showLoadingDetails = false;\r\n            this.setState({\r\n              dsTransloadingShipmentLoadingDetails:\r\n                dsTransloadingShipmentLoadingDetails,\r\n              marineTransloading: railTransloading,\r\n              isReadyToRender: true,\r\n            });\r\n            console.log(\r\n              \"Error in GetShipmentLoadingDetails:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\r\n            \"Error while geting GetShipmentLoadingDetails List:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingDetailsComposite:Error occured on getShipmentLoadingDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.railReceipt.ReceiptCode !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined\r\n      )\r\n        this.GetTransloadingReceiptCompartments(nextProps.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.GetCompartmentsBaseProducts(this.props.selectedRow.ReceiptCode);\r\n      //this.getMarineReceipt(this.props.selectedRow.ReceiptCode);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getShareholders() {\r\n    return Utilities.transferListtoOptions(\r\n      this.props.userDetails.EntityResult.ShareholderList\r\n    );\r\n  }\r\n\r\n  GetCompartmentsBaseProducts(ReceiptCode) {\r\n    var transportationType = this.getTransportationType();\r\n    emptyRailTransloading.TransportationType = transportationType;\r\n    var listOptions = lodash.cloneDeep(this.state.listOptions);\r\n    emptyRailTransloading.QuantityUOM =\r\n      this.props.userDetails.EntityResult.PageAttibutes.DefaultUOMS.QuantityUOM;\r\n    emptyRailTransloading.TerminalCodes =\r\n      this.props.terminalCodes.length === 1\r\n        ? [...this.props.terminalCodes]\r\n        : [];\r\n    if (ReceiptCode === undefined) {\r\n      this.setState({\r\n        railTransloading: { ...emptyRailTransloading },\r\n        modrailTransloading: { ...emptyRailTransloading },\r\n        listOptions,\r\n        isReadyToRender: true,\r\n      });\r\n      return;\r\n    }\r\n    axios(\r\n      RestAPIs.GetRailCompartmentsBaseProducts +\r\n        \"?ReceiptCode=\" +\r\n        ReceiptCode +\r\n        \"&TransportationType=RAIL\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var railTransloading = lodash.cloneDeep(this.state.railTransloading);\r\n          var dsCompartmentsBaseProduct = lodash.cloneDeep(\r\n            result.EntityResult.Table\r\n          );\r\n          if (\r\n            Array.isArray(dsCompartmentsBaseProduct) &&\r\n            dsCompartmentsBaseProduct.length > 0\r\n          ) {\r\n            dsCompartmentsBaseProduct.forEach((element) => {\r\n              if (element.IsTransloading) {\r\n                if (railTransloading.lstCompartmentBPs.length === 0)\r\n                  railTransloading.lstCompartmentBPs.push(\r\n                    element.BaseProductCode\r\n                  );\r\n                if (\r\n                  railTransloading.lstCompartmentBPs.filter((com) => {\r\n                    return com.BaseProductCode !== element.BaseProductCode;\r\n                  }).length === 0\r\n                ) {\r\n                  railTransloading.lstCompartmentBPs.push(\r\n                    element.BaseProductCode\r\n                  );\r\n                }\r\n              }\r\n            });\r\n            railTransloading.PlanQuantityUOM =\r\n              dsCompartmentsBaseProduct[0].PlanQuantityUOM;\r\n            if (\r\n              dsCompartmentsBaseProduct[0].UnloadedQuantityUOM !== undefined &&\r\n              dsCompartmentsBaseProduct[0].UnloadedQuantityUOM !== null\r\n            )\r\n              railTransloading.UnloadedQuantityUOM =\r\n                dsCompartmentsBaseProduct[0].UnloadedQuantityUOM;\r\n            else\r\n              railTransloading.UnloadedQuantityUOM =\r\n                dsCompartmentsBaseProduct[0].PlanQuantityUOM;\r\n\r\n            let ltCompartmentBPs = [];\r\n            dsCompartmentsBaseProduct.forEach((dr) => {\r\n              if (dr.IsTransloading) {\r\n                let i = ltCompartmentBPs.findIndex(el => \r\n                  el === dr.BaseProductCode\r\n                );\r\n\r\n                if (i < 0) {\r\n                  ltCompartmentBPs.push(dr.BaseProductCode);\r\n                }\r\n              }\r\n            });\r\n            railTransloading.NoOfProducts = ltCompartmentBPs.length;\r\n          }\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            railTransloading: lodash.cloneDeep(railTransloading),\r\n            dsCompartmentsBaseProduct: lodash.cloneDeep(\r\n              dsCompartmentsBaseProduct\r\n            ),\r\n          });\r\n          this.getRailReceipt(ReceiptCode);\r\n        } else {\r\n          this.setState({\r\n            railTransloading: lodash.cloneDeep(emptyRailTransloading),\r\n            modrailTransloading: lodash.cloneDeep(emptyRailTransloading),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\r\n            \"Error in GetCompartmentsBaseProducts:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting GetCompartmentsBaseProducts:\", error);\r\n        //throw error;\r\n      });\r\n  }\r\n\r\n  getRailReceipt(ReceiptCode) {\r\n    var transportationType = this.getTransportationType();\r\n    emptyRailTransloading.TransportationType = transportationType;\r\n    emptyRailTransloading.Active = true;\r\n    emptyRailTransloading.QuantityUOM =\r\n      this.props.userDetails.EntityResult.PageAttibutes.DefaultUOMS.QuantityUOM;\r\n    emptyRailTransloading.TerminalCodes =\r\n      this.props.terminalCodes.length === 1\r\n        ? [...this.props.terminalCodes]\r\n        : [];\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.railReceiptCode,\r\n        value: ReceiptCode,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: transportationType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.railReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailReceipt,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var railTransloading = lodash.cloneDeep(this.state.railTransloading);\r\n          let railReceipt = result.EntityResult;\r\n          if (\r\n            this.props.selectedRow != null &&\r\n            this.props.selectedRow != undefined\r\n          ) {\r\n            railReceipt.ReceiptStatus = this.props.selectedRow.ReceiptStatus;\r\n          }\r\n          if (\r\n            railReceipt !== null &&\r\n            railReceipt.RailMarineReceiptCompartmentPlanList !== null\r\n          ) {\r\n            railReceipt.RailMarineReceiptCompartmentPlanList.forEach(\r\n              (element) => {\r\n                if (\r\n                  element.IsTransloading !== null &&\r\n                  element.IsTransloading !== \"\" &&\r\n                  element.IsTransloading\r\n                ) {\r\n                  var compartBP =\r\n                    element.TrailerCode +\r\n                    \"(\" +\r\n                    this.GetBaseProductForCompartment(element.SequenceNo) +\r\n                    \")\";\r\n                  railTransloading.lstCompartmentList.push({\r\n                    compartBP: compartBP,\r\n                    CompartmentCode: element.TrailerCode,\r\n                  });\r\n                  railTransloading.totalNoOfTransWagons += 1;\r\n                  railTransloading.totalPlannedQtyForTransloadingWagons +=\r\n                    element.PlannedQuantity;\r\n                  if (\r\n                    element.UnloadedQuantity !== undefined &&\r\n                    element.UnloadedQuantity !== null\r\n                  ) {\r\n                    railTransloading.totalUnloadedQtyForTransloadingWagons +=\r\n                      element.UnloadedQuantity;\r\n                  }\r\n                }\r\n                railTransloading.receiptPlannedQty += element.PlannedQuantity;\r\n              }\r\n            );\r\n          }\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            railReceipt: lodash.cloneDeep(result.EntityResult),\r\n            railTransloading: lodash.cloneDeep(railTransloading),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            railReceipt: lodash.cloneDeep(emptyRailTransloading),\r\n            modMarineReceipt: lodash.cloneDeep(emptyRailTransloading),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in getRailReceipt:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting railReceipt:\", error);\r\n        //throw error;\r\n      });\r\n  }\r\n\r\n  GetBaseProductForCompartment(seqNO) {\r\n    let bp = \"\";\r\n    var dsCompartmentsBaseProduct = lodash.cloneDeep(\r\n      this.state.dsCompartmentsBaseProduct\r\n    );\r\n    if (\r\n      Array.isArray(dsCompartmentsBaseProduct) &&\r\n      dsCompartmentsBaseProduct.length > 0\r\n    ) {\r\n      var dataRows = dsCompartmentsBaseProduct.filter((com, cindex) => {\r\n        return com.SequenceNo === seqNO;\r\n      });\r\n      if (dataRows !== undefined && dataRows.length > 0) {\r\n        bp = dataRows[0].BaseProductCode;\r\n      }\r\n    }\r\n    return bp;\r\n  }\r\n\r\n  getTransportationType() {\r\n    var transportationType = Constants.TransportationType.RAIL;\r\n    const { genericProps } = this.props;\r\n    if (\r\n      genericProps !== undefined &&\r\n      genericProps.transportationType !== undefined\r\n    ) {\r\n      transportationType = genericProps.transportationType;\r\n    }\r\n    return transportationType;\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleRowClick = (e) => {\r\n    try {\r\n      var dsCompartmentsBaseProduct = lodash.cloneDeep(\r\n        this.state.dsCompartmentsBaseProduct\r\n      );\r\n      let selectCompartmentCode = lodash.cloneDeep(\r\n        this.state.selectCompartmentCode\r\n      );\r\n      if (e.shipmentCode != null || e.shipmentCode.length > 0) {\r\n        dsCompartmentsBaseProduct.forEach((element) => {\r\n          if (selectCompartmentCode === element.TrailerCode) {\r\n            this.getShipmentLoadingDetails(\r\n              e.shipmentCode,\r\n              element.ReceiptCode,\r\n              element.TrailerCode,\r\n              element.CompartmentCode\r\n            );\r\n          }\r\n        });\r\n      }\r\n      this.setState({\r\n        dsCompartmentsBaseProduct: dsCompartmentsBaseProduct,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"CarrierCompanyComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n  toggleExpand = (data, open) => {\r\n    let expandedRows = this.state.expandedRows;\r\n    let expandedRowIndex = expandedRows.findIndex(\r\n      (item) => item.compSeqNo === data.compSeqNo\r\n    );\r\n    if (open) {\r\n      expandedRows.splice(expandedRowIndex, 1);\r\n    } else {\r\n      expandedRows.push(data);\r\n    }\r\n    this.setState({ expandedRows });\r\n  };\r\n  render() {\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader newEntityName=\"viewTransloading_PageTitle\"></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <RailTransloadingDetails\r\n            railReceipt={this.state.railReceipt}\r\n            railTransloading={this.state.railTransloading}\r\n            selectedCompRow={this.state.selectedCompRow}\r\n            dsCompartmentsBaseProduct={this.state.dsCompartmentsBaseProduct}\r\n            dsTransloadingShipmentLoadingDetails={\r\n              this.state.dsTransloadingShipmentLoadingDetails\r\n            }\r\n            dsTransloadingShipments={this.state.dsTransloadingShipments}\r\n            railTransloadingAssociatedShipmentsColumns={\r\n              this.state.railTransloadingAssociatedShipmentsColumns\r\n            }\r\n            railTransloadingDetailsColumns={\r\n              this.state.railTransloadingDetailsColumns\r\n            }\r\n            handleRowSelectionChange={this.handleRowSelectionChange}\r\n            setCurrentList={this.setCurrentList}\r\n            onRowClick={this.handleRowClick}\r\n            isSelect={this.state.isSelect}\r\n            expandedRows={this.state.expandedRows}\r\n            toggleExpand={this.toggleExpand}\r\n          ></RailTransloadingDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <ErrorBoundary>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div className=\"row\">\r\n                  <div className=\"col col-2\">\r\n                    <Button\r\n                      className=\"backButton\"\r\n                      onClick={this.props.onBack}\r\n                      content={t(\"Back\")}\r\n                    ></Button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </ErrorBoundary>\r\n        </ErrorBoundary>\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nconst mapReceiptToProps = (receipt) => {\r\n  return {\r\n    userActions: bindActionCreators(getUserDetails, receipt),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapReceiptToProps\r\n)(RailTransloadingDetailsComposite);\r\n\r\nRailTransloadingDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  genericProps: PropTypes.object.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nexport function RailTransloadingSummaryPageComposite({\r\n    tableData,\r\n    columnDetails,\r\n    pageSize,\r\n    exportRequired,\r\n    exportFileName,\r\n    columnPickerRequired,\r\n    columnGroupingRequired,\r\n    terminalsToShow,\r\n    selectionRequired,     \r\n    onSelectionChange,\r\n    onRowClick,\r\n    parentComponent\r\n}) {\r\n    return (\r\n      <WijmoGridComposite\r\n      data={tableData}\r\n      columns={columnDetails}\r\n      rowsPerPage={pageSize}\r\n      exportRequired={exportRequired}\r\n      exportFileName={exportFileName}\r\n      columnPickerRequired={columnPickerRequired}\r\n      columnGroupingRequired={columnGroupingRequired}\r\n      terminalsToShow={terminalsToShow}\r\n      selectionRequired={selectionRequired}\r\n      onSelectionHandle={onSelectionChange}\r\n      onRowClick={onRowClick}\r\n      parentComponent={parentComponent}\r\n      ></WijmoGridComposite>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { RailTransloadingSummaryPageComposite } from \"../Summary/RailTransloadingSummaryComposite\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../../CSS/styles.css\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport { functionGroups, fnMarineReceipt } from \"../../../JS/FunctionGroups\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TMTransactionFilters } from \"../../UIBase/Common/TMTransactionFilters\";\r\nimport RailTransloadingDetailsComposite from \"../Details/RailTransloadingDetailsComposite\";\r\nimport Error from \"../../Error\";\r\n\r\nclass RailTransloadingComposite extends Component {\r\n  state = {\r\n    isDetails: \"false\",\r\n    isReadyToRender: false,\r\n    isDetailsModified: \"false\",\r\n    operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    selectedShareholder: \"\",\r\n    data: {},\r\n    terminalCodes: [],\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    dateError: \"\",\r\n    isEnable: true,\r\n  };\r\n\r\n  componentName = \"RailTransloadingComponent\";\r\n\r\n  handleRangeSelect = ({ to, from }) => {\r\n    if (to !== undefined) this.setState({ toDate: to });\r\n    if (from !== undefined) this.setState({ fromDate: from });\r\n  };\r\n\r\n  handleDateTextChange = (value, error) => {\r\n    if (value === \"\")\r\n      this.setState({ dateError: \"\", toDate: \"\", fromDate: \"\" });\r\n    if (error !== null && error !== \"\")\r\n      this.setState({\r\n        dateError: \"Common_InvalidDate\",\r\n        toDate: \"\",\r\n        fromDate: \"\",\r\n      });\r\n    else {\r\n      this.setState({ dateError: \"\", toDate: value.to, fromDate: value.from });\r\n    }\r\n  };\r\n\r\n  handleLoadOrders = () => {\r\n    var { operationsVisibilty } = { ...this.state };\r\n    operationsVisibilty.delete = false;\r\n    operationsVisibilty.shareholder = false;\r\n    let error = Utilities.validateDateRange(\r\n      this.state.toDate,\r\n      this.state.fromDate\r\n    );\r\n\r\n    if (error !== \"\") {\r\n      this.setState({ dateError: error });\r\n    } else {\r\n      this.setState({\r\n        dateError: \"\",\r\n        isDetails: \"false\",\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n      });\r\n      this.getRailReceipTransloadingtList(this.state.selectedShareholder);\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: \"false\",\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getMarineReceipTransloadingtList(this.state.selectedShareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingComposite:Error occured on Back click\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      this.setState({\r\n        isDetails: \"true\",\r\n        selectedRow: item,\r\n        selectedItems: [item],\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingComposite:Error occured on handleRowClick\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleSelection = (items) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n\r\n      operationsVisibilty.delete =\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnMarineReceipt\r\n        );\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ selectedItems: items, operationsVisibilty });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingComposite:Error occured on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = false;\r\n        operationsVisibilty.delete = false;\r\n        this.setState({ isDetailsModified: \"true\", operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            MarineReceiptCode: data.Code,\r\n            Common_Shareholder: data.ShareholderCode,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingComposite:Error occured on savedEvent\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getRailReceipTransloadingtList(shareholder) {\r\n    let fromDate = new Date(this.state.fromDate);\r\n    let toDate = new Date(this.state.toDate);\r\n    fromDate.setHours(0, 0, 0);\r\n    toDate.setHours(23, 59, 59);\r\n    let obj = {\r\n      ShareholderCode: shareholder,\r\n      startRange: fromDate,\r\n      endRange: toDate,\r\n      TransportationType: Constants.TransportationType.RAIL,\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailTransloadingForRole,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult != null &&\r\n            result.EntityResult.Table != null\r\n          ) {\r\n            for (\r\n              let index = 0;\r\n              index < result.EntityResult.Table.length;\r\n              index++\r\n            ) {\r\n              const element = result.EntityResult.Table[index];\r\n\r\n              if (parseInt(element.NoOfUnloadingWagons.toString()) > 0) {\r\n                element.ReceiptStatus = \"UNLOADING\";\r\n              }\r\n            }\r\n          }\r\n          this.setState({ data: result.EntityResult, isReadyToRender: true });\r\n        } else {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\r\n            \"Error in getRailReceipTransloadingtListForRole:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: [], isReadyToRender: true });\r\n        console.log(\"Error while getRailReceipTransloadingtList:\", error);\r\n      });\r\n  }\r\n\r\n  getTerminalsList(shareholder) {\r\n    try {\r\n      if (shareholder !== null && shareholder !== \"\") {\r\n        axios(\r\n          RestAPIs.GetTerminals,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            [shareholder],\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ terminalCodes: response.data.EntityResult });\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ terminalCodes: [] });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchComposite:Error occured on getTerminalsList\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      var { operationsVisibilty } = { ...this.state };\r\n      this.setState({\r\n        operationsVisibilty,\r\n        selectedShareholder:\r\n          this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      });\r\n\r\n      this.getTransloading();\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n      // clear session storage on window refresh event\r\n      window.addEventListener(\"beforeunload\", () => Utilities.clearSessionStorage(this.componentName + \"GridState\"));\r\n    }\r\n  \r\n    componentWillUnmount = () => {\r\n      Utilities.clearSessionStorage(this.componentName + \"GridState\");\r\n      window.removeEventListener(\"beforeunload\", () => Utilities.clearSessionStorage(this.componentName + \"GridState\"));\r\n    }\r\n\r\n  getTransloading() {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=Transloading\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        let isEnable = false;\r\n        if (result.IsSuccess === true) {\r\n          // let isTransloading = false;\r\n          if (result.EntityResult.RAILEnable === \"True\") {\r\n            isEnable = true;\r\n          }\r\n          this.setState({ isEnable });\r\n\r\n          if (isEnable) {\r\n            this.getTerminalsList(\r\n              this.props.userDetails.EntityResult.PrimaryShareholder\r\n            );\r\n            this.getRailReceipTransloadingtList(\r\n              this.props.userDetails.EntityResult.PrimaryShareholder\r\n            );\r\n          }\r\n        } else {\r\n          console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"MarineReceiptDetailsComposite: Error occurred on getLookUpData\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      this.setState({ selectedShareholder: shareholder });\r\n      this.getRailReceipTransloadingtList(shareholder);\r\n      this.getTerminalsList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let loadingClass = \"globalLoader\";\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            breadcrumbItem={this.props.activeItem}\r\n            shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n            selectedShareholder={this.state.selectedShareholder}\r\n            onShareholderChange={this.handleShareholderSelectionChange}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n            addVisible={false}\r\n            deleteVisible={false}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n\r\n        {this.state.isDetails === \"true\" ? (\r\n          <ErrorBoundary>\r\n            <RailTransloadingDetailsComposite\r\n              Key=\"RailTransloadingDetails\"\r\n              selectedRow={this.state.selectedRow}\r\n              selectedShareholder={this.state.selectedShareholder}\r\n              terminalCodes={this.state.terminalCodes}\r\n              onBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n              genericProps={this.props.activeItem.itemProps}\r\n            ></RailTransloadingDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isReadyToRender ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <TMTransactionFilters\r\n                dateRange={{ from: this.state.fromDate, to: this.state.toDate }}\r\n                dateError={this.state.dateError}\r\n                handleDateTextChange={this.handleDateTextChange}\r\n                handleRangeSelect={this.handleRangeSelect}\r\n                handleLoadOrders={this.handleLoadOrders}\r\n                filterText=\"LoadTransloading\"\r\n              ></TMTransactionFilters>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n              <RailTransloadingSummaryPageComposite\r\n                tableData={this.state.data.Table}\r\n                columnDetails={this.state.data.Column}\r\n                pageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                exportRequired={true}\r\n                exportFileName=\"RailTransloadingList\"\r\n                columnPickerRequired={true}\r\n                terminalsToShow={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .NoOfTerminalsToShow\r\n                }\r\n                selectionRequired={true}\r\n                columnGroupingRequired={true}\r\n                onSelectionChange={this.handleSelection}\r\n                onRowClick={this.handleRowClick}\r\n                parentComponent={this.componentName}\r\n              ></RailTransloadingSummaryPageComposite>\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {this.state.isEnable ? (\r\n              <LoadingPage\r\n                loadingClass={loadingClass}\r\n                message=\"Loading\"\r\n              ></LoadingPage>\r\n            ) : (\r\n              <Error errorMessage=\"RailTransloadingDisabled\"></Error>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RailTransloadingComposite);\r\n\r\nRailTransloadingComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n  selectedShareholder: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { DatePicker, Button } from \"@scuf/common\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function TMTransactionFilters({\r\n  handleDateTextChange,\r\n  handleRangeSelect,\r\n  handleLoadOrders,\r\n  dateError,\r\n  dateRange,\r\n  filterText,\r\n}) {\r\n  //console.log(dateError);\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"dateRangeContainer\">\r\n          <div className=\"dateRangeMargin\">\r\n            <DatePicker\r\n              type=\"daterange\"\r\n              closeOnSelection={true}\r\n              error={t(dateError)}\r\n              displayFormat={getCurrentDateFormat()}\r\n              //value={dateRange}\r\n              rangeValue={dateRange}\r\n              onTextChange={handleDateTextChange}\r\n              onRangeSelect={handleRangeSelect}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"dateSearch\">\r\n            <Button content={t(filterText)} onClick={handleLoadOrders} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","WijmoGrid","props","flex","setFlex","translator","useTranslation","_getData","pageLength","CollectionView","sourceData","pageSize","data","setData","rowsPerPage","theGrid","React","theSearch","gridFilter","pagingComponent","colPicker","selectedRows","selectionRequired","selector","gridInitialized","grid","customizeFilterConditions","onRowClick","addEventListener","hostElement","e","ht","hitTest","target","closest","classList","includes","cellType","wjGrid","Cell","rowData","rows","row","dataItem","selectionMode","wjCore","select","Selector","itemChecked","s","singleSelection","filter","isSelected","current","loadash","forEach","onSelectionHandle","r","selectedRow","showCheckAll","column","rowHeaders","columns","headersVisibility","HeadersVisibility","All","error","console","log","useEffect","control","push","selectedItems","refresh","localStorage","getItem","parentComponent","gridState","JSON","parse","newFlex","col","matchedCol","colSetting","binding","visible","filterDefinition","collectionView","deferUpdate","sortDescriptions","clear","i","sortDesc","property","ascending","groupDescriptions","sessionStorage","gridSessionState","moveToPage","pageCount","pageIndex","text","searchText","columnPickerRequired","itemsSource","checkedMemberPath","displayMemberPath","lostFocus","addHandler","hidePopup","exportExcel","gridFlex","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","exportFileName","displayValues","columnDetail","Name","PopOver","terminalCodes","split","terminalsToShow","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","saveGridState","group","propertyName","document","getElementsByClassName","chkbx","parentNode","sessionState","setItem","stringify","FlexGridFilter","operator","Operator","header","descending","apply","conditions","values","search","selectAll","and","or","cancel","stringOperators","op","EQ","NE","BW","EW","CT","NC","numberOperators","GT","LT","GE","LE","dateOperators","booleanOperators","getWidth","columnDetails","window","screen","width","WidthPx","parseInt","WidthPercentage","FlexGridSearch","class","ref","id","actionType","event","host","offsetHeight","focus","showPopup","PopupPosition","Below","preventDefault","colPickerClickHandler","exportRequired","fontSize","top","columnGroupingRequired","GroupPanel","FlexGrid","autoGenerateColumns","alternatingRowStep","autoRowHeights","initialized","virtualizationThreshold","onUpdatedView","FlexGridColumn","minWidth","isReadOnly","wordWrap","align","FlexGridCellTemplate","template","context","conditionalRowStyleCheck","conditionalRowStyles","ListBox","picker","initializedPicker","CollectionViewNavigator","headerFormat","byPage","cv","RailTransloadingDetails","railTransloading","railReceipt","dsCompartmentsBaseProduct","dsTransloadingShipments","dsTransloadingShipmentLoadingDetails","railTransloadingAssociatedShipmentsColumns","railTransloadingDetailsColumns","handleRowSelectionChange","selectedCompRow","setCurrentList","isSelect","expandedRows","toggleExpand","expanderTemplate","findIndex","x","compSeqNo","rowExpansionTemplate","CompData","DataTable","Column","field","editable","renderer","cellData","convertNumberWithUOM","quantityString","quantityList","parseFloat","toLocaleString","ReceiptCode","ReceiptStatus","totalNoOfTransWagons","NoOfProducts","receiptPlannedQty","PlanQuantityUOM","totalPlannedQtyForTransloadingWagons","totalUnloadedQtyForTransloadingWagons","UnloadedQuantityUOM","border","minHeight","lstCompartmentList","index","CompartmentCode","compartBP","selectCompartment","CompartmentProduct","PlannedQuantity","UnloadedQuantity","ReceiptCompartmentStatus","showShipment","onCellClick","onSelectionChange","key","displayName","rowHeader","editFieldType","showLoadingDetails","RailTransloadingDetailsComposite","Component","constructor","arguments","state","lodash","emptyRailReceipt","emptyRailTransloading","modMarineReceipt","isReadyToRender","listOptions","this","getShareholders","saveEnabled","selectedAll","selectCompartmentCode","setState","RailMarineReceiptCompartmentPlanList","TrailerCode","GetBaseProductForCompartment","SequenceNo","getKeyByValue","Constants","Number","currentTarget","getAttribute","getReceiptShipments","obj","trailerCode","receiptCode","compartmentCode","transportationType","getTransportationType","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","dsTransloadingShipmentTable","EntityResult","Table","loadedQuantity","Quantity","LoadedQty","LoadedQuantityUOM","quantity","QuantityUOM","driver","id1","shipmentCode","shipmentStatus","vehicle","ErrorList","catch","handleReset","handleRowClick","getShipmentLoadingDetails","expandedRowIndex","splice","ShipmentCode","marineTransloading","componentWillReceiveProps","nextProps","Common_Code","GetTransloadingReceiptCompartments","componentDidMount","userDetails","IsArchived","GetCompartmentsBaseProducts","ShareholderList","TransportationType","PageAttibutes","DefaultUOMS","TerminalCodes","Array","isArray","IsTransloading","lstCompartmentBPs","BaseProductCode","com","ltCompartmentBPs","dr","el","getRailReceipt","modrailTransloading","Active","keyCode","KeyCodes","ShareHolderCode","keyDataCode","seqNO","bp","dataRows","cindex","RAIL","genericProps","render","TMDetailsHeader","newEntityName","onBack","LoadingPage","message","connect","getUserDetails","TokenAuth","receipt","userActions","bindActionCreators","RailTransloadingSummaryPageComposite","tableData","WijmoGridComposite","RailTransloadingComposite","isDetails","isDetailsModified","fromDate","toDate","dateError","isEnable","componentName","handleRangeSelect","to","from","handleDateTextChange","handleLoadOrders","getRailReceipTransloadingtList","handleBack","getMarineReceipTransloadingtList","handleSelection","items","FunctionsList","functionGroups","remove","fnMarineReceipt","savedEvent","saveType","notification","messageType","MarineReceiptCode","Code","Common_Shareholder","ShareholderCode","toast","NotifyEvent","notificationMessage","autoClose","componentWillUnmount","removeEventListener","handleShareholderSelectionChange","getTerminalsList","setHours","startRange","endRange","NoOfUnloadingWagons","toString","PrimaryShareholder","getTransloading","RAILEnable","activeItem","Key","onSaved","TMTransactionFilters","dateRange","filterText","WebPortalListPageSize","NoOfTerminalsToShow","loadingClass","Error","errorMessage","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","entityCode","popUpContents","margin","List","DatePicker","closeOnSelection","displayFormat","getCurrentDateFormat","rangeValue","onTextChange","onRangeSelect","reserveSpace","view","modify","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","shareholderCode","driverCode","customerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","orderCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","bayCode","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","tankCode","meterCode","shipmentType","meterLineType","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","TransactionType","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks","getOptionsWithSelect","ddlOptions","selectOptionText","option","unshift","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell"],"sourceRoot":""}