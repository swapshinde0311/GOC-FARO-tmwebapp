{"version":3,"file":"static/js/5824.e5019762.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/UIBase/Common/WijmoGrid.jsx","Components/Composite/Common/WijmoGridComposite.jsx","Components/UIBase/Details/COAManagementFinishedProductDetails.jsx","Components/Composite/Details/COAManagementFinishedProductDetailsComposite.jsx","Components/Composite/Summary/COAManagementFinishedProductSummaryComposite.jsx","Components/Composite/Entity/COAManagementFinishedProductComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Details/AttributeDetails.jsx","Components/UIBase/Common/TMReportViewer.jsx","Components/UIBase/Details/ReportDetails.jsx","JS/KeyCodes.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as wjCore from \"@grapecity/wijmo\";\r\nimport * as wjGrid from \"@grapecity/wijmo.grid\";\r\nimport {\r\n  FlexGrid,\r\n  FlexGridColumn,\r\n  FlexGridCellTemplate,\r\n} from \"@grapecity/wijmo.react.grid\";\r\nimport { FlexGridFilter } from \"@grapecity/wijmo.react.grid.filter\";\r\nimport { Operator } from \"@grapecity/wijmo.grid.filter\";\r\nimport { FlexGridSearch } from \"@grapecity/wijmo.react.grid.search\";\r\nimport { CollectionView } from \"@grapecity/wijmo\";\r\nimport { CollectionViewNavigator, ListBox } from \"@grapecity/wijmo.react.input\";\r\nimport { Selector } from \"@grapecity/wijmo.grid.selector\";\r\nimport { HeadersVisibility } from \"@grapecity/wijmo.grid\";\r\nimport { showPopup, hidePopup, PopupPosition } from \"@grapecity/wijmo\";\r\nimport * as wjcGridXlsx from \"@grapecity/wijmo.grid.xlsx\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport { GroupPanel } from \"@grapecity/wijmo.react.grid.grouppanel\";\r\nimport { Button, Card, Popup } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as loadash from \"lodash\";\r\nimport \"@grapecity/wijmo.touch\";\r\n\r\nconst WijmoGrid = (props) => {\r\n  const [flex, setFlex] = useState(null);\r\n  const [translator] = useTranslation();\r\n  const _getData = (pageLength) => {\r\n    return new CollectionView(props.sourceData, {\r\n      pageSize: pageLength,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState(_getData(props.rowsPerPage));\r\n  const theGrid = React.createRef();\r\n  const theSearch = React.createRef();\r\n  const gridFilter = React.createRef();\r\n  const pagingComponent = React.createRef();\r\n  const colPicker = React.useRef();\r\n\r\n  // to keep track of selected rows\r\n  const selectedRows = React.useRef(props.selectionRequired ? [] : null);\r\n\r\n  // to initialize grid checkbox selection\r\n  let selector = null;\r\n\r\n  //Initialize grid\r\n  const gridInitialized = (grid) => {\r\n    try {\r\n      // localize grid filter\r\n      customizeFilterConditions();\r\n\r\n      if (props.onRowClick) {\r\n        // add row click event handler\r\n        grid.addEventListener(grid.hostElement, \"click\", (e) => {\r\n          let ht = grid.hitTest(e);\r\n          // condition to check if cell is not a grouped cell and a data cell\r\n          if (\r\n            ht.target.closest(\".wj-cell\") &&\r\n            ![...ht.target.closest(\".wj-cell\").classList].includes(\r\n              \"wj-group\"\r\n            ) &&\r\n            ht.cellType === wjGrid.CellType.Cell\r\n          ) {\r\n            // fetch row data\r\n            const rowData = grid.rows[ht.row].dataItem;\r\n            props.onRowClick(rowData);\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      grid.select(-1, -1);\r\n\r\n      setFlex(grid);\r\n      if (props.selectionRequired) {\r\n        // enable checkbox selection\r\n        selector = new Selector(grid, {\r\n          itemChecked: (s, e) => {\r\n            // if only single checkbox selection is required\r\n            if (props.singleSelection) {\r\n              grid.rows\r\n                .filter((row) => {\r\n                  return (\r\n                    row.isSelected &&\r\n                    selectedRows.current.filter((item) =>\r\n                      loadash.isEqual(item, row.dataItem)\r\n                    ).length === 1\r\n                  );\r\n                })\r\n                .forEach((row) => {\r\n                  row.isSelected = false;\r\n                });\r\n            }\r\n\r\n            // pass row data as parameter to checkbox selection handler\r\n            props.onSelectionHandle(\r\n              grid.rows\r\n                .filter((r) => r.isSelected)\r\n                .map((selectedRow) => selectedRow.dataItem)\r\n            );\r\n          },\r\n          // if only single checkbox selection is required\r\n          showCheckAll: !props.singleSelection,\r\n        });\r\n\r\n        let theGrid = selector.column.grid;\r\n        selector.column = theGrid.rowHeaders.columns[0];\r\n        theGrid.headersVisibility = HeadersVisibility.All;\r\n        theGrid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in gridInitialized: \" + error);\r\n    }\r\n  };\r\n\r\n  //Update grid when data changes\r\n  useEffect(() => {\r\n    try {\r\n      if (theGrid != null) {\r\n        //Connect search to the grid\r\n        let grid = theGrid.current.control;\r\n        let search = theSearch.current.control;\r\n        search.grid = grid;\r\n      }\r\n\r\n      setData(_getData(props.rowsPerPage));\r\n    } catch (error) {\r\n      console.log(\"Error in grid update:\", error);\r\n    }\r\n  }, [props.sourceData]);\r\n\r\n  // Pre-select grid rows based on selectedItems props\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && props.selectionRequired) {\r\n        // clear the selectedRows array\r\n        selectedRows.current.length = 0;\r\n        // add selectedItems array items to selectedRows\r\n        selectedRows.current.push(...props.selectedItems);\r\n\r\n        flex.rows.forEach((row) => {\r\n          if (\r\n            props.selectedItems.filter((item) =>\r\n              loadash.isEqual(item, row.dataItem)\r\n            ).length === 1\r\n          ) {\r\n            // checks the row checkbox\r\n            row.isSelected = true;\r\n          } else {\r\n            // unchecks the row checkbox\r\n            row.isSelected = false;\r\n          }\r\n        });\r\n\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in pre-selecting rows:\", error);\r\n    }\r\n  }, [props.selectedItems]);\r\n\r\n  //Load the state of grid\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(props.parentComponent + \"GridState\") &&\r\n        localStorage.getItem(props.parentComponent + \"GridState\") !== \"null\" &&\r\n        flex\r\n      ) {\r\n        // restore grid settings\r\n        let gridState = JSON.parse(\r\n          localStorage.getItem(props.parentComponent + \"GridState\")\r\n        );\r\n        let newFlex = flex;\r\n\r\n        // restore column picker settings\r\n        newFlex.columns.forEach((col) => {\r\n          let matchedCol = gridState.columns.filter(\r\n            (colSetting) => colSetting.binding === col.binding\r\n          );\r\n          col.visible =\r\n            matchedCol.length > 0 ? matchedCol[0].visible : col.visible;\r\n        });\r\n\r\n        // restore filter settings\r\n        gridFilter.current.control.filterDefinition =\r\n          gridState.filterDefinition;\r\n\r\n        // restore sort settings\r\n        newFlex.collectionView.deferUpdate(() => {\r\n          newFlex.collectionView.sortDescriptions.clear();\r\n          for (let i = 0; i < gridState.sortDescriptions.length; i++) {\r\n            let sortDesc = gridState.sortDescriptions[i];\r\n            newFlex.collectionView.sortDescriptions.push(\r\n              new wjCore.SortDescription(sortDesc.property, sortDesc.ascending)\r\n            );\r\n          }\r\n        });\r\n\r\n        // restore grouping settings\r\n        for (let i = 0; i < gridState.groupDescriptions.length; i++) {\r\n          newFlex.collectionView.groupDescriptions.push(\r\n            new wjCore.PropertyGroupDescription(gridState.groupDescriptions[i])\r\n          );\r\n          newFlex.columns.filter(\r\n            (col) => col.binding === gridState.groupDescriptions[i]\r\n          )[0].visible = false;\r\n        }\r\n\r\n        if (\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") &&\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") !== \"null\"\r\n        ) {\r\n          let gridSessionState = JSON.parse(\r\n            sessionStorage.getItem(props.parentComponent + \"GridState\")\r\n          );\r\n          // restore paging settings\r\n          newFlex.collectionView.moveToPage(\r\n            newFlex.collectionView.pageCount - 1 >= gridSessionState.pageIndex\r\n              ? gridSessionState.pageIndex\r\n              : newFlex.collectionView.pageCount - 1\r\n          );\r\n\r\n          // restore search settings\r\n          if (theSearch) {\r\n            theSearch.current.control.text = gridSessionState.searchText;\r\n          }\r\n        }\r\n\r\n        setFlex(newFlex);\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in restoring local storage settings: \", error);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set Column Picker Properties\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && colPicker.current && props.columnPickerRequired) {\r\n        colPicker.current.itemsSource = flex.columns;\r\n        colPicker.current.checkedMemberPath = \"visible\";\r\n        colPicker.current.displayMemberPath = \"header\";\r\n        colPicker.current.lostFocus.addHandler(() => {\r\n          hidePopup(colPicker.current.hostElement);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in initializing column picker properties:\", error);\r\n    }\r\n  }, [colPicker.current]);\r\n\r\n  useEffect(() => {\r\n    // remove column picker pop-up on component unmount\r\n    return () => {\r\n      if (props.columnPickerRequired && colPicker.current) {\r\n        hidePopup(colPicker.current.hostElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // export grid data to excel\r\n  const exportExcel = () => {\r\n    try {\r\n      let gridFlex = flex;\r\n      //to download all rows from all pages\r\n      gridFlex.itemsSource.pageSize = props.sourceData.length;\r\n      setFlex(gridFlex);\r\n      wjcGridXlsx.FlexGridXlsxConverter.saveAsync(\r\n        flex,\r\n        {\r\n          includeColumnHeaders: true,\r\n          includeCellStyles: false,\r\n          formatItem: null,\r\n        },\r\n        props.exportFileName\r\n      );\r\n\r\n      //to restore paging\r\n      gridFlex.itemsSource.pageSize = props.rowsPerPage;\r\n      setFlex(gridFlex);\r\n    } catch (error) {\r\n      console.log(\"Error in export grid to excel:\", error);\r\n    }\r\n  };\r\n\r\n  const terminalPopOver = (terminalCodes) => {\r\n    if (terminalCodes.split(\",\").length > props.terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={terminalCodes.split(\",\").length}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return terminalCodes;\r\n    }\r\n  };\r\n\r\n  const displayValues = (value, columnDetail) => {\r\n    if (columnDetail !== undefined && columnDetail !== null) {\r\n      if (typeof value === \"boolean\" || columnDetail.Name === \"Active\") {\r\n        if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n        else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n      } else if (value === \"\" || value === null || value === undefined) {\r\n        return value;\r\n      } else if (\r\n        (columnDetail.Name === \"TerminalCodes\" ||\r\n          columnDetail.PopOver === \"1\") &&\r\n        value !== null\r\n      ) {\r\n        return terminalPopOver(value);\r\n      }\r\n      // var columnType = columnDetails.find(function (detail) {\r\n      //   if (detail.Name === field) {\r\n      //     return detail;\r\n      //   }\r\n      // });\r\n      else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"DateTime\"\r\n      ) {\r\n        return (\r\n          new Date(value).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(value).toLocaleTimeString()\r\n        );\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Date\"\r\n      ) {\r\n        return new Date(value).toLocaleDateString();\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Time\"\r\n      ) {\r\n        return new Date(value).toLocaleTimeString();\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  //Initialize Column Picker\r\n  const initializedPicker = (picker) => {\r\n    if (props.columnPickerRequired) {\r\n      colPicker.current = picker;\r\n    }\r\n  };\r\n\r\n  // Column Picker Handler\r\n  const colPickerClickHandler = (event) => {\r\n    try {\r\n      let host = colPicker.current.hostElement;\r\n      if (!host.offsetHeight) {\r\n        showPopup(host, event.target, PopupPosition.Below, true, false);\r\n        colPicker.current.focus();\r\n      } else {\r\n        hidePopup(host, true, true);\r\n        flex.focus();\r\n      }\r\n\r\n      colPicker.current.focus();\r\n      event.preventDefault();\r\n    } catch (error) {\r\n      console.log(\"Error in Column Picker click event:\", error);\r\n    }\r\n  };\r\n\r\n  const saveGridState = () => {\r\n    try {\r\n      if (flex && gridFilter.current) {\r\n        // grid column, filter, sort and grouping settings\r\n        let gridState = {\r\n          columns: flex.columns.map((col) => {\r\n            return {\r\n              binding: col.binding,\r\n              visible: col.visible,\r\n            };\r\n          }),\r\n          filterDefinition: gridFilter.current.control.filterDefinition,\r\n          sortDescriptions: flex.collectionView.sortDescriptions.map(\r\n            (sortDesc) => {\r\n              return {\r\n                property: sortDesc.property,\r\n                ascending: sortDesc.ascending,\r\n              };\r\n            }\r\n          ),\r\n          groupDescriptions: flex.collectionView.groupDescriptions.map(\r\n            (group) => {\r\n              if (group.propertyName) {\r\n                return group.propertyName;\r\n              }\r\n\r\n              return null;\r\n            }\r\n          ),\r\n        };\r\n\r\n        // add class to grouped checkbox div element\r\n        if (\r\n          flex.collectionView.groupDescriptions &&\r\n          flex.collectionView.groupDescriptions.length > 0\r\n        ) {\r\n          let groupedCheckboxes = [\r\n            ...document.getElementsByClassName(\"wj-column-selector-group\"),\r\n          ];\r\n          groupedCheckboxes.forEach((chkbx) => {\r\n            chkbx.parentNode.parentNode.classList.add(\"wj-grouped-checkbox\");\r\n          });\r\n        }\r\n\r\n        // grid paging and search settings\r\n        let sessionState = {\r\n          pageIndex: flex.collectionView.pageIndex,\r\n          searchText: theSearch.current.control.text,\r\n        };\r\n\r\n        localStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(gridState)\r\n        );\r\n        sessionStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(sessionState)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in saving grid state\");\r\n    }\r\n  };\r\n\r\n  // customize grid filter text and dropdowns\r\n  const customizeFilterConditions = () => {\r\n    // localize the FlexGrid filter\r\n    let filter = wjCore.culture.FlexGridFilter,\r\n      operator = Operator;\r\n    wjCore.culture.FlexGridFilter.header = translator(\"WijmoGridFilterHeader\");\r\n    wjCore.culture.FlexGridFilter.ascending =\r\n      \"\\u2191 \" + translator(\"WijmoGridFilterAscending\");\r\n    wjCore.culture.FlexGridFilter.descending =\r\n      \"\\u2193 \" + translator(\"WijmoGridFilterDescending\");\r\n    wjCore.culture.FlexGridFilter.apply = translator(\"RoleAdminEdit_Apply\");\r\n    wjCore.culture.FlexGridFilter.clear = translator(\"OrderCreate_btnClear\");\r\n    wjCore.culture.FlexGridFilter.conditions = translator(\r\n      \"WijmoGridFilterCondition\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.values = translator(\"WijmoGridFilterValue\");\r\n    wjCore.culture.FlexGridFilter.search = translator(\r\n      \"LoadingDetailsView_SearchGrid\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.selectAll = translator(\r\n      \"WijmoGridFilterSelectAll\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.and = translator(\"WijmoGridFilterAnd\");\r\n    wjCore.culture.FlexGridFilter.or = translator(\"WijmoGridFilterOr\");\r\n    wjCore.culture.FlexGridFilter.cancel = translator(\"AccessCardInfo_Cancel\");\r\n    // wjCore.culture.FlexGridFilter.null = 'test';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.and = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.asc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dialog = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dsc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.edit = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op2 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.or = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.search = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val2 = '';\r\n\r\n    // localize FlexGrid filter operators\r\n    filter.stringOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterBeginsWith\"), op: operator.BW },\r\n      { name: translator(\"WijmoGridFilterEndsWith\"), op: operator.EW },\r\n      { name: translator(\"WijmoGridFilterContains\"), op: operator.CT },\r\n      { name: translator(\"WijmoGridFilterDoesNotContain\"), op: operator.NC },\r\n    ];\r\n    filter.numberOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterGreaterThan\"), op: operator.GT },\r\n      { name: translator(\"WijmoGridFilterLessThan\"), op: operator.LT },\r\n      {\r\n        name: translator(\"WijmoGridFilterGreaterThanOrEqual\"),\r\n        op: operator.GE,\r\n      },\r\n      { name: translator(\"WijmoGridFilterLessThanOrEqual\"), op: operator.LE },\r\n    ];\r\n    filter.dateOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterDateEarlierThan\"), op: operator.LT },\r\n      { name: translator(\"WijmoGridFilterDateLaterThan\"), op: operator.GT },\r\n    ];\r\n    filter.booleanOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n    ];\r\n  };\r\n\r\n  // set column width based on screen size\r\n  const getWidth = (columnDetails) => {\r\n    try {\r\n      const screenWidth = window.screen.width;\r\n      if (screenWidth < 1024) {\r\n        if (columnDetails.WidthPx && columnDetails.WidthPx !== \"\")\r\n          return parseInt(columnDetails.WidthPx);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in width:\", error);\r\n    }\r\n\r\n    return columnDetails.WidthPercentage.includes(\"*\")\r\n      ? columnDetails.WidthPercentage\r\n      : parseInt(columnDetails.WidthPercentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pl-1\">\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <React.Fragment>\r\n              <div className=\"row pl-0\">\r\n                <div className=\"col-10 col-sm-12 col-md-5 col-lg-6\">\r\n                  <FlexGridSearch\r\n                    class=\"ui single-input\"\r\n                    ref={theSearch}\r\n                    placeholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-10 col-sm-12 col-md-7 col-lg-6\">\r\n                  <div style={{ float: \"right\" }}>\r\n                    {props.columnPickerRequired ? (\r\n                      <Button\r\n                        id=\"colPicker\"\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        onClick={(event) => colPickerClickHandler(event)}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridColumnPicker\")}\r\n                        </div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          <Icon\r\n                            name=\"caret-down\"\r\n                            className=\"btnIcon\"\r\n                            size=\"small\"\r\n                          />\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.exportRequired ? (\r\n                      <Button\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        className=\"mt-3 mt-md-0\"\r\n                        onClick={exportExcel}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridExport\")}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            className=\"icon-Xls\"\r\n                            style={{\r\n                              fontSize: \"17px\",\r\n                              position: \"absolute\",\r\n                              top: \"3px\",\r\n                            }}\r\n                          ></span>\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tableScroll\">\r\n                {props.columnGroupingRequired ? (\r\n                  <GroupPanel\r\n                    className=\"group-panel\"\r\n                    grid={flex}\r\n                    placeholder={t(\"WijmoGridGroupPanelPlaceholder\")}\r\n                  />\r\n                ) : null}\r\n                <ErrorBoundary>\r\n                  <FlexGrid\r\n                    ref={theGrid}\r\n                    autoGenerateColumns={false}\r\n                    alternatingRowStep={0}\r\n                    autoRowHeights={true}\r\n                    headersVisibility=\"Column\"\r\n                    itemsSource={data}\r\n                    selectionMode={wjCore.asEnum(\"None\", wjGrid.SelectionMode)}\r\n                    initialized={gridInitialized}\r\n                    virtualizationThreshold={[0, 10000]}\r\n                    onUpdatedView={saveGridState}\r\n                  >\r\n                    <FlexGridFilter ref={gridFilter} />\r\n                    {props.columns.map((column) => {\r\n                      return (\r\n                        <FlexGridColumn\r\n                          header={t(column.Name)}\r\n                          key={column.Name}\r\n                          binding={column.Name}\r\n                          width={getWidth(column)}\r\n                          minWidth={100}\r\n                          isReadOnly={true}\r\n                          wordWrap={true}\r\n                          align=\"left\"\r\n                        >\r\n                          <FlexGridCellTemplate\r\n                            cellType=\"Cell\"\r\n                            template={(context) => {\r\n                              return (\r\n                                <span\r\n                                  style={\r\n                                    props.conditionalRowStyleCheck == null ||\r\n                                    !props.conditionalRowStyleCheck(\r\n                                      context.item\r\n                                    )\r\n                                      ? null\r\n                                      : { ...props.conditionalRowStyles }\r\n                                  }\r\n                                >\r\n                                  {displayValues(\r\n                                    context.item[column.Name],\r\n                                    column\r\n                                  )}\r\n                                </span>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FlexGridColumn>\r\n                      );\r\n                    })}\r\n                  </FlexGrid>\r\n                </ErrorBoundary>\r\n                {props.columnPickerRequired ? (\r\n                  <div className=\"column-picker-div\">\r\n                    <ListBox\r\n                      className=\"column-picker\"\r\n                      initialized={(picker) => initializedPicker(picker)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"row\">\r\n                <CollectionViewNavigator\r\n                  ref={pagingComponent}\r\n                  className=\"ml-auto mr-auto mt-3\"\r\n                  headerFormat={t(\"WijmoGridPagingTemplate\")}\r\n                  byPage={true}\r\n                  cv={data}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nWijmoGrid.propTypes = {\r\n  sourceData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  exportRequired: PropTypes.bool.isRequired,\r\n  exportFileName: PropTypes.string,\r\n  selectionRequired: PropTypes.bool,\r\n  columnPickerRequired: PropTypes.bool,\r\n  columnGroupingRequired: PropTypes.bool,\r\n  conditionalRowStyleCheck: PropTypes.func,\r\n  conditionalRowStyles: PropTypes.object,\r\n  rowsPerPage: PropTypes.number,\r\n  onSelectionHandle: PropTypes.func,\r\n  parentComponent: PropTypes.string.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  terminalsToShow: PropTypes.number,\r\n  singleSelection: PropTypes.bool,\r\n  selectedItems: PropTypes.array,\r\n};\r\n\r\nWijmoGrid.defaultProps = {\r\n  sourceData: [],\r\n  columns: [],\r\n  exportRequired: true,\r\n  exportFileName: \"Grid.xlsx\",\r\n  selectionRequired: false,\r\n  columnPickerRequired: false,\r\n  columnGroupingRequired: false,\r\n  rowsPerPage: 10,\r\n  terminalsToShow: 2,\r\n  singleSelection: false,\r\n  selectedItems: [],\r\n};\r\n\r\nexport default WijmoGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WijmoGrid from '../../UIBase/Common/WijmoGrid';\r\n\r\nconst WijmoGridComposite = (props) => {\r\n    return (\r\n        <WijmoGrid\r\n            sourceData={props.data}\r\n            columns={props.columns}\r\n            exportRequired={props.exportRequired}\r\n            exportFileName={props.exportFileName}\r\n            columnPickerRequired={props.columnPickerRequired}\r\n            selectionRequired={props.selectionRequired}\r\n            columnGroupingRequired={props.columnGroupingRequired}\r\n            conditionalRowStyleCheck={props.conditionalRowStyleCheck}\r\n            conditionalRowStyles={props.conditionalRowStyles}\r\n            rowsPerPage={props.rowsPerPage}\r\n            onSelectionHandle={props.onSelectionHandle}\r\n            onRowClick={props.onRowClick}\r\n            parentComponent={props.parentComponent}\r\n            terminalsToShow={props.terminalsToShow}\r\n            singleSelection={props.singleSelection}\r\n            selectedItems={props.selectedItems}\r\n        />\r\n    )\r\n}\r\n\r\nWijmoGridComposite.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n    exportRequired: PropTypes.bool.isRequired,\r\n    exportFileName: PropTypes.string,\r\n    selectionRequired: PropTypes.bool,\r\n    columnPickerRequired: PropTypes.bool,\r\n    columnGroupingRequired: PropTypes.bool,\r\n    conditionalRowStyleCheck: PropTypes.func,\r\n    conditionalRowStyles: PropTypes.object,\r\n    rowsPerPage: PropTypes.number,\r\n    onSelectionHandle: PropTypes.func,\r\n    parentComponent: PropTypes.string.isRequired,\r\n    onRowClick: PropTypes.func,\r\n    terminalsToShow: PropTypes.number,\r\n    singleSelection: PropTypes.bool,\r\n    selectedItems: PropTypes.array\r\n}\r\n\r\nexport default WijmoGridComposite;","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { Select,Input, Accordion } from \"@scuf/common\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\n\r\nCOAManagementFinishedProductDetails.propTypes = {\r\n  coaManagementFinishedProduct: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    templateParameters:PropTypes.array,\r\n  }).isRequired,\r\n  pageSize: PropTypes.number,\r\n};\r\n\r\nCOAManagementFinishedProductDetails.defaultProps = {\r\n  templateParameters:[],\r\n};\r\n\r\n\r\n\r\nexport function COAManagementFinishedProductDetails({\r\n  coaManagementFinishedProduct,\r\n  listOptions,\r\n  pageSize,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={coaManagementFinishedProduct.COACode}\r\n                label={t(\"COAManagementFinishedProductCode\")}\r\n                indicator=\"required\"\r\n                disabled={true}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n                fluid\r\n                value={coaManagementFinishedProduct.FinishedProductCode}\r\n                label={t(\"COAManagementFinishedProductFinishedProductCode\")}\r\n                disabled={true}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n                fluid\r\n                value={coaManagementFinishedProduct.FinishedProductName}\r\n                label={t(\"COAManagementFinishedProductFinishedProductName\")}\r\n                disabled={true}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n                fluid\r\n                value={coaManagementFinishedProduct.LOTNumber}\r\n                label={t(\"COAManagementFinishedProductLOTNumber\")}\r\n                disabled={true}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n                        <div className=\"col-12 col-md-12 col-lg-12\">\r\n                            <h4>{t(\"COAManagementFinishedProduct_Configuration\")}</h4>\r\n                            <div className=\"detailsTable\">\r\n                                <DataTable\r\n                                    data={listOptions.templateParameters}\r\n                                    search={true}\r\n                                    rows={pageSize}\r\n                                    searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}>\r\n                                    <DataTable.Column\r\n                                        className=\"compColHeight\"\r\n                                        key=\"ParameterName\"\r\n                                        field=\"ParameterName\"\r\n                                        header={t(\"COAManagementDetail_ParameterName\")}\r\n                                    ></DataTable.Column>\r\n                                    <DataTable.Column\r\n                                        className=\"compColHeight\"\r\n                                        key=\"Specification\"\r\n                                        field=\"Specification\"\r\n                                        header={t(\"COAManagementDetail_Specification\")}\r\n                                    ></DataTable.Column>\r\n                                    <DataTable.Column\r\n                                        className=\"compColHeight\"\r\n                                        key=\"Method\"\r\n                                        field=\"Method\"\r\n                                        header={t(\"COAManagementDetail_Method\")}\r\n                                    ></DataTable.Column>\r\n                                    <DataTable.Column\r\n                                        className=\"compColHeight\"\r\n                                        key=\"Result\"\r\n                                        field=\"Result\"\r\n                                        header={t(\"COAManagementDetail_Result\")}\r\n                                    ></DataTable.Column>\r\n                                    <DataTable.Column\r\n                                        className=\"compColHeight\"\r\n                                        key=\"SortIndex\"\r\n                                        field=\"SortIndex\"\r\n                                        header={t(\"COAManagementDetail_SortIndex\")}\r\n                                    ></DataTable.Column>\r\n                                    {Array.isArray(listOptions.templateParameters) &&\r\n                                        listOptions.templateParameters.length > pageSize ? (\r\n                                        <DataTable.Pagination />) : (\"\")}\r\n                                </DataTable>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { COAManagementFinishedProductDetails } from \"../../UIBase/Details/COAManagementFinishedProductDetails\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport ReportDetails from \"../../UIBase/Details/ReportDetails\";\r\n\r\nclass COAManagementFinishedProductDetailsComposite extends Component {\r\n  state = {\r\n    coaManagementFinishedProduct: {},\r\n    isReadyToRender: false,\r\n    templateParameters: [],\r\n    showReport: false,\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.coaManagementFinishedProduct.COACode !== \"\" &&\r\n        nextProps.selectedRow.COACode === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getCOAManagementFinishedProduct(nextProps.selectedRow);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAManagementFinishedProductDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getCOAManagementFinishedProduct(this.props.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAManagementFinishedProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getCOAManagementFinishedProduct(selectedRow) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.coaManagementFinishedProductCode,\r\n        value: selectedRow.COACode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.coaManagementFinishedProductCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetCOAManagementFinishedProduct,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let details = result.EntityResult.COAManagementDetailsList;\r\n          var AvailableManagementParameters = [];\r\n          if (Array.isArray(details)) {\r\n            details.forEach((obj) => {\r\n              var tempObj = {\r\n                ParameterName:\r\n                  obj.ParameterName === undefined\r\n                    ? obj.AnalysisParameterName\r\n                    : obj.ParameterName,\r\n                Specification: obj.Specification,\r\n                Method: obj.Method,\r\n                SortIndex: obj.SortIndex,\r\n                Result: obj.Result,\r\n              };\r\n              AvailableManagementParameters.push(tempObj);\r\n            });\r\n          }\r\n\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            coaManagementFinishedProduct: lodash.cloneDeep(result.EntityResult),\r\n            templateParameters: AvailableManagementParameters,\r\n          });\r\n        } else {\r\n          this.setState(\r\n            {\r\n              coaManagementFinishedProduct: {},\r\n              isReadyToRender: true,\r\n            },\r\n            () => {}\r\n          );\r\n          console.log(\r\n            \"Error in getCOAManagementFinishedProduct:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error while getting coaManagementFinishedProduct:\",\r\n          error,\r\n          selectedRow\r\n        );\r\n      });\r\n  }\r\n\r\n  handleModalBack = () => {\r\n    this.setState({ showReport: false });\r\n  };\r\n\r\n  renderModal() {\r\n    let path = null;\r\n    if (this.props.userDetails.EntityResult.IsArchived) {\r\n      path = \"TM/\" + Constants.TMReportArchive + \"/FinishedProductCOAReport\";\r\n    } else {\r\n      path = \"TM/\" + Constants.TMReports + \"/FinishedProductCOAReport\";\r\n    }\r\n    let paramValues = {\r\n      Culture: this.props.userDetails.EntityResult.UICulture,\r\n      COACode: this.state.coaManagementFinishedProduct.COACode,\r\n    };\r\n    return (\r\n      <ReportDetails\r\n        showReport={this.state.showReport}\r\n        handleBack={this.handleModalBack}\r\n        handleModalClose={this.handleModalBack}\r\n        proxyServerHost={RestAPIs.WebAPIURL}\r\n        reportServiceHost={this.reportServiceURI}\r\n        filePath={path}\r\n        parameters={paramValues}\r\n      />\r\n    );\r\n  }\r\n\r\n  handleViewFinishedProductCOAReport = () => {\r\n    if (this.reportServiceURI === undefined) {\r\n      axios(\r\n        RestAPIs.GetReportServiceURI,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        if (response.data.IsSuccess) {\r\n          this.reportServiceURI = response.data.EntityResult;\r\n          //this.reportServiceURI = \"http://t1svr:80/\";\r\n          this.setState({ showReport: true });\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ showReport: true });\r\n    }\r\n  };\r\n  render() {\r\n    const listOptions = {\r\n      templateParameters: this.state.templateParameters,\r\n    };\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"COAManagementFinishedProduct_LastUpDt\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.coaManagementFinishedProduct.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.coaManagementFinishedProduct.LastUpdatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"COAManagementFinishedProduct_LastUpdatedBy\",\r\n        fieldValue: this.state.coaManagementFinishedProduct.LastUpdatedBy,\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.coaManagementFinishedProduct.COACode}\r\n            newEntityName=\"COAManagementFinishedProduct_Title\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n\r\n        <ErrorBoundary>\r\n          <COAManagementFinishedProductDetails\r\n            coaManagementFinishedProduct={\r\n              this.state.coaManagementFinishedProduct\r\n            }\r\n            genericProps={this.props.genericProps}\r\n            //listOptions={this.state.listOptions}\r\n            listOptions={listOptions}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            pageSize={\r\n              this.props.userDetails.EntityResult.PageAttibutes\r\n                .WebPortalListPageSize\r\n            }\r\n          ></COAManagementFinishedProductDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <div className=\"row userActionPosition\">\r\n                <div className=\"col col-2\">\r\n                  <Button\r\n                    className=\"backButton\"\r\n                    onClick={this.props.onBack}\r\n                    content={t(\"Back\")}\r\n                  ></Button>\r\n                </div>\r\n                <div className=\"col col-10\" style={{ textAlign: \"right\" }}>\r\n                  <Button\r\n                    content={t(\"COA_ViewFinishedProductCOAReport\")}\r\n                    onClick={() => this.handleViewFinishedProductCOAReport()}\r\n                  ></Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </TranslationConsumer>\r\n        </ErrorBoundary>\r\n        {this.renderModal()}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(\r\n  COAManagementFinishedProductDetailsComposite\r\n);\r\n\r\nCOAManagementFinishedProductDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  genericProps: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nexport function COAManagementFinishedProductSummaryPageComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  //selectedItems,\r\n  selectionRequired,\r\n  onSelectionChange,\r\n  onRowClick,\r\n  parentComponent\r\n}) {\r\n  return (\r\n    <WijmoGridComposite\r\n    data={tableData}\r\n    columns={columnDetails}\r\n    rowsPerPage={pageSize}\r\n    exportRequired={exportRequired}\r\n    exportFileName={exportFileName}\r\n    columnPickerRequired={columnPickerRequired}\r\n    columnGroupingRequired={columnGroupingRequired}\r\n    selectionRequired={selectionRequired}\r\n    onSelectionHandle={onSelectionChange}\r\n    onRowClick={onRowClick}\r\n    parentComponent={parentComponent}\r\n    ></WijmoGridComposite>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport COAManagementFinishedProductDetailsComposite from \"../Details/COAManagementFinishedProductDetailsComposite\";\r\nimport { COAManagementFinishedProductSummaryPageComposite } from \"../Summary/COAManagementFinishedProductSummaryComposite\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport Error from \"../../Error\";\r\n\r\nclass COAManagementFinishedProductComposite extends Component {\r\n  state = {\r\n    isDetails: \"false\",\r\n    isReadyToRender: false,\r\n    isDetailsModified: \"false\",\r\n    operationsVisibilty: { add: false, delete: false, shareholder: true },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    selectedShareholder: \"\",\r\n    data: {},\r\n    showAuthenticationLayout: false,\r\n    isEnable: true,\r\n  };\r\n\r\n  componentName = \"COAManagementFinishedProductList\";\r\n\r\n  getcoaManagementFinishedProductList(shareholder) {\r\n    if (shareholder !== undefined && shareholder !== \"\") {\r\n      axios(\r\n        RestAPIs.GetCOAManagementFinishedProductListForRole +\r\n          \"?ShareholderCode=\" +\r\n          shareholder,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ data: result.EntityResult, isReadyToRender: true });\r\n          } else {\r\n            this.setState({ data: [], isReadyToRender: true });\r\n            console.log(\r\n              \"Error in GetCOAManagementFinishedProductListForRole:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\r\n            \"Error while getting COAManagementFinishedProduct List:\",\r\n            error\r\n          );\r\n        });\r\n    }\r\n  }\r\n  handleBack = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.shareholder = true;\r\n      this.setState({\r\n        isDetails: \"false\",\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getcoaManagementFinishedProductList(this.state.selectedShareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAManagementFinishedProductComposite:Error occured on Back click\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleRowClick = (item) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: \"true\",\r\n        selectedRow: item,\r\n        selectedItems: [item],\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAManagementFinishedProductComposite:Error occured on handleRowClick\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleSelection = (items) => {\r\n    try {\r\n      this.setState({ selectedItems: items });\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAManagementFinishedProductComposite:Error occured on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n\r\n      this.getLookUpData();\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAManagementComposite:Error occured on ComponentDidMount\",\r\n        error\r\n      );\r\n    }\r\n\r\n    // clear session storage on window refresh event\r\n    window.addEventListener(\"beforeunload\", this.clearStorage);\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    // clear session storage\r\n    this.clearStorage();\r\n\r\n    // remove event listener\r\n    window.removeEventListener(\"beforeunload\", this.clearStorage);\r\n  };\r\n\r\n  clearStorage = () => {\r\n    sessionStorage.removeItem(this.componentName + \"GridState\");\r\n  };\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      this.setState({\r\n        selectedShareholder: shareholder,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getcoaManagementFinishedProductList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAManagementFinishedProductComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  getLookUpData() {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=COA\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let isEnable = result.EntityResult.COAEnable.toUpperCase() === \"TRUE\";\r\n\r\n          this.setState({ lookUpData: result.EntityResult, isEnable });\r\n          if (isEnable) {\r\n            this.setState({\r\n              selectedShareholder:\r\n                this.props.userDetails.EntityResult.PrimaryShareholder,\r\n            });\r\n            this.getcoaManagementFinishedProductList(\r\n              this.props.userDetails.EntityResult.PrimaryShareholder\r\n            );\r\n          }\r\n        } else {\r\n          console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"COAManagementFinishedProductComposite: Error occurred on getLookUpData\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            breadcrumbItem={this.props.activeItem}\r\n            shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n            selectedShareholder={this.state.selectedShareholder}\r\n            onShareholderChange={this.handleShareholderSelectionChange}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n            addVisible={false}\r\n            deleteVisible={false}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isDetails === \"true\" ? (\r\n          <ErrorBoundary>\r\n            <COAManagementFinishedProductDetailsComposite\r\n              key=\"COAManagementFinishedProductDetails\"\r\n              selectedRow={this.state.selectedRow}\r\n              selectedShareholder={this.state.selectedShareholder}\r\n              onBack={this.handleBack}\r\n              genericProps={this.props.activeItem.itemProps}\r\n            ></COAManagementFinishedProductDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isReadyToRender ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <COAManagementFinishedProductSummaryPageComposite\r\n                tableData={this.state.data.Table}\r\n                columnDetails={this.state.data.Column}\r\n                pageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                exportRequired={true}\r\n                exportFileName=\"COAManagementFinishedProductList\"\r\n                columnPickerRequired={true}\r\n                columnGroupingRequired={true}\r\n                //selectedItems={this.state.selectedItems}\r\n                onRowClick={this.handleRowClick}\r\n                onSelectionChange={this.handleSelection}\r\n                parentComponent={this.componentName}\r\n              ></COAManagementFinishedProductSummaryPageComposite>\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {this.state.isEnable ? (\r\n              <LoadingPage loadingClass=\"Loading\"></LoadingPage>\r\n            ) : (\r\n              <Error errorMessage=\"COADisabled\"></Error>\r\n            )}\r\n          </>\r\n        )}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(COAManagementFinishedProductComposite);\r\n\r\nCOAManagementFinishedProductComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport * as WjCore from \"@grapecity/wijmo\";\r\nimport { ReportViewer } from \"@grapecity/wijmo.react.viewer\";\r\nimport * as wjViewer from \"@grapecity/wijmo.viewer\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { connect } from \"react-redux\";\r\n\r\nTMReportViewer.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\n\r\nTMReportViewer.defaultProps = {\r\n  parameters: {},\r\n};\r\n\r\nWjCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nfunction TMReportViewer({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  parameters,\r\n  filePath,\r\n  ...props\r\n}) {\r\n  //   const [proxyHost, setProxyHost] = useState(\r\n  //     \"http://localhost:8888/TMWebProxyAPI/\"\r\n  //   );\r\n  //   const [reportServiceHost, setReportServiceHost] = useState(\r\n  //     \"http://localhost:5632/\"\r\n  //   );\r\n  //   const [reportUrl, setReportUrl] = useState(proxyHost + \"api/report\");\r\n  //   const [filePath, setFilePath] = useState(\r\n  //     \"TM/\" + \"TMReports/\" + \"CarrierCompanyReport\"\r\n  //   );\r\n  const reportUrl = proxyServerHost + \"api/report\";\r\n  //const filePath = \"TM/\" + \"TMReports/\" + reportName;\r\n\r\n  const beforeXhrRequestSend = (s, event) => {\r\n    // use this event for Authorization purpose\r\n    const prevBeforeSend = event.settings.beforeSend;\r\n    event.settings.beforeSend = function (xhr) {\r\n      prevBeforeSend && prevBeforeSend(xhr);\r\n      //here you may add the params for XMLHttpRequest as required\r\n      if (!props.userDetails.EntityResult.IsWebPortalUser)\r\n        xhr.withCredentials = true;\r\n      if (xhr.URL_DEBUG.indexOf(\"parameters\") > -1) {\r\n        xhr.onreadystatechange = function () {\r\n          if (this.readyState === 4 && this.status === 200) {\r\n            var host = s.hostElement;\r\n            setTimeout(() => {\r\n              var splitter = host.querySelector(\".wj-viewer-splitter\");\r\n              var param = host\r\n                .querySelector(\".wj-viewer-tabsleft\")\r\n                .querySelectorAll(\"li\")[2];\r\n              if (!param.disabled) {\r\n                param.className = \"hidden\";\r\n                splitter.click();\r\n              }\r\n            }, 1000);\r\n          }\r\n        };\r\n      }\r\n    };\r\n  };\r\n  let header = {\r\n    Authorization: \"Bearer \" + props.tokenDetails.tokenInfo,\r\n  };\r\n\r\n  // let header = {\r\n  //   Authorization: \"Bearer \" + \"fiewjfjewifi\",\r\n  // };\r\n\r\n  const initViewer = (s, event) => {\r\n    wjViewer._ReportService.prototype.load = function (data) {\r\n      var _this = this;\r\n      var promise = new wjViewer._Promise();\r\n      if (!this._checkReportController(promise)) {\r\n        return promise;\r\n      }\r\n      this.httpRequest(this._getReportInstancesUrl(), {\r\n        method: \"POST\",\r\n        data: data,\r\n      }).then(\r\n        function (xhr) {\r\n          var v = wjViewer._parseReportExecutionInfo(xhr.responseText);\r\n          _this._instanceId = v.id;\r\n          _this._status = wjViewer._ExecutionStatus.loaded;\r\n          _this._outlinesLocation = v.outlinesLocation;\r\n          _this._statusLocation = v.statusLocation.replace(\r\n            reportServiceHost,\r\n            proxyServerHost\r\n          );\r\n          _this._pageSettingsLocation = v.pageSettingsLocation;\r\n          _this._featuresLocation = v.featuresLocation;\r\n          _this._parametersLocation = v.parametersLocation;\r\n          promise.resolve(v);\r\n        },\r\n        function (xhr) {\r\n          promise.reject(_this._getError(xhr));\r\n        }\r\n      );\r\n      return promise;\r\n    };\r\n  };\r\n\r\n  //console.log(props.userDetails.EntityResult.IsWebPortalUser, header);\r\n  return (\r\n    <div>\r\n      {props.userDetails.EntityResult.IsWebPortalUser ? (\r\n        <div>\r\n          <ReportViewer\r\n            requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <ReportViewer\r\n            //requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TMReportViewer);\r\n","import React from \"react\";\r\nimport { Modal, Button, Header } from \"@scuf/common\";\r\nimport TMReportViewer from \"../Common/TMReportViewer\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nReportDetails.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  filePath: PropTypes.string.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  showReport: PropTypes.bool.isRequired,\r\n  handleModalClose: PropTypes.func.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\nReportDetails.defaultProps = {\r\n  parameters: {},\r\n};\r\nexport default function ReportDetails({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  filePath,\r\n  handleBack,\r\n  showReport,\r\n  handleModalClose,\r\n  parameters,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <Modal\r\n      style={{ padding: \"0px\" }}\r\n      size=\"fullscreen\"\r\n      open={showReport}\r\n      // onClose={handleModalClose}\r\n    >\r\n      <div>\r\n        <Header title={t(\"Header_TerminalManager\")} menu={false} />\r\n        <TMReportViewer\r\n          proxyServerHost={proxyServerHost}\r\n          reportServiceHost={reportServiceHost}\r\n          filePath={filePath}\r\n          parameters={parameters}\r\n        />\r\n        <div style={{ marginTop: \"10px\", marginLeft: \"20px\" }}>\r\n          <Button\r\n            className=\"backButton\"\r\n            onClick={handleBack}\r\n            content={t(\"Report_Back\")}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","WijmoGrid","props","flex","setFlex","translator","useTranslation","_getData","pageLength","CollectionView","sourceData","pageSize","data","setData","rowsPerPage","theGrid","React","theSearch","gridFilter","pagingComponent","colPicker","selectedRows","selectionRequired","selector","gridInitialized","grid","customizeFilterConditions","onRowClick","addEventListener","hostElement","e","ht","hitTest","target","closest","classList","includes","cellType","wjGrid","Cell","rowData","rows","row","dataItem","selectionMode","wjCore","select","Selector","itemChecked","s","singleSelection","filter","isSelected","current","loadash","forEach","onSelectionHandle","r","selectedRow","showCheckAll","column","rowHeaders","columns","headersVisibility","HeadersVisibility","All","error","console","log","useEffect","control","push","selectedItems","refresh","localStorage","getItem","parentComponent","gridState","JSON","parse","newFlex","col","matchedCol","colSetting","binding","visible","filterDefinition","collectionView","deferUpdate","sortDescriptions","clear","i","sortDesc","property","ascending","groupDescriptions","sessionStorage","gridSessionState","moveToPage","pageCount","pageIndex","text","searchText","columnPickerRequired","itemsSource","checkedMemberPath","displayMemberPath","lostFocus","addHandler","hidePopup","exportExcel","gridFlex","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","exportFileName","displayValues","columnDetail","Name","PopOver","terminalCodes","split","terminalsToShow","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","saveGridState","group","propertyName","document","getElementsByClassName","chkbx","parentNode","sessionState","setItem","stringify","FlexGridFilter","operator","Operator","header","descending","apply","conditions","values","search","selectAll","and","or","cancel","stringOperators","op","EQ","NE","BW","EW","CT","NC","numberOperators","GT","LT","GE","LE","dateOperators","booleanOperators","getWidth","columnDetails","window","screen","width","WidthPx","parseInt","WidthPercentage","FlexGridSearch","class","ref","id","actionType","event","host","offsetHeight","focus","showPopup","PopupPosition","Below","preventDefault","colPickerClickHandler","exportRequired","fontSize","top","columnGroupingRequired","GroupPanel","FlexGrid","autoGenerateColumns","alternatingRowStep","autoRowHeights","initialized","virtualizationThreshold","onUpdatedView","FlexGridColumn","minWidth","isReadOnly","wordWrap","align","FlexGridCellTemplate","template","context","conditionalRowStyleCheck","conditionalRowStyles","ListBox","picker","initializedPicker","CollectionViewNavigator","headerFormat","byPage","cv","COAManagementFinishedProductDetails","coaManagementFinishedProduct","listOptions","Input","fluid","COACode","label","indicator","reserveSpace","FinishedProductCode","FinishedProductName","LOTNumber","DataTable","templateParameters","searchPlaceholder","Column","field","Array","isArray","Pagination","COAManagementFinishedProductDetailsComposite","Component","constructor","arguments","state","isReadyToRender","showReport","handleModalBack","this","setState","handleViewFinishedProductCOAReport","reportServiceURI","axios","RestAPIs","tokenDetails","tokenInfo","then","response","IsSuccess","EntityResult","componentWillReceiveProps","nextProps","getCOAManagementFinishedProduct","componentDidMount","userDetails","IsArchived","keyCode","key","KeyCodes","obj","ShareHolderCode","keyDataCode","result","details","COAManagementDetailsList","AvailableManagementParameters","tempObj","ParameterName","AnalysisParameterName","Specification","Method","SortIndex","Result","lodash","ErrorList","catch","renderModal","path","Constants","paramValues","Culture","UICulture","ReportDetails","handleBack","handleModalClose","proxyServerHost","reportServiceHost","filePath","parameters","render","popUpContents","LastUpdatedTime","LastUpdatedBy","TMDetailsHeader","entityCode","newEntityName","genericProps","isEnterpriseNode","IsEnterpriseNode","PageAttibutes","WebPortalListPageSize","onBack","textAlign","LoadingPage","message","connect","getUserDetails","TokenAuth","COAManagementFinishedProductSummaryPageComposite","tableData","onSelectionChange","WijmoGridComposite","COAManagementFinishedProductComposite","isDetails","isDetailsModified","showAuthenticationLayout","isEnable","componentName","getcoaManagementFinishedProductList","handleRowClick","handleSelection","items","componentWillUnmount","clearStorage","removeEventListener","removeItem","handleShareholderSelectionChange","handleAuthenticationClose","getLookUpData","COAEnable","toUpperCase","lookUpData","PrimaryShareholder","activeItem","ShareholderList","Table","loadingClass","Error","errorMessage","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","margin","List","AttributeDetails","selectedAttributeList","handleCellDataEdit","attributeValidationErrors","handleAttributeDateValue","attribute","DefaultValue","convertAttributeDatetoString","chars","Dateval","getFullYear","getMonth","slice","getDate","toLowerCase","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","Code","INT","LONG","FLOAT","DOUBLE","BOOL","Checkbox","checked","toString","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","toLocaleString","TMReportViewer","reportUrl","beforeXhrRequestSend","prevBeforeSend","settings","beforeSend","xhr","IsWebPortalUser","withCredentials","URL_DEBUG","indexOf","onreadystatechange","readyState","status","setTimeout","splitter","querySelector","param","querySelectorAll","click","Authorization","initViewer","wjViewer","prototype","load","_this","promise","_checkReportController","httpRequest","_getReportInstancesUrl","method","v","responseText","_instanceId","_status","loaded","_outlinesLocation","outlinesLocation","_statusLocation","statusLocation","replace","_pageSettingsLocation","pageSettingsLocation","_featuresLocation","featuresLocation","_parametersLocation","parametersLocation","resolve","reject","_getError","ReportViewer","requestHeaders","height","serviceUrl","beforeSendRequest","WjCore","title","menu","carrierCode","transportationType","shareholderCode","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","shipmentCode","orderCode","receiptCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","bayCode","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","TransactionType","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks","getOptionsWithSelect","ddlOptions","selectOptionText","option","unshift","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell"],"sourceRoot":""}