{"version":3,"file":"static/js/6624.69a28500.chunk.js","mappings":"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","sources":["Components/Composite/Details/RigidTruckWithTrailerDetailsComposite.jsx","Components/Composite/Summary/TrailerSummaryComposite.jsx","Components/Composite/Entity/TrailerComposite.jsx","Components/UIBase/Details/VehicleBasicFields.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport VehicleComposite from \"../Entity/VehicleComposite\";\r\nimport TrailerComposite from \"../Entity/TrailerComposite\";\r\nimport { Accordion, Icon, Popup, Card, Button, Loader } from \"@scuf/common\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { emptyVehicle } from \"../../../JS/DefaultEntities\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport lodash from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { vehicleValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { functionGroups, fnVehicle } from \"../../../JS/FunctionGroups\";\r\nimport VehicleBasicFields from \"../../UIBase/Details/VehicleBasicFields\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport {\r\n  vehicleAttributeEntity,\r\n  vehicleTrailerAttributeEntity,\r\n} from \"../../../JS/AttributeEntity\";\r\nimport { AttributeDetails } from \"../../UIBase/Details/AttributeDetails\";\r\nimport * as DateFieldsInEntities from \"../../../JS/DateFieldsInEntities\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nlet rigidTruckColumns = null;\r\nlet trailerColumns = null;\r\nlet rigidtruckWithTrailer = true;\r\n\r\nlet vehicleWithTrailer = true;\r\nlet vehicleTrailers = [];\r\nclass RigidTruckWithTrailerDetailsComposite extends Component {\r\n  state = {\r\n    isReadyToRender: false,\r\n    vehicle: {},\r\n    modVehicle: {},\r\n    validationErrors:\r\n      Utilities.getInitialValidationErrors(vehicleValidationDef),\r\n    carrierOptions: [],\r\n    terminalOptions: [],\r\n    volumeUOMOptions: [],\r\n    weightUOMOptions: [],\r\n    lengthUOMOptions: [],\r\n    productTypeOptions: [],\r\n    step1Active:\r\n      this.props.selectedRow.Common_Code === undefined ? true : false,\r\n    step2Active: false,\r\n    step3Active:\r\n      this.props.selectedRow.Common_Code === undefined ? false : true,\r\n    //step1Data: [],\r\n    // step2Data: [],\r\n    rigidTruckSelection: [],\r\n    trailerSelection: [],\r\n    attributeMetaDataList: [],\r\n    modVehicleAttributeMetaDataList: [],\r\n    vehicleAttributeValidationErrors: [],\r\n    modVehicleTrailerAttributeMetaDataList: [],\r\n    vehicleTrailerAttributeValidationErrors: [],\r\n    isBonded: false,\r\n    isRigidLoaded: false,\r\n    isTrailerLoaded: false,\r\n     maxNumberOfCompartments: 12,\r\n     showAuthenticationLayout: false,\r\n     tempVehicle: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      let isNewVehicle = false;\r\n      if (this.props.selectedRow.Common_Code === undefined) isNewVehicle = true;\r\n      this.getAttributes(isNewVehicle);\r\n      this.getCarrierList(this.props.selectedShareholder);\r\n      this.getUOMList();\r\n      this.IsBonded();\r\n      this.getProductTypes();\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsBonded() {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=Bonding\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let bonded = result.EntityResult[\"EnableBondingNon-Bonding\"];\r\n          this.setState({\r\n            isBonded: bonded.toUpperCase() === \"TRUE\" ? true : false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isBonded: false,\r\n          });\r\n          console.log(\"Error in get IsBonded: \", result.ErrorList);\r\n        }\r\n      })\r\n      axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=VirtualPreset\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (!isNaN(parseInt(result.EntityResult[\"RoadMaximumNumberOfCompartments\"]))) {\r\n            this.setState({maxNumberOfCompartments:parseInt(result.EntityResult[\"RoadMaximumNumberOfCompartments\"])})\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          isBonded: false,\r\n        });\r\n        console.log(\r\n          \"SealMasterDetailsComposite: Error occurred on get IsBonded\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getProductTypes() {\r\n    axios(\r\n      RestAPIs.GetProductType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let productTypeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ productTypeOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getProductTypes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getProductTypes:\", error);\r\n      });\r\n  }\r\n\r\n  getUOMList() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        // console.log(response);\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let weightUOMs = result.EntityResult.MASS;\r\n            let weightUOMOptions = [];\r\n            weightUOMs.forEach((weightOption) => {\r\n              weightUOMOptions.push({\r\n                text: weightOption,\r\n                value: weightOption,\r\n              });\r\n            });\r\n\r\n            let volumeUOMs = result.EntityResult.VOLUME;\r\n            let volumeUOMOptions = [];\r\n            volumeUOMs.forEach((volumeOption) => {\r\n              volumeUOMOptions.push({\r\n                text: volumeOption,\r\n                value: volumeOption,\r\n              });\r\n            });\r\n\r\n            let lengthUOMs = result.EntityResult.LENGTH;\r\n            let lengthUOMOptions = [];\r\n            lengthUOMs.forEach((lengthOption) => {\r\n              lengthUOMOptions.push({\r\n                text: lengthOption,\r\n                value: lengthOption,\r\n              });\r\n            });\r\n\r\n            this.setState({\r\n              volumeUOMOptions,\r\n              weightUOMOptions,\r\n              lengthUOMOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getUOM:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getUOM:\", error);\r\n      });\r\n  }\r\n\r\n  getCarrierList(shareholder) {\r\n    axios(\r\n      RestAPIs.GetCarrierCodes +\r\n      \"?ShareholderCode=\" +\r\n      shareholder +\r\n      \"&Transportationtype=\" +\r\n      Constants.TransportationType.ROAD,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            // const carrierOptions = [];\r\n            // result.EntityResult.Table.forEach((carrier) => {\r\n            //   carrierOptions.push({\r\n            //     text: carrier.Common_Code,\r\n            //     value: carrier.Common_Name,\r\n            //   });\r\n            // });\r\n            let carrierOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n\r\n            this.setState({ carrierOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetCarrierListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Carrier List:\", error);\r\n      });\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.vehicle.Code !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getVehicle(true);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  displayValues(cellData, columnDetail) {\r\n    const { value, field } = cellData;\r\n    if (typeof value === \"boolean\" || field === \"Active\") {\r\n      if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n      else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n    } else if (value === \"\" || value === null || value === undefined) {\r\n      return value;\r\n    } else if (field === \"TerminalCodes\" && value !== null) {\r\n      return this.terminalPopOver(value);\r\n    }\r\n    // var columnType = columnDetails.find(function (detail) {\r\n    //   if (detail.Name === field) {\r\n    //     return detail;\r\n    //   }\r\n    // });\r\n    else if (\r\n      columnDetail !== undefined &&\r\n      columnDetail !== null &&\r\n      columnDetail.DataType !== undefined &&\r\n      columnDetail.DataType === \"DateTime\"\r\n    ) {\r\n      return (\r\n        new Date(value).toLocaleDateString() +\r\n        \" \" +\r\n        new Date(value).toLocaleTimeString()\r\n      );\r\n    } else if (\r\n      columnDetail !== undefined &&\r\n      columnDetail !== null &&\r\n      columnDetail.DataType !== undefined &&\r\n      columnDetail.DataType === \"Date\"\r\n    ) {\r\n      return new Date(value).toLocaleDateString();\r\n    } else return value;\r\n  }\r\n  terminalPopOver(terminalCodes) {\r\n    if (terminalCodes.split(\",\").length > 2) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={<span>{terminalCodes.split(\",\").length}</span>}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return <span>{terminalCodes}</span>;\r\n    }\r\n  }\r\n\r\n  getAttributes(isNewTruck) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [vehicleAttributeEntity, vehicleTrailerAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              vehicleAttributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.vehicle\r\n                ),\r\n              vehicleTrailerAttributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.vehicletrailer\r\n                ),\r\n            },\r\n            () => this.getVehicle(isNewTruck)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  getVehicle(isNewVehicle) {\r\n    if (isNewVehicle) {\r\n      let terminalOptions = [];\r\n      vehicleTrailers = [];\r\n      emptyVehicle.VehicleType = Constants.VehicleType.RigidTruckWithTrailer;\r\n\r\n      this.setState(\r\n        {\r\n          vehicle: lodash.cloneDeep(emptyVehicle),\r\n          modVehicle: lodash.cloneDeep(emptyVehicle),\r\n          trailerSelection: [],\r\n          rigidTruckSelection: [],\r\n          isReadyToRender: true,\r\n          terminalOptions,\r\n          modVehicleAttributeMetaDataList: [],\r\n          modVehicleTrailerAttributeMetaDataList: [],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnVehicle\r\n          ),\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange([]);\r\n          } else {\r\n            this.localNodeAttribute();\r\n          }\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value:\r\n          this.props.selectedRow.Common_Code === undefined\r\n            ? this.state.modVehicle.Code\r\n            : this.props.selectedRow.Common_Code,\r\n      },\r\n    ];\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetVehicle,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            result.EntityResult.MaxLoadableWeight =\r\n              result.EntityResult.MaxLoadableWeight +\r\n              result.EntityResult.TareWeight;\r\n            vehicleTrailers = result.EntityResult.VehicleTrailers;\r\n          }\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              vehicle: lodash.cloneDeep(result.EntityResult),\r\n              modVehicle: lodash.cloneDeep(result.EntityResult),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnVehicle\r\n              ),\r\n            },\r\n            () => {\r\n              this.getTerminalsForCarrier(\r\n                result.EntityResult.CarrierCompanyCode\r\n              );\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          emptyVehicle.ShareholderCode = this.props.selectedShareholder;\r\n\r\n          this.setState({\r\n            modVehicle: lodash.cloneDeep(emptyVehicle),\r\n            vehicle: lodash.cloneDeep(emptyVehicle),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetVehicle:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Vehicle:\", error);\r\n      });\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals !== undefined && selectedTerminals !== null) {\r\n        let attributesTerminalsList = [];\r\n        var attributeMetaDataList = [];\r\n        var modVehicleAttributeMetaDataList = [];\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        modVehicleAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.modVehicleAttributeMetaDataList\r\n        );\r\n        const vehicleAttributeValidationErrors = lodash.cloneDeep(\r\n          this.state.vehicleAttributeValidationErrors\r\n        );\r\n        var modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = modVehicleAttributeMetaDataList.find(\r\n            (selectedAttribute) => {\r\n              return selectedAttribute.TerminalCode === terminal;\r\n            }\r\n          );\r\n\r\n          if (existitem === undefined) {\r\n            attributeMetaDataList.vehicle.forEach(function (attributeMetaData) {\r\n              if (attributeMetaData.TerminalCode === terminal) {\r\n                var Attributevalue = modVehicle.Attributes.find(\r\n                  (baseproductAttribute) => {\r\n                    return baseproductAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n                attributesTerminalsList.push(attributeMetaData);\r\n              }\r\n            });\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n        modVehicleAttributeMetaDataList = [];\r\n        modVehicleAttributeMetaDataList = attributesTerminalsList;\r\n        modVehicleAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n          modVehicleAttributeMetaDataList\r\n        );\r\n\r\n        vehicleAttributeValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n              (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n        this.setState({\r\n          modVehicleAttributeMetaDataList,\r\n          vehicleAttributeValidationErrors,\r\n        });\r\n        this.setVehicleTrailerAttributes(selectedTerminals);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckWithTrailerDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  setVehicleTrailerAttributes(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modVehicleTrailerAttributeMetaDataList = [];\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modVehicleTrailerAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modVehicleTrailerAttributeMetaDataList\r\n      );\r\n      const vehicleTrailerAttributeValidationErrors = lodash.cloneDeep(\r\n        this.state.vehicleTrailerAttributeValidationErrors\r\n      );\r\n      var modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modVehicleTrailerAttributeMetaDataList.find(\r\n          (selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          }\r\n        );\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.vehicletrailer.forEach(function (\r\n            attributeMetaData\r\n          ) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              if (\r\n                (modVehicle.VehicleTrailers !== null) &\r\n                (modVehicle.VehicleTrailers.length > 0)\r\n              ) {\r\n                var Attributevalue =\r\n                  modVehicle.VehicleTrailers[0].Attributes.find(\r\n                    (baseproductAttribute) => {\r\n                      return baseproductAttribute.TerminalCode === terminal;\r\n                    }\r\n                  );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modVehicleTrailerAttributeMetaDataList = [];\r\n      modVehicleTrailerAttributeMetaDataList = attributesTerminalsList;\r\n      modVehicleTrailerAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modVehicleTrailerAttributeMetaDataList\r\n      );\r\n\r\n      vehicleTrailerAttributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n      this.setState({\r\n        modVehicleTrailerAttributeMetaDataList,\r\n        vehicleTrailerAttributeValidationErrors,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckWithTrailerDetailsComposite:Error occured on setVehicleTrailerAttributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList.vehicle) &&\r\n        attributeMetaDataList.vehicle.length > 0\r\n      ) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.vehicle[0].TerminalCode,\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckWithTrailerDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        vehicleAttributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.vehicle\r\n          ),\r\n        vehicleTrailerAttributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.vehicletrailer\r\n          ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckWithTrailerDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getTerminalsForCarrier(carrier) {\r\n    if (!this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n      const modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n      modVehicle.CarrierCompanyCode = carrier;\r\n      const terminalOptions = [];\r\n      //modVehicle.TerminalCodes = [];\r\n      this.setState({ terminalOptions, modVehicle });\r\n    } else {\r\n      const modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n      let terminalOptions = [...this.state.terminalOptions];\r\n\r\n      modVehicle.CarrierCompanyCode = carrier;\r\n\r\n      try {\r\n        if (carrier === undefined) {\r\n          terminalOptions = [];\r\n          modVehicle.TerminalCodes = [];\r\n          this.setState({ terminalOptions, modVehicle });\r\n          this.terminalSelectionChange([]);\r\n          return;\r\n        }\r\n        let keyCode = [\r\n          {\r\n            key: KeyCodes.carrierCode,\r\n            value: carrier,\r\n          },\r\n          {\r\n            key: KeyCodes.transportationType,\r\n            value: Constants.TransportationType.ROAD,\r\n          },\r\n        ];\r\n        let obj = {\r\n          ShareHolderCode: this.props.selectedShareholder,\r\n          keyDataCode: KeyCodes.carrierCode,\r\n          KeyCodes: keyCode,\r\n        };\r\n        axios(\r\n          RestAPIs.GetCarrier,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            let result = response.data;\r\n            //console.log(result);\r\n            //console.log(\"IsSuccess-\", result.IsSuccess);\r\n\r\n            if (\r\n              result.IsSuccess === true &&\r\n              result.EntityResult !== null &&\r\n              result.EntityResult.TerminalCodes !== null\r\n            ) {\r\n              terminalOptions = [...result.EntityResult.TerminalCodes];\r\n              this.setState({ terminalOptions });\r\n            } else {\r\n              terminalOptions = [];\r\n\r\n              this.setState({ terminalOptions });\r\n              console.log(\"Error in GetCarrier:\", result.ErrorList);\r\n            }\r\n            let vehicle = { ...this.state.vehicle };\r\n            if (\r\n              vehicle.Code === undefined ||\r\n              vehicle.Code === \"\" ||\r\n              vehicle.Code === null\r\n            ) {\r\n              if (terminalOptions.length === 1) {\r\n                modVehicle.TerminalCodes = [...terminalOptions];\r\n                this.terminalSelectionChange(modVehicle.TerminalCodes);\r\n              } else {\r\n                modVehicle.TerminalCodes = [];\r\n                this.terminalSelectionChange([]);\r\n              }\r\n            }\r\n\r\n            if (Array.isArray(modVehicle.TerminalCodes)) {\r\n              modVehicle.TerminalCodes = terminalOptions.filter((x) =>\r\n                modVehicle.TerminalCodes.includes(x)\r\n              );\r\n            }\r\n\r\n            this.setState({ modVehicle });\r\n          })\r\n          .catch((error) => {\r\n            terminalOptions = [];\r\n            modVehicle.TerminalCodes = [];\r\n            this.setState({ terminalOptions, modVehicle });\r\n            console.log(\"Error while getting Carrier:\", error, carrier);\r\n            //throw error;\r\n          });\r\n      } catch (error) {\r\n        terminalOptions = [];\r\n        modVehicle.TerminalCodes = [];\r\n        this.setState({ terminalOptions, modVehicle });\r\n        console.log(\r\n          \"TractowWithTrailerDetailsComposite:Error occured on handleCarrierChange\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      this.setState(\r\n        {\r\n          modVehicle: lodash.cloneDeep(this.state.vehicle),\r\n          modVehicleAttributeMetaDataList: [],\r\n          modVehicleTrailerAttributeMetaDataList: [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(this.state.modVehicle.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n      if (this.state.vehicle.Code === \"\") {\r\n        //let terminalOptions = { ...this.state.terminalOptions };\r\n        let terminalOptions = [];\r\n        this.setState({ terminalOptions });\r\n      }\r\n      vehicleTrailers = lodash.clone(this.state.vehicle.VehicleTrailers);\r\n      let validationErrors = { ...this.state.validationErrors };\r\n      Object.keys(validationErrors).forEach((key) => {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState({ validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCarrierChange = (carrier) => {\r\n    if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n      this.getTerminalsForCarrier(carrier);\r\n    else {\r\n      const modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n      modVehicle.CarrierCompanyCode = carrier;\r\n      const terminalOptions = [];\r\n      modVehicle.TerminalCodes = [];\r\n      this.setState({ terminalOptions, modVehicle });\r\n    }\r\n    if (vehicleValidationDef[\"CarrierCompanyCode\"] !== undefined) {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      validationErrors[\"CarrierCompanyCode\"] = Utilities.validateField(\r\n        vehicleValidationDef[\"CarrierCompanyCode\"],\r\n        carrier\r\n      );\r\n\r\n      this.setState({ validationErrors });\r\n    }\r\n    //this.getTerminalsForCarrier(carrier);\r\n  };\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n      modVehicle.Active = value;\r\n      if (modVehicle.Active !== this.state.vehicle.Active)\r\n        modVehicle.Remarks = \"\";\r\n      this.setState({ modVehicle });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured in handleActiveStatusChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    let modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n    try {\r\n      modVehicle[propertyName] = data;\r\n\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      if (modVehicle.Active === this.state.vehicle.Active) {\r\n        if (\r\n          this.state.vehicle.Remarks === modVehicle.Remarks ||\r\n          modVehicle.Remarks === \"\"\r\n        ) {\r\n          if (\r\n            this.state.vehicle.IsBonded === modVehicle.IsBonded &&\r\n            this.state.isBonded\r\n          )\r\n            validationErrors.Remarks = \"\";\r\n        }\r\n        if (modVehicle.Remarks === \"\")\r\n          modVehicle.Remarks = this.state.vehicle.Remarks;\r\n      }\r\n      // if (propertyName === \"Active\") {\r\n      //   if (modVehicle.Active !== this.state.vehicle.Active) {\r\n      //     modVehicle.Remarks = \"\";\r\n      //   }\r\n      // }\r\n      if (propertyName === \"IsBonded\") {\r\n        modVehicle.VehicleCustomsBondNo = null;\r\n        modVehicle.BondExpiryDate = null;\r\n        validationErrors.VehicleCustomsBondNo = \"\";\r\n        validationErrors.BondExpiryDate = \"\";\r\n      }\r\n\r\n      if (\r\n        propertyName === \"RoadTaxNo\" ||\r\n        propertyName === \"RoadTaxNoIssueDate\" ||\r\n        propertyName === \"RoadTaxNoExpiryDate\"\r\n      ) {\r\n        //validationErrors[propertyName] = \"\";\r\n        validationErrors.RoadTaxNo = \"\";\r\n        validationErrors.RoadTaxNoExpiryDate = \"\";\r\n        validationErrors.RoadTaxNoIssueDate = \"\";\r\n      }\r\n      if (\r\n        propertyName === \"Height\" ||\r\n        propertyName === \"Length\" ||\r\n        propertyName === \"Width\" ||\r\n        propertyName === \"LWHUOM\"\r\n      ) {\r\n        validationErrors.LWHUOM = \"\";\r\n      }\r\n      if (vehicleValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          vehicleValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n      this.setState({ validationErrors, modVehicle });\r\n\r\n      if (propertyName === \"TerminalCodes\") {\r\n        this.terminalSelectionChange(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      let modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n      let terminalOptions = [...this.state.terminalOptions];\r\n      if (checked) modVehicle.TerminalCodes = terminalOptions;\r\n      else modVehicle.TerminalCodes = [];\r\n      this.setState({ modVehicle });\r\n      this.terminalSelectionChange(modVehicle.TerminalCodes);\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on handleAllTerminalsChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  validateSave(modVehicle, attributesList) {\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(vehicleValidationDef).forEach(function (key) {\r\n      if (modVehicle[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          vehicleValidationDef[key],\r\n          modVehicle[key]\r\n        );\r\n    });\r\n\r\n    if (modVehicle.Active !== this.state.vehicle.Active) {\r\n      if (modVehicle.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"Vehicle_RemarksRequired\";\r\n      }\r\n    }\r\n\r\n    if (this.state.isBonded && modVehicle.IsBonded) {\r\n      if (\r\n        modVehicle.VehicleCustomsBondNo === \"\" ||\r\n        modVehicle.VehicleCustomsBondNo === null\r\n      ) {\r\n        validationErrors[\"VehicleCustomsBondNo\"] =\r\n          \"VehicleInfo_VehicleCustomsBondNoError\";\r\n      }\r\n      if (\r\n        modVehicle.BondExpiryDate === \"\" ||\r\n        modVehicle.BondExpiryDate === null\r\n      ) {\r\n        validationErrors[\"BondExpiryDate\"] = \"VehicleInfo_BondExpiryDateError\";\r\n      }\r\n\r\n      if (\r\n        modVehicle.IsBonded !== this.state.vehicle.IsBonded &&\r\n        this.state.vehicle.Code !== \"\"\r\n      ) {\r\n        if (modVehicle.Remarks === \"\") {\r\n          validationErrors[\"Remarks\"] = \"Vehicle_RemarksRequired\";\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      (modVehicle.RoadTaxNo !== null && modVehicle.RoadTaxNo !== \"\") ||\r\n      !isNaN(Date.parse(modVehicle.RoadTaxNoIssueDate)) ||\r\n      !isNaN(Date.parse(modVehicle.RoadTaxNoExpiryDate))\r\n    ) {\r\n      if (modVehicle.RoadTaxNo === null || modVehicle.RoadTaxNo === \"\") {\r\n        validationErrors[\"RoadTaxNo\"] = \"Vehicle_RoadTaxNoRequired\";\r\n      }\r\n\r\n      if (isNaN(Date.parse(modVehicle.RoadTaxNoIssueDate))) {\r\n        validationErrors[\"RoadTaxNoIssueDate\"] = \"Vehicle_RoadTaxIssRequired\";\r\n      }\r\n      if (isNaN(Date.parse(modVehicle.RoadTaxNoExpiryDate))) {\r\n        validationErrors[\"RoadTaxNoExpiryDate\"] = \"Vehicle_RoadTaxExpRequired\";\r\n      }\r\n    }\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"VehicleInfo_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n    if (\r\n      (modVehicle.Height !== null ||\r\n        modVehicle.Width != null ||\r\n        modVehicle.Length !== null) &&\r\n      modVehicle.LWHUOM === null\r\n    ) {\r\n      validationErrors.LWHUOM = \"PrimeMover_UOMRequired\";\r\n    }\r\n    let compartmentCount = 0;\r\n    if (this.state.rigidTruckSelection.length <= 0) {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [\"Vehicle_Code\"],\r\n        keyValues: [modVehicle.Code],\r\n        isSuccess: false,\r\n        errorMessage: \"Vehicle_RigTrRequired\",\r\n      });\r\n    }\r\n    else {\r\n      compartmentCount = this.state.rigidTruckSelection[0].CompCount;\r\n    }\r\n    if (this.state.trailerSelection.length <= 0) {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [\"Vehicle_Code\"],\r\n        keyValues: [modVehicle.Code],\r\n        isSuccess: false,\r\n        errorMessage: \"Vehicle_TrailerRequired\",\r\n      });\r\n    }\r\n    else {\r\n      this.state.trailerSelection.map((item) => {\r\n        compartmentCount = compartmentCount + item.CompCount;\r\n      })\r\n    }\r\n    if (this.state.maxNumberOfCompartments < compartmentCount) {\r\n       notification.messageResultDetails.push({\r\n        keyFields: [\"Vehicle_Code\"],\r\n        keyValues: [modVehicle.Code],\r\n        isSuccess: false,\r\n        errorMessage: \"Compartment_limit_Exceeded\",\r\n      });\r\n    }\r\n\r\n    var vehicleAttributeValidationErrors = lodash.cloneDeep(\r\n      this.state.vehicleAttributeValidationErrors\r\n    );\r\n\r\n    let attributeData1 = attributesList.find(function (item) {\r\n      return item[\"vehilceAttributeList\"] !== undefined;\r\n    });\r\n\r\n    attributeData1.vehilceAttributeList.forEach((attribute) => {\r\n      vehicleAttributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    var vehicleTrailerAttributeValidationErrors = lodash.cloneDeep(\r\n      this.state.vehicleTrailerAttributeValidationErrors\r\n    );\r\n    let attributeData2 = attributesList.find(function (item) {\r\n      return item[\"vehicleTrailerAttributeList\"] !== undefined;\r\n    });\r\n\r\n    attributeData2.vehicleTrailerAttributeList.forEach((attribute) => {\r\n      vehicleTrailerAttributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({\r\n      validationErrors,\r\n      vehicleAttributeValidationErrors,\r\n      vehicleTrailerAttributeValidationErrors,\r\n    });\r\n\r\n    var returnValue = true;\r\n    vehicleAttributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    if (returnValue)\r\n      vehicleTrailerAttributeValidationErrors.forEach((x) => {\r\n        if (returnValue) {\r\n          returnValue = Object.values(x.attributeValidationErrors).every(\r\n            function (value) {\r\n              return value === \"\";\r\n            }\r\n          );\r\n        } else {\r\n          return returnValue;\r\n        }\r\n      });\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    else return returnValue;\r\n\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modVehicle, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n  convertStringtoDecimal(modVehicle, attributesList) {\r\n    try {\r\n      if (modVehicle.Height !== null && modVehicle.Height !== \"\") {\r\n        modVehicle.Height = Utilities.convertStringtoDecimal(modVehicle.Height);\r\n      }\r\n      if (modVehicle.Length !== null && modVehicle.Length !== \"\") {\r\n        modVehicle.Length = Utilities.convertStringtoDecimal(modVehicle.Length);\r\n      }\r\n      if (modVehicle.Width !== null && modVehicle.Width !== \"\") {\r\n        modVehicle.Width = Utilities.convertStringtoDecimal(modVehicle.Width);\r\n      }\r\n      modVehicle = this.fillAttributeDetails(modVehicle, attributesList);\r\n      return modVehicle;\r\n    } catch (err) {\r\n      console.log(\r\n        \"convertStringtoDecimal error rigidtruckwithtrailer details\",\r\n        err\r\n      );\r\n    }\r\n  }\r\n\r\n  saveVehicle = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempVehicle = lodash.cloneDeep(this.state.tempVehicle);\r\n\r\n    \r\n      this.state.vehicle.Code === \"\"\r\n        ? this.createVehicle(tempVehicle)\r\n        : this.updateVehicle(tempVehicle);\r\n    } catch (error) {\r\n      console.log(\"RigidTruckWithTrailerComposite : Error in save Rigid truck with trailer\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n      let returnValue = Object.values(this.state.validationErrors).every(\r\n        function (value) {\r\n          return value === \"\";\r\n        }\r\n      );\r\n      if (returnValue) {\r\n        let modVehicle = this.fillDetails();\r\n        let attributesList = [];\r\n        let vehicleAttributeList = Utilities.attributesConverttoLocaleString(\r\n          this.state.modVehicleAttributeMetaDataList\r\n        );\r\n        let vehicleTrailerAttributeList =\r\n          Utilities.attributesConverttoLocaleString(\r\n            this.state.modVehicleTrailerAttributeMetaDataList\r\n          );\r\n        attributesList.push({ vehilceAttributeList: vehicleAttributeList });\r\n        attributesList.push({\r\n          vehicleTrailerAttributeList: vehicleTrailerAttributeList,\r\n        });\r\n     //   this.setState({ saveEnabled: false });\r\n\r\n        if (this.validateSave(modVehicle, attributesList)) {\r\n          modVehicle = this.convertStringtoDecimal(modVehicle, attributesList);\r\n\r\n          modVehicle = Utilities.convertDatesToString(\r\n            DateFieldsInEntities.DatesInEntity.Vehicle,\r\n            modVehicle\r\n          );\r\n          modVehicle.VehiclePrimeMovers.forEach(\r\n            (vp) =>\r\n            (vp.Primemover = Utilities.convertDatesToString(\r\n              DateFieldsInEntities.DatesInEntity.PrimeMover,\r\n              vp.Primemover\r\n            ))\r\n          );\r\n         \r\n          let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempVehicle = lodash.cloneDeep(modVehicle);\r\n        this.setState({ showAuthenticationLayout, tempVehicle }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveVehicle();\r\n          }\r\n      });\r\n\r\n         \r\n        } else this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"Tractor With Trailer DetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  createVehicle(modVehicle) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: modVehicle.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modVehicle,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"VehicleInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Vehicle_Code\"],\r\n          keyValues: [modVehicle.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateVehicle,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            // vehicle: lodash.cloneDeep(modVehicle),\r\n            // modVehicle: lodash.cloneDeep(modVehicle),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnVehicle\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          this.getVehicle(false);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnVehicle\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in CreateVehicle:\", result.ErrorList);\r\n        }\r\n\r\n        this.props.onSaved(this.state.modVehicle, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnVehicle\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modVehicle, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateVehicle(modVehicle) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: modVehicle.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modVehicle,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"VehicleInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Vehicle_Code\"],\r\n          keyValues: [modVehicle.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateVehicle,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            // vehicle: lodash.cloneDeep(modVehicle),\r\n            // modVehicle: lodash.cloneDeep(modVehicle),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnVehicle\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          this.getVehicle(false);\r\n        } else {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnVehicle\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in UpdateVehicle:\", result.ErrorList);\r\n        }\r\n        //console.log(notification);\r\n        this.props.onSaved(this.state.modVehicle, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modVehicle, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnVehicle\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n      modVehicle.ShareholderCode = this.props.selectedShareholder;\r\n\r\n      modVehicle.VehicleType = Constants.VehicleType.RigidTruckWithTrailer;\r\n\r\n      if (modVehicle.Height === \"\") modVehicle.Height = null;\r\n      if (modVehicle.Length === \"\") modVehicle.Length = null;\r\n      if (modVehicle.Width === \"\") modVehicle.Width = null;\r\n      if (modVehicle.Height !== null && modVehicle.Height !== \"\")\r\n        modVehicle.Height = modVehicle.Height.toLocaleString();\r\n      if (modVehicle.Length !== null && modVehicle.Length !== \"\")\r\n        modVehicle.Length = modVehicle.Length.toLocaleString();\r\n      if (modVehicle.Width !== null && modVehicle.Width !== \"\")\r\n        modVehicle.Width = modVehicle.Width.toLocaleString();\r\n\r\n      modVehicle.TransportationType = Constants.TransportationType.ROAD;\r\n      var licDate = new Date();\r\n      modVehicle.LicenseNoIssueDate = licDate.getUTCDate();\r\n      //modVehicle.LicenseNoIssueDate.setHours(0, 0, 0, 0);\r\n      // modVehicle.VehiclePrimeMovers[0].VehicleCode = modVehicle.Code;\r\n      // modVehicle.VehiclePrimeMovers[0].PrimeMoverCode = this.state.tractorSelection.Common_Code;\r\n      // modVehicle.VehiclePrimeMovers[0].ShareholderCode =\r\n      //   modVehicle.ShareholderCode;\r\n      // modVehicle.VehiclePrimeMovers[0].CarrierCompanyCode =\r\n      //   modVehicle.CarrierCompanyCode;\r\n      // modVehicle.VehiclePrimeMovers[0].PrimeMoverSequence = 1;\r\n      modVehicle.VehicleTrailers = [];\r\n      let trailerSeq = 0;\r\n      if (this.state.rigidTruckSelection.length > 0) {\r\n        this.state.rigidTruckSelection.forEach((rigidTruck) => {\r\n          let vehicleTrailerInfo = {\r\n            TrailerCode: null,\r\n            VehicleCode: null,\r\n            ShareholderCode: null,\r\n            CarrierCompanyCode: null,\r\n            TrailerSeq: null,\r\n            Trailer: {},\r\n          };\r\n          vehicleTrailerInfo.TrailerCode = rigidTruck.Common_Code;\r\n\r\n          vehicleTrailerInfo.VehicleCode = modVehicle.Code;\r\n          vehicleTrailerInfo.ShareholderCode = modVehicle.ShareholderCode;\r\n          vehicleTrailerInfo.CarrierCompanyCode = modVehicle.CarrierCompanyCode;\r\n          vehicleTrailerInfo.TrailerSeq = ++trailerSeq;\r\n          vehicleTrailerInfo.Trailer.Code = rigidTruck.Common_Code;\r\n          vehicleTrailerInfo.Trailer.Name = rigidTruck.Common_Name;\r\n          vehicleTrailerInfo.Trailer.ShareholderCode =\r\n            modVehicle.ShareholderCode;\r\n          vehicleTrailerInfo.Trailer.TransportationType =\r\n            Constants.TransportationType.ROAD;\r\n          vehicleTrailerInfo.Trailer.CarrierCompanyCode =\r\n            modVehicle.CarrierCompanyCode;\r\n          vehicleTrailerInfo.Trailer.TrailerType =\r\n            Constants.TrailerType.RIGID_TRAILER;\r\n\r\n          modVehicle.VehicleTrailers.push(vehicleTrailerInfo);\r\n        });\r\n      }\r\n\r\n      if (this.state.trailerSelection.length > 0) {\r\n        this.state.trailerSelection.forEach((trailer) => {\r\n          let vehicleTrailerInfo = {\r\n            TrailerCode: null,\r\n            VehicleCode: null,\r\n            ShareholderCode: null,\r\n            CarrierCompanyCode: null,\r\n            TrailerSeq: null,\r\n            Trailer: {},\r\n          };\r\n          vehicleTrailerInfo.TrailerCode = trailer.Common_Code;\r\n\r\n          vehicleTrailerInfo.VehicleCode = modVehicle.Code;\r\n          vehicleTrailerInfo.ShareholderCode = modVehicle.ShareholderCode;\r\n          vehicleTrailerInfo.CarrierCompanyCode = modVehicle.CarrierCompanyCode;\r\n          vehicleTrailerInfo.TrailerSeq = ++trailerSeq;\r\n          vehicleTrailerInfo.Trailer.Code = trailer.Common_Code;\r\n          vehicleTrailerInfo.Trailer.Name = trailer.Common_Name;\r\n          vehicleTrailerInfo.Trailer.ShareholderCode =\r\n            modVehicle.ShareholderCode;\r\n          vehicleTrailerInfo.Trailer.TransportationType =\r\n            Constants.TransportationType.ROAD;\r\n          vehicleTrailerInfo.Trailer.CarrierCompanyCode =\r\n            modVehicle.CarrierCompanyCode;\r\n          vehicleTrailerInfo.Trailer.TrailerType =\r\n            Constants.TrailerType.NON_RIGID_TRAILER;\r\n\r\n          modVehicle.VehicleTrailers.push(vehicleTrailerInfo);\r\n        });\r\n      }\r\n      return modVehicle;\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on fillDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  fillAttributeDetails(modVehicle, attributesList) {\r\n    try {\r\n      let attributeData1 = attributesList.find(function (item) {\r\n        return item[\"vehilceAttributeList\"] !== undefined;\r\n      });\r\n      let attributeData2 = attributesList.find(function (item) {\r\n        return item[\"vehicleTrailerAttributeList\"] !== undefined;\r\n      });\r\n      let modVehicleAttributeMetaDataList = Utilities.attributesDatatypeConversion(attributeData1.vehilceAttributeList);\r\n      modVehicle.Attributes = Utilities.fillAttributeDetails(modVehicleAttributeMetaDataList);\r\n\r\n      let modVehicleTrailerAttributeMetaDataList =\r\n        Utilities.attributesDatatypeConversion(\r\n          attributeData2.vehicleTrailerAttributeList\r\n        );\r\n\r\n      if (\r\n        (modVehicle.VehicleTrailers !== null) &\r\n        (modVehicle.VehicleTrailers.length > 0)\r\n      )\r\n        modVehicle.VehicleTrailers.forEach((trailer) => {\r\n          trailer.Attributes = Utilities.fillAttributeDetails(modVehicleTrailerAttributeMetaDataList);\r\n        });\r\n      return modVehicle;\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckWithTrailerDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleNextClick = (entity, data, columns) => {\r\n    if (entity === \"rigidTruck\") {\r\n      this.setState({\r\n        step1Active: false,\r\n        step2Active: true,\r\n      });\r\n      rigidTruckColumns = columns;\r\n    }\r\n\r\n    if (entity === \"trailer\") {\r\n      this.setState({\r\n        step2Active: false,\r\n        step3Active: true,\r\n      });\r\n      trailerColumns = columns;\r\n    }\r\n  };\r\n\r\n  handleSelectClick = (entity, data, columns) => {\r\n    if (entity === \"rigidTruck\") {\r\n      this.setState({\r\n        rigidTruckSelection: [...data],\r\n      });\r\n      rigidTruckColumns = columns;\r\n    }\r\n\r\n    if (entity === \"trailer\") {\r\n      this.setState({\r\n        trailerSelection: [...data],\r\n      });\r\n      trailerColumns = columns;\r\n    }\r\n\r\n  }\r\n\r\n  handleRigidTruckList = (rigidTruckSelection, columns) => {\r\n    rigidTruckColumns = columns;\r\n\r\n    this.setState({\r\n      rigidTruckSelection: rigidTruckSelection,\r\n      isRigidLoaded: true\r\n      // step1Data: rigidTruckSelection,\r\n    });\r\n  };\r\n\r\n  handleTrailerList = (trailerSelection, columns) => {\r\n    trailerColumns = columns;\r\n\r\n    this.setState({\r\n      trailerSelection: trailerSelection,\r\n      isTrailerLoaded: true\r\n      // step2Data: trailerSelection,\r\n    });\r\n  };\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      let validationErrors = { ...this.state.validationErrors };\r\n      let modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n      validationErrors[propertyName] = error;\r\n      modVehicle[propertyName] = value;\r\n      this.setState({ validationErrors, modVehicle });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckWithTrailerDetailsComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleVehicleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modVehicleAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modVehicleAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modVehicleAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const vehicleAttributeValidationErrors = lodash.cloneDeep(\r\n        this.state.vehicleAttributeValidationErrors\r\n      );\r\n\r\n      vehicleAttributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ vehicleAttributeValidationErrors, modVehicleAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckWithTrailerDetailsComposite:Error occured on handleVehicleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleVehicleTrailerAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modVehicleTrailerAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modVehicleTrailerAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modVehicleTrailerAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const vehicleTrailerAttributeValidationErrors = lodash.cloneDeep(\r\n        this.state.vehicleTrailerAttributeValidationErrors\r\n      );\r\n\r\n      vehicleTrailerAttributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ vehicleTrailerAttributeValidationErrors, modVehicleTrailerAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckWithTrailerDetailsComposite:Error occured on handleVehicleTrailerAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      carriers: this.state.carrierOptions,\r\n      productType: this.state.productTypeOptions,\r\n      unitOfWeight: this.state.weightUOMOptions,\r\n      unitOfVolume: this.state.volumeUOMOptions,\r\n      unitOfDimension: this.state.lengthUOMOptions,\r\n      terminalCodes: this.state.terminalOptions,\r\n    };\r\n\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"Vehicle_LastUpdated\",\r\n        fieldValue:\r\n          new Date(this.state.modVehicle.LastUpdateTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modVehicle.LastUpdateTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"Vehicle_LastActiveTime\",\r\n        fieldValue:\r\n          this.state.modVehicle.LastActiveTime !== undefined &&\r\n            this.state.modVehicle.LastActiveTime !== null\r\n            ? new Date(\r\n              this.state.modVehicle.LastActiveTime\r\n            ).toLocaleDateString() +\r\n            \" \" +\r\n            new Date(\r\n              this.state.modVehicle.LastActiveTime\r\n            ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"Vehicle_CreateTime\",\r\n        fieldValue:\r\n          new Date(this.state.modVehicle.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modVehicle.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <>\r\n            <Accordion>\r\n              <Accordion.Content\r\n                title={t(\"Step1_RigidTruck\")}\r\n                active={this.state.step1Active}\r\n                onClick={() =>\r\n                  this.setState({ step1Active: !this.state.step1Active })\r\n                }\r\n              >\r\n                <div className=\"borderTable\">\r\n                  <VehicleComposite\r\n                    key=\"rigidTruck\"\r\n                    rigidTruckWithTrailer={rigidtruckWithTrailer}\r\n                    rigidTruckSelection={vehicleTrailers}\r\n                    handleNextClick={this.handleNextClick}\r\n                    getRigidTruckList={this.handleRigidTruckList}\r\n                    handleSelectClick={this.handleSelectClick}\r\n                    rigidTruckShareholder={this.props.selectedShareholder}\r\n                  />\r\n                </div>\r\n              </Accordion.Content>\r\n            </Accordion>\r\n            {this.state.rigidTruckSelection.length > 0 &&\r\n              !this.state.step1Active ? (\r\n              <DataTable\r\n                data={this.state.rigidTruckSelection}\r\n                selection={this.state.rigidTruckSelection}\r\n                selectionMode=\"multiple\"\r\n                showHeader={true}\r\n              // onSelectionChange={(e) => this.setState({ tractorSelection: e })}\r\n              >\r\n                {rigidTruckColumns.map((key) => (\r\n                  <DataTable.Column\r\n                    key={key.Name}\r\n                    initialWidth={key.Width}\r\n                    field={key.Name}\r\n                    header={t(key.Name)}\r\n                    renderer={(cellData) => this.displayValues(cellData, key)}\r\n                  />\r\n                ))}\r\n              </DataTable>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {this.state.vehicle.Code !== \"\" &&\r\n              !this.state.isRigidLoaded ? (\r\n              <div className=\"authLoading\" style={{ height: \"80px\" }}>\r\n                <Loader style={{ top: \"10px\" }} text=\" \"></Loader>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <Accordion>\r\n              <Accordion.Content\r\n                title={t(\"Step2_Trailer\")}\r\n                active={this.state.step2Active}\r\n                onClick={() =>\r\n                  this.setState({ step2Active: !this.state.step2Active })\r\n                }\r\n              >\r\n                <div className=\"borderTable\">\r\n                  <TrailerComposite\r\n                    vehicleWithTrailer={vehicleWithTrailer}\r\n                    handleNextClick={this.handleNextClick}\r\n                    getTrailerList={this.handleTrailerList}\r\n                    trailerSelection={vehicleTrailers}\r\n                    vehicleShareholder={this.props.selectedShareholder}\r\n                    handleSelectClick={this.handleSelectClick}\r\n                  />\r\n                </div>\r\n              </Accordion.Content>\r\n            </Accordion>\r\n            {this.state.trailerSelection.length > 0 &&\r\n              !this.state.step2Active ? (\r\n              <DataTable\r\n                data={this.state.trailerSelection}\r\n                selection={this.state.trailerSelection}\r\n                selectionMode=\"multiple\"\r\n                showHeader={true}\r\n              // onSelectionChange={(e) => this.setState({ trailerSelection: e })}\r\n              >\r\n                {trailerColumns.map((key) => (\r\n                  <DataTable.Column\r\n                    key={key.Name}\r\n                    initialWidth={key.Width}\r\n                    field={key.Name}\r\n                    header={t(key.Name)}\r\n                    renderer={(cellData) => this.displayValues(cellData, key)}\r\n                  />\r\n                ))}\r\n              </DataTable>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {this.state.vehicle.Code !== \"\" &&\r\n              !this.state.isTrailerLoaded ? (\r\n              <div className=\"authLoading\" style={{ height: \"80px\" }}>\r\n                <Loader style={{ top: \"10px\" }} text=\" \"></Loader>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <Accordion>\r\n              <Accordion.Content\r\n                title={t(\"Step3_Vehicle\")}\r\n                active={this.state.step3Active}\r\n                onClick={() =>\r\n                  this.setState({ step3Active: !this.state.step3Active })\r\n                }\r\n              >\r\n                <div className=\"borderTable\">\r\n                  {/* {this.state.isReadyToRender ? ( */}\r\n                  <div>\r\n                    <ErrorBoundary>\r\n                      <TMDetailsHeader\r\n                        entityCode={this.state.vehicle.Code}\r\n                        newEntityName=\"VehicleList_title\"\r\n                        popUpContents={popUpContents}\r\n                      ></TMDetailsHeader>\r\n                    </ErrorBoundary>\r\n                    <ErrorBoundary>\r\n                      <div className=\"detailsContainer\">\r\n                        <div className=\"row\">\r\n                          <VehicleBasicFields\r\n                            data={this.state.vehicle}\r\n                            modData={this.state.modVehicle}\r\n                            validationErrors={this.state.validationErrors}\r\n                            listOptions={listOptions}\r\n                            onFieldChange={this.handleChange}\r\n                            onDateTextChange={this.handleDateTextChange}\r\n                            onAllTerminalsChange={this.handleAllTerminalsChange}\r\n                            onCarrierChange={this.handleCarrierChange}\r\n                            onActiveStatusChange={this.handleActiveStatusChange}\r\n                            isEnterpriseNode={\r\n                              this.props.userDetails.EntityResult\r\n                                .IsEnterpriseNode\r\n                            }\r\n                            attributeValidationErrors={\r\n                              this.state.vehicleAttributeValidationErrors\r\n                            }\r\n                            modAttributeMetaDataList={\r\n                              this.state.modVehicleAttributeMetaDataList\r\n                            }\r\n                            onAttributeDataChange={this.handleVehicleAttributeDataChange}\r\n                            isBonded={this.state.isBonded}\r\n                          ></VehicleBasicFields>\r\n\r\n                          {this.state.modVehicleTrailerAttributeMetaDataList\r\n                            .length > 0 ? (\r\n                            <div className=\"col-12 col-md-12 col-lg-12\">\r\n                              <Accordion>\r\n                                <Accordion.Content\r\n                                  className=\"attributeAccordian\"\r\n                                  title={t(\"VEHICLETRAILER_Attributes\")}\r\n                                >\r\n                                  {this.state\r\n                                    .modVehicleTrailerAttributeMetaDataList\r\n                                    .length > 0\r\n                                    ? this.state.modVehicleTrailerAttributeMetaDataList.map(\r\n                                      (attribute) => (\r\n                                        <ErrorBoundary>\r\n                                          <div className=\"col-12 col-md-12 col-lg-12\">\r\n                                            <Accordion>\r\n                                              <Accordion.Content\r\n                                                className=\"attributeAccordian\"\r\n                                                title={\r\n                                                  this.props.userDetails\r\n                                                    .EntityResult\r\n                                                    .IsEnterpriseNode\r\n                                                    ? attribute.TerminalCode +\r\n                                                    \" - \" +\r\n                                                    t(\"Attributes_Header\")\r\n                                                    : t(\"Attributes_Header\")\r\n                                                }\r\n                                              >\r\n                                                <AttributeDetails\r\n                                                  selectedAttributeList={\r\n                                                    attribute.attributeMetaDataList\r\n                                                  }\r\n                                                  handleCellDataEdit={\r\n                                                    this.handleVehicleTrailerAttributeDataChange\r\n                                                  }\r\n                                                  attributeValidationErrors={this.handleValidationErrorFilter(\r\n                                                    this.state\r\n                                                      .vehicleTrailerAttributeValidationErrors,\r\n                                                    attribute.TerminalCode\r\n                                                  )}\r\n                                                ></AttributeDetails>\r\n                                              </Accordion.Content>\r\n                                            </Accordion>\r\n                                          </div>\r\n                                        </ErrorBoundary>\r\n                                      )\r\n                                    )\r\n                                    : null}\r\n                                </Accordion.Content>\r\n                              </Accordion>\r\n                            </div>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n                    </ErrorBoundary>\r\n                    <ErrorBoundary>\r\n                      <TMDetailsUserActions\r\n                        handleBack={this.props.onBack}\r\n                        handleSave={this.handleSave}\r\n                        handleReset={this.handleReset}\r\n                        saveEnabled={this.state.saveEnabled}\r\n                      ></TMDetailsUserActions>\r\n                    </ErrorBoundary>\r\n                    {this.state.showAuthenticationLayout ? (\r\n                      <UserAuthenticationLayout\r\n                        Username={this.props.userDetails.EntityResult.UserName}\r\n                        functionName={\r\n                          this.state.vehicle.Code === \"\"\r\n                            ? functionGroups.add\r\n                            : functionGroups.modify\r\n                        }\r\n                        functionGroup={fnVehicle}\r\n                        handleOperation={this.saveVehicle}\r\n                        handleClose={this.handleAuthenticationClose}\r\n                      ></UserAuthenticationLayout>\r\n                    ) : null}\r\n                  </div>\r\n                  {/* ) : (\r\n                      <div>Loading...</div>\r\n                    )} */}\r\n                </div>\r\n              </Accordion.Content>\r\n            </Accordion>\r\n            {this.state.step3Active ? (\r\n              \"\"\r\n            ) : (\r\n              <div className=\"vehicleBackbtn\">\r\n                <Button\r\n                  className=\"backButton\"\r\n                  content={t(\"Back\")}\r\n                  onClick={this.props.onBack}\r\n                ></Button>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </TranslationConsumer>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RigidTruckWithTrailerDetailsComposite);\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nexport function TrailerSummaryPageComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  selectionRequired,\r\n  terminalsToShow,\r\n  selectedItems,\r\n  onSelectionChange,\r\n  onRowClick,\r\n  parentComponent,\r\n}) {\r\n  return (\r\n    <WijmoGridComposite\r\n      data={tableData}\r\n      columns={columnDetails}\r\n      rowsPerPage={pageSize}\r\n      exportRequired={exportRequired}\r\n      exportFileName={exportFileName}\r\n      columnPickerRequired={columnPickerRequired}\r\n      columnGroupingRequired={columnGroupingRequired}\r\n      selectionRequired={selectionRequired}\r\n      selectedItems={selectedItems}\r\n      onSelectionHandle={onSelectionChange}\r\n      onRowClick={onRowClick}\r\n      parentComponent={parentComponent}\r\n      terminalsToShow={terminalsToShow}\r\n    ></WijmoGridComposite>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { TrailerSummaryPageComposite } from \"../Summary/TrailerSummaryComposite\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { Icon, Button } from \"@scuf/common\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport {\r\n  functionGroups,\r\n  fnTrailer,\r\n  fnKPIInformation,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport TrailerDetailsComposite from \"../Details/TrailerDetailsComposite\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport { kpiTrailerList } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass TrailerComposite extends React.PureComponent {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: false, delete: false, shareholder: true },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    data: {},\r\n    trailerKPIList: [],\r\n    showAuthenticationLayout: false,\r\n  };\r\n\r\n  componentName = (this.props.vehicleWithTrailer ? \"vehicleWithTrailer\" : \"\") + \"TrailerComponent\";\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: {},\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"TrailerComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      let { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({\r\n        selectedShareholder: shareholder,\r\n        isReadyToRender: false,\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n      });\r\n      this.getTrailerList(shareholder);\r\n      if (\r\n        this.props.vehicleWithTrailer === undefined ||\r\n        this.props.vehicleWithTrailer === false\r\n      )\r\n        this.getKPIList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleDelete = () => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n\r\n      var deleteTrailerKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        let shCode = this.state.selectedShareholder;\r\n        let trailerCode = this.state.selectedItems[i][\"Common_Code\"];\r\n        let carrierCode = this.state.selectedItems[i][\"TrailerList_Carrier\"];\r\n        let keyData = {\r\n          keyDataCode: 0,\r\n          ShareHolderCode: shCode,\r\n          KeyCodes: [\r\n            { Key: KeyCodes.trailerCode, Value: trailerCode },\r\n            { key: KeyCodes.carrierCode, Value: carrierCode },\r\n          ],\r\n        };\r\n        deleteTrailerKeys.push(keyData);\r\n      }\r\n\r\n      axios(\r\n        RestAPIs.DeleteTrailer,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteTrailerKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          // console.log(response.data);\r\n          let result = response.data;\r\n          let isRefreshDataRequire = result.IsSuccess;\r\n\r\n          if (\r\n            result.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            let failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n\r\n          let notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"TrailerDetails_DeleteStatus\",\r\n            [\"TrailerCode\"]\r\n          );\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({ isReadyToRender: false, showAuthenticationLayout: false, });\r\n            this.getTrailerList(this.state.selectedShareholder);\r\n            if (\r\n              this.props.vehicleWithTrailer === undefined ||\r\n              this.props.vehicleWithTrailer === false\r\n            )\r\n              this.getKPIList(this.state.selectedShareholder);\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n              showAuthenticationLayout: false,\r\n            });\r\n          } else {\r\n            operationsVisibilty.delete = true;\r\n            this.setState({ operationsVisibilty, showAuthenticationLayout: false, });\r\n          }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0)\r\n              messageResult.keyFields[0] = \"Trailer_Code\";\r\n          });\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    } catch (error) {\r\n      console.log(\"TrailerComposite:Error occured on handleDelet\", error);\r\n    }\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      if (this.props.vehicleWithTrailer === undefined) {\r\n        let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnTrailer\r\n        );\r\n        operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnTrailer\r\n        );\r\n        operationsVisibilty.shareholder = false;\r\n        this.setState({\r\n          isDetails: true,\r\n          selectedRow: item,\r\n          selectedItems: [item],\r\n          operationsVisibilty,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"TrailerComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n\r\n  handleSelection = (items) => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n\r\n      operationsVisibilty.delete =\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnTrailer\r\n        );\r\n\r\n      this.setState({ selectedItems: items, operationsVisibilty }, () => {\r\n        if (this.props.vehicleWithTrailer === true) {\r\n          this.props.handleSelectClick(\r\n            \"trailer\",\r\n            this.state.selectedItems,\r\n            this.state.data.Column\r\n          );\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"TrailerComposite:Error occured on handleSelection\", error);\r\n    }\r\n  };\r\n\r\n  //Get KPI for Trailer\r\n  getKPIList(shareholder) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      var notification = {\r\n        message: \"\",\r\n        messageType: \"critical\",\r\n        messageResultDetails: [],\r\n      };\r\n      let objKPIRequestData = {\r\n        PageName: kpiTrailerList,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              trailerKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ trailerKPIList: [] });\r\n            console.log(\"Error in Trailer KPIList:\", result.ErrorList);\r\n            notification.messageResultDetails.push({\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: result.ErrorList[0],\r\n            });\r\n          }\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting trailer KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  getTrailerList(shareholder) {\r\n    let transportationType = Constants.TransportationType.ROAD;\r\n\r\n    axios(\r\n      RestAPIs.GetTrailerListForRole +\r\n      \"?ShareholderCode=\" +\r\n      shareholder +\r\n      \"&Transportationtype=\" +\r\n      transportationType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ data: result.EntityResult, isReadyToRender: true });\r\n          if (\r\n            this.props.vehicleWithTrailer === true &&\r\n            this.props.trailerSelection.length > 0\r\n          ) {\r\n            let trailers = this.props.trailerSelection;\r\n            if (trailers.length > 0) {\r\n              let trailerSelection = [];\r\n              trailers.forEach((trailer) => {\r\n                let row = result.EntityResult.Table.find(\r\n                  (row) => row.Common_Code === trailer.Trailer.Code\r\n                );\r\n                if (row !== undefined) trailerSelection.push(row);\r\n              });\r\n              this.setState({ selectedItems: trailerSelection });\r\n              this.props.getTrailerList(\r\n                trailerSelection,\r\n                result.EntityResult.Column\r\n              );\r\n            }\r\n          }\r\n        } else {\r\n          this.setState({ data: {}, isReadyToRender: true });\r\n          console.log(\"Error in GetTrailerListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: {}, isReadyToRender: true });\r\n        console.log(\"Error while getting Trailer List:\", error);\r\n      });\r\n  }\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnTrailer\r\n        );\r\n        operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnTrailer\r\n        );\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            Common_Code: data.Code,\r\n            //TransportationType: data.TransportationType,\r\n            TrailerList_Carrier: data.CarrierCompanyCode,\r\n            Common_Status: data.Active,\r\n            Common_Shareholder: data.ShareholderCode,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"TrailerComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnTrailer\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.shareholder = true;\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getTrailerList(this.state.selectedShareholder);\r\n      if (\r\n        this.props.vehicleWithTrailer === undefined ||\r\n        this.props.vehicleWithTrailer === false\r\n      )\r\n        this.getKPIList(this.state.selectedShareholder);\r\n    } catch (error) {\r\n      console.log(\"TrailerComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    // clear session storage on page refresh\r\n    window.addEventListener(\"beforeunload\", () => Utilities.clearSessionStorage(this.componentName + \"GridState\"));\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnTrailer\r\n      );\r\n\r\n      let shareholder = this.props.userDetails.EntityResult.PrimaryShareholder;\r\n      if (this.props.vehicleWithTrailer === true)\r\n        shareholder = this.props.vehicleShareholder;\r\n      this.setState({\r\n        operationsVisibilty,\r\n        selectedShareholder: shareholder,\r\n      });\r\n      this.getTrailerList(shareholder);\r\n      if (\r\n        this.props.vehicleWithTrailer === undefined ||\r\n        this.props.vehicleWithTrailer === false\r\n      )\r\n        this.getKPIList(shareholder);\r\n    } catch (error) {\r\n      console.log(\"TrailerComposite:Error occured on ComponentDidMount\", error);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    // clear session storage\r\n    Utilities.clearSessionStorage(this.componentName + \"GridState\");\r\n    window.removeEventListener(\"beforeunload\", () => Utilities.clearSessionStorage(this.componentName + \"GridState\"));\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (\r\n      nextProps.vehicleWithTrailer === true &&\r\n      nextProps.trailerSelection.length > 0\r\n    ) {\r\n      let trailers = nextProps.trailerSelection;\r\n      if (trailers.length > 0) {\r\n        let trailerSelection = [];\r\n        trailers.forEach((trailer) => {\r\n          let row = this.state.data.Table.find(\r\n            (row) => row.Common_Code === trailer.Trailer.Code\r\n          );\r\n          if (row !== undefined) trailerSelection.push(row);\r\n        });\r\n        this.setState({ selectedItems: trailerSelection });\r\n        this.props.getTrailerList(trailerSelection, this.state.data.Column);\r\n      }\r\n    } else if (\r\n      nextProps.vehicleWithTrailer === true &&\r\n      nextProps.trailerSelection.length === 0\r\n    ) {\r\n      this.setState({ selectedItems: [] });\r\n    }\r\n  }\r\n  handleNextClick = () => {\r\n    this.props.handleNextClick(\r\n      \"trailer\",\r\n      this.state.selectedItems,\r\n      this.state.data.Column\r\n    );\r\n  };\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showAuthenticationLayout });\r\n      if (showAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"TrailerComposite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    let fillPage = true;\r\n    let loadingClass = \"globalLoader\";\r\n    if (this.props.vehicleWithTrailer === true) {\r\n      fillPage = false;\r\n      loadingClass = \"nestedList\";\r\n    }\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div>\r\n            <ErrorBoundary>\r\n              {this.props.vehicleWithTrailer === undefined ? (\r\n                <TMUserActionsComposite\r\n                  operationsVisibilty={this.state.operationsVisibilty}\r\n                  breadcrumbItem={this.props.activeItem}\r\n                  shareholders={\r\n                    this.props.userDetails.EntityResult.ShareholderList\r\n                  }\r\n                  selectedShareholder={this.state.selectedShareholder}\r\n                  onShareholderChange={this.handleShareholderSelectionChange}\r\n                  onDelete={this.authenticateDelete}\r\n                  onAdd={this.handleAdd}\r\n                  handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n                ></TMUserActionsComposite>\r\n              ) : (\r\n                <>\r\n                  {this.state.isDetails ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <div className=\"vehicleDataTableHeading\">\r\n                      <div className=\"col col-lg-10 dataTableHeadingPadding\">\r\n                        <h5>{t(\"Select_Trailers\")}</h5>\r\n                      </div>\r\n                      <div className=\"col col-lg-1 vehicleDataTableIcon\">\r\n                        <div\r\n                          className={\r\n                            (this.state.operationsVisibilty.add\r\n                              ? \"iconCircle \"\r\n                              : \"iconCircleDisable \") + \"iconblock\"\r\n                          }\r\n                              onClick={() => {if(this.state.operationsVisibilty.add){this.handleAdd()}}}\r\n                        >\r\n                          <Icon\r\n                            root=\"common\"\r\n                            name=\"badge-plus\"\r\n                            size=\"small\"\r\n                            color=\"white\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </ErrorBoundary>\r\n            {this.state.isDetails ? (\r\n              <ErrorBoundary>\r\n                <TrailerDetailsComposite\r\n                  key=\"TrailerDetails\"\r\n                  selectedRow={this.state.selectedRow}\r\n                  onBack={this.handleBack}\r\n                  onSaved={this.savedEvent}\r\n                  selectedShareholder={this.state.selectedShareholder}\r\n                // genericProps={this.props.activeItem.itemProps}\r\n                ></TrailerDetailsComposite>\r\n              </ErrorBoundary>\r\n            ) : this.state.isReadyToRender ? (\r\n              <div>\r\n                {this.props.vehicleWithTrailer === true ? (\r\n                  \"\"\r\n                ) : (\r\n                  <ErrorBoundary>\r\n                    <div className=\"kpiSummaryContainer\">\r\n                      <KPIDashboardLayout\r\n                        kpiList={this.state.trailerKPIList}\r\n                        pageName=\"Trailer\"\r\n                      ></KPIDashboardLayout>\r\n                    </div>\r\n                  </ErrorBoundary>\r\n                )}\r\n                <ErrorBoundary>\r\n                  <TrailerSummaryPageComposite\r\n                    tableData={this.state.data.Table}\r\n                    columnDetails={this.state.data.Column}\r\n                    pageSize={\r\n                      this.props.userDetails.EntityResult.PageAttibutes\r\n                        .WebPortalListPageSize\r\n                    }\r\n                    exportRequired={!this.props.vehicleWithTrailer}\r\n                    exportFileName=\"TrailerList.xlsx\"\r\n                    columnPickerRequired={!this.props.vehicleWithTrailer}\r\n                    columnGroupingRequired={!this.props.vehicleWithTrailer}\r\n                    selectionRequired={true}\r\n                    terminalsToShow={\r\n                      this.props.userDetails.EntityResult.PageAttibutes\r\n                        .NoOfTerminalsToShow\r\n                    }\r\n                    selectedItems={this.state.selectedItems}\r\n                    onRowClick={this.handleRowClick}\r\n                    onSelectionChange={this.handleSelection}\r\n                    fillPage={fillPage}\r\n                    parentComponent={this.componentName}\r\n                  ></TrailerSummaryPageComposite>\r\n                  {this.props.vehicleWithTrailer === true ? (\r\n                    <div className=\"vehicleNextButton\">\r\n                      <Button onClick={this.handleNextClick}>\r\n                        {t(\"Common_Next\")}\r\n                      </Button>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </ErrorBoundary>\r\n              </div>\r\n            ) : (\r\n              <LoadingPage\r\n                loadingClass={loadingClass}\r\n                message=\"Loading\"\r\n              ></LoadingPage>\r\n            )}\r\n           {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.remove}\r\n            functionGroup={fnTrailer}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleDelete}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n            {this.props.vehicleWithTrailer === true ? (\r\n              \"\"\r\n            ) : (\r\n              <ErrorBoundary>\r\n                <ToastContainer\r\n                  hideProgressBar={true}\r\n                  closeOnClick={false}\r\n                  closeButton={true}\r\n                  newestOnTop={true}\r\n                  position=\"bottom-right\"\r\n                  toastClassName=\"toast-notification-wrap\"\r\n                />\r\n              </ErrorBoundary>\r\n            )}\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TrailerComposite);\r\n\r\nTrailerComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n  vehicleWithTrailer: PropTypes.bool,\r\n  trailerSelection: PropTypes.array,\r\n  getTrailerList: PropTypes.func,\r\n  handleNextClick: PropTypes.func,\r\n  handleSelectClick: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { Select, Input, DatePicker, Accordion, Checkbox } from \"@scuf/common\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getCurrentDateFormat,\r\n  getOptionsWithSelect,\r\n} from \"../../../JS/functionalUtilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport { convertStringToCommonDateFormat } from \"../../../JS/Utilities\";\r\n\r\nVehicleBasicInputs.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  modData: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    carriers: PropTypes.array,\r\n    productType: PropTypes.array,\r\n    unitOfWeight: PropTypes.array,\r\n    unitOfVolume: PropTypes.array,\r\n    unitOfDimension: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    hazardousTankerCategoryOptions: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  onActiveStatusChange: PropTypes.func.isRequired,\r\n  onCarrierChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  modAttributeMetaDataList: PropTypes.array.isRequired,\r\n  attributeValidationErrors: PropTypes.array.isRequired,\r\n  onAttributeDataChange: PropTypes.func.isRequired,\r\n  isBonded: PropTypes.bool.isRequired,\r\n  hazardousEnabled: PropTypes.bool,\r\n};\r\nVehicleBasicInputs.defaultProps = {\r\n  listOptions: {\r\n    carriers: [],\r\n    productType: [],\r\n    unitOfWeight: [],\r\n    unitOfVolume: [],\r\n    unitOfDimension: [],\r\n    terminalCodes: [],\r\n    hazardousTankerCategoryOptions: [],\r\n  },\r\n  isEnterpriseNode: false,\r\n  hazardousEnabled: false,\r\n};\r\nexport default function VehicleBasicInputs({\r\n  data,\r\n  modData,\r\n  onFieldChange,\r\n  validationErrors,\r\n  listOptions,\r\n  onDateTextChange,\r\n  onAllTerminalsChange,\r\n  onActiveStatusChange,\r\n  onCarrierChange,\r\n  children,\r\n  isEnterpriseNode,\r\n  modAttributeMetaDataList,\r\n  attributeValidationErrors,\r\n  onAttributeDataChange,\r\n  isBonded,\r\n  hazardousEnabled,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n  const [t] = useTranslation();\r\n  // useEffect(() => {\r\n  //   const unitOfDimension = listOptions.unitOfDimension;\r\n  //   unitOfDimension.unshift({ text: t(\"Common_Select\"), value: null });\r\n  // }, [listOptions.unitOfDimension]);\r\n  return (\r\n    // <TranslationConsumer>\r\n    //   {(t) => (\r\n    <>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Code}\r\n          label={t(\"Vehicle_Code\")}\r\n          indicator=\"required\"\r\n          disabled={data.Code !== \"\"}\r\n          onChange={(data) => onFieldChange(\"Code\", data)}\r\n          error={t(validationErrors.Code)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Name}\r\n          label={t(\"Vehicle_Name\")}\r\n          indicator=\"required\"\r\n          onChange={(data) => onFieldChange(\"Name\", data)}\r\n          error={t(validationErrors.Name, {\r\n            label: t(\"Vehicle_Name\"),\r\n          })}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Description === null ? \"\" : modData.Description}\r\n          label={t(`Vehicle_Desc`)}\r\n          onChange={(data) => onFieldChange(\"Description\", data)}\r\n          error={t(validationErrors.Description)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Select\r\n          fluid\r\n          placeholder={t(\"Common_Select\")}\r\n          label={t(\"Vehicle_CarrierCompany\")}\r\n          value={modData.CarrierCompanyCode}\r\n          options={listOptions.carriers}\r\n          onChange={(data) => {\r\n            onCarrierChange(data);\r\n          }}\r\n          indicator=\"required\"\r\n          error={t(validationErrors.CarrierCompanyCode)}\r\n          reserveSpace={false}\r\n          disabled={data.Code !== \"\"}\r\n          search={true}\r\n          noResultsMessage={t(\"noResultsMessage\")}\r\n        />\r\n      </div>\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_ProductType`)}\r\n            value={modData.ProductType}\r\n            options={listOptions.productType}\r\n            onChange={(data) => {\r\n              onFieldChange(\"ProductType\", data);\r\n            }}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.ProductType)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {children}\r\n\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.LicenseNo === null ? \"\" : modData.LicenseNo}\r\n          label={t(`Vehicle_LicenseNo`)}\r\n          indicator={\r\n            modData.VehicleType !== Constants.VehicleType.NonFillingVehicle\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          onChange={(data) => onFieldChange(\"LicenseNo\", data)}\r\n          error={t(validationErrors.LicenseNo)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            modData.LicenseNoExpiryDate === null\r\n              ? \"\"\r\n              : convertStringToCommonDateFormat(modData.LicenseNoExpiryDate)\r\n          }\r\n          displayFormat={getCurrentDateFormat()}\r\n          label={t(`Vehicle_LicenseExpiry`)}\r\n          showYearSelector=\"true\"\r\n          indicator={\r\n            modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ||\r\n            (modData.VehicleType === Constants.VehicleType.NonFillingVehicle &&\r\n              modData.LicenseNo !== null &&\r\n              modData.LicenseNo.trim() !== \"\")\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          disablePast={true}\r\n          onChange={(data) => onFieldChange(\"LicenseNoExpiryDate\", data)}\r\n          onTextChange={(value, error) => {\r\n            onDateTextChange(\"LicenseNoExpiryDate\", value, error);\r\n          }}\r\n          error={t(validationErrors.LicenseNoExpiryDate)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.RoadTaxNo === null ? \"\" : modData.RoadTaxNo}\r\n          label={t(`Vehicle_RoadTaxNo`)}\r\n          indicator={\r\n            (modData.RoadTaxNo !== null && modData.RoadTaxNo.trim() !== \"\") ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoIssueDate)) ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoExpiryDate))\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          onChange={(data) => onFieldChange(\"RoadTaxNo\", data)}\r\n          error={t(validationErrors.RoadTaxNo)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            modData.RoadTaxNoIssueDate === null\r\n              ? \"\"\r\n              : convertStringToCommonDateFormat(modData.RoadTaxNoIssueDate)\r\n          }\r\n          displayFormat={getCurrentDateFormat()}\r\n          label={t(`Vehicle_RoadTaxIssue`)}\r\n          showYearSelector=\"true\"\r\n          indicator={\r\n            (modData.RoadTaxNo !== null && modData.RoadTaxNo.trim() !== \"\") ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoIssueDate)) ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoExpiryDate))\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          onChange={(data) => onFieldChange(\"RoadTaxNoIssueDate\", data)}\r\n          onTextChange={(value, error) => {\r\n            onDateTextChange(\"RoadTaxNoIssueDate\", value, error);\r\n          }}\r\n          error={t(validationErrors.RoadTaxNoIssueDate)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            modData.RoadTaxNoExpiryDate === null\r\n              ? \"\"\r\n              : convertStringToCommonDateFormat(modData.RoadTaxNoExpiryDate)\r\n          }\r\n          displayFormat={getCurrentDateFormat()}\r\n          label={t(`Vehicle_RoadTaxExpiry`)}\r\n          showYearSelector=\"true\"\r\n          indicator={\r\n            (modData.RoadTaxNo !== null && modData.RoadTaxNo.trim() !== \"\") ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoIssueDate)) ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoExpiryDate))\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          disablePast={true}\r\n          onChange={(data) => onFieldChange(\"RoadTaxNoExpiryDate\", data)}\r\n          onTextChange={(value, error) => {\r\n            onDateTextChange(\"RoadTaxNoExpiryDate\", value, error);\r\n          }}\r\n          error={t(validationErrors.RoadTaxNoExpiryDate)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Owner === null ? \"\" : modData.Owner}\r\n          label={t(`Vehicle_owner`)}\r\n          onChange={(data) => onFieldChange(\"Owner\", data)}\r\n          error={t(validationErrors.Owner)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.TareWeight === null\r\n                ? \"\"\r\n                : modData.TareWeight.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_Tareweight`)}\r\n            indicator={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? null\r\n                : \"required\"\r\n            }\r\n            onChange={(data) => onFieldChange(\"TareWeight\", data)}\r\n            error={t(validationErrors.TareWeight, {\r\n              label: t(\"Vehicle_Tareweight\"),\r\n            })}\r\n            disabled={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? true\r\n                : false\r\n            }\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.MaxLoadableWeight === null\r\n                ? \"\"\r\n                : modData.MaxLoadableWeight.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_MaxLoadWeight`)}\r\n            indicator={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? null\r\n                : \"required\"\r\n            }\r\n            onChange={(data) => onFieldChange(\"MaxLoadableWeight\", data)}\r\n            error={t(validationErrors.MaxLoadableWeight, {\r\n              label: t(\"Vehicle_MaxLoadWeight\"),\r\n            })}\r\n            disabled={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? true\r\n                : false\r\n            }\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_UOMWeight`)}\r\n            value={modData.WeightUOM}\r\n            options={listOptions.unitOfWeight}\r\n            onChange={(data) => {\r\n              onFieldChange(\"WeightUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            indicator={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? null\r\n                : \"required\"\r\n            }\r\n            error={t(validationErrors.WeightUOM)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n            disabled={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? true\r\n                : false\r\n            }\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.Height === null ? \"\" : modData.Height.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_height`)}\r\n            onChange={(data) => onFieldChange(\"Height\", data)}\r\n            error={t(validationErrors.Height, {\r\n              label: t(\"Vehicle_height\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modData.Width === null ? \"\" : modData.Width.toLocaleString()}\r\n            label={t(`Vehicle_Width`)}\r\n            onChange={(data) => onFieldChange(\"Width\", data)}\r\n            error={t(validationErrors.Width, {\r\n              label: t(\"Vehicle_Width\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.Length === null ? \"\" : modData.Length.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_Length`)}\r\n            onChange={(data) => onFieldChange(\"Length\", data)}\r\n            error={t(validationErrors.Length, {\r\n              label: t(\"Vehicle_Length\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_UOMDimemsion`)}\r\n            value={modData.LWHUOM}\r\n            options={getOptionsWithSelect(\r\n              listOptions.unitOfDimension,\r\n              t(\"Common_Select\")\r\n            )}\r\n            onChange={(data) => {\r\n              onFieldChange(\"LWHUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            error={t(validationErrors.LWHUOM)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.MaxLoadableVolume === null\r\n                ? \"\"\r\n                : modData.MaxLoadableVolume.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_MaxLoadVolume`)}\r\n            onChange={(data) => onFieldChange(\"MaxLoadableVolume\", data)}\r\n            error={t(validationErrors.MaxLoadableVolume)}\r\n            reserveSpace={false}\r\n            disabled={true}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_UOMVolume`)}\r\n            value={modData.VolumeUOM}\r\n            options={listOptions.unitOfVolume}\r\n            onChange={(data) => {\r\n              onFieldChange(\"VolumeUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            error={t(validationErrors.VolumeUOM)}\r\n            reserveSpace={false}\r\n            //search={true}\r\n            disabled={true}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {isBonded &&\r\n      modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <div\r\n            className=\"ui single-input fluid disabled\"\r\n            style={{ width: \"30%\", float: \"left\" }}\r\n          >\r\n            <div class=\"ui input-label\">\r\n              <span className=\"input-label-message\">\r\n                {t(\"VehicleInfo_Bonded\")}\r\n              </span>\r\n            </div>\r\n            <div className=\"input-wrap\">\r\n              <Checkbox\r\n                //className=\"LabelEnabled\"\r\n                //label={t(\"ViewShipment_IsForceClosed\")}\r\n                onChange={(data) => onFieldChange(\"IsBonded\", data)}\r\n                checked={modData.IsBonded}\r\n              />\r\n            </div>\r\n          </div>\r\n          {modData.IsBonded &&\r\n          modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n            <div style={{ width: \"70%\", float: \"right\" }}>\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modData.VehicleCustomsBondNo === null\r\n                    ? \"\"\r\n                    : modData.VehicleCustomsBondNo\r\n                }\r\n                onChange={(data) => onFieldChange(\"VehicleCustomsBondNo\", data)}\r\n                label={t(\"VehicleInfo_VehicleCustomsBondNo\")}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.VehicleCustomsBondNo)}\r\n                indicator={modData.IsBonded ? \"required\" : \"\"}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.IsBonded &&\r\n      modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <DatePicker\r\n            fluid\r\n            value={\r\n              modData.BondExpiryDate === null\r\n                ? \"\"\r\n                : convertStringToCommonDateFormat(modData.BondExpiryDate)\r\n            }\r\n            displayFormat={getCurrentDateFormat()}\r\n            label={t(`VehicleInfo_BondExpiryDate`)}\r\n            showYearSelector=\"true\"\r\n            indicator={modData.IsBonded ? \"required\" : \"\"}\r\n            disablePast={true}\r\n            onChange={(data) => onFieldChange(\"BondExpiryDate\", data)}\r\n            onTextChange={(value, error) => {\r\n              onDateTextChange(\"BondExpiryDate\", value, error);\r\n            }}\r\n            error={t(validationErrors.BondExpiryDate)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {hazardousEnabled &&\r\n      modData.VehicleType === Constants.VehicleType.RigidTruck ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div style={{ width: \"48%\" }}>\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"FP_HazardousCategory\")}\r\n                value={\r\n                  modData.HazardousCategory === null\r\n                    ? \"\"\r\n                    : modData.HazardousCategory\r\n                }\r\n                options={getOptionsWithSelect(\r\n                  listOptions.hazardousTankerCategoryOptions,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                onChange={(data) => onFieldChange(\"HazardousCategory\", data)}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.HazardousCategory)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"48%\" }}>\r\n              <DatePicker\r\n                fluid\r\n                value={\r\n                  modData.HazardousLicenseExpiry === null\r\n                    ? \"\"\r\n                    : convertStringToCommonDateFormat(\r\n                        modData.HazardousLicenseExpiry\r\n                      )\r\n                }\r\n                displayFormat={getCurrentDateFormat()}\r\n                label={t(\"DriverInfo_HazardousLicExpiry\")}\r\n                disablePast={true}\r\n                showYearSelector=\"true\"\r\n                onChange={(data) =>\r\n                  onFieldChange(\"HazardousLicenseExpiry\", data)\r\n                }\r\n                onTextChange={(value, error) => {\r\n                  onDateTextChange(\"HazardousLicenseExpiry\", value, error);\r\n                }}\r\n                error={t(validationErrors.HazardousLicenseExpiry)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Select\r\n          fluid\r\n          placeholder={t(\"Common_Select\")}\r\n          label={t(\"Vehicle_Status\")}\r\n          value={modData.Active}\r\n          options={[\r\n            { text: t(\"ViewShipment_Ok\"), value: true },\r\n            { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n          ]}\r\n          onChange={(data) => onActiveStatusChange(data)}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Remarks === null ? \"\" : modData.Remarks}\r\n          label={t(\"Vehicle_Remarks\")}\r\n          onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n          indicator={\r\n            modData.Active !== data.Active ||\r\n            (data.Code !== \"\" &&\r\n              isBonded &&\r\n              modData.IsBonded &&\r\n              modData.IsBonded !== data.IsBonded)\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          error={t(validationErrors.Remarks)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      {isEnterpriseNode ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <AssociatedTerminals\r\n            terminalList={listOptions.terminalCodes}\r\n            selectedTerminal={modData.TerminalCodes}\r\n            error={t(validationErrors.TerminalCodes)}\r\n            onFieldChange={onFieldChange}\r\n            onCheckChange={onAllTerminalsChange}\r\n          ></AssociatedTerminals>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div></div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType === Constants.VehicleType.NonFillingVehicle ? (\r\n        modAttributeMetaDataList.length > 0 ? (\r\n          modAttributeMetaDataList.map((attribute) => (\r\n            <ErrorBoundary>\r\n              <div className=\"col-12 col-md-12 col-lg-12\">\r\n                <Accordion>\r\n                  <Accordion.Content\r\n                    className=\"attributeAccordian\"\r\n                    title={\r\n                      isEnterpriseNode\r\n                        ? attribute.TerminalCode +\r\n                          \" - \" +\r\n                          t(\"Attributes_Header\")\r\n                        : t(\"Attributes_Header\")\r\n                    }\r\n                  >\r\n                    <AttributeDetails\r\n                      selectedAttributeList={attribute.attributeMetaDataList}\r\n                      handleCellDataEdit={onAttributeDataChange}\r\n                      attributeValidationErrors={handleValidationErrorFilter(\r\n                        attributeValidationErrors,\r\n                        attribute.TerminalCode\r\n                      )}\r\n                    ></AttributeDetails>\r\n                  </Accordion.Content>\r\n                </Accordion>\r\n              </div>\r\n            </ErrorBoundary>\r\n          ))\r\n        ) : null\r\n      ) : modAttributeMetaDataList.length > 0 ? (\r\n        <div className=\"col-12 col-md-12 col-lg-12\">\r\n          <Accordion>\r\n            <Accordion.Content\r\n              className=\"attributeAccordian\"\r\n              title={t(\"VEHICLE_Attributes\")}\r\n            >\r\n              {modAttributeMetaDataList.length > 0\r\n                ? modAttributeMetaDataList.map((attribute) => (\r\n                    <ErrorBoundary>\r\n                      <div className=\"col-12 col-md-12 col-lg-12\">\r\n                        <Accordion>\r\n                          <Accordion.Content\r\n                            className=\"attributeAccordian\"\r\n                            title={\r\n                              isEnterpriseNode\r\n                                ? attribute.TerminalCode +\r\n                                  \" - \" +\r\n                                  t(\"Attributes_Header\")\r\n                                : t(\"Attributes_Header\")\r\n                            }\r\n                          >\r\n                            <AttributeDetails\r\n                              selectedAttributeList={\r\n                                attribute.attributeMetaDataList\r\n                              }\r\n                              handleCellDataEdit={onAttributeDataChange}\r\n                              attributeValidationErrors={handleValidationErrorFilter(\r\n                                attributeValidationErrors,\r\n                                attribute.TerminalCode\r\n                              )}\r\n                            ></AttributeDetails>\r\n                          </Accordion.Content>\r\n                        </Accordion>\r\n                      </div>\r\n                    </ErrorBoundary>\r\n                  ))\r\n                : null}\r\n            </Accordion.Content>\r\n          </Accordion>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n    //   )}\r\n    // </TranslationConsumer>\r\n  );\r\n}\r\n"],"names":["rigidTruckColumns","trailerColumns","vehicleTrailers","RigidTruckWithTrailerDetailsComposite","Component","constructor","arguments","state","isReadyToRender","vehicle","modVehicle","validationErrors","Utilities","vehicleValidationDef","carrierOptions","terminalOptions","volumeUOMOptions","weightUOMOptions","lengthUOMOptions","productTypeOptions","step1Active","undefined","this","props","selectedRow","Common_Code","step2Active","step3Active","rigidTruckSelection","trailerSelection","attributeMetaDataList","modVehicleAttributeMetaDataList","vehicleAttributeValidationErrors","modVehicleTrailerAttributeMetaDataList","vehicleTrailerAttributeValidationErrors","isBonded","isRigidLoaded","isTrailerLoaded","maxNumberOfCompartments","showAuthenticationLayout","tempVehicle","handleReset","setState","lodash","userDetails","EntityResult","IsEnterpriseNode","terminalSelectionChange","TerminalCodes","handleResetAttributeValidationError","localNodeAttribute","Code","VehicleTrailers","Object","keys","forEach","key","error","console","log","handleCarrierChange","carrier","getTerminalsForCarrier","CarrierCompanyCode","handleActiveStatusChange","value","Active","Remarks","handleChange","propertyName","data","IsBonded","VehicleCustomsBondNo","BondExpiryDate","RoadTaxNo","RoadTaxNoExpiryDate","RoadTaxNoIssueDate","LWHUOM","handleAllTerminalsChange","checked","saveVehicle","saveEnabled","createVehicle","updateVehicle","handleSave","values","every","fillDetails","attributesList","vehicleAttributeList","vehicleTrailerAttributeList","push","vehilceAttributeList","validateSave","convertStringtoDecimal","DateFieldsInEntities","Vehicle","VehiclePrimeMovers","vp","Primemover","PrimeMover","IsWebPortalUser","handleNextClick","entity","columns","handleSelectClick","handleRigidTruckList","handleTrailerList","handleDateTextChange","handleVehicleAttributeDataChange","attribute","matchedAttributes","matchedAttributesList","filter","modattribute","TerminalCode","length","Array","isArray","DefaultValue","attributeValidation","attributeValidationErrors","handleVehicleTrailerAttributeDataChange","handleValidationErrorFilter","terminal","find","selectedAttribute","handleAuthenticationClose","componentDidMount","IsArchived","isNewVehicle","getAttributes","getCarrierList","selectedShareholder","getUOMList","getProductTypes","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","bonded","toUpperCase","ErrorList","isNaN","parseInt","catch","weightUOMs","MASS","weightOption","text","volumeUOMs","VOLUME","volumeOption","lengthUOMs","LENGTH","lengthOption","shareholder","Constants","ROAD","componentWillReceiveProps","nextProps","getVehicle","displayValues","cellData","columnDetail","field","_jsx","Icon","name","size","color","terminalPopOver","DataType","Date","toLocaleDateString","toLocaleTimeString","terminalCodes","split","Popup","className","on","element","children","Card","Content","isNewTruck","vehicleAttributeEntity","vehicleTrailerAttributeEntity","vehicletrailer","emptyVehicle","VehicleType","RigidTruckWithTrailer","FunctionsList","functionGroups","add","fnVehicle","keyCode","KeyCodes","obj","ShareHolderCode","keyDataCode","MaxLoadableWeight","TareWeight","modify","ShareholderCode","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","Attributes","baseproductAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","setVehicleTrailerAttributes","includes","parse","notification","messageType","message","messageResultDetails","Height","Width","Length","compartmentCount","keyFields","keyValues","isSuccess","errorMessage","CompCount","map","item","returnValue","onSaved","fillAttributeDetails","err","Entity","toLocaleString","TransportationType","licDate","LicenseNoIssueDate","getUTCDate","trailerSeq","rigidTruck","vehicleTrailerInfo","TrailerCode","VehicleCode","TrailerSeq","Trailer","Name","Common_Name","TrailerType","RIGID_TRAILER","trailer","NON_RIGID_TRAILER","attributeData1","attributeData2","render","listOptions","carriers","productType","unitOfWeight","unitOfVolume","unitOfDimension","popUpContents","fieldName","fieldValue","LastUpdateTime","LastActiveTime","CreatedTime","TranslationConsumer","t","_jsxs","_Fragment","Accordion","title","active","onClick","VehicleComposite","rigidTruckWithTrailer","getRigidTruckList","rigidTruckShareholder","DataTable","selection","selectionMode","showHeader","Column","initialWidth","header","renderer","style","height","Loader","top","TrailerComposite","vehicleWithTrailer","getTrailerList","vehicleShareholder","ErrorBoundary","TMDetailsHeader","entityCode","newEntityName","VehicleBasicFields","modData","onFieldChange","onDateTextChange","onAllTerminalsChange","onCarrierChange","onActiveStatusChange","isEnterpriseNode","modAttributeMetaDataList","onAttributeDataChange","AttributeDetails","selectedAttributeList","handleCellDataEdit","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","Button","content","LoadingPage","connect","getUserDetails","TokenAuth","TrailerSummaryPageComposite","_ref","tableData","columnDetails","pageSize","exportRequired","exportFileName","columnPickerRequired","columnGroupingRequired","selectionRequired","terminalsToShow","selectedItems","onSelectionChange","onRowClick","parentComponent","WijmoGridComposite","rowsPerPage","onSelectionHandle","React","isDetails","isDetailsModified","operationsVisibilty","delete","trailerKPIList","componentName","handleAdd","handleShareholderSelectionChange","getKPIList","handleDelete","deleteTrailerKeys","i","shCode","trailerCode","carrierCode","keyData","Key","Value","isRefreshDataRequire","ResultDataList","res","messageResult","toast","NotifyEvent","notificationMessage","autoClose","handleRowClick","fnTrailer","remove","handleSelection","items","savedEvent","saveType","TrailerList_Carrier","Common_Status","Common_Shareholder","componentWillUnmount","window","removeEventListener","authenticateDelete","view","fnKPIInformation","objKPIRequestData","PageName","kpiTrailerList","InputParameters","ListKPIDetails","transportationType","trailers","row","Table","addEventListener","PrimaryShareholder","fillPage","loadingClass","TMUserActionsComposite","breadcrumbItem","activeItem","shareholders","ShareholderList","onShareholderChange","onDelete","onAdd","handleBreadCrumbClick","root","TrailerDetailsComposite","KPIDashboardLayout","kpiList","pageName","PageAttibutes","WebPortalListPageSize","NoOfTerminalsToShow","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","position","toastClassName","VehicleBasicInputs","hazardousEnabled","useTranslation","Input","fluid","label","indicator","disabled","onChange","reserveSpace","Description","Select","placeholder","options","search","noResultsMessage","NonFillingVehicle","ProductType","LicenseNo","DatePicker","LicenseNoExpiryDate","convertStringToCommonDateFormat","displayFormat","getCurrentDateFormat","showYearSelector","trim","disablePast","onTextChange","Owner","RigidTruck","WeightUOM","getOptionsWithSelect","MaxLoadableVolume","VolumeUOM","width","float","class","Checkbox","display","justifyContent","HazardousCategory","hazardousTankerCategoryOptions","HazardousLicenseExpiry","AssociatedTerminals","terminalList","selectedTerminal","onCheckChange","defaultProps"],"sourceRoot":""}