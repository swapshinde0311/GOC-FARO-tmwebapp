{"version":3,"file":"static/js/2554.9659235f.chunk.js","mappings":"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","sources":["Components/UIBase/Details/IslandDetails.jsx","Components/Composite/Details/IslandDetailsComposite.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Select, Accordion, Checkbox, Input } from '@scuf/common';\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { DataTable } from '@scuf/datatable';\r\nimport PropTypes from \"prop-types\";\r\n\r\nIslandDetails.propTypes = {\r\n    island: PropTypes.object.isRequired,\r\n    modIsland: PropTypes.object.isRequired,\r\n};\r\nexport default function IslandDetails({\r\n    location,\r\n    modLocation,\r\n    modAvailableDevices,\r\n    modAssociatedDevices,\r\n    selectedLocationType,\r\n    validationErrors,\r\n    checkBoxChanged,\r\n    onFieldChange,\r\n    handleCellDataEdit,\r\n    onActiveStatusChange,\r\n}) {\r\n\r\n    const [t] = useTranslation();\r\n    const handleCustomEditTextBox = (cellData) => {\r\n        return (\r\n            <Input\r\n                fluid\r\n                value={modAssociatedDevices[cellData.rowIndex][cellData.field]}\r\n                onChange={(value) => handleCellDataEdit(value, cellData)}\r\n                reserveSpace={false}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"detailsContainer\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={modLocation.LocationCode}\r\n                        label={t(selectedLocationType + \"Code\")}\r\n                        indicator=\"required\"\r\n                        disabled={location.LocationCode !== \"\"}\r\n                        onChange={(data) => onFieldChange(\"LocationCode\", data)}\r\n                        error={t(validationErrors.LocationCode)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={modLocation.LocationName}\r\n                        label={t(selectedLocationType + \"Name\")}\r\n                        indicator=\"required\"\r\n                        onChange={(data) => onFieldChange(\"LocationName\", data)}\r\n                        error={t(validationErrors.LocationName)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={selectedLocationType}\r\n                        disabled=\"true\"\r\n                        label={t(\"LocationType\")}\r\n                        onChange={(data) => onFieldChange(\"LocationType\", data)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={\r\n                            modLocation.Description === null\r\n                                ? \"\"\r\n                                : modLocation.Description\r\n                        }\r\n                        label={t(\"FinishedProductList_Description\")}\r\n                        onChange={(data) => onFieldChange(\"Description\", data)}\r\n                        error={t(validationErrors.Description)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                        fluid\r\n                        placeholder={t(\"FinishedProductInfo_Select\")}\r\n                        label={t(\"Cust_Status\")}\r\n                        value={modLocation.Active}\r\n                        options={[\r\n                            { text: t(\"ViewShipment_Ok\"), value: true },\r\n                            { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                        ]}\r\n                        onChange={(data) => onActiveStatusChange(data)}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                        fluid\r\n                        value={\r\n                            modLocation.Remarks === null ? \"\" : modLocation.Remarks\r\n                        }\r\n                        label={t(\"Cust_Remarks\")}\r\n                        onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                        indicator={\r\n                            modLocation.Active !== location.Active ? \"required\" : \"\"\r\n                        }\r\n                        error={t(validationErrors.Remarks)}\r\n                        reserveSpace={false}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3 pr-1 pb-0\">\r\n                    <h5>{t(\"Loc_AvailableDevices\")}</h5>\r\n                    <Accordion>\r\n                        {\r\n                            modAvailableDevices.map((AvailableDeviceList) =>\r\n                                <Accordion.Content title={AvailableDeviceList.DeviceType} arrowPosition=\"left\">\r\n                                    {AvailableDeviceList.DeviceList.map((deviceList) =>\r\n                                        <div>\r\n                                            <Checkbox label={deviceList.DeviceCode} checked={deviceList.IsAssociated} onChange={(checked) => checkBoxChanged(deviceList.DeviceCode, AvailableDeviceList.DeviceType, checked)} />\r\n                                        </div>\r\n\r\n                                    )}\r\n                                </Accordion.Content>\r\n                            )\r\n                        }\r\n                    </Accordion>\r\n                </div>\r\n                <div className=\"col-9 pb-0\">\r\n                    <h5>{t(\"Loc_AssociatedDevices\")}</h5>\r\n                    <DataTable\r\n                        data={modAssociatedDevices}\r\n                    >\r\n                        <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            key=\"DeviceCode\"\r\n                            field=\"DeviceCode\"\r\n                            header={t(\"Loc_DeviceCode\")}\r\n                            editable={true}\r\n                            sortable={true}\r\n                            editFieldType=\"text\"\r\n                            customEditRenderer={handleCustomEditTextBox}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            key=\"DeviceType\"\r\n                            field=\"DeviceType\"\r\n                            header={t(\"Loc_DeviceType\")}\r\n                            editable={true}\r\n                            sortable={true}\r\n                            editFieldType=\"text\"\r\n                            customEditRenderer={handleCustomEditTextBox}\r\n                        ></DataTable.Column>\r\n                        <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            key=\"DeviceModel\"\r\n                            field=\"DeviceModel\"\r\n                            header={t(\"Loc_DeviceModel\")}\r\n                            editable={true}\r\n                            sortable={true}\r\n                            editFieldType=\"text\"\r\n                            customEditRenderer={handleCustomEditTextBox}\r\n                        ></DataTable.Column>\r\n\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { emptyLocation } from \"../../../JS/DefaultEntities\";\r\nimport { SiteDetailsUserActions } from \"../../UIBase/Common/SiteDetailsUserActions\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport lodash from \"lodash\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\n\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport IslandDetails from \"../../UIBase/Details/IslandDetails\";\r\nimport { islandValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { locationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { functionGroups, fnSiteView } from \"../../../JS/FunctionGroups\";\r\nimport { getKeyByValue } from \"../../../JS/Utilities\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass IslandDetailsComposite extends Component {\r\n  state = {\r\n    island: {},\r\n    modIsland: {},\r\n    location: {},\r\n    modLocation: {},\r\n    saveEnabled: false,\r\n    isDeleteEnabled: false,\r\n    selectedLocationType: \"\",\r\n    isReadyToRender: false,\r\n    modAvailableDevices: [],\r\n    modAssociatedDevices: [],\r\n    checkedDevices: [],\r\n    validationErrors: Utilities.getInitialValidationErrors(islandValidationDef),\r\n    showDeleteAuthenticationLayout: false,\r\n    showSaveAuthenticationLayout: false,\r\n    tempIsland: {},\r\n    tempLocation: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getDeviceList(this.props);\r\n      // this.getIsland(this.props);\r\n    } catch (error) {\r\n      console.log(\r\n        \"IslandDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        nextProps.Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getDeviceList(nextProps);\r\n        // this.getIsland(nextProps);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"IslandDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getDeviceList(props) {\r\n    let locationType = props.locationtype;\r\n    let terminalCode = this.props.selectedTerminal;\r\n    try {\r\n      axios(\r\n        RestAPIs.GetDeviceList +\r\n          \"?locationType=\" +\r\n          locationType +\r\n          \"&locationInfo=\" +\r\n          \"&terminalCode=\" +\r\n          terminalCode,\r\n\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            Array.isArray(result.EntityResult) &&\r\n            result.EntityResult.length > 0\r\n          )\r\n            this.setState({ modAvailableDevices: result.EntityResult }, () => {\r\n              this.getIsland(props);\r\n            });\r\n          else this.getIsland(props);\r\n        } else {\r\n          this.getIsland(props);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(\"IslandDetailsComposite:Error occured on getDeviceList\", err);\r\n    }\r\n  }\r\n\r\n  handleCheckboxChanged = (deviceCode, deviceType, checked) => {\r\n    try {\r\n      let modAvailableDevices = lodash.cloneDeep(\r\n        this.state.modAvailableDevices\r\n      );\r\n      var devTypeIndx = modAvailableDevices.findIndex(\r\n        (dev) => dev.DeviceType === deviceType\r\n      );\r\n      if (devTypeIndx !== undefined) {\r\n        var devCodeIndx = modAvailableDevices[devTypeIndx].DeviceList.findIndex(\r\n          (dvCode) => dvCode.DeviceCode === deviceCode\r\n        );\r\n      }\r\n      if (devCodeIndx !== undefined) {\r\n        modAvailableDevices[devTypeIndx].DeviceList[devCodeIndx].IsAssociated =\r\n          checked;\r\n      }\r\n      this.setState({\r\n        modAvailableDevices,\r\n      });\r\n\r\n      let dv = {\r\n        DeviceType: deviceType,\r\n        DeviceCode: deviceCode,\r\n        DeviceModel: null,\r\n      };\r\n\r\n      let checkedDevices = lodash.cloneDeep(this.state.checkedDevices);\r\n\r\n      if (\r\n        checked === true &&\r\n        checkedDevices.filter((dv1) => dv1.DeviceCode === deviceCode).length ===\r\n          0\r\n      ) {\r\n        checkedDevices.push(dv);\r\n        this.setState({\r\n          checkedDevices,\r\n        });\r\n      } else if (\r\n        checked === false &&\r\n        this.state.checkedDevices.filter((dv1) => dv1.DeviceCode === deviceCode)\r\n          .length > 0\r\n      ) {\r\n        checkedDevices = checkedDevices.filter(\r\n          (dv1) => dv1.DeviceCode !== deviceCode\r\n        );\r\n        this.setState({\r\n          checkedDevices,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"IslandDetailsComposite:Error occured on handleCheckboxChanged\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getIsland(propsResult) {\r\n    try {\r\n      let locationCode = propsResult.selectedlocation;\r\n      let terminalCode = propsResult.selectedTerminal;\r\n      this.setState({\r\n        selectedLocationType: Constants.siteViewLocationType.ISLAND,\r\n      });\r\n      emptyLocation.LocationType = Constants.siteViewLocationType.ISLAND;\r\n      emptyLocation.AvailableDevices = this.state.modAvailableDevices;\r\n      if (propsResult.isClone === true) {\r\n        this.setState({\r\n          selectedLocationType: Constants.siteViewLocationType.ISLAND,\r\n          location: lodash.cloneDeep(emptyLocation),\r\n          modLocation: lodash.cloneDeep(emptyLocation),\r\n          isReadyToRender: true,\r\n          modAssociatedDevices: [],\r\n          modAvailableDevices: lodash.cloneDeep(this.state.modAvailableDevices),\r\n          checkedDevices: [],\r\n          isDeleteEnabled: false,\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnSiteView\r\n          ),\r\n        });\r\n        return;\r\n      }\r\n      if (locationCode === undefined || locationCode === \"\") {\r\n        this.setState({\r\n          location: lodash.cloneDeep(emptyLocation),\r\n          modLocation: lodash.cloneDeep(emptyLocation),\r\n          selectedLocationType: emptyLocation.LocationType,\r\n          modAssociatedDevices: [],\r\n          modAvailableDevices: lodash.cloneDeep(emptyLocation.AvailableDevices),\r\n          checkedDevices: [],\r\n          isDeleteEnabled: false,\r\n          isReadyToRender: true,\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnSiteView\r\n          ),\r\n        });\r\n        return;\r\n      }\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.locationCode,\r\n          value: locationCode,\r\n        },\r\n        {\r\n          key: KeyCodes.terminalCode,\r\n          value: terminalCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.locationCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetLocationDetails,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let modAssociatedDevices = lodash.cloneDeep(\r\n            result.EntityResult.AssociatedDevices\r\n          );\r\n\r\n          if (Array.isArray(modAssociatedDevices))\r\n            modAssociatedDevices.forEach((item) => {\r\n              item.DeviceType = getKeyByValue(\r\n                Constants.deviceTypeCode,\r\n                item.DeviceType\r\n              );\r\n            });\r\n\r\n          this.setState({\r\n            selectedLocationType: lodash.cloneDeep(\r\n              result.EntityResult.LocationType\r\n            ),\r\n            isReadyToRender: true,\r\n            location: result.EntityResult,\r\n            modLocation: lodash.cloneDeep(result.EntityResult),\r\n            modAssociatedDevices,\r\n            modAvailableDevices: lodash.cloneDeep(\r\n              result.EntityResult.AvailableDevices\r\n            ),\r\n            isDeleteEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.remove,\r\n              fnSiteView\r\n            ),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnSiteView\r\n            ),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            selectedLocationType: emptyLocation.LocationType,\r\n            location: lodash.cloneDeep(emptyLocation),\r\n            modLocation: lodash.cloneDeep(emptyLocation),\r\n            isReadyToRender: true,\r\n            modAssociatedDevices: [],\r\n            modAvailableDevices: [],\r\n            checkedDevices: [],\r\n            isDeleteEnabled: false,\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"IslandDetailsComposite:Error occured on getIsland\", error);\r\n    }\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      let modLocation = lodash.cloneDeep(this.state.modLocation);\r\n      modLocation[propertyName] = data;\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      if (modLocation.Active === this.state.location.Active) {\r\n        if (\r\n          this.state.location.Remarks === modLocation.Remarks ||\r\n          modLocation.Remarks === \"\"\r\n        ) {\r\n          validationErrors.Remarks = \"\";\r\n        }\r\n        if (modLocation.Remarks === \"\")\r\n          modLocation.Remarks = this.state.location.Remarks;\r\n      }\r\n      if (propertyName === \"Active\") {\r\n        if (modLocation.Active !== this.state.location.Active) {\r\n          modLocation.Remarks = \"\";\r\n        }\r\n      }\r\n      if (locationValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          locationValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n      this.setState({ validationErrors, modLocation });\r\n    } catch (error) {\r\n      console.log(\r\n        \"IslandDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCellDataEdit = (newVal, cellData) => {\r\n    try {\r\n      let modAssociatedDevices = lodash.cloneDeep(\r\n        this.state.modAssociatedDevices\r\n      );\r\n      modAssociatedDevices[cellData.rowIndex][cellData.field] = newVal;\r\n      this.setState({ modAssociatedDevices });\r\n    } catch (error) {\r\n      console.log(\r\n        \"IslandDetailsComposite:Error occured on handleCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modLocation = lodash.cloneDeep(this.state.modLocation);\r\n      modLocation.Active = value;\r\n      if (modLocation.Active !== this.state.location.Active)\r\n        modLocation.Remarks = \"\";\r\n      this.setState({ modLocation });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LocationDetailsComposite:Error occured on handleActiveStatusChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n  saveIsland = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempIsland = lodash.cloneDeep(this.state.tempIsland);\r\n      let tempLocation = lodash.cloneDeep(this.state.tempLocation);\r\n      this.state.location.LocationCode === \"\"\r\n          ? this.createIsland(tempIsland, tempLocation)\r\n          : this.updateIsland(tempIsland, tempLocation);\r\n    } catch (error) {\r\n      console.log(\"IslandComposite : Error in saveIsland\");\r\n    }\r\n  };\r\n\r\n\r\n  handleSave = () => {\r\n    try {\r\n   //   this.setState({ saveEnabled: false });\r\n      let modLocation = this.fillLocationDetails();\r\n      let modIsland = this.fillDetails();\r\n\r\n      if (this.validateSave(modLocation)) {\r\n        \r\n        let showSaveAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempIsland = lodash.cloneDeep(modIsland);\r\n      let tempLocation = lodash.cloneDeep(modLocation);\r\n      this.setState({ showSaveAuthenticationLayout, tempIsland, tempLocation}, () => {\r\n        if (showSaveAuthenticationLayout === false) {\r\n          this.saveIsland();\r\n        }\r\n    });\r\n\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"IslandDetailsComposite:Error occured on handleSave\", error);\r\n    }\r\n  };\r\n\r\n  fillLocationDetails() {\r\n    try {\r\n      let modLocation = lodash.cloneDeep(this.state.modLocation);\r\n      let checkedDevices = lodash.cloneDeep(this.state.checkedDevices);\r\n      checkedDevices.forEach((item) => {\r\n        item.TerminalCode = this.props.selectedTerminal;\r\n      });\r\n      modLocation.LocationType = this.state.selectedLocationType;\r\n      modLocation.TerminalCode = this.props.selectedTerminal;\r\n      modLocation.AssociatedDevices = checkedDevices;\r\n      return modLocation;\r\n    } catch (err) {\r\n      console.log(\r\n        \"IslandDetailsComposite:Error occured on fillLocationDetails\",\r\n        err\r\n      );\r\n    }\r\n  }\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modLocation = lodash.cloneDeep(this.state.modLocation);\r\n      let modIsland = lodash.cloneDeep(this.state.modIsland);\r\n      modIsland.Code = modLocation.LocationCode;\r\n      modIsland.Name = modLocation.LocationName;\r\n      modIsland.EntityTypeCode = this.state.selectedLocationType;\r\n      modIsland.ParentCode = this.props.parentCode;\r\n      modIsland.TerminalCode = this.props.selectedTerminal;\r\n      modIsland.Active = modLocation.Active;\r\n      modIsland.Description = modLocation.Description;\r\n      modIsland.Remarks = modLocation.Remarks;\r\n      return modIsland;\r\n    } catch (err) {\r\n      console.log(\"IslandDetailsComposite:Error occured on filldetails\", err);\r\n    }\r\n  }\r\n\r\n  validateSave(modLocation) {\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(locationValidationDef).forEach(function (key) {\r\n      if (modLocation[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          locationValidationDef[key],\r\n          modLocation[key]\r\n        );\r\n    });\r\n    if (modLocation.Active !== this.state.location.Active) {\r\n      if (modLocation.Remarks === null || modLocation.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"OriginTerminal_RemarksRequired\";\r\n      }\r\n    }\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: [this.state.selectedLocationType + \"SavedSuccess\"],\r\n      messageResultDetails: [],\r\n    };\r\n    this.setState({ validationErrors });\r\n    var returnValue = Object.values(validationErrors).every(function (value) {\r\n      return value === \"\";\r\n    });\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modLocation, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  handleDelete = () => {\r\n    try {\r\n      var IslandCode = this.state.modLocation.LocationCode;\r\n      var keyData = {\r\n        keyDataCode: 0,\r\n        ShareHolderCode: \"\",\r\n        KeyCodes: [\r\n          {\r\n            Key: KeyCodes.locationCode,\r\n            Value: IslandCode,\r\n          },\r\n          {\r\n            Key: KeyCodes.terminalCode,\r\n            Value: this.props.selectedTerminal,\r\n          },\r\n        ],\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: [this.state.selectedLocationType + \"DeletionStatus\"],\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [Constants.siteViewLocationType.ISLAND + \"Code\"],\r\n            keyValues: [IslandCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.DeleteIsland,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          keyData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n\r\n        if (result.IsSuccess === true) {\r\n          this.deleteLocation();\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            isDeleteEnabled: true,\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.remove,\r\n              fnSiteView\r\n            ),\r\n            showDeleteAuthenticationLayout: false,\r\n          });\r\n\r\n          this.props.onDelete(this.state.modLocation, \"delete\", notification);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"IslandDetailsComposite:Error occured on handleDelete\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  deleteLocation() {\r\n    try {\r\n      var deleteLocationKeys = [];\r\n      var LocationCode = this.state.modLocation.LocationCode;\r\n      var keyData = {\r\n        keyDataCode: 0,\r\n        ShareHolderCode: \"\",\r\n        KeyCodes: [\r\n          {\r\n            Key: KeyCodes.locationCode,\r\n            Value: LocationCode,\r\n          },\r\n          {\r\n            Key: KeyCodes.terminalCode,\r\n            Value: this.props.selectedTerminal,\r\n          },\r\n        ],\r\n      };\r\n      deleteLocationKeys.push(keyData);\r\n      axios(\r\n        RestAPIs.DeleteLocation,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteLocationKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        var isRefreshDataRequire = result.IsSuccess;\r\n        if (\r\n          result.ResultDataList !== null &&\r\n          result.ResultDataList !== undefined\r\n        ) {\r\n          var failedResultsCount = result.ResultDataList.filter(function (res) {\r\n            return !res.IsSuccess;\r\n          }).length;\r\n          if (failedResultsCount === result.ResultDataList.length) {\r\n            isRefreshDataRequire = false;\r\n          } else isRefreshDataRequire = true;\r\n        }\r\n        var notification = Utilities.convertResultsDatatoNotification(\r\n          result,\r\n          [this.state.selectedLocationType + \"DeletionStatus\"],\r\n          [\"LocationCode\"]\r\n        );\r\n        if (isRefreshDataRequire) {\r\n          this.getIsland({\r\n            selectedlocation: this.state.modLocation.LocationCode,\r\n            selectedTerminal: this.props.selectedTerminal,\r\n            isClone: true,\r\n          });\r\n          this.setState({\r\n            isDeleteEnabled: false,\r\n            showDeleteAuthenticationLayout: false,\r\n          });\r\n        } else {\r\n          this.setState({ isDeleteEnabled: true, showDeleteAuthenticationLayout: false, });\r\n        }\r\n        notification.messageResultDetails.forEach((messageResult) => {\r\n          if (messageResult.keyFields.length > 0)\r\n            messageResult.keyFields[0] = [\r\n              this.state.selectedLocationType + \"Code\",\r\n            ];\r\n        });\r\n\r\n        this.props.onDelete(this.state.modLocation, \"delete\", notification);\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"IslandDetailsComposite:Error occured on handleDelete\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  createIsland(modIsland, modLocation) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.entityCode,\r\n          value: modIsland.Code,\r\n        },\r\n      ];\r\n\r\n      let obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.locationCode,\r\n        KeyCodes: keyCode,\r\n        Entity: modIsland,\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: [this.state.selectedLocationType + \"SavedSuccess\"],\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [this.state.selectedLocationType + \"Code\"],\r\n            keyValues: [modIsland.Code],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.CreateEntity,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnSiteView\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n          this.createLocation(modLocation);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnSiteView\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n          this.props.onSaved(this.state.modGantry, \"add\", notification);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"IslandDetailsComposite:Error occured on createIsland\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  createLocation(modLocation) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.locationCode,\r\n          value: modLocation.LocationCode,\r\n        },\r\n      ];\r\n\r\n      let req = {\r\n        LocationInfo: modLocation,\r\n        BayInfo: null,\r\n        isBayRequest: false,\r\n      };\r\n\r\n      let obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.locationCode,\r\n        KeyCodes: keyCode,\r\n        Entity: req,\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: [this.state.selectedLocationType + \"SavedSuccess\"],\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [this.state.selectedLocationType + \"Code\"],\r\n            keyValues: [modLocation.LocationCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.CreateLocation,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnSiteView\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n          this.getIsland({\r\n            selectedlocation: this.state.modLocation.LocationCode,\r\n            selectedTerminal: this.props.selectedTerminal,\r\n            isClone: false,\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnSiteView\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n        }\r\n        this.props.onSaved(this.state.modLocation, \"add\", notification);\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"IslandDetailsComposite:Error occured on createLocation\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  updateIsland(modIsland, modLocation) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.entityCode,\r\n          value: modIsland.Code,\r\n        },\r\n      ];\r\n\r\n      let obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.locationCode,\r\n        KeyCodes: keyCode,\r\n        Entity: modIsland,\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: [this.state.selectedLocationType + \"SavedSuccess\"],\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [this.state.selectedLocationType + \"Code\"],\r\n            keyValues: [modIsland.Code],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.UpdateEntity,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnSiteView\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n          this.updateLocation(modLocation);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnSiteView\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n          this.props.onSaved(this.state.modGantry, \"add\", notification);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"IslandDetailsComposite:Error occured on updateIsland\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  updateLocation(modLocation) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.locationCode,\r\n          value: modLocation.LocationCode,\r\n        },\r\n      ];\r\n\r\n      let req = {\r\n        LocationInfo: modLocation,\r\n        BayInfo: null,\r\n        isBayRequest: false,\r\n      };\r\n\r\n      let obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.locationCode,\r\n        KeyCodes: keyCode,\r\n        Entity: req,\r\n      };\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: [this.state.selectedLocationType + \"SavedSuccess\"],\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [this.state.selectedLocationType + \"Code\"],\r\n            keyValues: [modLocation.LocationCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.UpdateLocation,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnSiteView\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n          this.getIsland({\r\n            selectedlocation: this.state.modLocation.LocationCode,\r\n            selectedTerminal: this.props.selectedTerminal,\r\n            isClone: false,\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnSiteView\r\n            ),\r\n            showSaveAuthenticationLayout: false,\r\n          });\r\n        }\r\n        this.props.onSaved(this.state.modLocation, \"update\", notification);\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"IslandDetailsComposite:Error occured on updateLocation\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showDeleteAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showDeleteAuthenticationLayout });\r\n      if (showDeleteAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"IslandComposite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showSaveAuthenticationLayout: false,\r\n      showDeleteAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  handleOperation()  {\r\n    return this.state.showDeleteAuthenticationLayout?this.handleDelete:this.saveIsland;\r\n };\r\n\r\n getFunctionName() {\r\n  return this.state.showDeleteAuthenticationLayout? functionGroups.remove: \r\n        this.state.island.Code === \"\"\r\n         ? functionGroups.add\r\n         : functionGroups.modify\r\n };\r\n \r\n  render() {\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"DriverInfo_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modLocation.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modLocation.LastUpdatedTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_LastActive\",\r\n        fieldValue:\r\n          this.state.modLocation.LastActive !== undefined &&\r\n          this.state.modLocation.LastActive !== null\r\n            ? new Date(this.state.modLocation.LastActive).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(this.state.modLocation.LastActive).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"DriverInfo_CreatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.modLocation.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modLocation.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.location.LocationCode}\r\n            newEntityName={\"New\" + this.state.selectedLocationType}\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <IslandDetails\r\n            location={this.state.location}\r\n            modLocation={this.state.modLocation}\r\n            modAvailableDevices={this.state.modAvailableDevices}\r\n            modAssociatedDevices={this.state.modAssociatedDevices}\r\n            selectedLocationType={this.state.selectedLocationType}\r\n            validationErrors={this.state.validationErrors}\r\n            onFieldChange={this.handleChange}\r\n            checkBoxChanged={this.handleCheckboxChanged}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n          ></IslandDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <SiteDetailsUserActions\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            handleSave={this.handleSave}\r\n            handleDelete={this.authenticateDelete}\r\n            saveEnabled={this.state.saveEnabled}\r\n            isDeleteEnabled={this.state.isDeleteEnabled}\r\n          ></SiteDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showDeleteAuthenticationLayout || this.state.showSaveAuthenticationLayout ?  (\r\n          <UserAuthenticationLayout\r\n          Username={this.props.userDetails.EntityResult.UserName}\r\n          functionName={this.getFunctionName()}\r\n          functionGroup={fnSiteView}\r\n          handleClose={this.handleAuthenticationClose}\r\n          handleOperation={this.handleOperation()}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(IslandDetailsComposite);\r\n"],"names":["IslandDetails","_ref","location","modLocation","modAvailableDevices","modAssociatedDevices","selectedLocationType","validationErrors","checkBoxChanged","onFieldChange","handleCellDataEdit","onActiveStatusChange","t","useTranslation","handleCustomEditTextBox","cellData","_jsx","Input","fluid","value","rowIndex","field","onChange","reserveSpace","_jsxs","className","children","LocationCode","label","indicator","disabled","data","error","LocationName","Description","Select","placeholder","Active","options","text","Remarks","Accordion","map","AvailableDeviceList","Content","title","DeviceType","arrowPosition","DeviceList","deviceList","Checkbox","DeviceCode","checked","IsAssociated","DataTable","Column","header","editable","sortable","editFieldType","customEditRenderer","IslandDetailsComposite","Component","constructor","arguments","state","island","modIsland","saveEnabled","isDeleteEnabled","isReadyToRender","checkedDevices","Utilities","islandValidationDef","showDeleteAuthenticationLayout","showSaveAuthenticationLayout","tempIsland","tempLocation","handleCheckboxChanged","deviceCode","deviceType","lodash","this","devTypeIndx","findIndex","dev","undefined","devCodeIndx","dvCode","setState","dv","DeviceModel","filter","dv1","length","push","console","log","handleChange","propertyName","locationValidationDef","newVal","handleActiveStatusChange","saveIsland","createIsland","updateIsland","handleSave","fillLocationDetails","fillDetails","validateSave","props","userDetails","EntityResult","IsWebPortalUser","handleDelete","IslandCode","keyData","keyDataCode","ShareHolderCode","KeyCodes","Key","Value","selectedTerminal","notification","messageType","message","messageResultDetails","keyFields","Constants","ISLAND","keyValues","isSuccess","errorMessage","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","deleteLocation","ErrorList","FunctionsList","functionGroups","remove","fnSiteView","onDelete","authenticateDelete","handleAuthenticationClose","componentDidMount","IsArchived","getDeviceList","componentWillReceiveProps","nextProps","Code","Object","keys","forEach","key","locationType","locationtype","terminalCode","Array","isArray","getIsland","err","propsResult","locationCode","selectedlocation","emptyLocation","LocationType","AvailableDevices","isClone","add","keyCode","obj","AssociatedDevices","item","getKeyByValue","modify","TerminalCode","Name","EntityTypeCode","ParentCode","parentCode","returnValue","values","every","onSaved","deleteLocationKeys","isRefreshDataRequire","ResultDataList","res","messageResult","Entity","createLocation","modGantry","req","LocationInfo","BayInfo","isBayRequest","updateLocation","handleOperation","getFunctionName","render","popUpContents","fieldName","fieldValue","Date","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","LastActive","CreatedTime","ErrorBoundary","TMDetailsHeader","entityCode","newEntityName","SiteDetailsUserActions","isEnterpriseNode","IsEnterpriseNode","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleClose","LoadingPage","connect","getUserDetails","TokenAuth"],"sourceRoot":""}