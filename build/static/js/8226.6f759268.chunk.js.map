{"version":3,"file":"static/js/8226.6f759268.chunk.js","mappings":"8LAqBO,SAASA,EAAuBC,GAenC,IAfoC,iBACtCC,EAAgB,YAChBC,EAAW,0BACXC,EAAyB,wBACzBC,EAAuB,qCACvBC,EAAoC,2CACpCC,EAA0C,+BAC1CC,EAA8B,yBAC9BC,EAAwB,gBACxBC,EAAe,eACfC,EAAc,SACdC,EAAQ,WACRC,EAAU,aACVC,EAAY,aACZC,GACDd,EACC,MAAOe,IAAKC,EAAAA,EAAAA,kBASNC,EAAoBC,IACxB,MAAMC,EACJN,EAAaO,WAAWC,GAAMA,EAAEC,YAAcJ,EAAKK,QAAQD,aAAc,EAG3E,OACEE,EAAAA,EAAAA,KAAA,OACEC,QAASA,IAAMX,EAAaI,EAAKK,QAASJ,GAC1CO,UAAU,sCAAqCC,UAE/CH,EAAAA,EAAAA,KAACI,EAAAA,KAAI,CACHC,KAAK,SACLC,KAAMX,EAAO,uBAAyB,sBACtCO,UAAU,gBAER,EAGJK,EAAwBb,IAC5B,IAAIc,EAAW,GAEf,OADAA,EAASC,KAAKf,IAEZM,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oDAAmDC,UAChEO,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAACjB,KAAMc,EAASL,SAAA,EACxBH,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,iBAEVW,MAAM,iBACNC,OAAQvB,EAAE,kBACVwB,UAAU,GAHN,mBAKNf,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,eAEVW,MAAM,eACNC,OAAQvB,EAAE,gBACVwB,UAAU,GAHN,iBAKNf,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,iBAEVW,MAAM,iBACNC,OAAQvB,EAAE,WACVwB,UAAU,EACVC,SAAWC,GAAaC,EAAqBD,EAASE,QAJlD,mBAMNnB,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,cAEVW,MAAM,cACNC,OAAQvB,EAAE,eACVwB,UAAU,GAHN,gBAKNf,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,WAEVW,MAAM,WACNC,OAAQvB,EAAE,YACVwB,UAAU,GAHN,gBAMJ,EAGJG,EAAwBE,IAC5B,GAAuB,OAAnBA,QAA8CC,IAAnBD,EAC7B,MAAO,GAET,MAAME,EAAeF,EAAeG,MAAM,IAAK,GAC/C,OAA4B,IAAxBD,EAAaE,QAGO,KAApBF,EAAa,GAFR,GAKFG,WAAWH,EAAa,IAAII,iBAAmB,IAAMJ,EAAa,EAAE,EAE7E,OACEtB,EAAAA,EAAAA,KAAC2B,EAAAA,oBAAmB,CAAAxB,SAChBZ,IACAmB,EAAAA,EAAAA,MAAA,OAAKR,UAAU,mBAAkBC,SAAA,EAC/BO,EAAAA,EAAAA,MAAA,OAAKR,UAAU,MAAKC,SAAA,EAClBO,EAAAA,EAAAA,MAAA,OAAKR,UAAU,2BAA0BC,SAAA,EACvCH,EAAAA,EAAAA,KAAA,SAAOE,UAAU,0BAAyBC,SACvCZ,EAAE,6CAELS,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAQzB,EAAYkD,kBAEtBlB,EAAAA,EAAAA,MAAA,OAAKR,UAAU,2BAA0BC,SAAA,EACvCH,EAAAA,EAAAA,KAAA,SAAOE,UAAU,0BAAyBC,SACvCZ,EAAE,+CAELS,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAQzB,EAAYmD,oBAGtBnB,EAAAA,EAAAA,MAAA,OAAKR,UAAU,2BAA0BC,SAAA,EACvCH,EAAAA,EAAAA,KAAA,SAAOE,UAAU,0BAAyBC,SACvCZ,EAAE,iCAELS,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAQ1B,EAAiBqD,2BAE3BpB,EAAAA,EAAAA,MAAA,OAAKR,UAAU,2BAA0BC,SAAA,EACvCH,EAAAA,EAAAA,KAAA,SAAOE,UAAU,0BAAyBC,SACvCZ,EAAE,+BAELS,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAQ1B,EAAiBsD,mBAG3BrB,EAAAA,EAAAA,MAAA,OAAKR,UAAU,2BAA0BC,SAAA,EACvCH,EAAAA,EAAAA,KAAA,SAAOE,UAAU,0BAAyBC,SACvCZ,EAAE,uCAELS,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SACG1B,EAAiBuD,kBAAkBN,iBAClC,IACAjD,EAAiBwD,sBAIvBvB,EAAAA,EAAAA,MAAA,OAAKR,UAAU,2BAA0BC,SAAA,EACvCH,EAAAA,EAAAA,KAAA,SAAOE,UAAU,0BAAyBC,SACvCZ,EAAE,yCAELS,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SACG1B,EAAiByD,qCAAqCR,iBACrD,IACAjD,EAAiBwD,sBAIvBvB,EAAAA,EAAAA,MAAA,OAAKR,UAAU,2BAA0BC,SAAA,EACvCH,EAAAA,EAAAA,KAAA,SAAOE,UAAU,0BAAyBC,SACvCZ,EAAE,0CAELS,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SACG1B,EAAiB0D,sCAAsCT,iBACtD,IACAjD,EAAiB2D,6BAKzB1B,EAAAA,EAAAA,MAAA,OAAKR,UAAU,MAAMmC,MAAO,CAAEC,WAAY,WAAYnC,SAAA,EACpDO,EAAAA,EAAAA,MAAA,OACER,UAAU,2BACVmC,MAAO,CAAEE,OAAQ,oBAAqBC,UAAW,SAAUrC,SAAA,EAE3DH,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAAA,SAAOE,UAAU,cAAaC,SAC3BZ,EAAE,sCAIPS,EAAAA,EAAAA,KAAA,MAAAG,SACG1B,EAAiBgE,mBAAmBC,KAAI,CAACC,EAAMC,KAE5C5C,EAAAA,EAAAA,KAAA,MACE6C,MAAOD,EACP1C,UAAWf,IAAayD,EAAI,YAAc,GAC1C3C,QAAU6C,GAAM5D,EAAe4D,EAAGH,EAAKI,iBAAiB5C,SAGvDwC,EAAKK,WAFDL,EAAKI,yBAQpBrC,EAAAA,EAAAA,MAAA,OAAKR,UAAU,4BAA2BC,SAAA,EACxCH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,MAAKC,UAClBO,EAAAA,EAAAA,MAAA,OAAKR,UAAU,4BAA2BC,SAAA,EACxCH,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAOE,UAAU,0BAAyBC,SACvCZ,EAAE,+BAELS,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAOE,UAAU,0BAAyBC,SACvC1B,EAAiBwE,kBAAkBF,wBAI1CrC,EAAAA,EAAAA,MAAA,OAAKR,UAAU,MAAKC,SAAA,EAClBO,EAAAA,EAAAA,MAAA,OAAKR,UAAU,2BAA0BC,SAAA,EACvCH,EAAAA,EAAAA,KAAA,KAAAG,UACEH,EAAAA,EAAAA,KAAA,SAAAG,SAAQZ,EAAE,gCAEZS,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SACG1B,EAAiBwE,kBAAkBC,yBAGxCxC,EAAAA,EAAAA,MAAA,OAAKR,UAAU,2BAA0BC,SAAA,EACvCH,EAAAA,EAAAA,KAAA,KAAAG,UACEH,EAAAA,EAAAA,KAAA,SAAAG,SACGZ,EAAE,iDAGPS,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SACG1B,EAAiBwE,kBAAkBE,gBAAgBzB,iBAClD,IACAjD,EAAiBwE,kBAAkBhB,sBAGzCvB,EAAAA,EAAAA,MAAA,OAAKR,UAAU,2BAA0BC,SAAA,EACvCH,EAAAA,EAAAA,KAAA,KAAAG,UACEH,EAAAA,EAAAA,KAAA,SAAAG,SAAQZ,EAAE,qCAEZS,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SACG1B,EAAiBwE,kBAAkBG,iBAAiB1B,iBACnD,IACAjD,EAAiBwE,kBAAkBb,0BAGzC1B,EAAAA,EAAAA,MAAA,OAAKR,UAAU,2BAA0BC,SAAA,EACvCH,EAAAA,EAAAA,KAAA,KAAAG,UACEH,EAAAA,EAAAA,KAAA,SAAAG,SAAQZ,EAAE,yBAEZS,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAEI1B,EAAiBwE,kBACdI,kCAKXrD,EAAAA,EAAAA,KAAA,UACAU,EAAAA,EAAAA,MAAA,OACER,UAAU,MACVmC,MAAO,CACLiB,QAAS7E,EAAiB8E,aAAe,QAAU,QACnDpD,SAAA,EAEFH,EAAAA,EAAAA,KAAA,SAAOE,UAAU,0BAAyBC,SACvCZ,EAAE,kCAELS,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,UAETH,EAAAA,EAAAA,KAAA,OACEE,UAAU,MACVmC,MAAO,CACLiB,QAAS7E,EAAiB8E,aAAe,QAAU,QACnDpD,UAEFH,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CACRjB,KAAMd,EACN4E,cAAc,WACdC,YAAc/D,QACG2B,IAAfjC,EAA2BA,EAAWM,EAAKK,SAAW,CAAC,EAEzD2D,kBAAmB1E,EAAyBmB,SAEf,OAA5BvB,GACDA,EAAwB4C,OAAS,EAC7B1C,EAA2C4D,KAAI,SAC7CiB,GAEA,OACE3D,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,gBAEVW,MAAO8C,EAAI9C,MACXC,OAAQvB,EAAEoE,EAAIC,aACd7C,UAAU,EACV8C,WAAW,EACXC,cAAc,QALTH,EAAIC,YAQf,IACA,QAGR5D,EAAAA,EAAAA,KAAA,UACAU,EAAAA,EAAAA,MAAA,OACER,UAAU,MACVmC,MAAO,CACLiB,QAAS7E,EAAiBsF,mBACtB,QACA,QACJ5D,SAAA,EAEFH,EAAAA,EAAAA,KAAA,SAAOE,UAAU,0BAAyBC,SACvCZ,EAAE,0CAELS,EAAAA,EAAAA,KAAA,SAAAG,SAAO,OACPH,EAAAA,EAAAA,KAAA,SAAAG,SAAQ,SAEVH,EAAAA,EAAAA,KAAA,OACEE,UAAU,MACVmC,MAAO,CACLiB,QAAS7E,EAAiBsF,mBACtB,QACA,QACJ5D,UAEFO,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CACRjB,KAAMb,EACN2E,cAAc,WACdjD,qBAAsBA,EACtBlB,aAAcA,EAAac,SAAA,EAE3BH,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,gBAEVW,MAAM,cACNC,OAAQvB,EAAE,WACVwB,UAAU,GAHN,gBAKNf,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,gBAEVW,MAAM,YACNC,OAAQvB,EAAE,6CACVwB,UAAU,GAHN,cAKNf,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,gBAEVW,MAAM,kBACNC,OAAQvB,EAAE,gCACVwB,UAAU,GAHN,oBAKNf,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,gBAEVW,MAAM,cACNC,OAAQvB,EAAE,oCACVwB,UAAU,GAHN,gBAKNf,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,gBAEVW,MAAM,UACNC,OAAQvB,EAAE,WACVwB,UAAU,GAHN,YAKNf,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,gBAEVW,MAAM,YACNC,OAAQvB,EAAE,eACVwB,UAAU,GAHN,cAKNf,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,gBAEVW,MAAM,gBACNC,OAAQvB,EAAE,iBACVwB,UAAU,EACVC,SAAWC,GACTC,EAAqBD,EAASE,QAL5B,kBAQNnB,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,gBAEVW,MAAM,cACNC,OAAQvB,EAAE,eACVwB,UAAU,EACVC,SAAWC,GACTC,EAAqBD,EAASE,QAL5B,gBAQNnB,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,gBAEVW,MAAM,YACNC,OAAQvB,EAAE,aACVwB,UAAU,EACVC,SAAWC,GACF,IAAI+C,KAAK/C,EAASE,OAAOO,kBAL9B,cAQN1B,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,gBAEVW,MAAM,UACNC,OAAQvB,EAAE,WACVwB,UAAU,EACVC,SAAWC,GACF,IAAI+C,KAAK/C,EAASE,OAAOO,kBAL9B,YAQN1B,EAAAA,EAAAA,KAACW,EAAAA,GAAUC,OAAM,CACfV,UAAU,gBACVc,SAAUvB,mBAU9B,C,yLCrbA,MAAMwE,UAAyCC,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KACvDC,MAAQ,CACN3F,YAAa4F,IAAAA,UAAiBC,EAAAA,IAC9B9F,iBAAkB6F,IAAAA,UAAiBE,EAAAA,IACnCC,iBAAkB,CAAC,EACnB3F,2CAA4CwF,IAAAA,UAC1CxF,EAAAA,IAEFC,+BAAgCuF,IAAAA,UAC9BvF,EAAAA,IAEF2F,iBAAiB,EACjBC,YAAa,CACXC,aAAcC,KAAKC,kBACnBC,cAAeF,KAAKG,MAAMD,eAE5BpG,0BAA2B,GAC3BC,wBAAyB,GACzBC,qCAAsC,GACtCoG,aAAa,EACbhG,gBAAiB,GACjBiG,aAAa,EACb/F,UAAW,EACXE,aAAc,GACd8F,sBAAuB,IACvB,KACFnG,yBAA4B8D,IAC1B+B,KAAKO,SAAS,CAAEnG,gBAAiB6D,GAAI,EACrC,KACF5D,eAAiB,CAAC4D,EAAGC,KACnB,IACE,IAAIoC,EAAwBb,IAAAA,UAC1BO,KAAKR,MAAMc,uBAET1G,EAAmB6F,IAAAA,UAAiBO,KAAKR,MAAM5F,kBAC/CC,EAAc4F,IAAAA,UAAiBO,KAAKR,MAAM3F,aAC1CyG,IAA0BpC,IAC5BtE,EAAiBsF,oBAAqB,EACtCrF,EAAY2G,qCAAqCC,SAASC,IACpDxC,IAAoBwC,EAAQC,cAC9B/G,EAAiBwE,kBAAkBF,gBACjCwC,EAAQC,YACV/G,EAAiBwE,kBAAkBC,mBACjC2B,KAAKY,6BAA6BF,EAAQG,YAC5CjH,EAAiBwE,kBAAkBhB,gBACjCsD,EAAQtD,gBACVxD,EAAiBwE,kBAAkBE,gBACjCoC,EAAQpC,gBAAgBzB,sBAEQL,IAAhCkE,EAAQnD,qBACwB,OAAhCmD,EAAQnD,oBAER3D,EAAiBwE,kBAAkBb,oBACjCmD,EAAQnD,oBACP3D,EAAiBwE,kBAAkBb,oBAAsB,QAE/Bf,IAA7BkE,EAAQnC,kBACqB,OAA7BmC,EAAQnC,iBAER3E,EAAiBwE,kBAAkBG,iBACjCmC,EAAQnC,iBAAiB1B,iBACxBjD,EAAiBwE,kBAAkBG,iBAAmB,IAC3D3E,EAAiBwE,kBAAkBI,0BACjCsC,EAAAA,EAAAA,IACEC,EAAAA,GACAL,EAAQlC,0BAEZwB,KAAKO,SAAS,CACZjG,SAAU0G,OAAO/C,EAAEgD,cAAcC,aAAa,UAC9CtH,iBAAkBA,EAClB0G,sBAAuBpC,IAEzB8B,KAAKmB,oBACHT,EAAQC,YACRD,EAAQ3D,YACR2D,EAAQxC,gBACRtE,GAEJ,IAGN,CAAE,MAAOwH,GACPC,QAAQC,IACN,mEACAF,EAEJ,GACA,KACFD,oBAAsB,CACpBR,EACA5D,EACAmB,EACAtE,KAEA,IACE,IAAIG,EAA0B,GAC9BiG,KAAKO,SAAS,CACZxG,wBAAyBA,EACzBH,iBAAkBA,IAEpB,IAAI2H,EAAM,CACRC,YAAab,EACbc,YAAa1E,EACb2E,gBAAiBxD,EACjByD,mBAAoB3B,KAAK4B,yBAE3BC,IACEC,EAAAA,IACAC,EAAAA,GACER,EACAvB,KAAKG,MAAM6B,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAStH,KACtB,IAAyB,IAArBuH,EAAOC,UAAoB,CAC7B,IAAIC,EAA8BF,EAAOG,aAAaC,MAGrB,MAA/BF,GACAA,EAA4B3F,OAAS,IAErC/C,EAAiB8E,cAAe,EAChC4D,EAA4B7B,SAASC,IACnC,IAAI+B,EAUAC,EARoB,OAAtBhC,EAAQiC,gBACcnG,IAAtBkE,EAAQiC,YAERF,EACE/B,EAAQiC,UAAU9F,iBAClB,IACA6D,EAAQkC,mBAIW,OAArBlC,EAAQmC,eACarG,IAArBkE,EAAQmC,WAERH,EACEhC,EAAQmC,SAAShG,iBACjB,IACA6D,EAAQoC,aAEZ/I,EAAwB6B,KAAK,CAC3BmH,OAAQrC,EAAQqC,OAChBC,GAAItC,EAAQsC,GACZC,IAAKvC,EAAQuC,IACbN,UAAWF,EACXG,kBAAmBlC,EAAQkC,kBAC3BC,SAAUH,EACVI,YAAapC,EAAQoC,YACrBI,aAAcxC,EAAQwC,aACtBC,eAAgBzC,EAAQyC,eACxBC,QAAS1C,EAAQ0C,SACjB,IAEJpD,KAAKO,SAAS,CACZxG,wBAAyBA,EACzBH,iBAAkBA,EAClBiG,iBAAiB,IAGvB,MACEjG,EAAiB8E,cAAe,EAChCsB,KAAKO,SAAS,CACZxG,wBAAyBA,EACzBH,iBAAkBA,EAClBiG,iBAAiB,IAEnBwB,QAAQC,IAAI,qCAAsCc,EAAOiB,UAC3D,IAEDC,OAAOlC,IACNpB,KAAKO,SAAS,CAAE1F,KAAM,GAAIgF,iBAAiB,IAC3CwB,QAAQC,IACN,oDACAF,EACD,GAEP,CAAE,MAAOA,GACPC,QAAQC,IACN,wEACAF,EAEJ,GACA,KA6VFmC,YAAc,KAOZ,EACA,KACFC,eAAkBvF,IAChB,IACE,IAAInE,EAA4B2F,IAAAA,UAC9BO,KAAKR,MAAM1F,2BAEb,IAAIwG,EAAwBb,IAAAA,UAC1BO,KAAKR,MAAMc,wBAES,MAAlBrC,EAAEiF,cAAwBjF,EAAEiF,aAAavG,OAAS,IACpD7C,EAA0B2G,SAASC,IAC7BJ,IAA0BI,EAAQC,aACpCX,KAAKyD,0BACHxF,EAAEiF,aACFxC,EAAQ3D,YACR2D,EAAQC,YACRD,EAAQxC,gBAEZ,IAGJ8B,KAAKO,SAAS,CACZzG,0BAA2BA,GAE/B,CAAE,MAAOsH,GACPC,QAAQC,IAAI,qDAAsDF,EACpE,GACA,KACF3G,aAAe,CAACI,EAAMC,KACpB,IAAIN,EAAewF,KAAKR,MAAMhF,aAC1BkJ,EAAmBlJ,EAAaO,WACjC+C,GAASA,EAAK7C,YAAcJ,EAAKI,YAEhCH,EACFN,EAAamJ,OAAOD,EAAkB,GAEtClJ,EAAaoB,KAAKf,GAEpBmF,KAAKO,SAAS,CAAE/F,gBAAe,CAC/B,CA3YFiJ,yBAAAA,CACEG,EACA7G,EACA4D,EACAzC,GAEA,IACE,IAAItE,EAAmB6F,IAAAA,UAAiBO,KAAKR,MAAM5F,kBAC/CI,EAAuCyF,IAAAA,UACzCO,KAAKR,MAAMxF,sCAETD,EAA0B0F,IAAAA,UAC5BO,KAAKR,MAAMzF,yBAEbiG,KAAKO,SAAS,CACZvG,qCACEA,EACFJ,iBAAkBA,EAClBG,4BAEF,IAAIwH,EAAM,CACR2B,aAAcU,EACdpC,YAAab,EACbc,YAAa1E,EACb2E,gBAAiBxD,EACjByD,mBAAoB3B,KAAK4B,yBAE3BC,IACEC,EAAAA,GACAC,EAAAA,GACER,EACAvB,KAAKG,MAAM6B,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAStH,MACG,IAArBuH,EAAOC,UAKiC,OAJ1CrI,EAAuCyF,IAAAA,UACrC2C,EAAOG,aAAaC,SAIpBxI,EAAqC2C,OAAS,IAE9C/C,EAAiBsF,oBAAqB,EACtCc,KAAKO,SAAS,CACZvG,qCACEA,EACF6J,mBAAoBjK,EACpBiG,iBAAiB,MAIrBjG,EAAiBsF,oBAAqB,EACtCc,KAAKO,SAAS,CACZvG,qCACEA,EACF6J,mBAAoBjK,EACpBiG,iBAAiB,IAEnBwB,QAAQC,IACN,sCACAc,EAAOiB,WAEX,IAEDC,OAAOlC,IACNpB,KAAKO,SAAS,CAAE1F,KAAM,GAAIgF,iBAAiB,IAC3CwB,QAAQC,IACN,qDACAF,EACD,GAEP,CAAE,MAAOA,GACPC,QAAQC,IACN,8EACAF,EAEJ,CACF,CACA0C,yBAAAA,CAA0BC,GACxB,IAE2C,KAAvC/D,KAAKR,MAAM3F,YAAYkD,kBACeP,IAAtCuH,EAAUC,YAAYC,aAEtBjE,KAAKkE,mCAAmCH,EAAUC,YACtD,CAAE,MAAO5C,GACPC,QAAQC,IACN,8EACAF,EAEJ,CACF,CACA+C,iBAAAA,GACE,IACEpC,EAAAA,GAAqB/B,KAAKG,MAAMiE,YAAY7B,aAAa8B,YACzDrE,KAAKsE,4BAA4BtE,KAAKG,MAAM6D,YAAYjH,YAE1D,CAAE,MAAOqE,GACPC,QAAQC,IACN,sEACAF,EAEJ,CACF,CAEAnB,eAAAA,GACE,OAAO8B,EAAAA,GACL/B,KAAKG,MAAMiE,YAAY7B,aAAagC,gBAExC,CAEAD,2BAAAA,CAA4BvH,GAC1B,IAAI4E,EAAqB3B,KAAK4B,wBAC9BjC,EAAAA,GAAsB6E,mBAAqB7C,EAC3C,IAAI7B,EAAcL,IAAAA,UAAiBO,KAAKR,MAAMM,aAC9CH,EAAAA,GAAsBmD,YACpB9C,KAAKG,MAAMiE,YAAY7B,aAAakC,cAAcC,YAAY5B,YAChEnD,EAAAA,GAAsBgF,cACgB,IAApC3E,KAAKG,MAAMD,cAAcvD,OACrB,IAAIqD,KAAKG,MAAMD,eACf,QACc1D,IAAhBO,EASJ8E,IACEC,EAAAA,IACE,gBACA/E,EACA,2BACFgF,EAAAA,GAAwC/B,KAAKG,MAAM6B,aAAaC,YAE/DC,MAAMC,IACL,IAAIC,EAASD,EAAStH,KACtB,IAAyB,IAArBuH,EAAOC,UAAoB,CAC7B,IAAIzI,EAAmB6F,IAAAA,UAAiBO,KAAKR,MAAM5F,kBAC/CE,EAA4B2F,IAAAA,UAC9B2C,EAAOG,aAAaC,OAEtB,GACEoC,MAAMC,QAAQ/K,IACdA,EAA0B6C,OAAS,EACnC,CACA7C,EAA0B2G,SAASC,IAC7BA,EAAQoE,iBACwC,IAA9ClL,EAAiBmL,kBAAkBpI,QACrC/C,EAAiBmL,kBAAkBnJ,KACjC8E,EAAQsE,iBAKI,IAFdpL,EAAiBmL,kBAAkBE,QAAQC,GAClCA,EAAIF,kBAAoBtE,EAAQsE,kBACtCrI,QAEH/C,EAAiBmL,kBAAkBnJ,KACjC8E,EAAQsE,iBAGd,IAEFpL,EAAiBwD,gBACftD,EAA0B,GAAGsD,qBAEwBZ,IAArD1C,EAA0B,GAAGyD,qBACwB,OAArDzD,EAA0B,GAAGyD,oBAE7B3D,EAAiB2D,oBACfzD,EAA0B,GAAGyD,oBAE/B3D,EAAiB2D,oBACfzD,EAA0B,GAAGsD,gBAEjC,IAAI+H,EAAmB,GACvBrL,EAA0B2G,SAAS2E,IACjC,GAAIA,EAAGN,eAAgB,CACbK,EAAiBpK,WAAUsK,GACjCA,IAAOD,EAAGJ,kBAGJ,GACNG,EAAiBvJ,KAAKwJ,EAAGJ,gBAE7B,KAEFpL,EAAiBsD,aAAeiI,EAAiBxI,MACnD,CACAqD,KAAKO,SAAS,CACZV,iBAAiB,EACjBjG,iBAAkB6F,IAAAA,UAAiB7F,GACnCE,0BAA2B2F,IAAAA,UACzB3F,KAGJkG,KAAKsF,eAAevI,EACtB,MACEiD,KAAKO,SAAS,CACZ3G,iBAAkB6F,IAAAA,UAAiBE,EAAAA,IACnC4F,oBAAqB9F,IAAAA,UAAiBE,EAAAA,IACtCE,iBAAiB,IAEnBwB,QAAQC,IACN,wCACAc,EAAOiB,UAEX,IAEDC,OAAOlC,IACNC,QAAQC,IAAI,mDAAoDF,EAAM,IA1FxEpB,KAAKO,SAAS,CACZ3G,iBAAkB,IAAK+F,EAAAA,IACvB4F,oBAAqB,IAAK5F,EAAAA,IAC1BG,cACAD,iBAAiB,GAyFvB,CAEAyF,cAAAA,CAAevI,GACb,IAAI4E,EAAqB3B,KAAK4B,wBAC9BjC,EAAAA,GAAsB6E,mBAAqB7C,EAC3ChC,EAAAA,GAAsB6F,QAAS,EAC/B7F,EAAAA,GAAsBmD,YACpB9C,KAAKG,MAAMiE,YAAY7B,aAAakC,cAAcC,YAAY5B,YAChEnD,EAAAA,GAAsBgF,cACgB,IAApC3E,KAAKG,MAAMD,cAAcvD,OACrB,IAAIqD,KAAKG,MAAMD,eACf,GACN,IAAIuF,EAAU,CACZ,CACE3G,IAAK4G,EAAAA,GACLpJ,MAAOS,GAET,CACE+B,IAAK4G,EAAAA,GACLpJ,MAAOqF,IAGPJ,EAAM,CACRoE,gBAAiB3F,KAAKG,MAAMyF,oBAC5BC,YAAaH,EAAAA,GACbA,SAAUD,GAEZ5D,IACEC,EAAAA,IACAC,EAAAA,GACER,EACAvB,KAAKG,MAAM6B,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAAStH,KACtB,IAAyB,IAArBuH,EAAOC,UAAoB,CAC7B,IAAIzI,EAAmB6F,IAAAA,UAAiBO,KAAKR,MAAM5F,kBACnD,IAAIC,EAAcuI,EAAOG,aAEG,MAA1BvC,KAAKG,MAAM6D,kBACexH,GAA1BwD,KAAKG,MAAM6D,cAEXnK,EAAYmD,cAAgBgD,KAAKG,MAAM6D,YAAYhH,eAGnC,OAAhBnD,GACqD,OAArDA,EAAY2G,sCAEZ3G,EAAY2G,qCAAqCC,SAC9CC,IACC,GAC6B,OAA3BA,EAAQoE,gBACmB,KAA3BpE,EAAQoE,gBACRpE,EAAQoE,eACR,CACA,IAAI3G,EACFuC,EAAQC,YACR,IACAX,KAAKY,6BAA6BF,EAAQG,YAC1C,IACFjH,EAAiBgE,mBAAmBhC,KAAK,CACvCuC,UAAWA,EACXD,gBAAiBwC,EAAQC,cAE3B/G,EAAiBqD,sBAAwB,EACzCrD,EAAiByD,sCACfqD,EAAQpC,qBAEqB9B,IAA7BkE,EAAQnC,kBACqB,OAA7BmC,EAAQnC,mBAER3E,EAAiB0D,uCACfoD,EAAQnC,iBAEd,CACA3E,EAAiBuD,mBAAqBuD,EAAQpC,eAAe,IAInE0B,KAAKO,SAAS,CACZV,iBAAiB,EACjBhG,YAAa4F,IAAAA,UAAiB2C,EAAOG,cACrC3I,iBAAkB6F,IAAAA,UAAiB7F,IAEvC,MACEoG,KAAKO,SAAS,CACZ1G,YAAa4F,IAAAA,UAAiBE,EAAAA,IAC9BC,iBAAkBH,IAAAA,UAAiBE,EAAAA,IACnCE,iBAAiB,IAEnBwB,QAAQC,IAAI,2BAA4Bc,EAAOiB,UACjD,IAEDC,OAAOlC,IACNC,QAAQC,IAAI,mCAAoCF,EAAM,GAG5D,CAEAR,4BAAAA,CAA6BkF,GAC3B,IAAIC,EAAK,GACT,IAAIjM,EAA4B2F,IAAAA,UAC9BO,KAAKR,MAAM1F,2BAEb,GACE8K,MAAMC,QAAQ/K,IACdA,EAA0B6C,OAAS,EACnC,CACA,IAAIqJ,EAAWlM,EAA0BmL,QAAO,CAACC,EAAKe,IAC7Cf,EAAIrE,aAAeiF,SAEXtJ,IAAbwJ,GAA0BA,EAASrJ,OAAS,IAC9CoJ,EAAKC,EAAS,GAAGhB,gBAErB,CACA,OAAOe,CACT,CAEAnE,qBAAAA,GACE,IAAID,EAAqBZ,EAAAA,GAA6BmF,KACtD,MAAM,aAAEC,GAAiBnG,KAAKG,MAO9B,YALmB3D,IAAjB2J,QACoC3J,IAApC2J,EAAaxE,qBAEbA,EAAqBwE,EAAaxE,oBAE7BA,CACT,CAkDAyE,MAAAA,GACE,OAAOpG,KAAKR,MAAMK,iBAChBhE,EAAAA,EAAAA,MAAA,OAAAP,SAAA,EACEH,EAAAA,EAAAA,KAACkL,EAAAA,EAAa,CAAA/K,UACZH,EAAAA,EAAAA,KAACmL,EAAAA,EAAe,CAACC,cAAc,kCAEjCpL,EAAAA,EAAAA,KAACkL,EAAAA,EAAa,CAAA/K,UACZH,EAAAA,EAAAA,KAACzB,EAAuB,CACtBG,YAAamG,KAAKR,MAAM3F,YACxBD,iBAAkBoG,KAAKR,MAAM5F,iBAC7BQ,gBAAiB4F,KAAKR,MAAMpF,gBAC5BN,0BAA2BkG,KAAKR,MAAM1F,0BACtCE,qCACEgG,KAAKR,MAAMxF,qCAEbD,wBAAyBiG,KAAKR,MAAMzF,wBACpCE,2CACE+F,KAAKR,MAAMvF,2CAEbC,+BACE8F,KAAKR,MAAMtF,+BAEbC,yBAA0B6F,KAAK7F,yBAC/BE,eAAgB2F,KAAK3F,eACrBE,WAAYyF,KAAKwD,eACjBlJ,SAAU0F,KAAKR,MAAMlF,SACrBE,aAAcwF,KAAKR,MAAMhF,aACzBC,aAAcuF,KAAKvF,kBAGvBU,EAAAA,EAAAA,KAACkL,EAAAA,EAAa,CAAA/K,UACZH,EAAAA,EAAAA,KAACkL,EAAAA,EAAa,CAAA/K,UACZH,EAAAA,EAAAA,KAAC2B,EAAAA,oBAAmB,CAAAxB,SAChBZ,IACAS,EAAAA,EAAAA,KAAA,OAAKE,UAAU,MAAKC,UAClBH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWC,UACxBH,EAAAA,EAAAA,KAACqL,EAAAA,OAAM,CACLnL,UAAU,aACVD,QAAS4E,KAAKG,MAAMsG,OACpBC,QAAShM,EAAE,wBAU3BS,EAAAA,EAAAA,KAACwL,EAAAA,EAAW,CAACC,QAAQ,WAEzB,EAGF,MAYA,GAAeC,EAAAA,EAAAA,KAZUrH,IAChB,CACL4E,YAAa5E,EAAMsH,eAAe1C,YAClCpC,aAAcxC,EAAMsH,eAAeC,cAIZC,IAClB,CACLC,aAAaC,EAAAA,EAAAA,IAAmBJ,EAAgBE,MAGpD,CAGE5H,E,iFClpBK,SAASkH,EAAe3M,GAAgD,IAA/C,WAAEwN,EAAU,cAAEZ,EAAa,cAAEa,GAAezN,EAC1E,OACEwB,EAAAA,EAAAA,KAAC2B,EAAAA,oBAAmB,CAAAxB,SAChBZ,IACAS,EAAAA,EAAAA,KAAA,OAAKE,UAAU,kBAAiBC,UAC9BO,EAAAA,EAAAA,MAAA,OAAKR,UAAU,oBAAmBC,SAAA,EAChCH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,4BAA2BC,UACxCH,EAAAA,EAAAA,KAAA,QAAMqC,MAAO,CAAE6J,OAAQ,QAAUhM,UAAU,cAAaC,SACtC,KAAf6L,QAAoC3K,IAAf2K,EAClBzM,EAAE6L,GACFY,MAGQ,KAAfA,QACc3K,IAAf2K,GACAC,EAAczK,OAAS,GACrBxB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,kBAAiBC,UAC9BH,EAAAA,EAAAA,KAACmM,EAAAA,MAAK,CACJ5G,SACE7E,EAAAA,EAAAA,MAAA,OAAAP,SAAA,CACGZ,EAAE0M,EAAc,GAAGG,WAAa,IAAI,IACpC,IAAMH,EAAc,GAAGI,YACxBrM,EAAAA,EAAAA,KAACI,EAAAA,KAAI,CACHiC,MAAO,CAAEiK,WAAY,QACrBjM,KAAK,SACLC,KAAK,aACLiM,KAAK,aAIXC,SAAS,cACTrM,UAEAH,EAAAA,EAAAA,KAACyM,EAAAA,KAAI,CAACvM,UAAU,qBAAoBC,SACjC8L,EAAcvJ,KAAK6I,IAClB7K,EAAAA,EAAAA,MAAC+L,EAAAA,KAAKC,QAAO,CAEXxM,UAAU,gCAA+BC,SAAA,CAExCZ,EAAEgM,EAAQa,WAAa,IAAI,IAAE,IAAMb,EAAQc,aAHxC,6BAUd,SAOd,CA3DAlB,EAAgBwB,aAAe,CAC7BX,WAAY,GACZZ,cAAe,GACfa,cAAe,IA0DjB,S","sources":["Components/UIBase/Details/RailTransloadingDetails.jsx","Components/Composite/Details/RailTransloadingDetailsComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Icon } from \"@scuf/common\";\r\nRailTransloadingDetails.propTypes = {\r\n  railTransloading: PropTypes.object.isRequired,\r\n  railReceipt: PropTypes.object.isRequired,\r\n  selectedCompRow: PropTypes.array.isRequired,\r\n  railTransloadingAssociatedShipmentsColumns: PropTypes.array.isRequired,\r\n  railTransloadingDetailsColumns: PropTypes.array.isRequired,\r\n  dsCompartmentsBaseProduct: PropTypes.array.isRequired,\r\n  dsTransloadingShipments: PropTypes.array.isRequired,\r\n  dsTransloadingShipmentLoadingDetails: PropTypes.array.isRequired,\r\n  handleRowSelectionChange: PropTypes.func.isRequired,\r\n  setCurrentList: PropTypes.func.isRequired,\r\n  isSelect: PropTypes.object.isRequired,\r\n  onRowClick: PropTypes.func.isRequired,\r\n  expandedRows: PropTypes.array.isRequired,\r\n  toggleExpand: PropTypes.func.isRequired,\r\n};\r\nexport function RailTransloadingDetails({\r\n  railTransloading,\r\n  railReceipt,\r\n  dsCompartmentsBaseProduct,\r\n  dsTransloadingShipments,\r\n  dsTransloadingShipmentLoadingDetails,\r\n  railTransloadingAssociatedShipmentsColumns,\r\n  railTransloadingDetailsColumns,\r\n  handleRowSelectionChange,\r\n  selectedCompRow,\r\n  setCurrentList,\r\n  isSelect,\r\n  onRowClick,\r\n  expandedRows,\r\n  toggleExpand,\r\n}) {\r\n  const [t] = useTranslation();\r\n  // const decimalDisplayValues = (cellData) => {\r\n  //   const { value } = cellData;\r\n  //   if (typeof value === \"number\") {\r\n  //     return value.toLocaleString();\r\n  //   } else {\r\n  //     return value;\r\n  //   }\r\n  // };\r\n  const expanderTemplate = (data) => {\r\n    const open =\r\n      expandedRows.findIndex((x) => x.compSeqNo === data.rowData.compSeqNo) >= 0\r\n        ? true\r\n        : false;\r\n    return (\r\n      <div\r\n        onClick={() => toggleExpand(data.rowData, open)}\r\n        className=\"compartmentIcon gridButtonFontColor\"\r\n      >\r\n        <Icon\r\n          root=\"common\"\r\n          name={open ? \"slidercontrols-minus\" : \"ellipsis-horizontal\"}\r\n          className=\"margin_l10\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  const rowExpansionTemplate = (data) => {\r\n    let CompData = [];\r\n    CompData.push(data);\r\n    return (\r\n      <div className=\"childTable ChildGridViewAllShipmentLoadingDetails\">\r\n        <DataTable data={CompData}>\r\n          <DataTable.Column\r\n            className=\"starttotalizer\"\r\n            key=\"starttotalizer\"\r\n            field=\"starttotalizer\"\r\n            header={t(\"StartTotalizer\")}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"endtotalizer\"\r\n            key=\"endtotalizer\"\r\n            field=\"endtotalizer\"\r\n            header={t(\"EndTotalizer\")}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"productdensity\"\r\n            key=\"productdensity\"\r\n            field=\"productdensity\"\r\n            header={t(\"Density\")}\r\n            editable={false}\r\n            renderer={(cellData) => convertNumberWithUOM(cellData.value)}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"temperature\"\r\n            key=\"temperature\"\r\n            field=\"temperature\"\r\n            header={t(\"Temperature\")}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n          <DataTable.Column\r\n            className=\"pressure\"\r\n            key=\"pressure\"\r\n            field=\"pressure\"\r\n            header={t(\"Pressure\")}\r\n            editable={false}\r\n          ></DataTable.Column>\r\n        </DataTable>\r\n      </div>\r\n    );\r\n  };\r\n  const convertNumberWithUOM = (quantityString) => {\r\n    if (quantityString === null || quantityString === undefined) {\r\n      return \"\";\r\n    }\r\n    const quantityList = quantityString.split(\" \", 2);\r\n    if (quantityList.length !== 2) {\r\n      return \"\";\r\n    }\r\n    if (quantityList[0] === \"\") {\r\n      return \"\";\r\n    }\r\n    return parseFloat(quantityList[0]).toLocaleString() + \" \" + quantityList[1];\r\n  };\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"BayAllocationReceiptSearch_ReceiptCode\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>{railReceipt.ReceiptCode}</label>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"BayAllocationReceiptSearch_ReceiptStatus\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>{railReceipt.ReceiptStatus}</label>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-2\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"viewTransloading_NoOfComps\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>{railTransloading.totalNoOfTransWagons}</label>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-2\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"viewTransloading_NoOfBps\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>{railTransloading.NoOfProducts}</label>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"viewTransloading_TotalReceiptQty\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>\r\n                {railTransloading.receiptPlannedQty.toLocaleString() +\r\n                  \" \" +\r\n                  railTransloading.PlanQuantityUOM}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"viewTransloading_ReceiptPlannedQty\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>\r\n                {railTransloading.totalPlannedQtyForTransloadingWagons.toLocaleString() +\r\n                  \" \" +\r\n                  railTransloading.PlanQuantityUOM}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"viewTransloading_ReceiptUnloadedQty\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>\r\n                {railTransloading.totalUnloadedQtyForTransloadingWagons.toLocaleString() +\r\n                  \" \" +\r\n                  railTransloading.UnloadedQuantityUOM}\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\" style={{ alignItems: \"stretch\" }}>\r\n            <div\r\n              className=\"col-12 col-md-6 col-lg-2\"\r\n              style={{ border: \"1px solid #c8c8c8\", minHeight: \"400px\" }}\r\n            >\r\n              <div>\r\n                <label className=\"headerLabel\">\r\n                  {t(\"viewTransloading_Compartments\")}\r\n                </label>\r\n              </div>\r\n\r\n              <ul>\r\n                {railTransloading.lstCompartmentList.map((item, i) => {\r\n                  return (\r\n                    <li\r\n                      index={i}\r\n                      className={isSelect === i ? \"activeted\" : \"\"}\r\n                      onClick={(e) => setCurrentList(e, item.CompartmentCode)}\r\n                      key={item.CompartmentCode}\r\n                    >\r\n                      {item.compartBP}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-10\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 col-lg-10\">\r\n                  <br></br>\r\n                  <br></br>\r\n                  <label className=\"TransloadingheaderLabel\">\r\n                    {t(\"ViewShipment_Compartment\")}\r\n                  </label>\r\n                  <label>:</label>\r\n                  <label> </label>\r\n                  <label className=\"TransloadingheaderLabel\">\r\n                    {railTransloading.selectCompartment.CompartmentCode}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 col-lg-3\">\r\n                  <b>\r\n                    <label>{t(\"viewTransloading_BPCode\")}</label>\r\n                  </b>\r\n                  <label>:</label>\r\n                  <label> </label>\r\n                  <label>\r\n                    {railTransloading.selectCompartment.CompartmentProduct}\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-3\">\r\n                  <b>\r\n                    <label>\r\n                      {t(\"LocalTransactionsMapping_PlannedQuantity\")}\r\n                    </label>\r\n                  </b>\r\n                  <label>:</label>\r\n                  <label> </label>\r\n                  <label>\r\n                    {railTransloading.selectCompartment.PlannedQuantity.toLocaleString() +\r\n                      \" \" +\r\n                      railTransloading.selectCompartment.PlanQuantityUOM}\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-3\">\r\n                  <b>\r\n                    <label>{t(\"UnLoadingInfo_UnloadQuantity\")}</label>\r\n                  </b>\r\n                  <label>:</label>\r\n                  <label> </label>\r\n                  <label>\r\n                    {railTransloading.selectCompartment.UnloadedQuantity.toLocaleString() +\r\n                      \" \" +\r\n                      railTransloading.selectCompartment.UnloadedQuantityUOM}\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-3\">\r\n                  <b>\r\n                    <label>{t(\"UserAdmin_Status\")}</label>\r\n                  </b>\r\n                  <label>:</label>\r\n                  <label> </label>\r\n                  <label>\r\n                    {\r\n                      railTransloading.selectCompartment\r\n                        .ReceiptCompartmentStatus\r\n                    }\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <br></br>\r\n              <div\r\n                className=\"row\"\r\n                style={{\r\n                  display: railTransloading.showShipment ? \"block\" : \"none\",\r\n                }}\r\n              >\r\n                <label className=\"TransloadingheaderLabel\">\r\n                  {t(\"viewTransloading_AssocShips\")}\r\n                </label>\r\n                <label>:</label>\r\n                <label> </label>\r\n              </div>\r\n              <div\r\n                className=\"row\"\r\n                style={{\r\n                  display: railTransloading.showShipment ? \"block\" : \"none\",\r\n                }}\r\n              >\r\n                <DataTable\r\n                  data={dsTransloadingShipments}\r\n                  selectionMode=\"multiple\"\r\n                  onCellClick={(data) =>\r\n                    onRowClick !== undefined ? onRowClick(data.rowData) : {}\r\n                  }\r\n                  onSelectionChange={handleRowSelectionChange}\r\n                >\r\n                  {dsTransloadingShipments !== null &&\r\n                  dsTransloadingShipments.length > 0\r\n                    ? railTransloadingAssociatedShipmentsColumns.map(function (\r\n                        key\r\n                      ) {\r\n                        return (\r\n                          <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            key={key.displayName}\r\n                            field={key.field}\r\n                            header={t(key.displayName)}\r\n                            editable={false}\r\n                            rowHeader={false}\r\n                            editFieldType=\"text\"\r\n                          ></DataTable.Column>\r\n                        );\r\n                      })\r\n                    : \"\"}\r\n                </DataTable>\r\n              </div>\r\n              <br></br>\r\n              <div\r\n                className=\"row\"\r\n                style={{\r\n                  display: railTransloading.showLoadingDetails\r\n                    ? \"block\"\r\n                    : \"none\",\r\n                }}\r\n              >\r\n                <label className=\"TransloadingheaderLabel\">\r\n                  {t(\"viewTransloading_ShipLoadingDetails\")}\r\n                </label>\r\n                <label>:</label>\r\n                <label>{\"\"}</label>\r\n              </div>\r\n              <div\r\n                className=\"row\"\r\n                style={{\r\n                  display: railTransloading.showLoadingDetails\r\n                    ? \"block\"\r\n                    : \"none\",\r\n                }}\r\n              >\r\n                <DataTable\r\n                  data={dsTransloadingShipmentLoadingDetails}\r\n                  selectionMode=\"multiple\"\r\n                  rowExpansionTemplate={rowExpansionTemplate}\r\n                  expandedRows={expandedRows}\r\n                >\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"trailercode\"\r\n                    field=\"trailercode\"\r\n                    header={t(\"Trailer\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"compSeqNo\"\r\n                    field=\"compSeqNo\"\r\n                    header={t(\"ViewMarineLoadingDetails_CompartmentSeqNo\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"compartmentcode\"\r\n                    field=\"compartmentcode\"\r\n                    header={t(\"ViewShipment_CompartmentCode\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"productcode\"\r\n                    field=\"productcode\"\r\n                    header={t(\"UnloadingDetails_BaseProductCode\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"bcuCode\"\r\n                    field=\"bcuCode\"\r\n                    header={t(\"BCU_BCU\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"meterCode\"\r\n                    field=\"meterCode\"\r\n                    header={t(\"Meter_Meter\")}\r\n                    editable={false}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"grossquantity\"\r\n                    field=\"grossquantity\"\r\n                    header={t(\"GrossQuantity\")}\r\n                    editable={false}\r\n                    renderer={(cellData) =>\r\n                      convertNumberWithUOM(cellData.value)\r\n                    }\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"netquantity\"\r\n                    field=\"netquantity\"\r\n                    header={t(\"NetQuantity\")}\r\n                    editable={false}\r\n                    renderer={(cellData) =>\r\n                      convertNumberWithUOM(cellData.value)\r\n                    }\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"starttime\"\r\n                    field=\"starttime\"\r\n                    header={t(\"StartTime\")}\r\n                    editable={false}\r\n                    renderer={(cellData) => {\r\n                      return new Date(cellData.value).toLocaleString();\r\n                    }}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    key=\"endtime\"\r\n                    field=\"endtime\"\r\n                    header={t(\"EndTime\")}\r\n                    editable={false}\r\n                    renderer={(cellData) => {\r\n                      return new Date(cellData.value).toLocaleString();\r\n                    }}\r\n                  ></DataTable.Column>\r\n                  <DataTable.Column\r\n                    className=\"compColHeight\"\r\n                    renderer={expanderTemplate}\r\n                  />\r\n                </DataTable>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { RailTransloadingDetails } from \"../../UIBase/Details/RailTransloadingDetails\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport {\r\n  emptyMarineTransloading as emptyRailTransloading,\r\n  emptyRailReceipt,\r\n} from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport {\r\n  marineTransloadingDetailsColumns as railTransloadingDetailsColumns,\r\n  marineTransloadingAssociatedShipmentsColumns as railTransloadingAssociatedShipmentsColumns,\r\n} from \"../../../JS/DetailsTableValidationDef\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { getKeyByValue } from \"../../../JS/Utilities\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button } from \"@scuf/common\";\r\nclass RailTransloadingDetailsComposite extends Component {\r\n  state = {\r\n    railReceipt: lodash.cloneDeep(emptyRailReceipt),\r\n    railTransloading: lodash.cloneDeep(emptyRailTransloading),\r\n    modMarineReceipt: {},\r\n    railTransloadingAssociatedShipmentsColumns: lodash.cloneDeep(\r\n      railTransloadingAssociatedShipmentsColumns\r\n    ),\r\n    railTransloadingDetailsColumns: lodash.cloneDeep(\r\n      railTransloadingDetailsColumns\r\n    ),\r\n    isReadyToRender: false,\r\n    listOptions: {\r\n      shareholders: this.getShareholders(),\r\n      terminalCodes: this.props.terminalCodes,\r\n    },\r\n    dsCompartmentsBaseProduct: [],\r\n    dsTransloadingShipments: [],\r\n    dsTransloadingShipmentLoadingDetails: [],\r\n    saveEnabled: false,\r\n    selectedCompRow: [],\r\n    selectedAll: false,\r\n    isSelect: -1,\r\n    expandedRows: [],\r\n    selectCompartmentCode: \"\",\r\n  };\r\n  handleRowSelectionChange = (e) => {\r\n    this.setState({ selectedCompRow: e });\r\n  };\r\n  setCurrentList = (e, CompartmentCode) => {\r\n    try {\r\n      var selectCompartmentCode = lodash.cloneDeep(\r\n        this.state.selectCompartmentCode\r\n      );\r\n      var railTransloading = lodash.cloneDeep(this.state.railTransloading);\r\n      var railReceipt = lodash.cloneDeep(this.state.railReceipt);\r\n      if (selectCompartmentCode !== CompartmentCode) {\r\n        railTransloading.showLoadingDetails = false;\r\n        railReceipt.RailMarineReceiptCompartmentPlanList.forEach((element) => {\r\n          if (CompartmentCode === element.TrailerCode) {\r\n            railTransloading.selectCompartment.CompartmentCode =\r\n              element.TrailerCode;\r\n            railTransloading.selectCompartment.CompartmentProduct =\r\n              this.GetBaseProductForCompartment(element.SequenceNo);\r\n            railTransloading.selectCompartment.PlanQuantityUOM =\r\n              element.PlanQuantityUOM;\r\n            railTransloading.selectCompartment.PlannedQuantity =\r\n              element.PlannedQuantity.toLocaleString();\r\n            if (\r\n              element.UnloadedQuantityUOM !== undefined &&\r\n              element.UnloadedQuantityUOM !== null\r\n            )\r\n              railTransloading.selectCompartment.UnloadedQuantityUOM =\r\n                element.UnloadedQuantityUOM;\r\n            else railTransloading.selectCompartment.UnloadedQuantityUOM = \"\";\r\n            if (\r\n              element.UnloadedQuantity !== undefined &&\r\n              element.UnloadedQuantity !== null\r\n            )\r\n              railTransloading.selectCompartment.UnloadedQuantity =\r\n                element.UnloadedQuantity.toLocaleString();\r\n            else railTransloading.selectCompartment.UnloadedQuantity = \"0\";\r\n            railTransloading.selectCompartment.ReceiptCompartmentStatus =\r\n              getKeyByValue(\r\n                Constants.ReceiptCompartmentStatus,\r\n                element.ReceiptCompartmentStatus\r\n              );\r\n            this.setState({\r\n              isSelect: Number(e.currentTarget.getAttribute(\"index\")),\r\n              railTransloading: railTransloading,\r\n              selectCompartmentCode: CompartmentCode,\r\n            });\r\n            this.getReceiptShipments(\r\n              element.TrailerCode,\r\n              element.ReceiptCode,\r\n              element.CompartmentCode,\r\n              railTransloading\r\n            );\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingDetailsComposite:Error occured on setCurrentList\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  getReceiptShipments = (\r\n    TrailerCode,\r\n    ReceiptCode,\r\n    CompartmentCode,\r\n    railTransloading\r\n  ) => {\r\n    try {\r\n      var dsTransloadingShipments = [];\r\n      this.setState({\r\n        dsTransloadingShipments: dsTransloadingShipments,\r\n        railTransloading: railTransloading,\r\n      });\r\n      let obj = {\r\n        trailerCode: TrailerCode,\r\n        receiptCode: ReceiptCode,\r\n        compartmentCode: CompartmentCode,\r\n        transportationType: this.getTransportationType(),\r\n      };\r\n      axios(\r\n        RestAPIs.GetTransloadingShipments,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let dsTransloadingShipmentTable = result.EntityResult.Table;\r\n\r\n            if (\r\n              dsTransloadingShipmentTable != null &&\r\n              dsTransloadingShipmentTable.length > 0\r\n            ) {\r\n              railTransloading.showShipment = true;\r\n              dsTransloadingShipmentTable.forEach((element) => {\r\n                var loadedQuantity;\r\n                if (\r\n                  element.LoadedQty !== null &&\r\n                  element.LoadedQty !== undefined\r\n                ) {\r\n                  loadedQuantity =\r\n                    element.LoadedQty.toLocaleString() +\r\n                    \" \" +\r\n                    element.LoadedQuantityUOM;\r\n                }\r\n                var Quantity;\r\n                if (\r\n                  element.quantity !== null &&\r\n                  element.quantity !== undefined\r\n                ) {\r\n                  Quantity =\r\n                    element.quantity.toLocaleString() +\r\n                    \" \" +\r\n                    element.QuantityUOM;\r\n                }\r\n                dsTransloadingShipments.push({\r\n                  driver: element.driver,\r\n                  id: element.id,\r\n                  id1: element.id1,\r\n                  LoadedQty: loadedQuantity,\r\n                  LoadedQuantityUOM: element.LoadedQuantityUOM,\r\n                  quantity: Quantity,\r\n                  QuantityUOM: element.QuantityUOM,\r\n                  shipmentCode: element.shipmentCode,\r\n                  shipmentStatus: element.shipmentStatus,\r\n                  vehicle: element.vehicle,\r\n                });\r\n              });\r\n              this.setState({\r\n                dsTransloadingShipments: dsTransloadingShipments,\r\n                railTransloading: railTransloading,\r\n                isReadyToRender: true,\r\n              });\r\n            }\r\n          } else {\r\n            railTransloading.showShipment = false;\r\n            this.setState({\r\n              dsTransloadingShipments: dsTransloadingShipments,\r\n              railTransloading: railTransloading,\r\n              isReadyToRender: true,\r\n            });\r\n            console.log(\"Error in GetTransloadingShipments:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\r\n            \"Error while geting GetTransloadingShipments List:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingDetailsComposite:Error occured on getReceiptShipments\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  getShipmentLoadingDetails(\r\n    ShipmentCode,\r\n    ReceiptCode,\r\n    TrailerCode,\r\n    CompartmentCode\r\n  ) {\r\n    try {\r\n      var railTransloading = lodash.cloneDeep(this.state.railTransloading);\r\n      var dsTransloadingShipmentLoadingDetails = lodash.cloneDeep(\r\n        this.state.dsTransloadingShipmentLoadingDetails\r\n      );\r\n      var dsTransloadingShipments = lodash.cloneDeep(\r\n        this.state.dsTransloadingShipments\r\n      );\r\n      this.setState({\r\n        dsTransloadingShipmentLoadingDetails:\r\n          dsTransloadingShipmentLoadingDetails,\r\n        railTransloading: railTransloading,\r\n        dsTransloadingShipments,\r\n      });\r\n      let obj = {\r\n        shipmentCode: ShipmentCode,\r\n        trailerCode: TrailerCode,\r\n        receiptCode: ReceiptCode,\r\n        compartmentCode: CompartmentCode,\r\n        transportationType: this.getTransportationType(),\r\n      };\r\n      axios(\r\n        RestAPIs.GetShipmentLoadingDetails,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            dsTransloadingShipmentLoadingDetails = lodash.cloneDeep(\r\n              result.EntityResult.Table\r\n            );\r\n            if (\r\n              dsTransloadingShipmentLoadingDetails != null &&\r\n              dsTransloadingShipmentLoadingDetails.length > 0\r\n            ) {\r\n              railTransloading.showLoadingDetails = true;\r\n              this.setState({\r\n                dsTransloadingShipmentLoadingDetails:\r\n                  dsTransloadingShipmentLoadingDetails,\r\n                marineTransloading: railTransloading,\r\n                isReadyToRender: true,\r\n              });\r\n            }\r\n          } else {\r\n            railTransloading.showLoadingDetails = false;\r\n            this.setState({\r\n              dsTransloadingShipmentLoadingDetails:\r\n                dsTransloadingShipmentLoadingDetails,\r\n              marineTransloading: railTransloading,\r\n              isReadyToRender: true,\r\n            });\r\n            console.log(\r\n              \"Error in GetShipmentLoadingDetails:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\r\n            \"Error while geting GetShipmentLoadingDetails List:\",\r\n            error\r\n          );\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingDetailsComposite:Error occured on getShipmentLoadingDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.railReceipt.ReceiptCode !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined\r\n      )\r\n        this.GetTransloadingReceiptCompartments(nextProps.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.GetCompartmentsBaseProducts(this.props.selectedRow.ReceiptCode);\r\n      //this.getMarineReceipt(this.props.selectedRow.ReceiptCode);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getShareholders() {\r\n    return Utilities.transferListtoOptions(\r\n      this.props.userDetails.EntityResult.ShareholderList\r\n    );\r\n  }\r\n\r\n  GetCompartmentsBaseProducts(ReceiptCode) {\r\n    var transportationType = this.getTransportationType();\r\n    emptyRailTransloading.TransportationType = transportationType;\r\n    var listOptions = lodash.cloneDeep(this.state.listOptions);\r\n    emptyRailTransloading.QuantityUOM =\r\n      this.props.userDetails.EntityResult.PageAttibutes.DefaultUOMS.QuantityUOM;\r\n    emptyRailTransloading.TerminalCodes =\r\n      this.props.terminalCodes.length === 1\r\n        ? [...this.props.terminalCodes]\r\n        : [];\r\n    if (ReceiptCode === undefined) {\r\n      this.setState({\r\n        railTransloading: { ...emptyRailTransloading },\r\n        modrailTransloading: { ...emptyRailTransloading },\r\n        listOptions,\r\n        isReadyToRender: true,\r\n      });\r\n      return;\r\n    }\r\n    axios(\r\n      RestAPIs.GetRailCompartmentsBaseProducts +\r\n        \"?ReceiptCode=\" +\r\n        ReceiptCode +\r\n        \"&TransportationType=RAIL\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var railTransloading = lodash.cloneDeep(this.state.railTransloading);\r\n          var dsCompartmentsBaseProduct = lodash.cloneDeep(\r\n            result.EntityResult.Table\r\n          );\r\n          if (\r\n            Array.isArray(dsCompartmentsBaseProduct) &&\r\n            dsCompartmentsBaseProduct.length > 0\r\n          ) {\r\n            dsCompartmentsBaseProduct.forEach((element) => {\r\n              if (element.IsTransloading) {\r\n                if (railTransloading.lstCompartmentBPs.length === 0)\r\n                  railTransloading.lstCompartmentBPs.push(\r\n                    element.BaseProductCode\r\n                  );\r\n                if (\r\n                  railTransloading.lstCompartmentBPs.filter((com) => {\r\n                    return com.BaseProductCode !== element.BaseProductCode;\r\n                  }).length === 0\r\n                ) {\r\n                  railTransloading.lstCompartmentBPs.push(\r\n                    element.BaseProductCode\r\n                  );\r\n                }\r\n              }\r\n            });\r\n            railTransloading.PlanQuantityUOM =\r\n              dsCompartmentsBaseProduct[0].PlanQuantityUOM;\r\n            if (\r\n              dsCompartmentsBaseProduct[0].UnloadedQuantityUOM !== undefined &&\r\n              dsCompartmentsBaseProduct[0].UnloadedQuantityUOM !== null\r\n            )\r\n              railTransloading.UnloadedQuantityUOM =\r\n                dsCompartmentsBaseProduct[0].UnloadedQuantityUOM;\r\n            else\r\n              railTransloading.UnloadedQuantityUOM =\r\n                dsCompartmentsBaseProduct[0].PlanQuantityUOM;\r\n\r\n            let ltCompartmentBPs = [];\r\n            dsCompartmentsBaseProduct.forEach((dr) => {\r\n              if (dr.IsTransloading) {\r\n                let i = ltCompartmentBPs.findIndex(el => \r\n                  el === dr.BaseProductCode\r\n                );\r\n\r\n                if (i < 0) {\r\n                  ltCompartmentBPs.push(dr.BaseProductCode);\r\n                }\r\n              }\r\n            });\r\n            railTransloading.NoOfProducts = ltCompartmentBPs.length;\r\n          }\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            railTransloading: lodash.cloneDeep(railTransloading),\r\n            dsCompartmentsBaseProduct: lodash.cloneDeep(\r\n              dsCompartmentsBaseProduct\r\n            ),\r\n          });\r\n          this.getRailReceipt(ReceiptCode);\r\n        } else {\r\n          this.setState({\r\n            railTransloading: lodash.cloneDeep(emptyRailTransloading),\r\n            modrailTransloading: lodash.cloneDeep(emptyRailTransloading),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\r\n            \"Error in GetCompartmentsBaseProducts:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting GetCompartmentsBaseProducts:\", error);\r\n        //throw error;\r\n      });\r\n  }\r\n\r\n  getRailReceipt(ReceiptCode) {\r\n    var transportationType = this.getTransportationType();\r\n    emptyRailTransloading.TransportationType = transportationType;\r\n    emptyRailTransloading.Active = true;\r\n    emptyRailTransloading.QuantityUOM =\r\n      this.props.userDetails.EntityResult.PageAttibutes.DefaultUOMS.QuantityUOM;\r\n    emptyRailTransloading.TerminalCodes =\r\n      this.props.terminalCodes.length === 1\r\n        ? [...this.props.terminalCodes]\r\n        : [];\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.railReceiptCode,\r\n        value: ReceiptCode,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: transportationType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.railReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailReceipt,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var railTransloading = lodash.cloneDeep(this.state.railTransloading);\r\n          let railReceipt = result.EntityResult;\r\n          if (\r\n            this.props.selectedRow != null &&\r\n            this.props.selectedRow != undefined\r\n          ) {\r\n            railReceipt.ReceiptStatus = this.props.selectedRow.ReceiptStatus;\r\n          }\r\n          if (\r\n            railReceipt !== null &&\r\n            railReceipt.RailMarineReceiptCompartmentPlanList !== null\r\n          ) {\r\n            railReceipt.RailMarineReceiptCompartmentPlanList.forEach(\r\n              (element) => {\r\n                if (\r\n                  element.IsTransloading !== null &&\r\n                  element.IsTransloading !== \"\" &&\r\n                  element.IsTransloading\r\n                ) {\r\n                  var compartBP =\r\n                    element.TrailerCode +\r\n                    \"(\" +\r\n                    this.GetBaseProductForCompartment(element.SequenceNo) +\r\n                    \")\";\r\n                  railTransloading.lstCompartmentList.push({\r\n                    compartBP: compartBP,\r\n                    CompartmentCode: element.TrailerCode,\r\n                  });\r\n                  railTransloading.totalNoOfTransWagons += 1;\r\n                  railTransloading.totalPlannedQtyForTransloadingWagons +=\r\n                    element.PlannedQuantity;\r\n                  if (\r\n                    element.UnloadedQuantity !== undefined &&\r\n                    element.UnloadedQuantity !== null\r\n                  ) {\r\n                    railTransloading.totalUnloadedQtyForTransloadingWagons +=\r\n                      element.UnloadedQuantity;\r\n                  }\r\n                }\r\n                railTransloading.receiptPlannedQty += element.PlannedQuantity;\r\n              }\r\n            );\r\n          }\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            railReceipt: lodash.cloneDeep(result.EntityResult),\r\n            railTransloading: lodash.cloneDeep(railTransloading),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            railReceipt: lodash.cloneDeep(emptyRailTransloading),\r\n            modMarineReceipt: lodash.cloneDeep(emptyRailTransloading),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in getRailReceipt:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting railReceipt:\", error);\r\n        //throw error;\r\n      });\r\n  }\r\n\r\n  GetBaseProductForCompartment(seqNO) {\r\n    let bp = \"\";\r\n    var dsCompartmentsBaseProduct = lodash.cloneDeep(\r\n      this.state.dsCompartmentsBaseProduct\r\n    );\r\n    if (\r\n      Array.isArray(dsCompartmentsBaseProduct) &&\r\n      dsCompartmentsBaseProduct.length > 0\r\n    ) {\r\n      var dataRows = dsCompartmentsBaseProduct.filter((com, cindex) => {\r\n        return com.SequenceNo === seqNO;\r\n      });\r\n      if (dataRows !== undefined && dataRows.length > 0) {\r\n        bp = dataRows[0].BaseProductCode;\r\n      }\r\n    }\r\n    return bp;\r\n  }\r\n\r\n  getTransportationType() {\r\n    var transportationType = Constants.TransportationType.RAIL;\r\n    const { genericProps } = this.props;\r\n    if (\r\n      genericProps !== undefined &&\r\n      genericProps.transportationType !== undefined\r\n    ) {\r\n      transportationType = genericProps.transportationType;\r\n    }\r\n    return transportationType;\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailTransloadingDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleRowClick = (e) => {\r\n    try {\r\n      var dsCompartmentsBaseProduct = lodash.cloneDeep(\r\n        this.state.dsCompartmentsBaseProduct\r\n      );\r\n      let selectCompartmentCode = lodash.cloneDeep(\r\n        this.state.selectCompartmentCode\r\n      );\r\n      if (e.shipmentCode != null || e.shipmentCode.length > 0) {\r\n        dsCompartmentsBaseProduct.forEach((element) => {\r\n          if (selectCompartmentCode === element.TrailerCode) {\r\n            this.getShipmentLoadingDetails(\r\n              e.shipmentCode,\r\n              element.ReceiptCode,\r\n              element.TrailerCode,\r\n              element.CompartmentCode\r\n            );\r\n          }\r\n        });\r\n      }\r\n      this.setState({\r\n        dsCompartmentsBaseProduct: dsCompartmentsBaseProduct,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"CarrierCompanyComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n  toggleExpand = (data, open) => {\r\n    let expandedRows = this.state.expandedRows;\r\n    let expandedRowIndex = expandedRows.findIndex(\r\n      (item) => item.compSeqNo === data.compSeqNo\r\n    );\r\n    if (open) {\r\n      expandedRows.splice(expandedRowIndex, 1);\r\n    } else {\r\n      expandedRows.push(data);\r\n    }\r\n    this.setState({ expandedRows });\r\n  };\r\n  render() {\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader newEntityName=\"viewTransloading_PageTitle\"></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <RailTransloadingDetails\r\n            railReceipt={this.state.railReceipt}\r\n            railTransloading={this.state.railTransloading}\r\n            selectedCompRow={this.state.selectedCompRow}\r\n            dsCompartmentsBaseProduct={this.state.dsCompartmentsBaseProduct}\r\n            dsTransloadingShipmentLoadingDetails={\r\n              this.state.dsTransloadingShipmentLoadingDetails\r\n            }\r\n            dsTransloadingShipments={this.state.dsTransloadingShipments}\r\n            railTransloadingAssociatedShipmentsColumns={\r\n              this.state.railTransloadingAssociatedShipmentsColumns\r\n            }\r\n            railTransloadingDetailsColumns={\r\n              this.state.railTransloadingDetailsColumns\r\n            }\r\n            handleRowSelectionChange={this.handleRowSelectionChange}\r\n            setCurrentList={this.setCurrentList}\r\n            onRowClick={this.handleRowClick}\r\n            isSelect={this.state.isSelect}\r\n            expandedRows={this.state.expandedRows}\r\n            toggleExpand={this.toggleExpand}\r\n          ></RailTransloadingDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <ErrorBoundary>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div className=\"row\">\r\n                  <div className=\"col col-2\">\r\n                    <Button\r\n                      className=\"backButton\"\r\n                      onClick={this.props.onBack}\r\n                      content={t(\"Back\")}\r\n                    ></Button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </ErrorBoundary>\r\n        </ErrorBoundary>\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nconst mapReceiptToProps = (receipt) => {\r\n  return {\r\n    userActions: bindActionCreators(getUserDetails, receipt),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapReceiptToProps\r\n)(RailTransloadingDetailsComposite);\r\n\r\nRailTransloadingDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  genericProps: PropTypes.object.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;"],"names":["RailTransloadingDetails","_ref","railTransloading","railReceipt","dsCompartmentsBaseProduct","dsTransloadingShipments","dsTransloadingShipmentLoadingDetails","railTransloadingAssociatedShipmentsColumns","railTransloadingDetailsColumns","handleRowSelectionChange","selectedCompRow","setCurrentList","isSelect","onRowClick","expandedRows","toggleExpand","t","useTranslation","expanderTemplate","data","open","findIndex","x","compSeqNo","rowData","_jsx","onClick","className","children","Icon","root","name","rowExpansionTemplate","CompData","push","_jsxs","DataTable","Column","field","header","editable","renderer","cellData","convertNumberWithUOM","value","quantityString","undefined","quantityList","split","length","parseFloat","toLocaleString","TranslationConsumer","ReceiptCode","ReceiptStatus","totalNoOfTransWagons","NoOfProducts","receiptPlannedQty","PlanQuantityUOM","totalPlannedQtyForTransloadingWagons","totalUnloadedQtyForTransloadingWagons","UnloadedQuantityUOM","style","alignItems","border","minHeight","lstCompartmentList","map","item","i","index","e","CompartmentCode","compartBP","selectCompartment","CompartmentProduct","PlannedQuantity","UnloadedQuantity","ReceiptCompartmentStatus","display","showShipment","selectionMode","onCellClick","onSelectionChange","key","displayName","rowHeader","editFieldType","showLoadingDetails","Date","RailTransloadingDetailsComposite","Component","constructor","arguments","state","lodash","emptyRailReceipt","emptyRailTransloading","modMarineReceipt","isReadyToRender","listOptions","shareholders","this","getShareholders","terminalCodes","props","saveEnabled","selectedAll","selectCompartmentCode","setState","RailMarineReceiptCompartmentPlanList","forEach","element","TrailerCode","GetBaseProductForCompartment","SequenceNo","getKeyByValue","Constants","Number","currentTarget","getAttribute","getReceiptShipments","error","console","log","obj","trailerCode","receiptCode","compartmentCode","transportationType","getTransportationType","axios","RestAPIs","Utilities","tokenDetails","tokenInfo","then","response","result","IsSuccess","dsTransloadingShipmentTable","EntityResult","Table","loadedQuantity","Quantity","LoadedQty","LoadedQuantityUOM","quantity","QuantityUOM","driver","id","id1","shipmentCode","shipmentStatus","vehicle","ErrorList","catch","handleReset","handleRowClick","getShipmentLoadingDetails","expandedRowIndex","splice","ShipmentCode","marineTransloading","componentWillReceiveProps","nextProps","selectedRow","Common_Code","GetTransloadingReceiptCompartments","componentDidMount","userDetails","IsArchived","GetCompartmentsBaseProducts","ShareholderList","TransportationType","PageAttibutes","DefaultUOMS","TerminalCodes","Array","isArray","IsTransloading","lstCompartmentBPs","BaseProductCode","filter","com","ltCompartmentBPs","dr","el","getRailReceipt","modrailTransloading","Active","keyCode","KeyCodes","ShareHolderCode","selectedShareholder","keyDataCode","seqNO","bp","dataRows","cindex","RAIL","genericProps","render","ErrorBoundary","TMDetailsHeader","newEntityName","Button","onBack","content","LoadingPage","message","connect","getUserDetails","TokenAuth","receipt","userActions","bindActionCreators","entityCode","popUpContents","margin","Popup","fieldName","fieldValue","marginLeft","size","position","List","Content","defaultProps"],"sourceRoot":""}