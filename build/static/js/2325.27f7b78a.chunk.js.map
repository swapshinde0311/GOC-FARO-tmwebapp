{"version":3,"file":"static/js/2325.27f7b78a.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/UIBase/Details/PastReceiptsDetail.jsx","Components/Composite/Entity/PastReceiptsComposite.jsx","Components/UIBase/Common/TMReportViewer.jsx","Components/UIBase/Details/ReportDetails.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Input, Icon } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport dayjs from \"dayjs\";\r\n\r\nPastReceiptsDetail.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    selectedDate: PropTypes.object.isRequired,\r\n    handleDateChange: PropTypes.func.isRequired,\r\n    onSearchChange: PropTypes.func.isRequired,\r\n    handleViewBOD: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport function PastReceiptsDetail({\r\n    data,\r\n    selectedDate,\r\n    handleDateChange,\r\n    onSearchChange,\r\n    handleViewBOD,\r\n}) {\r\n\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"detailsContainer mobileContainDetail\">\r\n\r\n                    <div id=\"Date mobilePastDate\">\r\n                        <div className=\"slotBlocksDispaly\" style={{ justifyContent: \"center\" }}>\r\n                            <div>\r\n                                <Icon\r\n                                    onClick={() => handleDateChange(-1)}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    root=\"common\"\r\n                                    name=\"caret-left\"\r\n                                    exactSize={24}\r\n                                ></Icon>\r\n                            </div>\r\n                            <div className=\"mobile-slot-date-span\">\r\n                                <span>{selectedDate.format(\"DD MMM YYYY\")}</span>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <Icon\r\n                                    onClick={() => handleDateChange(1)}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    root=\"common\"\r\n                                    name=\"caret-right\"\r\n                                    exactSize={24}\r\n                                ></Icon>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mobilePastSearch\">\r\n                        <div className=\"row\" >\r\n\r\n                            <div className=\"col-12 col-md-12 col-lg-12\">\r\n                                <Input style={{ border: \"none\" }} className=\"input-example mobile-input\" placeholder={t(\"Common_Search\")}\r\n                                    icon={<Icon name=\"search\" root=\"common\" size=\"small\" />} onChange={(data) => onSearchChange(data)} fluid={true} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        data.length > 0 ?\r\n                            data.map((item, index) => {\r\n                                return <div className=\"mobilePastTableHeader\">\r\n                                    <div className=\"row mobilePastHeaderRow\" >\r\n\r\n                                        <div className=\"col-4 col-md-4 col-lg-4\">\r\n                                            {t(\"Common_Code\")}\r\n                                        </div>\r\n                                        <div className=\"col-4 col-md-4 col-lg-4\">\r\n                                            {t(\"ViewShipment_Vehicle\")}\r\n                                        </div>\r\n                                        <div className=\"col-4 col-md-4 col-lg-4\">\r\n                                            {t(\"ViewShipment_Shareholder\")}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row mobilePastHeaderRowContent\">\r\n                                        <div className=\"col-4 col-md-4 col-lg-4\">\r\n                                            {item.Code}\r\n                                        </div>\r\n                                        <div className=\"col-4 col-md-4 col-lg-4\">\r\n                                            {item.VehicleCode}\r\n                                        </div>\r\n                                        <div className=\"col-4 col-md-4 col-lg-4\">\r\n                                            {item.ShareHolder}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mobilepastTableBottom\">\r\n                                        <div className=\"col-8 col-md-8 col-lg-8 mobile-past-loaded-date\">\r\n                                            {t(\"ReceiptByCompartmentList_UnloadedDate\") + \" : \" + dayjs(item.ReceiptByCompartmentList_UnloadedDate).format(\"DD MMM YYYY\")}\r\n                                        </div>\r\n                                        <div className=\"col-4 col-md-4 col-lg-4\">\r\n                                            <Icon\r\n                                                onClick={() => handleViewBOD(item.Code, item.ShareHolder)}\r\n                                                style={{ cursor: \"pointer\" }}\r\n                                                root=\"common\"\r\n                                                name=\"document-standard\"\r\n\r\n                                                exactSize={20}\r\n                                            ></Icon> <span className=\"mobilePastBOLButton\" onClick={() => handleViewBOD(item.Code, item.ShareHolder)}>{t(\"Report_TMBOD\")}</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            }) : <div className=\"col-12 col-md-12 col-lg-12\" style={{ textAlign: \"center\" }}>\r\n                                {t(\"MarineDashboard_NoDataAvailable\")}\r\n                            </div>\r\n\r\n                    }\r\n\r\n\r\n\r\n\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../../CSS/styles.css\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PastReceiptsDetail } from \"../../UIBase/Details/PastReceiptsDetail\";\r\nimport ReportDetails from \"../../UIBase/Details/ReportDetails\";\r\nimport dayjs from \"dayjs\";\r\nimport { Icon } from '@scuf/common';\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nclass PastReceiptsComposite extends Component {\r\n    state = {\r\n\r\n        data: [],\r\n        searchList: [],\r\n        searchText: \"\",\r\n        viewBODCode: \"\",\r\n        viewBODShareholder: \"\",\r\n        showReport: false,\r\n        selectedDate: dayjs()\r\n            .set(\"hour\", 0)\r\n            .set(\"minute\", 0)\r\n            .set(\"second\", 0)\r\n            .set(\"millisecond\", 0),\r\n    };\r\n\r\n    componentDidMount() {\r\n        try {\r\n            this.getPastReceiptsListForRole();\r\n\r\n        } catch (error) {\r\n            console.log(\r\n                \"PastReceiptsComposite:Error occured on ComponentDidMount\",\r\n                error\r\n            );\r\n        }\r\n\r\n    }\r\n    componentWillUnmount = () => {\r\n\r\n    }\r\n\r\n    getPastReceiptsListForRole = () => {\r\n        try {\r\n            axios(\r\n                RestAPIs.GetPastReceiptListForRole,\r\n                Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n            )\r\n                .then((response) => {\r\n\r\n                    let data = response.data;\r\n                    if (data.IsSuccess === true) {\r\n                        this.setState({ data: data.EntityResult.Table }, () => { this.onSearchChange(\"\"); });\r\n                    }\r\n\r\n                    //this.setState({ menu: json.menu},()=>this.updateMenu)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error in getPastReceiptsListForRole API:\", error);\r\n                });\r\n        } catch (error) {\r\n            console.log(\r\n                \"PastReceiptsComposite:Error occured on getPastReceiptsListForRole\",\r\n                error\r\n            );\r\n        }\r\n    }\r\n\r\n    onSearchChange = (data) => {\r\n        try {\r\n            let dataset = this.state.data;\r\n            let selectedDate = this.state.selectedDate.format(\"DD MMM YYYY\");\r\n            let results = [];\r\n            if (data === \"\") {\r\n\r\n                results = dataset.filter(element => {\r\n                    return dayjs(element.ReceiptByCompartmentList_UnloadedDate).format(\"DD MMM YYYY\") === selectedDate;\r\n                });\r\n\r\n            } else {\r\n\r\n                results = dataset.filter(element => {\r\n                    return dayjs(element.ReceiptByCompartmentList_UnloadedDate).format(\"DD MMM YYYY\") === selectedDate && element.Code.toLowerCase().includes(data.toLowerCase());\r\n                });\r\n            }\r\n            this.setState({ searchList: results, searchText: data });\r\n        } catch (error) {\r\n            console.log(\r\n                \"PastReceiptsComposite:Error occured on onSearchChange\",\r\n                error\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    handleDateChange = (duration) => {\r\n        try {\r\n            let selectedDate = this.state.selectedDate;\r\n            selectedDate = selectedDate.add(duration, \"day\");\r\n            this.setState({\r\n                selectedDate\r\n            }, () => { this.onSearchChange(this.state.searchText); });\r\n\r\n        } catch (error) {\r\n            console.log(\"error in handleDateChanage\", error);\r\n        }\r\n    }\r\n\r\n    handleViewBOD = (Code, ShareHolder) => {\r\n        //this.handleAuthenticationClose();\r\n        this.setState({ viewBODCode: Code, viewBODShareholder: ShareHolder });\r\n        if (this.reportServiceURI === undefined) {\r\n            axios(\r\n                RestAPIs.GetReportServiceURI,\r\n                Utilities.getAuthenticationObjectforGet(\r\n                    this.props.tokenDetails.tokenInfo\r\n                )\r\n            ).then((response) => {\r\n                if (response.data.IsSuccess) {\r\n                    this.reportServiceURI = response.data.EntityResult;\r\n                    this.setState({ showReport: true });\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({ showReport: true });\r\n        }\r\n    };\r\n\r\n    handleModalBack = () => {\r\n        this.setState({ showReport: false });\r\n    };\r\n    renderModal() {\r\n        let path = null;\r\n        if (this.props.userDetails.EntityResult.IsArchived) {\r\n            path = \"TM/\" + Constants.TMReportArchive + \"/TMBOD\";\r\n        } else {\r\n            path = \"TM/\" + Constants.TMReports + \"/TMBOD\";\r\n        }\r\n\r\n        let paramValues = {\r\n            Culture: this.props.userDetails.EntityResult.UICulture,\r\n            Shareholder: this.state.viewBODShareholder,\r\n            ReceiptCode: this.state.viewBODCode,\r\n        };\r\n\r\n        return (\r\n            <ReportDetails\r\n                showReport={this.state.showReport}\r\n                handleBack={this.handleModalBack}\r\n                handleModalClose={this.handleModalBack}\r\n                // proxyServerHost=\"http://epksr5115dit:3625/TMWebAPI/\"\r\n                proxyServerHost={RestAPIs.WebAPIURL}\r\n                reportServiceHost={this.reportServiceURI}\r\n                filePath={path}\r\n                parameters={paramValues}\r\n            />\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <TranslationConsumer>\r\n                {(t) => (\r\n                    <div>\r\n                        <ErrorBoundary>\r\n                            <div className=\"ui breadcrumb pl-1 mobile-bread-crumb mobile-align-items-start\">\r\n                                <div className=\"section pl-1 mt-sm-2 mt-lg-0\">\r\n                                    <span>\r\n                                        {t(\"PastReceipts\")}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </ErrorBoundary>\r\n                        <ErrorBoundary>\r\n                            <PastReceiptsDetail data={this.state.searchList}\r\n                                selectedDate={this.state.selectedDate}\r\n                                onSearchChange={this.onSearchChange}\r\n                                handleDateChange={this.handleDateChange}\r\n                                handleViewBOD={this.handleViewBOD}>\r\n                            </PastReceiptsDetail>\r\n                            {Object.keys(this.state.searchList).length > 0\r\n                                ? this.renderModal()\r\n                                : \"\"}\r\n                        </ErrorBoundary>\r\n                    </div >\r\n                )}\r\n            </TranslationConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userDetails: state.getUserDetails.userDetails,\r\n        tokenDetails: state.getUserDetails.TokenAuth,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PastReceiptsComposite);\r\n\r\nPastReceiptsComposite.propTypes = {\r\n    activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport * as WjCore from \"@grapecity/wijmo\";\r\nimport { ReportViewer } from \"@grapecity/wijmo.react.viewer\";\r\nimport * as wjViewer from \"@grapecity/wijmo.viewer\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { connect } from \"react-redux\";\r\n\r\nTMReportViewer.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\n\r\nTMReportViewer.defaultProps = {\r\n  parameters: {},\r\n};\r\n\r\nWjCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nfunction TMReportViewer({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  parameters,\r\n  filePath,\r\n  ...props\r\n}) {\r\n  //   const [proxyHost, setProxyHost] = useState(\r\n  //     \"http://localhost:8888/TMWebProxyAPI/\"\r\n  //   );\r\n  //   const [reportServiceHost, setReportServiceHost] = useState(\r\n  //     \"http://localhost:5632/\"\r\n  //   );\r\n  //   const [reportUrl, setReportUrl] = useState(proxyHost + \"api/report\");\r\n  //   const [filePath, setFilePath] = useState(\r\n  //     \"TM/\" + \"TMReports/\" + \"CarrierCompanyReport\"\r\n  //   );\r\n  const reportUrl = proxyServerHost + \"api/report\";\r\n  //const filePath = \"TM/\" + \"TMReports/\" + reportName;\r\n\r\n  const beforeXhrRequestSend = (s, event) => {\r\n    // use this event for Authorization purpose\r\n    const prevBeforeSend = event.settings.beforeSend;\r\n    event.settings.beforeSend = function (xhr) {\r\n      prevBeforeSend && prevBeforeSend(xhr);\r\n      //here you may add the params for XMLHttpRequest as required\r\n      if (!props.userDetails.EntityResult.IsWebPortalUser)\r\n        xhr.withCredentials = true;\r\n      if (xhr.URL_DEBUG.indexOf(\"parameters\") > -1) {\r\n        xhr.onreadystatechange = function () {\r\n          if (this.readyState === 4 && this.status === 200) {\r\n            var host = s.hostElement;\r\n            setTimeout(() => {\r\n              var splitter = host.querySelector(\".wj-viewer-splitter\");\r\n              var param = host\r\n                .querySelector(\".wj-viewer-tabsleft\")\r\n                .querySelectorAll(\"li\")[2];\r\n              if (!param.disabled) {\r\n                param.className = \"hidden\";\r\n                splitter.click();\r\n              }\r\n            }, 1000);\r\n          }\r\n        };\r\n      }\r\n    };\r\n  };\r\n  let header = {\r\n    Authorization: \"Bearer \" + props.tokenDetails.tokenInfo,\r\n  };\r\n\r\n  // let header = {\r\n  //   Authorization: \"Bearer \" + \"fiewjfjewifi\",\r\n  // };\r\n\r\n  const initViewer = (s, event) => {\r\n    wjViewer._ReportService.prototype.load = function (data) {\r\n      var _this = this;\r\n      var promise = new wjViewer._Promise();\r\n      if (!this._checkReportController(promise)) {\r\n        return promise;\r\n      }\r\n      this.httpRequest(this._getReportInstancesUrl(), {\r\n        method: \"POST\",\r\n        data: data,\r\n      }).then(\r\n        function (xhr) {\r\n          var v = wjViewer._parseReportExecutionInfo(xhr.responseText);\r\n          _this._instanceId = v.id;\r\n          _this._status = wjViewer._ExecutionStatus.loaded;\r\n          _this._outlinesLocation = v.outlinesLocation;\r\n          _this._statusLocation = v.statusLocation.replace(\r\n            reportServiceHost,\r\n            proxyServerHost\r\n          );\r\n          _this._pageSettingsLocation = v.pageSettingsLocation;\r\n          _this._featuresLocation = v.featuresLocation;\r\n          _this._parametersLocation = v.parametersLocation;\r\n          promise.resolve(v);\r\n        },\r\n        function (xhr) {\r\n          promise.reject(_this._getError(xhr));\r\n        }\r\n      );\r\n      return promise;\r\n    };\r\n  };\r\n\r\n  //console.log(props.userDetails.EntityResult.IsWebPortalUser, header);\r\n  return (\r\n    <div>\r\n      {props.userDetails.EntityResult.IsWebPortalUser ? (\r\n        <div>\r\n          <ReportViewer\r\n            requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <ReportViewer\r\n            //requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TMReportViewer);\r\n","import React from \"react\";\r\nimport { Modal, Button, Header } from \"@scuf/common\";\r\nimport TMReportViewer from \"../Common/TMReportViewer\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nReportDetails.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  filePath: PropTypes.string.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  showReport: PropTypes.bool.isRequired,\r\n  handleModalClose: PropTypes.func.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\nReportDetails.defaultProps = {\r\n  parameters: {},\r\n};\r\nexport default function ReportDetails({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  filePath,\r\n  handleBack,\r\n  showReport,\r\n  handleModalClose,\r\n  parameters,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <Modal\r\n      style={{ padding: \"0px\" }}\r\n      size=\"fullscreen\"\r\n      open={showReport}\r\n      // onClose={handleModalClose}\r\n    >\r\n      <div>\r\n        <Header title={t(\"Header_TerminalManager\")} menu={false} />\r\n        <TMReportViewer\r\n          proxyServerHost={proxyServerHost}\r\n          reportServiceHost={reportServiceHost}\r\n          filePath={filePath}\r\n          parameters={parameters}\r\n        />\r\n        <div style={{ marginTop: \"10px\", marginLeft: \"20px\" }}>\r\n          <Button\r\n            className=\"backButton\"\r\n            onClick={handleBack}\r\n            content={t(\"Report_Back\")}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","PastReceiptsDetail","data","selectedDate","handleDateChange","onSearchChange","handleViewBOD","id","cursor","exactSize","format","Input","border","icon","fluid","index","Code","VehicleCode","ShareHolder","dayjs","ReceiptByCompartmentList_UnloadedDate","textAlign","PastReceiptsComposite","Component","constructor","arguments","state","searchList","searchText","viewBODCode","viewBODShareholder","showReport","set","componentWillUnmount","getPastReceiptsListForRole","axios","RestAPIs","this","props","tokenDetails","tokenInfo","then","response","IsSuccess","setState","EntityResult","Table","catch","error","console","log","dataset","results","filter","toLowerCase","includes","duration","reportServiceURI","handleModalBack","componentDidMount","renderModal","path","userDetails","IsArchived","Constants","paramValues","Culture","UICulture","Shareholder","ReceiptCode","ReportDetails","handleBack","handleModalClose","proxyServerHost","reportServiceHost","filePath","parameters","render","Object","keys","connect","getUserDetails","TokenAuth","TMReportViewer","reportUrl","beforeXhrRequestSend","s","event","prevBeforeSend","settings","beforeSend","xhr","IsWebPortalUser","withCredentials","URL_DEBUG","indexOf","onreadystatechange","readyState","status","host","hostElement","setTimeout","splitter","querySelector","param","querySelectorAll","click","header","Authorization","initViewer","wjViewer","prototype","load","_this","promise","_checkReportController","httpRequest","_getReportInstancesUrl","method","v","responseText","_instanceId","_status","loaded","_outlinesLocation","outlinesLocation","_statusLocation","statusLocation","replace","_pageSettingsLocation","pageSettingsLocation","_featuresLocation","featuresLocation","_parametersLocation","parametersLocation","resolve","reject","_getError","ReportViewer","requestHeaders","height","serviceUrl","initialized","beforeSendRequest","WjCore","useTranslation","title","menu"],"sourceRoot":""}