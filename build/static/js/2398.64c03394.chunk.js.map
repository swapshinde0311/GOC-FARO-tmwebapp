{"version":3,"file":"static/js/2398.64c03394.chunk.js","mappings":"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","sources":["Components/UIBase/Common/SiteTreeViewUserActions.jsx","Components/Composite/Common/SiteTreeViewUserActionsComposite.jsx","Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Common/WijmoGrid.jsx","Components/Composite/Common/WijmoGridComposite.jsx","Components/UIBase/Details/PipelineHeaderSiteViewDetails.jsx","Components/Composite/Details/PipelineHeaderSiteViewDetailsComposite.jsx","Components/Composite/Summary/PipelineHeaderSiteViewSummaryComposite.jsx","Components/Composite/Entity/PipelineHeaderSiteViewComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/FunctionGroups.js","JS/KeyCodes.js","JS/functionalUtilities.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Breadcrumb, Select } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\n\r\nSiteTreeViewUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    terminal: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  terminals: PropTypes.array.isRequired,\r\n  selectedTerminal: PropTypes.string.isRequired,\r\n  onTerminalChange: PropTypes.func.isRequired,\r\n};\r\nSiteTreeViewUserActions.defaultProps = {\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  terminals: [],\r\n  selectedTerminal: \"\",\r\n};\r\nexport function SiteTreeViewUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  terminals,\r\n  selectedTerminal,\r\n  onTerminalChange,\r\n  handleBreadCrumbClick,\r\n}) {\r\n  function getTerminalDropdownOptions() {\r\n    return Utilities.transferListtoOptions(terminals);\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  key={parentitem.itemCode}\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"row\" style={{ marginTop: \"10px\" }}>\r\n      <div className=\"col-12 col-sm-12 col-md-12 col-lg-5 col-xl-7\">\r\n        <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n      </div>\r\n      <div className=\"col-12 col-sm-12 col-md-12 col-lg-7 col-xl-5\">\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <div className=\"compartmentIcon\">\r\n              <div>\r\n                <h4 className=\"shrText\">{t(\"Common_Terminal\")}:</h4>\r\n              </div>\r\n              <div className=\"opSelect\">\r\n                <Select\r\n                  placeholder={t(\"Common_Terminal\")}\r\n                  value={selectedTerminal}\r\n                  disabled={!operationsVisibilty.terminal}\r\n                  options={getTerminalDropdownOptions()}\r\n                  onChange={(value) => onTerminalChange(value)}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </TranslationConsumer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { SiteTreeViewUserActions } from \"../../UIBase/Common/SiteTreeViewUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\n\r\nexport function SiteTreeViewUserActionsComposite({\r\n  breadcrumbItem,\r\n  operationsVisibilty,\r\n  terminals,\r\n  selectedTerminal,\r\n  onTerminalChange,\r\n  handleBreadCrumbClick,\r\n}) {\r\n  return (\r\n    <SiteTreeViewUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      terminals={terminals}\r\n      selectedTerminal={selectedTerminal}\r\n      onTerminalChange={onTerminalChange}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n    ></SiteTreeViewUserActions>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as wjCore from \"@grapecity/wijmo\";\r\nimport * as wjGrid from \"@grapecity/wijmo.grid\";\r\nimport {\r\n  FlexGrid,\r\n  FlexGridColumn,\r\n  FlexGridCellTemplate,\r\n} from \"@grapecity/wijmo.react.grid\";\r\nimport { FlexGridFilter } from \"@grapecity/wijmo.react.grid.filter\";\r\nimport { Operator } from \"@grapecity/wijmo.grid.filter\";\r\nimport { FlexGridSearch } from \"@grapecity/wijmo.react.grid.search\";\r\nimport { CollectionView } from \"@grapecity/wijmo\";\r\nimport { CollectionViewNavigator, ListBox } from \"@grapecity/wijmo.react.input\";\r\nimport { Selector } from \"@grapecity/wijmo.grid.selector\";\r\nimport { HeadersVisibility } from \"@grapecity/wijmo.grid\";\r\nimport { showPopup, hidePopup, PopupPosition } from \"@grapecity/wijmo\";\r\nimport * as wjcGridXlsx from \"@grapecity/wijmo.grid.xlsx\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport { GroupPanel } from \"@grapecity/wijmo.react.grid.grouppanel\";\r\nimport { Button, Card, Popup } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as loadash from \"lodash\";\r\nimport \"@grapecity/wijmo.touch\";\r\n\r\nconst WijmoGrid = (props) => {\r\n  const [flex, setFlex] = useState(null);\r\n  const [translator] = useTranslation();\r\n  const _getData = (pageLength) => {\r\n    return new CollectionView(props.sourceData, {\r\n      pageSize: pageLength,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState(_getData(props.rowsPerPage));\r\n  const theGrid = React.createRef();\r\n  const theSearch = React.createRef();\r\n  const gridFilter = React.createRef();\r\n  const pagingComponent = React.createRef();\r\n  const colPicker = React.useRef();\r\n\r\n  // to keep track of selected rows\r\n  const selectedRows = React.useRef(props.selectionRequired ? [] : null);\r\n\r\n  // to initialize grid checkbox selection\r\n  let selector = null;\r\n\r\n  //Initialize grid\r\n  const gridInitialized = (grid) => {\r\n    try {\r\n      // localize grid filter\r\n      customizeFilterConditions();\r\n\r\n      if (props.onRowClick) {\r\n        // add row click event handler\r\n        grid.addEventListener(grid.hostElement, \"click\", (e) => {\r\n          let ht = grid.hitTest(e);\r\n          // condition to check if cell is not a grouped cell and a data cell\r\n          if (\r\n            ht.target.closest(\".wj-cell\") &&\r\n            ![...ht.target.closest(\".wj-cell\").classList].includes(\r\n              \"wj-group\"\r\n            ) &&\r\n            ht.cellType === wjGrid.CellType.Cell\r\n          ) {\r\n            // fetch row data\r\n            const rowData = grid.rows[ht.row].dataItem;\r\n            props.onRowClick(rowData);\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      grid.select(-1, -1);\r\n\r\n      setFlex(grid);\r\n      if (props.selectionRequired) {\r\n        // enable checkbox selection\r\n        selector = new Selector(grid, {\r\n          itemChecked: (s, e) => {\r\n            // if only single checkbox selection is required\r\n            if (props.singleSelection) {\r\n              grid.rows\r\n                .filter((row) => {\r\n                  return (\r\n                    row.isSelected &&\r\n                    selectedRows.current.filter((item) =>\r\n                      loadash.isEqual(item, row.dataItem)\r\n                    ).length === 1\r\n                  );\r\n                })\r\n                .forEach((row) => {\r\n                  row.isSelected = false;\r\n                });\r\n            }\r\n\r\n            // pass row data as parameter to checkbox selection handler\r\n            props.onSelectionHandle(\r\n              grid.rows\r\n                .filter((r) => r.isSelected)\r\n                .map((selectedRow) => selectedRow.dataItem)\r\n            );\r\n          },\r\n          // if only single checkbox selection is required\r\n          showCheckAll: !props.singleSelection,\r\n        });\r\n\r\n        let theGrid = selector.column.grid;\r\n        selector.column = theGrid.rowHeaders.columns[0];\r\n        theGrid.headersVisibility = HeadersVisibility.All;\r\n        theGrid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in gridInitialized: \" + error);\r\n    }\r\n  };\r\n\r\n  //Update grid when data changes\r\n  useEffect(() => {\r\n    try {\r\n      if (theGrid != null) {\r\n        //Connect search to the grid\r\n        let grid = theGrid.current.control;\r\n        let search = theSearch.current.control;\r\n        search.grid = grid;\r\n      }\r\n\r\n      setData(_getData(props.rowsPerPage));\r\n    } catch (error) {\r\n      console.log(\"Error in grid update:\", error);\r\n    }\r\n  }, [props.sourceData]);\r\n\r\n  // Pre-select grid rows based on selectedItems props\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && props.selectionRequired) {\r\n        // clear the selectedRows array\r\n        selectedRows.current.length = 0;\r\n        // add selectedItems array items to selectedRows\r\n        selectedRows.current.push(...props.selectedItems);\r\n\r\n        flex.rows.forEach((row) => {\r\n          if (\r\n            props.selectedItems.filter((item) =>\r\n              loadash.isEqual(item, row.dataItem)\r\n            ).length === 1\r\n          ) {\r\n            // checks the row checkbox\r\n            row.isSelected = true;\r\n          } else {\r\n            // unchecks the row checkbox\r\n            row.isSelected = false;\r\n          }\r\n        });\r\n\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in pre-selecting rows:\", error);\r\n    }\r\n  }, [props.selectedItems]);\r\n\r\n  //Load the state of grid\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(props.parentComponent + \"GridState\") &&\r\n        localStorage.getItem(props.parentComponent + \"GridState\") !== \"null\" &&\r\n        flex\r\n      ) {\r\n        // restore grid settings\r\n        let gridState = JSON.parse(\r\n          localStorage.getItem(props.parentComponent + \"GridState\")\r\n        );\r\n        let newFlex = flex;\r\n\r\n        // restore column picker settings\r\n        newFlex.columns.forEach((col) => {\r\n          let matchedCol = gridState.columns.filter(\r\n            (colSetting) => colSetting.binding === col.binding\r\n          );\r\n          col.visible =\r\n            matchedCol.length > 0 ? matchedCol[0].visible : col.visible;\r\n        });\r\n\r\n        // restore filter settings\r\n        gridFilter.current.control.filterDefinition =\r\n          gridState.filterDefinition;\r\n\r\n        // restore sort settings\r\n        newFlex.collectionView.deferUpdate(() => {\r\n          newFlex.collectionView.sortDescriptions.clear();\r\n          for (let i = 0; i < gridState.sortDescriptions.length; i++) {\r\n            let sortDesc = gridState.sortDescriptions[i];\r\n            newFlex.collectionView.sortDescriptions.push(\r\n              new wjCore.SortDescription(sortDesc.property, sortDesc.ascending)\r\n            );\r\n          }\r\n        });\r\n\r\n        // restore grouping settings\r\n        for (let i = 0; i < gridState.groupDescriptions.length; i++) {\r\n          newFlex.collectionView.groupDescriptions.push(\r\n            new wjCore.PropertyGroupDescription(gridState.groupDescriptions[i])\r\n          );\r\n          newFlex.columns.filter(\r\n            (col) => col.binding === gridState.groupDescriptions[i]\r\n          )[0].visible = false;\r\n        }\r\n\r\n        if (\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") &&\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") !== \"null\"\r\n        ) {\r\n          let gridSessionState = JSON.parse(\r\n            sessionStorage.getItem(props.parentComponent + \"GridState\")\r\n          );\r\n          // restore paging settings\r\n          newFlex.collectionView.moveToPage(\r\n            newFlex.collectionView.pageCount - 1 >= gridSessionState.pageIndex\r\n              ? gridSessionState.pageIndex\r\n              : newFlex.collectionView.pageCount - 1\r\n          );\r\n\r\n          // restore search settings\r\n          if (theSearch) {\r\n            theSearch.current.control.text = gridSessionState.searchText;\r\n          }\r\n        }\r\n\r\n        setFlex(newFlex);\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in restoring local storage settings: \", error);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set Column Picker Properties\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && colPicker.current && props.columnPickerRequired) {\r\n        colPicker.current.itemsSource = flex.columns;\r\n        colPicker.current.checkedMemberPath = \"visible\";\r\n        colPicker.current.displayMemberPath = \"header\";\r\n        colPicker.current.lostFocus.addHandler(() => {\r\n          hidePopup(colPicker.current.hostElement);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in initializing column picker properties:\", error);\r\n    }\r\n  }, [colPicker.current]);\r\n\r\n  useEffect(() => {\r\n    // remove column picker pop-up on component unmount\r\n    return () => {\r\n      if (props.columnPickerRequired && colPicker.current) {\r\n        hidePopup(colPicker.current.hostElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // export grid data to excel\r\n  const exportExcel = () => {\r\n    try {\r\n      let gridFlex = flex;\r\n      //to download all rows from all pages\r\n      gridFlex.itemsSource.pageSize = props.sourceData.length;\r\n      setFlex(gridFlex);\r\n      wjcGridXlsx.FlexGridXlsxConverter.saveAsync(\r\n        flex,\r\n        {\r\n          includeColumnHeaders: true,\r\n          includeCellStyles: false,\r\n          formatItem: null,\r\n        },\r\n        props.exportFileName\r\n      );\r\n\r\n      //to restore paging\r\n      gridFlex.itemsSource.pageSize = props.rowsPerPage;\r\n      setFlex(gridFlex);\r\n    } catch (error) {\r\n      console.log(\"Error in export grid to excel:\", error);\r\n    }\r\n  };\r\n\r\n  const terminalPopOver = (terminalCodes) => {\r\n    if (terminalCodes.split(\",\").length > props.terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={terminalCodes.split(\",\").length}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return terminalCodes;\r\n    }\r\n  };\r\n\r\n  const displayValues = (value, columnDetail) => {\r\n    if (columnDetail !== undefined && columnDetail !== null) {\r\n      if (typeof value === \"boolean\" || columnDetail.Name === \"Active\") {\r\n        if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n        else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n      } else if (value === \"\" || value === null || value === undefined) {\r\n        return value;\r\n      } else if (\r\n        (columnDetail.Name === \"TerminalCodes\" ||\r\n          columnDetail.PopOver === \"1\") &&\r\n        value !== null\r\n      ) {\r\n        return terminalPopOver(value);\r\n      }\r\n      // var columnType = columnDetails.find(function (detail) {\r\n      //   if (detail.Name === field) {\r\n      //     return detail;\r\n      //   }\r\n      // });\r\n      else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"DateTime\"\r\n      ) {\r\n        return (\r\n          new Date(value).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(value).toLocaleTimeString()\r\n        );\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Date\"\r\n      ) {\r\n        return new Date(value).toLocaleDateString();\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Time\"\r\n      ) {\r\n        return new Date(value).toLocaleTimeString();\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  //Initialize Column Picker\r\n  const initializedPicker = (picker) => {\r\n    if (props.columnPickerRequired) {\r\n      colPicker.current = picker;\r\n    }\r\n  };\r\n\r\n  // Column Picker Handler\r\n  const colPickerClickHandler = (event) => {\r\n    try {\r\n      let host = colPicker.current.hostElement;\r\n      if (!host.offsetHeight) {\r\n        showPopup(host, event.target, PopupPosition.Below, true, false);\r\n        colPicker.current.focus();\r\n      } else {\r\n        hidePopup(host, true, true);\r\n        flex.focus();\r\n      }\r\n\r\n      colPicker.current.focus();\r\n      event.preventDefault();\r\n    } catch (error) {\r\n      console.log(\"Error in Column Picker click event:\", error);\r\n    }\r\n  };\r\n\r\n  const saveGridState = () => {\r\n    try {\r\n      if (flex && gridFilter.current) {\r\n        // grid column, filter, sort and grouping settings\r\n        let gridState = {\r\n          columns: flex.columns.map((col) => {\r\n            return {\r\n              binding: col.binding,\r\n              visible: col.visible,\r\n            };\r\n          }),\r\n          filterDefinition: gridFilter.current.control.filterDefinition,\r\n          sortDescriptions: flex.collectionView.sortDescriptions.map(\r\n            (sortDesc) => {\r\n              return {\r\n                property: sortDesc.property,\r\n                ascending: sortDesc.ascending,\r\n              };\r\n            }\r\n          ),\r\n          groupDescriptions: flex.collectionView.groupDescriptions.map(\r\n            (group) => {\r\n              if (group.propertyName) {\r\n                return group.propertyName;\r\n              }\r\n\r\n              return null;\r\n            }\r\n          ),\r\n        };\r\n\r\n        // add class to grouped checkbox div element\r\n        if (\r\n          flex.collectionView.groupDescriptions &&\r\n          flex.collectionView.groupDescriptions.length > 0\r\n        ) {\r\n          let groupedCheckboxes = [\r\n            ...document.getElementsByClassName(\"wj-column-selector-group\"),\r\n          ];\r\n          groupedCheckboxes.forEach((chkbx) => {\r\n            chkbx.parentNode.parentNode.classList.add(\"wj-grouped-checkbox\");\r\n          });\r\n        }\r\n\r\n        // grid paging and search settings\r\n        let sessionState = {\r\n          pageIndex: flex.collectionView.pageIndex,\r\n          searchText: theSearch.current.control.text,\r\n        };\r\n\r\n        localStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(gridState)\r\n        );\r\n        sessionStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(sessionState)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in saving grid state\");\r\n    }\r\n  };\r\n\r\n  // customize grid filter text and dropdowns\r\n  const customizeFilterConditions = () => {\r\n    // localize the FlexGrid filter\r\n    let filter = wjCore.culture.FlexGridFilter,\r\n      operator = Operator;\r\n    wjCore.culture.FlexGridFilter.header = translator(\"WijmoGridFilterHeader\");\r\n    wjCore.culture.FlexGridFilter.ascending =\r\n      \"\\u2191 \" + translator(\"WijmoGridFilterAscending\");\r\n    wjCore.culture.FlexGridFilter.descending =\r\n      \"\\u2193 \" + translator(\"WijmoGridFilterDescending\");\r\n    wjCore.culture.FlexGridFilter.apply = translator(\"RoleAdminEdit_Apply\");\r\n    wjCore.culture.FlexGridFilter.clear = translator(\"OrderCreate_btnClear\");\r\n    wjCore.culture.FlexGridFilter.conditions = translator(\r\n      \"WijmoGridFilterCondition\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.values = translator(\"WijmoGridFilterValue\");\r\n    wjCore.culture.FlexGridFilter.search = translator(\r\n      \"LoadingDetailsView_SearchGrid\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.selectAll = translator(\r\n      \"WijmoGridFilterSelectAll\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.and = translator(\"WijmoGridFilterAnd\");\r\n    wjCore.culture.FlexGridFilter.or = translator(\"WijmoGridFilterOr\");\r\n    wjCore.culture.FlexGridFilter.cancel = translator(\"AccessCardInfo_Cancel\");\r\n    // wjCore.culture.FlexGridFilter.null = 'test';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.and = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.asc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dialog = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dsc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.edit = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op2 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.or = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.search = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val2 = '';\r\n\r\n    // localize FlexGrid filter operators\r\n    filter.stringOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterBeginsWith\"), op: operator.BW },\r\n      { name: translator(\"WijmoGridFilterEndsWith\"), op: operator.EW },\r\n      { name: translator(\"WijmoGridFilterContains\"), op: operator.CT },\r\n      { name: translator(\"WijmoGridFilterDoesNotContain\"), op: operator.NC },\r\n    ];\r\n    filter.numberOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterGreaterThan\"), op: operator.GT },\r\n      { name: translator(\"WijmoGridFilterLessThan\"), op: operator.LT },\r\n      {\r\n        name: translator(\"WijmoGridFilterGreaterThanOrEqual\"),\r\n        op: operator.GE,\r\n      },\r\n      { name: translator(\"WijmoGridFilterLessThanOrEqual\"), op: operator.LE },\r\n    ];\r\n    filter.dateOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterDateEarlierThan\"), op: operator.LT },\r\n      { name: translator(\"WijmoGridFilterDateLaterThan\"), op: operator.GT },\r\n    ];\r\n    filter.booleanOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n    ];\r\n  };\r\n\r\n  // set column width based on screen size\r\n  const getWidth = (columnDetails) => {\r\n    try {\r\n      const screenWidth = window.screen.width;\r\n      if (screenWidth < 1024) {\r\n        if (columnDetails.WidthPx && columnDetails.WidthPx !== \"\")\r\n          return parseInt(columnDetails.WidthPx);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in width:\", error);\r\n    }\r\n\r\n    return columnDetails.WidthPercentage.includes(\"*\")\r\n      ? columnDetails.WidthPercentage\r\n      : parseInt(columnDetails.WidthPercentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pl-1\">\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <React.Fragment>\r\n              <div className=\"row pl-0\">\r\n                <div className=\"col-10 col-sm-12 col-md-5 col-lg-6\">\r\n                  <FlexGridSearch\r\n                    class=\"ui single-input\"\r\n                    ref={theSearch}\r\n                    placeholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-10 col-sm-12 col-md-7 col-lg-6\">\r\n                  <div style={{ float: \"right\" }}>\r\n                    {props.columnPickerRequired ? (\r\n                      <Button\r\n                        id=\"colPicker\"\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        onClick={(event) => colPickerClickHandler(event)}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridColumnPicker\")}\r\n                        </div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          <Icon\r\n                            name=\"caret-down\"\r\n                            className=\"btnIcon\"\r\n                            size=\"small\"\r\n                          />\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.exportRequired ? (\r\n                      <Button\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        className=\"mt-3 mt-md-0\"\r\n                        onClick={exportExcel}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridExport\")}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            className=\"icon-Xls\"\r\n                            style={{\r\n                              fontSize: \"17px\",\r\n                              position: \"absolute\",\r\n                              top: \"3px\",\r\n                            }}\r\n                          ></span>\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tableScroll\">\r\n                {props.columnGroupingRequired ? (\r\n                  <GroupPanel\r\n                    className=\"group-panel\"\r\n                    grid={flex}\r\n                    placeholder={t(\"WijmoGridGroupPanelPlaceholder\")}\r\n                  />\r\n                ) : null}\r\n                <ErrorBoundary>\r\n                  <FlexGrid\r\n                    ref={theGrid}\r\n                    autoGenerateColumns={false}\r\n                    alternatingRowStep={0}\r\n                    autoRowHeights={true}\r\n                    headersVisibility=\"Column\"\r\n                    itemsSource={data}\r\n                    selectionMode={wjCore.asEnum(\"None\", wjGrid.SelectionMode)}\r\n                    initialized={gridInitialized}\r\n                    virtualizationThreshold={[0, 10000]}\r\n                    onUpdatedView={saveGridState}\r\n                  >\r\n                    <FlexGridFilter ref={gridFilter} />\r\n                    {props.columns.map((column) => {\r\n                      return (\r\n                        <FlexGridColumn\r\n                          header={t(column.Name)}\r\n                          key={column.Name}\r\n                          binding={column.Name}\r\n                          width={getWidth(column)}\r\n                          minWidth={100}\r\n                          isReadOnly={true}\r\n                          wordWrap={true}\r\n                          align=\"left\"\r\n                        >\r\n                          <FlexGridCellTemplate\r\n                            cellType=\"Cell\"\r\n                            template={(context) => {\r\n                              return (\r\n                                <span\r\n                                  style={\r\n                                    props.conditionalRowStyleCheck == null ||\r\n                                    !props.conditionalRowStyleCheck(\r\n                                      context.item\r\n                                    )\r\n                                      ? null\r\n                                      : { ...props.conditionalRowStyles }\r\n                                  }\r\n                                >\r\n                                  {displayValues(\r\n                                    context.item[column.Name],\r\n                                    column\r\n                                  )}\r\n                                </span>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FlexGridColumn>\r\n                      );\r\n                    })}\r\n                  </FlexGrid>\r\n                </ErrorBoundary>\r\n                {props.columnPickerRequired ? (\r\n                  <div className=\"column-picker-div\">\r\n                    <ListBox\r\n                      className=\"column-picker\"\r\n                      initialized={(picker) => initializedPicker(picker)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"row\">\r\n                <CollectionViewNavigator\r\n                  ref={pagingComponent}\r\n                  className=\"ml-auto mr-auto mt-3\"\r\n                  headerFormat={t(\"WijmoGridPagingTemplate\")}\r\n                  byPage={true}\r\n                  cv={data}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nWijmoGrid.propTypes = {\r\n  sourceData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  exportRequired: PropTypes.bool.isRequired,\r\n  exportFileName: PropTypes.string,\r\n  selectionRequired: PropTypes.bool,\r\n  columnPickerRequired: PropTypes.bool,\r\n  columnGroupingRequired: PropTypes.bool,\r\n  conditionalRowStyleCheck: PropTypes.func,\r\n  conditionalRowStyles: PropTypes.object,\r\n  rowsPerPage: PropTypes.number,\r\n  onSelectionHandle: PropTypes.func,\r\n  parentComponent: PropTypes.string.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  terminalsToShow: PropTypes.number,\r\n  singleSelection: PropTypes.bool,\r\n  selectedItems: PropTypes.array,\r\n};\r\n\r\nWijmoGrid.defaultProps = {\r\n  sourceData: [],\r\n  columns: [],\r\n  exportRequired: true,\r\n  exportFileName: \"Grid.xlsx\",\r\n  selectionRequired: false,\r\n  columnPickerRequired: false,\r\n  columnGroupingRequired: false,\r\n  rowsPerPage: 10,\r\n  terminalsToShow: 2,\r\n  singleSelection: false,\r\n  selectedItems: [],\r\n};\r\n\r\nexport default WijmoGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WijmoGrid from '../../UIBase/Common/WijmoGrid';\r\n\r\nconst WijmoGridComposite = (props) => {\r\n    return (\r\n        <WijmoGrid\r\n            sourceData={props.data}\r\n            columns={props.columns}\r\n            exportRequired={props.exportRequired}\r\n            exportFileName={props.exportFileName}\r\n            columnPickerRequired={props.columnPickerRequired}\r\n            selectionRequired={props.selectionRequired}\r\n            columnGroupingRequired={props.columnGroupingRequired}\r\n            conditionalRowStyleCheck={props.conditionalRowStyleCheck}\r\n            conditionalRowStyles={props.conditionalRowStyles}\r\n            rowsPerPage={props.rowsPerPage}\r\n            onSelectionHandle={props.onSelectionHandle}\r\n            onRowClick={props.onRowClick}\r\n            parentComponent={props.parentComponent}\r\n            terminalsToShow={props.terminalsToShow}\r\n            singleSelection={props.singleSelection}\r\n            selectedItems={props.selectedItems}\r\n        />\r\n    )\r\n}\r\n\r\nWijmoGridComposite.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n    exportRequired: PropTypes.bool.isRequired,\r\n    exportFileName: PropTypes.string,\r\n    selectionRequired: PropTypes.bool,\r\n    columnPickerRequired: PropTypes.bool,\r\n    columnGroupingRequired: PropTypes.bool,\r\n    conditionalRowStyleCheck: PropTypes.func,\r\n    conditionalRowStyles: PropTypes.object,\r\n    rowsPerPage: PropTypes.number,\r\n    onSelectionHandle: PropTypes.func,\r\n    parentComponent: PropTypes.string.isRequired,\r\n    onRowClick: PropTypes.func,\r\n    terminalsToShow: PropTypes.number,\r\n    singleSelection: PropTypes.bool,\r\n    selectedItems: PropTypes.array\r\n}\r\n\r\nexport default WijmoGridComposite;","import React from 'react';\r\nimport { Select, Input, Accordion } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\n\r\n\r\n\r\nPipelineHeaderSiteViewDetails.propTypes = {\r\n    pipelineHeader: PropTypes.object.isRequired,\r\n    modPipelineHeader: PropTypes.object.isRequired,\r\n    validationErrors: PropTypes.object.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    onActiveStatusChange: PropTypes.func.isRequired,\r\n    listOptions: PropTypes.shape({\r\n        pipelineHeaderTypeOptions: PropTypes.array,\r\n        volumeUOMOptions: PropTypes.array,\r\n        lengthUOMOptions: PropTypes.array,\r\n        pipelineMeterList: PropTypes.array,\r\n    }).isRequired,\r\n    modAttributeMetaDataList: PropTypes.array.isRequired,\r\n    attributeValidationErrors: PropTypes.array.isRequired,\r\n    onAttributeDataChange: PropTypes.func.isRequired,\r\n    isEnterpriseNode: PropTypes.bool.isRequired,\r\n}\r\nPipelineHeaderSiteViewDetails.defaultProps = {\r\n    listOptions: {\r\n        pipelineHeaderTypeOptions: [],\r\n        volumeUOMOptions: [],\r\n        lengthUOMOptions: [],\r\n        pipelineMeterList: []\r\n    },\r\n\r\n}\r\n\r\nexport function PipelineHeaderSiteViewDetails({\r\n    pipelineHeader,\r\n    modPipelineHeader,\r\n    validationErrors,\r\n    onFieldChange,\r\n    onActiveStatusChange,\r\n    listOptions,\r\n    modAttributeMetaDataList,\r\n    attributeValidationErrors,\r\n    onAttributeDataChange,\r\n    isEnterpriseNode\r\n}) {\r\n\r\n    const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n        let attributeValidation = [];\r\n        attributeValidation = attributeValidationErrors.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n        })\r\n        return attributeValidation.attributeValidationErrors;\r\n    }\r\n\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"detailsContainer\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modPipelineHeader.Code}\r\n                                indicator=\"required\"\r\n                                disabled={pipelineHeader.Code !== \"\"}\r\n                                onChange={(data) => onFieldChange(\"Code\", data)}\r\n                                label={t(\"PipeLineHeaderInfo_Code\")}\r\n                                error={t(validationErrors.Code)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modPipelineHeader.Name}\r\n                                indicator=\"required\"\r\n                                onChange={(data) => onFieldChange(\"Name\", data)}\r\n                                label={t(\"PipeLineHeaderInfo_Name\")}\r\n                                error={t(validationErrors.Name)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                value={modPipelineHeader.PipelineHeaderType}\r\n                                label={t(\"PipeLineHeaderInfo_Type\")}\r\n                                indicator=\"required\"\r\n                                options={listOptions.pipelineHeaderTypeOptions}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"PipelineHeaderType\", data);\r\n                                }}\r\n                                error={t(validationErrors.PipelineHeaderType)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modPipelineHeader.PointName}\r\n                                onChange={(data) => onFieldChange(\"PointName\", data)}\r\n                                indicator=\"required\"\r\n                                label={t(\"PipeLineHeaderInfo_PointName\")}\r\n                                error={t(validationErrors.PointName)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modPipelineHeader.OuterDiameter}\r\n                                onChange={(data) => onFieldChange(\"OuterDiameter\", data)}\r\n                                label={t(\"PipeLineHeaderInfo_OuterDiameter\")}\r\n                                error={t(validationErrors.OuterDiameter)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                indicator={((modPipelineHeader.OuterDiameter !== null && modPipelineHeader.OuterDiameter !== \"\")) ? \"required\" : \"\"}\r\n                                value={modPipelineHeader.OuterDiameterUOM}\r\n                                label={t(\"PipeLineHeaderInfo_OuterDiameterUOM\")}\r\n                                options={listOptions.lengthUOMOptions}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"OuterDiameterUOM\", data);\r\n                                }}\r\n                                error={t(validationErrors.OuterDiameterUOM)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modPipelineHeader.WallThickness}\r\n                                onChange={(data) => onFieldChange(\"WallThickness\", data)}\r\n                                label={t(\"PipeLineHeaderInfo_PipeThickness\")}\r\n                                error={t(validationErrors.WallThickness)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                value={modPipelineHeader.WallThicknessUOM}\r\n                                indicator={((modPipelineHeader.WallThickness !== null && modPipelineHeader.WallThickness !== \"\")) ? \"required\" : \"\"}\r\n                                label={t(\"PipeLineHeaderInfo_PipeThicknessUOM\")}\r\n                                options={listOptions.lengthUOMOptions}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"WallThicknessUOM\", data);\r\n                                }}\r\n                                error={t(validationErrors.WallThicknessUOM)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modPipelineHeader.TypicalFlowRatePerHour}\r\n                                onChange={(data) => onFieldChange(\"TypicalFlowRatePerHour\", data)}\r\n                                label={t(\"PipeLineHeaderInfo_ProductFlowRate\")}\r\n                                error={t(validationErrors.TypicalFlowRatePerHour)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                value={modPipelineHeader.FlowRateUOM}\r\n                                indicator={((modPipelineHeader.TypicalFlowRatePerHour !== null && modPipelineHeader.TypicalFlowRatePerHour !== \"\")) ? \"required\" : \"\"}\r\n                                label={t(\"PipeLineHeaderInfo_ProductFlowRateUOM\")}\r\n                                options={listOptions.volumeUOMOptions}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"FlowRateUOM\", data);\r\n                                }}\r\n                                error={t(validationErrors.FlowRateUOM)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                value={modPipelineHeader.AssociatedMeterCodes}\r\n                                label={t(\"Associated_Meters\")}\r\n                                options={listOptions.pipelineMeterList}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"AssociatedMeterCodes\", data);\r\n                                }}\r\n                                error={t(validationErrors.AssociatedMeterCodes)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                multiple={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"PipeLineHeaderInfo_Status\")}\r\n                                value={modPipelineHeader.Active}\r\n                                options={[\r\n                                    { text: t(\"PipeLineHeaderInfo_Active\"), value: true },\r\n                                    { text: t(\"PipeLineHeaderInfo_Inactive\"), value: false },\r\n                                ]}\r\n                                onChange={(data) => onActiveStatusChange(data)}\r\n                                error={t(validationErrors.Active)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modPipelineHeader.Description}\r\n                                onChange={(data) => onFieldChange(\"Description\", data)}\r\n                                label={t(\"PipeLineHeaderInfo_Remarks\")}\r\n                                error={t(validationErrors.Description)}\r\n                                indicator={modPipelineHeader.Active !== pipelineHeader.Active ? \"required\" : \"\"}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {\r\n                        modAttributeMetaDataList.length > 0 ?\r\n                            modAttributeMetaDataList.map((attribute) =>\r\n                                <ErrorBoundary>\r\n                                    <Accordion >\r\n                                        <Accordion.Content\r\n                                            className=\"attributeAccordian\"\r\n                                            title={isEnterpriseNode ? (attribute.TerminalCode + ' - ' + t(\"Attributes_Header\")) : (t(\"Attributes_Header\"))}\r\n                                        >\r\n                                            <AttributeDetails\r\n                                                selectedAttributeList={attribute.attributeMetaDataList}\r\n                                                handleCellDataEdit={onAttributeDataChange}\r\n                                                attributeValidationErrors={handleValidationErrorFilter(attributeValidationErrors, attribute.TerminalCode)}\r\n                                            ></AttributeDetails>\r\n                                        </Accordion.Content>\r\n                                    </Accordion>\r\n                                </ErrorBoundary>\r\n                            ) : null\r\n                    }\r\n\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { PipelineHeaderSiteViewDetails } from \"../../UIBase/Details/PipelineHeaderSiteViewDetails\";\r\nimport { emptyPipelineHeader } from \"../../../JS/DefaultEntities\";\r\nimport { pipelineHeaderValidationDef } from \"../../../JS/ValidationDef\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport PropTypes from \"prop-types\";\r\nimport lodash from \"lodash\";\r\nimport {\r\n  functionGroups,\r\n  fnPipelineHeaderSiteView,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport { pipelineHeaderAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass PipelineHeaderSiteViewDetailsComposite extends Component {\r\n  state = {\r\n    pipelineHeader: lodash.cloneDeep(emptyPipelineHeader),\r\n    modPipelineHeader: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      pipelineHeaderValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    attributeValidationErrors: [],\r\n    modAttributeMetaDataList: [],\r\n    pipelineHeaderTypeOptions: [],\r\n    lengthUOMOptions: [],\r\n    volumeUOMOptions: [],\r\n    pipelineMeterList: [],\r\n    showAuthenticationLayout: false,\r\n    tempPipelineHeader: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getAttributes(this.props.selectedRow);\r\n      this.getPipelineHeaderType();\r\n      this.getUOMList();\r\n      this.getMeterList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.pipelineHeader.Code !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getAttributes(nextProps.selectedRow);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(pipelineHeaderRow) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [pipelineHeaderAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.PIPELINEHEADER\r\n              ),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.PIPELINEHEADER\r\n                ),\r\n            },\r\n            () => this.getPipelineHeader(pipelineHeaderRow)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n  getPipelineHeader(pipelineHeaderRow) {\r\n    emptyPipelineHeader.PipelineHeaderType = \"BOTH\";\r\n    if (pipelineHeaderRow.Common_Code === undefined) {\r\n      this.setState(\r\n        {\r\n          pipelineHeader: lodash.cloneDeep(emptyPipelineHeader),\r\n          modPipelineHeader: lodash.cloneDeep(emptyPipelineHeader),\r\n          isReadyToRender: true,\r\n          modAttributeMetaDataList: [],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnPipelineHeaderSiteView\r\n          ),\r\n        },\r\n        () => {\r\n          if (!this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.localNodeAttribute();\r\n          }\r\n        }\r\n      );\r\n      return;\r\n    }\r\n\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.pipelineHeaderCode,\r\n        value: pipelineHeaderRow.Common_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.terminalCode,\r\n        value:\r\n          this.props.selectedTerminal !== \"\"\r\n            ? this.props.selectedTerminal\r\n            : null,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.pipelineHeaderCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetPipelineHeader,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              pipelineHeader: lodash.cloneDeep(result.EntityResult),\r\n              modPipelineHeader: lodash.cloneDeep(result.EntityResult),\r\n              saveEnabled:\r\n                Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnPipelineHeaderSiteView\r\n                ) && !this.props.userDetails.EntityResult.IsEnterpriseNode,\r\n            },\r\n            () => {\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange([this.props.selectedTerminal]);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            pipelineHeader: lodash.cloneDeep(emptyPipelineHeader),\r\n            modPipelineHeader: lodash.cloneDeep(emptyPipelineHeader),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in getPipelineHeader:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error while getting PipelineHeader:\",\r\n          error,\r\n          pipelineHeaderRow\r\n        );\r\n      });\r\n  }\r\n  getPipelineHeaderType() {\r\n    axios(\r\n      RestAPIs.GetPipelineHeaderType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let pipelineHeaderTypeOptions = [];\r\n          if (result.EntityResult !== null) {\r\n            Object.keys(result.EntityResult).forEach((key) =>\r\n              pipelineHeaderTypeOptions.push({\r\n                text: key,\r\n                value: result.EntityResult[key],\r\n              })\r\n            );\r\n            this.setState({ pipelineHeaderTypeOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getPipelineHeaderType:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getPipelineHeaderType:\", error);\r\n      });\r\n  }\r\n  getUOMList() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let volumeUOMOptions = [];\r\n\r\n            let flowrateVolumeUOMs = result.EntityResult.FLOWRATE_VOLUME;\r\n            let flowrateMassUOMs = result.EntityResult.FLOWRATE_MASS;\r\n\r\n            flowrateVolumeUOMs.forEach((volumeOption) => {\r\n              volumeUOMOptions.push({\r\n                text: volumeOption,\r\n                value: volumeOption,\r\n              });\r\n            });\r\n            flowrateMassUOMs.forEach((massOption) => {\r\n              volumeUOMOptions.push({\r\n                text: massOption,\r\n                value: massOption,\r\n              });\r\n            });\r\n\r\n            let lengthUOMs = result.EntityResult.LENGTH;\r\n            let lengthUOMOptions = [];\r\n            lengthUOMs.forEach((lengthOption) => {\r\n              lengthUOMOptions.push({\r\n                text: lengthOption,\r\n                value: lengthOption,\r\n              });\r\n            });\r\n\r\n            this.setState({\r\n              volumeUOMOptions,\r\n              lengthUOMOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getUOM:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getUOM:\", error);\r\n      });\r\n  }\r\n  getMeterList() {\r\n    axios(\r\n      RestAPIs.GetAllPipelineMeterList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let pipelineMeterList = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ pipelineMeterList });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getMeterList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getMeterList:\", error);\r\n      });\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modPipelineHeader = lodash.cloneDeep(this.state.modPipelineHeader);\r\n\r\n      modPipelineHeader[propertyName] = data;\r\n      this.setState({ modPipelineHeader });\r\n\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (pipelineHeaderValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          pipelineHeaderValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modPipelineHeader = lodash.cloneDeep(this.state.modPipelineHeader);\r\n      modPipelineHeader.Active = value;\r\n      if (modPipelineHeader.Active !== this.state.pipelineHeader.Active)\r\n        modPipelineHeader.Description = \"\";\r\n      this.setState({ modPipelineHeader });\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on handleActiveStatusChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  savePipelineHeader = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempPipelineHeader = lodash.cloneDeep(this.state.tempPipelineHeader);\r\n\r\n      this.state.pipelineHeader.Code === \"\"\r\n          ? this.createPipelineHeader(tempPipelineHeader)\r\n          : this.updatePipelineHeader(tempPipelineHeader);\r\n    } catch (error) {\r\n      console.log(\"pipelineheaderComposite : Error in savePrimeMover\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n     // this.setState({ saveEnabled: false });\r\n      let modPipelineHeader = this.fillDetails();\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n\r\n      if (this.validateSave(modPipelineHeader, attributeList)) {\r\n        modPipelineHeader = this.convertStringtoDecimal(\r\n          modPipelineHeader,\r\n          attributeList\r\n        );\r\n\r\n        let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempPipelineHeader = lodash.cloneDeep(modPipelineHeader);\r\n      this.setState({ showAuthenticationLayout, tempPipelineHeader }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.savePipelineHeader();\r\n        }\r\n    });\r\n\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modPipelineHeader = lodash.cloneDeep(this.state.modPipelineHeader);\r\n\r\n      if (\r\n        modPipelineHeader.OuterDiameter !== null &&\r\n        modPipelineHeader.OuterDiameter !== \"\"\r\n      )\r\n        modPipelineHeader.OuterDiameter =\r\n          modPipelineHeader.OuterDiameter.toLocaleString();\r\n\r\n      if (\r\n        modPipelineHeader.WallThickness !== null &&\r\n        modPipelineHeader.WallThickness !== \"\"\r\n      )\r\n        modPipelineHeader.WallThickness =\r\n          modPipelineHeader.WallThickness.toLocaleString();\r\n\r\n      if (\r\n        modPipelineHeader.TypicalFlowRatePerHour !== null &&\r\n        modPipelineHeader.TypicalFlowRatePerHour !== \"\"\r\n      )\r\n        modPipelineHeader.TypicalFlowRatePerHour =\r\n          modPipelineHeader.TypicalFlowRatePerHour.toLocaleString();\r\n\r\n      if (\r\n        modPipelineHeader.OuterDiameter === null ||\r\n        modPipelineHeader.OuterDiameter === \"\"\r\n      )\r\n        modPipelineHeader.OuterDiameterUOM = null;\r\n\r\n      if (\r\n        modPipelineHeader.WallThickness === null ||\r\n        modPipelineHeader.WallThickness === \"\"\r\n      )\r\n        modPipelineHeader.WallThicknessUOM = null;\r\n\r\n      if (\r\n        modPipelineHeader.TypicalFlowRatePerHour === null ||\r\n        modPipelineHeader.TypicalFlowRatePerHour === \"\"\r\n      )\r\n        modPipelineHeader.FlowRateUOM = null;\r\n\r\n      this.setState({ modPipelineHeader });\r\n      return modPipelineHeader;\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on fillDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  validateSave(modPipelineHeader, attributeList) {\r\n    try {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      Object.keys(pipelineHeaderValidationDef).forEach(function (key) {\r\n        if (modPipelineHeader[key] !== undefined)\r\n          validationErrors[key] = Utilities.validateField(\r\n            pipelineHeaderValidationDef[key],\r\n            modPipelineHeader[key]\r\n          );\r\n      });\r\n\r\n      if (modPipelineHeader.Active !== this.state.pipelineHeader.Active) {\r\n        if (\r\n          modPipelineHeader.Description === null ||\r\n          modPipelineHeader.Description === \"\"\r\n        ) {\r\n          validationErrors[\"Description\"] = \"BaseProductInfo_EnterRemarks\";\r\n        }\r\n      }\r\n\r\n      if (\r\n        modPipelineHeader.OuterDiameter !== null &&\r\n        modPipelineHeader.OuterDiameter !== \"\"\r\n      ) {\r\n        if (\r\n          modPipelineHeader.OuterDiameterUOM === null ||\r\n          modPipelineHeader.OuterDiameterUOM === \"\"\r\n        ) {\r\n          validationErrors[\"OuterDiameterUOM\"] = \"PipelineHeader_UOM_Required\";\r\n        }\r\n      }\r\n      if (\r\n        modPipelineHeader.WallThickness !== null &&\r\n        modPipelineHeader.WallThickness !== \"\"\r\n      ) {\r\n        if (\r\n          modPipelineHeader.WallThicknessUOM === null ||\r\n          modPipelineHeader.WallThicknessUOM === \"\"\r\n        ) {\r\n          validationErrors[\"WallThicknessUOM\"] = \"PipelineHeader_UOM_Required\";\r\n        }\r\n      }\r\n      if (\r\n        modPipelineHeader.TypicalFlowRatePerHour !== null &&\r\n        modPipelineHeader.TypicalFlowRatePerHour !== \"\"\r\n      ) {\r\n        if (\r\n          modPipelineHeader.FlowRateUOM === null ||\r\n          modPipelineHeader.FlowRateUOM === \"\"\r\n        ) {\r\n          validationErrors[\"FlowRateUOM\"] = \"PipelineHeader_UOM_Required\";\r\n        }\r\n      }\r\n\r\n      var attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeList.forEach((attribute) => {\r\n        attributeValidationErrors.forEach((attributeValidation) => {\r\n          if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n            attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n              attributeValidation.attributeValidationErrors[\r\n                attributeMetaData.Code\r\n              ] = Utilities.valiateAttributeField(\r\n                attributeMetaData,\r\n                attributeMetaData.DefaultValue\r\n              );\r\n            });\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({ validationErrors, attributeValidationErrors });\r\n\r\n      var returnValue = true;\r\n      attributeValidationErrors.forEach((x) => {\r\n        if (returnValue) {\r\n          returnValue = Object.values(x.attributeValidationErrors).every(\r\n            function (value) {\r\n              return value === \"\";\r\n            }\r\n          );\r\n        } else {\r\n          return returnValue;\r\n        }\r\n      });\r\n\r\n      if (returnValue)\r\n        returnValue = Object.values(validationErrors).every(function (value) {\r\n          return value === \"\";\r\n        });\r\n\r\n      return returnValue;\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on validateSave\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  convertStringtoDecimal(modPipelineHeader, attributeList) {\r\n    try {\r\n      if (\r\n        modPipelineHeader.OuterDiameter !== null &&\r\n        modPipelineHeader.OuterDiameter !== \"\"\r\n      ) {\r\n        modPipelineHeader.OuterDiameter = Utilities.convertStringtoDecimal(\r\n          modPipelineHeader.OuterDiameter\r\n        );\r\n      }\r\n      if (\r\n        modPipelineHeader.WallThickness !== null &&\r\n        modPipelineHeader.WallThickness !== \"\"\r\n      ) {\r\n        modPipelineHeader.WallThickness = Utilities.convertStringtoDecimal(\r\n          modPipelineHeader.WallThickness\r\n        );\r\n      }\r\n      if (\r\n        modPipelineHeader.TypicalFlowRatePerHour !== null &&\r\n        modPipelineHeader.TypicalFlowRatePerHour !== \"\"\r\n      ) {\r\n        modPipelineHeader.TypicalFlowRatePerHour =\r\n          Utilities.convertStringtoDecimal(\r\n            modPipelineHeader.TypicalFlowRatePerHour\r\n          );\r\n      }\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modPipelineHeader.Attributes =\r\n        Utilities.fillAttributeDetails(attributeList);\r\n      return modPipelineHeader;\r\n    } catch (error) {\r\n      console.log(\"convertStringtoDecimal error Pipline Header Details\", error);\r\n    }\r\n  }\r\n\r\n  createPipelineHeader(modPipelineHeader) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.pipelineHeaderCode,\r\n        value: modPipelineHeader.Code,\r\n      },\r\n    ];\r\n    let obj = {\r\n      keyDataCode: KeyCodes.pipelineHeaderCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modPipelineHeader,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"PipeLineHeaderInfo_AddUpdateStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"PipeLineHeaderInfo_Code\"],\r\n          keyValues: [modPipelineHeader.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.CreatePipelineHeader,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnPipelineHeaderSiteView\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () =>\r\n              this.getPipelineHeader({ Common_Code: modPipelineHeader.Code })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnPipelineHeaderSiteView\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in createPipelineHeader:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(this.state.modPipelineHeader, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnPipelineHeaderSiteView\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modPipelineHeader, \"add\", notification);\r\n      });\r\n  }\r\n  updatePipelineHeader(modPipelineHeader) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.pipelineHeaderCode,\r\n        value: modPipelineHeader.Code,\r\n      },\r\n    ];\r\n    let obj = {\r\n      keyDataCode: KeyCodes.pipelineHeaderCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modPipelineHeader,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"PipeLineHeaderInfo_AddUpdateStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"PipeLineHeaderInfo_Code\"],\r\n          keyValues: [modPipelineHeader.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.UpdatePipelineHeader,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnPipelineHeaderSiteView\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () =>\r\n              this.getPipelineHeader({ Common_Code: modPipelineHeader.Code })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnPipelineHeaderSiteView\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in update PipelineHeader:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(\r\n          this.state.modPipelineHeader,\r\n          \"update\",\r\n          notification\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnPipelineHeaderSiteView\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(\r\n          this.state.modPipelineHeader,\r\n          \"modify\",\r\n          notification\r\n        );\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const { validationErrors } = { ...this.state };\r\n      const pipelineHeader = lodash.cloneDeep(this.state.pipelineHeader);\r\n\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState(\r\n        {\r\n          modPipelineHeader: { ...pipelineHeader },\r\n          selectedCompRow: [],\r\n          validationErrors,\r\n          modAttributeMetaDataList: [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange([this.props.selectedTerminal]);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList) &&\r\n        attributeMetaDataList.length > 0\r\n      ) {\r\n        this.terminalSelectionChange([attributeMetaDataList[0].TerminalCode]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals !== undefined && selectedTerminals !== null) {\r\n        let attributesTerminalsList = [];\r\n        var attributeMetaDataList = [];\r\n        var modAttributeMetaDataList = [];\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        modAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.modAttributeMetaDataList\r\n        );\r\n        const attributeValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeValidationErrors\r\n        );\r\n        var modPipelineHeader = lodash.cloneDeep(this.state.modPipelineHeader);\r\n\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          });\r\n\r\n          if (existitem === undefined) {\r\n            attributeMetaDataList.forEach(function (attributeMetaData) {\r\n              if (attributeMetaData.TerminalCode === terminal) {\r\n                var Attributevalue = modPipelineHeader.Attributes.find(\r\n                  (baseproductAttribute) => {\r\n                    return baseproductAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n                attributesTerminalsList.push(attributeMetaData);\r\n              }\r\n            });\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n        modAttributeMetaDataList = [];\r\n        modAttributeMetaDataList = attributesTerminalsList;\r\n        modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n          modAttributeMetaDataList\r\n        );\r\n        attributeValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n              (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n        this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors, modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(attributeMetaDataList),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      pipelineHeaderTypeOptions: this.state.pipelineHeaderTypeOptions,\r\n      volumeUOMOptions: this.state.volumeUOMOptions,\r\n      lengthUOMOptions: this.state.lengthUOMOptions,\r\n      pipelineMeterList: this.state.pipelineMeterList,\r\n    };\r\n\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"PipeLineHeaderInfo_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modPipelineHeader.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modPipelineHeader.LastUpdatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"PipeLineHeaderInfo_CreatedTime\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modPipelineHeader.CreatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modPipelineHeader.CreatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"PipeLineHeaderInfo_LastActive\",\r\n        fieldValue:\r\n          this.state.modPipelineHeader.LastActive !== undefined &&\r\n          this.state.modPipelineHeader.LastActive !== null\r\n            ? new Date(\r\n                this.state.modPipelineHeader.LastActive\r\n              ).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(\r\n                this.state.modPipelineHeader.LastActive\r\n              ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n    ];\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.pipelineHeader.Code}\r\n            newEntityName={\"PipeLineHeaderInfo_NewPipeLineHeader\"}\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <PipelineHeaderSiteViewDetails\r\n            pipelineHeader={this.state.pipelineHeader}\r\n            modPipelineHeader={this.state.modPipelineHeader}\r\n            listOptions={listOptions}\r\n            validationErrors={this.state.validationErrors}\r\n            onFieldChange={this.handleChange}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            onAttributeDataChange={this.handleAttributeDataChange}\r\n          ></PipelineHeaderSiteViewDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.pipelineHeader.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnPipelineHeaderSiteView}\r\n            handleOperation={this.savePipelineHeader}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PipelineHeaderSiteViewDetailsComposite);\r\n\r\nPipelineHeaderSiteViewDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  selectedTerminal: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nexport function PipelineHeaderSiteViewSummaryComposite({\r\n    tableData,\r\n    columnDetails,\r\n    pageSize,\r\n    exportRequired,\r\n    exportFileName,\r\n    columnPickerRequired,\r\n    columnGroupingRequired,\r\n    terminalsToShow,\r\n    selectionRequired,     \r\n    onSelectionChange,\r\n    onRowClick,\r\n    parentComponent\r\n}) {\r\n    return (\r\n        <WijmoGridComposite\r\n        data={tableData}\r\n        columns={columnDetails}\r\n        rowsPerPage={pageSize}\r\n        exportRequired={exportRequired}\r\n        exportFileName={exportFileName}\r\n        columnPickerRequired={columnPickerRequired}\r\n        columnGroupingRequired={columnGroupingRequired}\r\n        terminalsToShow={terminalsToShow}\r\n        selectionRequired={selectionRequired}\r\n        onSelectionHandle={onSelectionChange}\r\n        onRowClick={onRowClick}\r\n        parentComponent={parentComponent}\r\n        ></WijmoGridComposite>\r\n    );\r\n}","import React, { Component } from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../CSS/styles.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { PipelineHeaderSiteViewSummaryComposite } from \"../Summary/PipelineHeaderSiteViewSummaryComposite\";\r\nimport PipelineHeaderSiteViewDetailsComposite from \"../Details/PipelineHeaderSiteViewDetailsComposite\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport {\r\n  functionGroups,\r\n  fnPipelineHeaderSiteView,\r\n  fnKPIInformation,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport { kpiPipelineHeaderSiteViewList } from \"../../../JS/KPIPageName\";\r\nimport { SiteTreeViewUserActionsComposite } from \"../Common/SiteTreeViewUserActionsComposite\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass PipelineHeaderSiteViewComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    operationsVisibilty: {\r\n      add: false,\r\n      delete: false,\r\n      shareholder: false,\r\n      terminal: true,\r\n    },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    data: {},\r\n    terminalOptions: [],\r\n    pipelineHeaderSiteViewKPIList: [],\r\n    selectedTerminal: \"\",\r\n    showAuthenticationLayout: false,\r\n  };\r\n\r\n  componentName = \"PipelineHeaderComponent\";\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n        this.getTerminalList();\r\n      } else {\r\n        this.getPipelineHeaderList(this.state.selectedTerminal);\r\n      }\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnPipelineHeaderSiteView\r\n      );\r\n      this.setState({\r\n        operationsVisibilty,\r\n      });\r\n      this.getKPIList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n\r\n    // clear session storage on window refresh event\r\n    window.addEventListener(\"beforeunload\", () =>\r\n      Utilities.clearSessionStorage(this.componentName + \"GridState\")\r\n    );\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    Utilities.clearSessionStorage(this.componentName + \"GridState\");\r\n    window.removeEventListener(\"beforeunload\", () =>\r\n      Utilities.clearSessionStorage(this.componentName + \"GridState\")\r\n    );\r\n  };\r\n\r\n  getTerminalList() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetTerminals,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            Array.isArray(result.EntityResult) &&\r\n            result.EntityResult.length > 0\r\n          )\r\n            this.setState(\r\n              {\r\n                terminalOptions: result.EntityResult,\r\n                selectedTerminal: result.EntityResult[0],\r\n              },\r\n              () => {\r\n                this.getPipelineHeaderList(this.state.selectedTerminal);\r\n              }\r\n            );\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewComposite:Error occured on getTerminalsList\",\r\n        err\r\n      );\r\n    }\r\n  }\r\n\r\n  getPipelineHeaderList(terminal) {\r\n    axios(\r\n      RestAPIs.GetPipelineHeaderList + \"?TerminalCode=\" + terminal,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ data: result.EntityResult, isReadyToRender: true });\r\n        } else {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error in getPipelineHeaderList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: [], isReadyToRender: true });\r\n        console.log(\"Error while getPipelineHeaderList:\", error);\r\n      });\r\n  }\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.terminal = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: {},\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewComposite:Error occured on handleAdd\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnPipelineHeaderSiteView\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.terminal = true;\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        isReadyToRender: false,\r\n      });\r\n      this.getPipelineHeaderList(this.state.selectedTerminal);\r\n      this.getKPIList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewComposite:Error occured on Back click\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getKPIList() {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      var notification = {\r\n        message: \"\",\r\n        messageType: \"critical\",\r\n        messageResultDetails: [],\r\n      };\r\n      let objKPIRequestData = {\r\n        PageName: kpiPipelineHeaderSiteViewList,\r\n        InputParameters: [],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              pipelineHeaderSiteViewKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ pipelineHeaderSiteViewKPIList: [] });\r\n            console.log(\r\n              \"Error in pipelineHeaderSiteView KPIList:\",\r\n              result.ErrorList\r\n            );\r\n            notification.messageResultDetails.push({\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: result.ErrorList[0],\r\n            });\r\n          }\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Error while getting PipelineHeaderSiteView KPIList:\",\r\n            error\r\n          );\r\n        });\r\n    }\r\n  }\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnPipelineHeaderSiteView\r\n      );\r\n      operationsVisibilty.delete = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.remove,\r\n        fnPipelineHeaderSiteView\r\n      );\r\n      operationsVisibilty.terminal = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: item,\r\n        selectedItems: [item],\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewComposite:Error occured on Row click\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleSelection = (items) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete =\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnPipelineHeaderSiteView\r\n        );\r\n\r\n      this.setState({ selectedItems: items, operationsVisibilty });\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewComposite:Error occured on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDelete = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n      var deletePipelineHeaderKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        var headerCode = this.state.selectedItems[i][\"Common_Code\"];\r\n        var keyData = {\r\n          KeyCodes: [\r\n            {\r\n              Key: KeyCodes.pipelineHeaderCode,\r\n              Value: headerCode,\r\n            },\r\n          ],\r\n        };\r\n        deletePipelineHeaderKeys.push(keyData);\r\n      }\r\n      axios(\r\n        RestAPIs.DeletePipelineHeader,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deletePipelineHeaderKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          var isRefreshDataRequire = result.IsSuccess;\r\n          if (\r\n            result.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            var failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n          var notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"PipeLineHeaderInfo_DeleteStatus\",\r\n            [\"PipelineHeaderCode\"]\r\n          );\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({ isReadyToRender: false,showAuthenticationLayout: false, });\r\n            this.getPipelineHeaderList(this.state.selectedTerminal);\r\n            this.getKPIList();\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n              showAuthenticationLayout: false,\r\n            });\r\n          } else {\r\n            operationsVisibilty.delete = true;\r\n            this.setState({ operationsVisibilty });\r\n          }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0)\r\n              messageResult.keyFields[0] = \"PipeLineHeaderInfo_Code\";\r\n          });\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error occured while deleting:\" + error);\r\n          var { operationsVisibilty } = { ...this.state };\r\n          operationsVisibilty.delete = true;\r\n          this.setState({ operationsVisibilty, showAuthenticationLayout: false, });\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewComposite:Error occured on handleDelete\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnPipelineHeaderSiteView\r\n        );\r\n        operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnPipelineHeaderSiteView\r\n        );\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            Common_Code: data.Code,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewComposite:Error occured on savedEvent\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleTerminalSelectionChange = (terminal) => {\r\n    try {\r\n      this.setState({\r\n        selectedTerminal: terminal,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getPipelineHeaderList(terminal);\r\n    } catch (error) {\r\n      console.log(\r\n        \"PipelineHeaderSiteViewComposite:Error occured on handleTerminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showAuthenticationLayout });\r\n      if (showAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"pipelineHeaderComposite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          {this.props.userDetails.EntityResult.IsEnterpriseNode ? (\r\n            <SiteTreeViewUserActionsComposite\r\n              breadcrumbItem={this.props.activeItem}\r\n              operationsVisibilty={this.state.operationsVisibilty}\r\n              terminals={this.state.terminalOptions}\r\n              selectedTerminal={this.state.selectedTerminal}\r\n              onTerminalChange={this.handleTerminalSelectionChange}\r\n              handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n            ></SiteTreeViewUserActionsComposite>\r\n          ) : (\r\n            <TMUserActionsComposite\r\n              operationsVisibilty={this.state.operationsVisibilty}\r\n              breadcrumbItem={this.props.activeItem}\r\n              onDelete={this.authenticateDelete}\r\n              onAdd={this.handleAdd}\r\n              shrVisible={false}\r\n              handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n            ></TMUserActionsComposite>\r\n          )}\r\n        </ErrorBoundary>\r\n        {this.state.isDetails === true ? (\r\n          <ErrorBoundary>\r\n            <PipelineHeaderSiteViewDetailsComposite\r\n              selectedRow={this.state.selectedRow}\r\n              onBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n              selectedTerminal={this.state.selectedTerminal}\r\n              terminalCodes={this.state.terminalCodes}\r\n            ></PipelineHeaderSiteViewDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isReadyToRender ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <div className=\"kpiSummaryContainer\">\r\n                <KPIDashboardLayout\r\n                  kpiList={this.state.pipelineHeaderSiteViewKPIList}\r\n                  pageName=\"PipelineHeaderSiteView\"\r\n                ></KPIDashboardLayout>\r\n              </div>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n              <PipelineHeaderSiteViewSummaryComposite\r\n                tableData={this.state.data.Table}\r\n                columnDetails={this.state.data.Column}\r\n                pageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                exportRequired={true}\r\n                exportFileName=\"PipelineHeaderList\"\r\n                columnPickerRequired={true}\r\n                terminalsToShow={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .NoOfTerminalsToShow\r\n                }\r\n                selectionRequired={true}\r\n                columnGroupingRequired={true}\r\n                onSelectionChange={this.handleSelection}\r\n                onRowClick={this.handleRowClick}\r\n                parentComponent={this.componentName}\r\n              ></PipelineHeaderSiteViewSummaryComposite>\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : (\r\n          <LoadingPage message=\"Loading\"></LoadingPage>\r\n        )}\r\n         {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.remove}\r\n            functionGroup={fnPipelineHeaderSiteView}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleDelete}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PipelineHeaderSiteViewComposite);\r\n\r\nPipelineHeaderSiteViewComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["SiteTreeViewUserActions","_ref","operationsVisibilty","breadcrumbItem","terminals","selectedTerminal","onTerminalChange","handleBreadCrumbClick","_jsxs","className","style","marginTop","children","_jsx","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","Select","placeholder","value","disabled","terminal","options","Utilities","onChange","defaultProps","itemName","itemProps","isComponent","SiteTreeViewUserActionsComposite","TMUserActions","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","alignItems","padding","justifyContent","_Fragment","shareholder","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","WijmoGrid","flex","setFlex","translator","useTranslation","_getData","pageLength","CollectionView","sourceData","pageSize","setData","rowsPerPage","theGrid","React","theSearch","gridFilter","pagingComponent","colPicker","selectedRows","selectionRequired","selector","gridInitialized","grid","customizeFilterConditions","onRowClick","addEventListener","hostElement","e","ht","hitTest","target","closest","classList","includes","cellType","wjGrid","Cell","rowData","rows","row","dataItem","selectionMode","wjCore","select","Selector","itemChecked","s","singleSelection","filter","isSelected","current","loadash","forEach","onSelectionHandle","r","selectedRow","showCheckAll","column","rowHeaders","columns","headersVisibility","HeadersVisibility","All","useEffect","control","push","selectedItems","refresh","localStorage","getItem","parentComponent","gridState","JSON","parse","newFlex","col","matchedCol","colSetting","binding","visible","filterDefinition","collectionView","deferUpdate","sortDescriptions","clear","i","sortDesc","property","ascending","groupDescriptions","sessionStorage","gridSessionState","moveToPage","pageCount","pageIndex","text","searchText","columnPickerRequired","itemsSource","checkedMemberPath","displayMemberPath","lostFocus","addHandler","hidePopup","exportExcel","gridFlex","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","exportFileName","displayValues","columnDetail","Name","PopOver","terminalCodes","split","terminalsToShow","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","saveGridState","group","document","getElementsByClassName","chkbx","parentNode","sessionState","setItem","stringify","FlexGridFilter","operator","Operator","header","descending","apply","conditions","search","selectAll","and","or","cancel","stringOperators","op","EQ","NE","BW","EW","CT","NC","numberOperators","GT","LT","GE","LE","dateOperators","booleanOperators","getWidth","columnDetails","window","screen","width","WidthPx","parseInt","WidthPercentage","FlexGridSearch","class","ref","id","actionType","event","host","offsetHeight","focus","showPopup","PopupPosition","Below","preventDefault","colPickerClickHandler","exportRequired","fontSize","top","columnGroupingRequired","GroupPanel","FlexGrid","autoGenerateColumns","alternatingRowStep","autoRowHeights","initialized","virtualizationThreshold","onUpdatedView","FlexGridColumn","minWidth","isReadOnly","wordWrap","align","FlexGridCellTemplate","template","context","conditionalRowStyleCheck","conditionalRowStyles","ListBox","picker","initializedPicker","CollectionViewNavigator","headerFormat","byPage","cv","PipelineHeaderSiteViewDetails","pipelineHeader","modPipelineHeader","onActiveStatusChange","listOptions","modAttributeMetaDataList","attributeValidationErrors","onAttributeDataChange","isEnterpriseNode","handleValidationErrorFilter","attributeValidation","find","selectedAttribute","TerminalCode","Code","PipelineHeaderType","pipelineHeaderTypeOptions","noResultsMessage","PointName","OuterDiameter","OuterDiameterUOM","lengthUOMOptions","WallThickness","WallThicknessUOM","TypicalFlowRatePerHour","FlowRateUOM","volumeUOMOptions","AssociatedMeterCodes","pipelineMeterList","multiple","Active","Description","attribute","Accordion","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","handleCellDataEdit","PipelineHeaderSiteViewDetailsComposite","emptyPipelineHeader","pipelineHeaderValidationDef","isReadyToRender","saveEnabled","showAuthenticationLayout","tempPipelineHeader","handleChange","handleActiveStatusChange","savePipelineHeader","createPipelineHeader","updatePipelineHeader","handleSave","fillDetails","attributeList","validateSave","convertStringtoDecimal","IsWebPortalUser","handleReset","keys","selectedCompRow","IsEnterpriseNode","terminalSelectionChange","handleResetAttributeValidationError","localNodeAttribute","handleAttributeDataChange","matchedAttributes","matchedAttributesList","modattribute","Array","isArray","DefaultValue","handleAuthenticationClose","IsArchived","getAttributes","getPipelineHeaderType","getUOMList","getMeterList","componentWillReceiveProps","nextProps","Common_Code","pipelineHeaderRow","pipelineHeaderAttributeEntity","PIPELINEHEADER","getPipelineHeader","keyCode","KeyCodes","obj","keyDataCode","FunctionsList","functionGroups","modify","fnPipelineHeaderSiteView","flowrateVolumeUOMs","FLOWRATE_VOLUME","flowrateMassUOMs","FLOWRATE_MASS","volumeOption","massOption","lengthUOMs","LENGTH","lengthOption","toLocaleString","attributeMetaData","x","Attributes","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","selectedTerminals","attributesTerminalsList","existitem","Attributevalue","baseproductAttribute","valueAttribute","ListOfAttributeData","AttributeCode","AttributeValue","popUpContents","LastUpdatedTime","CreatedTime","LastActive","TMDetailsHeader","entityCode","newEntityName","TMDetailsUserActions","handleBack","onBack","UserName","LoadingPage","PipelineHeaderSiteViewSummaryComposite","tableData","onSelectionChange","WijmoGridComposite","PipelineHeaderSiteViewComposite","isDetails","isDetailsModified","terminalOptions","pipelineHeaderSiteViewKPIList","componentName","componentWillUnmount","removeEventListener","handleAdd","getPipelineHeaderList","getKPIList","handleRowClick","remove","handleSelection","items","handleDelete","deletePipelineHeaderKeys","headerCode","keyData","Key","Value","isRefreshDataRequire","ResultDataList","res","messageResult","toast","NotifyEvent","notificationMessage","autoClose","savedEvent","saveType","handleTerminalSelectionChange","authenticateDelete","getTerminalList","err","view","fnKPIInformation","objKPIRequestData","PageName","kpiPipelineHeaderSiteViewList","InputParameters","ListKPIDetails","activeItem","KPIDashboardLayout","kpiList","pageName","Table","Column","PageAttibutes","WebPortalListPageSize","NoOfTerminalsToShow","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","margin","List","handleAttributeDateValue","convertAttributeDatetoString","chars","Dateval","getFullYear","getMonth","slice","getDate","Constants","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","Checkbox","checked","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","transportationType","shareholderCode","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","shipmentCode","orderCode","receiptCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","bayCode","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","TransactionType","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks","getOptionsWithSelect","ddlOptions","selectOptionText","option","unshift","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell"],"sourceRoot":""}