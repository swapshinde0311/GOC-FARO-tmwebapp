{"version":3,"file":"static/js/3210.6919c54c.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMSummaryPage.jsx","Components/Composite/Common/TMSummaryPageComposite.jsx","Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","JS/FunctionGroups.js"],"sourcesContent":["import React from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { Icon, Popup, Card } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMSummaryPage.propTypes = {\r\n  tableData: PropTypes.array.isRequired,\r\n  columnDetails: PropTypes.array.isRequired,\r\n  pageSize: PropTypes.number,\r\n  terminalsToShow: PropTypes.number,\r\n  selectedItems: PropTypes.array.isRequired,\r\n  onSelectionChange: PropTypes.func.isRequired,\r\n  onRowClick: PropTypes.func.isRequired,\r\n  fillPage: PropTypes.bool,\r\n};\r\nTMSummaryPage.defaultProps = {\r\n  pageSize: 10,\r\n  terminalsToShow: 2,\r\n  tableData: [],\r\n  columnDetails: [],\r\n  selectedItems: [],\r\n  selectionMode: \"multiple\",\r\n  fillPage: true,\r\n};\r\n\r\nexport function TMSummaryPage({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  terminalsToShow,\r\n  selectedItems,\r\n  onSelectionChange,\r\n  onRowClick,\r\n  selectionMode,\r\n  fillPage,\r\n}) {\r\n  function terminalPopOver(terminalCodes) {\r\n    if (terminalCodes.split(\",\").length > terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={<span>{terminalCodes.split(\",\").length}</span>}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return <span>{terminalCodes}</span>;\r\n    }\r\n  }\r\n\r\n  function displayValues(cellData, columnDetail) {\r\n    const { value, field } = cellData;\r\n    if (typeof value === \"boolean\" || field === \"Active\") {\r\n      if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n      else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n    } else if (value === \"\" || value === null || value === undefined) {\r\n      return value;\r\n    } else if (field === \"TerminalCodes\" && value !== null) {\r\n      return terminalPopOver(value);\r\n    }\r\n    // var columnType = columnDetails.find(function (detail) {\r\n    //   if (detail.Name === field) {\r\n    //     return detail;\r\n    //   }\r\n    // });\r\n    else if (\r\n      columnDetail !== undefined &&\r\n      columnDetail !== null &&\r\n      columnDetail.DataType !== undefined &&\r\n      columnDetail.DataType === \"DateTime\"\r\n    ) {\r\n      return (\r\n        new Date(value).toLocaleDateString() +\r\n        \" \" +\r\n        new Date(value).toLocaleTimeString()\r\n      );\r\n    } else if (\r\n      columnDetail !== undefined &&\r\n      columnDetail !== null &&\r\n      columnDetail.DataType !== undefined &&\r\n      columnDetail.DataType === \"Date\"\r\n    ) {\r\n      return new Date(value).toLocaleDateString();\r\n    } else return value;\r\n  }\r\n\r\n  function getInitialWidth(columnDetails) {\r\n    const windowWidth = window.screen.width;\r\n    //debugger;\r\n    if (windowWidth < 1024) {\r\n      return columnDetails.WidthPx === undefined ||\r\n        columnDetails.WidthPx === null ||\r\n        columnDetails.WidthPx === \"\"\r\n        ? columnDetails.Width\r\n        : columnDetails.WidthPx;\r\n    } else {\r\n      return columnDetails.WidthPercentage === undefined ||\r\n        columnDetails.WidthPercentage === null ||\r\n        columnDetails.WidthPercentage === \"\"\r\n        ? columnDetails.Width\r\n        : columnDetails.WidthPercentage;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div\r\n          className={\r\n            fillPage === true\r\n              ? \"projectMasterList flexRelative tableScroll\"\r\n              : \" tableScroll  flexRelative\"\r\n          }\r\n        >\r\n          <DataTable\r\n            data={tableData}\r\n            reorderableColumns={true}\r\n            resizableColumns={true}\r\n            onCellClick={(data) =>\r\n              onRowClick !== undefined ? onRowClick(data.rowData) : {}\r\n            }\r\n            selectionMode={selectionMode}\r\n            selection={selectedItems}\r\n            onSelectionChange={(e) => onSelectionChange(e)}\r\n            search={true}\r\n            searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n            rows={pageSize}\r\n          >\r\n            <DataTable.ActionBar />\r\n            {columnDetails.map(function (columnDetail) {\r\n              return (\r\n                <DataTable.Column\r\n                  initialWidth={getInitialWidth(columnDetail)}\r\n                  key={columnDetail.Name}\r\n                  field={columnDetail.Name}\r\n                  header={t(columnDetail.Name)}\r\n                  sortable={true}\r\n                  renderer={(cellData) => displayValues(cellData, columnDetail)}\r\n                />\r\n              );\r\n            })}\r\n            {/* {tableData.length > 0\r\n            ? Object.keys(tableData[0]).map(function (key) {\r\n                return (\r\n                  <DataTable.Column\r\n                    initialWidth={getInitialWidth(key)}\r\n                    key={key}\r\n                    field={key}\r\n                    header={t(key)}\r\n                    sortable={true}\r\n                    renderer={displayValues}\r\n                  />\r\n                );\r\n              })\r\n            : \"\"} */}\r\n            {Array.isArray(tableData) && tableData.length > pageSize ? (\r\n              <DataTable.Pagination />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </DataTable>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMSummaryPage } from \"../../UIBase/Common/TMSummaryPage\";\r\n\r\nexport function TMSummaryPageComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  terminalsToShow,\r\n  selectedItems,\r\n  onSelectionChange,\r\n  onRowClick,\r\n  selectionMode,\r\n  fillPage,\r\n}) {\r\n  return (\r\n    <TMSummaryPage\r\n      tableData={tableData}\r\n      columnDetails={columnDetails}\r\n      pageSize={pageSize}\r\n      terminalsToShow={terminalsToShow}\r\n      selectedItems={selectedItems}\r\n      onSelectionChange={onSelectionChange}\r\n      onRowClick={onRowClick}\r\n      selectionMode={selectionMode}\r\n      fillPage={fillPage}\r\n    ></TMSummaryPage>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";"],"names":["TMSummaryPage","_ref","tableData","columnDetails","pageSize","terminalsToShow","selectedItems","onSelectionChange","onRowClick","selectionMode","fillPage","displayValues","cellData","columnDetail","value","field","_jsx","Icon","name","size","color","undefined","terminalCodes","split","length","Popup","className","on","element","children","Card","Content","DataType","Date","toLocaleDateString","toLocaleTimeString","getInitialWidth","window","screen","width","WidthPx","Width","WidthPercentage","TranslationConsumer","t","_jsxs","DataTable","data","reorderableColumns","resizableColumns","onCellClick","rowData","selection","e","search","searchPlaceholder","rows","ActionBar","map","Column","initialWidth","Name","header","sortable","renderer","Array","isArray","Pagination","TMSummaryPageComposite","defaultProps","TMUserActions","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","style","alignItems","padding","marginTop","ErrorBoundary","Breadcrumb","parents","parentitem","Item","onClick","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","disabled","shareholder","options","Utilities","onChange","Modal","open","Footer","Button","type","content","float","display","position","root","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","TMDetailsHeader","entityCode","newEntityName","popUpContents","margin","List","TMDetailsUserActions","handleBack","handleSave","handleReset","saveEnabled","functionGroups","view","modify","remove","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration"],"sourceRoot":""}