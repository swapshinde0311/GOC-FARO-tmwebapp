{"version":3,"file":"static/js/7446.6c941f01.chunk.js","mappings":"kPA4BO,SAASA,EAAyBC,GASrC,IATsC,YACtCC,EAAW,eACXC,EAAc,iBACdC,EAAgB,cAChBC,EAAa,YACbC,EAAW,mBACXC,EAAkB,mBAClBC,EAAkB,qBAClBC,GACHR,EAEG,MAAMS,EAAeC,IACjB,IAAIC,EAAYT,EAAeU,WAAWC,QAAOC,GAAKA,EAAEC,YAAcL,EAASM,QAAQD,YACvF,OACIE,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAACE,EAAAA,MAAK,CACFC,QAA4B,OAAnBV,EAASW,MAAiBV,EAAU,GAAGW,GACzB,OAAnBZ,EAASW,MAAiBV,EAAU,GAAGY,GAChB,QAAnBb,EAASW,MAAkBV,EAAU,GAAGa,IAAMb,EAAU,GAAGc,KACnEC,SAAUA,IAAMnB,EAAmBG,MAErC,EAMd,OACIO,EAAAA,EAAAA,KAACU,EAAAA,oBAAmB,CAAAT,SACdU,IACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBZ,SAAA,EAC7BW,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKZ,SAAA,EAChBD,EAAAA,EAAAA,KAAA,OAAKa,UAAU,2BAA0BZ,UACrCD,EAAAA,EAAAA,KAACc,EAAAA,MAAK,CACFC,OAAK,EACLC,MAAO/B,EAAegC,iBACtBC,UAAU,WACVC,SAA2C,KAAjCnC,EAAYiC,iBACtBR,SAAWW,GAASjC,EAAc,mBAAoBiC,GACtDC,MAAOV,EAAE,2BACTW,MAAOX,EAAEzB,EAAiB+B,kBAC1BM,cAAc,OAGtBvB,EAAAA,EAAAA,KAAA,OAAKa,UAAU,2BAA0BZ,UACrCD,EAAAA,EAAAA,KAACwB,EAAAA,OAAM,CACHT,OAAK,EACLU,YAAad,EAAE,iBACfU,MAAOV,EAAE,iCACTK,MAAO/B,EAAeyC,mBACtBC,QAASvC,EAAYwC,kBACrBnB,SAAWW,IACP/B,EAAmB+B,EAAK,EAE5BF,UAAU,WACVI,MAAOX,EAAEzB,EAAiBwC,oBAC1BH,cAAc,EACdM,QAAQ,EACRC,iBAAkBnB,EAAE,yBAG5BX,EAAAA,EAAAA,KAAA,OAAKa,UAAU,2BAA0BZ,UACrCD,EAAAA,EAAAA,KAACc,EAAAA,MAAK,CACFC,OAAK,EACLC,MAAO/B,EAAe8C,QACtBb,UAAU,WACVT,SAAWW,GAASjC,EAAc,UAAWiC,GAC7CC,MAAOV,EAAE,8BACTW,MAAOX,EAAEzB,EAAiB6C,SAC1BR,cAAc,OAGtBvB,EAAAA,EAAAA,KAAA,OAAKa,UAAU,2BAA0BZ,UACrCD,EAAAA,EAAAA,KAACwB,EAAAA,OAAM,CACHT,OAAK,EACLU,YAAad,EAAE,iBACfU,MAAOV,EAAE,+BACTK,MAAO/B,EAAe+C,SACtBL,QAASvC,EAAY6C,SACrBxB,SAAWW,IACPjC,EAAc,WAAYiC,EAAK,EAEnCF,UAAU,WACVI,MAAOX,EAAEzB,EAAiB8C,UAC1BT,cAAc,EACdM,QAAQ,EACRC,iBAAkBnB,EAAE,yBAG5BX,EAAAA,EAAAA,KAAA,OAAKa,UAAU,2BAA0BZ,UACrCD,EAAAA,EAAAA,KAACc,EAAAA,MAAK,CACFC,OAAK,EACLC,MAAO/B,EAAeiD,YACtBhB,UAAU,WACVT,SAAWW,GAASjC,EAAc,cAAeiC,GACjDC,MAAOV,EAAE,mCACTW,MAAOX,EAAEzB,EAAiBgD,aAC1BX,cAAc,OAGtBvB,EAAAA,EAAAA,KAAA,OAAKa,UAAU,2BAA0BZ,UACrCW,EAAAA,EAAAA,MAAA,OACIC,UAAU,iCACVsB,MAAO,CAAEC,MAAO,MAAOC,MAAO,QAASpC,SAAA,EAEvCD,EAAAA,EAAAA,KAAA,OAAKsC,MAAM,iBAAgBrC,UACvBD,EAAAA,EAAAA,KAAA,QAAMa,UAAU,sBAAqBZ,SAChCU,EAAE,sCAGXX,EAAAA,EAAAA,KAAA,OAAKa,UAAU,aAAYZ,UACvBD,EAAAA,EAAAA,KAACuC,EAAAA,SAAQ,CACLxB,OAAK,EACLZ,QAASlB,EAAeuD,WACxB/B,SAAWW,GAASjC,EAAc,aAAciC,GAChDJ,MAAO/B,EAAeuD,qBAMtCxC,EAAAA,EAAAA,KAAA,OAAKa,UAAU,2BAA0BZ,UACrCD,EAAAA,EAAAA,KAACwB,EAAAA,OAAM,CACHT,OAAK,EACLU,YAAad,EAAE,iBACfU,MAAOV,EAAE,6BACTK,MAAO/B,EAAewD,OACtBd,QAAS,CACL,CAAEe,KAAM/B,EAAE,mBAAoBK,OAAO,GACrC,CAAE0B,KAAM/B,EAAE,+BAAgCK,OAAO,IAErDP,SAAWW,GAAS7B,EAAqB6B,GACzCE,MAAOX,EAAEzB,EAAiBuD,QAC1BlB,cAAc,EACdM,QAAQ,EACRC,iBAAkBnB,EAAE,yBAG5BX,EAAAA,EAAAA,KAAA,OAAKa,UAAU,2BAA0BZ,UACrCD,EAAAA,EAAAA,KAACc,EAAAA,MAAK,CACFC,OAAK,EACLC,MAAO/B,EAAe0D,QACtBlC,SAAWW,GAASjC,EAAc,UAAWiC,GAC7CC,MAAOV,EAAE,8BACTW,MAAOX,EAAEzB,EAAiByD,SAC1BzB,UAAWjC,EAAewD,SAAWzD,EAAYyD,OAAS,WAAa,GACvElB,cAAc,UAK1BX,EAAAA,EAAAA,MAAA,OAAKC,UAAiD,KAAtC5B,EAAeyC,yBAAmEkB,IAAtC3D,EAAeyC,mBAAmC,MAAQ,SAASzB,SAAA,EAC3HD,EAAAA,EAAAA,KAAA,OAAKa,UAAU,qCAAoCZ,UAC/CD,EAAAA,EAAAA,KAAA,MAAAC,SAAKU,EAAE,yCAEXX,EAAAA,EAAAA,KAAA,OAAKa,UAAU,sBAAqBZ,UAChCW,EAAAA,EAAAA,MAACiC,EAAAA,GAAS,CACNzB,KAAMnC,EAAeU,WACrBmD,OAAQxD,EAAmBW,SAAA,EAE3BD,EAAAA,EAAAA,KAAC6C,EAAAA,GAAUE,OAAM,CACblC,UAAU,gBAEVT,MAAM,YACN4C,OAAQrC,EAAE,gCACVsC,cAAc,QAHV,cAMRjD,EAAAA,EAAAA,KAAC6C,EAAAA,GAAUE,OAAM,CACblC,UAAU,gBAEVT,MAAM,KACN4C,OAAQrC,EAAE,yBACVuC,SAAU1D,GAHN,OAMRQ,EAAAA,EAAAA,KAAC6C,EAAAA,GAAUE,OAAM,CACblC,UAAU,gBAEVT,MAAM,KACN4C,OAAQrC,EAAE,yBACVuC,SAAU1D,GAHN,OAMRQ,EAAAA,EAAAA,KAAC6C,EAAAA,GAAUE,OAAM,CACblC,UAAU,gBAEVT,MAAM,MACN4C,OAAQrC,EAAE,0BACVuC,SAAU1D,GAHN,QAMRQ,EAAAA,EAAAA,KAAC6C,EAAAA,GAAUE,OAAM,CACblC,UAAU,gBAEVT,MAAM,OACN4C,OAAQrC,EAAE,2BACVuC,SAAU1D,GAHN,oBAcxC,CAvNAV,EAA0BqE,aAAe,CACrC/D,YAAa,CACT6C,SAAU,GACVL,kBAAmB,K,gJCD3B,MAAMwB,UAA2CC,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KACzDC,MAAQ,CACNxE,YAAayE,IAAAA,UAAiBC,EAAAA,IAC9BzE,eAAgB,CAAC,EACjBC,iBAAkByE,EAAAA,GAChBC,EAAAA,IAEFC,iBAAiB,EACjBC,aAAa,EACbC,gCAAiC,CAAC,EAClCnC,kBAAmB,GACnBoC,0BAA0B,EAC1BC,gBAAiB,CAAC,GAClB,KA0IFC,aAAe,CAACC,EAAc/C,KAC5B,IACE,MAAMnC,EAAiBwE,IAAAA,UAAiBW,KAAKZ,MAAMvE,gBACnDA,EAAekF,GAAgB/C,EAC/BgD,KAAKC,SAAS,CAAEpF,mBAEhB,MAAMC,EAAmBuE,IAAAA,UAAiBW,KAAKZ,MAAMtE,uBACC0D,IAAlDgB,EAAAA,GAAgCO,KAClCjF,EAAiBiF,GAAgBR,EAAAA,GAC/BC,EAAAA,GAAgCO,GAChC/C,GAEFgD,KAAKC,SAAS,CAAEnF,qBAEpB,CAAE,MAAOoC,GACPgD,QAAQC,IACN,mEACAjD,EAEJ,GACA,KAEFkD,uBAA0BpD,IACxB,IACE,MAAMnC,EAAiBwE,IAAAA,UAAiBW,KAAKZ,MAAMvE,gBAC7CC,EAAmBuE,IAAAA,UAAiBW,KAAKZ,MAAMtE,kBACrDD,EAAeyC,mBAAqBN,EAEpClC,EAAiBwC,mBAAqB,GACtC0C,KAAKC,SAAS,CAAEpF,iBAAgBC,qBAAoB,IAClDkF,KAAKK,kBAAkBrD,IAE3B,CAAE,MAAOE,GACPgD,QAAQC,IACN,6EACAjD,EAEJ,GACA,KAkCFhC,mBAAsBG,IACpB,IACE,MAAMR,EAAiBwE,IAAAA,UAAiBW,KAAKZ,MAAMvE,gBAEnDyF,OAAOC,KAAK1F,EAAeU,WAAWF,EAASmF,WAAWC,SAAQ,SAChEC,GAEY,cAARA,GAAuBA,IAAQrF,EAASW,QAC1CnB,EAAeU,WAAWF,EAASmF,UAAUE,IAAO,EAExD,IACA7F,EAAeU,WAAWF,EAASmF,UAAUnF,EAASW,QAAS,EAE/DgE,KAAKC,SAAS,CAAEpF,kBAClB,CAAE,MAAO8F,GACPT,QAAQC,IAAI,8BAA8BQ,EAC5C,GACA,KAEFC,yBAA4B5D,IAC1B,IACE,MAAMnC,EAAiBwE,IAAAA,UAAiBW,KAAKZ,MAAMvE,gBAEnDA,EAAewD,OAASrB,EACpBnC,EAAewD,SAAW2B,KAAKZ,MAAMxE,YAAYyD,SACnDxD,EAAe0D,QAAU,IAE3B,MAAMzD,EAAmBuE,IAAAA,UAAiBW,KAAKZ,MAAMtE,kBACjDD,EAAewD,SAAW2B,KAAKZ,MAAMxE,YAAYyD,SACpB,OAA3BxD,EAAe0D,SAA+C,KAA3B1D,EAAe0D,UACpDzD,EAAiByD,QAAU,KAI/ByB,KAAKC,SAAS,CAAEpF,iBAAgBC,oBAClC,CAAE,MAAOoC,GACPgD,QAAQC,IACN,+EACAjD,EAEJ,GACA,KAEF2D,YAAc,KACZ,IACE,MAAM,iBAAE/F,GAAqB,IAAKkF,KAAKZ,OACjCxE,EAAcyE,IAAAA,UAAiBW,KAAKZ,MAAMxE,aAChD0F,OAAOC,KAAKzF,GAAkB2F,SAAQ,SAAUC,GAC9C5F,EAAiB4F,GAAO,EAC1B,IACAV,KAAKC,SACH,CACEpF,eAAgB,IAAKD,GACrBkG,gBAAiB,GACjBhG,qBAEF,IAAMkF,KAAKK,kBAAkBzF,EAAY0C,qBAE7C,CAAE,MAAOJ,GACPgD,QAAQC,IACN,kEACAjD,EAEJ,GACA,KACF6D,gBAAkB,KAChB,IACEf,KAAKC,SAAS,CAAEP,aAAa,IAC7B,IAAIG,EAAkBR,IAAAA,UAAiBW,KAAKZ,MAAMS,iBACN,KAA5CG,KAAKZ,MAAMxE,YAAYiC,iBACnBmD,KAAKgB,yBAAyBnB,GAC9BG,KAAKiB,yBAAyBpB,EACpC,CAAE,MAAO3C,GACPgD,QAAQC,IAAI,yDACd,GACA,KACFe,WAAa,KACX,IACE,IAAIrG,EAAiBmF,KAAKmB,uBAE1B,GAAInB,KAAKoB,aAAavG,GAAiB,CACrC,IAAIgF,EAAkBR,IAAAA,UAAiBxE,GACnC+E,GACsD,IAAxDI,KAAKqB,MAAMC,YAAYC,aAAaC,gBAGtCxB,KAAKC,SAAS,CAAEL,2BAA0BC,oBAAmB,MAC1B,IAA7BD,GACFI,KAAKe,iBACP,GAEJ,MAAOf,KAAKC,SAAS,CAAEP,aAAa,GACtC,CAAE,MAAOxC,GACPgD,QAAQC,IACN,iEACAjD,EAEJ,GACA,KA2QFuE,0BAA4B,KAC1BzB,KAAKC,SAAS,CACZL,0BAA0B,GAC1B,CACF,CAjkBF8B,iBAAAA,GACE,IACE1B,KAAK2B,yBACL3B,KAAK4B,sBAAsB5B,KAAKqB,MAAMQ,YACxC,CAAE,MAAO3E,GACPgD,QAAQC,IACN,wEACAjD,EAEJ,CACF,CAEAyE,sBAAAA,GACE,IACEG,IACEC,EAAAA,IACAxC,EAAAA,GAAwCS,KAAKqB,MAAMW,aAAaC,YAE/DC,MAAMC,IACL,IAAIC,EAASD,EAASnF,KACtB,IAAyB,IAArBoF,EAAOC,WACT,GAA4B,OAAxBD,EAAOb,aAAuB,CAChC,IAAI/D,EAAoBwC,KAAKZ,MAAM5B,kBACnCA,EAAoB+B,EAAAA,GAClBe,OAAOC,KAAK6B,EAAOb,eAErBvB,KAAKC,SAAS,CACZN,gCAAiCyC,EAAOb,aACxC/D,qBAEJ,OAEA0C,QAAQC,IAAI,mCAAoCiC,EAAOE,UACzD,IAEDC,OAAOrF,IACNgD,QAAQC,IAAI,8CAA+CjD,EAAM,GAEvE,CAAE,MAAOyD,GACPT,QAAQC,IAAI,kCAAkCQ,EAChD,CACF,CAEA6B,yBAAAA,CAA0BC,GACxB,IACE,GAC8C,KAA5CzC,KAAKZ,MAAMxE,YAAYiC,uBACe2B,IAAtCiE,EAAUZ,YAAYa,aACtB1C,KAAKqB,MAAMW,aAAaC,YAAcQ,EAAUT,aAAaC,UAC7D,CACAjC,KAAK4B,sBAAsBa,EAAUZ,aACrC,IAAI/G,EAAmB,IAAKkF,KAAKZ,MAAMtE,kBACvCwF,OAAOC,KAAKzF,GAAkB2F,SAASC,IACrC5F,EAAiB4F,GAAO,EAAE,IAE5BV,KAAKC,SAAS,CAAEnF,oBAClB,CACF,CAAE,MAAOoC,GACPgD,QAAQC,IACN,gFACAjD,EAEJ,CACF,CAEA0E,qBAAAA,CAAsBe,GACpB,IAEE,GADArD,EAAAA,GAAwB1B,SAAW,OACMY,IAArCmE,EAAqBD,YAWvB,YAVA1C,KAAKC,SAAS,CACZrF,YAAayE,IAAAA,UAAiBC,EAAAA,IAC9BzE,eAAgBwE,IAAAA,UAAiBC,EAAAA,IACjCG,iBAAiB,EACjBC,YAAaH,EAAAA,GACXS,KAAKqB,MAAMC,YAAYC,aAAaqB,cACpCC,EAAAA,EAAeC,IACfC,EAAAA,MAMN,IAAIC,EAAU,CACZ,CACEtC,IAAKuC,EAAAA,GACLrG,MAAO+F,EAAqBD,cAG5BQ,EAAM,CACRC,YAAaF,EAAAA,GACbA,SAAUD,GAEZlB,IACEC,EAAAA,IACAxC,EAAAA,GACE2D,EACAlD,KAAKqB,MAAMW,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASnF,MACG,IAArBoF,EAAOC,UACTrC,KAAKC,SACH,CACER,iBAAiB,EACjB7E,YAAayE,IAAAA,UAAiB+C,EAAOb,cACrC1G,eAAgBwE,IAAAA,UAAiB+C,EAAOb,cACxC7B,YAAaH,EAAAA,GACXS,KAAKqB,MAAMC,YAAYC,aAAaqB,cACpCC,EAAAA,EAAeO,OACfL,EAAAA,MAGJ,IAAM/C,KAAKK,kBAAkB+B,EAAOb,aAAajE,uBAGnD0C,KAAKC,SAAS,CACZrF,YAAayE,IAAAA,UAAiBC,EAAAA,IAC9BzE,eAAgBwE,IAAAA,UAAiBC,EAAAA,IACjCG,iBAAiB,IAEnBS,QAAQC,IAAI,kCAAmCiC,EAAOE,WACxD,IAEDC,OAAOrF,IACNgD,QAAQC,IACN,0CACAjD,EACAyF,EACD,GAEP,CAAE,MAAOhC,GACPT,QAAQC,IAAI,iCAAiCQ,EAC/C,CACF,CA0CAN,iBAAAA,CAAkBgD,GAChB,IACE,MAAMxI,EAAiBwE,IAAAA,UAAiBW,KAAKZ,MAAMvE,gBAC7C8E,EAAkCN,IAAAA,UACtCW,KAAKZ,MAAMO,iCAEb9E,EAAeU,WAAa,GAC5BoE,EAAgC0D,GAAYC,MAAM7C,SAAS8C,IACzD,IAAIC,EAAe,CACjB9H,UAAW6H,EACXtH,GAAIpB,EAAe4I,gBAAgBC,QAAQH,IAAS,EACpDrH,GAAIrB,EAAe8I,gBAAgBD,QAAQH,IAAS,EACpDpH,IACEtB,EAAe+I,iBAAiBF,QAAQH,IAAS,EACnDnH,OACEvB,EAAe4I,gBAAgBC,QAAQH,IAAS,GAChD1I,EAAe8I,gBAAgBD,QAAQH,IAAS,GAChD1I,EAAe+I,iBAAiBF,QAAQH,IAAS,IAIrD1I,EAAeU,WAAWsI,KAAKL,EAAa,IAE9CxD,KAAKC,SAAS,CAAEpF,kBAClB,CAAE,MAAOqC,GACPgD,QAAQC,IACN,wEACAjD,EAEJ,CACF,CAsGAkE,YAAAA,CAAavG,GACX,IACE,MAAMC,EAAmB,IAAKkF,KAAKZ,MAAMtE,kBACzCwF,OAAOC,KAAKf,EAAAA,IAAiCiB,SAAQ,SAAUC,QACjClC,IAAxB3D,EAAe6F,KACjB5F,EAAiB4F,GAAOnB,EAAAA,GACtBC,EAAAA,GAAgCkB,GAChC7F,EAAe6F,IAErB,IAEI7F,EAAewD,SAAW2B,KAAKZ,MAAMxE,YAAYyD,SACpB,OAA3BxD,EAAe0D,SAA+C,KAA3B1D,EAAe0D,UACpDzD,EAA0B,QAAI,4BAIlC,IAAIgJ,EAAe,CACjBC,YAAa,WACbC,QAAS,yCACTC,qBAAsB,IAGNpJ,EAAeU,WAAWC,QAAQC,IAAe,IAATA,EAAEQ,KAE5CiI,QAAU,GACxBJ,EAAaG,qBAAqBJ,KAAK,CACrCM,UAAW,CAAC,2BACZC,UAAW,CAACvJ,EAAegC,kBAC3BwH,WAAW,EACXC,aAAc,qCAIlBtE,KAAKC,SAAS,CAAEnF,qBAChB,IAAIyJ,EAAcjE,OAAOkE,OAAO1J,GAAkB2J,OAAM,SAAU7H,GAChE,MAAiB,KAAVA,CACT,IACA,OAAIkH,EAAaG,qBAAqBC,OAAS,GAC7ClE,KAAKqB,MAAMqD,QAAQ1E,KAAKZ,MAAMvE,eAAgB,SAAUiJ,IACjD,GAEFS,CACT,CAAE,MAAOrH,GACPgD,QAAQC,IAAI,wBAAwBjD,EACtC,CACF,CAEAiE,oBAAAA,GACE,IACE,IAAItG,EAAiBwE,IAAAA,UAAiBW,KAAKZ,MAAMvE,gBA+BjD,OA7BAA,EAAe4I,gBAAkB,GACjC5I,EAAe8I,gBAAkB,GACjC9I,EAAe+I,iBAAmB,GAElC/I,EAAeU,WAAWkF,SAAS8C,KACjB,IAAZA,EAAKtH,GACPpB,EAAe4I,gBACb5I,EAAe4I,gBAAkBF,EAAK7H,UAAY,KAC/B,IAAZ6H,EAAKrH,GACdrB,EAAe8I,gBACb9I,EAAe8I,gBAAkBJ,EAAK7H,UAAY,KAC9B,IAAb6H,EAAKpH,MACdtB,EAAe+I,iBACb/I,EAAe+I,iBAAmBL,EAAK7H,UAAY,IACvD,IAGFb,EAAe4I,gBAAkB5I,EAAe4I,gBAAgBkB,MAC9D,GACC,GAEH9J,EAAe8I,gBAAkB9I,EAAe8I,gBAAgBgB,MAC9D,GACC,GAEH9J,EAAe+I,iBAAmB/I,EAAe+I,iBAAiBe,MAChE,GACC,GAEI9J,CACT,CAAE,MAAOqC,GACPgD,QAAQC,IACN,2EACAjD,EAEJ,CACF,CAEA8D,wBAAAA,CAAyBnG,GACvB,IACE,IAAImI,EAAU,CACZ,CACEtC,IAAKuC,EAAAA,GACLrG,MAAO/B,EAAegC,mBAGtBqG,EAAM,CACRC,YAAaF,EAAAA,GACbA,SAAUD,EACV4B,OAAQ/J,GAGNiJ,EAAe,CACjBC,YAAa,WACbC,QAAS,yCACTC,qBAAsB,CACpB,CACEE,UAAW,CAAC,2BACZC,UAAW,CAACvJ,EAAegC,kBAC3BwH,WAAW,EACXC,aAAc,MAKpBxC,IACEC,EAAAA,IACAxC,EAAAA,GACE2D,EACAlD,KAAKqB,MAAMW,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASnF,KACtB8G,EAAaC,YAAc3B,EAAOC,UAAY,UAAY,WAC1DyB,EAAaG,qBAAqB,GAAGI,UAAYjC,EAAOC,WAC/B,IAArBD,EAAOC,UACTrC,KAAKC,SACH,CACEP,YAAaH,EAAAA,GACXS,KAAKqB,MAAMC,YAAYC,aAAaqB,cACpCC,EAAAA,EAAeO,OACfL,EAAAA,IAEFnD,0BAA0B,IAG5B,IACEI,KAAK4B,sBAAsB,CACzBc,YAAa7H,EAAegC,sBAIlCiH,EAAaG,qBAAqB,GAAGK,aACnClC,EAAOE,UAAU,GACnBtC,KAAKC,SAAS,CACZP,YAAaH,EAAAA,GACXS,KAAKqB,MAAMC,YAAYC,aAAaqB,cACpCC,EAAAA,EAAeC,IACfC,EAAAA,IAEFnD,0BAA0B,IAG5BM,QAAQC,IAAI,qCAAsCiC,EAAOE,YAE3DtC,KAAKqB,MAAMqD,QAAQ1E,KAAKZ,MAAMvE,eAAgB,MAAOiJ,EAAa,IAEnEvB,OAAOrF,IACN8C,KAAKC,SAAS,CACZP,YAAaH,EAAAA,GACXS,KAAKqB,MAAMC,YAAYC,aAAaqB,cACpCC,EAAAA,EAAeC,IACfC,EAAAA,IAEFnD,0BAA0B,IAG5BkE,EAAaG,qBAAqB,GAAGK,aAAepH,EACpD8C,KAAKqB,MAAMqD,QAAQ1E,KAAKZ,MAAMvE,eAAgB,MAAOiJ,EAAa,GAExE,CAAE,MAAO5G,GACPgD,QAAQC,IAAI,qCAAqCjD,EACnD,CACF,CAEA+D,wBAAAA,CAAyBpG,GACvB,IACE,IAAImI,EAAU,CACZ,CACEtC,IAAKuC,EAAAA,GACLrG,MAAO/B,EAAegC,mBAGtBqG,EAAM,CACRC,YAAaF,EAAAA,GACbA,SAAUD,EACV4B,OAAQ/J,GAGNiJ,EAAe,CACjBC,YAAa,WACbC,QAAS,yCACTC,qBAAsB,CACpB,CACEE,UAAW,CAAC,2BACZC,UAAW,CAACvJ,EAAegC,kBAC3BwH,WAAW,EACXC,aAAc,MAKpBxC,IACEC,EAAAA,IACAxC,EAAAA,GACE2D,EACAlD,KAAKqB,MAAMW,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASnF,KACtB8G,EAAaC,YAAc3B,EAAOC,UAAY,UAAY,WAC1DyB,EAAaG,qBAAqB,GAAGI,UAAYjC,EAAOC,WAC/B,IAArBD,EAAOC,UACTrC,KAAKC,SACH,CACEP,YAAaH,EAAAA,GACXS,KAAKqB,MAAMC,YAAYC,aAAaqB,cACpCC,EAAAA,EAAeO,OACfL,EAAAA,IAEFnD,0BAA0B,IAG5B,IACEI,KAAK4B,sBAAsB,CACzBc,YAAa7H,EAAegC,sBAIlCiH,EAAaG,qBAAqB,GAAGK,aACnClC,EAAOE,UAAU,GACnBtC,KAAKC,SAAS,CACZP,YAAaH,EAAAA,GACXS,KAAKqB,MAAMC,YAAYC,aAAaqB,cACpCC,EAAAA,EAAeO,OACfL,EAAAA,IAEFnD,0BAA0B,IAG5BM,QAAQC,IAAI,qCAAsCiC,EAAOE,YAE3DtC,KAAKqB,MAAMqD,QAAQ1E,KAAKZ,MAAMvE,eAAgB,SAAUiJ,EAAa,IAEtEvB,OAAOrF,IACN8C,KAAKC,SAAS,CACZP,YAAaH,EAAAA,GACXS,KAAKqB,MAAMC,YAAYC,aAAaqB,cACpCC,EAAAA,EAAeO,OACfL,EAAAA,IAEFnD,0BAA0B,IAG5BkE,EAAaG,qBAAqB,GAAGK,aAAepH,EACpD8C,KAAKqB,MAAMqD,QAAQ1E,KAAKZ,MAAMvE,eAAgB,SAAUiJ,EAAa,GAE3E,CAAE,MAAO5G,GACPgD,QAAQC,IAAI,oCAAoCjD,EAClD,CACF,CAOA2H,MAAAA,GACE,MAAM7J,EAAc,CAClB6C,SAAUiH,EAAAA,GACVtH,kBAAmBwC,KAAKZ,MAAM5B,mBAE1BuH,EAAgB,CACpB,CACEC,UAAW,8BACXC,WACE,IAAIC,KACFlF,KAAKZ,MAAMvE,eAAesK,iBAC1BC,qBACF,IACA,IAAIF,KACFlF,KAAKZ,MAAMvE,eAAesK,iBAC1BE,sBAEN,CACEL,UAAW,oCACXC,gBAC+CzG,IAA7CwB,KAAKZ,MAAMvE,eAAeyK,gBACmB,OAA7CtF,KAAKZ,MAAMvE,eAAeyK,eACtB,IAAIJ,KACFlF,KAAKZ,MAAMvE,eAAeyK,gBAC1BF,qBACF,IACA,IAAIF,KACFlF,KAAKZ,MAAMvE,eAAeyK,gBAC1BD,qBACF,IAER,CACEL,UAAW,8BACXC,WACE,IAAIC,KAAKlF,KAAKZ,MAAMvE,eAAe0K,aAAaH,qBAChD,IACA,IAAIF,KAAKlF,KAAKZ,MAAMvE,eAAe0K,aAAaF,uBAItD,OAAOrF,KAAKZ,MAAMK,iBAChBjD,EAAAA,EAAAA,MAAA,OAAAX,SAAA,EACED,EAAAA,EAAAA,KAAC4J,EAAAA,EAAa,CAAA3J,UACZD,EAAAA,EAAAA,KAAC6J,EAAAA,EAAe,CACdC,WAAY1F,KAAKZ,MAAMxE,YAAYiC,iBACnC8I,cAAc,6BACdZ,cAAeA,OAGnBnJ,EAAAA,EAAAA,KAAC4J,EAAAA,EAAa,CAAA3J,UACZD,EAAAA,EAAAA,KAAClB,EAAyB,CACxBE,YAAaoF,KAAKZ,MAAMxE,YACxBC,eAAgBmF,KAAKZ,MAAMvE,eAC3BG,YAAaA,EACbF,iBAAkBkF,KAAKZ,MAAMtE,iBAC7BC,cAAeiF,KAAKF,aACpB7E,mBAAoB+E,KAAKI,uBACzBlF,mBAAoB8E,KAAK9E,mBACzBC,qBAAsB6E,KAAKY,8BAG/BhF,EAAAA,EAAAA,KAAC4J,EAAAA,EAAa,CAAA3J,UACZD,EAAAA,EAAAA,KAACgK,EAAAA,EAAoB,CACnBC,WAAY7F,KAAKqB,MAAMyE,OACvB5E,WAAYlB,KAAKkB,WACjBL,YAAab,KAAKa,YAClBnB,YAAaM,KAAKZ,MAAMM,gBAG3BM,KAAKZ,MAAMQ,0BACVhE,EAAAA,EAAAA,KAACmK,EAAAA,EAAwB,CACvBC,SAAUhG,KAAKqB,MAAMC,YAAYC,aAAa0E,SAC9CC,aAC8C,KAA5ClG,KAAKZ,MAAMxE,YAAYiC,iBACnBgG,EAAAA,EAAeC,IACfD,EAAAA,EAAeO,OAErB+C,cAAepD,EAAAA,GACfqD,gBAAiBpG,KAAKe,gBACtBsF,YAAarG,KAAKyB,4BAElB,SAGN7F,EAAAA,EAAAA,KAAC0K,EAAAA,EAAW,CAACtC,QAAQ,WAEzB,EAGF,MAOA,GAAeuC,EAAAA,EAAAA,KAPUnH,IAChB,CACLkC,YAAalC,EAAMoH,eAAelF,YAClCU,aAAc5C,EAAMoH,eAAeC,aAIvC,CAAwCzH,E,iFCprBjC,SAASyG,EAAe9K,GAAgD,IAA/C,WAAE+K,EAAU,cAAEC,EAAa,cAAEZ,GAAepK,EAC1E,OACEiB,EAAAA,EAAAA,KAACU,EAAAA,oBAAmB,CAAAT,SAChBU,IACAX,EAAAA,EAAAA,KAAA,OAAKa,UAAU,kBAAiBZ,UAC9BW,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBZ,SAAA,EAChCD,EAAAA,EAAAA,KAAA,OAAKa,UAAU,4BAA2BZ,UACxCD,EAAAA,EAAAA,KAAA,QAAMmC,MAAO,CAAE2I,OAAQ,QAAUjK,UAAU,cAAaZ,SACtC,KAAf6J,QAAoClH,IAAfkH,EAClBnJ,EAAEoJ,GACFD,MAGQ,KAAfA,QACclH,IAAfkH,GACAX,EAAcb,OAAS,GACrBtI,EAAAA,EAAAA,KAAA,OAAKa,UAAU,kBAAiBZ,UAC9BD,EAAAA,EAAAA,KAAC+K,EAAAA,MAAK,CACJC,SACEpK,EAAAA,EAAAA,MAAA,OAAAX,SAAA,CACGU,EAAEwI,EAAc,GAAGC,WAAa,IAAI,IACpC,IAAMD,EAAc,GAAGE,YACxBrJ,EAAAA,EAAAA,KAACiL,EAAAA,KAAI,CACH9I,MAAO,CAAE+I,WAAY,QACrBC,KAAK,SACLC,KAAK,aACLC,KAAK,aAIXC,SAAS,cACTrL,UAEAD,EAAAA,EAAAA,KAACuL,EAAAA,KAAI,CAAC1K,UAAU,qBAAoBZ,SACjCkJ,EAAcqC,KAAKC,IAClB7K,EAAAA,EAAAA,MAAC2K,EAAAA,KAAKG,QAAO,CAEX7K,UAAU,gCAA+BZ,SAAA,CAExCU,EAAE8K,EAAQrC,WAAa,IAAI,IAAE,IAAMqC,EAAQpC,aAHxC,6BAUd,SAOd,CA3DAQ,EAAgB1G,aAAe,CAC7B2G,WAAY,GACZC,cAAe,GACfZ,cAAe,IA0DjB,S,gFCjEO,SAASa,EAAoBjL,GAKhC,IALiC,WACnCkL,EAAU,WACV3E,EAAU,YACVL,EAAW,YACXnB,GACD/E,EACC,OACEiB,EAAAA,EAAAA,KAACU,EAAAA,oBAAmB,CAAAT,SAChBU,IACAC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBZ,SAAA,EACrCD,EAAAA,EAAAA,KAAA,OAAKa,UAAU,2BAA0BZ,UACvCD,EAAAA,EAAAA,KAAC2L,EAAAA,OAAM,CACL9K,UAAU,aACV+K,QAAS3B,EACTwB,QAAS9K,EAAE,aAGfX,EAAAA,EAAAA,KAAA,OAAKa,UAAU,2BAA0BZ,UACvCW,EAAAA,EAAAA,MAAA,OAAKuB,MAAO,CAAEE,MAAO,SAAUpC,SAAA,EAC7BD,EAAAA,EAAAA,KAAC2L,EAAAA,OAAM,CACLF,QAAS9K,EAAE,uBACXE,UAAU,eACV+K,QAAS3G,KAEXjF,EAAAA,EAAAA,KAAC2L,EAAAA,OAAM,CACLF,QAAS9K,EAAE,QACXQ,UAAW2C,EACX8H,QAAStG,aAWzB,CAvCA0E,EAAqB7G,aAAe,CAAEW,aAAa,E","sources":["Components/UIBase/Details/EmailConfigurationDetails.jsx","Components/Composite/Details/EmailConfigurationDetailsComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Select, Input, Checkbox, Radio } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\n\r\n\r\nEmailConfigurationDetails.propTypes = {\r\n    emailConfig: PropTypes.object.isRequired,\r\n    modEmailConfig: PropTypes.object.isRequired,\r\n    validationErrors: PropTypes.object.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    onEntityTypeChange: PropTypes.func.isRequired,\r\n    handleCellDataEdit: PropTypes.func.isRequired,\r\n    onActiveStatusChange: PropTypes.func.isRequired,\r\n    listOptions: PropTypes.shape({\r\n        priority: PropTypes.array,\r\n        EntityTypeOptions: PropTypes.array,\r\n    }).isRequired,\r\n}\r\n\r\nEmailConfigurationDetails.defaultProps = {\r\n    listOptions: {\r\n        priority: [],\r\n        EntityTypeOptions: [],\r\n    }\r\n}\r\n\r\nexport function EmailConfigurationDetails({\r\n    emailConfig,\r\n    modEmailConfig,\r\n    validationErrors,\r\n    onFieldChange,\r\n    listOptions,\r\n    onEntityTypeChange,\r\n    handleCellDataEdit,\r\n    onActiveStatusChange\r\n}) {\r\n\r\n    const radioButton = (cellData) => {\r\n        var recipient = modEmailConfig.Recipients.filter(x => x.Recipient === cellData.rowData.Recipient)\r\n        return (\r\n            <div>\r\n                <Radio\r\n                    checked={cellData.field === \"To\" ? recipient[0].To :\r\n                        cellData.field === \"CC\" ? recipient[0].CC :\r\n                            cellData.field === \"BCC\" ? recipient[0].BCC : recipient[0].None}\r\n                    onChange={() => handleCellDataEdit(cellData)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"detailsContainer\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modEmailConfig.EmailMessageCode}\r\n                                indicator=\"required\"\r\n                                disabled={emailConfig.EmailMessageCode !== \"\"}\r\n                                onChange={(data) => onFieldChange(\"EmailMessageCode\", data)}\r\n                                label={t(\"EmailConfiguration_Code\")}\r\n                                error={t(validationErrors.EmailMessageCode)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(`EmailConfiguration_EntityType`)}\r\n                                value={modEmailConfig.EmailSMSEntityType}\r\n                                options={listOptions.EntityTypeOptions}\r\n                                onChange={(data) => {\r\n                                    onEntityTypeChange(data);\r\n                                }}\r\n                                indicator=\"required\"\r\n                                error={t(validationErrors.EmailSMSEntityType)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modEmailConfig.Subject}\r\n                                indicator=\"required\"\r\n                                onChange={(data) => onFieldChange(\"Subject\", data)}\r\n                                label={t(\"EmailConfiguration_Subject\")}\r\n                                error={t(validationErrors.Subject)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(`EmailConfiguration_Priority`)}\r\n                                value={modEmailConfig.Priority}\r\n                                options={listOptions.priority}\r\n                                onChange={(data) => {\r\n                                    onFieldChange(\"Priority\", data);\r\n                                }}\r\n                                indicator=\"required\"\r\n                                error={t(validationErrors.Priority)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modEmailConfig.MessageText}\r\n                                indicator=\"required\"\r\n                                onChange={(data) => onFieldChange(\"MessageText\", data)}\r\n                                label={t(\"EmailConfiguration_EmailMessage\")}\r\n                                error={t(validationErrors.MessageText)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <div\r\n                                className=\"ui single-input fluid disabled\"\r\n                                style={{ width: \"30%\", float: \"left\" }}\r\n                            >\r\n                                <div class=\"ui input-label\">\r\n                                    <span className=\"input-label-message\">\r\n                                        {t(\"EmailConfiguration_Attachment\")}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"input-wrap\">\r\n                                    <Checkbox\r\n                                        fluid\r\n                                        checked={modEmailConfig.Attachment}\r\n                                        onChange={(data) => onFieldChange(\"Attachment\", data)}\r\n                                        value={modEmailConfig.Attachment}\r\n                                    />\r\n                                </div>\r\n                                </div>\r\n                    </div>\r\n\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(`EmailConfiguration_Status`)}\r\n                                value={modEmailConfig.Active}\r\n                                options={[\r\n                                    { text: t(\"ViewShipment_Ok\"), value: true },\r\n                                    { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                                ]}\r\n                                onChange={(data) => onActiveStatusChange(data)}\r\n                                error={t(validationErrors.Active)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modEmailConfig.Remarks}\r\n                                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                                label={t(\"EmailConfiguration_Remarks\")}\r\n                                error={t(validationErrors.Remarks)}\r\n                                indicator={modEmailConfig.Active !== emailConfig.Active ? \"required\" : \"\"}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={modEmailConfig.EmailSMSEntityType !== \"\" && modEmailConfig.EmailSMSEntityType !== undefined ? \"row\" : \"hidden\"}>\r\n                        <div className=\"col col-md-8 col-lg-9 col col-xl-9\">\r\n                            <h4>{t(\"EmailConfiguration_RecipientList\")}</h4>\r\n                        </div>\r\n                        <div className=\"col-12 detailsTable\">\r\n                            <DataTable\r\n                                data={modEmailConfig.Recipients}\r\n                                onEdit={handleCellDataEdit}\r\n                            >\r\n                                <DataTable.Column\r\n                                    className=\"compColHeight\"\r\n                                    key=\"Recipient\"\r\n                                    field=\"Recipient\"\r\n                                    header={t(\"EmailConfiguration_Recipient\")}\r\n                                    editFieldType=\"text\"\r\n                                >\r\n                                </DataTable.Column>\r\n                                <DataTable.Column\r\n                                    className=\"compColHeight\"\r\n                                    key=\"To\"\r\n                                    field=\"To\"\r\n                                    header={t(\"EmailConfiguration_To\")}\r\n                                    renderer={radioButton}\r\n                                >\r\n                                </DataTable.Column>\r\n                                <DataTable.Column\r\n                                    className=\"compColHeight\"\r\n                                    key=\"CC\"\r\n                                    field=\"CC\"\r\n                                    header={t(\"EmailConfiguration_CC\")}\r\n                                    renderer={radioButton}\r\n                                >\r\n                                </DataTable.Column>\r\n                                <DataTable.Column\r\n                                    className=\"compColHeight\"\r\n                                    key=\"BCC\"\r\n                                    field=\"BCC\"\r\n                                    header={t(\"EmailConfiguration_BCC\")}\r\n                                    renderer={radioButton}\r\n                                >\r\n                                </DataTable.Column>\r\n                                <DataTable.Column\r\n                                    className=\"compColHeight\"\r\n                                    key=\"None\"\r\n                                    field=\"None\"\r\n                                    header={t(\"EmailConfiguration_None\")}\r\n                                    renderer={radioButton}\r\n                                >\r\n                                </DataTable.Column>\r\n                            </DataTable>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            )}\r\n        </TranslationConsumer>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { EmailConfigurationDetails } from \"../../UIBase/Details/EmailConfigurationDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { emptyEmailConfiguration } from \"../../../JS/DefaultEntities\";\r\nimport { emailConfigurationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport lodash from \"lodash\";\r\nimport {\r\n  functionGroups,\r\n  fnEmailConfiguration,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass EmailConfigurationDetailsComposite extends Component {\r\n  state = {\r\n    emailConfig: lodash.cloneDeep(emptyEmailConfiguration),\r\n    modEmailConfig: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      emailConfigurationValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    EmailEntityTypeRecipientOptions: {},\r\n    EntityTypeOptions: [],\r\n    showAuthenticationLayout: false,\r\n    tempEmailConfig: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.GetEmailEntityTypeList();\r\n      this.getEmailConfiguration(this.props.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  GetEmailEntityTypeList() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetEmailEntityTypeRecipientList,\r\n        Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            if (result.EntityResult !== null) {\r\n              let EntityTypeOptions = this.state.EntityTypeOptions;\r\n              EntityTypeOptions = Utilities.transferListtoOptions(\r\n                Object.keys(result.EntityResult)\r\n              );\r\n              this.setState({\r\n                EmailEntityTypeRecipientOptions: result.EntityResult,\r\n                EntityTypeOptions,\r\n              });\r\n            }\r\n          } else {\r\n            console.log(\"Error in GetEmailEntityTypeList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting GetEmailEntityTypeList:\", error);\r\n        });\r\n    } catch (err) {\r\n      console.log(\"Error in GetEmailEntityTypeList\",err)\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.emailConfig.EmailMessageCode !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getEmailConfiguration(nextProps.selectedRow);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getEmailConfiguration(mailConfigurationRow) {\r\n    try {\r\n      emptyEmailConfiguration.Priority = 2;\r\n      if (mailConfigurationRow.Common_Code === undefined) {\r\n        this.setState({\r\n          emailConfig: lodash.cloneDeep(emptyEmailConfiguration),\r\n          modEmailConfig: lodash.cloneDeep(emptyEmailConfiguration),\r\n          isReadyToRender: true,\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnEmailConfiguration\r\n          ),\r\n        });\r\n        return;\r\n      }\r\n\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.EmailConfigurationCode,\r\n          value: mailConfigurationRow.Common_Code,\r\n        },\r\n      ];\r\n      var obj = {\r\n        keyDataCode: KeyCodes.EmailConfigurationCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetEmailConfiguration,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState(\r\n              {\r\n                isReadyToRender: true,\r\n                emailConfig: lodash.cloneDeep(result.EntityResult),\r\n                modEmailConfig: lodash.cloneDeep(result.EntityResult),\r\n                saveEnabled: Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnEmailConfiguration\r\n                ),\r\n              },\r\n              () => this.bindRecipientList(result.EntityResult.EmailSMSEntityType)\r\n            );\r\n          } else {\r\n            this.setState({\r\n              emailConfig: lodash.cloneDeep(emptyEmailConfiguration),\r\n              modEmailConfig: lodash.cloneDeep(emptyEmailConfiguration),\r\n              isReadyToRender: true,\r\n            });\r\n            console.log(\"Error in getEmailConfiguration:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Error while getting EmailConfiguration:\",\r\n            error,\r\n            mailConfigurationRow\r\n          );\r\n        });\r\n    } catch (err) {\r\n      console.log(\"Error in getEmailConfiguration\",err)\r\n    }\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modEmailConfig = lodash.cloneDeep(this.state.modEmailConfig);\r\n      modEmailConfig[propertyName] = data;\r\n      this.setState({ modEmailConfig });\r\n\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (emailConfigurationValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          emailConfigurationValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleEntityTypeChange = (data) => {\r\n    try {\r\n      const modEmailConfig = lodash.cloneDeep(this.state.modEmailConfig);\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modEmailConfig.EmailSMSEntityType = data;\r\n\r\n      validationErrors.EmailSMSEntityType = \"\";\r\n      this.setState({ modEmailConfig, validationErrors }, () =>\r\n        this.bindRecipientList(data)\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on handleEntityTypeChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  bindRecipientList(EntityType) {\r\n    try {\r\n      const modEmailConfig = lodash.cloneDeep(this.state.modEmailConfig);\r\n      const EmailEntityTypeRecipientOptions = lodash.cloneDeep(\r\n        this.state.EmailEntityTypeRecipientOptions\r\n      );\r\n      modEmailConfig.Recipients = [];\r\n      EmailEntityTypeRecipientOptions[EntityType].Value.forEach((item) => {\r\n        let newRecipient = {\r\n          Recipient: item,\r\n          To: modEmailConfig.RecipientListTo.indexOf(item) >= 0 ? true : false,\r\n          CC: modEmailConfig.RecipientListCC.indexOf(item) >= 0 ? true : false,\r\n          BCC:\r\n            modEmailConfig.RecipientListBCC.indexOf(item) >= 0 ? true : false,\r\n          None:\r\n            modEmailConfig.RecipientListTo.indexOf(item) >= 0 ||\r\n            modEmailConfig.RecipientListCC.indexOf(item) >= 0 ||\r\n            modEmailConfig.RecipientListBCC.indexOf(item) >= 0\r\n              ? false\r\n              : true,\r\n        };\r\n        modEmailConfig.Recipients.push(newRecipient);\r\n      });\r\n      this.setState({ modEmailConfig });\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on bindRecipientList\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCellDataEdit = (cellData) => {\r\n    try {\r\n      const modEmailConfig = lodash.cloneDeep(this.state.modEmailConfig);\r\n\r\n      Object.keys(modEmailConfig.Recipients[cellData.rowIndex]).forEach(function (\r\n        key\r\n      ) {\r\n        if (key !== \"Recipient\" && key !== cellData.field) {\r\n          modEmailConfig.Recipients[cellData.rowIndex][key] = false;\r\n        }\r\n      });\r\n      modEmailConfig.Recipients[cellData.rowIndex][cellData.field] = true;\r\n\r\n      this.setState({ modEmailConfig });\r\n    } catch (err) {\r\n      console.log(\"Error in handlecelldataedit\",err)\r\n    }\r\n  };\r\n\r\n  handleActiveStatusChange = (data) => {\r\n    try {\r\n      const modEmailConfig = lodash.cloneDeep(this.state.modEmailConfig);\r\n\r\n      modEmailConfig.Active = data;\r\n      if (modEmailConfig.Active !== this.state.emailConfig.Active)\r\n        modEmailConfig.Remarks = \"\";\r\n\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (modEmailConfig.Active === this.state.emailConfig.Active) {\r\n        if (modEmailConfig.Remarks === null || modEmailConfig.Remarks === \"\") {\r\n          validationErrors.Remarks = \"\";\r\n        }\r\n      }\r\n\r\n      this.setState({ modEmailConfig, validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on handleActiveStatusChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const { validationErrors } = { ...this.state };\r\n      const emailConfig = lodash.cloneDeep(this.state.emailConfig);\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState(\r\n        {\r\n          modEmailConfig: { ...emailConfig },\r\n          selectedCompRow: [],\r\n          validationErrors,\r\n        },\r\n        () => this.bindRecipientList(emailConfig.EmailSMSEntityType)\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  saveEmailConfig = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempEmailConfig = lodash.cloneDeep(this.state.tempEmailConfig);\r\n      this.state.emailConfig.EmailMessageCode === \"\"\r\n        ? this.createEmailConfiguration(tempEmailConfig)\r\n        : this.updateEmailConfiguration(tempEmailConfig);\r\n    } catch (error) {\r\n      console.log(\"EmailConfigDetailsComposite : Error in saveEmailConfig\");\r\n    }\r\n  };\r\n  handleSave = () => {\r\n    try {\r\n      let modEmailConfig = this.fillRecipientDetails();\r\n      // this.setState({ saveEnabled: false });\r\n      if (this.validateSave(modEmailConfig)) {\r\n        let tempEmailConfig = lodash.cloneDeep(modEmailConfig);\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        this.setState({ showAuthenticationLayout, tempEmailConfig }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveEmailConfig();\r\n          }\r\n        });\r\n      } else this.setState({ saveEnabled: true });\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateSave(modEmailConfig) {\r\n    try {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      Object.keys(emailConfigurationValidationDef).forEach(function (key) {\r\n        if (modEmailConfig[key] !== undefined)\r\n          validationErrors[key] = Utilities.validateField(\r\n            emailConfigurationValidationDef[key],\r\n            modEmailConfig[key]\r\n          );\r\n      });\r\n\r\n      if (modEmailConfig.Active !== this.state.emailConfig.Active) {\r\n        if (modEmailConfig.Remarks === null || modEmailConfig.Remarks === \"\") {\r\n          validationErrors[\"Remarks\"] = \"Vehicle_RemarksRequired\";\r\n        }\r\n      }\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"EmailConfiguration_AddUpdateSuccessMsg\",\r\n        messageResultDetails: [],\r\n      };\r\n\r\n      let ToRecipient = modEmailConfig.Recipients.filter((x) => x.To === true);\r\n\r\n      if (ToRecipient.length <= 0) {\r\n        notification.messageResultDetails.push({\r\n          keyFields: [\"EmailConfiguration_Code\"],\r\n          keyValues: [modEmailConfig.EmailMessageCode],\r\n          isSuccess: false,\r\n          errorMessage: \"EMAILMESSAGE_RECIPIENTTO_EMPTY_X\",\r\n        });\r\n      }\r\n\r\n      this.setState({ validationErrors });\r\n      let returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n      if (notification.messageResultDetails.length > 0) {\r\n        this.props.onSaved(this.state.modEmailConfig, \"update\", notification);\r\n        return false;\r\n      }\r\n      return returnValue;\r\n    } catch (error) {\r\n      console.log(\"Error is validatesave\",error)\r\n    }\r\n  }\r\n\r\n  fillRecipientDetails() {\r\n    try {\r\n      let modEmailConfig = lodash.cloneDeep(this.state.modEmailConfig);\r\n\r\n      modEmailConfig.RecipientListTo = \"\";\r\n      modEmailConfig.RecipientListCC = \"\";\r\n      modEmailConfig.RecipientListBCC = \"\";\r\n\r\n      modEmailConfig.Recipients.forEach((item) => {\r\n        if (item.To === true) {\r\n          modEmailConfig.RecipientListTo =\r\n            modEmailConfig.RecipientListTo + item.Recipient + \",\";\r\n        } else if (item.CC === true) {\r\n          modEmailConfig.RecipientListCC =\r\n            modEmailConfig.RecipientListCC + item.Recipient + \",\";\r\n        } else if (item.BCC === true) {\r\n          modEmailConfig.RecipientListBCC =\r\n            modEmailConfig.RecipientListBCC + item.Recipient + \",\";\r\n        }\r\n      });\r\n\r\n      modEmailConfig.RecipientListTo = modEmailConfig.RecipientListTo.slice(\r\n        0,\r\n        -1\r\n      );\r\n      modEmailConfig.RecipientListCC = modEmailConfig.RecipientListCC.slice(\r\n        0,\r\n        -1\r\n      );\r\n      modEmailConfig.RecipientListBCC = modEmailConfig.RecipientListBCC.slice(\r\n        0,\r\n        -1\r\n      );\r\n      return modEmailConfig;\r\n    } catch (error) {\r\n      console.log(\r\n        \"EmailConfigurationDetailsComposite:Error occured on fillRecipientDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  createEmailConfiguration(modEmailConfig) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.EmailConfigurationCode,\r\n          value: modEmailConfig.EmailMessageCode,\r\n        },\r\n      ];\r\n      let obj = {\r\n        keyDataCode: KeyCodes.EmailConfigurationCode,\r\n        KeyCodes: keyCode,\r\n        Entity: modEmailConfig,\r\n      };\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"EmailConfiguration_AddUpdateSuccessMsg\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"EmailConfiguration_Code\"],\r\n            keyValues: [modEmailConfig.EmailMessageCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.CreateEmailConfiguration,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          if (result.IsSuccess === true) {\r\n            this.setState(\r\n              {\r\n                saveEnabled: Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnEmailConfiguration\r\n                ),\r\n                showAuthenticationLayout: false,\r\n\r\n              },\r\n              () =>\r\n                this.getEmailConfiguration({\r\n                  Common_Code: modEmailConfig.EmailMessageCode,\r\n                })\r\n            );\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            this.setState({\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.add,\r\n                fnEmailConfiguration\r\n              ),\r\n              showAuthenticationLayout: false,\r\n\r\n            });\r\n            console.log(\"Error in createEmailConfiguration:\", result.ErrorList);\r\n          }\r\n          this.props.onSaved(this.state.modEmailConfig, \"add\", notification);\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnEmailConfiguration\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          this.props.onSaved(this.state.modEmailConfig, \"add\", notification);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in create emailconfiguration\",error)\r\n    }\r\n  }\r\n\r\n  updateEmailConfiguration(modEmailConfig) {\r\n    try {\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.EmailConfigurationCode,\r\n          value: modEmailConfig.EmailMessageCode,\r\n        },\r\n      ];\r\n      let obj = {\r\n        keyDataCode: KeyCodes.EmailConfigurationCode,\r\n        KeyCodes: keyCode,\r\n        Entity: modEmailConfig,\r\n      };\r\n\r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"EmailConfiguration_AddUpdateSuccessMsg\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"EmailConfiguration_Code\"],\r\n            keyValues: [modEmailConfig.EmailMessageCode],\r\n            isSuccess: false,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.UpdateEmailConfiguration,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let result = response.data;\r\n          notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n          if (result.IsSuccess === true) {\r\n            this.setState(\r\n              {\r\n                saveEnabled: Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnEmailConfiguration\r\n                ),\r\n                showAuthenticationLayout: false,\r\n\r\n              },\r\n              () =>\r\n                this.getEmailConfiguration({\r\n                  Common_Code: modEmailConfig.EmailMessageCode,\r\n                })\r\n            );\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            this.setState({\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnEmailConfiguration\r\n              ),\r\n              showAuthenticationLayout: false,\r\n\r\n            });\r\n            console.log(\"Error in createEmailConfiguration:\", result.ErrorList);\r\n          }\r\n          this.props.onSaved(this.state.modEmailConfig, \"update\", notification);\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnEmailConfiguration\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          notification.messageResultDetails[0].errorMessage = error;\r\n          this.props.onSaved(this.state.modEmailConfig, \"modify\", notification);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in updateemailConfiguration\",error)\r\n    }\r\n  }\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      priority: Constants.EmailPriority,\r\n      EntityTypeOptions: this.state.EntityTypeOptions,\r\n    };\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"EmailConfiguration_LastUpDt\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modEmailConfig.LastUpdatedTime\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modEmailConfig.LastUpdatedTime\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"EmailConfiguration_LastActiveTime\",\r\n        fieldValue:\r\n          this.state.modEmailConfig.LastActiveTime !== undefined &&\r\n          this.state.modEmailConfig.LastActiveTime !== null\r\n            ? new Date(\r\n                this.state.modEmailConfig.LastActiveTime\r\n              ).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(\r\n                this.state.modEmailConfig.LastActiveTime\r\n              ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"EmailConfiguration_CreateDt\",\r\n        fieldValue:\r\n          new Date(this.state.modEmailConfig.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modEmailConfig.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.emailConfig.EmailMessageCode}\r\n            newEntityName=\"EmailConfiguration_lHeader\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <EmailConfigurationDetails\r\n            emailConfig={this.state.emailConfig}\r\n            modEmailConfig={this.state.modEmailConfig}\r\n            listOptions={listOptions}\r\n            validationErrors={this.state.validationErrors}\r\n            onFieldChange={this.handleChange}\r\n            onEntityTypeChange={this.handleEntityTypeChange}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n          ></EmailConfigurationDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.emailConfig.EmailMessageCode === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnEmailConfiguration}\r\n            handleOperation={this.saveEmailConfig}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EmailConfigurationDetailsComposite);\r\n\r\nEmailConfigurationDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n"],"names":["EmailConfigurationDetails","_ref","emailConfig","modEmailConfig","validationErrors","onFieldChange","listOptions","onEntityTypeChange","handleCellDataEdit","onActiveStatusChange","radioButton","cellData","recipient","Recipients","filter","x","Recipient","rowData","_jsx","children","Radio","checked","field","To","CC","BCC","None","onChange","TranslationConsumer","t","_jsxs","className","Input","fluid","value","EmailMessageCode","indicator","disabled","data","label","error","reserveSpace","Select","placeholder","EmailSMSEntityType","options","EntityTypeOptions","search","noResultsMessage","Subject","Priority","priority","MessageText","style","width","float","class","Checkbox","Attachment","Active","text","Remarks","undefined","DataTable","onEdit","Column","header","editFieldType","renderer","defaultProps","EmailConfigurationDetailsComposite","Component","constructor","arguments","state","lodash","emptyEmailConfiguration","Utilities","emailConfigurationValidationDef","isReadyToRender","saveEnabled","EmailEntityTypeRecipientOptions","showAuthenticationLayout","tempEmailConfig","handleChange","propertyName","this","setState","console","log","handleEntityTypeChange","bindRecipientList","Object","keys","rowIndex","forEach","key","err","handleActiveStatusChange","handleReset","selectedCompRow","saveEmailConfig","createEmailConfiguration","updateEmailConfiguration","handleSave","fillRecipientDetails","validateSave","props","userDetails","EntityResult","IsWebPortalUser","handleAuthenticationClose","componentDidMount","GetEmailEntityTypeList","getEmailConfiguration","selectedRow","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","ErrorList","catch","componentWillReceiveProps","nextProps","Common_Code","mailConfigurationRow","FunctionsList","functionGroups","add","fnEmailConfiguration","keyCode","KeyCodes","obj","keyDataCode","modify","EntityType","Value","item","newRecipient","RecipientListTo","indexOf","RecipientListCC","RecipientListBCC","push","notification","messageType","message","messageResultDetails","length","keyFields","keyValues","isSuccess","errorMessage","returnValue","values","every","onSaved","slice","Entity","render","Constants","popUpContents","fieldName","fieldValue","Date","LastUpdatedTime","toLocaleDateString","toLocaleTimeString","LastActiveTime","CreatedTime","ErrorBoundary","TMDetailsHeader","entityCode","newEntityName","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","margin","Popup","element","Icon","marginLeft","root","name","size","position","List","map","content","Content","Button","onClick"],"sourceRoot":""}