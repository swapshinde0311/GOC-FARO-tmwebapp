{"version":3,"file":"static/js/4674.0dd3b23c.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/UIBase/Details/LeakageManualEntryDetails.jsx","Components/Composite/Details/LeakageManualEntryDetailsComposite.jsx","Components/Composite/Entity/LeakageManualEntryComposite.jsx","JS/FunctionGroups.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Input, Select, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getOptionsWithSelect,\r\n  getCurrentDateFormat,\r\n} from \"../../../JS/functionalUtilities\";\r\n\r\nLeakageManualEntryDetails.propTypes = {\r\n  modLeakageManualEntry: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    productCategory: PropTypes.array,\r\n    productCode: PropTypes.array,\r\n    quantityUOM: PropTypes.array,\r\n    densityUOM: PropTypes.array,\r\n    tankCode: PropTypes.array,\r\n    meterCode: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onTankSearchChange: PropTypes.func.isRequired,\r\n  onMeterSearchChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n};\r\nLeakageManualEntryDetails.defaultProps = { isEnterpriseNode: false };\r\n\r\nexport function LeakageManualEntryDetails({\r\n  modLeakageManualEntry,\r\n  validationErrors,\r\n  listOptions,\r\n  onFieldChange,\r\n  onTankSearchChange,\r\n  onMeterSearchChange,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                indicator=\"required\"\r\n                label={t(\"LoadingDetailsEntry_ProductCategory\")}\r\n                value={modLeakageManualEntry.ProductCategory}\r\n                options={listOptions.productCategory}\r\n                error={t(validationErrors.ProductCategory)}\r\n                onChange={(data) => onFieldChange(\"ProductCategory\", data)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                indicator=\"required\"\r\n                label={t(\"ProductCode\")}\r\n                value={modLeakageManualEntry.ProductCode}\r\n                options={listOptions.productCode}\r\n                error={t(validationErrors.ProductCode)}\r\n                onChange={(data) => onFieldChange(\"ProductCode\", data)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                indicator=\"required\"\r\n                label={t(\"LoadingDetailsEntry_QuantityUOM\")}\r\n                value={modLeakageManualEntry.LeakageQtyUom}\r\n                options={listOptions.quantityUOM}\r\n                error={t(validationErrors.LeakageQtyUom)}\r\n                onChange={(data) => onFieldChange(\"LeakageQtyUom\", data)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLeakageManualEntry.LeakageQty}\r\n                label={t(\"GrossQuantity\")}\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"LeakageQty\", data)}\r\n                error={t(validationErrors.LeakageQty)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLeakageManualEntry.NetQuantity}\r\n                label={t(\"NetQuantity\")}\r\n                onChange={(data) => onFieldChange(\"NetQuantity\", data)}\r\n                error={t(validationErrors.NetQuantity)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLeakageManualEntry.Density}\r\n                label={t(\"Density\")}\r\n                onChange={(data) => onFieldChange(\"Density\", data)}\r\n                error={t(validationErrors.Density)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"BaseProductInfox_UOM\")}\r\n                value={modLeakageManualEntry.DensityUOM}\r\n                options={listOptions.densityUOM}\r\n                onChange={(data) => onFieldChange(\"DensityUOM\", data)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"TankCode\")}\r\n                indicator=\"required\"\r\n                value={modLeakageManualEntry.TankCode}\r\n                error={t(validationErrors.TankCode)}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.tankCode,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                onChange={(data) => onFieldChange(\"TankCode\", data)}\r\n                search={true}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                onSearch={onTankSearchChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"Meter_Code\")}\r\n                indicator=\"required\"\r\n                value={modLeakageManualEntry.MeterCode}\r\n                error={t(validationErrors.MeterCode)}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.meterCode,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                onChange={(data) => onFieldChange(\"MeterCode\", data)}\r\n                search={true}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                onSearch={onMeterSearchChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                value={\r\n                  modLeakageManualEntry.StartTime === null\r\n                    ? \"\"\r\n                    : new Date(modLeakageManualEntry.StartTime)\r\n                }\r\n                label={t(\"StartTime\")}\r\n                type=\"datetime\"\r\n                minuteStep=\"5\"\r\n                displayFormat={getCurrentDateFormat()}\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"StartTime\", data)}\r\n                error={t(validationErrors.StartTime)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                value={\r\n                  modLeakageManualEntry.EndTime === null\r\n                    ? \"\"\r\n                    : new Date(modLeakageManualEntry.EndTime)\r\n                }\r\n                label={t(\"EndTime\")}\r\n                type=\"datetime\"\r\n                minuteStep=\"5\"\r\n                displayFormat={getCurrentDateFormat()}\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"EndTime\", data)}\r\n                error={t(validationErrors.EndTime)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLeakageManualEntry.GrossStartTotalizer}\r\n                label={t(\"StartTotalizer\")}\r\n                onChange={(data) => onFieldChange(\"GrossStartTotalizer\", data)}\r\n                error={t(validationErrors.GrossStartTotalizer)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLeakageManualEntry.GrossEndTotalizer}\r\n                label={t(\"EndTotalizer\")}\r\n                onChange={(data) => onFieldChange(\"GrossEndTotalizer\", data)}\r\n                error={t(validationErrors.GrossEndTotalizer)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLeakageManualEntry.NetStartTotalizer}\r\n                label={t(\"LoadingDetailsEntry_NetStartTotalizer\")}\r\n                onChange={(data) => onFieldChange(\"NetStartTotalizer\", data)}\r\n                error={t(validationErrors.NetStartTotalizer)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLeakageManualEntry.NetEndTotalizer}\r\n                label={t(\"LoadingDetailsEntry_NetEndTotalizer\")}\r\n                onChange={(data) => onFieldChange(\"NetEndTotalizer\", data)}\r\n                error={t(validationErrors.NetEndTotalizer)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { LeakageManualEntryDetails } from \"../../UIBase/Details/LeakageManualEntryDetails\";\r\n\r\nimport lodash from \"lodash\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport axios from \"axios\";\r\nimport { leakageManualEntryValidationDef } from \"../../../JS/ValidationDef\";\r\nimport ErrorBoundary from \"./../../../Components/ErrorBoundary\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { emptyLeakageManualEntry } from \"../../../JS/DefaultEntities\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  functionGroups,\r\n  fnLeakageManualEntry,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button } from \"@scuf/common\";\r\n\r\nclass LeakageManualEntryDetailsComposite extends Component {\r\n  state = {\r\n    leakageManualEntry: {},\r\n    modLeakageManualEntry: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      leakageManualEntryValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    productCategoryOptions: [],\r\n    productCodeOptions: [],\r\n    quantityUOMOptions: [],\r\n    densityUOMOptions: [],\r\n    tankCodeOptions: [],\r\n    tankCodeSearchOptions: [],\r\n    meterCodeOptions: [],\r\n    meterCodeSearchOptions: [],\r\n    saveEnabled: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getProductCategory();\r\n      this.getUOMList();\r\n      this.getTankCode(this.props.userDetails.EntityResult.PrimaryShareholder);\r\n      this.getMeterCode();\r\n      this.setNewLeakageManualEntry();\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite: Error occurred on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps() {\r\n    try {\r\n      this.setNewLeakageManualEntry();\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite:Error occurred on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  setNewLeakageManualEntry() {\r\n    this.setState({\r\n      leakageManualEntry: lodash.cloneDeep(emptyLeakageManualEntry),\r\n      modLeakageManualEntry: lodash.cloneDeep(emptyLeakageManualEntry),\r\n      isReadyToRender: true,\r\n      saveEnabled: Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnLeakageManualEntry\r\n      ),\r\n    });\r\n  }\r\n\r\n  getProductCategory() {\r\n    try {\r\n      const productCategoryOptions = [\r\n        { text: \"Base Product\", value: \"BaseProduct\" },\r\n        { text: \"Additive\", value: \"Additive\" },\r\n      ];\r\n      this.setState({ productCategoryOptions });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite: Error occurred on getProductCategory\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getProductCode(productCategory) {\r\n    let apiAddress;\r\n    if (productCategory === \"BaseProduct\") {\r\n      apiAddress = RestAPIs.GetBaseProducts;\r\n    } else if (productCategory === \"Additive\") {\r\n      apiAddress = RestAPIs.GetAdditives;\r\n    }\r\n    axios(\r\n      apiAddress,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult !== undefined\r\n          ) {\r\n            const productList = [];\r\n            for (let key in result.EntityResult) {\r\n              for (let productCode of result.EntityResult[key]) {\r\n                productList.push(productCode);\r\n              }\r\n            }\r\n            this.setState({\r\n              productCodeOptions: Utilities.transferListtoOptions(productList),\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getBaseProductList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Base Product List:\", error);\r\n      });\r\n  }\r\n\r\n  getUOMList() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult.VOLUME)\r\n          ) {\r\n            const quantityUOMList = [\r\n              ...result.EntityResult.VOLUME,\r\n              ...result.EntityResult.MASS,\r\n            ];\r\n            this.setState({\r\n              quantityUOMOptions: Utilities.transferListtoOptions(\r\n                quantityUOMList\r\n              ),\r\n              densityUOMOptions: Utilities.transferListtoOptions(\r\n                result.EntityResult.DENSITY\r\n              ),\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getQuantityUOM:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getQuantityUOM:\", error);\r\n      });\r\n  }\r\n\r\n  getTankCode(shareholder) {\r\n    axios(\r\n      RestAPIs.GetTanks + \"?ShareholderCode=\" + shareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            const tankCodeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            let tankCodeSearchOptions = lodash.cloneDeep(tankCodeOptions);\r\n            if (tankCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n              tankCodeSearchOptions = tankCodeSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({\r\n              tankCodeOptions,\r\n              tankCodeSearchOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getTankCode:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getTankCode:\", error);\r\n      });\r\n  }\r\n\r\n  getMeterCode() {\r\n    axios(\r\n      RestAPIs.GetMeters,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            const meterCodeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            let meterCodeSearchOptions = lodash.cloneDeep(meterCodeOptions);\r\n            if (\r\n              meterCodeSearchOptions.length > Constants.filteredOptionsCount\r\n            ) {\r\n              meterCodeSearchOptions = meterCodeSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({\r\n              meterCodeOptions,\r\n              meterCodeSearchOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getMeterCode:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getMeterCode:\", error);\r\n      });\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      let modLeakageManualEntry = lodash.cloneDeep(\r\n        this.state.modLeakageManualEntry\r\n      );\r\n      modLeakageManualEntry[propertyName] = data;\r\n\r\n      if (propertyName === \"ProductCategory\") {\r\n        this.getProductCode(data);\r\n      }\r\n\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n\r\n      if (leakageManualEntryValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          leakageManualEntryValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n      this.setState({ validationErrors, modLeakageManualEntry });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite: Error occurred on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    this.setState({ saveEnabled: false });\r\n    const modLeakageManualEntry = lodash.cloneDeep(\r\n      this.state.modLeakageManualEntry\r\n    );\r\n    modLeakageManualEntry.UpdatedTime = new Date();\r\n    if (this.validateSave(modLeakageManualEntry)) {\r\n      modLeakageManualEntry.NetQuantity = Utilities.convertStringtoDecimal(\r\n        modLeakageManualEntry.NetQuantity\r\n      );\r\n      modLeakageManualEntry.Density = Utilities.convertStringtoDecimal(\r\n        modLeakageManualEntry.Density\r\n      );\r\n      modLeakageManualEntry.NetEndTotalizer = Utilities.convertStringtoDecimal(\r\n        modLeakageManualEntry.NetEndTotalizer\r\n      );\r\n      modLeakageManualEntry.NetStartTotalizer = Utilities.convertStringtoDecimal(\r\n        modLeakageManualEntry.NetStartTotalizer\r\n      );\r\n      modLeakageManualEntry.GrossEndTotalizer = Utilities.convertStringtoDecimal(\r\n        modLeakageManualEntry.GrossEndTotalizer\r\n      );\r\n      modLeakageManualEntry.GrossStartTotalizer = Utilities.convertStringtoDecimal(\r\n        modLeakageManualEntry.GrossStartTotalizer\r\n      );\r\n      modLeakageManualEntry.LeakageQty = Utilities.convertStringtoDecimal(\r\n        modLeakageManualEntry.LeakageQty\r\n      );\r\n      this.createLeakageManualEntry(modLeakageManualEntry);\r\n    } else {\r\n      this.setState({ saveEnabled: true });\r\n    }\r\n  };\r\n\r\n  validateSave(modLeakageManualEntry) {\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n\r\n    Object.keys(leakageManualEntryValidationDef).forEach((key) => {\r\n      if (modLeakageManualEntry[key] !== undefined) {\r\n        validationErrors[key] = Utilities.validateField(\r\n          leakageManualEntryValidationDef[key],\r\n          modLeakageManualEntry[key]\r\n        );\r\n      }\r\n    });\r\n\r\n    this.setState({ validationErrors });\r\n    let returnValue = Object.values(validationErrors).every((value) => {\r\n      return value === \"\";\r\n    });\r\n    return returnValue;\r\n  }\r\n\r\n  createLeakageManualEntry(modLeakageManualEntry) {\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      Entity: modLeakageManualEntry,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"LeakageManualEntry_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ProductCode\"],\r\n          keyValues: [modLeakageManualEntry.ProductCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.UpdateLeakageInfo,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ saveEnabled: false });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({ saveEnabled: true });\r\n          console.log(\"Error in CreateLeakageManualEntry: \", result.ErrorList);\r\n        }\r\n        this.props.onSaved(modLeakageManualEntry, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnLeakageManualEntry\r\n          ),\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modLeakageManualEntry, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      const leakageManualEntry = lodash.cloneDeep(\r\n        this.state.leakageManualEntry\r\n      );\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState({\r\n        modLeakageManualEntry: leakageManualEntry,\r\n        validationErrors,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite: Error occurred on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleTankSearchChange = (tankCode) => {\r\n    try {\r\n      let tankCodeSearchOptions = this.state.tankCodeOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(tankCode.toLowerCase())\r\n      );\r\n\r\n      if (tankCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n        tankCodeSearchOptions = tankCodeSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        tankCodeSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite: Error occurred on handleRouteSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getTankCodeSearchOptions() {\r\n    let tankCodeSearchOptions = lodash.cloneDeep(\r\n      this.state.tankCodeSearchOptions\r\n    );\r\n    let modTankCode = this.state.modLeakageManualEntry.TankCode;\r\n    if (\r\n      modTankCode !== null &&\r\n      modTankCode !== \"\" &&\r\n      modTankCode !== undefined\r\n    ) {\r\n      let selectedTankCode = tankCodeSearchOptions.find(\r\n        (element) => element.value.toLowerCase() === modTankCode.toLowerCase()\r\n      );\r\n      if (selectedTankCode === undefined) {\r\n        tankCodeSearchOptions.push({\r\n          text: modTankCode,\r\n          value: modTankCode,\r\n        });\r\n      }\r\n    }\r\n    return tankCodeSearchOptions;\r\n  }\r\n\r\n  handleMeterSearchChange = (meterCode) => {\r\n    try {\r\n      let meterCodeSearchOptions = this.state.meterCodeOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(meterCode.toLowerCase())\r\n      );\r\n\r\n      if (meterCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n        meterCodeSearchOptions = meterCodeSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        meterCodeSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite: Error occurred on handleMeterSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      const modLeakageManualEntry = lodash.cloneDeep(this.state.modLeakageManualEntry);\r\n      validationErrors[propertyName] = error;\r\n      modLeakageManualEntry[propertyName] = value;\r\n      this.setState({ validationErrors, modLeakageManualEntry });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite: Error occurred on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getMeterCodeSearchOptions() {\r\n    let meterCodeSearchOptions = lodash.cloneDeep(\r\n      this.state.meterCodeSearchOptions\r\n    );\r\n    let modMeterCode = this.state.modLeakageManualEntry.MeterCode;\r\n    if (\r\n      modMeterCode !== null &&\r\n      modMeterCode !== \"\" &&\r\n      modMeterCode !== undefined\r\n    ) {\r\n      let selectedMeterCode = meterCodeSearchOptions.find(\r\n        (element) => element.value.toLowerCase() === modMeterCode.toLowerCase()\r\n      );\r\n      if (selectedMeterCode === undefined) {\r\n        meterCodeSearchOptions.push({\r\n          text: modMeterCode,\r\n          value: modMeterCode,\r\n        });\r\n      }\r\n    }\r\n    return meterCodeSearchOptions;\r\n  }\r\n\r\n  render() {\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <LeakageManualEntryDetails\r\n            modLeakageManualEntry={this.state.modLeakageManualEntry}\r\n            validationErrors={this.state.validationErrors}\r\n            listOptions={{\r\n              productCategory: this.state.productCategoryOptions,\r\n              productCode: this.state.productCodeOptions,\r\n              quantityUOM: this.state.quantityUOMOptions,\r\n              densityUOM: this.state.densityUOMOptions,\r\n              tankCode: this.getTankCodeSearchOptions(),\r\n              meterCode: this.getMeterCodeSearchOptions(),\r\n            }}\r\n            onFieldChange={this.handleChange}\r\n            onDateTextChange={this.handleDateTextChange}\r\n            onTankSearchChange={this.handleTankSearchChange}\r\n            onMeterSearchChange={this.handleMeterSearchChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n          />\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <div className=\"row\">\r\n                <div className=\"col\" style={{ textAlign: \"right\" }}>\r\n                  <Button\r\n                    content={t(\"LookUpData_btnReset\")}\r\n                    className=\"cancelButton\"\r\n                    onClick={this.handleReset}\r\n                  ></Button>\r\n                  <Button\r\n                    content={t(\"Save\")}\r\n                    disabled={!this.state.saveEnabled}\r\n                    onClick={this.handleSave}\r\n                  ></Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </TranslationConsumer>\r\n        </ErrorBoundary>\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\nconst mapRouteToProps = (route) => {\r\n  return {\r\n    userAction: bindActionCreators(getUserDetails, route),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapRouteToProps\r\n)(LeakageManualEntryDetailsComposite);\r\n","import React, { Component } from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport LeakageManualEntryDetailsComposite from \"../Details/LeakageManualEntryDetailsComposite\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport ErrorBoundary from \"./../../../Components/ErrorBoundary\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport lodash from \"lodash\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\n\r\nclass LeakageManualEntry extends Component {\r\n  state = {\r\n    isReadyToRender: false,\r\n    operationsVisibility: { add: false, delete: false, shareholder: false },\r\n    selectedShareholder: \"\",\r\n    refreshFlag: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.setState({\r\n        isReadyToRender: true,\r\n        selectedShareholder:\r\n          this.props.userDetails.EntityResult.PrimaryShareholder,\r\n        refreshFlag: {},\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntry: Error occurred on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      const operationsVisibility = lodash.cloneDeep(\r\n        this.state.operationsVisibility\r\n      );\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibility.add = true;\r\n        // operationsVisibility.delete = true;\r\n        this.setState({ operationsVisibility });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"LeakageManualEntry: Error occurred on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      const operationsVisibility = lodash.cloneDeep(\r\n        this.state.operationsVisibility\r\n      );\r\n      operationsVisibility.add = false;\r\n      this.setState({ operationsVisibility, refreshFlag: {} });\r\n    } catch (error) {\r\n      console.log(\"LeakageManualEntry: Error occurred on handleAdd\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibility}\r\n            breadcrumbItem={this.props.activeItem}\r\n            onAdd={this.handleAdd}\r\n            shrVisible={false}\r\n            deleteVisible={false}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n          />\r\n        </ErrorBoundary>\r\n        {this.state.isReadyToRender ? (\r\n          <LeakageManualEntryDetailsComposite\r\n            key=\"LeakageManualEntryDetails\"\r\n            onSaved={this.savedEvent}\r\n            onRefresh={this.state.refreshFlag}\r\n            selectedShareholder={this.state.selectedShareholder}\r\n          />\r\n        ) : (\r\n          <LoadingPage message=\"Loading\"></LoadingPage>\r\n        )}\r\n\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LeakageManualEntry);\r\n\r\nLeakageManualEntry.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","LeakageManualEntryDetails","modLeakageManualEntry","validationErrors","listOptions","onFieldChange","onTankSearchChange","onMeterSearchChange","fluid","indicator","label","ProductCategory","productCategory","error","data","noResultsMessage","ProductCode","productCode","LeakageQtyUom","quantityUOM","Input","LeakageQty","reserveSpace","NetQuantity","Density","DensityUOM","densityUOM","TankCode","getOptionsWithSelect","tankCode","search","onSearch","MeterCode","meterCode","DatePicker","StartTime","Date","minuteStep","displayFormat","getCurrentDateFormat","EndTime","GrossStartTotalizer","GrossEndTotalizer","NetStartTotalizer","NetEndTotalizer","isEnterpriseNode","LeakageManualEntryDetailsComposite","Component","constructor","arguments","state","leakageManualEntry","leakageManualEntryValidationDef","isReadyToRender","productCategoryOptions","productCodeOptions","quantityUOMOptions","densityUOMOptions","tankCodeOptions","tankCodeSearchOptions","meterCodeOptions","meterCodeSearchOptions","saveEnabled","handleChange","propertyName","lodash","this","getProductCode","setState","console","log","handleSave","UpdatedTime","validateSave","createLeakageManualEntry","handleReset","Object","keys","forEach","key","handleTankSearchChange","filter","toLowerCase","includes","Constants","slice","handleMeterSearchChange","handleDateTextChange","componentDidMount","props","userDetails","EntityResult","IsArchived","getProductCategory","getUOMList","getTankCode","PrimaryShareholder","getMeterCode","setNewLeakageManualEntry","componentWillReceiveProps","emptyLeakageManualEntry","FunctionsList","functionGroups","fnLeakageManualEntry","text","apiAddress","RestAPIs","axios","tokenDetails","tokenInfo","then","response","result","IsSuccess","productList","push","ErrorList","catch","Array","isArray","VOLUME","quantityUOMList","MASS","DENSITY","values","every","obj","ShareHolderCode","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","getTankCodeSearchOptions","modTankCode","find","getMeterCodeSearchOptions","modMeterCode","render","onDateTextChange","IsEnterpriseNode","textAlign","LoadingPage","connect","getUserDetails","TokenAuth","route","userAction","bindActionCreators","LeakageManualEntry","operationsVisibility","refreshFlag","savedEvent","saveType","toast","NotifyEvent","notificationMessage","autoClose","handleAdd","activeItem","onRefresh","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","view","modify","remove","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","ddlOptions","selectOptionText","option","unshift","language","window","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}