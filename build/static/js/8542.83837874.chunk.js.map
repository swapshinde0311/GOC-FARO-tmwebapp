{"version":3,"file":"static/js/8542.83837874.chunk.js","mappings":"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","sources":["Components/Composite/Common/TMDetailsKPILayout.jsx","Components/Composite/Common/TransactionSummaryOperations.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nexport default function TMDetailsKPILayout({\r\n    KPIList,\r\n    pageName,\r\n    rowHeight,\r\n    widgetHeight,\r\n    isDraggable,\r\n    isResizable,\r\n    kpiDisplayTopBreakpoint\r\n}) {\r\n    const [KPIDisplays, setKPIDisplays] = useState(1);\r\n\r\n    const kpiDiv = React.useRef(null);\r\n\r\n    const hideKpis = () => {\r\n        let currentScrollPos = window.pageYOffset;\r\n        let KPIDisplay = KPIDisplays;\r\n\r\n        // hide kpis based on div position to top of the window \r\n        if (kpiDiv.current && kpiDiv.current.getBoundingClientRect().top < kpiDisplayTopBreakpoint) {\r\n            KPIDisplay = 0;\r\n        }\r\n        // show the kpis once at top of the screen\r\n        else if (currentScrollPos === 0) {\r\n            KPIDisplay = 1\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n        setKPIDisplays(KPIDisplay);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\") {\r\n            window.addEventListener(\"scroll\", hideKpis);\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // remove listener on unmount\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", hideKpis)\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={kpiDiv}>\r\n            {KPIDisplays === 1 ? <TranslationConsumer>\r\n                {(t) => (\r\n                    <div style={{ marginTop: \"6px\" }}>\r\n                        <ErrorBoundary>\r\n                            <KPIDashboardLayout\r\n                                kpiList={KPIList}\r\n                                isDraggable={isDraggable}\r\n                                isResizable={isResizable}\r\n                                rowHeight={rowHeight}\r\n                                widgetHeight={widgetHeight}\r\n                                pageName={pageName}\r\n                            ></KPIDashboardLayout>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n                )}\r\n            </TranslationConsumer> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nTMDetailsKPILayout.propTypes = {\r\n    kpiDisplayTopBreakpoint: PropTypes.number\r\n}\r\n\r\nTMDetailsKPILayout.defaultProps = {\r\n    kpiDisplayTopBreakpoint: 100\r\n}","import PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport { Divider, Button, Icon } from \"@scuf/common\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\n\r\nTransactionSummaryOperations.propTypes = {\r\n  selectedItem: PropTypes.array,\r\n  shipmentNextOperations: PropTypes.array,\r\n  handleDetailsPageClick: PropTypes.func,\r\n  handleOperationButtonClick: PropTypes.func.isRequired,\r\n  currentStatuses: PropTypes.object,\r\n  //lastStatus: PropTypes.string,\r\n  isDetails: PropTypes.bool.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  unAllowedOperations: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function TransactionSummaryOperations({\r\n  title,\r\n  selectedItem,\r\n  shipmentNextOperations,\r\n  handleDetailsPageClick,\r\n  handleOperationButtonClick,\r\n  currentStatuses,\r\n  //lastStatus,\r\n  isDetails,\r\n  isEnterpriseNode,\r\n  unAllowedOperations,\r\n  handleDrawer,\r\n  isWebPortalUser,\r\n  webPortalAllowedOperations,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  const [drawerClassName, setDrawerClassName] = useState(\"\");\r\n  const isDisplayDrawer = () => {\r\n    let className = drawerClassName;\r\n    if (className === \"\") {\r\n      className = \"marineOperationDrawerShow\";\r\n    } else {\r\n      className = \"\";\r\n    }\r\n    setDrawerClassName(className);\r\n    handleDrawer();\r\n  };\r\n\r\n  const handleOperationButtons = () => {\r\n    let btn = [];\r\n    if (shipmentNextOperations) {\r\n      shipmentNextOperations.forEach((operation) => {\r\n        if (isEnterpriseNode && !isWebPortalUser) {\r\n          if (!unAllowedOperations.includes(operation)) {\r\n            btn.push(\r\n              <>\r\n                <br />\r\n                <Button\r\n                  type=\"secondary\"\r\n                  className=\"ViewShipmentButton\"\r\n                  onClick={() => handleOperationButtonClick(operation)}\r\n                >\r\n                  {t(operation)}\r\n                </Button>\r\n              </>\r\n            );\r\n          }\r\n        } else if (isWebPortalUser) {\r\n          if (webPortalAllowedOperations.includes(operation)) {\r\n            btn.push(\r\n              <>\r\n                <br />\r\n                <Button\r\n                  type=\"secondary\"\r\n                  className=\"ViewShipmentButton\"\r\n                  onClick={() => handleOperationButtonClick(operation)}\r\n                >\r\n                  {t(operation)}\r\n                </Button>\r\n              </>\r\n            );\r\n          }\r\n        } else {\r\n          btn.push(\r\n            <>\r\n              <br />\r\n              <Button\r\n                type=\"secondary\"\r\n                className=\"ViewShipmentButton\"\r\n                onClick={() => handleOperationButtonClick(operation)}\r\n              >\r\n                {t(operation)}\r\n              </Button>\r\n            </>\r\n          );\r\n        }\r\n      });\r\n    }\r\n    return btn;\r\n  };\r\n  const handleCompletedOperations = () => {\r\n    try {\r\n      let completedOperations = [];\r\n      if (Object.keys(currentStatuses).length > 0)\r\n        Object.keys(currentStatuses).forEach((statuses) => {\r\n          let time = currentStatuses[statuses];\r\n\r\n          let label = [];\r\n\r\n          label.push(\r\n            <>\r\n              <label>{t(statuses)}</label>\r\n            </>\r\n          );\r\n          label.push(\r\n            <>\r\n              {\" \"}\r\n              <br />{\" \"}\r\n              <label>\r\n                {\" \"}\r\n                {\"(\" +\r\n                  new Date(time).toLocaleDateString() +\r\n                  \" \" +\r\n                  new Date(time).toLocaleTimeString() +\r\n                  \")\"}\r\n              </label>\r\n            </>\r\n          );\r\n\r\n          completedOperations.push(\r\n            <TimelineItem>\r\n              <TimelineSeparator>\r\n                <TimelineDot className=\"completedOperations\" />\r\n                <TimelineConnector className=\"timelineConnector\" />\r\n              </TimelineSeparator>\r\n              <TimelineContent>{<>{label}</>}</TimelineContent>\r\n            </TimelineItem>\r\n          );\r\n        });\r\n      return completedOperations;\r\n    } catch (error) {\r\n      console.log(\r\n        \"TransactionSummaryOperations: handleCompletedOperations\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={\"ViewShipmentStatusDetails \" + drawerClassName}>\r\n      <div\r\n        className=\"marineDashboardDrawerButton\"\r\n        onClick={isDisplayDrawer}\r\n        style={{ pointerEvents: \"auto\" }}\r\n      >\r\n        <Icon\r\n          name={drawerClassName !== \"\" ? \"menu-icon\" : \"close\"}\r\n          size=\"medium\"\r\n        // color=\"white\"\r\n        />\r\n      </div>\r\n      <div className=\"ViewShipmentStatusHeader\">\r\n        <h4>\r\n          {t(title)} {selectedItem[0][\"Common_Code\"]}\r\n        </h4>\r\n      </div>\r\n      <Divider />\r\n      <div>\r\n        <Timeline className=\"timelineAlignment\">\r\n          {<>{handleCompletedOperations()}</>}\r\n          <TimelineItem>\r\n            <TimelineSeparator>\r\n              <TimelineDot\r\n                variant=\"outlined\"\r\n                className=\"inProgressOperations\"\r\n              />\r\n              <TimelineConnector className=\"timelineConnector\" />\r\n            </TimelineSeparator>\r\n            <TimelineContent>{<>{handleOperationButtons()}</>}</TimelineContent>\r\n          </TimelineItem>\r\n        </Timeline>\r\n      </div>\r\n      {!isDetails ? (\r\n        <div>\r\n          <Button\r\n            className=\"ViewShipmentDetailsButton\"\r\n            onClick={() => handleDetailsPageClick(selectedItem[0])}\r\n          >\r\n            {t(\"ViewAllShipment_DetailsPage\")}\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMDetailsKPILayout","_ref","KPIList","pageName","rowHeight","widgetHeight","isDraggable","isResizable","kpiDisplayTopBreakpoint","KPIDisplays","setKPIDisplays","useState","kpiDiv","React","hideKpis","currentScrollPos","window","pageYOffset","KPIDisplay","current","getBoundingClientRect","top","useEffect","addEventListener","removeEventListener","_jsx","ref","children","TranslationConsumer","t","style","marginTop","ErrorBoundary","KPIDashboardLayout","kpiList","defaultProps","TransactionSummaryOperations","title","selectedItem","shipmentNextOperations","handleDetailsPageClick","handleOperationButtonClick","currentStatuses","isDetails","isEnterpriseNode","unAllowedOperations","handleDrawer","isWebPortalUser","webPortalAllowedOperations","useTranslation","drawerClassName","setDrawerClassName","_jsxs","className","onClick","isDisplayDrawer","pointerEvents","Icon","name","size","Divider","Timeline","_Fragment","handleCompletedOperations","completedOperations","Object","keys","length","forEach","statuses","time","label","push","Date","toLocaleDateString","toLocaleTimeString","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","error","console","log","variant","handleOperationButtons","btn","operation","includes","Button","type","TMDetailsHeader","entityCode","newEntityName","popUpContents","margin","undefined","Popup","element","fieldName","fieldValue","marginLeft","root","position","List","map","content","Content","TMDetailsUserActions","handleBack","handleSave","handleReset","saveEnabled","float","disabled","AttributeDetails","selectedAttributeList","handleCellDataEdit","attributeValidationErrors","handleAttributeDateValue","attribute","DefaultValue","convertAttributeDatetoString","chars","split","value","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","Constants","STRING","IsVisible","Input","fluid","DisplayName","indicator","IsMandatory","IsReadonly","onChange","Code","reserveSpace","INT","LONG","FLOAT","DOUBLE","BOOL","Checkbox","checked","toString","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","toLocaleString","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","getOptionsWithSelect","ddlOptions","selectOptionText","Array","isArray","filter","option","text","unshift","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","data","class"],"sourceRoot":""}