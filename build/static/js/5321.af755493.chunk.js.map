{"version":3,"file":"static/js/5321.af755493.chunk.js","mappings":"6OAoDO,SAASA,EAAaC,GAazB,IAb0B,oBAC5BC,EAAmB,eACnBC,EAAc,aACdC,EAAY,oBACZC,EAAmB,oBACnBC,EAAmB,SACnBC,EAAQ,MACRC,EAAK,aACLC,EAAY,WACZC,EAAU,sBACVC,EAAqB,WACrBC,EAAU,cACVC,GACDZ,EACC,MAAOa,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GA2C3C,SAASG,IACHjB,EAAoBkB,MAClBX,EAAaY,OAAS,EACCH,GAAP,IAAdD,GAGJT,IAGN,CAgHA,OACEc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAMC,MAAO,CAAEC,WAAY,aAAcC,QAAS,OAAQC,SAAA,EACvEC,EAAAA,EAAAA,KAAA,OACEL,UAAU,8CACVC,MAAO,CAAEE,QAAS,OAAQC,UAE1BL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAMC,MAAO,CAAEK,UAAW,OAAQJ,WAAY,IAAKE,SAAA,EAChEC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,+CAA8CI,UAC3DL,EAAAA,EAAAA,MAACQ,EAAAA,EAAa,CAAAH,SAAA,CAAC,KAhKrBC,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAACW,EAAAA,WAAU,CAAAN,SAAA,CACRxB,EAAe+B,QAAQC,KAAKC,IAEzBR,EAAAA,EAAAA,KAACK,EAAAA,WAAWI,KAAI,CACdC,QAASA,UAEqBC,IAA1B5B,GAC0B,OAA1BA,GAEAA,EACEyB,EAAWI,SACXrC,EAAe+B,QAEnB,EACAP,SAGDK,EAAEI,EAAWK,eAFTL,EAAWI,aAMtBZ,EAAAA,EAAAA,KAACK,EAAAA,WAAWI,KAAI,CAAAV,SACbK,EAAE7B,EAAesC,eADEtC,EAAeqC,qBA2IvCZ,EAAAA,EAAAA,KAAA,OACEL,UAAU,+CACZI,UAEEC,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAJ,EAAAA,EAAAA,KAAA,OACEL,UAAU,kBACVC,MAAO,CAAEkB,eAAgB,cAAef,UAExB,IAAfjB,EACC,IAEAY,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAAhB,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEL,EAAAA,EAAAA,MAAA,MAAIC,UAAU,UAASI,SAAA,CAAEK,EAAE,sBAAsB,UAEnDJ,EAAAA,EAAAA,KAAA,OAAKL,UAAU,WAAUI,UACvBC,EAAAA,EAAAA,KAACgB,EAAAA,OACC,CACAC,YAAab,EAAE,sBACfc,MAAOzC,EACP0C,UAAW7C,EAAoB8C,YAC/BC,QAnMfC,EAAAA,GAAgC9C,GAoMjB+C,SAAWL,GAAUxC,EAAoBwC,iBAhE7DlB,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAAC8B,EAAAA,MAAK,CAACC,KAAMvC,EAAWwC,KAAK,QAAO3B,SAAA,EAClCC,EAAAA,EAAAA,KAACwB,EAAAA,MAAMG,QAAO,CAAA5B,UACZC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAIK,EAAE,yBAGVV,EAAAA,EAAAA,MAAC8B,EAAAA,MAAMI,OAAM,CAAA7B,SAAA,EACXC,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLC,KAAK,YACLC,QAAS3B,EAAE,UACXM,QAASA,IAAMvB,GAAa,MAE9Ba,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLC,KAAK,UACLC,QAAS3B,EAAE,8BACXM,QAASA,KACPvB,GAAa,GACbR,GAAU,kBA0DtBqB,EAAAA,EAAAA,KAAA,OAAKL,UAAU,4CAA2CI,UAvJ1DL,EAAAA,EAAAA,MAAA,OACEE,MAAO,CAAEoC,MAAO,QAASC,QAAS,eAAgBhC,UAAW,QAASF,SAAA,CAErEf,GAAagB,EAAAA,EAAAA,KAACkC,EAAAA,MAAK,CAClBC,SAAS,eACTxC,UAAU,mBACVyC,SACEpC,EAAAA,EAAAA,KAAA,OACEL,WACGrB,EAAoBkB,IACjB,cACA,sBAAwB,YAE9BkB,QAASnB,EAAiBQ,UAE1BC,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CACHC,KAAK,SACLC,KAAK,aACLb,KAAK,QACLc,MAAM,YAIZC,GAAG,QACHhB,KAAMpC,EAAUU,UAEhBC,EAAAA,EAAAA,KAAA,OAAK0C,aAAcA,IAAMpD,GAAa,GAAOS,UAC3CC,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAJ,EAAAA,EAAAA,KAAC2C,EAAAA,aAAY,CAAA5C,UACXL,EAAAA,EAAAA,MAACiD,EAAAA,aAAY,CAAA5C,SAAA,EACXC,EAAAA,EAAAA,KAAC2C,EAAAA,aAAaC,OAAM,CAAA7C,SACjBK,EAAE,mBAEJvB,EAAa0B,KAAKsC,IAEf7C,EAAAA,EAAAA,KAAC2C,EAAAA,aAAalC,KAAI,CAChBC,QAASA,KAAMoC,OA3CfC,EA2C8BF,EAAKG,UA1CzD1D,GAAa,QACbV,EAAMmE,GAFR,IAAwBA,CA2C8C,EAAAhD,SAE7CK,EAAEyC,EAAKI,2BASf,GACVhE,GAAgBe,EAAAA,EAAAA,KAAA,OACfJ,MAAO,CAAEsD,WAAY,QACrBxC,QAASA,KACHpC,EAAoB6E,QACtBhE,GAAa,EAGf,EAEFQ,WACGrB,EAAoB6E,OACjB,cACA,sBAAwB,YAC7BpD,UAEDC,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CAACC,KAAK,SAASC,KAAK,SAASb,KAAK,QAAQc,MAAM,YAC9C,UA2FjB,CAxPApE,EAAcgF,aAAe,CAC3B9E,oBAAqB,CAAEkB,KAAK,EAAO2D,QAAQ,EAAO/B,aAAa,GAC/D7C,eAAgB,CACd8E,SAAU,GACVzC,SAAU,GACVC,aAAc,GACdyC,UAAW,CAAC,EACZhD,QAAS,GACTiD,aAAa,GAEf/E,aAAc,GACdC,oBAAqB,GACrBI,aAAc,GACdC,YAAY,EACZE,YAAY,EACZC,eAAe,G,SC/CV,SAASuE,EAAsBnF,GAclC,IAdmC,oBACrCC,EAAmB,eACnBC,EAAc,aACdC,EAAY,oBACZC,EAAmB,oBACnBC,EAAmB,SACnBC,EAAQ,MACRC,EAAK,aACLC,EAAY,WACZC,EAAU,sBACVC,EAAqB,WACrBC,EAAU,cACVC,GAEDZ,EACC,OACE2B,EAAAA,EAAAA,KAAC5B,EAAa,CACZE,oBAAqBA,EACrBC,eAAgBA,EAChBC,aAAcA,EACdC,oBAAqBA,EACrBC,oBAAqBA,EACrBC,SAAUA,EACVC,MAAOA,EACPC,aAAcA,EACdC,WAAYA,EACZC,sBAAuBA,EACvBC,WAAYA,EACZC,cAAeA,GAGrB,C,wMCtBA,MAAMwE,UAAiCC,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KAC/CC,MAAQ,CACNC,oBAAoB,EACpBC,SAAU,GACVC,iBAAkB1C,EAAAA,GAChB2C,EAAAA,IAEFC,uBAAwB,GACxBC,wBAAwB,GACxB,KA4BFC,cAAgB,CAACC,EAAcC,KAC7BC,KAAKC,SAAS,CAAET,SAAUO,IAC1B,MAAMN,EAAmBS,IAAAA,UAAiBF,KAAKV,MAAMG,uBACCrD,IAAlDsD,EAAAA,GAAgCI,KAClCL,EAAiBK,GAAgB/C,EAAAA,GAC/B2C,EAAAA,GAAgCI,GAChCC,GAEFC,KAAKC,SAAS,CAAER,mBAAkBE,uBAAwB,KAC5D,EAEA,KAEFQ,iBAAoBX,IAClBQ,KAAKC,SAAS,CAAEL,wBAAwB,IACxC,MAAMH,EAAmB,IAAKO,KAAKV,MAAMG,kBACxB,OAAbD,GAAkC,KAAbA,IACvBC,EAA2B,SAAI,wCAEjCO,KAAKC,SAAS,CAAER,qBAChB,IAAIW,GAAc,EAMlB,OALIA,IACFA,EAAcC,OAAOC,OAAOb,GAAkBc,OAAM,SAAU5D,GAC5D,MAAiB,KAAVA,CACT,KAEKyD,CAAW,EAOpB,KACAI,aAAe,KACbR,KAAKC,SACH,CACEV,oBAAoB,EACpBI,uBAAwB,GACxBC,wBAAwB,IAE1B,IAAMI,KAAKS,MAAMC,eAClB,EASH,KAEAC,iBAAmB,KACjB,GAAIX,KAAKG,iBAAiBH,KAAKV,MAAME,UAAW,CAC9CQ,KAAKC,SAAS,CAAEN,uBAAwB,KAExC,IACE,IAGIiB,EAAMZ,KAAKV,MAAME,SAEjBqB,EAAOb,KAAKS,MAAMK,SAClBC,EAAOC,IAAAA,IAAaC,UAAUC,OAAO,IAErCC,EAAMH,IAAAA,OAAgBH,EAAME,EAAM,CACpCK,QAASA,EACTC,WATe,MAYbC,EAAKN,IAAAA,IAAaC,UAAUC,OAAO,IAEnCK,EAAYP,IAAAA,IAAaQ,QAAQZ,EAAKO,EAAK,CAC7CG,GAAIA,EACJ/F,QAASyF,IAAAA,IAAaS,MACtBC,KAAMV,IAAAA,KAAcW,MAElBC,EACFb,EAAKc,WAAaP,EAAGO,WAAaN,EAAUM,WAG9CC,IACEC,EAAAA,IACA,sBACAC,mBAAmBJ,GACnB7E,EAAAA,GACEiD,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,MACG,IAArBsC,EAAOC,WACiC,SAAtCD,EAAOE,aAAaC,eACtBxC,KAAKC,SAAS,CAAEV,oBAAoB,IACpCS,KAAKS,MAAMgC,mBAQbzC,KAAKC,SAAS,CACZN,uBAAwB0C,EAAOK,UAAU,GACzC9C,wBAAwB,GAE5B,IAED+C,OAAOC,IACN5C,KAAKC,SAAS,CACZN,uBAAwBiD,EACxBhD,wBAAwB,GACxB,GAER,CAAE,MAAOgD,GACP5C,KAAKC,SAAS,CACZN,uBAAwBiD,EACxBhD,wBAAwB,GAE5B,CACF,MACEI,KAAKC,SAAS,CAAEL,wBAAwB,GAC1C,CACA,CAtJFiD,iBAAAA,GACE,IACE7C,KAAK8C,oBACP,CAAE,MAAOF,GACPG,QAAQC,IACN,iEACAJ,EAEJ,CACF,CAEAE,kBAAAA,GACE,IACE,IAAIvD,EAAqBxC,EAAAA,GACvBiD,KAAKS,MAAMwC,YAAYV,aAAaW,iBACpClD,KAAKS,MAAM0C,aACXnD,KAAKS,MAAM2C,eAEbpD,KAAKC,SAAS,CAAEV,wBAEW,IAAvBA,GAA8BS,KAAKS,MAAMgC,iBAC/C,CAAE,MAAOG,GACPG,QAAQC,IAAI,sCAAuCJ,EACrD,CACF,CA+HAS,MAAAA,GACE,OACE5H,EAAAA,EAAAA,KAAA,OAAAD,UACqC,IAAlCwE,KAAKV,MAAMC,oBACV9D,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAAC8B,EAAAA,MAAK,CAACC,MAAM,EAAMC,KAAK,OAAM3B,SAAA,EAC5BL,EAAAA,EAAAA,MAAC8B,EAAAA,MAAMG,QAAO,CAAA5B,SAAA,EACZL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKI,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OACEL,UAAU,eACVC,MAAO,CAAEsD,WAAY,QAASnD,UAE9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAKK,EAAE,4BAETJ,EAAAA,EAAAA,KAAA,OACEL,UAAU,kBACVC,MAAO,CAAEiI,UAAW,SACpBnH,QAAS6D,KAAKQ,aAAahF,UAE3BC,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CAACC,KAAK,SAASC,KAAK,gBAI7B7C,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEqC,QAAS,OAAQ6F,SAAU,QAAS/H,SAAA,EAChDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAAA,SAAAD,UACEL,EAAAA,EAAAA,MAAA,MAAAK,SAAA,CACGK,EAAE,mCAAmC,IACrCmE,KAAKS,MAAMK,iBAIlBrF,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAAC+H,EAAAA,MAAK,CACJC,OAAK,EACLlG,KAAK,WACLmG,uBAAuB,EACvB/G,MAAOqD,KAAKV,MAAME,SAClBmE,UAAU,WACV3G,SAAW+C,GACTC,KAAKH,cAAc,WAAYE,GAEjC6D,MAAO/H,EAAE,wBACT+G,MAAO/G,EAAEmE,KAAKV,MAAMG,iBAAiBD,UACrCqE,cAAc,aAKtB1I,EAAAA,EAAAA,MAAC8B,EAAAA,MAAMI,OAAM,CAAA7B,SAAA,EACXC,EAAAA,EAAAA,KAAA,QAAML,UAAU,gCAA+BI,SAC5CK,EAAEmE,KAAKV,MAAMK,2BAEhBlE,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLC,KAAK,UACLX,UAAWoD,KAAKV,MAAMM,uBACtBpC,QAAS3B,EAAE,qCACXM,QAAS6D,KAAKW,2BAMtB,MAGV,EAEF,MAOA,GAAemD,EAAAA,EAAAA,KAPUxE,IAChB,CACL2D,YAAa3D,EAAMyE,eAAed,YAClChB,aAAc3C,EAAMyE,eAAeC,aAIvC,CAAwC9E,E,wPC/NxC,MAAM+E,EAAaxD,IACjB,MAAOyD,EAAMC,IAAWtJ,EAAAA,EAAAA,UAAS,OAC1BuJ,IAAcC,EAAAA,EAAAA,kBACfC,EAAYC,GACT,IAAIC,EAAAA,eAAe/D,EAAMgE,WAAY,CAC1CC,SAAUH,KAIPxE,EAAM4E,IAAW9J,EAAAA,EAAAA,UAASyJ,EAAS7D,EAAMmE,cAC1CC,EAAUC,EAAAA,YACVC,EAAYD,EAAAA,YACZE,EAAaF,EAAAA,YACbG,EAAkBH,EAAAA,YAClBI,EAAYJ,EAAAA,SAGZK,EAAeL,EAAAA,OAAarE,EAAM2E,kBAAoB,GAAK,MAGjE,IAAIC,EAAW,KAGf,MAAMC,EAAmBC,IACvB,IA2BE,GAzBAC,IAEI/E,EAAMgF,YAERF,EAAKG,iBAAiBH,EAAKI,YAAa,SAAUC,IAChD,IAAIC,EAAKN,EAAKO,QAAQF,GAEtB,GACEC,EAAGE,OAAOC,QAAQ,cACjB,IAAIH,EAAGE,OAAOC,QAAQ,YAAYC,WAAWC,SAC5C,aAEFL,EAAGM,WAAaC,EAAAA,SAAgBC,KAChC,CAEA,MAAMC,EAAUf,EAAKgB,KAAKV,EAAGW,KAAKC,SAClChG,EAAMgF,WAAWa,EACnB,KAIJf,EAAKmB,cAAgBC,EAAAA,OAAc,OAAQP,EAAAA,eAC3Cb,EAAKqB,QAAQ,GAAI,GAEjBzC,EAAQoB,GACJ9E,EAAM2E,kBAAmB,CAE3BC,EAAW,IAAIwB,EAAAA,SAAStB,EAAM,CAC5BuB,YAAaA,CAACC,EAAGnB,KAEXnF,EAAMuG,iBACRzB,EAAKgB,KACFU,QAAQT,GAELA,EAAIU,YAGS,IAFb/B,EAAagC,QAAQF,QAAQ3I,GAC3B8I,EAAAA,QAAgB9I,EAAMkI,EAAIC,YAC1BvL,SAGLmM,SAASb,IACRA,EAAIU,YAAa,CAAK,IAK5BzG,EAAM6G,kBACJ/B,EAAKgB,KACFU,QAAQM,GAAMA,EAAEL,aAChBlL,KAAKwL,GAAgBA,EAAYf,WACrC,EAGHgB,cAAehH,EAAMuG,kBAGvB,IAAInC,EAAUQ,EAASqC,OAAOnC,KAC9BF,EAASqC,OAAS7C,EAAQ8C,WAAWC,QAAQ,GAC7C/C,EAAQgD,kBAAoBC,EAAAA,kBAAkBC,IAC9ClD,EAAQ6B,cAAgBC,EAAAA,OAAc,OAAQP,EAAAA,cAChD,CACF,CAAE,MAAOxD,GACPG,QAAQC,IAAI,6BAA+BJ,EAC7C,IAIFoF,EAAAA,EAAAA,YAAU,KACR,IACE,GAAe,MAAXnD,EAAiB,CAEnB,IAAIU,EAAOV,EAAQsC,QAAQc,QACdlD,EAAUoC,QAAQc,QACxB1C,KAAOA,CAChB,CAEAZ,EAAQL,EAAS7D,EAAMmE,aACzB,CAAE,MAAOhC,GACPG,QAAQC,IAAI,wBAAyBJ,EACvC,IACC,CAACnC,EAAMgE,cAGVuD,EAAAA,EAAAA,YAAU,KACR,IACM9D,GAAQzD,EAAM2E,oBAEhBD,EAAagC,QAAQjM,OAAS,EAE9BiK,EAAagC,QAAQe,QAAQzH,EAAM0H,eAEnCjE,EAAKqC,KAAKc,SAASb,IAIF,IAFb/F,EAAM0H,cAAclB,QAAQ3I,GAC1B8I,EAAAA,QAAgB9I,EAAMkI,EAAIC,YAC1BvL,OAGFsL,EAAIU,YAAa,EAGjBV,EAAIU,YAAa,CACnB,IAGFhD,EAAKkE,UAET,CAAE,MAAOxF,GACPG,QAAQC,IAAI,+BAAgCJ,EAC9C,IACC,CAACnC,EAAM0H,iBAGVH,EAAAA,EAAAA,YAAU,KACR,IACE,GACEK,aAAaC,QAAQ7H,EAAM8H,gBAAkB,cACiB,SAA9DF,aAAaC,QAAQ7H,EAAM8H,gBAAkB,cAC7CrE,EACA,CAEA,IAAIsE,EAAYC,KAAKC,MACnBL,aAAaC,QAAQ7H,EAAM8H,gBAAkB,cAE3CI,EAAUzE,EAGdyE,EAAQf,QAAQP,SAASuB,IACvB,IAAIC,EAAaL,EAAUZ,QAAQX,QAChC6B,GAAeA,EAAWC,UAAYH,EAAIG,UAE7CH,EAAII,QACFH,EAAW3N,OAAS,EAAI2N,EAAW,GAAGG,QAAUJ,EAAII,OAAO,IAI/DhE,EAAWmC,QAAQc,QAAQgB,iBACzBT,EAAUS,iBAGZN,EAAQO,eAAeC,aAAY,KACjCR,EAAQO,eAAeE,iBAAiBC,QACxC,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAUY,iBAAiBlO,OAAQoO,IAAK,CAC1D,IAAIC,EAAWf,EAAUY,iBAAiBE,GAC1CX,EAAQO,eAAeE,iBAAiBlB,KACtC,IAAIvB,EAAAA,gBAAuB4C,EAASC,SAAUD,EAASE,WAE3D,KAIF,IAAK,IAAIH,EAAI,EAAGA,EAAId,EAAUkB,kBAAkBxO,OAAQoO,IACtDX,EAAQO,eAAeQ,kBAAkBxB,KACvC,IAAIvB,EAAAA,yBAAgC6B,EAAUkB,kBAAkBJ,KAElEX,EAAQf,QAAQX,QACb2B,GAAQA,EAAIG,UAAYP,EAAUkB,kBAAkBJ,KACrD,GAAGN,SAAU,EAGjB,GACEW,eAAerB,QAAQ7H,EAAM8H,gBAAkB,cACiB,SAAhEoB,eAAerB,QAAQ7H,EAAM8H,gBAAkB,aAC/C,CACA,IAAIqB,EAAmBnB,KAAKC,MAC1BiB,eAAerB,QAAQ7H,EAAM8H,gBAAkB,cAGjDI,EAAQO,eAAeW,WACrBlB,EAAQO,eAAeY,UAAY,GAAKF,EAAiBG,UACrDH,EAAiBG,UACjBpB,EAAQO,eAAeY,UAAY,GAIrC/E,IACFA,EAAUoC,QAAQc,QAAQ+B,KAAOJ,EAAiBK,WAEtD,CAEA9F,EAAQwE,GACRzE,EAAKkE,SACP,CACF,CAAE,MAAOxF,GACPG,QAAQC,IAAI,8CAA+CJ,EAC7D,IACC,CAAC7C,KAGJiI,EAAAA,EAAAA,YAAU,KACR,IACM9D,GAAQgB,EAAUiC,SAAW1G,EAAMyJ,uBACrChF,EAAUiC,QAAQgD,YAAcjG,EAAK0D,QACrC1C,EAAUiC,QAAQiD,kBAAoB,UACtClF,EAAUiC,QAAQkD,kBAAoB,SACtCnF,EAAUiC,QAAQmD,UAAUC,YAAW,MACrCC,EAAAA,EAAAA,WAAUtF,EAAUiC,QAAQxB,YAAY,IAG9C,CAAE,MAAO/C,GACPG,QAAQC,IAAI,kDAAmDJ,EACjE,IACC,CAACsC,EAAUiC,WAEda,EAAAA,EAAAA,YAAU,IAED,KACDvH,EAAMyJ,sBAAwBhF,EAAUiC,UAC1CqD,EAAAA,EAAAA,WAAUtF,EAAUiC,QAAQxB,YAC9B,GAED,IAGH,MAAM8E,EAAcA,KAClB,IACE,IAAIC,EAAWxG,EAEfwG,EAASP,YAAYzF,SAAWjE,EAAMgE,WAAWvJ,OACjDiJ,EAAQuG,GACRC,EAAAA,sBAAkCC,UAChC1G,EACA,CACE2G,sBAAsB,EACtBC,mBAAmB,EACnBC,WAAY,MAEdtK,EAAMuK,gBAIRN,EAASP,YAAYzF,SAAWjE,EAAMmE,YACtCT,EAAQuG,EACV,CAAE,MAAO9H,GACPG,QAAQC,IAAI,iCAAkCJ,EAChD,GAqBIqI,EAAgBA,CAACtO,EAAOuO,KAC5B,QAAqB9O,IAAjB8O,GAA+C,OAAjBA,EAAuB,CACvD,GAAqB,mBAAVvO,GAA6C,WAAtBuO,EAAaC,KAC7C,OAAIxO,GAAclB,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CAACE,KAAK,QAAQb,KAAK,QAAQc,MAAM,WAC5CxC,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CAACE,KAAK,QAAQb,KAAK,QAAQc,MAAM,QAC7C,GAAc,KAAVtB,GAA0B,OAAVA,QAA4BP,IAAVO,EAC3C,OAAOA,EACF,IACkB,kBAAtBuO,EAAaC,MACa,MAAzBD,EAAaE,UACL,OAAVzO,EAEA,OA9BmB0O,EA8BI1O,GA7BT2O,MAAM,KAAKpQ,OAASuF,EAAM8K,iBAExC9P,EAAAA,EAAAA,KAACkC,EAAAA,MAAK,CACJvC,UAAU,mBACV8C,GAAG,QACHL,QAASwN,EAAcC,MAAM,KAAKpQ,OAAOM,UAEzCC,EAAAA,EAAAA,KAAC+P,EAAAA,KAAI,CAAAhQ,UACHC,EAAAA,EAAAA,KAAC+P,EAAAA,KAAKpO,QAAO,CAAA5B,SAAE6P,QAKdA,EAuBF,QACuBjP,IAA1B8O,EAAaO,UACa,aAA1BP,EAAaO,SAEb,OACE,IAAIC,KAAK/O,GAAOgP,qBAChB,IACA,IAAID,KAAK/O,GAAOiP,qBAEb,QACqBxP,IAA1B8O,EAAaO,UACa,SAA1BP,EAAaO,SAEb,OAAO,IAAIC,KAAK/O,GAAOgP,qBAClB,QACqBvP,IAA1B8O,EAAaO,UACa,SAA1BP,EAAaO,SAEb,OAAO,IAAIC,KAAK/O,GAAOiP,oBAE3B,CAzDuBP,MA2DvB,OAAO1O,CAAK,EA6BRkP,EAAgBA,KACpB,IACE,GAAI3H,GAAQc,EAAWmC,QAAS,CAE9B,IAAIqB,EAAY,CACdZ,QAAS1D,EAAK0D,QAAQ5L,KAAK4M,IAClB,CACLG,QAASH,EAAIG,QACbC,QAASJ,EAAII,YAGjBC,iBAAkBjE,EAAWmC,QAAQc,QAAQgB,iBAC7CG,iBAAkBlF,EAAKgF,eAAeE,iBAAiBpN,KACpDuN,IACQ,CACLC,SAAUD,EAASC,SACnBC,UAAWF,EAASE,cAI1BC,kBAAmBxF,EAAKgF,eAAeQ,kBAAkB1N,KACtD8P,GACKA,EAAMhM,aACDgM,EAAMhM,aAGR,QAMb,GACEoE,EAAKgF,eAAeQ,mBACpBxF,EAAKgF,eAAeQ,kBAAkBxO,OAAS,EAC/C,CACwB,IACnB6Q,SAASC,uBAAuB,6BAEnB3E,SAAS4E,IACzBA,EAAMC,WAAWA,WAAWjG,UAAUhL,IAAI,sBAAsB,GAEpE,CAGA,IAAIkR,EAAe,CACjBpC,UAAW7F,EAAKgF,eAAea,UAC/BE,WAAYlF,EAAUoC,QAAQc,QAAQ+B,MAGxC3B,aAAa+D,QACX3L,EAAM8H,gBAAkB,YACxBE,KAAK4D,UAAU7D,IAEjBmB,eAAeyC,QACb3L,EAAM8H,gBAAkB,YACxBE,KAAK4D,UAAUF,GAEnB,CACF,CAAE,MAAOvJ,GACPG,QAAQC,IAAI,6BACd,GAIIwC,EAA4BA,KAEhC,IAAIyB,EAASN,EAAAA,QAAe2F,eAC1BC,EAAWC,EAAAA,SACb7F,EAAAA,QAAe2F,eAAeG,OAASrI,EAAW,yBAClDuC,EAAAA,QAAe2F,eAAe7C,UAC5B,UAAYrF,EAAW,4BACzBuC,EAAAA,QAAe2F,eAAeI,WAC5B,UAAYtI,EAAW,6BACzBuC,EAAAA,QAAe2F,eAAeK,MAAQvI,EAAW,uBACjDuC,EAAAA,QAAe2F,eAAejD,MAAQjF,EAAW,wBACjDuC,EAAAA,QAAe2F,eAAeM,WAAaxI,EACzC,4BAEFuC,EAAAA,QAAe2F,eAAehM,OAAS8D,EAAW,wBAClDuC,EAAAA,QAAe2F,eAAeO,OAASzI,EACrC,iCAEFuC,EAAAA,QAAe2F,eAAeQ,UAAY1I,EACxC,4BAEFuC,EAAAA,QAAe2F,eAAeS,IAAM3I,EAAW,sBAC/CuC,EAAAA,QAAe2F,eAAeU,GAAK5I,EAAW,qBAC9CuC,EAAAA,QAAe2F,eAAeW,OAAS7I,EAAW,yBAelD6C,EAAOiG,gBAAkB,CACvB,CAAElP,KAAMoG,EAAW,wBAAyB+I,GAAI,MAChD,CAAEnP,KAAMoG,EAAW,wBAAyB+I,GAAIZ,EAASa,IACzD,CAAEpP,KAAMoG,EAAW,2BAA4B+I,GAAIZ,EAASc,IAC5D,CAAErP,KAAMoG,EAAW,6BAA8B+I,GAAIZ,EAASe,IAC9D,CAAEtP,KAAMoG,EAAW,2BAA4B+I,GAAIZ,EAASgB,IAC5D,CAAEvP,KAAMoG,EAAW,2BAA4B+I,GAAIZ,EAASiB,IAC5D,CAAExP,KAAMoG,EAAW,iCAAkC+I,GAAIZ,EAASkB,KAEpExG,EAAOyG,gBAAkB,CACvB,CAAE1P,KAAMoG,EAAW,wBAAyB+I,GAAI,MAChD,CAAEnP,KAAMoG,EAAW,wBAAyB+I,GAAIZ,EAASa,IACzD,CAAEpP,KAAMoG,EAAW,2BAA4B+I,GAAIZ,EAASc,IAC5D,CAAErP,KAAMoG,EAAW,8BAA+B+I,GAAIZ,EAASoB,IAC/D,CAAE3P,KAAMoG,EAAW,2BAA4B+I,GAAIZ,EAASqB,IAC5D,CACE5P,KAAMoG,EAAW,qCACjB+I,GAAIZ,EAASsB,IAEf,CAAE7P,KAAMoG,EAAW,kCAAmC+I,GAAIZ,EAASuB,KAErE7G,EAAO8G,cAAgB,CACrB,CAAE/P,KAAMoG,EAAW,wBAAyB+I,GAAI,MAChD,CAAEnP,KAAMoG,EAAW,wBAAyB+I,GAAIZ,EAASa,IACzD,CAAEpP,KAAMoG,EAAW,kCAAmC+I,GAAIZ,EAASqB,IACnE,CAAE5P,KAAMoG,EAAW,gCAAiC+I,GAAIZ,EAASoB,KAEnE1G,EAAO+G,iBAAmB,CACxB,CAAEhQ,KAAMoG,EAAW,wBAAyB+I,GAAI,MAChD,CAAEnP,KAAMoG,EAAW,wBAAyB+I,GAAIZ,EAASa,IACzD,CAAEpP,KAAMoG,EAAW,2BAA4B+I,GAAIZ,EAASc,IAC7D,EAIGY,EAAYC,IAChB,IAEE,GADoBC,OAAOC,OAAOC,MAChB,MACZH,EAAcI,SAAqC,KAA1BJ,EAAcI,QACzC,OAAOC,SAASL,EAAcI,QAEpC,CAAE,MAAO1L,GACPG,QAAQC,IAAI,kBAAmBJ,EACjC,CAEA,OAAOsL,EAAcM,gBAAgBtI,SAAS,KAC1CgI,EAAcM,gBACdD,SAASL,EAAcM,gBAAgB,EAG7C,OACE/S,EAAAA,EAAAA,KAAA,OAAKL,UAAU,OAAMI,UACnBC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAAC2J,EAAAA,SAAc,CAAAtJ,SAAA,EACbL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUI,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,qCAAoCI,UACjDC,EAAAA,EAAAA,KAACgT,EAAAA,EAAc,CACbC,MAAM,kBACNC,IAAK5J,EACLrI,YAAab,EAAE,sCAGnBJ,EAAAA,EAAAA,KAAA,OAAKL,UAAU,qCAAoCI,UACjDL,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEoC,MAAO,SAAUjC,SAAA,CAC5BiF,EAAMyJ,sBACL/O,EAAAA,EAAAA,MAACmC,EAAAA,OAAM,CACLsR,GAAG,YACHC,WAAW,SACXtR,KAAK,UACLpB,QAAU2S,GAjMDA,KAC7B,IACE,IAAIC,EAAO7J,EAAUiC,QAAQxB,YACxBoJ,EAAKC,eAIRxE,EAAAA,EAAAA,WAAUuE,GAAM,GAAM,GACtB7K,EAAK+K,WAJLC,EAAAA,EAAAA,WAAUH,EAAMD,EAAM/I,OAAQoJ,EAAAA,cAAcC,OAAO,GAAM,GACzDlK,EAAUiC,QAAQ8H,SAMpB/J,EAAUiC,QAAQ8H,QAClBH,EAAMO,gBACR,CAAE,MAAOzM,GACPG,QAAQC,IAAI,sCAAuCJ,EACrD,GAkLwC0M,CAAsBR,GAAOtT,SAAA,EAEjDC,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CAAEqC,QAAS,gBAAiBlC,SACrCK,EAAE,4BAELJ,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CAAEqC,QAAS,gBAAiBlC,UACtCC,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CACHE,KAAK,aACL5C,UAAU,UACV+B,KAAK,eAIT,KACHsD,EAAM8O,gBACLpU,EAAAA,EAAAA,MAACmC,EAAAA,OAAM,CACLuR,WAAW,SACXtR,KAAK,UACLnC,UAAU,eACVe,QAASsO,EAAYjP,SAAA,EAErBC,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CAAEqC,QAAS,gBAAiBlC,SACrCK,EAAE,sBAELJ,EAAAA,EAAAA,KAAA,OACEJ,MAAO,CACLqC,QAAS,eACTiB,WAAY,UACZnD,UAEFC,EAAAA,EAAAA,KAAA,QACEL,UAAU,WACVC,MAAO,CACLmU,SAAU,OACV5R,SAAU,WACV6R,IAAK,cAKX,cAIVtU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaI,SAAA,CACzBiF,EAAMiP,wBACLjU,EAAAA,EAAAA,KAACkU,EAAAA,EAAU,CACTvU,UAAU,cACVmK,KAAMrB,EACNxH,YAAab,EAAE,oCAEf,MACJJ,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZL,EAAAA,EAAAA,MAACyU,EAAAA,GAAQ,CACPjB,IAAK9J,EACLgL,qBAAqB,EACrBC,mBAAoB,EACpBC,gBAAgB,EAChBlI,kBAAkB,SAClBsC,YAAapK,EACb2G,cAAeC,EAAAA,OAAc,OAAQP,EAAAA,eACrC4J,YAAa1K,EACb2K,wBAAyB,CAAC,EAAG,KAC7BC,cAAerE,EAAcrQ,SAAA,EAE7BC,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAc,CAACqC,IAAK3J,IACpBvE,EAAMmH,QAAQ5L,KAAK0L,IAEhBjM,EAAAA,EAAAA,KAAC0U,EAAAA,GAAc,CACb1D,OAAQ5Q,EAAE6L,EAAOyD,MAEjBpC,QAASrB,EAAOyD,KAChBkD,MAAOJ,EAASvG,GAChB0I,SAAU,IACVC,YAAY,EACZC,UAAU,EACVC,MAAM,OAAM/U,UAEZC,EAAAA,EAAAA,KAAC+U,EAAAA,GAAoB,CACnBrK,SAAS,OACTsK,SAAWC,IAEPjV,EAAAA,EAAAA,KAAA,QACEJ,MACoC,MAAlCoF,EAAMkQ,0BACLlQ,EAAMkQ,yBACLD,EAAQpS,MAGN,IAAKmC,EAAMmQ,sBADX,KAELpV,SAEAyP,EACCyF,EAAQpS,KAAKoJ,EAAOyD,MACpBzD,QAxBLA,EAAOyD,aAmCrB1K,EAAMyJ,sBACLzO,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oBAAmBI,UAChCC,EAAAA,EAAAA,KAACoV,EAAAA,GAAO,CACNzV,UAAU,gBACV4U,YAAcc,GArTPA,KACrBrQ,EAAMyJ,uBACRhF,EAAUiC,QAAU2J,EACtB,EAkT2CC,CAAkBD,OAG7C,SAENrV,EAAAA,EAAAA,KAAA,OAAKL,UAAU,MAAKI,UAClBC,EAAAA,EAAAA,KAACuV,EAAAA,GAAuB,CACtBrC,IAAK1J,EACL7J,UAAU,uBACV6V,aAAcpV,EAAE,2BAChBqV,QAAQ,EACRC,GAAIpR,cAOZ,EAuBVkE,EAAUpF,aAAe,CACvB4F,WAAY,GACZmD,QAAS,GACT2H,gBAAgB,EAChBvE,eAAgB,YAChB5F,mBAAmB,EACnB8E,sBAAsB,EACtBwF,wBAAwB,EACxB9K,YAAa,GACb2G,gBAAiB,EACjBvE,iBAAiB,EACjBmB,cAAe,IAGjB,UChqBA,EA1C4B1H,IAEpBhF,EAAAA,EAAAA,KAACwI,EAAS,CACNQ,WAAYhE,EAAMV,KAClB6H,QAASnH,EAAMmH,QACf2H,eAAgB9O,EAAM8O,eACtBvE,eAAgBvK,EAAMuK,eACtBd,qBAAsBzJ,EAAMyJ,qBAC5B9E,kBAAmB3E,EAAM2E,kBACzBsK,uBAAwBjP,EAAMiP,uBAC9BiB,yBAA0BlQ,EAAMkQ,yBAChCC,qBAAsBnQ,EAAMmQ,qBAC5BhM,YAAanE,EAAMmE,YACnB0C,kBAAmB7G,EAAM6G,kBACzB7B,WAAYhF,EAAMgF,WAClB8C,gBAAiB9H,EAAM8H,gBACvBgD,gBAAiB9K,EAAM8K,gBACvBvE,gBAAiBvG,EAAMuG,gBACvBmB,cAAe1H,EAAM0H,e,8ICkB1B,SAASiJ,EAAiCtX,GAU7C,IAV8C,wBAChDuX,EAAuB,YACvBC,EAAW,iBACX7R,EAAgB,cAChBI,EAAa,uBACb0R,EAAsB,iBACtBC,EAAgB,sBAChBC,EAAqB,0BACrBC,EAAyB,mBACzBC,GACD7X,EACC,MAAM8X,EAA8BA,CAACF,EAA2BG,KAC9D,IAAIC,EAAsB,GAM1B,OALAA,EAAsBJ,EAA0BK,MAC7CC,GACQA,EAAkBC,eAAiBJ,IAGvCC,EAAoBJ,yBAAyB,EAEtD,OACEjW,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBI,SAAA,EAC/BL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKI,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCC,EAAAA,EAAAA,KAACgB,EAAAA,OAAM,CACLgH,OAAK,EACL/G,YAAY,SACZkH,MAAO/H,EAAE,uBACT8H,UAAU,WACVhH,MAAO0U,EAAwBa,SAC/BpV,QAASwU,EAAYa,gBACrBnV,SAAW+C,GAASF,EAAc,WAAYE,GAC9C8D,cAAc,EACdjB,MAAO/G,EAAE4D,EAAiByS,UAC1BE,iBAAkBvW,EAAE,yBAGxBJ,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCC,EAAAA,EAAAA,KAACgB,EAAAA,OAAM,CACLgH,OAAK,EACL/G,YAAY,SACZkH,MAAO/H,EAAE,kCACT8H,UAAU,WACV7G,QAASwU,EAAYe,uBACrBxO,cAAc,EACd7G,SAAW+C,GACTF,EAAc,iCAAkCE,GAElDpD,MAAO0U,EAAwBiB,+BAC/B1P,MAAO/G,EAAE4D,EAAiB6S,gCAC1BF,iBAAkBvW,EAAE,yBAGxBJ,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCC,EAAAA,EAAAA,KAACgB,EAAAA,OAAM,CACLgH,OAAK,EACL/G,YAAY,SACZkH,MAAO/H,EAAE,qBACT8H,UAAU,WACV7G,QAASwU,EAAYiB,0BACrBvV,SAAW+C,GAASF,EAAc,qBAAsBE,GACxDpD,MAAO0U,EAAwBmB,mBAC/B5P,MAAO/G,EAAE4D,EAAiB+S,oBAC1B3O,cAAc,OAGlBpI,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCC,EAAAA,EAAAA,KAACgB,EAAAA,OAAM,CACLgH,OAAK,EACL/G,YAAY,SACZkH,MAAO/H,EAAE,8BACT8H,UAAU,WACV3G,SAAW+C,GAASF,EAAc,cAAeE,GACjD8M,QAAQ,EACR/P,QAASwU,EAAYmB,mBACrB5O,cAAc,EACdlH,MAAO0U,EAAwBqB,YAC/B9P,MAAO/G,EAAE4D,EAAiBiT,kBAK9BjX,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCC,EAAAA,EAAAA,KAAC+H,EAAAA,MAAK,CACJC,OAAK,EACLE,UAAU,WACVC,MAAO/H,EAAE,iBACTmB,SAAW+C,GACTF,EAAc,2BAA4BE,GAE5C8D,cAAc,EACdlH,MAAO0U,EAAwBsB,yBAC/B/P,MAAO/G,EAAE4D,EAAiBkT,+BAG9BlX,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCC,EAAAA,EAAAA,KAAC+H,EAAAA,MAAK,CACJC,OAAK,EACLE,UAAU,WACVC,MAAO/H,EAAE,8BACTmB,SAAW+C,GACTF,EAAc,yBAA0BE,GAE1C8D,cAAc,EACdlH,MAAO0U,EAAwBuB,uBAC/BhQ,MAAO/G,EAAE4D,EAAiBmT,6BAG9BnX,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCC,EAAAA,EAAAA,KAAC+H,EAAAA,MAAK,CACJC,OAAK,EACLE,UAAU,WACVC,MAAO/H,EAAE,0BACTmB,SAAW+C,GAASF,EAAc,UAAWE,GAC7C8D,cAAc,EACdlH,MAAO0U,EAAwBwB,QAC/BjQ,MAAO/G,EAAE4D,EAAiBoT,cAG9BpX,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCC,EAAAA,EAAAA,KAACgB,EAAAA,OAAM,CACLgH,OAAK,EACL/G,YAAY,SACZkH,MAAO/H,EAAE,6BACT8H,UAAU,WACV7G,QAASwU,EAAYwB,kBACrBjP,cAAc,EACdgJ,QAAQ,EACR7P,SAAW+C,GAASF,EAAc,aAAcE,GAChDpD,MAAO0U,EAAwB0B,WAC/BnQ,MAAO/G,EAAE4D,EAAiBsT,iBAG9BtX,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCC,EAAAA,EAAAA,KAACuX,EAAAA,WAAU,CACTvP,OAAK,EAELG,MAAO/H,EAAE,4BACT0B,KAAK,WACL0V,WAAW,IACXtP,UAAU,WACV3G,SAAW+C,GAASF,EAAc,uBAAwBE,GAC1DmT,eAAeC,EAAAA,EAAAA,MACftP,cAAc,EACdlH,MAAO0U,EAAwB+B,qBAC/BxQ,MAAO/G,EAAE4D,EAAiB2T,2BAG9B3X,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCC,EAAAA,EAAAA,KAACuX,EAAAA,WAAU,CACTvP,OAAK,EAELG,MAAO/H,EAAE,0BACT0B,KAAK,WACL0V,WAAW,IACXtP,UAAU,WACV3G,SAAW+C,GAASF,EAAc,qBAAsBE,GACxDmT,eAAeC,EAAAA,EAAAA,MAEftP,cAAc,EACdlH,MACiD,OAA/C0U,EAAwBgC,mBACpB,GACAhC,EAAwBgC,mBAE9BzQ,MAAO/G,EAAE4D,EAAiB4T,yBAG9B5X,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCC,EAAAA,EAAAA,KAACgB,EAAAA,OAAM,CACLgH,OAAK,EACL/G,YAAY,SACZkH,MAAO/H,EAAE,8BACT8H,UAAU,WACV7G,QAASwU,EAAYgC,mBACrBzP,cAAc,EACd7G,SAAW+C,GAASF,EAAc,kBAAmBE,GACrDpD,MAAO0U,EAAwBkC,gBAC/B3Q,MAAO/G,EAAE4D,EAAiB8T,sBAG9B9X,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCC,EAAAA,EAAAA,KAAC+H,EAAAA,MAAK,CACJC,OAAK,EACLG,MAAO/H,EAAE,2BACTmB,SAAW+C,GAASF,EAAc,WAAYE,GAC9C8D,cAAc,EACdlH,MAAO0U,EAAwBmC,SAC/B5Q,MAAO/G,EAAE4D,EAAiB+T,eAG9B/X,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCC,EAAAA,EAAAA,KAACgB,EAAAA,OAAM,CACLgH,OAAK,EACL/G,YAAY,SACZI,QAASwU,EAAYmC,gBACrB7P,MAAO/H,EAAE,mCACTgR,QAAQ,EACR7P,SAAW+C,GAASF,EAAc,eAAgBE,GAClD2T,SAAUnC,EACV1N,cAAc,EACdlH,MAAO0U,EAAwBsC,aAC/B/Q,MAAO/G,EAAE4D,EAAiBkU,qBAI/BlC,EAAsBvW,OAAS,EAC5BuW,EAAsBzV,KAAK4X,IACzBnY,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACoY,EAAAA,UAAS,CAAArY,UACRC,EAAAA,EAAAA,KAACoY,EAAAA,UAAUzW,QAAO,CAChBhC,UAAU,qBACV0Y,MACEtC,EACIoC,EAAU3B,aACV,MACApW,EAAE,qBACFA,EAAE,qBACPL,UAEDC,EAAAA,EAAAA,KAACsY,EAAAA,EAAgB,CACftC,sBAAuBmC,EAAUI,sBACjCrC,mBAAoBA,EACpBD,0BAA2BE,EACzBF,EACAkC,EAAU3B,wBAOtB,SAKd,CA3PAb,EAAkCvS,aAAe,CAC/CyS,YAAa,CACXmB,mBAAoB,GACpBK,kBAAmB,GACnBX,gBAAiB,GACjBsB,gBAAiB,GACjBpB,uBAAwB,GACxBiB,mBAAoB,GACpBf,0BAA2B,K,8MCZ/B,MAAM0B,UAAmD9U,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KACjEC,MAAQ,CACN4U,qBAAsBhU,IAAAA,UAAiBiU,EAAAA,IACvC9C,wBAAyBnR,IAAAA,UAAiBiU,EAAAA,IAE1CC,iBAAiB,EACjBC,aAAa,EACblC,gBAAiB,GACjBE,uBAAwB,GACxBiB,mBAAoB,GACpBb,mBAAoB,GACpBF,0BAA2B,GAC3BkB,gBAAiB,GACjBX,kBAAmB,GACnBwB,sBAAuB,GACvBN,sBAAuB,GACvBvC,sBAAuB,GACvBC,0BAA2B,GAC3BjS,iBAAkB1C,EAAAA,GAChBwX,EAAAA,IAEFC,0BAA0B,EAC1BC,yBAA0B,CAAC,GAC3B,KAEFC,YAAc,KACZ,IACE,MAAMjV,EAAmB,IAAKO,KAAKV,MAAMG,kBACnCyU,EAAuBhU,IAAAA,UAC3BF,KAAKV,MAAM4U,sBAEb7T,OAAOsU,KAAKlV,GAAkB4H,SAAQ,SAAUlG,GAC9C1B,EAAiB0B,GAAO,EAC1B,IACAnB,KAAKC,SACH,CACEoR,wBAAyB,IAAK6C,GAC9BzU,mBACAgS,sBAAuB,KAEzB,KACMzR,KAAKS,MAAMwC,YAAYV,aAAaqS,kBACtC5U,KAAK6U,wBAAwB,IAC7B7U,KAAK8U,wCAEL9U,KAAK+U,qBACL/U,KAAK8U,sCACP,GAGN,CAAE,MAAOlS,GACPG,QAAQC,IACN,0EACAJ,EAEJ,GACA,KAoDFoS,0BAA6BC,IAC3B,IAEiD,KAA7CjV,KAAKV,MAAM4U,qBAAqBhC,eACM9V,IAAtC6Y,EAAUzN,YAAY0N,aACtBlV,KAAKS,MAAMwB,aAAaC,YAAc+S,EAAUhT,aAAaC,WAE7DlC,KAAKC,SACH,CACEoR,wBAAyB8C,EAAAA,GACzBD,qBAAsBC,EAAAA,GACtBE,aAAa,EACb5C,sBAAuB,KAEzB,KACMzR,KAAKS,MAAMwC,YAAYV,aAAaqS,kBACtC5U,KAAK6U,wBAAwB,IAC7B7U,KAAK8U,wCAEL9U,KAAK+U,qBACL/U,KAAK8U,sCACP,GAIR,CAAE,MAAOlS,GACPG,QAAQC,IACN,wFACAJ,EAEJ,GACA,KA0OFuS,2BAA8BxB,IAC5B,IACE,IAAIW,EAAwBtU,KAAKV,MAAMmU,gBAAgBxM,QAAQ3I,GAC7DA,EAAK3B,MAAM6F,cAAc0D,SAASyN,EAAanR,iBAE7C8R,EAAsBpZ,OAASka,EAAAA,KACjCd,EAAwBA,EAAsBe,MAC5C,EACAD,EAAAA,KAIJpV,KAAKC,SAAS,CACZqU,yBAEJ,CAAE,MAAO1R,GACPG,QAAQC,IACN,uFACAJ,EAEJ,GACA,KAsHF0S,aAAe,CAACxV,EAAcC,KAC5B,IACE,MAAMsR,EAA0BnR,IAAAA,UAC9BF,KAAKV,MAAM+R,yBAEP5R,EAAmBS,IAAAA,UAAiBF,KAAKV,MAAMG,kBACrD4R,EAAwBvR,GAAgBC,EACxCC,KAAKC,SAAS,CAAEoR,iCAC8CjV,IAA1DmY,EAAAA,GAAwCzU,KAC1CL,EAAiBK,GAAgB/C,EAAAA,GAC/BwX,EAAAA,GAAwCzU,GACxCC,GAEFC,KAAKC,SAAS,CAAER,qBAEpB,CAAE,MAAOmD,GACPG,QAAQC,IACN,2EACAJ,EAEJ,GACA,KAEF2S,qBAAuB,KACrB,IAAId,EAA2BvU,IAAAA,UAAiBF,KAAKV,MAAMmV,0BAC3DzU,KAAKwV,2BAA2Bf,EAAyB,EACzD,KAIFgB,WAAa,KACX,IACE,IAAIpE,EAA0BrR,KAAK0V,cAC/BC,EAAgB5Y,EAAAA,GAClBiD,KAAKV,MAAMmS,uBAGb,GAAIzR,KAAK4V,aAAaD,GAAgB,CACpCtE,EAA0BrR,KAAK6V,uBAC7BxE,EACAsE,GAGF,IAAInB,GACoD,IAAxDxU,KAAKS,MAAMwC,YAAYV,aAAauT,gBAGlCrB,EAA2BvU,IAAAA,UAAiBmR,GAChDrR,KAAKC,SAAS,CAAEuU,2BAA0BC,6BAA4B,MACnC,IAA7BD,GACFxU,KAAKuV,sBACP,GAIF,MACEvV,KAAKC,SAAS,CAAEoU,aAAa,GAEjC,CAAE,MAAOzR,GACPG,QAAQC,IACN,yEACAJ,EAEJ,GACA,KA6IF+O,mBAAqB,CAACiC,EAAWjX,KAC/B,IACEiX,EAAUmC,aAAepZ,EACzBqD,KAAKC,SAAS,CACZ2T,UAAWA,IAEb,MAAMlC,EAA4BxR,IAAAA,UAChCF,KAAKV,MAAMoS,2BAGbA,EAA0BrK,SAASyK,IAC7BA,EAAoBG,eAAiB2B,EAAU3B,eACjDH,EAAoBJ,0BAA0BkC,EAAUoC,MACtDjZ,EAAAA,GAAgC6W,EAAWjX,GAC/C,IAEFqD,KAAKC,SAAS,CAAEyR,6BAClB,CAAE,MAAO9O,GACPG,QAAQC,IACN,iFACAJ,EAEJ,GACA,KAmHFqT,0BAA4B,KAC1BjW,KAAKC,SAAS,CACZuU,0BAA0B,GAC1B,CACF,CAjyBF0B,UAAAA,GACEpU,IACEC,EAAAA,IACAhF,EAAAA,GAAwCiD,KAAKS,MAAMwB,aAAaC,YAE/DC,MAAMC,IAEL,IAAIC,EAASD,EAASrC,KAEtB,IAAyB,IAArBsC,EAAOC,WACT,GAA4B,OAAxBD,EAAOE,aAAuB,CAChC,IAAIkQ,EAAqB,GACrBK,EAAoB,GAOxB,GANIqD,MAAMC,QAAQ/T,EAAOE,aAAa8T,UACpC5D,EAAqB1V,EAAAA,GACnBsF,EAAOE,aAAa8T,SAIpBF,MAAMC,QAAQ/T,EAAOE,aAAa+T,MAAO,CACtBvZ,EAAAA,GACnBsF,EAAOE,aAAa+T,MAEPjP,SAASkP,GACtB9D,EAAmBvK,KAAKqO,IAE5B,CACIJ,MAAMC,QAAQ/T,EAAOE,aAAaiU,WACpC1D,EAAoB/V,EAAAA,GAClBsF,EAAOE,aAAaiU,UAGxBxW,KAAKC,SAAS,CAAEwS,qBAAoBK,qBAGtC,OAEA/P,QAAQC,IACN,kEACAX,EAAOK,UAEX,IAEDC,OAAOC,IACNG,QAAQC,IACN,6EACAJ,EACD,GAEP,CAiCAC,iBAAAA,GACE,IACE9F,EAAAA,GAAqBiD,KAAKS,MAAMwC,YAAYV,aAAakU,YACzDzW,KAAK0W,gBACL1W,KAAKkW,aACLlW,KAAK2W,cACL3W,KAAK4W,sBACL5W,KAAK6W,oCACL7W,KAAK8W,kBACL9W,KAAK+W,+BACL,IAAI1F,EAA0BnR,IAAAA,UAC5BF,KAAKV,MAAM+R,yBAEbA,EAAwB2F,gBAAkBhX,KAAKS,MAAMvG,oBACrD8F,KAAKC,SAAS,CACZoU,YAAatX,EAAAA,GACXiD,KAAKS,MAAMwC,YAAYV,aAAa0U,cACpCC,EAAAA,EAAejc,IACfkc,EAAAA,IAEF9F,wBAAyBA,GAE7B,CAAE,MAAOzO,GACPG,QAAQC,IACN,gFACAJ,EAEJ,CACF,CAEAkU,eAAAA,GACE,IAAIzF,EAA0BnR,IAAAA,UAC5BF,KAAKV,MAAM+R,yBAEbvP,IACEC,EAAAA,IACE,uBACAsP,EAAwBmB,mBACxB,oBACAxS,KAAKS,MAAMvG,oBACb6C,EAAAA,GAAwCiD,KAAKS,MAAMwB,aAAaC,YAChEC,MAAMC,IACN,IAAIC,EAASD,EAASrC,KACtB,IAAyB,IAArBsC,EAAOC,UACT,GAAI6T,MAAMC,QAAQ/T,EAAOE,cAAe,CACtC,IAAI6U,EAAuB/U,EAAOE,aAAa0E,QAC5CoQ,GACCA,EAAgBL,kBAAoBhX,KAAKS,MAAMvG,sBAEnD,GAAIkd,EAAqBlc,OAAS,EAAG,CACnC,IAAIoc,EACFF,EAAqB,GAAGG,yBACtB9D,EAAkB,GACa,OAA/B6D,IACF7D,EAAkBpT,OAAOsU,KAAK2C,GAC9B7D,EACE1W,EAAAA,GAAgC0W,IAEpCzT,KAAKC,SAAS,CAAEwT,mBAClB,MACE1Q,QAAQC,IACN,qFAGN,MACED,QAAQC,IACN,iGAGN,GAEJ,CACA+T,4BAAAA,GACE,MAAMS,EAAyB,GAC/B,IAAK,IAAIrW,KAAOiU,EAAAA,GACVjU,IAAQiU,EAAAA,GAA6BqC,UACvCD,EAAuBtP,KAAK/G,GAGhCnB,KAAKC,SAAS,CACZsS,0BAA2BxV,EAAAA,GACzBya,IAGN,CACAb,WAAAA,GACE7U,IACEC,EAAAA,IAAoB,oBAAsB/B,KAAKS,MAAMvG,oBACrD6C,EAAAA,GAAwCiD,KAAKS,MAAMwB,aAAaC,YAE/DC,MAAMC,IAEL,IAAIC,EAASD,EAASrC,KACtB,IAAyB,IAArBsC,EAAOC,UAAoB,CAC7B,IAAI6P,EAAkB,GACM,OAAxB9P,EAAOE,eACT4P,EAAkBpV,EAAAA,GAChBsF,EAAOE,eAGXvC,KAAKC,SAAS,CAAEkS,mBAClB,MACEpP,QAAQC,IACN,mEACAX,EAAOK,UAEX,IAEDC,OAAOC,IACNG,QAAQC,IACN,8EACAJ,EACD,GAEP,CACAiU,iCAAAA,GACE/U,IACEC,EAAAA,IACAhF,EAAAA,GAAwCiD,KAAKS,MAAMwB,aAAaC,YAE/DC,MAAMC,IAEL,IAAIC,EAASD,EAASrC,KAEtB,IAAyB,IAArBsC,EAAOC,WACT,GAA4B,OAAxBD,EAAOE,aAAuB,CAChC,IAAImV,EAA4BrV,EAAOE,aAAaoV,KACpD,IAAIC,EAAqB,GACzBF,EAA0BrQ,SAASwQ,IACjCD,EAAmB1P,KAAK,CACtB8B,KAAM6N,EACNlb,MAAOkb,GACP,IAEJ7X,KAAKC,SAAS,CACZoS,uBAAwBuF,GAE5B,OAEA7U,QAAQC,IACN,yFACAX,EAAOK,UAEX,IAEDC,OAAOC,IACNG,QAAQC,IACN,oGACAJ,EACD,GAEP,CACAgU,mBAAAA,GACE9U,IACEC,EAAAA,IACAhF,EAAAA,GAAwCiD,KAAKS,MAAMwB,aAAaC,YAE/DC,MAAMC,IAEL,IAAIC,EAASD,EAASrC,KACtB,IAAIuT,EAAqB,IAEA,IAArBjR,EAAOC,WACmB,OAAxBD,EAAOE,cACTlC,OAAOsU,KAAKtS,EAAOE,cAAc8E,SAASyQ,SAEJ1b,IAAlCiG,EAAOE,aAAauV,IACpB3B,MAAMC,QAAQ/T,EAAOE,aAAauV,MAElCxE,EAAqBA,EAAmByE,OACtChb,EAAAA,GAAgCsF,EAAOE,aAAauV,KAExD,IAiBJ9X,KAAKC,SAAS,CAAEqT,wBAEhBvQ,QAAQC,IACN,2EACAX,EAAOK,WAGX1C,KAAKgY,iBAAiB1E,EAAmB,IAE1C3Q,OAAOC,IACNG,QAAQC,IACN,sFACAJ,EACD,GAEP,CACAoV,gBAAAA,CAAiB1E,GACfxR,IACEC,EAAAA,IACAhF,EAAAA,GAAwCiD,KAAKS,MAAMwB,aAAaC,YAE/DC,MAAMC,IACL,IAAIC,EAASD,EAASrC,KACtB,IAAyB,IAArBsC,EAAOC,WACT,GAC0B,OAAxBD,EAAOE,mBACiBnG,IAAxBiG,EAAOE,aACP,CACsBxF,EAAAA,GACpBsF,EAAOE,aAAa0V,SAEN5Q,SAAS6Q,GACvB5E,EAAmBpL,KAAKgQ,KAE1BlY,KAAKC,SAAS,CAAEqT,sBAClB,OAEAvQ,QAAQC,IAAI,6BAA8BX,EAAOK,UACnD,IAEDC,OAAOC,IACNG,QAAQC,IAAI,sCAAuCJ,EAAM,GAE/D,CAwBAgT,YAAAA,CAAaD,GACX,MAAM,wBAAEtE,GAA4BrR,KAAKV,MACzC,IAAIG,EAAmBS,IAAAA,UAAiBF,KAAKV,MAAMG,kBACnDY,OAAOsU,KAAKJ,EAAAA,IAAyClN,SAAQ,SAC3DlG,GAEA1B,EAAiB0B,GAAOpE,EAAAA,GACtBwX,EAAAA,GAAwCpT,GACxCkQ,EAAwBlQ,GAE5B,IACAnB,KAAKC,SAAS,CAAER,qBAChB,IAAIiS,EAA4BxR,IAAAA,UAC9BF,KAAKV,MAAMoS,2BAGbiE,EAActO,SAASuM,IACrBlC,EAA0BrK,SAASyK,IAC7BA,EAAoBG,eAAiB2B,EAAU3B,cACjD2B,EAAUI,sBAAsB3M,SAAS8Q,IACvCrG,EAAoBJ,0BAClByG,EAAkBnC,MAChBjZ,EAAAA,GACFob,EACAA,EAAkBpC,aACnB,GAEL,GACA,IAGJ/V,KAAKC,SAAS,CAAER,mBAAkBiS,8BAElC,IAAItR,GAAc,EAgBlB,OAfAsR,EAA0BrK,SAAS+Q,IACjC,IAAIhY,EAOF,OAAOA,EANPA,EAAcC,OAAOC,OAAO8X,EAAE1G,2BAA2BnR,OACvD,SAAU5D,GACR,MAAiB,KAAVA,CACT,GAIJ,IAEEyD,IACFA,EAAcC,OAAOC,OAAOb,GAAkBc,OAAM,SAAU5D,GAC5D,MAAiB,KAAVA,CACT,KACKyD,CACT,CACAoV,0BAAAA,CAA2BnE,GACzBrR,KAAKiW,4BACLjW,KAAKC,SAAS,CAAEoU,aAAa,IAC7B,IAAIgE,EAAM,CACRC,gBAAiBtY,KAAKS,MAAMvG,oBAC5Bqe,OAAQlH,GAENmH,EAAe,CACjBC,YAAa,WACbC,QAAS,yCACTC,qBAAsB,CACpB,CACEC,UAAW,CAAC,mBACZC,UAAW,CAACxH,EAAwBa,UACpC4G,WAAW,EACXC,aAAc,MAIpBjX,IACEC,EAAAA,IACAhF,EAAAA,GACEsb,EACArY,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,KACtByY,EAAaC,YAAcpW,EAAOC,UAAY,UAAY,WAC1DkW,EAAaG,qBAAqB,GAAGG,UAAYzW,EAAOC,WAC/B,IAArBD,EAAOC,UACTtC,KAAKC,SAAS,CACZoU,aAAa,EACbH,qBAAsB7C,KAGxBmH,EAAaG,qBAAqB,GAAGI,aACnC1W,EAAOK,UAAU,GACnB1C,KAAKC,SAAS,CACZoU,YAAatX,EAAAA,GACXiD,KAAKS,MAAMwC,YAAYV,aAAa0U,cACpCC,EAAAA,EAAejc,IACfkc,EAAAA,MAGJpU,QAAQC,IACN,kFACAX,EAAOK,YAGX1C,KAAKS,MAAMuY,QAAQ3H,EAAyB,MAAOmH,EAAa,IAEjE7V,OAAOC,IACN5C,KAAKC,SAAS,CACZoU,YAAatX,EAAAA,GACXiD,KAAKS,MAAMwC,YAAYV,aAAa0U,cACpCC,EAAAA,EAAejc,IACfkc,EAAAA,MAGJqB,EAAaG,qBAAqB,GAAGI,aAAenW,EACpD5C,KAAKS,MAAMuY,QAAQ3H,EAAyB,MAAOmH,EAAa,GAEtE,CAmEA9C,WAAAA,GACE,IACE,IAAIrE,EAA0BnR,IAAAA,UAC5BF,KAAKV,MAAM+R,yBAsBb,OAlBAA,EAAwB2F,gBAAkBhX,KAAKS,MAAMvG,oBAEf,OAApCmX,EAAwBwB,SACY,KAApCxB,EAAwBwB,UAExBxB,EAAwBwB,QACtBxB,EAAwBwB,QAAQoG,kBAEiB,OAAnD5H,EAAwBuB,wBAC2B,KAAnDvB,EAAwBuB,yBAExBvB,EAAwBuB,uBACtBvB,EAAwBuB,uBAAuBqG,kBAEI,OAArD5H,EAAwBsB,0BAC6B,KAArDtB,EAAwBsB,0BAExB3S,KAAKC,SAAS,CAAEoR,4BACXA,CACT,CAAE,MAAOzO,GACPG,QAAQC,IACN,0EACAJ,EAEJ,CACF,CACA8T,aAAAA,GACE,IACE5U,IACEC,EAAAA,IACAhF,EAAAA,GACE,CAACmc,EAAAA,IACDlZ,KAAKS,MAAMwB,aAAaC,YAE1BC,MAAMC,IACN,IAAIC,EAASD,EAASrC,MACG,IAArBsC,EAAOC,UACTtC,KAAKC,SACH,CACE+T,sBAAuB9T,IAAAA,UAAiBmC,EAAOE,cAC/CmP,0BACE3U,EAAAA,GACEsF,EAAOE,aAAa4W,8BAG1B,KACMnZ,KAAKS,MAAMwC,YAAYV,aAAaqS,iBACtC5U,KAAK6U,wBAAwB,IAE7B7U,KAAK+U,oBACP,IAIJhS,QAAQC,IACN,qEAEJ,GAEJ,CAAE,MAAOJ,GACPG,QAAQC,IACN,wEACAJ,EAEJ,CACF,CACAiT,sBAAAA,CAAuBuD,EAA8BzD,GACnD,IA+BE,OA7B4D,OAA1DyD,EAA6BzG,0BAC6B,KAA1DyG,EAA6BzG,2BAE7ByG,EAA6BzG,yBAC3B5V,EAAAA,GACEqc,EAA6BzG,2BAIuB,OAAxDyG,EAA6BxG,wBAC2B,KAAxDwG,EAA6BxG,yBAE7BwG,EAA6BxG,uBAC3B7V,EAAAA,GACEqc,EAA6BxG,yBAIQ,OAAzCwG,EAA6BvG,SACY,KAAzCuG,EAA6BvG,UAE7BuG,EAA6BvG,QAAU9V,EAAAA,GACrCqc,EAA6BvG,UAGjCuG,EAA+BpZ,KAAKqZ,qBAClCD,EACAzD,EAGJ,CAAE,MAAO2D,GACPvW,QAAQC,IACN,+GACAsW,EAEJ,CACF,CAEAD,oBAAAA,CAAqBD,EAA8BzD,GACjD,IAiBE,OAhBAA,EAAgB5Y,EAAAA,GAAuC4Y,GACvDyD,EAA6BG,WAAa,GAC1C5D,EAActO,SAASmS,IACrB,IAAI5F,EAAY,CACd6F,oBAAqB,IAEvB7F,EAAU3B,aAAeuH,EAAKvH,aAC9BuH,EAAKxF,sBAAsB3M,SAASqS,IAClC9F,EAAU6F,oBAAoBvR,KAAK,CACjCyR,cAAeD,EAAI1D,KACnB4D,eAAgBF,EAAI3D,cACpB,IAEJqD,EAA6BG,WAAWrR,KAAK0L,EAAU,IAEzD5T,KAAKC,SAAS,CAAEmZ,iCACTA,CACT,CAAE,MAAOxW,GACPG,QAAQC,IACN,mFACAJ,EAEJ,CACF,CAyBAiS,uBAAAA,CAAwBgF,GACtB,IACE,QAA0Bzd,IAAtByd,GAAyD,OAAtBA,EAA4B,CACjE,IAAIC,EAA0B,GAC9B,IAAI9F,EAAwB,GACxBvC,EAAwB,GAC5BuC,EAAwB9T,IAAAA,UACtBF,KAAKV,MAAM0U,uBAEbvC,EAAwBvR,IAAAA,UACtBF,KAAKV,MAAMmS,uBAEb,MAAMC,EAA4BxR,IAAAA,UAChCF,KAAKV,MAAMoS,2BAEb,IAAIqI,EAAU7Z,IAAAA,UAAiBF,KAAKV,MAAM+R,yBAE1CwI,EAAkBxS,SAASwK,IACzB,IAAImI,EAAYvI,EAAsBM,MAAMC,GACnCA,EAAkBC,eAAiBJ,SAG1BzV,IAAd4d,EACFhG,EAAsBmF,2BAA2B9R,SAAQ,SACvD8Q,GAEA,GAAIA,EAAkBlG,eAAiBJ,EAAU,CAC/C,IAAIoI,EAAiBF,EAAQR,WAAWxH,MACrCmI,GACQA,EAAqBjI,eAAiBJ,SAG1BzV,IAAnB6d,GACF9B,EAAkBnE,sBAAsB3M,SAAQ,SAC9C8Q,GAEA,IAAIgC,EACFF,EAAeR,oBAAoB1H,MAAMqG,GAChCA,EAAEuB,gBAAkBxB,EAAkBnC,YAE1B5Z,IAAnB+d,IACFhC,EAAkBpC,aAChBoE,EAAeP,eACrB,IAEFE,EAAwB5R,KAAKiQ,EAC/B,CACF,IAEA2B,EAAwB5R,KAAK8R,EAC/B,IAEFvI,EAAwB,GACxBA,EAAwBqI,EACxBrI,EAAwB1U,EAAAA,GACtB0U,GAGFC,EAA0BrK,SAASyK,SAIX1V,IAHFyd,EAAkB9H,MAAM8H,GACnC/H,EAAoBG,eAAiB4H,KAG5CxZ,OAAOsU,KAAK7C,EAAoBJ,2BAA2BrK,SACxDlG,GAAS2Q,EAAoBJ,0BAA0BvQ,GAAO,IAEnE,IAEFnB,KAAKC,SAAS,CAAEwR,wBAAuBC,6BACzC,CACF,CAAE,MAAO9O,GACPG,QAAQC,IACN,sFACAJ,EAEJ,CACF,CACAmS,kBAAAA,GACE,IACE,IAAIf,EAAwB9T,IAAAA,UAC1BF,KAAKV,MAAM0U,uBAETmC,MAAMC,QAAQpC,EAAsBmF,6BAA+BnF,EAAsBmF,2BAA2Bje,OAAS,GAC/H8E,KAAK6U,wBAAwB,CAC3Bb,EAAsBmF,2BAA2B,GAAGlH,cAG1D,CAAE,MAAOrP,GACPG,QAAQC,IACN,iFACAJ,EAEJ,CACF,CAEAkS,mCAAAA,GACE,IACE,IAAId,EAAwB9T,IAAAA,UAC1BF,KAAKV,MAAM0U,uBAEbhU,KAAKC,SAAS,CACZyR,0BACE3U,EAAAA,GACEiX,EAAsBmF,6BAG9B,CAAE,MAAOvW,GACPG,QAAQC,IACN,8DACAJ,EAEJ,CACF,CAQAS,MAAAA,GACE,OAAOrD,KAAKV,MAAM8U,iBAChBjZ,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAAC2e,EAAAA,EAAe,CAACC,cAAc,yCAEjC5e,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAAC2V,EAAiC,CAChCC,wBAAyBrR,KAAKV,MAAM+R,wBACpCC,YAAa,CACXmB,mBAAoBzS,KAAKV,MAAMmT,mBAC/BK,kBAAmB9S,KAAKV,MAAMwT,kBAC9BX,gBAAiBnS,KAAKV,MAAM6S,gBAC5BE,uBAAwBrS,KAAKV,MAAM+S,uBACnCiB,mBAAoBtT,KAAKV,MAAMgU,mBAC/BG,gBAAiBzT,KAAKV,MAAMmU,gBAC5Ba,sBAAuBtU,KAAKV,MAAMgV,sBAClC/B,0BAA2BvS,KAAKV,MAAMiT,2BAExC1S,cAAeG,KAAKsV,aACpB7V,iBAAkBO,KAAKV,MAAMG,iBAC7B8R,uBAAwBvR,KAAKmV,2BAC7B3D,iBACExR,KAAKS,MAAMwC,YAAYV,aAAaqS,iBAEtClD,0BAA2B1R,KAAKV,MAAMoS,0BACtCD,sBAAuBzR,KAAKV,MAAMmS,sBAClCE,mBAAoB3R,KAAK2R,wBAG7BlW,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAAC6e,EAAAA,EAAoB,CACnBC,WAAYva,KAAKS,MAAM+Z,OACvB/E,WAAYzV,KAAKyV,WACjBf,YAAa1U,KAAK0U,YAClBL,YAAarU,KAAKV,MAAM+U,gBAI3BrU,KAAKV,MAAMkV,0BACV/Y,EAAAA,EAAAA,KAACyD,EAAAA,EAAwB,CACvB4B,SAAUd,KAAKS,MAAMwC,YAAYV,aAAakY,SAC9CtX,aAAc+T,EAAAA,EAAejc,IAC7BmI,cAAe+T,EAAAA,GACf1U,gBAAiBzC,KAAKuV,qBACtB7U,YAAaV,KAAKiW,4BAElB,SAGNxa,EAAAA,EAAAA,KAACif,EAAAA,EAAW,CAAChC,QAAQ,WAEzB,EAEF,MAWA,GAAe5U,EAAAA,EAAAA,KAXUxE,IAChB,CACL2D,YAAa3D,EAAMyE,eAAed,YAClChB,aAAc3C,EAAMyE,eAAeC,cAGZ2W,IAClB,CACLC,aAAaC,EAAAA,EAAAA,IAAmB9W,EAAgB4W,MAGpD,CAGE1G,E,6GCt7BK,SAAS6G,EAA0ChhB,GAatD,IAbuD,UACvDihB,EAAS,cACT7M,EAAa,SACbxJ,EAAQ,eACR6K,EAAc,eACdvE,EAAc,qBACdd,EAAoB,uBACpBwF,EAAsB,gBACtBnE,EAAe,kBACfnG,EAAiB,kBACjB4V,EAAiB,WACjBvV,EAAU,gBACV8C,GACHzO,EACG,OACI2B,EAAAA,EAAAA,KAACwf,EAAAA,EAAkB,CACnBlb,KAAMgb,EACNnT,QAASsG,EACTtJ,YAAaF,EACb6K,eAAgBA,EAChBvE,eAAgBA,EAChBd,qBAAsBA,EACtBwF,uBAAwBA,EACxBnE,gBAAiBA,EACjBnG,kBAAmBA,EACnBkC,kBAAmB0T,EACnBvV,WAAYA,EACZ8C,gBAAiBA,GAGzB,C,4JCZA,MAAM2S,UAA4C/b,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KAC1DC,MAAQ,CACN6b,WAAW,EACX/G,iBAAiB,EACjBgH,mBAAmB,EACnBrhB,oBAAqB,CAAEkB,KAAK,EAAM2D,QAAQ,EAAO/B,aAAa,GAC9D2K,YAAa,CAAC,EACdW,cAAe,GACfjO,oBAAqB,GACrB6F,KAAM,CAAC,EACPsb,SAAU,IAAI3P,KACd4P,OAAQ,IAAI5P,KACZ6P,UAAW,IACX,KAEFC,cAAgB,sCAAsC,KAuCtDC,qBAAuB,KACrB1e,EAAAA,GAA8BiD,KAAKwb,cAAgB,aACnDrN,OAAOuN,oBAAoB,gBAAgB,IAAM3e,EAAAA,GAA8BiD,KAAKwb,cAAgB,cAAa,EAClH,KAEDG,iCAAoC9e,IAClC,IACE,IAAI,oBAAE9C,GAAwB,IAAKiG,KAAKV,OACxCvF,EAAoB6E,QAAS,EAC7BoB,KAAKC,SAAS,CACZ/F,oBAAqB2C,EACrBsL,cAAe,GACfpO,wBAEFiG,KAAK4b,kCAAkC/e,EACzC,CAAE,MAAO+F,GACPG,QAAQC,IACN,wFACAJ,EAEJ,GACA,KA2EFiZ,qBAAuB,CAAClf,EAAOiG,KACf,KAAVjG,GACFqD,KAAKC,SAAS,CAAEsb,UAAW,GAAID,OAAQ,GAAID,SAAU,KACzC,OAAVzY,GAA4B,KAAVA,EACpB5C,KAAKC,SAAS,CACZsb,UAAW,qBACXD,OAAQ,GACRD,SAAU,KAGZrb,KAAKC,SAAS,CAAEsb,UAAW,GAAID,OAAQ3e,EAAMmf,GAAIT,SAAU1e,EAAMof,MACnE,EACA,KACFC,kBAAoBliB,IAAmB,IAAlB,GAAEgiB,EAAE,KAAEC,GAAMjiB,OACpBsC,IAAP0f,GAAkB9b,KAAKC,SAAS,CAAEqb,OAAQQ,SACjC1f,IAAT2f,GAAoB/b,KAAKC,SAAS,CAAEob,SAAUU,GAAO,EACzD,KACFE,iBAAmB,KAEjB,IAAIrZ,EAAQ7F,EAAAA,GACViD,KAAKV,MAAMgc,OACXtb,KAAKV,MAAM+b,UAGC,KAAVzY,EACF5C,KAAKC,SAAS,CAAEsb,UAAW3Y,KAE3B5C,KAAKC,SAAS,CAAEsb,UAAW,KAC3Bvb,KAAK4b,kCAAkC5b,KAAKV,MAAMpF,qBACpD,EACA,KACFgiB,UAAY,KACV,IACE,IAAI,oBAAEniB,GAAwB,IAAKiG,KAAKV,OACxCvF,EAAoB6E,QAAS,EAC7B7E,EAAoBkB,KAAM,EAC1BlB,EAAoB8C,aAAc,EAClCmD,KAAKC,SAAS,CACZkb,WAAW,EACXphB,sBACAyN,YAAa,CAAC,GAElB,CAAE,MAAO5E,GACPG,QAAQC,IACN,iEAEJ,GACA,KACFuX,WAAa,KACX,IACE,IAAIxgB,EAAsB,IAAKiG,KAAKV,MAAMvF,qBAC1CA,EAAoBkB,IAAM8B,EAAAA,GACxBiD,KAAKS,MAAMwC,YAAYV,aAAa0U,cACpCC,EAAAA,EAAejc,IACfkc,EAAAA,IAEFpd,EAAoB6E,QAAS,EAC7B7E,EAAoB8C,aAAc,EAClCmD,KAAKC,SAAS,CACZkb,WAAW,EAGXphB,sBACAqa,iBAAiB,IAEnBpU,KAAK4b,kCAAkC5b,KAAKV,MAAMpF,oBACpD,CAAE,MAAO0I,GACPG,QAAQC,IAAI,6CAA8CJ,EAC5D,GACA,KACFuZ,WAAa,CAACpc,EAAMqc,EAAU5D,KAC5B,IACE,IAAIze,EAAsB,IAAKiG,KAAKV,MAAMvF,qBACT,YAA7Bye,EAAaC,cACd1e,EAAoBkB,IAAM8B,EAAAA,GACzBiD,KAAKS,MAAMwC,YAAYV,aAAa0U,cACpCC,EAAAA,EAAejc,IACfkc,EAAAA,IAEFpd,EAAoB6E,QAAS,EAC7BoB,KAAKC,SAAS,CAAEmb,mBAAmB,EAAMrhB,0BAW3CsiB,EAAAA,EAAAA,QACE5gB,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAAC6gB,EAAAA,EAAW,CAACC,oBAAqB/D,MAEpC,CACEgE,UAAwC,YAA7BhE,EAAaC,aAA4B,KAG1D,CAAE,MAAO7V,GACPG,QAAQC,IAAI,6CAA8CJ,EAC5D,GACA,KACF6Z,gBAAmBC,IAIjB,CACA,CAjPF7Z,iBAAAA,GACE,IACE9F,EAAAA,GAAqBiD,KAAKS,MAAMwC,YAAYV,aAAakU,YACzD,MAAM1c,EAAsB,IAAKiG,KAAKV,MAAMvF,qBAC5CiG,KAAK4b,kCACH5b,KAAKS,MAAMwC,YAAYV,aAAaoa,oBAEtC5iB,EAAoBkB,IAAM8B,EAAAA,GACxBiD,KAAKS,MAAMwC,YAAYV,aAAa0U,cACpCC,EAAAA,EAAejc,IACfkc,EAAAA,IAEF,IAAImE,EAAS,IAAI5P,KACjB4P,EAAOsB,SAAS,GAAI,GAAI,IACxB,IAAIvB,EAAW,IAAI3P,KACnB2P,EAASuB,SAAS,EAAG,EAAG,GACxB5c,KAAKC,SAAS,CAAEob,SAAUA,EAAUC,OAAQA,IAC5CA,EAASA,EAAOuB,cAChBxB,EAAWA,EAASwB,cACpB7c,KAAKC,SAAS,CACZlG,sBACAG,oBACE8F,KAAKS,MAAMwC,YAAYV,aAAaoa,qBAExC3c,KAAK4b,kCACH5b,KAAKS,MAAMwC,YAAYV,aAAaoa,mBAExC,CAAE,MAAO/Z,GACPG,QAAQC,IACN,yEACAJ,EAEJ,CAEEuL,OAAOzI,iBAAiB,gBAAgB,IAAM3I,EAAAA,GAA8BiD,KAAKwb,cAAgB,cACrG,CAwBA9F,WAAAA,CAAY3V,GACV,IAuBE,OAtBAA,EAAK+c,MAAMzV,SAAS0V,IAE0C,OAA1DA,EAAEC,qDACwD,KAA1DD,EAAEC,sDAEFD,EAAEC,oDACAD,EAAEC,oDAAoD/D,kBAEA,OAAxD8D,EAAEE,mDACsD,KAAxDF,EAAEE,oDAEFF,EAAEE,kDACAF,EAAEE,kDAAkDhE,kBAEb,OAAzC8D,EAAEG,oCACuC,KAAzCH,EAAEG,qCAEFH,EAAEG,mCACAH,EAAEG,mCAAmCjE,iBAAgB,IAG3DjZ,KAAKC,SAAS,CAAEF,SACTA,CACT,CAAE,MAAO6C,GACPG,QAAQC,IACN,2EACAJ,EAEJ,CACF,CACAgZ,iCAAAA,CAAkC/e,GAChC,IAAIwe,EAAW,IAAI3P,KAAK1L,KAAKV,MAAM+b,UAC/BC,EAAS,IAAI5P,KAAK1L,KAAKV,MAAMgc,QACjCD,EAASuB,SAAS,EAAG,EAAG,GACxBtB,EAAOsB,SAAS,GAAI,GAAI,IACxB,IAAIvE,EAAM,CACRrB,gBAAiBna,EACjBsgB,WAAY9B,EACZ+B,SAAU9B,QAEQlf,IAAhBS,GAA6C,KAAhBA,GAC/BiF,IACEC,EAAAA,IACAhF,EAAAA,GACEsb,EACArY,KAAKS,MAAMwB,aAAaC,YAGzBC,MAAMC,IACL,IAAIC,EAASD,EAASrC,MACG,IAArBsC,EAAOC,UACTtC,KAAKC,SAAS,CACZF,KAAMC,KAAK0V,YAAYrT,EAAOE,cAC9B6R,iBAAiB,KAGnBpU,KAAKC,SAAS,CAAEF,KAAM,GAAIqU,iBAAiB,IAC3CrR,QAAQC,IACN,8CACAX,EAAOK,WAEX,IAEDC,OAAOC,IACN5C,KAAKC,SAAS,CAAEF,KAAM,GAAIqU,iBAAiB,IAC3CrR,QAAQC,IACN,uDACAJ,EACD,GAGT,CA+GAS,MAAAA,GACE,OACElI,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACwD,EAAAA,EAAsB,CACrBlF,oBAAqBiG,KAAKV,MAAMvF,oBAChCC,eAAgBgG,KAAKS,MAAM4c,WAC3BpjB,aAAc+F,KAAKS,MAAMwC,YAAYV,aAAa+a,gBAClDpjB,oBAAqB8F,KAAKV,MAAMpF,oBAChCC,oBAAqB6F,KAAK2b,iCAC1BthB,MAAO2F,KAAKkc,UACZ1hB,sBAAuBwF,KAAKS,MAAMjG,sBAClCE,eAAe,MAGlBsF,KAAKV,MAAM6b,WACV1f,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACwY,EAAAA,QAA0C,CACzCzM,YAAaxH,KAAKV,MAAMkI,YAExBtN,oBAAqB8F,KAAKV,MAAMpF,oBAChCsgB,OAAQxa,KAAKua,WACbvB,QAAShZ,KAAKmc,WACd1c,iBAAkBO,KAAKV,MAAMG,iBAC7B8d,aAAcvd,KAAKS,MAAM4c,WAAWte,WALhC,uCAQNiB,KAAKV,MAAM8U,iBACbjZ,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAAC+hB,EAAAA,EAAoB,CACnBC,UAAW,CAAE1B,KAAM/b,KAAKV,MAAM+b,SAAUS,GAAI9b,KAAKV,MAAMgc,QACvDC,UAAWvb,KAAKV,MAAMic,UACtBM,qBAAsB7b,KAAK6b,qBAC3BG,kBAAmBhc,KAAKgc,kBACxBC,iBAAkBjc,KAAKic,iBACvByB,WAAW,0BAGd1d,KAAKV,MAAMS,KAAK+c,OACjBrhB,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACqf,EAA0C,CACzCC,UAAW/a,KAAKV,MAAMS,KAAK+c,MAC3B5O,cAAelO,KAAKV,MAAMS,KAAK4d,OAC/BjZ,SACE1E,KAAKS,MAAMwC,YAAYV,aAAaqb,cACjCC,sBAELtO,gBAAgB,EAChBvE,eAAe,iCACfd,sBAAsB,EAEtBqB,gBACEvL,KAAKS,MAAMwC,YAAYV,aAAaqb,cACjCE,oBAEL1Y,mBAAmB,EACnBsK,wBAAwB,EACxBsL,kBAAmBhb,KAAKyc,gBACxBhX,WAAYzF,KAAK+d,eACjBxV,gBAAiBvI,KAAKwb,mBAG5B/f,EAAAA,EAAAA,KAACif,EAAAA,EAAW,CAAChC,QAAQ,gBAIrBjd,EAAAA,EAAAA,KAACif,EAAAA,EAAW,CAAChC,QAAQ,aAEvBjd,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACuiB,EAAAA,eAAc,CACbC,iBAAiB,EACjBC,cAAc,EACdC,aAAa,EACbC,aAAa,EACbxgB,SAAS,eACTygB,eAAe,gCAKzB,EAGF,MAOA,GAAeva,EAAAA,EAAAA,KAPUxE,IAChB,CACL2D,YAAa3D,EAAMyE,eAAed,YAClChB,aAAc3C,EAAMyE,eAAeC,aAIvC,CAAwCkX,E,8FC/VjC,SAASd,EAAetgB,GAAgD,IAA/C,WAAEwkB,EAAU,cAAEjE,EAAa,cAAEkE,GAAezkB,EAC1E,OACE2B,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAJ,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,4BAA2BI,UACxCC,EAAAA,EAAAA,KAAA,QAAMJ,MAAO,CAAEmjB,OAAQ,QAAUpjB,UAAU,cAAaI,SACtC,KAAf8iB,QAAoCliB,IAAfkiB,EAClBziB,EAAEwe,GACFiE,MAGQ,KAAfA,QACcliB,IAAfkiB,GACAC,EAAcrjB,OAAS,GACrBO,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BC,EAAAA,EAAAA,KAACkC,EAAAA,MAAK,CACJE,SACE1C,EAAAA,EAAAA,MAAA,OAAAK,SAAA,CACGK,EAAE0iB,EAAc,GAAG9f,WAAa,IAAI,IACpC,IAAM8f,EAAc,GAAG7f,YACxBjD,EAAAA,EAAAA,KAACqC,EAAAA,KAAI,CACHzC,MAAO,CAAEsD,WAAY,QACrBZ,KAAK,SACLC,KAAK,aACLb,KAAK,aAIXS,SAAS,cACTpC,UAEAC,EAAAA,EAAAA,KAACgjB,EAAAA,KAAI,CAACrjB,UAAU,qBAAoBI,SACjC+iB,EAAcviB,KAAKwB,IAClBrC,EAAAA,EAAAA,MAACsjB,EAAAA,KAAKrhB,QAAO,CAEXhC,UAAU,gCAA+BI,SAAA,CAExCK,EAAE2B,EAAQiB,WAAa,IAAI,IAAE,IAAMjB,EAAQkB,aAHxC,6BAUd,SAOd,CA3DA0b,EAAgBvb,aAAe,CAC7Byf,WAAY,GACZjE,cAAe,GACfkE,cAAe,IA0DjB,S,6FCjEO,SAASjE,EAAoBxgB,GAKhC,IALiC,WACnCygB,EAAU,WACV9E,EAAU,YACVf,EAAW,YACXL,GACDva,EACC,OACE2B,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBI,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCC,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLlC,UAAU,aACVe,QAASoe,EACT/c,QAAS3B,EAAE,aAGfJ,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCL,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEoC,MAAO,SAAUjC,SAAA,EAC7BC,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLE,QAAS3B,EAAE,uBACXT,UAAU,eACVe,QAASuY,KAEXjZ,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CACLE,QAAS3B,EAAE,QACXe,UAAWyX,EACXlY,QAASsZ,aAWzB,CAvCA6E,EAAqBzb,aAAe,CAAEwV,aAAa,E,yGCL5C,SAASmJ,EAAoB1jB,GAOhC,IAPiC,qBACnC+hB,EAAoB,kBACpBG,EAAiB,iBACjBC,EAAgB,UAChBV,EAAS,UACTkC,EAAS,WACTC,GACD5jB,EAGC,OACE2B,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SAChBK,IACAV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBI,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BC,EAAAA,EAAAA,KAACuX,EAAAA,WAAU,CACTzV,KAAK,YACLmhB,kBAAkB,EAClB9b,MAAO/G,EAAE0f,GACTrI,eAAeC,EAAAA,EAAAA,MAEfwL,WAAYlB,EACZmB,aAAc/C,EACdgD,cAAe7C,EACfnY,cAAc,OAGlBpI,EAAAA,EAAAA,KAAA,OAAKL,UAAU,aAAYI,UACzBC,EAAAA,EAAAA,KAAC6B,EAAAA,OAAM,CAACE,QAAS3B,EAAE6hB,GAAavhB,QAAS8f,UAMrD,C,mHChCO,SAASlI,EAAgBja,GAI5B,IAJ6B,sBAC7B2X,EAAqB,mBACrBE,EAAkB,0BAClBD,GACH5X,EACG,MAAMglB,EAA4BlL,IAC9B,GAA+B,eAA3BA,EAAUmC,aAEV,OADAgJ,EAA6BnL,EAAU,IAAIlI,MACpC,IAAIA,KAEX,IAAIsT,EAAQpL,EAAUmC,aAAazK,MAAM,KACzC,OAAO,IAAII,KAAKsT,EAAM,GAAGA,EAAM,GAAG,EAAEA,EAAM,GAC9C,EAEED,EAA+BA,CAACnL,EAAWjX,KAC7C,IAAIsiB,EAAU,IAAIvT,KAAK/O,GACvBA,EAAQsiB,EAAQC,cAAgB,KAAO,KAAOD,EAAQE,WAAa,IAAI9J,OAAO,GAAK,KAAO,IAAM4J,EAAQG,WAAW/J,OAAO,GAC1H1D,EAAmBiC,EAAUjX,EAAM,EAEvC,OACIlB,EAAAA,EAAAA,KAACG,EAAAA,oBAAmB,CAAAJ,SACdK,IACEJ,EAAAA,EAAAA,KAAA,OAAKL,UAAU,MAAKI,UAChBC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kCAAiCI,UAC5CC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,MAAKI,SAEZiW,EAAsBzV,KAAK4X,GACvBA,EAAUnI,SAASjJ,gBAAkB4S,EAAAA,GAAmBiK,OAAO7c,gBAAyC,IAAxBoR,EAAU0L,WACtF7jB,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACrCC,EAAAA,EAAAA,KAAC+H,EAAAA,MAAK,CACFC,OAAK,EACLG,MAAO/H,EAAE+X,EAAU2L,aACnB5iB,MAAkC,OAA3BiX,EAAUmC,aAAwB,GAAKnC,EAAUmC,aACxDpS,WAAqC,IAA1BiQ,EAAU4L,YAAuB,WAAa,KACzD5iB,UAAmC,IAAzBgX,EAAU6L,WACpBziB,SAAWL,GAAUgV,EAAmBiC,EAAWjX,GACnDiG,MAAO/G,EAAE6V,EAA0BkC,EAAUoC,OAC7CnS,cAAc,MAEZ+P,EAAUnI,SAASjJ,gBAAkB4S,EAAAA,GAAmBsK,IAAIld,eAAiBoR,EAAUnI,SAASjJ,gBAAkB4S,EAAAA,GAAmBuK,KAAKnd,gBAA0C,IAAxBoR,EAAU0L,UAezK1L,EAAUnI,SAASjJ,gBAAkB4S,EAAAA,GAAmBwK,MAAMpd,eAAiBoR,EAAUnI,SAASjJ,gBAAkB4S,EAAAA,GAAmByK,OAAOrd,gBAA0C,IAAxBoR,EAAU0L,UAgBzK1L,EAAUnI,SAASjJ,gBAAkB4S,EAAAA,GAAmB0K,KAAKtd,gBAAyC,IAAxBoR,EAAU0L,WACpF7jB,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACrCC,EAAAA,EAAAA,KAACskB,EAAAA,SAAQ,CAAC3kB,UAAU,sCAChBwI,MAAO/H,EAAE+X,EAAU2L,aACnBS,QAAoC,OAA3BpM,EAAUmC,aAAwB,GAAyD,SAApDnC,EAAUmC,aAAalU,WAAWW,cAClF5F,UAAmC,IAAzBgX,EAAU6L,WACpBziB,SAAWL,GAAUgV,EAAmBiC,EAAWjX,OAIzDiX,EAAUnI,SAASjJ,gBAAkB4S,EAAAA,GAAmB6K,SAASzd,gBAAyC,IAAxBoR,EAAU0L,WAE1F7jB,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACrCC,EAAAA,EAAAA,KAACuX,EAAAA,WAAU,CACPvP,OAAK,EACL9G,MAAmC,OAA3BiX,EAAUmC,cAAoD,KAA3BnC,EAAUmC,aAAuB,GACtE+I,EAAyBlL,GAE/BhQ,MAAO/H,EAAE+X,EAAU2L,aACnBrM,eAAeC,EAAAA,EAAAA,MACf+M,iBAAiB,OACjBvc,WAAqC,IAA1BiQ,EAAU4L,YAAuB,WAAa,KACzD5iB,UAAmC,IAAzBgX,EAAU6L,WACpBziB,SAAWL,GACPoiB,EAA6BnL,EAAWjX,GAE5CiiB,aAAejiB,IACXoiB,EAA6BnL,EAAWjX,EAAM,EAElDiG,MAAO/G,EAAE6V,EAA0BkC,EAAUoC,OAC7CnS,cAAc,MAEb,MA/CjBpI,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACrCC,EAAAA,EAAAA,KAAC+H,EAAAA,MAAK,CACFC,OAAK,EACLG,MAAO/H,EAAE+X,EAAU2L,aACnB5iB,MAEgC,OAA3BiX,EAAUmC,cAAoD,KAA3BnC,EAAUmC,aAAuB,GAAMnC,EAAUmC,aAAckD,iBAEvGtV,WAAqC,IAA1BiQ,EAAU4L,YAAuB,WAAa,KACzD5iB,UAAmC,IAAzBgX,EAAU6L,WACpBziB,SAAWL,GAAUgV,EAAmBiC,EAAWjX,GACnDiG,MAAO/G,EAAE6V,EAA0BkC,EAAUoC,OAC7CnS,cAAc,OA3B1BpI,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACrCC,EAAAA,EAAAA,KAAC+H,EAAAA,MAAK,CACFC,OAAK,EACLG,MAAO/H,EAAE+X,EAAU2L,aACnB5iB,MAAkC,OAA3BiX,EAAUmC,aAAwB,GAAKnC,EAAUmC,aAExDpS,WAAqC,IAA1BiQ,EAAU4L,YAAuB,WAAa,KACzD5iB,UAAmC,IAAzBgX,EAAU6L,WACpBziB,SAAWL,GAAUgV,EAAmBiC,EAAWjX,GACnDiG,MAAO/G,EAAE6V,EAA0BkC,EAAUoC,OAC7CnS,cAAc,eA6DlE,C,gkCCtHO,MAAMsc,EAAwB,SACxBC,EAAyB,iBACzBC,EAA6B,cAC7BC,EAA6B,cAC7BC,EAAyB,UACzBC,EAA6B,qBAC7BC,EAA0B,WAC1BC,EAA0B,WAC1BC,EAA6B,cAC7BC,EAAiC,kBACjCC,EAAsB,OACtBC,EAAwB,gBACxBC,EAAmC,4BACnCC,EAA0B,WAC1BC,EAAyB,UACzBC,EAAgC,iBAChCC,EAAgC,iBAChCC,EAAqB,MACrBC,EAA4B,aAC5BC,EAA4B,aAC5BC,EAAmC,oBACnCC,EAAuB,QACvBC,EAA0B,WAC1BC,EAAqC,sBACrCC,EAAgD,iCAChDC,EAAiC,kBACjCC,EAA4C,6BAC5CC,EAAiC,kBACjCC,EAAoC,qBACpCC,EAAgC,iBAChCC,EAAoC,kCACpCC,EAA2B,YAC3BC,EAA4B,aAC5BC,EAAqB,MACrBC,EAA6B,kBAE7BC,EAAgC,6BAEhCC,EAA0C,yBAC1CC,EAA0C,yBAC1CC,EAA2C,+BAI3CC,EAAkC,mBAClCC,EAAkC,mBAClCC,EAA0C,2BAC1CC,EAAmC,oBACnCC,EAA6C,8BAC7CC,EAA+C,+BAC/CC,EAAuC,+BACvCC,EAAsC,uBACtCC,EAAsC,uBACtCC,EAA4C,6BAC5CC,EAA+B,gBAC/BC,EAA8B,8BAC9BnK,GAA6B,6BAC7BoK,GAAqC,yBACrCC,GAA8C,+BAC9CC,GAAwC,yBAExCC,GAAmC,iCACnCC,GAAoC,2BACpCC,GAAoC,2BACpCC,GAA4B,aAG5BC,GAA0C,mBAC1CC,GAA0C,mBAC1CC,GAA2C,yBAC3CC,GAA0B,0BAC1BC,GAA2B,2BAC3BC,GAAyB,UACzBC,GAAsC,wBAEtCC,GAAuB,QACvBC,GAA2B,YAC3BC,GAA0B,WAC1BC,GAA8B,gBAC9BC,GAAmC,mCACnCC,GAAyB,wBACzBC,GAA6B,cAC7BC,GAAqB,MAErBC,GAAuB,sBACvBC,GAAyB,wBACzBC,GAAgC,iBAChCC,GAA4B,aAC5BC,GAAwB,kBACxBC,GAAuB,uBACvBC,GAAsB,sBAEtBC,GAAyB,yBACzBC,GAAwB,wBAExBC,GAAkC,mBAClCC,GAAsC,uBACtCC,GAA4C,6BAC5CC,GAA2C,4BAC3CC,GAA+B,gBAE/BC,GAAuC,wBAGvCC,GAAiD,kCACjDC,GAA8C,+BAC9CC,GAAiD,kCACjDC,GAAwD,yCACxDC,GAAkD,mCAClDC,GAAiD,kCACjDC,GAAgD,iCAChDC,GAA+C,gCAC/CC,GAAgD,iCAChDC,GAA6C,8BAC7CC,GAAgD,iCAChDC,GAAuD,wCACvDC,GAAiD,kCACjDC,GAAgD,iCAChDC,GAA+C,gCAC/CC,GAA8C,+BAE9CC,GAA2B,uBAE3BC,GAA6B,cAC7BC,GAA+B,gBAC/BC,GAA6B,cAI7BC,GAA+B,e,u1CCjIrC,MAAM7P,EAAiB,CAC5B8P,KAAM,OACN/rB,IAAK,MACLgsB,OAAQ,SACRC,OAAQ,UAEGC,EAAmB,iBACnBC,EAAW,SACXC,EAAa,WACbC,EAAY,UACZC,EAAmB,iBACnBC,EAAgB,cAChBC,EAAe,aACfC,EAAY,UACZC,EAAQ,wBACRC,EAAQ,oBACRC,EAAmB,qBACnBC,EAAW,SACXC,EAAU,QACVC,EAAoB,kBAEpBC,EAAa,WACbC,EAAiB,2BACjBC,EAAmB,qBACnBC,EAAgC,8BAChCC,EAAkB,oBAClBC,EAAa,WACbC,EAAoB,kBACpBC,EAAiB,eACjBC,EAAgB,cAChBC,EAAc,YACdC,EAAc,YAEdC,EAAsB,oBACtBC,EAAiB,eACjBC,EAAiB,eACjBC,EAAmC,iCACnCC,EAAkC,gCAClCC,EAAqB,mBACrBC,EAA2B,yBAE3BC,EAAqB,mBACrBC,EAAiB,eACjBC,EAAiB,eACjBC,EAAoB,kBACpBC,EAA6B,2BAE7BC,EAAqB,MACrBrS,EAA+B,6BAC/BsS,EAAgC,8BAChCC,EAAqB,mBACrBC,EAAoB,kBAEpBC,EAAgC,8BAChCC,EAA+B,6BAE/BC,EAAe,aAIfC,EAAkB,gBAClBC,EAAqB,sBAErBC,EAAuB,QACvBC,EAAgB,cAChBC,EAAa,iBACbC,GAAW,eACXC,GAAgB,cAChBC,GAAa,WACbC,GAAuB,qBACvBC,GAAa,WACbC,GAAoB,kBACpBC,GAAc,YACdC,GAAS,OACTC,GAAe,aACfC,GAAiB,eACjBC,GAA+B,6BAC/BC,GAAe,aACfC,GAAa,WACbC,GAAsB,oBAEtBC,GAAmB,iBACnBC,GAAmB,iBACnBC,GAA6B,2BAC7BC,GAAiC,+BACjCC,GAAwB,sBACxBC,GAAc,YACdC,GAAiB,eACjBC,GAAe,aACfC,GAAsB,oBACtBC,GAA+B,6BAC/BC,GAAmB,iBACnBC,GAAmB,iBACnBC,GAA+B,6BAC/BC,GAAgC,8BAEhCC,GAAuB,qBACvBC,GAAkB,gBAClBC,GAAa,WACbC,GAAa,WACbC,GAAa,WACbC,GAAa,WACbC,GAAkB,gBAClBC,GAAiB,eACjBC,GAAuB,qBACvBC,GAAY,UACZC,GAAwB,2BACxBC,GAAmB,iBAEnBC,GAAa,WACbC,GAAqB,mBACrBC,GAAa,WACbC,GAA2B,yBAG3BC,GAAgB,cAChBC,GAAS,cACTC,GAAiC,+BAEjCC,GAAwB,sBACxBC,GAAyB,mBAEzBC,GAA0B,wBAC1BC,GAAsB,oBACtBC,GAA4B,0BAC5BC,GAAuB,qBAKvBC,GAAgC,8BAGhCC,GAAsB,oBACtBC,GAA8B,4BAC9BC,GAAyB,uBACzBC,GAAiC,+BACjCC,GAAc,YACdC,GAAgB,cAChBC,GAAyB,uBACzBC,GAAsB,oBACtBC,GAA0B,wBAC1BC,GACX,kCACWC,GAAiB,gBACjBC,GAA0B,wBAC1BC,GAAiB,eACjBC,GAAmB,iBACnBC,GAAmB,iBACnBC,GAAqB,mBAIrBC,GAAsB,oBACtBC,GAAyB,0BAEzBC,GAAwB,sBACxBC,GAA2B,4BAE3BC,GAAsB,oBACtBC,GAAyB,0BAEzBC,GAA0B,wBAC1BC,GAA6B,8BAC7BC,GAAa,WACbC,GAAsB,oBAEtBC,GAAmB,iBAEnBC,GAAiB,eACjBC,GAAgB,cAChBC,GAAkB,gBAElBC,GAAgB,cAChBC,GAAkB,gBAKlBC,GAAiC,8B,0HChLvC,SAASC,EAAqBC,EAAYC,GAC/C,GAAI1Z,MAAMC,QAAQwZ,GAAa,CAIA,IAHTA,EAAW3oB,QAC5B6oB,GAAWA,EAAO9lB,OAAS6lB,IAEZ30B,QAChB00B,EAAWG,QAAQ,CACjBpzB,MAAO,KACPqN,KAAM6lB,GAEZ,CACA,OAAOD,CACT,CAEO,SAASzc,IACd,IAAI6c,EAAW7hB,OAAO8hB,UAAUC,cAAgB/hB,OAAO8hB,UAAUD,SAMjE,OALAG,IAAAA,OAAcH,GACGG,IAAAA,aAEOC,eAAe,IAGzC,CAGO,SAASC,EAAgCtwB,GAC9C,OACE5E,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EAAKC,EAAAA,EAAAA,KAAA,QAAAD,SAAOuE,KAAYtE,EAAAA,EAAAA,KAAA,OAAKiT,MAAM,wDAEvC,C","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Common/WijmoGrid.jsx","Components/Composite/Common/WijmoGridComposite.jsx","Components/UIBase/Details/UnAccountedTransactionTankDetails.jsx","Components/Composite/Details/UnAccountedTransactionTankDetailsComposite.jsx","Components/Composite/Summary/UnAccountedTransactionTankSummaryComposite.jsx","Components/Composite/Entity/UnAccountedTransactionTankComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Common/TMTransactionFilters.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/FunctionGroups.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as wjCore from \"@grapecity/wijmo\";\r\nimport * as wjGrid from \"@grapecity/wijmo.grid\";\r\nimport {\r\n  FlexGrid,\r\n  FlexGridColumn,\r\n  FlexGridCellTemplate,\r\n} from \"@grapecity/wijmo.react.grid\";\r\nimport { FlexGridFilter } from \"@grapecity/wijmo.react.grid.filter\";\r\nimport { Operator } from \"@grapecity/wijmo.grid.filter\";\r\nimport { FlexGridSearch } from \"@grapecity/wijmo.react.grid.search\";\r\nimport { CollectionView } from \"@grapecity/wijmo\";\r\nimport { CollectionViewNavigator, ListBox } from \"@grapecity/wijmo.react.input\";\r\nimport { Selector } from \"@grapecity/wijmo.grid.selector\";\r\nimport { HeadersVisibility } from \"@grapecity/wijmo.grid\";\r\nimport { showPopup, hidePopup, PopupPosition } from \"@grapecity/wijmo\";\r\nimport * as wjcGridXlsx from \"@grapecity/wijmo.grid.xlsx\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport { GroupPanel } from \"@grapecity/wijmo.react.grid.grouppanel\";\r\nimport { Button, Card, Popup } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as loadash from \"lodash\";\r\nimport \"@grapecity/wijmo.touch\";\r\n\r\nconst WijmoGrid = (props) => {\r\n  const [flex, setFlex] = useState(null);\r\n  const [translator] = useTranslation();\r\n  const _getData = (pageLength) => {\r\n    return new CollectionView(props.sourceData, {\r\n      pageSize: pageLength,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState(_getData(props.rowsPerPage));\r\n  const theGrid = React.createRef();\r\n  const theSearch = React.createRef();\r\n  const gridFilter = React.createRef();\r\n  const pagingComponent = React.createRef();\r\n  const colPicker = React.useRef();\r\n\r\n  // to keep track of selected rows\r\n  const selectedRows = React.useRef(props.selectionRequired ? [] : null);\r\n\r\n  // to initialize grid checkbox selection\r\n  let selector = null;\r\n\r\n  //Initialize grid\r\n  const gridInitialized = (grid) => {\r\n    try {\r\n      // localize grid filter\r\n      customizeFilterConditions();\r\n\r\n      if (props.onRowClick) {\r\n        // add row click event handler\r\n        grid.addEventListener(grid.hostElement, \"click\", (e) => {\r\n          let ht = grid.hitTest(e);\r\n          // condition to check if cell is not a grouped cell and a data cell\r\n          if (\r\n            ht.target.closest(\".wj-cell\") &&\r\n            ![...ht.target.closest(\".wj-cell\").classList].includes(\r\n              \"wj-group\"\r\n            ) &&\r\n            ht.cellType === wjGrid.CellType.Cell\r\n          ) {\r\n            // fetch row data\r\n            const rowData = grid.rows[ht.row].dataItem;\r\n            props.onRowClick(rowData);\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      grid.select(-1, -1);\r\n\r\n      setFlex(grid);\r\n      if (props.selectionRequired) {\r\n        // enable checkbox selection\r\n        selector = new Selector(grid, {\r\n          itemChecked: (s, e) => {\r\n            // if only single checkbox selection is required\r\n            if (props.singleSelection) {\r\n              grid.rows\r\n                .filter((row) => {\r\n                  return (\r\n                    row.isSelected &&\r\n                    selectedRows.current.filter((item) =>\r\n                      loadash.isEqual(item, row.dataItem)\r\n                    ).length === 1\r\n                  );\r\n                })\r\n                .forEach((row) => {\r\n                  row.isSelected = false;\r\n                });\r\n            }\r\n\r\n            // pass row data as parameter to checkbox selection handler\r\n            props.onSelectionHandle(\r\n              grid.rows\r\n                .filter((r) => r.isSelected)\r\n                .map((selectedRow) => selectedRow.dataItem)\r\n            );\r\n          },\r\n          // if only single checkbox selection is required\r\n          showCheckAll: !props.singleSelection,\r\n        });\r\n\r\n        let theGrid = selector.column.grid;\r\n        selector.column = theGrid.rowHeaders.columns[0];\r\n        theGrid.headersVisibility = HeadersVisibility.All;\r\n        theGrid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in gridInitialized: \" + error);\r\n    }\r\n  };\r\n\r\n  //Update grid when data changes\r\n  useEffect(() => {\r\n    try {\r\n      if (theGrid != null) {\r\n        //Connect search to the grid\r\n        let grid = theGrid.current.control;\r\n        let search = theSearch.current.control;\r\n        search.grid = grid;\r\n      }\r\n\r\n      setData(_getData(props.rowsPerPage));\r\n    } catch (error) {\r\n      console.log(\"Error in grid update:\", error);\r\n    }\r\n  }, [props.sourceData]);\r\n\r\n  // Pre-select grid rows based on selectedItems props\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && props.selectionRequired) {\r\n        // clear the selectedRows array\r\n        selectedRows.current.length = 0;\r\n        // add selectedItems array items to selectedRows\r\n        selectedRows.current.push(...props.selectedItems);\r\n\r\n        flex.rows.forEach((row) => {\r\n          if (\r\n            props.selectedItems.filter((item) =>\r\n              loadash.isEqual(item, row.dataItem)\r\n            ).length === 1\r\n          ) {\r\n            // checks the row checkbox\r\n            row.isSelected = true;\r\n          } else {\r\n            // unchecks the row checkbox\r\n            row.isSelected = false;\r\n          }\r\n        });\r\n\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in pre-selecting rows:\", error);\r\n    }\r\n  }, [props.selectedItems]);\r\n\r\n  //Load the state of grid\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(props.parentComponent + \"GridState\") &&\r\n        localStorage.getItem(props.parentComponent + \"GridState\") !== \"null\" &&\r\n        flex\r\n      ) {\r\n        // restore grid settings\r\n        let gridState = JSON.parse(\r\n          localStorage.getItem(props.parentComponent + \"GridState\")\r\n        );\r\n        let newFlex = flex;\r\n\r\n        // restore column picker settings\r\n        newFlex.columns.forEach((col) => {\r\n          let matchedCol = gridState.columns.filter(\r\n            (colSetting) => colSetting.binding === col.binding\r\n          );\r\n          col.visible =\r\n            matchedCol.length > 0 ? matchedCol[0].visible : col.visible;\r\n        });\r\n\r\n        // restore filter settings\r\n        gridFilter.current.control.filterDefinition =\r\n          gridState.filterDefinition;\r\n\r\n        // restore sort settings\r\n        newFlex.collectionView.deferUpdate(() => {\r\n          newFlex.collectionView.sortDescriptions.clear();\r\n          for (let i = 0; i < gridState.sortDescriptions.length; i++) {\r\n            let sortDesc = gridState.sortDescriptions[i];\r\n            newFlex.collectionView.sortDescriptions.push(\r\n              new wjCore.SortDescription(sortDesc.property, sortDesc.ascending)\r\n            );\r\n          }\r\n        });\r\n\r\n        // restore grouping settings\r\n        for (let i = 0; i < gridState.groupDescriptions.length; i++) {\r\n          newFlex.collectionView.groupDescriptions.push(\r\n            new wjCore.PropertyGroupDescription(gridState.groupDescriptions[i])\r\n          );\r\n          newFlex.columns.filter(\r\n            (col) => col.binding === gridState.groupDescriptions[i]\r\n          )[0].visible = false;\r\n        }\r\n\r\n        if (\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") &&\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") !== \"null\"\r\n        ) {\r\n          let gridSessionState = JSON.parse(\r\n            sessionStorage.getItem(props.parentComponent + \"GridState\")\r\n          );\r\n          // restore paging settings\r\n          newFlex.collectionView.moveToPage(\r\n            newFlex.collectionView.pageCount - 1 >= gridSessionState.pageIndex\r\n              ? gridSessionState.pageIndex\r\n              : newFlex.collectionView.pageCount - 1\r\n          );\r\n\r\n          // restore search settings\r\n          if (theSearch) {\r\n            theSearch.current.control.text = gridSessionState.searchText;\r\n          }\r\n        }\r\n\r\n        setFlex(newFlex);\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in restoring local storage settings: \", error);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set Column Picker Properties\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && colPicker.current && props.columnPickerRequired) {\r\n        colPicker.current.itemsSource = flex.columns;\r\n        colPicker.current.checkedMemberPath = \"visible\";\r\n        colPicker.current.displayMemberPath = \"header\";\r\n        colPicker.current.lostFocus.addHandler(() => {\r\n          hidePopup(colPicker.current.hostElement);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in initializing column picker properties:\", error);\r\n    }\r\n  }, [colPicker.current]);\r\n\r\n  useEffect(() => {\r\n    // remove column picker pop-up on component unmount\r\n    return () => {\r\n      if (props.columnPickerRequired && colPicker.current) {\r\n        hidePopup(colPicker.current.hostElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // export grid data to excel\r\n  const exportExcel = () => {\r\n    try {\r\n      let gridFlex = flex;\r\n      //to download all rows from all pages\r\n      gridFlex.itemsSource.pageSize = props.sourceData.length;\r\n      setFlex(gridFlex);\r\n      wjcGridXlsx.FlexGridXlsxConverter.saveAsync(\r\n        flex,\r\n        {\r\n          includeColumnHeaders: true,\r\n          includeCellStyles: false,\r\n          formatItem: null,\r\n        },\r\n        props.exportFileName\r\n      );\r\n\r\n      //to restore paging\r\n      gridFlex.itemsSource.pageSize = props.rowsPerPage;\r\n      setFlex(gridFlex);\r\n    } catch (error) {\r\n      console.log(\"Error in export grid to excel:\", error);\r\n    }\r\n  };\r\n\r\n  const terminalPopOver = (terminalCodes) => {\r\n    if (terminalCodes.split(\",\").length > props.terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={terminalCodes.split(\",\").length}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return terminalCodes;\r\n    }\r\n  };\r\n\r\n  const displayValues = (value, columnDetail) => {\r\n    if (columnDetail !== undefined && columnDetail !== null) {\r\n      if (typeof value === \"boolean\" || columnDetail.Name === \"Active\") {\r\n        if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n        else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n      } else if (value === \"\" || value === null || value === undefined) {\r\n        return value;\r\n      } else if (\r\n        (columnDetail.Name === \"TerminalCodes\" ||\r\n          columnDetail.PopOver === \"1\") &&\r\n        value !== null\r\n      ) {\r\n        return terminalPopOver(value);\r\n      }\r\n      // var columnType = columnDetails.find(function (detail) {\r\n      //   if (detail.Name === field) {\r\n      //     return detail;\r\n      //   }\r\n      // });\r\n      else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"DateTime\"\r\n      ) {\r\n        return (\r\n          new Date(value).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(value).toLocaleTimeString()\r\n        );\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Date\"\r\n      ) {\r\n        return new Date(value).toLocaleDateString();\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Time\"\r\n      ) {\r\n        return new Date(value).toLocaleTimeString();\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  //Initialize Column Picker\r\n  const initializedPicker = (picker) => {\r\n    if (props.columnPickerRequired) {\r\n      colPicker.current = picker;\r\n    }\r\n  };\r\n\r\n  // Column Picker Handler\r\n  const colPickerClickHandler = (event) => {\r\n    try {\r\n      let host = colPicker.current.hostElement;\r\n      if (!host.offsetHeight) {\r\n        showPopup(host, event.target, PopupPosition.Below, true, false);\r\n        colPicker.current.focus();\r\n      } else {\r\n        hidePopup(host, true, true);\r\n        flex.focus();\r\n      }\r\n\r\n      colPicker.current.focus();\r\n      event.preventDefault();\r\n    } catch (error) {\r\n      console.log(\"Error in Column Picker click event:\", error);\r\n    }\r\n  };\r\n\r\n  const saveGridState = () => {\r\n    try {\r\n      if (flex && gridFilter.current) {\r\n        // grid column, filter, sort and grouping settings\r\n        let gridState = {\r\n          columns: flex.columns.map((col) => {\r\n            return {\r\n              binding: col.binding,\r\n              visible: col.visible,\r\n            };\r\n          }),\r\n          filterDefinition: gridFilter.current.control.filterDefinition,\r\n          sortDescriptions: flex.collectionView.sortDescriptions.map(\r\n            (sortDesc) => {\r\n              return {\r\n                property: sortDesc.property,\r\n                ascending: sortDesc.ascending,\r\n              };\r\n            }\r\n          ),\r\n          groupDescriptions: flex.collectionView.groupDescriptions.map(\r\n            (group) => {\r\n              if (group.propertyName) {\r\n                return group.propertyName;\r\n              }\r\n\r\n              return null;\r\n            }\r\n          ),\r\n        };\r\n\r\n        // add class to grouped checkbox div element\r\n        if (\r\n          flex.collectionView.groupDescriptions &&\r\n          flex.collectionView.groupDescriptions.length > 0\r\n        ) {\r\n          let groupedCheckboxes = [\r\n            ...document.getElementsByClassName(\"wj-column-selector-group\"),\r\n          ];\r\n          groupedCheckboxes.forEach((chkbx) => {\r\n            chkbx.parentNode.parentNode.classList.add(\"wj-grouped-checkbox\");\r\n          });\r\n        }\r\n\r\n        // grid paging and search settings\r\n        let sessionState = {\r\n          pageIndex: flex.collectionView.pageIndex,\r\n          searchText: theSearch.current.control.text,\r\n        };\r\n\r\n        localStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(gridState)\r\n        );\r\n        sessionStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(sessionState)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in saving grid state\");\r\n    }\r\n  };\r\n\r\n  // customize grid filter text and dropdowns\r\n  const customizeFilterConditions = () => {\r\n    // localize the FlexGrid filter\r\n    let filter = wjCore.culture.FlexGridFilter,\r\n      operator = Operator;\r\n    wjCore.culture.FlexGridFilter.header = translator(\"WijmoGridFilterHeader\");\r\n    wjCore.culture.FlexGridFilter.ascending =\r\n      \"\\u2191 \" + translator(\"WijmoGridFilterAscending\");\r\n    wjCore.culture.FlexGridFilter.descending =\r\n      \"\\u2193 \" + translator(\"WijmoGridFilterDescending\");\r\n    wjCore.culture.FlexGridFilter.apply = translator(\"RoleAdminEdit_Apply\");\r\n    wjCore.culture.FlexGridFilter.clear = translator(\"OrderCreate_btnClear\");\r\n    wjCore.culture.FlexGridFilter.conditions = translator(\r\n      \"WijmoGridFilterCondition\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.values = translator(\"WijmoGridFilterValue\");\r\n    wjCore.culture.FlexGridFilter.search = translator(\r\n      \"LoadingDetailsView_SearchGrid\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.selectAll = translator(\r\n      \"WijmoGridFilterSelectAll\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.and = translator(\"WijmoGridFilterAnd\");\r\n    wjCore.culture.FlexGridFilter.or = translator(\"WijmoGridFilterOr\");\r\n    wjCore.culture.FlexGridFilter.cancel = translator(\"AccessCardInfo_Cancel\");\r\n    // wjCore.culture.FlexGridFilter.null = 'test';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.and = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.asc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dialog = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dsc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.edit = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op2 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.or = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.search = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val2 = '';\r\n\r\n    // localize FlexGrid filter operators\r\n    filter.stringOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterBeginsWith\"), op: operator.BW },\r\n      { name: translator(\"WijmoGridFilterEndsWith\"), op: operator.EW },\r\n      { name: translator(\"WijmoGridFilterContains\"), op: operator.CT },\r\n      { name: translator(\"WijmoGridFilterDoesNotContain\"), op: operator.NC },\r\n    ];\r\n    filter.numberOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterGreaterThan\"), op: operator.GT },\r\n      { name: translator(\"WijmoGridFilterLessThan\"), op: operator.LT },\r\n      {\r\n        name: translator(\"WijmoGridFilterGreaterThanOrEqual\"),\r\n        op: operator.GE,\r\n      },\r\n      { name: translator(\"WijmoGridFilterLessThanOrEqual\"), op: operator.LE },\r\n    ];\r\n    filter.dateOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterDateEarlierThan\"), op: operator.LT },\r\n      { name: translator(\"WijmoGridFilterDateLaterThan\"), op: operator.GT },\r\n    ];\r\n    filter.booleanOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n    ];\r\n  };\r\n\r\n  // set column width based on screen size\r\n  const getWidth = (columnDetails) => {\r\n    try {\r\n      const screenWidth = window.screen.width;\r\n      if (screenWidth < 1024) {\r\n        if (columnDetails.WidthPx && columnDetails.WidthPx !== \"\")\r\n          return parseInt(columnDetails.WidthPx);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in width:\", error);\r\n    }\r\n\r\n    return columnDetails.WidthPercentage.includes(\"*\")\r\n      ? columnDetails.WidthPercentage\r\n      : parseInt(columnDetails.WidthPercentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pl-1\">\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <React.Fragment>\r\n              <div className=\"row pl-0\">\r\n                <div className=\"col-10 col-sm-12 col-md-5 col-lg-6\">\r\n                  <FlexGridSearch\r\n                    class=\"ui single-input\"\r\n                    ref={theSearch}\r\n                    placeholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-10 col-sm-12 col-md-7 col-lg-6\">\r\n                  <div style={{ float: \"right\" }}>\r\n                    {props.columnPickerRequired ? (\r\n                      <Button\r\n                        id=\"colPicker\"\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        onClick={(event) => colPickerClickHandler(event)}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridColumnPicker\")}\r\n                        </div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          <Icon\r\n                            name=\"caret-down\"\r\n                            className=\"btnIcon\"\r\n                            size=\"small\"\r\n                          />\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.exportRequired ? (\r\n                      <Button\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        className=\"mt-3 mt-md-0\"\r\n                        onClick={exportExcel}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridExport\")}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            className=\"icon-Xls\"\r\n                            style={{\r\n                              fontSize: \"17px\",\r\n                              position: \"absolute\",\r\n                              top: \"3px\",\r\n                            }}\r\n                          ></span>\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tableScroll\">\r\n                {props.columnGroupingRequired ? (\r\n                  <GroupPanel\r\n                    className=\"group-panel\"\r\n                    grid={flex}\r\n                    placeholder={t(\"WijmoGridGroupPanelPlaceholder\")}\r\n                  />\r\n                ) : null}\r\n                <ErrorBoundary>\r\n                  <FlexGrid\r\n                    ref={theGrid}\r\n                    autoGenerateColumns={false}\r\n                    alternatingRowStep={0}\r\n                    autoRowHeights={true}\r\n                    headersVisibility=\"Column\"\r\n                    itemsSource={data}\r\n                    selectionMode={wjCore.asEnum(\"None\", wjGrid.SelectionMode)}\r\n                    initialized={gridInitialized}\r\n                    virtualizationThreshold={[0, 10000]}\r\n                    onUpdatedView={saveGridState}\r\n                  >\r\n                    <FlexGridFilter ref={gridFilter} />\r\n                    {props.columns.map((column) => {\r\n                      return (\r\n                        <FlexGridColumn\r\n                          header={t(column.Name)}\r\n                          key={column.Name}\r\n                          binding={column.Name}\r\n                          width={getWidth(column)}\r\n                          minWidth={100}\r\n                          isReadOnly={true}\r\n                          wordWrap={true}\r\n                          align=\"left\"\r\n                        >\r\n                          <FlexGridCellTemplate\r\n                            cellType=\"Cell\"\r\n                            template={(context) => {\r\n                              return (\r\n                                <span\r\n                                  style={\r\n                                    props.conditionalRowStyleCheck == null ||\r\n                                    !props.conditionalRowStyleCheck(\r\n                                      context.item\r\n                                    )\r\n                                      ? null\r\n                                      : { ...props.conditionalRowStyles }\r\n                                  }\r\n                                >\r\n                                  {displayValues(\r\n                                    context.item[column.Name],\r\n                                    column\r\n                                  )}\r\n                                </span>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FlexGridColumn>\r\n                      );\r\n                    })}\r\n                  </FlexGrid>\r\n                </ErrorBoundary>\r\n                {props.columnPickerRequired ? (\r\n                  <div className=\"column-picker-div\">\r\n                    <ListBox\r\n                      className=\"column-picker\"\r\n                      initialized={(picker) => initializedPicker(picker)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"row\">\r\n                <CollectionViewNavigator\r\n                  ref={pagingComponent}\r\n                  className=\"ml-auto mr-auto mt-3\"\r\n                  headerFormat={t(\"WijmoGridPagingTemplate\")}\r\n                  byPage={true}\r\n                  cv={data}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nWijmoGrid.propTypes = {\r\n  sourceData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  exportRequired: PropTypes.bool.isRequired,\r\n  exportFileName: PropTypes.string,\r\n  selectionRequired: PropTypes.bool,\r\n  columnPickerRequired: PropTypes.bool,\r\n  columnGroupingRequired: PropTypes.bool,\r\n  conditionalRowStyleCheck: PropTypes.func,\r\n  conditionalRowStyles: PropTypes.object,\r\n  rowsPerPage: PropTypes.number,\r\n  onSelectionHandle: PropTypes.func,\r\n  parentComponent: PropTypes.string.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  terminalsToShow: PropTypes.number,\r\n  singleSelection: PropTypes.bool,\r\n  selectedItems: PropTypes.array,\r\n};\r\n\r\nWijmoGrid.defaultProps = {\r\n  sourceData: [],\r\n  columns: [],\r\n  exportRequired: true,\r\n  exportFileName: \"Grid.xlsx\",\r\n  selectionRequired: false,\r\n  columnPickerRequired: false,\r\n  columnGroupingRequired: false,\r\n  rowsPerPage: 10,\r\n  terminalsToShow: 2,\r\n  singleSelection: false,\r\n  selectedItems: [],\r\n};\r\n\r\nexport default WijmoGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WijmoGrid from '../../UIBase/Common/WijmoGrid';\r\n\r\nconst WijmoGridComposite = (props) => {\r\n    return (\r\n        <WijmoGrid\r\n            sourceData={props.data}\r\n            columns={props.columns}\r\n            exportRequired={props.exportRequired}\r\n            exportFileName={props.exportFileName}\r\n            columnPickerRequired={props.columnPickerRequired}\r\n            selectionRequired={props.selectionRequired}\r\n            columnGroupingRequired={props.columnGroupingRequired}\r\n            conditionalRowStyleCheck={props.conditionalRowStyleCheck}\r\n            conditionalRowStyles={props.conditionalRowStyles}\r\n            rowsPerPage={props.rowsPerPage}\r\n            onSelectionHandle={props.onSelectionHandle}\r\n            onRowClick={props.onRowClick}\r\n            parentComponent={props.parentComponent}\r\n            terminalsToShow={props.terminalsToShow}\r\n            singleSelection={props.singleSelection}\r\n            selectedItems={props.selectedItems}\r\n        />\r\n    )\r\n}\r\n\r\nWijmoGridComposite.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n    exportRequired: PropTypes.bool.isRequired,\r\n    exportFileName: PropTypes.string,\r\n    selectionRequired: PropTypes.bool,\r\n    columnPickerRequired: PropTypes.bool,\r\n    columnGroupingRequired: PropTypes.bool,\r\n    conditionalRowStyleCheck: PropTypes.func,\r\n    conditionalRowStyles: PropTypes.object,\r\n    rowsPerPage: PropTypes.number,\r\n    onSelectionHandle: PropTypes.func,\r\n    parentComponent: PropTypes.string.isRequired,\r\n    onRowClick: PropTypes.func,\r\n    terminalsToShow: PropTypes.number,\r\n    singleSelection: PropTypes.bool,\r\n    selectedItems: PropTypes.array\r\n}\r\n\r\nexport default WijmoGridComposite;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Input, Select, DatePicker, Accordion } from \"@scuf/common\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nUnAccountedTransactionTankDetails.propTypes = {\r\n  listOptions: PropTypes.shape({\r\n    languageOptions: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    densityUOMOptions: PropTypes.array,\r\n    customerOptions: PropTypes.array,\r\n    quantityUOMOptions: PropTypes.array,\r\n    tankCodeOptions: PropTypes.array,\r\n    transactionTypeOptions: PropTypes.array,\r\n    baseProdcutOptions: PropTypes.array,\r\n    transportationTypeOptions: PropTypes.array,\r\n  }).isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  modAccountedTransaction: PropTypes.object.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCustomerSearchChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  selectedAttributeList: PropTypes.array.isRequired,\r\n  attributeValidationErrors: PropTypes.array.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n};\r\nUnAccountedTransactionTankDetails.defaultProps = {\r\n  listOptions: {\r\n    quantityUOMOptions: [],\r\n    densityUOMOptions: [],\r\n    tankCodeOptions: [],\r\n    customerOptions: [],\r\n    transactionTypeOptions: [],\r\n    baseProdcutOptions: [],\r\n    transportationTypeOptions: [],\r\n  },\r\n};\r\n\r\nexport function UnAccountedTransactionTankDetails({\r\n  modAccountedTransaction,\r\n  listOptions,\r\n  validationErrors,\r\n  onFieldChange,\r\n  onCustomerSearchChange,\r\n  isEnterpriseNode,\r\n  selectedAttributeList,\r\n  attributeValidationErrors,\r\n  handleCellDataEdit,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"Reconciliation_Tank\")}\r\n                indicator=\"required\"\r\n                value={modAccountedTransaction.TankCode}\r\n                options={listOptions.tankCodeOptions}\r\n                onChange={(data) => onFieldChange(\"TankCode\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.TankCode)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"Reconciliation_UnAccountedType\")}\r\n                indicator=\"required\"\r\n                options={listOptions.transactionTypeOptions}\r\n                reserveSpace={false}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"UnAccountedTransactionTypeCode\", data)\r\n                }\r\n                value={modAccountedTransaction.UnAccountedTransactionTypeCode}\r\n                error={t(validationErrors.UnAccountedTransactionTypeCode)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"Vehicle_Transport\")}\r\n                indicator=\"required\"\r\n                options={listOptions.transportationTypeOptions}\r\n                onChange={(data) => onFieldChange(\"TransportationType\", data)}\r\n                value={modAccountedTransaction.TransportationType}\r\n                error={t(validationErrors.TransportationType)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"Reconciliation_QuantityUOM\")}\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"QuantityUOM\", data)}\r\n                search={true}\r\n                options={listOptions.quantityUOMOptions}\r\n                reserveSpace={false}\r\n                value={modAccountedTransaction.QuantityUOM}\r\n                error={t(validationErrors.QuantityUOM)}\r\n\r\n                //error={t(validationErrors.ShipmentQuantityUOM)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                indicator=\"required\"\r\n                label={t(\"GrossQuantity\")}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"UnAccountedGrossQuantity\", data)\r\n                }\r\n                reserveSpace={false}\r\n                value={modAccountedTransaction.UnAccountedGrossQuantity}\r\n                error={t(validationErrors.UnAccountedGrossQuantity)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                indicator=\"required\"\r\n                label={t(\"Reconciliation_NetQuantity\")}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"UnAccountedNetQuantity\", data)\r\n                }\r\n                reserveSpace={false}\r\n                value={modAccountedTransaction.UnAccountedNetQuantity}\r\n                error={t(validationErrors.UnAccountedNetQuantity)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                indicator=\"required\"\r\n                label={t(\"Reconciliation_Density\")}\r\n                onChange={(data) => onFieldChange(\"Density\", data)}\r\n                reserveSpace={false}\r\n                value={modAccountedTransaction.Density}\r\n                error={t(validationErrors.Density)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"Reconciliation_DensityUOM\")}\r\n                indicator=\"required\"\r\n                options={listOptions.densityUOMOptions}\r\n                reserveSpace={false}\r\n                search={true}\r\n                onChange={(data) => onFieldChange(\"DensityUOM\", data)}\r\n                value={modAccountedTransaction.DensityUOM}\r\n                error={t(validationErrors.DensityUOM)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                //value={modRailWagon.LicenseExpiryDate === null ? \"\" : new Date(modRailWagon.LicenseExpiryDate)}\r\n                label={t(\"Reconciliation_StartTime\")}\r\n                type=\"datetime\"\r\n                minuteStep=\"5\"\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"TransactionStartTime\", data)}\r\n                displayFormat={getCurrentDateFormat()}\r\n                reserveSpace={false}\r\n                value={modAccountedTransaction.TransactionStartTime}\r\n                error={t(validationErrors.TransactionStartTime)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                //value={modRailWagon.LicenseExpiryDate === null ? \"\" : new Date(modRailWagon.LicenseExpiryDate)}\r\n                label={t(\"Reconciliation_EndTime\")}\r\n                type=\"datetime\"\r\n                minuteStep=\"5\"\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"TransactionEndTime\", data)}\r\n                displayFormat={getCurrentDateFormat()}\r\n                //error={t(validationErrors.LicenseExpiryDate)}\r\n                reserveSpace={false}\r\n                value={\r\n                  modAccountedTransaction.TransactionEndTime === null\r\n                    ? \"\"\r\n                    : modAccountedTransaction.TransactionEndTime\r\n                }\r\n                error={t(validationErrors.TransactionEndTime)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"Reconciliation_BaseProduct\")}\r\n                indicator=\"required\"\r\n                options={listOptions.baseProdcutOptions}\r\n                reserveSpace={false}\r\n                onChange={(data) => onFieldChange(\"BaseProductCode\", data)}\r\n                value={modAccountedTransaction.BaseProductCode}\r\n                error={t(validationErrors.BaseProductCode)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"Reconciliation_Comments\")}\r\n                onChange={(data) => onFieldChange(\"Comments\", data)}\r\n                reserveSpace={false}\r\n                value={modAccountedTransaction.Comments}\r\n                error={t(validationErrors.Comments)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                options={listOptions.customerOptions}\r\n                label={t(\"ViewMarineShipmentList_Customer\")}\r\n                search={true}\r\n                onChange={(data) => onFieldChange(\"CustomerCode\", data)}\r\n                onSearch={onCustomerSearchChange}\r\n                reserveSpace={false}\r\n                value={modAccountedTransaction.CustomerCode}\r\n                error={t(validationErrors.CustomerCode)}\r\n              />\r\n            </div>\r\n          </div>\r\n          {selectedAttributeList.length > 0\r\n            ? selectedAttributeList.map((attribute) => (\r\n                <ErrorBoundary>\r\n                  <Accordion>\r\n                    <Accordion.Content\r\n                      className=\"attributeAccordian\"\r\n                      title={\r\n                        isEnterpriseNode\r\n                          ? attribute.TerminalCode +\r\n                            \" - \" +\r\n                            t(\"Attributes_Header\")\r\n                          : t(\"Attributes_Header\")\r\n                      }\r\n                    >\r\n                      <AttributeDetails\r\n                        selectedAttributeList={attribute.attributeMetaDataList}\r\n                        handleCellDataEdit={handleCellDataEdit}\r\n                        attributeValidationErrors={handleValidationErrorFilter(\r\n                          attributeValidationErrors,\r\n                          attribute.TerminalCode\r\n                        )}\r\n                      ></AttributeDetails>\r\n                    </Accordion.Content>\r\n                  </Accordion>\r\n                </ErrorBoundary>\r\n              ))\r\n            : null}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { UnAccountedTransactionTankDetails } from \"../../UIBase/Details/UnAccountedTransactionTankDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport { UnAccountedTransactionTankValidationDef } from \"../../../JS/ValidationDef\";\r\nimport {\r\n  functionGroups,\r\n  fnUnAccountedTransactionTank,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport lodash from \"lodash\";\r\nimport { emptyAccountedTransaction } from \"../../../JS/DefaultEntities\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { unAccountedTankTransaction } from \"../../../JS/AttributeEntity\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nclass UnAccountedTransactionTankDetailsComposite extends Component {\r\n  state = {\r\n    AccountedTransaction: lodash.cloneDeep(emptyAccountedTransaction), //{ ...emptyCustomer },\r\n    modAccountedTransaction: lodash.cloneDeep(emptyAccountedTransaction),\r\n    //isDetails:false,\r\n    isReadyToRender: true,\r\n    saveEnabled: false,\r\n    tankCodeOptions: [],\r\n    transactionTypeOptions: [],\r\n    baseProdcutOptions: [],\r\n    quantityUOMOptions: [],\r\n    transportationTypeOptions: [],\r\n    customerOptions: [],\r\n    densityUOMOptions: [],\r\n    customerSearchOptions: [],\r\n    attributeMetaDataList: [],\r\n    selectedAttributeList: [],\r\n    attributeValidationErrors: [],\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      UnAccountedTransactionTankValidationDef\r\n    ),\r\n    showAuthenticationLayout: false,\r\n    tempAccountedTransaction: {},\r\n  };\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      const AccountedTransaction = lodash.cloneDeep(\r\n        this.state.AccountedTransaction\r\n      );\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState(\r\n        {\r\n          modAccountedTransaction: { ...AccountedTransaction },\r\n          validationErrors,\r\n          selectedAttributeList: [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange([]);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnAccountedTransactionTankDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  GetUOMList() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        //console.log(response);\r\n        var result = response.data;\r\n\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let quantityUOMOptions = [];\r\n            let densityUOMOptions = [];\r\n            if (Array.isArray(result.EntityResult.VOLUME)) {\r\n              quantityUOMOptions = Utilities.transferListtoOptions(\r\n                result.EntityResult.VOLUME\r\n              );\r\n            }\r\n            // debugger;\r\n            if (Array.isArray(result.EntityResult.MASS)) {\r\n              let massUOMOptions = Utilities.transferListtoOptions(\r\n                result.EntityResult.MASS\r\n              );\r\n              massUOMOptions.forEach((massUOM) =>\r\n                quantityUOMOptions.push(massUOM)\r\n              );\r\n            }\r\n            if (Array.isArray(result.EntityResult.DENSITY)) {\r\n              densityUOMOptions = Utilities.transferListtoOptions(\r\n                result.EntityResult.DENSITY\r\n              );\r\n            }\r\n            this.setState({ quantityUOMOptions, densityUOMOptions });\r\n\r\n            // this.setState({ quantityUOMOptions, quantityUOMfilteredOptions });\r\n          }\r\n        } else {\r\n          console.log(\r\n            \"UnAccountedTransactionTankDetailsComposite:Error in GetUOMList:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"UnAccountedTransactionTankDetailsComposite:Error while getting GetUOMList:\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n  componentWillReceiveProps = (nextProps) => {\r\n    try {\r\n      if (\r\n        this.state.AccountedTransaction.TankCode !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.setState(\r\n          {\r\n            modAccountedTransaction: emptyAccountedTransaction,\r\n            AccountedTransaction: emptyAccountedTransaction,\r\n            saveEnabled: true,\r\n            selectedAttributeList: [],\r\n          },\r\n          () => {\r\n            if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n              this.terminalSelectionChange([]);\r\n              this.handleResetAttributeValidationError();\r\n            } else {\r\n              this.localNodeAttribute();\r\n              this.handleResetAttributeValidationError();\r\n            }\r\n          }\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnAccountedTransactionTankDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getAttributes();\r\n      this.GetUOMList();\r\n      this.GetTankList();\r\n      this.GetBaseProductsList();\r\n      this.GetUnAccountedTransactionTypeList();\r\n      this.GetCustomerList();\r\n      this.GetTransportationTypeOptions();\r\n      let modAccountedTransaction = lodash.cloneDeep(\r\n        this.state.modAccountedTransaction\r\n      );\r\n      modAccountedTransaction.ShareholderCode = this.props.selectedShareholder;\r\n      this.setState({\r\n        saveEnabled: Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnUnAccountedTransactionTank\r\n        ),\r\n        modAccountedTransaction: modAccountedTransaction,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnAccountedTransactionTankDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  GetCustomerList() {\r\n    let modAccountedTransaction = lodash.cloneDeep(\r\n      this.state.modAccountedTransaction\r\n    );\r\n    axios(\r\n      RestAPIs.GetCustomerDestinations +\r\n        \"?TransportationType=\" +\r\n        modAccountedTransaction.TransportationType +\r\n        \"&ShareholderCode=\" +\r\n        this.props.selectedShareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    ).then((response) => {\r\n      var result = response.data;\r\n      if (result.IsSuccess === true) {\r\n        if (Array.isArray(result.EntityResult)) {\r\n          let shareholderCustomers = result.EntityResult.filter(\r\n            (shareholderCust) =>\r\n              shareholderCust.ShareholderCode === this.props.selectedShareholder\r\n          );\r\n          if (shareholderCustomers.length > 0) {\r\n            let customerDestinationOptions =\r\n              shareholderCustomers[0].CustomerDestinationsList;\r\n            let customerOptions = [];\r\n            if (customerDestinationOptions !== null) {\r\n              customerOptions = Object.keys(customerDestinationOptions);\r\n              customerOptions =\r\n                Utilities.transferListtoOptions(customerOptions);\r\n            }\r\n            this.setState({ customerOptions });\r\n          } else {\r\n            console.log(\r\n              \"UnAccountedTransactionTankDetailsComposite:no customers identified for shareholder\"\r\n            );\r\n          }\r\n        } else {\r\n          console.log(\r\n            \"UnAccountedTransactionTankDetailsComposite:customerdestinations not identified for shareholder\"\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n  GetTransportationTypeOptions() {\r\n    const transportationTypeList = [];\r\n    for (let key in Constants.TransportationType) {\r\n      if (key !== Constants.TransportationType.PIPELINE) {\r\n        transportationTypeList.push(key);\r\n      }\r\n    }\r\n    this.setState({\r\n      transportationTypeOptions: Utilities.transferListtoOptions(\r\n        transportationTypeList\r\n      ),\r\n    });\r\n  }\r\n  GetTankList() {\r\n    axios(\r\n      RestAPIs.GetTanks + \"?ShareholderCode=\" + this.props.selectedShareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        //console.log(response);\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let tankCodeOptions = [];\r\n          if (result.EntityResult !== null) {\r\n            tankCodeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n          }\r\n          this.setState({ tankCodeOptions });\r\n        } else {\r\n          console.log(\r\n            \"UnAccountedTransactionTankDetailsComposite:Error in GetTankList:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"UnAccountedTransactionTankDetailsComposite:Error while getting GetTankList:\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n  GetUnAccountedTransactionTypeList() {\r\n    axios(\r\n      RestAPIs.GetUnAccountedTransactionTypes,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        //console.log(response);\r\n        var result = response.data;\r\n\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            var transactionTypeOptionList = result.EntityResult.Tank;\r\n            let transactionOptions = [];\r\n            transactionTypeOptionList.forEach((TankType) => {\r\n              transactionOptions.push({\r\n                text: TankType,\r\n                value: TankType,\r\n              });\r\n            });\r\n            this.setState({\r\n              transactionTypeOptions: transactionOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\r\n            \"UnAccountedTransactionTankDetailsComposite:Error in GetUnAccountedTransactionTypeList:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"UnAccountedTransactionTankDetailsComposite:Error while getting GetUnAccountedTransactionTypeList:\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n  GetBaseProductsList() {\r\n    axios(\r\n      RestAPIs.GetBaseProducts,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        //console.log(response);\r\n        var result = response.data;\r\n        let baseProdcutOptions = [];\r\n        let TankWhiteOptions = [];\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            Object.keys(result.EntityResult).forEach((prodType) => {\r\n              if (\r\n                result.EntityResult[prodType] !== undefined &&\r\n                Array.isArray(result.EntityResult[prodType])\r\n              ) {\r\n                baseProdcutOptions = baseProdcutOptions.concat(\r\n                  Utilities.transferListtoOptions(result.EntityResult[prodType])\r\n                );\r\n              }\r\n            });\r\n\r\n            // if (Array.isArray(result.EntityResult.ALLPROD)) {\r\n            //   baseProdcutOptions = Utilities.transferListtoOptions(\r\n            //     result.EntityResult.ALLPROD\r\n            //   );\r\n            // }\r\n            // if (Array.isArray(result.EntityResult.WHITE)) {\r\n            //   TankWhiteOptions = Utilities.transferListtoOptions(\r\n            //     result.EntityResult.WHITE\r\n            //   );\r\n            //   TankWhiteOptions.forEach((TankWhite) =>\r\n            //     baseProdcutOptions.push(TankWhite)\r\n            //   );\r\n            // }\r\n          }\r\n          this.setState({ baseProdcutOptions });\r\n        } else {\r\n          console.log(\r\n            \"UnAccountedTransactionTankDetailsComposite:Error in GetBaseProductsList:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n        this.getAdditivesList(baseProdcutOptions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"UnAccountedTransactionTankDetailsComposite:Error while getting GetBaseProductsList:\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n  getAdditivesList(baseProdcutOptions) {\r\n    axios(\r\n      RestAPIs.GetAdditives,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult !== undefined\r\n          ) {\r\n            let additiveDetails = Utilities.transferListtoOptions(\r\n              result.EntityResult.ALLPROD\r\n            );\r\n            additiveDetails.forEach((additive) =>\r\n              baseProdcutOptions.push(additive)\r\n            );\r\n            this.setState({ baseProdcutOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getAdditivesList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Additives List:\", error);\r\n      });\r\n  }\r\n  handleCustomerSearchChange = (CustomerCode) => {\r\n    try {\r\n      let customerSearchOptions = this.state.customerOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(CustomerCode.toLowerCase())\r\n      );\r\n      if (customerSearchOptions.length > Constants.filteredOptionsCount) {\r\n        customerSearchOptions = customerSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        customerSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnAccountedTransactionTankDetailsComposite:Error occured on handleDriverSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateSave(attributeList) {\r\n    const { modAccountedTransaction } = this.state;\r\n    var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    Object.keys(UnAccountedTransactionTankValidationDef).forEach(function (\r\n      key\r\n    ) {\r\n      validationErrors[key] = Utilities.validateField(\r\n        UnAccountedTransactionTankValidationDef[key],\r\n        modAccountedTransaction[key]\r\n      );\r\n    });\r\n    this.setState({ validationErrors });\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n\r\n    var returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    return returnValue;\r\n  }\r\n  createAccountedTransaction(modAccountedTransaction) {\r\n    this.handleAuthenticationClose();\r\n    this.setState({ saveEnabled: false });\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      Entity: modAccountedTransaction,\r\n    };\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"UnAccountedTransactionTank_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"tankCodeOptions\"],\r\n          keyValues: [modAccountedTransaction.TankCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateUnAccountedTankTransaction,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            saveEnabled: false,\r\n            AccountedTransaction: modAccountedTransaction,\r\n          });\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnUnAccountedTransactionTank\r\n            ),\r\n          });\r\n          console.log(\r\n            \"UnAccountedTransactionTankDetailsComposite:Error in createAccountedTransaction:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n        this.props.onSaved(modAccountedTransaction, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnUnAccountedTransactionTank\r\n          ),\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modAccountedTransaction, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modAccountedTransaction = lodash.cloneDeep(\r\n        this.state.modAccountedTransaction\r\n      );\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      modAccountedTransaction[propertyName] = data;\r\n      this.setState({ modAccountedTransaction });\r\n      if (UnAccountedTransactionTankValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          UnAccountedTransactionTankValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnAccountedTransactionTankDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAddTransaction = () => {\r\n    let tempAccountedTransaction = lodash.cloneDeep(this.state.tempAccountedTransaction);\r\n    this.createAccountedTransaction(tempAccountedTransaction);\r\n  };\r\n\r\n\r\n  \r\n  handleSave = () => {\r\n    try {\r\n      let modAccountedTransaction = this.fillDetails();\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.selectedAttributeList\r\n      );\r\n    //  this.setState({ saveEnabled: false });\r\n      if (this.validateSave(attributeList)) {\r\n        modAccountedTransaction = this.convertStringtoDecimal(\r\n          modAccountedTransaction,\r\n          attributeList\r\n        );\r\n\r\n        let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      let tempAccountedTransaction = lodash.cloneDeep(modAccountedTransaction);\r\n      this.setState({ showAuthenticationLayout, tempAccountedTransaction }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.handleAddTransaction();\r\n        }\r\n    });\r\n\r\n       \r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnAccountedTransactionTankDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  fillDetails() {\r\n    try {\r\n      let modAccountedTransaction = lodash.cloneDeep(\r\n        this.state.modAccountedTransaction\r\n      );\r\n      //let attributeList = lodash.cloneDeep(this.state.selectedAttributeList);\r\n\r\n      modAccountedTransaction.ShareholderCode = this.props.selectedShareholder;\r\n      if (\r\n        modAccountedTransaction.Density !== null &&\r\n        modAccountedTransaction.Density !== \"\"\r\n      )\r\n        modAccountedTransaction.Density =\r\n          modAccountedTransaction.Density.toLocaleString();\r\n      if (\r\n        modAccountedTransaction.UnAccountedNetQuantity !== null &&\r\n        modAccountedTransaction.UnAccountedNetQuantity !== \"\"\r\n      )\r\n        modAccountedTransaction.UnAccountedNetQuantity =\r\n          modAccountedTransaction.UnAccountedNetQuantity.toLocaleString();\r\n      if (\r\n        modAccountedTransaction.UnAccountedGrossQuantity !== null &&\r\n        modAccountedTransaction.UnAccountedGrossQuantity !== \"\"\r\n      )\r\n        this.setState({ modAccountedTransaction });\r\n      return modAccountedTransaction;\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnAccountedTransactionTankDetailsComposite:Error occured on fillDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  getAttributes() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [unAccountedTankTransaction],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.UNACCOUNTEDTANKTRANSACTION\r\n                ),\r\n            },\r\n            () => {\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange([]);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          console.log(\r\n            \"UnAccountedTransactionTankDetailsComposite:Error in getAttributes:\"\r\n          );\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnAccountedTransactionTankDetailsComposite:Error while getAttributes:\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  convertStringtoDecimal(modAccountedMeterTransaction, attributeList) {\r\n    try {\r\n      if (\r\n        modAccountedMeterTransaction.UnAccountedGrossQuantity !== null &&\r\n        modAccountedMeterTransaction.UnAccountedGrossQuantity !== \"\"\r\n      ) {\r\n        modAccountedMeterTransaction.UnAccountedGrossQuantity =\r\n          Utilities.convertStringtoDecimal(\r\n            modAccountedMeterTransaction.UnAccountedGrossQuantity\r\n          );\r\n      }\r\n      if (\r\n        modAccountedMeterTransaction.UnAccountedNetQuantity !== null &&\r\n        modAccountedMeterTransaction.UnAccountedNetQuantity !== \"\"\r\n      ) {\r\n        modAccountedMeterTransaction.UnAccountedNetQuantity =\r\n          Utilities.convertStringtoDecimal(\r\n            modAccountedMeterTransaction.UnAccountedNetQuantity\r\n          );\r\n      }\r\n      if (\r\n        modAccountedMeterTransaction.Density !== null &&\r\n        modAccountedMeterTransaction.Density !== \"\"\r\n      ) {\r\n        modAccountedMeterTransaction.Density = Utilities.convertStringtoDecimal(\r\n          modAccountedMeterTransaction.Density\r\n        );\r\n      }\r\n      modAccountedMeterTransaction = this.fillAttributeDetails(\r\n        modAccountedMeterTransaction,\r\n        attributeList\r\n      );\r\n      return modAccountedMeterTransaction;\r\n    } catch (err) {\r\n      console.log(\r\n        \"UnAccountedTransactionTankDetailsComposite:convertStringtoDecimal error modAccountedMeterTransaction Details\",\r\n        err\r\n      );\r\n    }\r\n  }\r\n\r\n  fillAttributeDetails(modAccountedMeterTransaction, attributeList) {\r\n    try {\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      modAccountedMeterTransaction.Attributes = [];\r\n      attributeList.forEach((comp) => {\r\n        let attribute = {\r\n          ListOfAttributeData: [],\r\n        };\r\n        attribute.TerminalCode = comp.TerminalCode;\r\n        comp.attributeMetaDataList.forEach((det) => {\r\n          attribute.ListOfAttributeData.push({\r\n            AttributeCode: det.Code,\r\n            AttributeValue: det.DefaultValue,\r\n          });\r\n        });\r\n        modAccountedMeterTransaction.Attributes.push(attribute);\r\n      });\r\n      this.setState({ modAccountedMeterTransaction });\r\n      return modAccountedMeterTransaction;\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnAccountedTransactionTankDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  handleCellDataEdit = (attribute, value) => {\r\n    try {\r\n      attribute.DefaultValue = value;\r\n      this.setState({\r\n        attribute: attribute,\r\n      });\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnAccountedTransactionTankDetailsComposite:Error occured on handleCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals !== undefined && selectedTerminals !== null) {\r\n        let attributesTerminalsList = [];\r\n        var attributeMetaDataList = [];\r\n        var selectedAttributeList = [];\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        selectedAttributeList = lodash.cloneDeep(\r\n          this.state.selectedAttributeList\r\n        );\r\n        const attributeValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeValidationErrors\r\n        );\r\n        var modTank = lodash.cloneDeep(this.state.modAccountedTransaction);\r\n\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = selectedAttributeList.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          });\r\n\r\n          if (existitem === undefined) {\r\n            attributeMetaDataList.UNACCOUNTEDTANKTRANSACTION.forEach(function (\r\n              attributeMetaData\r\n            ) {\r\n              if (attributeMetaData.TerminalCode === terminal) {\r\n                var Attributevalue = modTank.Attributes.find(\r\n                  (baseproductAttribute) => {\r\n                    return baseproductAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n                attributesTerminalsList.push(attributeMetaData);\r\n              }\r\n            });\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n        selectedAttributeList = [];\r\n        selectedAttributeList = attributesTerminalsList;\r\n        selectedAttributeList = Utilities.attributesConvertoDecimal(\r\n          selectedAttributeList\r\n        );\r\n\r\n        attributeValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n              (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n        this.setState({ selectedAttributeList, attributeValidationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnAccountedTransactionTankDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (Array.isArray(attributeMetaDataList.UNACCOUNTEDTANKTRANSACTION) && attributeMetaDataList.UNACCOUNTEDTANKTRANSACTION.length > 0) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.UNACCOUNTEDTANKTRANSACTION[0].TerminalCode,\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnAccountedTransactionTankDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.UNACCOUNTEDTANKTRANSACTION\r\n          ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader newEntityName=\"TankUnaccountedTransaction_Header\"></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <UnAccountedTransactionTankDetails\r\n            modAccountedTransaction={this.state.modAccountedTransaction}\r\n            listOptions={{\r\n              quantityUOMOptions: this.state.quantityUOMOptions,\r\n              densityUOMOptions: this.state.densityUOMOptions,\r\n              tankCodeOptions: this.state.tankCodeOptions,\r\n              transactionTypeOptions: this.state.transactionTypeOptions,\r\n              baseProdcutOptions: this.state.baseProdcutOptions,\r\n              customerOptions: this.state.customerOptions,\r\n              customerSearchOptions: this.state.customerSearchOptions,\r\n              transportationTypeOptions: this.state.transportationTypeOptions,\r\n            }}\r\n            onFieldChange={this.handleChange}\r\n            validationErrors={this.state.validationErrors}\r\n            onCustomerSearchChange={this.handleCustomerSearchChange}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            selectedAttributeList={this.state.selectedAttributeList}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n          ></UnAccountedTransactionTankDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.add}\r\n            functionGroup={fnUnAccountedTransactionTank}\r\n            handleOperation={this.handleAddTransaction}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\nconst mapReceiptToProps = (receipt) => {\r\n  return {\r\n    userActions: bindActionCreators(getUserDetails, receipt),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapReceiptToProps\r\n)(UnAccountedTransactionTankDetailsComposite);\r\nUnAccountedTransactionTankDetailsComposite.propTypes = {\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  selectedRow: PropTypes.object.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nexport function UnAccountedTransactionTankSummaryComposite({\r\n    tableData,\r\n    columnDetails,\r\n    pageSize,\r\n    exportRequired,\r\n    exportFileName,\r\n    columnPickerRequired,\r\n    columnGroupingRequired,\r\n    terminalsToShow,\r\n    selectionRequired,     \r\n    onSelectionChange,\r\n    onRowClick,\r\n    parentComponent\r\n}) {\r\n    return (\r\n        <WijmoGridComposite\r\n        data={tableData}\r\n        columns={columnDetails}\r\n        rowsPerPage={pageSize}\r\n        exportRequired={exportRequired}\r\n        exportFileName={exportFileName}\r\n        columnPickerRequired={columnPickerRequired}\r\n        columnGroupingRequired={columnGroupingRequired}\r\n        terminalsToShow={terminalsToShow}\r\n        selectionRequired={selectionRequired}\r\n        onSelectionHandle={onSelectionChange}\r\n        onRowClick={onRowClick}\r\n        parentComponent={parentComponent}\r\n        ></WijmoGridComposite>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { UnAccountedTransactionTankSummaryComposite } from \"../Summary/UnAccountedTransactionTankSummaryComposite\";\r\nimport UnAccountedTransactionTankDetailsComposite from \"../Details/UnAccountedTransactionTankDetailsComposite\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../../CSS/styles.css\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  functionGroups,\r\n  fnUnAccountedTransactionTank,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TMTransactionFilters } from \"../../UIBase/Common/TMTransactionFilters\";\r\n\r\nclass UnAccountedTransactionTankComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: true,\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: true, delete: false, shareholder: true },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    selectedShareholder: \"\",\r\n    data: {},\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    dateError: \"\",\r\n  };\r\n\r\n  componentName = \"UnAccountedTransactionTankComponent\";\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      this.getUnAccountedTransactionTankList(\r\n        this.props.userDetails.EntityResult.PrimaryShareholder\r\n      );\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnUnAccountedTransactionTank\r\n      );\r\n      let toDate = new Date();\r\n      toDate.setHours(23, 59, 59);\r\n      let fromDate = new Date();\r\n      fromDate.setHours(0, 0, 0);\r\n      this.setState({ fromDate: fromDate, toDate: toDate });\r\n      toDate = toDate.toISOString();\r\n      fromDate = fromDate.toISOString();\r\n      this.setState({\r\n        operationsVisibilty,\r\n        selectedShareholder:\r\n          this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      });\r\n      this.getUnAccountedTransactionTankList(\r\n        this.props.userDetails.EntityResult.PrimaryShareholder\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnaccountedTransactionTankComposite:Error occured on ComponentDidMount\",\r\n        error\r\n      );\r\n    }\r\n      // clear session storage on window refresh event\r\n      window.addEventListener(\"beforeunload\", () => Utilities.clearSessionStorage(this.componentName + \"GridState\"));\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    Utilities.clearSessionStorage(this.componentName + \"GridState\");\r\n    window.removeEventListener(\"beforeunload\", () => Utilities.clearSessionStorage(this.componentName + \"GridState\"));\r\n  }\r\n  \r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      let { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({\r\n        selectedShareholder: shareholder,\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n      });\r\n      this.getUnAccountedTransactionTankList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnAccountedTransactionTankComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  fillDetails(data) {\r\n    try {\r\n      data.Table.forEach((p) => {\r\n        if (\r\n          p.TankUnaccountedTransaction_UnAccountedGrossQuantity !== null &&\r\n          p.TankUnaccountedTransaction_UnAccountedGrossQuantity !== \"\"\r\n        )\r\n          p.TankUnaccountedTransaction_UnAccountedGrossQuantity =\r\n            p.TankUnaccountedTransaction_UnAccountedGrossQuantity.toLocaleString();\r\n        if (\r\n          p.TankUnaccountedTransaction_UnAccountedNetQuantity !== null &&\r\n          p.TankUnaccountedTransaction_UnAccountedNetQuantity !== \"\"\r\n        )\r\n          p.TankUnaccountedTransaction_UnAccountedNetQuantity =\r\n            p.TankUnaccountedTransaction_UnAccountedNetQuantity.toLocaleString();\r\n        if (\r\n          p.TankUnaccountedTransaction_Density !== null &&\r\n          p.TankUnaccountedTransaction_Density !== \"\"\r\n        )\r\n          p.TankUnaccountedTransaction_Density =\r\n            p.TankUnaccountedTransaction_Density.toLocaleString();\r\n      });\r\n\r\n      this.setState({ data });\r\n      return data;\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnAccountedTransactionMeterDetailsComposite:Error occured on fillDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  getUnAccountedTransactionTankList(shareholder) {\r\n    let fromDate = new Date(this.state.fromDate);\r\n    let toDate = new Date(this.state.toDate);\r\n    fromDate.setHours(0, 0, 0);\r\n    toDate.setHours(23, 59, 59);\r\n    let obj = {\r\n      ShareholderCode: shareholder,\r\n      startRange: fromDate,\r\n      endRange: toDate,\r\n    };\r\n    if (shareholder !== undefined && shareholder !== \"\") {\r\n      axios(\r\n        RestAPIs.GetUnAccountedTransactionTankList,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              data: this.fillDetails(result.EntityResult),\r\n              isReadyToRender: true,\r\n            });\r\n          } else {\r\n            this.setState({ data: [], isReadyToRender: true });\r\n            console.log(\r\n              \"Error in GetUnAccountedTransactionTankList:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\r\n            \"Error while getting UnAccountedTransactionTank List:\",\r\n            error\r\n          );\r\n        });\r\n    }\r\n  }\r\n  handleDateTextChange = (value, error) => {\r\n    if (value === \"\")\r\n      this.setState({ dateError: \"\", toDate: \"\", fromDate: \"\" });\r\n    if (error !== null && error !== \"\")\r\n      this.setState({\r\n        dateError: \"Common_InvalidDate\",\r\n        toDate: \"\",\r\n        fromDate: \"\",\r\n      });\r\n    else {\r\n      this.setState({ dateError: \"\", toDate: value.to, fromDate: value.from });\r\n    }\r\n  };\r\n  handleRangeSelect = ({ to, from }) => {\r\n    if (to !== undefined) this.setState({ toDate: to });\r\n    if (from !== undefined) this.setState({ fromDate: from });\r\n  };\r\n  handleLoadOrders = () => {\r\n    //debugger;\r\n    let error = Utilities.validateDateRange(\r\n      this.state.toDate,\r\n      this.state.fromDate\r\n    );\r\n\r\n    if (error !== \"\") {\r\n      this.setState({ dateError: error });\r\n    } else {\r\n      this.setState({ dateError: \"\" });\r\n      this.getUnAccountedTransactionTankList(this.state.selectedShareholder);\r\n    }\r\n  };\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        operationsVisibilty,\r\n        selectedRow: {},\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"UnAccountedTransactionTankComposite:Error occured on handleAdd\"\r\n      );\r\n    }\r\n  };\r\n  handleBack = () => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnUnAccountedTransactionTank\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.shareholder = true;\r\n      this.setState({\r\n        isDetails: false,\r\n        //selectedRow: {},\r\n        //selectedItems: [],\r\n        operationsVisibilty,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getUnAccountedTransactionTankList(this.state.selectedShareholder);\r\n    } catch (error) {\r\n      console.log(\"OrderComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      if (notification.messageType === \"success\") {\r\n         operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnUnAccountedTransactionTank\r\n        );\r\n        operationsVisibilty.delete = false;\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      // if (notification.messageType === \"success\" && saveType === \"add\") {\r\n      //   let selectedItems = [\r\n      //     {\r\n      //       Common_Code: data.OrderCode,\r\n\r\n      //     },\r\n      //   ];\r\n      //   this.setState({ selectedItems });\r\n      // }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"OrderComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n  handleSelection = (items) => {\r\n    try {\r\n    } catch (error) {\r\n      console.log(\"handleSelection:Error occured on handleSelection\", error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            breadcrumbItem={this.props.activeItem}\r\n            shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n            selectedShareholder={this.state.selectedShareholder}\r\n            onShareholderChange={this.handleShareholderSelectionChange}\r\n            onAdd={this.handleAdd}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n            deleteVisible={false}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isDetails ? (\r\n          <ErrorBoundary>\r\n            <UnAccountedTransactionTankDetailsComposite\r\n              selectedRow={this.state.selectedRow}\r\n              key=\"UnaccountedTransactionTankDetails\"\r\n              selectedShareholder={this.state.selectedShareholder}\r\n              onBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n              validationErrors={this.state.validationErrors}\r\n              genericProps={this.props.activeItem.itemProps}\r\n            ></UnAccountedTransactionTankDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isReadyToRender ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <TMTransactionFilters\r\n                dateRange={{ from: this.state.fromDate, to: this.state.toDate }}\r\n                dateError={this.state.dateError}\r\n                handleDateTextChange={this.handleDateTextChange}\r\n                handleRangeSelect={this.handleRangeSelect}\r\n                handleLoadOrders={this.handleLoadOrders}\r\n                filterText=\"LoadTransactionTank\"\r\n              ></TMTransactionFilters>\r\n            </ErrorBoundary>\r\n            {this.state.data.Table?\r\n            <ErrorBoundary>\r\n              <UnAccountedTransactionTankSummaryComposite\r\n                tableData={this.state.data.Table}\r\n                columnDetails={this.state.data.Column}\r\n                pageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                exportRequired={true}\r\n                exportFileName=\"UnAccountedTransactionTankList\"\r\n                columnPickerRequired={true}\r\n\r\n                terminalsToShow={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .NoOfTerminalsToShow\r\n                }\r\n                selectionRequired={true}\r\n                columnGroupingRequired={true}\r\n                onSelectionChange={this.handleSelection}\r\n                onRowClick={this.handleRowClick}\r\n                parentComponent={this.componentName}\r\n              ></UnAccountedTransactionTankSummaryComposite>\r\n            </ErrorBoundary>: (\r\n          <LoadingPage message=\"Loading\"></LoadingPage>\r\n        )}\r\n          </div>\r\n        ) : (\r\n          <LoadingPage message=\"Loading\"></LoadingPage>\r\n        )}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UnAccountedTransactionTankComposite);\r\n\r\nUnAccountedTransactionTankComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { DatePicker, Button } from \"@scuf/common\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function TMTransactionFilters({\r\n  handleDateTextChange,\r\n  handleRangeSelect,\r\n  handleLoadOrders,\r\n  dateError,\r\n  dateRange,\r\n  filterText,\r\n}) {\r\n  //console.log(dateError);\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"dateRangeContainer\">\r\n          <div className=\"dateRangeMargin\">\r\n            <DatePicker\r\n              type=\"daterange\"\r\n              closeOnSelection={true}\r\n              error={t(dateError)}\r\n              displayFormat={getCurrentDateFormat()}\r\n              //value={dateRange}\r\n              rangeValue={dateRange}\r\n              onTextChange={handleDateTextChange}\r\n              onRangeSelect={handleRangeSelect}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"dateSearch\">\r\n            <Button content={t(filterText)} onClick={handleLoadOrders} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","WijmoGrid","flex","setFlex","translator","useTranslation","_getData","pageLength","CollectionView","sourceData","pageSize","setData","rowsPerPage","theGrid","React","theSearch","gridFilter","pagingComponent","colPicker","selectedRows","selectionRequired","selector","gridInitialized","grid","customizeFilterConditions","onRowClick","addEventListener","hostElement","e","ht","hitTest","target","closest","classList","includes","cellType","wjGrid","Cell","rowData","rows","row","dataItem","selectionMode","wjCore","select","Selector","itemChecked","s","singleSelection","filter","isSelected","current","loadash","forEach","onSelectionHandle","r","selectedRow","showCheckAll","column","rowHeaders","columns","headersVisibility","HeadersVisibility","All","useEffect","control","push","selectedItems","refresh","localStorage","getItem","parentComponent","gridState","JSON","parse","newFlex","col","matchedCol","colSetting","binding","visible","filterDefinition","collectionView","deferUpdate","sortDescriptions","clear","i","sortDesc","property","ascending","groupDescriptions","sessionStorage","gridSessionState","moveToPage","pageCount","pageIndex","text","searchText","columnPickerRequired","itemsSource","checkedMemberPath","displayMemberPath","lostFocus","addHandler","hidePopup","exportExcel","gridFlex","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","exportFileName","displayValues","columnDetail","Name","PopOver","terminalCodes","split","terminalsToShow","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","saveGridState","group","document","getElementsByClassName","chkbx","parentNode","sessionState","setItem","stringify","FlexGridFilter","operator","Operator","header","descending","apply","conditions","search","selectAll","and","or","cancel","stringOperators","op","EQ","NE","BW","EW","CT","NC","numberOperators","GT","LT","GE","LE","dateOperators","booleanOperators","getWidth","columnDetails","window","screen","width","WidthPx","parseInt","WidthPercentage","FlexGridSearch","class","ref","id","actionType","event","host","offsetHeight","focus","showPopup","PopupPosition","Below","preventDefault","colPickerClickHandler","exportRequired","fontSize","top","columnGroupingRequired","GroupPanel","FlexGrid","autoGenerateColumns","alternatingRowStep","autoRowHeights","initialized","virtualizationThreshold","onUpdatedView","FlexGridColumn","minWidth","isReadOnly","wordWrap","align","FlexGridCellTemplate","template","context","conditionalRowStyleCheck","conditionalRowStyles","ListBox","picker","initializedPicker","CollectionViewNavigator","headerFormat","byPage","cv","UnAccountedTransactionTankDetails","modAccountedTransaction","listOptions","onCustomerSearchChange","isEnterpriseNode","selectedAttributeList","attributeValidationErrors","handleCellDataEdit","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","TankCode","tankCodeOptions","noResultsMessage","transactionTypeOptions","UnAccountedTransactionTypeCode","transportationTypeOptions","TransportationType","quantityUOMOptions","QuantityUOM","UnAccountedGrossQuantity","UnAccountedNetQuantity","Density","densityUOMOptions","DensityUOM","DatePicker","minuteStep","displayFormat","getCurrentDateFormat","TransactionStartTime","TransactionEndTime","baseProdcutOptions","BaseProductCode","Comments","customerOptions","onSearch","CustomerCode","attribute","Accordion","title","AttributeDetails","attributeMetaDataList","UnAccountedTransactionTankDetailsComposite","AccountedTransaction","emptyAccountedTransaction","isReadyToRender","saveEnabled","customerSearchOptions","UnAccountedTransactionTankValidationDef","showAuthenticationLayout","tempAccountedTransaction","handleReset","keys","IsEnterpriseNode","terminalSelectionChange","handleResetAttributeValidationError","localNodeAttribute","componentWillReceiveProps","nextProps","Common_Code","handleCustomerSearchChange","Constants","slice","handleChange","handleAddTransaction","createAccountedTransaction","handleSave","fillDetails","attributeList","validateSave","convertStringtoDecimal","IsWebPortalUser","DefaultValue","Code","handleAuthenticationClose","GetUOMList","Array","isArray","VOLUME","MASS","massUOM","DENSITY","IsArchived","getAttributes","GetTankList","GetBaseProductsList","GetUnAccountedTransactionTypeList","GetCustomerList","GetTransportationTypeOptions","ShareholderCode","FunctionsList","functionGroups","fnUnAccountedTransactionTank","shareholderCustomers","shareholderCust","customerDestinationOptions","CustomerDestinationsList","transportationTypeList","PIPELINE","transactionTypeOptionList","Tank","transactionOptions","TankType","prodType","concat","getAdditivesList","ALLPROD","additive","attributeMetaData","x","obj","ShareHolderCode","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","toLocaleString","unAccountedTankTransaction","UNACCOUNTEDTANKTRANSACTION","modAccountedMeterTransaction","fillAttributeDetails","err","Attributes","comp","ListOfAttributeData","det","AttributeCode","AttributeValue","selectedTerminals","attributesTerminalsList","modTank","existitem","Attributevalue","baseproductAttribute","valueAttribute","TMDetailsHeader","newEntityName","TMDetailsUserActions","handleBack","onBack","UserName","LoadingPage","receipt","userActions","bindActionCreators","UnAccountedTransactionTankSummaryComposite","tableData","onSelectionChange","WijmoGridComposite","UnAccountedTransactionTankComposite","isDetails","isDetailsModified","fromDate","toDate","dateError","componentName","componentWillUnmount","removeEventListener","handleShareholderSelectionChange","getUnAccountedTransactionTankList","handleDateTextChange","to","from","handleRangeSelect","handleLoadOrders","handleAdd","savedEvent","saveType","toast","NotifyEvent","notificationMessage","autoClose","handleSelection","items","PrimaryShareholder","setHours","toISOString","Table","p","TankUnaccountedTransaction_UnAccountedGrossQuantity","TankUnaccountedTransaction_UnAccountedNetQuantity","TankUnaccountedTransaction_Density","startRange","endRange","activeItem","ShareholderList","genericProps","TMTransactionFilters","dateRange","filterText","Column","PageAttibutes","WebPortalListPageSize","NoOfTerminalsToShow","handleRowClick","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","entityCode","popUpContents","margin","List","closeOnSelection","rangeValue","onTextChange","onRangeSelect","handleAttributeDateValue","convertAttributeDatetoString","chars","Dateval","getFullYear","getMonth","getDate","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","Checkbox","checked","DATETIME","showYearSelector","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","view","modify","remove","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","getOptionsWithSelect","ddlOptions","selectOptionText","option","unshift","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell"],"sourceRoot":""}