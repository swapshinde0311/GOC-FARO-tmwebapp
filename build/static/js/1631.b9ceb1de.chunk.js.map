{"version":3,"file":"static/js/1631.b9ceb1de.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Common/WijmoGrid.jsx","Components/Composite/Common/WijmoGridComposite.jsx","Components/Composite/Summary/MarineReceiptSummaryComposite.jsx","Components/Composite/Entity/MarineReceiptComposite.jsx","Components/UIBase/Common/TMTransactionFilters.jsx","Components/UIBase/Common/TMReportViewer.jsx","Components/UIBase/Details/ReportDetails.jsx","JS/FunctionGroups.js","JS/KeyCodes.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as wjCore from \"@grapecity/wijmo\";\r\nimport * as wjGrid from \"@grapecity/wijmo.grid\";\r\nimport {\r\n  FlexGrid,\r\n  FlexGridColumn,\r\n  FlexGridCellTemplate,\r\n} from \"@grapecity/wijmo.react.grid\";\r\nimport { FlexGridFilter } from \"@grapecity/wijmo.react.grid.filter\";\r\nimport { Operator } from \"@grapecity/wijmo.grid.filter\";\r\nimport { FlexGridSearch } from \"@grapecity/wijmo.react.grid.search\";\r\nimport { CollectionView } from \"@grapecity/wijmo\";\r\nimport { CollectionViewNavigator, ListBox } from \"@grapecity/wijmo.react.input\";\r\nimport { Selector } from \"@grapecity/wijmo.grid.selector\";\r\nimport { HeadersVisibility } from \"@grapecity/wijmo.grid\";\r\nimport { showPopup, hidePopup, PopupPosition } from \"@grapecity/wijmo\";\r\nimport * as wjcGridXlsx from \"@grapecity/wijmo.grid.xlsx\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport { GroupPanel } from \"@grapecity/wijmo.react.grid.grouppanel\";\r\nimport { Button, Card, Popup } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as loadash from \"lodash\";\r\nimport \"@grapecity/wijmo.touch\";\r\n\r\nconst WijmoGrid = (props) => {\r\n  const [flex, setFlex] = useState(null);\r\n  const [translator] = useTranslation();\r\n  const _getData = (pageLength) => {\r\n    return new CollectionView(props.sourceData, {\r\n      pageSize: pageLength,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState(_getData(props.rowsPerPage));\r\n  const theGrid = React.createRef();\r\n  const theSearch = React.createRef();\r\n  const gridFilter = React.createRef();\r\n  const pagingComponent = React.createRef();\r\n  const colPicker = React.useRef();\r\n\r\n  // to keep track of selected rows\r\n  const selectedRows = React.useRef(props.selectionRequired ? [] : null);\r\n\r\n  // to initialize grid checkbox selection\r\n  let selector = null;\r\n\r\n  //Initialize grid\r\n  const gridInitialized = (grid) => {\r\n    try {\r\n      // localize grid filter\r\n      customizeFilterConditions();\r\n\r\n      if (props.onRowClick) {\r\n        // add row click event handler\r\n        grid.addEventListener(grid.hostElement, \"click\", (e) => {\r\n          let ht = grid.hitTest(e);\r\n          // condition to check if cell is not a grouped cell and a data cell\r\n          if (\r\n            ht.target.closest(\".wj-cell\") &&\r\n            ![...ht.target.closest(\".wj-cell\").classList].includes(\r\n              \"wj-group\"\r\n            ) &&\r\n            ht.cellType === wjGrid.CellType.Cell\r\n          ) {\r\n            // fetch row data\r\n            const rowData = grid.rows[ht.row].dataItem;\r\n            props.onRowClick(rowData);\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      grid.select(-1, -1);\r\n\r\n      setFlex(grid);\r\n      if (props.selectionRequired) {\r\n        // enable checkbox selection\r\n        selector = new Selector(grid, {\r\n          itemChecked: (s, e) => {\r\n            // if only single checkbox selection is required\r\n            if (props.singleSelection) {\r\n              grid.rows\r\n                .filter((row) => {\r\n                  return (\r\n                    row.isSelected &&\r\n                    selectedRows.current.filter((item) =>\r\n                      loadash.isEqual(item, row.dataItem)\r\n                    ).length === 1\r\n                  );\r\n                })\r\n                .forEach((row) => {\r\n                  row.isSelected = false;\r\n                });\r\n            }\r\n\r\n            // pass row data as parameter to checkbox selection handler\r\n            props.onSelectionHandle(\r\n              grid.rows\r\n                .filter((r) => r.isSelected)\r\n                .map((selectedRow) => selectedRow.dataItem)\r\n            );\r\n          },\r\n          // if only single checkbox selection is required\r\n          showCheckAll: !props.singleSelection,\r\n        });\r\n\r\n        let theGrid = selector.column.grid;\r\n        selector.column = theGrid.rowHeaders.columns[0];\r\n        theGrid.headersVisibility = HeadersVisibility.All;\r\n        theGrid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in gridInitialized: \" + error);\r\n    }\r\n  };\r\n\r\n  //Update grid when data changes\r\n  useEffect(() => {\r\n    try {\r\n      if (theGrid != null) {\r\n        //Connect search to the grid\r\n        let grid = theGrid.current.control;\r\n        let search = theSearch.current.control;\r\n        search.grid = grid;\r\n      }\r\n\r\n      setData(_getData(props.rowsPerPage));\r\n    } catch (error) {\r\n      console.log(\"Error in grid update:\", error);\r\n    }\r\n  }, [props.sourceData]);\r\n\r\n  // Pre-select grid rows based on selectedItems props\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && props.selectionRequired) {\r\n        // clear the selectedRows array\r\n        selectedRows.current.length = 0;\r\n        // add selectedItems array items to selectedRows\r\n        selectedRows.current.push(...props.selectedItems);\r\n\r\n        flex.rows.forEach((row) => {\r\n          if (\r\n            props.selectedItems.filter((item) =>\r\n              loadash.isEqual(item, row.dataItem)\r\n            ).length === 1\r\n          ) {\r\n            // checks the row checkbox\r\n            row.isSelected = true;\r\n          } else {\r\n            // unchecks the row checkbox\r\n            row.isSelected = false;\r\n          }\r\n        });\r\n\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in pre-selecting rows:\", error);\r\n    }\r\n  }, [props.selectedItems]);\r\n\r\n  //Load the state of grid\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(props.parentComponent + \"GridState\") &&\r\n        localStorage.getItem(props.parentComponent + \"GridState\") !== \"null\" &&\r\n        flex\r\n      ) {\r\n        // restore grid settings\r\n        let gridState = JSON.parse(\r\n          localStorage.getItem(props.parentComponent + \"GridState\")\r\n        );\r\n        let newFlex = flex;\r\n\r\n        // restore column picker settings\r\n        newFlex.columns.forEach((col) => {\r\n          let matchedCol = gridState.columns.filter(\r\n            (colSetting) => colSetting.binding === col.binding\r\n          );\r\n          col.visible =\r\n            matchedCol.length > 0 ? matchedCol[0].visible : col.visible;\r\n        });\r\n\r\n        // restore filter settings\r\n        gridFilter.current.control.filterDefinition =\r\n          gridState.filterDefinition;\r\n\r\n        // restore sort settings\r\n        newFlex.collectionView.deferUpdate(() => {\r\n          newFlex.collectionView.sortDescriptions.clear();\r\n          for (let i = 0; i < gridState.sortDescriptions.length; i++) {\r\n            let sortDesc = gridState.sortDescriptions[i];\r\n            newFlex.collectionView.sortDescriptions.push(\r\n              new wjCore.SortDescription(sortDesc.property, sortDesc.ascending)\r\n            );\r\n          }\r\n        });\r\n\r\n        // restore grouping settings\r\n        for (let i = 0; i < gridState.groupDescriptions.length; i++) {\r\n          newFlex.collectionView.groupDescriptions.push(\r\n            new wjCore.PropertyGroupDescription(gridState.groupDescriptions[i])\r\n          );\r\n          newFlex.columns.filter(\r\n            (col) => col.binding === gridState.groupDescriptions[i]\r\n          )[0].visible = false;\r\n        }\r\n\r\n        if (\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") &&\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") !== \"null\"\r\n        ) {\r\n          let gridSessionState = JSON.parse(\r\n            sessionStorage.getItem(props.parentComponent + \"GridState\")\r\n          );\r\n          // restore paging settings\r\n          newFlex.collectionView.moveToPage(\r\n            newFlex.collectionView.pageCount - 1 >= gridSessionState.pageIndex\r\n              ? gridSessionState.pageIndex\r\n              : newFlex.collectionView.pageCount - 1\r\n          );\r\n\r\n          // restore search settings\r\n          if (theSearch) {\r\n            theSearch.current.control.text = gridSessionState.searchText;\r\n          }\r\n        }\r\n\r\n        setFlex(newFlex);\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in restoring local storage settings: \", error);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set Column Picker Properties\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && colPicker.current && props.columnPickerRequired) {\r\n        colPicker.current.itemsSource = flex.columns;\r\n        colPicker.current.checkedMemberPath = \"visible\";\r\n        colPicker.current.displayMemberPath = \"header\";\r\n        colPicker.current.lostFocus.addHandler(() => {\r\n          hidePopup(colPicker.current.hostElement);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in initializing column picker properties:\", error);\r\n    }\r\n  }, [colPicker.current]);\r\n\r\n  useEffect(() => {\r\n    // remove column picker pop-up on component unmount\r\n    return () => {\r\n      if (props.columnPickerRequired && colPicker.current) {\r\n        hidePopup(colPicker.current.hostElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // export grid data to excel\r\n  const exportExcel = () => {\r\n    try {\r\n      let gridFlex = flex;\r\n      //to download all rows from all pages\r\n      gridFlex.itemsSource.pageSize = props.sourceData.length;\r\n      setFlex(gridFlex);\r\n      wjcGridXlsx.FlexGridXlsxConverter.saveAsync(\r\n        flex,\r\n        {\r\n          includeColumnHeaders: true,\r\n          includeCellStyles: false,\r\n          formatItem: null,\r\n        },\r\n        props.exportFileName\r\n      );\r\n\r\n      //to restore paging\r\n      gridFlex.itemsSource.pageSize = props.rowsPerPage;\r\n      setFlex(gridFlex);\r\n    } catch (error) {\r\n      console.log(\"Error in export grid to excel:\", error);\r\n    }\r\n  };\r\n\r\n  const terminalPopOver = (terminalCodes) => {\r\n    if (terminalCodes.split(\",\").length > props.terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={terminalCodes.split(\",\").length}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return terminalCodes;\r\n    }\r\n  };\r\n\r\n  const displayValues = (value, columnDetail) => {\r\n    if (columnDetail !== undefined && columnDetail !== null) {\r\n      if (typeof value === \"boolean\" || columnDetail.Name === \"Active\") {\r\n        if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n        else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n      } else if (value === \"\" || value === null || value === undefined) {\r\n        return value;\r\n      } else if (\r\n        (columnDetail.Name === \"TerminalCodes\" ||\r\n          columnDetail.PopOver === \"1\") &&\r\n        value !== null\r\n      ) {\r\n        return terminalPopOver(value);\r\n      }\r\n      // var columnType = columnDetails.find(function (detail) {\r\n      //   if (detail.Name === field) {\r\n      //     return detail;\r\n      //   }\r\n      // });\r\n      else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"DateTime\"\r\n      ) {\r\n        return (\r\n          new Date(value).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(value).toLocaleTimeString()\r\n        );\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Date\"\r\n      ) {\r\n        return new Date(value).toLocaleDateString();\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Time\"\r\n      ) {\r\n        return new Date(value).toLocaleTimeString();\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  //Initialize Column Picker\r\n  const initializedPicker = (picker) => {\r\n    if (props.columnPickerRequired) {\r\n      colPicker.current = picker;\r\n    }\r\n  };\r\n\r\n  // Column Picker Handler\r\n  const colPickerClickHandler = (event) => {\r\n    try {\r\n      let host = colPicker.current.hostElement;\r\n      if (!host.offsetHeight) {\r\n        showPopup(host, event.target, PopupPosition.Below, true, false);\r\n        colPicker.current.focus();\r\n      } else {\r\n        hidePopup(host, true, true);\r\n        flex.focus();\r\n      }\r\n\r\n      colPicker.current.focus();\r\n      event.preventDefault();\r\n    } catch (error) {\r\n      console.log(\"Error in Column Picker click event:\", error);\r\n    }\r\n  };\r\n\r\n  const saveGridState = () => {\r\n    try {\r\n      if (flex && gridFilter.current) {\r\n        // grid column, filter, sort and grouping settings\r\n        let gridState = {\r\n          columns: flex.columns.map((col) => {\r\n            return {\r\n              binding: col.binding,\r\n              visible: col.visible,\r\n            };\r\n          }),\r\n          filterDefinition: gridFilter.current.control.filterDefinition,\r\n          sortDescriptions: flex.collectionView.sortDescriptions.map(\r\n            (sortDesc) => {\r\n              return {\r\n                property: sortDesc.property,\r\n                ascending: sortDesc.ascending,\r\n              };\r\n            }\r\n          ),\r\n          groupDescriptions: flex.collectionView.groupDescriptions.map(\r\n            (group) => {\r\n              if (group.propertyName) {\r\n                return group.propertyName;\r\n              }\r\n\r\n              return null;\r\n            }\r\n          ),\r\n        };\r\n\r\n        // add class to grouped checkbox div element\r\n        if (\r\n          flex.collectionView.groupDescriptions &&\r\n          flex.collectionView.groupDescriptions.length > 0\r\n        ) {\r\n          let groupedCheckboxes = [\r\n            ...document.getElementsByClassName(\"wj-column-selector-group\"),\r\n          ];\r\n          groupedCheckboxes.forEach((chkbx) => {\r\n            chkbx.parentNode.parentNode.classList.add(\"wj-grouped-checkbox\");\r\n          });\r\n        }\r\n\r\n        // grid paging and search settings\r\n        let sessionState = {\r\n          pageIndex: flex.collectionView.pageIndex,\r\n          searchText: theSearch.current.control.text,\r\n        };\r\n\r\n        localStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(gridState)\r\n        );\r\n        sessionStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(sessionState)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in saving grid state\");\r\n    }\r\n  };\r\n\r\n  // customize grid filter text and dropdowns\r\n  const customizeFilterConditions = () => {\r\n    // localize the FlexGrid filter\r\n    let filter = wjCore.culture.FlexGridFilter,\r\n      operator = Operator;\r\n    wjCore.culture.FlexGridFilter.header = translator(\"WijmoGridFilterHeader\");\r\n    wjCore.culture.FlexGridFilter.ascending =\r\n      \"\\u2191 \" + translator(\"WijmoGridFilterAscending\");\r\n    wjCore.culture.FlexGridFilter.descending =\r\n      \"\\u2193 \" + translator(\"WijmoGridFilterDescending\");\r\n    wjCore.culture.FlexGridFilter.apply = translator(\"RoleAdminEdit_Apply\");\r\n    wjCore.culture.FlexGridFilter.clear = translator(\"OrderCreate_btnClear\");\r\n    wjCore.culture.FlexGridFilter.conditions = translator(\r\n      \"WijmoGridFilterCondition\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.values = translator(\"WijmoGridFilterValue\");\r\n    wjCore.culture.FlexGridFilter.search = translator(\r\n      \"LoadingDetailsView_SearchGrid\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.selectAll = translator(\r\n      \"WijmoGridFilterSelectAll\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.and = translator(\"WijmoGridFilterAnd\");\r\n    wjCore.culture.FlexGridFilter.or = translator(\"WijmoGridFilterOr\");\r\n    wjCore.culture.FlexGridFilter.cancel = translator(\"AccessCardInfo_Cancel\");\r\n    // wjCore.culture.FlexGridFilter.null = 'test';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.and = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.asc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dialog = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dsc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.edit = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op2 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.or = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.search = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val2 = '';\r\n\r\n    // localize FlexGrid filter operators\r\n    filter.stringOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterBeginsWith\"), op: operator.BW },\r\n      { name: translator(\"WijmoGridFilterEndsWith\"), op: operator.EW },\r\n      { name: translator(\"WijmoGridFilterContains\"), op: operator.CT },\r\n      { name: translator(\"WijmoGridFilterDoesNotContain\"), op: operator.NC },\r\n    ];\r\n    filter.numberOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterGreaterThan\"), op: operator.GT },\r\n      { name: translator(\"WijmoGridFilterLessThan\"), op: operator.LT },\r\n      {\r\n        name: translator(\"WijmoGridFilterGreaterThanOrEqual\"),\r\n        op: operator.GE,\r\n      },\r\n      { name: translator(\"WijmoGridFilterLessThanOrEqual\"), op: operator.LE },\r\n    ];\r\n    filter.dateOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterDateEarlierThan\"), op: operator.LT },\r\n      { name: translator(\"WijmoGridFilterDateLaterThan\"), op: operator.GT },\r\n    ];\r\n    filter.booleanOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n    ];\r\n  };\r\n\r\n  // set column width based on screen size\r\n  const getWidth = (columnDetails) => {\r\n    try {\r\n      const screenWidth = window.screen.width;\r\n      if (screenWidth < 1024) {\r\n        if (columnDetails.WidthPx && columnDetails.WidthPx !== \"\")\r\n          return parseInt(columnDetails.WidthPx);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in width:\", error);\r\n    }\r\n\r\n    return columnDetails.WidthPercentage.includes(\"*\")\r\n      ? columnDetails.WidthPercentage\r\n      : parseInt(columnDetails.WidthPercentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pl-1\">\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <React.Fragment>\r\n              <div className=\"row pl-0\">\r\n                <div className=\"col-10 col-sm-12 col-md-5 col-lg-6\">\r\n                  <FlexGridSearch\r\n                    class=\"ui single-input\"\r\n                    ref={theSearch}\r\n                    placeholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-10 col-sm-12 col-md-7 col-lg-6\">\r\n                  <div style={{ float: \"right\" }}>\r\n                    {props.columnPickerRequired ? (\r\n                      <Button\r\n                        id=\"colPicker\"\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        onClick={(event) => colPickerClickHandler(event)}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridColumnPicker\")}\r\n                        </div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          <Icon\r\n                            name=\"caret-down\"\r\n                            className=\"btnIcon\"\r\n                            size=\"small\"\r\n                          />\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.exportRequired ? (\r\n                      <Button\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        className=\"mt-3 mt-md-0\"\r\n                        onClick={exportExcel}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridExport\")}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            className=\"icon-Xls\"\r\n                            style={{\r\n                              fontSize: \"17px\",\r\n                              position: \"absolute\",\r\n                              top: \"3px\",\r\n                            }}\r\n                          ></span>\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tableScroll\">\r\n                {props.columnGroupingRequired ? (\r\n                  <GroupPanel\r\n                    className=\"group-panel\"\r\n                    grid={flex}\r\n                    placeholder={t(\"WijmoGridGroupPanelPlaceholder\")}\r\n                  />\r\n                ) : null}\r\n                <ErrorBoundary>\r\n                  <FlexGrid\r\n                    ref={theGrid}\r\n                    autoGenerateColumns={false}\r\n                    alternatingRowStep={0}\r\n                    autoRowHeights={true}\r\n                    headersVisibility=\"Column\"\r\n                    itemsSource={data}\r\n                    selectionMode={wjCore.asEnum(\"None\", wjGrid.SelectionMode)}\r\n                    initialized={gridInitialized}\r\n                    virtualizationThreshold={[0, 10000]}\r\n                    onUpdatedView={saveGridState}\r\n                  >\r\n                    <FlexGridFilter ref={gridFilter} />\r\n                    {props.columns.map((column) => {\r\n                      return (\r\n                        <FlexGridColumn\r\n                          header={t(column.Name)}\r\n                          key={column.Name}\r\n                          binding={column.Name}\r\n                          width={getWidth(column)}\r\n                          minWidth={100}\r\n                          isReadOnly={true}\r\n                          wordWrap={true}\r\n                          align=\"left\"\r\n                        >\r\n                          <FlexGridCellTemplate\r\n                            cellType=\"Cell\"\r\n                            template={(context) => {\r\n                              return (\r\n                                <span\r\n                                  style={\r\n                                    props.conditionalRowStyleCheck == null ||\r\n                                    !props.conditionalRowStyleCheck(\r\n                                      context.item\r\n                                    )\r\n                                      ? null\r\n                                      : { ...props.conditionalRowStyles }\r\n                                  }\r\n                                >\r\n                                  {displayValues(\r\n                                    context.item[column.Name],\r\n                                    column\r\n                                  )}\r\n                                </span>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FlexGridColumn>\r\n                      );\r\n                    })}\r\n                  </FlexGrid>\r\n                </ErrorBoundary>\r\n                {props.columnPickerRequired ? (\r\n                  <div className=\"column-picker-div\">\r\n                    <ListBox\r\n                      className=\"column-picker\"\r\n                      initialized={(picker) => initializedPicker(picker)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"row\">\r\n                <CollectionViewNavigator\r\n                  ref={pagingComponent}\r\n                  className=\"ml-auto mr-auto mt-3\"\r\n                  headerFormat={t(\"WijmoGridPagingTemplate\")}\r\n                  byPage={true}\r\n                  cv={data}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nWijmoGrid.propTypes = {\r\n  sourceData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  exportRequired: PropTypes.bool.isRequired,\r\n  exportFileName: PropTypes.string,\r\n  selectionRequired: PropTypes.bool,\r\n  columnPickerRequired: PropTypes.bool,\r\n  columnGroupingRequired: PropTypes.bool,\r\n  conditionalRowStyleCheck: PropTypes.func,\r\n  conditionalRowStyles: PropTypes.object,\r\n  rowsPerPage: PropTypes.number,\r\n  onSelectionHandle: PropTypes.func,\r\n  parentComponent: PropTypes.string.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  terminalsToShow: PropTypes.number,\r\n  singleSelection: PropTypes.bool,\r\n  selectedItems: PropTypes.array,\r\n};\r\n\r\nWijmoGrid.defaultProps = {\r\n  sourceData: [],\r\n  columns: [],\r\n  exportRequired: true,\r\n  exportFileName: \"Grid.xlsx\",\r\n  selectionRequired: false,\r\n  columnPickerRequired: false,\r\n  columnGroupingRequired: false,\r\n  rowsPerPage: 10,\r\n  terminalsToShow: 2,\r\n  singleSelection: false,\r\n  selectedItems: [],\r\n};\r\n\r\nexport default WijmoGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WijmoGrid from '../../UIBase/Common/WijmoGrid';\r\n\r\nconst WijmoGridComposite = (props) => {\r\n    return (\r\n        <WijmoGrid\r\n            sourceData={props.data}\r\n            columns={props.columns}\r\n            exportRequired={props.exportRequired}\r\n            exportFileName={props.exportFileName}\r\n            columnPickerRequired={props.columnPickerRequired}\r\n            selectionRequired={props.selectionRequired}\r\n            columnGroupingRequired={props.columnGroupingRequired}\r\n            conditionalRowStyleCheck={props.conditionalRowStyleCheck}\r\n            conditionalRowStyles={props.conditionalRowStyles}\r\n            rowsPerPage={props.rowsPerPage}\r\n            onSelectionHandle={props.onSelectionHandle}\r\n            onRowClick={props.onRowClick}\r\n            parentComponent={props.parentComponent}\r\n            terminalsToShow={props.terminalsToShow}\r\n            singleSelection={props.singleSelection}\r\n            selectedItems={props.selectedItems}\r\n        />\r\n    )\r\n}\r\n\r\nWijmoGridComposite.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n    exportRequired: PropTypes.bool.isRequired,\r\n    exportFileName: PropTypes.string,\r\n    selectionRequired: PropTypes.bool,\r\n    columnPickerRequired: PropTypes.bool,\r\n    columnGroupingRequired: PropTypes.bool,\r\n    conditionalRowStyleCheck: PropTypes.func,\r\n    conditionalRowStyles: PropTypes.object,\r\n    rowsPerPage: PropTypes.number,\r\n    onSelectionHandle: PropTypes.func,\r\n    parentComponent: PropTypes.string.isRequired,\r\n    onRowClick: PropTypes.func,\r\n    terminalsToShow: PropTypes.number,\r\n    singleSelection: PropTypes.bool,\r\n    selectedItems: PropTypes.array\r\n}\r\n\r\nexport default WijmoGridComposite;","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nMarineReceiptSummaryPageComposite.defaultProps = {\r\n  pageSize: 10,\r\n  terminalsToShow: 2,\r\n  tableData: [],\r\n  columnDetails: [],\r\n  selectedItems: [],\r\n};\r\n\r\nexport function MarineReceiptSummaryPageComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  selectionRequired,\r\n  terminalsToShow,\r\n  selectedItems,\r\n  onSelectionChange,\r\n  onRowClick,\r\n  parentComponent,\r\n}) {\r\n  return (\r\n    <WijmoGridComposite\r\n    data={tableData}\r\n    columns={columnDetails}\r\n    rowsPerPage={pageSize}\r\n    exportRequired={exportRequired}\r\n    exportFileName={exportFileName}\r\n    columnPickerRequired={columnPickerRequired}\r\n    columnGroupingRequired={columnGroupingRequired}\r\n    selectionRequired={selectionRequired}\r\n    selectedItems={selectedItems}\r\n    onSelectionHandle={onSelectionChange}\r\n    onRowClick={onRowClick}\r\n    parentComponent={parentComponent}\r\n    terminalsToShow={terminalsToShow}\r\n  ></WijmoGridComposite>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { MarineReceiptSummaryPageComposite } from \"../Summary/MarineReceiptSummaryComposite.jsx\";\r\nimport MarineReceiptDetailsComposite from \"../Details/MarineReceiptDetailsComposite\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestApis from \"../../../JS/RestApis\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../../CSS/styles.css\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport ReportDetails from \"../../UIBase/Details/ReportDetails\";\r\nimport {\r\n  functionGroups,\r\n  fnMarineReceipt,\r\n  fnMarineReceiptByCompartment,\r\n  fnPrintMarineRAN,\r\n  fnPrintMarineBOD,\r\n  fnViewMarineUnloadingDetails,\r\n  fnViewMarineReceiptAuditTrail,\r\n  fnCloseMarineReceipt,\r\n  fnKPIInformation,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TMTransactionFilters } from \"../../UIBase/Common/TMTransactionFilters\";\r\nimport MarineReceiptViewAuditTrailComposite from \"../Details/MarineReceiptViewAuditTrailDetailsComposite\";\r\nimport MarineReceiptLoadingDetails from \"../../UIBase/Details/MarineReceiptLoadingDetails\";\r\nimport { Button, Input, Modal } from \"@scuf/common\";\r\nimport lodash from \"lodash\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { marineReceiptValidationDef } from \"../../../JS/ValidationDef\";\r\nimport MarineReceiptManualEntryDetailsComposite from \"../Details/MarineReceiptManualEntryDetailsComposite\";\r\nimport TransactionSummaryOperations from \"../Common/TransactionSummaryOperations\";\r\n//import TransactionSummaryOperationsMarine from \"../Common/TransactionSummaryOperationsMarine\";\r\nimport { kpiMarineReceiptList } from \"../../../JS/KPIPageName\";\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass MarineReceiptComposite extends Component {\r\n  state = {\r\n    receiptItem: {},\r\n    receipt: {},\r\n    isDetails: \"false\",\r\n    isReadyToRender: false,\r\n    isDetailsModified: \"false\",\r\n    operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    receiptNextOperations: [],\r\n    isViewUnloading: false,\r\n    ViewUnloadingData: [],\r\n    ViewUnloadingHideFields: [],\r\n    isViewAudit: false,\r\n    currentReceiptStatuses: [],\r\n    lastStatus: \"\",\r\n    selectedShareholder: \"\",\r\n    data: {},\r\n    terminalCodes: [],\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    dateError: \"\",\r\n    isOperation: false,\r\n    marinePanle: false,\r\n    openReceipt: false,\r\n    reason: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      marineReceiptValidationDef\r\n    ),\r\n    marineReceiptBtnStatus: false,\r\n    marineReceiptBtnCloseOK: false,\r\n    viewTab: 0,\r\n    isMarinReceiptManualEntry: false,\r\n    drawerStatus: false,\r\n    showReport: false,\r\n    marineReceiptKPIList: [],\r\n    // updateEnableForConfigure: false,\r\n    deleteEnableForConfigure: [],\r\n    activityInfo: [],\r\n\r\n    showDeleteAuthenticationLayout: false,\r\n    showAuthorizeToUnLoadAuthenticationLayout: false,\r\n    showCloseReceiptAuthenticationLayout: false,\r\n    showViewBODAuthenticationLayout: false,\r\n    showPrintBODAuthenticationLayout: false,\r\n    showRANAuthenticationLayout: false,\r\n  };\r\n\r\n  componentName = \"MarineReceiptComponent\";\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({ isDetails: \"false\" }, () => {\r\n        this.setState({\r\n          drawerStatus: false,\r\n          viewTab: 0,\r\n          isDetails: \"true\",\r\n          marinePanle: false,\r\n          isReadyToRender: false,\r\n          selectedRow: {},\r\n          operationsVisibilty,\r\n          // updateEnableForConfigure: true,\r\n          deleteEnableForConfigure: [],\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.log(\"MarineReceiptComposite:Error occured on handleAdd\");\r\n    }\r\n  };\r\n\r\n  handleDelete = () => {\r\n    this.handleAuthenticationClose();\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty, deleteEnableForConfigure: [] });\r\n      var deleteMarineReceiptKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        var MarineReceiptCode = this.state.selectedItems[i][\"Common_Code\"];\r\n        var KeyData = {\r\n          KeyCodes: [\r\n            { Key: KeyCodes.marineReceiptCode, Value: MarineReceiptCode },\r\n          ],\r\n        };\r\n        deleteMarineReceiptKeys.push(KeyData);\r\n      }\r\n\r\n      axios(\r\n        RestApis.MarineReceiptDeleteMarineReceipt,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteMarineReceiptKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          // var isRefreshDataRequire = result.isSuccess;\r\n          // if (\r\n          //   response.ResultDataList !== null &&\r\n          //   result.ResultDataList !== undefined\r\n          // ) {\r\n          //   var failedResultsCount = result.ResultDataList.filter(function (\r\n          //     res\r\n          //   ) {\r\n          //     console.info(res)\r\n          //     return !res.isSuccess;\r\n          //   }).length;\r\n          //   if (failedResultsCount === result.ResultDataList.length) {\r\n          //     isRefreshDataRequire = false;\r\n          //   } else isRefreshDataRequire = true;\r\n          // }\r\n          var notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"Receipt_DeletionStatus\",\r\n            [\"MarineReceiptCode\"]\r\n          );\r\n          // if (isRefreshDataRequire) {\r\n          this.getMarineReceiptList();\r\n          this.getKPIList();\r\n          operationsVisibilty.delete = false;\r\n          this.setState(\r\n            {\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              deleteEnableForConfigure: [],\r\n              selectedRow: {},\r\n              isDetails: \"false\",\r\n            },\r\n            () => {\r\n              if (this.state.marinePanle) {\r\n                this.setState({\r\n                  isDetails: \"true\",\r\n                  marinePanle: false,\r\n                  isReadyToRender: false,\r\n                });\r\n              }\r\n            }\r\n          );\r\n          // }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0) {\r\n              messageResult.keyFields[0] = \"ReceiptCode\";\r\n            }\r\n          });\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    } catch (error) {\r\n      console.log(\"MarineReceiptComposite:Error occured on handleDelete\");\r\n    }\r\n  };\r\n\r\n  handleRangeSelect = ({ to, from }) => {\r\n    if (to !== undefined) this.setState({ toDate: to });\r\n    if (from !== undefined) this.setState({ fromDate: from });\r\n  };\r\n\r\n  handleDateTextChange = (value, error) => {\r\n    if (value === \"\")\r\n      this.setState({ dateError: \"\", toDate: \"\", fromDate: \"\" });\r\n    if (error !== null && error !== \"\")\r\n      this.setState({\r\n        dateError: \"Common_InvalidDate\",\r\n        toDate: \"\",\r\n        fromDate: \"\",\r\n      });\r\n    else {\r\n      this.setState({ dateError: \"\", toDate: value.to, fromDate: value.from });\r\n    }\r\n  };\r\n\r\n  handleLoadOrders = () => {\r\n    let error = Utilities.validateDateRange(\r\n      this.state.toDate,\r\n      this.state.fromDate\r\n    );\r\n\r\n    if (error !== \"\") {\r\n      this.setState({ dateError: error });\r\n    } else {\r\n      this.setState({ dateError: \"\" });\r\n      this.getMarineReceiptList();\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnMarineReceiptByCompartment\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      this.setState({\r\n        isDetails: \"false\",\r\n        marinePanle: false,\r\n        isViewDetails: \"false\",\r\n        isViewUnloading: \"false\",\r\n        isViewAudit: \"false\",\r\n        isMarinReceiptManualEntry: \"false\",\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        ViewUnloadingData: [],\r\n        ViewUnloadingHideFields: [],\r\n        operationsVisibilty,\r\n        deleteEnableForConfigure: [],\r\n        drawerStatus: false,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getMarineReceiptList();\r\n      this.getKPIList();\r\n    } catch (error) {\r\n      console.log(\"MarineReceiptComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n\r\n  handleBackPage = () => {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineReceiptCode,\r\n        value: this.state.receiptItem.Common_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetMarineReceipt,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var item = {\r\n            Common_Code: result.EntityResult.ReceiptCode,\r\n            MarineReceiptByCompartmentList_ReceiptStatus:\r\n              result.EntityResult.ReceiptStatus,\r\n          };\r\n          try {\r\n            var { operationsVisibilty } = { ...this.state };\r\n            operationsVisibilty.add = Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnMarineReceiptByCompartment\r\n            );\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              isDetails: \"true\",\r\n              marinePanle: true,\r\n              isViewDetails: \"false\",\r\n              isViewUnloading: \"false\",\r\n              isViewAudit: \"false\",\r\n              isMarinReceiptManualEntry: \"false\",\r\n              ViewUnloadingData: [],\r\n              ViewUnloadingHideFields: [],\r\n              operationsVisibilty,\r\n              deleteEnableForConfigure: [],\r\n              isReadyToRender: false,\r\n            });\r\n            this.GetReceiptStatusOperations(item);\r\n            this.GetMarineReceiptAllStatuses(item);\r\n            // this.GetViewAllMarineReceiptCustomData(item, true);\r\n            this.setState({ isOperation: true });\r\n          } catch (error) {\r\n            console.log(\r\n              \"MarineReceiptComposite:Error occured on Back click\",\r\n              error\r\n            );\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => { });\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      if (\r\n        !Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.view,\r\n          fnMarineReceiptByCompartment\r\n        )\r\n      ) {\r\n        var notification = {\r\n          messageType: \"critical\",\r\n          message: \"ReceiptCompDetail_Permission\",\r\n          messageResultDetails: [\r\n            {\r\n              keyFields: \"\",\r\n              keyValues: \"\",\r\n              isSuccess: false,\r\n              errorMessage: \"ReceiptCompDetail_ViewReceiptPermission\",\r\n            },\r\n          ],\r\n        };\r\n        this.savedEvent(item, \"Permission\", notification);\r\n        return;\r\n      }\r\n      var { operationsVisibilty, activityInfo } = { ... this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnMarineReceiptByCompartment\r\n      );\r\n      // operationsVisibilty.delete = Utilities.isInFunction(\r\n      //   this.props.userDetails.EntityResult.FunctionsList,\r\n      //   functionGroups.remove,\r\n      //   fnMarineReceipt\r\n      // )&&deleteEnableForConfigure;\r\n\r\n      let receiptDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ReceiptActivityInfo.MARINE_RECEIPT_ENABLE_DELETE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      var receiptDeleteStates = [];\r\n\r\n      if (\r\n        receiptDeleteInfo !== undefined &&\r\n        receiptDeleteInfo.length > 0\r\n      )\r\n        receiptDeleteStates =\r\n          receiptDeleteInfo[0].ReceiptStates;\r\n\r\n      operationsVisibilty.delete = this.props.userDetails\r\n        .EntityResult.IsWebPortalUser\r\n        ? false\r\n        : receiptDeleteStates.indexOf(\r\n          item.MarineReceiptByCompartmentList_ReceiptStatus.toUpperCase()\r\n        ) > -1 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnMarineReceiptByCompartment\r\n        );\r\n\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: \"true\",\r\n        marinePanle: true,\r\n        selectedRow: item,\r\n        receiptItem: item,\r\n        selectedItems: [item],\r\n        operationsVisibilty,\r\n      });\r\n      this.GetReceiptStatusOperations(item);\r\n      this.GetMarineReceiptAllStatuses(item);\r\n      this.getReceipt(item);\r\n      // this.GetViewAllMarineReceiptCustomData(item, true);\r\n      this.setState({ isOperation: true });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptComposite:Error occured on handleRowClick\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleSelection = (items) => {\r\n    this.setState({ receiptItem: items[0], selectedItems: items, });\r\n    // let isReady =\r\n    //   items.findIndex(\r\n    //     (x) =>\r\n    //       x.MarineReceiptByCompartmentList_ReceiptStatus.toUpperCase() ===\r\n    //       Constants.Shipment_Status.READY\r\n    //   ) >= 0;\r\n    try {\r\n      var { operationsVisibilty, drawerStatus, activityInfo } = { ...this.state };\r\n      if (items.length === 0) {\r\n        operationsVisibilty.delete = false;\r\n      }\r\n\r\n      let receiptDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ReceiptActivityInfo.MARINE_RECEIPT_ENABLE_DELETE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      var receiptDeleteStates = [];\r\n\r\n      if (\r\n        receiptDeleteInfo !== undefined &&\r\n        receiptDeleteInfo.length > 0\r\n      )\r\n        receiptDeleteStates =\r\n          receiptDeleteInfo[0].ReceiptStates;\r\n\r\n      let isReady =\r\n        items.findIndex(\r\n          (x) =>\r\n            receiptDeleteStates.indexOf(\r\n              x.MarineReceiptByCompartmentList_ReceiptStatus.toUpperCase()\r\n            ) < 0\r\n        ) >= 0\r\n          ? false\r\n          : true;\r\n\r\n      operationsVisibilty.delete = this.props.userDetails.EntityResult\r\n        .IsWebPortalUser\r\n        ? false\r\n        : isReady &&\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnMarineReceiptByCompartment\r\n        );\r\n\r\n      // operationsVisibilty.delete =\r\n      //   isReady &&\r\n      //   items.length > 0 &&\r\n      //   Utilities.isInFunction(\r\n      //     this.props.userDetails.EntityResult.FunctionsList,\r\n      //     functionGroups.remove,\r\n      //     fnMarineReceipt\r\n      //   );\r\n      drawerStatus = false;\r\n      this.setState({\r\n        operationsVisibilty,\r\n        deleteEnableForConfigure: [],\r\n        isOperation: false,\r\n        marinePanle: false,\r\n        drawerStatus,\r\n      });\r\n      // for (let i = 0; i < items.length; i++) {\r\n      //   this.GetViewAllMarineReceiptCustomData(items[i], false);\r\n      // }\r\n      if (items.length === 1) {\r\n        this.GetReceiptStatusOperations(items[0]);\r\n        this.GetMarineReceiptAllStatuses(items[0]);\r\n        this.getReceipt(items[0]);\r\n        this.setState({ isOperation: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptComposite:Error occured on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDetailsPageClick = (item) => {\r\n    try {\r\n      if (\r\n        !Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.view,\r\n          fnMarineReceiptByCompartment\r\n        )\r\n      ) {\r\n        var notification = {\r\n          messageType: \"critical\",\r\n          message: \"ReceiptCompDetail_Permission\",\r\n          messageResultDetails: [\r\n            {\r\n              keyFields: \"\",\r\n              keyValues: \"\",\r\n              isSuccess: false,\r\n              errorMessage: \"ReceiptCompDetail_ViewReceiptPermission\",\r\n            },\r\n          ],\r\n        };\r\n        this.savedEvent(item, \"Permission\", notification);\r\n        return;\r\n      }\r\n      var { operationsVisibilty } = this.state;\r\n      // operationsVisibilty.add = Utilities.isInFunction(\r\n      //   this.props.userDetails.EntityResult.FunctionsList,\r\n      //   functionGroups.add,\r\n      //   fnMarineReceipt\r\n      // );\r\n      // operationsVisibilty.delete = Utilities.isInFunction(\r\n      //   this.props.userDetails.EntityResult.FunctionsList,\r\n      //   functionGroups.remove,\r\n      //   fnMarineReceipt\r\n      // )&&deleteEnableForConfigure;\r\n      operationsVisibilty.shareholder = false;\r\n      if (item.MarineReceiptByCompartmentList_ReceiptStatus !== undefined) {\r\n        this.GetReceiptStatusOperations(item);\r\n      }\r\n      this.GetMarineReceiptAllStatuses(item);\r\n      // this.GetViewAllMarineReceiptCustomData(item, true);\r\n      this.setState(\r\n        {\r\n          isDetails: \"true\",\r\n          marinePanle: true,\r\n          viewTab: 2,\r\n          selectedRow: item,\r\n          // selectedItems: [item],\r\n          operationsVisibilty,\r\n          receiptItem: item,\r\n        },\r\n        () => {\r\n          this.setState({ isOperation: true });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptComposite:Error occured on handleRowClick\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getReceipt(receiptRow) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineReceiptCode,\r\n        value: receiptRow.Common_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetMarineReceipt,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            receipt: result.EntityResult,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Receipt:\", error, receiptRow);\r\n      });\r\n  }\r\n\r\n  GetReceiptStatusOperations(items) {\r\n    try {\r\n      axios(\r\n        RestApis.GetMarineReceiptOperations +\r\n        \"?MarineReceiptStatus=\" +\r\n        items.MarineReceiptByCompartmentList_ReceiptStatus,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          let nextOperations = [];\r\n          Object.keys(result.EntityResult).forEach((operation) => {\r\n            if (result.EntityResult[operation]) {\r\n              nextOperations.push(operation);\r\n            }\r\n          });\r\n          if (this.props.userDetails.EntityResult.IsWebPortalUser) {\r\n            let filteredOptions = nextOperations.filter(function (item) {\r\n              return (\r\n                item !==\r\n                Constants.ViewAllReceiptOperations.ViewReceipt_PrintRAN &&\r\n                item !== Constants.ViewAllReceiptOperations.ViewReceipt_PrintBOD\r\n              );\r\n            });\r\n            nextOperations = filteredOptions;\r\n          }\r\n          if (this.props.userDetails.EntityResult.IsArchived) {\r\n            let filteredOptions = nextOperations.filter(function (item) {\r\n              return (\r\n                item ===\r\n                Constants.ViewAllReceiptOperations.ViewReceipt_ViewBOD ||\r\n                item ===\r\n                Constants.ViewAllReceiptOperations\r\n                  .ViewReceipt_ViewTransactions ||\r\n                item ===\r\n                Constants.ViewAllReceiptOperations\r\n                  .ViewReceipt_AuthorizeToUnload\r\n              );\r\n            });\r\n            nextOperations = filteredOptions;\r\n          }\r\n          let results = nextOperations.filter((item) => {\r\n            if (\r\n              item ===\r\n              Constants.ViewAllReceiptOperations.ViewReceipt_ViewTransactions\r\n            ) {\r\n              if (\r\n                Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.view,\r\n                  fnViewMarineUnloadingDetails\r\n                )\r\n              ) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n\r\n            if (\r\n              item ===\r\n              Constants.ViewAllReceiptOperations.ViewReceipt_ViewAuditTrail\r\n            ) {\r\n              if (\r\n                Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.view,\r\n                  fnViewMarineReceiptAuditTrail\r\n                )\r\n              ) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n\r\n            if (\r\n              item === Constants.ViewAllReceiptOperations.ViewReceipt_PrintRAN\r\n            ) {\r\n              if (\r\n                Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.view,\r\n                  fnPrintMarineRAN\r\n                )\r\n              ) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n\r\n            if (\r\n              item ===\r\n              Constants.ViewAllReceiptOperations.ViewReceipt_CloseReceipt\r\n            ) {\r\n              if (\r\n                Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.modify,\r\n                  fnCloseMarineReceipt\r\n                )\r\n              ) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n\r\n            if (\r\n              item === Constants.ViewAllReceiptOperations.ViewReceipt_PrintBOD\r\n            ) {\r\n              if (\r\n                Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.view,\r\n                  fnPrintMarineBOD\r\n                )\r\n              ) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n\r\n            if (\r\n              item === Constants.ViewAllReceiptOperations.ViewReceipt_ViewBOD\r\n            ) {\r\n              if (\r\n                Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.view,\r\n                  fnPrintMarineBOD\r\n                )\r\n              ) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n\r\n            return true;\r\n          });\r\n          if (\r\n            !this.props.userDetails.EntityResult.IsEnterpriseNode &&\r\n            items.MarineReceiptByCompartmentList_ReceiptStatus !== \"READY\" &&\r\n            items.localTerminalCode === null\r\n          ) {\r\n            results = [];\r\n          }\r\n          this.setState({\r\n            receiptNextOperations: results,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting GetReceiptStatusOperations:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  GetMarineReceiptAllStatuses(item) {\r\n    axios(\r\n      RestApis.GetMarineReceiptAllStatuses +\r\n      \"?MarineReceiptCode=\" +\r\n      item[\"Common_Code\"] +\r\n      \"&ShipmentType=\" +\r\n      \"COMPARTMENT\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            currentReceiptStatuses: result.EntityResult,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      var { operationsVisibilty, activityInfo } = { ...this.state };\r\n\r\n      let receiptDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ReceiptActivityInfo.MARINE_RECEIPT_ENABLE_DELETE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      var receiptDeleteStates = [];\r\n\r\n      if (\r\n        receiptDeleteInfo !== undefined &&\r\n        receiptDeleteInfo.length > 0\r\n      )\r\n        receiptDeleteStates =\r\n          receiptDeleteInfo[0].ReceiptStates;\r\n\r\n\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnMarineReceiptByCompartment\r\n        );\r\n        // operationsVisibilty.delete = data.ReceiptStatus === \"READY\";\r\n        if (data !== null && data !== '') {\r\n          operationsVisibilty.delete = this.props.userDetails.EntityResult.IsWebPortalUser ? false\r\n            : receiptDeleteStates.indexOf(data.ReceiptStatus.toUpperCase()) > -1 &&\r\n            Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.remove,\r\n              fnMarineReceiptByCompartment\r\n            );\r\n          this.setState({ isDetailsModified: \"true\", operationsVisibilty });\r\n        }\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\" && data !== null && data !== '') {\r\n        var selectedItems = [\r\n          {\r\n            MarineReceiptCode: data.ReceiptCode,\r\n            Common_Shareholder:\r\n              data.RailMarineReceiptCompartmentDetailPlanList[0]\r\n                .ShareholderCode,\r\n            Common_Code: data.ReceiptCode,\r\n            MarineReceiptByCompartmentList_ReceiptStatus: data.ReceiptStatus,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"MarineReceiptComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  handleClickRefresh(item) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineReceiptCode,\r\n        value: item.ReceiptCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetMarineReceipt,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let dataItem = {\r\n            Common_Code: result.EntityResult.ReceiptCode,\r\n            MarineReceiptByCompartmentList_ReceiptStatus:\r\n              result.EntityResult.ReceiptStatus,\r\n          };\r\n          this.setState(\r\n            {\r\n              isDetails: \"false\",\r\n              marinePanle: false,\r\n            },\r\n            () => {\r\n              this.setState({\r\n                receiptItem: dataItem,\r\n              });\r\n              this.handleDetailsPageClick(dataItem);\r\n              this.GetReceiptStatusOperations(dataItem);\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Receipt:\", error);\r\n      });\r\n  }\r\n\r\n  handlePageAdd = (item) => {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineReceiptCode,\r\n        value: item.ReceiptCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetMarineReceipt,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let dataItem = {\r\n            Common_Code: result.EntityResult.ReceiptCode,\r\n            MarineReceiptByCompartmentList_ReceiptStatus:\r\n              result.EntityResult.ReceiptStatus,\r\n          };\r\n          this.setState(\r\n            {\r\n              isDetails: \"false\",\r\n              marinePanle: false,\r\n            },\r\n            () => {\r\n              this.setState({\r\n                isDetails: \"true\",\r\n                marinePanle: true,\r\n                receiptItem: [dataItem],\r\n              });\r\n              this.handleRowClick(dataItem);\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Receipt:\", error);\r\n      });\r\n  };\r\n\r\n  getMarineReceiptList() {\r\n    this.setState({ isReadyToRender: false });\r\n    let fromDate = new Date(this.state.fromDate);\r\n    let toDate = new Date(this.state.toDate);\r\n    fromDate.setHours(0, 0, 0);\r\n    toDate.setHours(23, 59, 59);\r\n    let obj = {\r\n      startRange: fromDate,\r\n      endRange: toDate,\r\n      TransportationType: Constants.TransportationType.MARINE,\r\n    };\r\n    axios(\r\n      RestApis.GetMarineReceiptListForRole,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            { data: result.EntityResult, isReadyToRender: true },\r\n            () => {\r\n              if (\r\n                this.state.isOperation === true &&\r\n                this.state.selectedItems.length === 1\r\n              ) {\r\n                let selectedItem = this.state.selectedItems[0];\r\n                var updatedselectedItem = result.EntityResult.Table.filter(\r\n                  function (item) {\r\n                    return item.Common_Code === selectedItem.Common_Code;\r\n                  }\r\n                );\r\n\r\n                let { operationsVisibilty, activityInfo } = { ...this.state }\r\n\r\n                let receiptDeleteInfo = activityInfo.filter((item) => {\r\n                  return (\r\n                    item.ActivityCode ===\r\n                    Constants.ReceiptActivityInfo.MARINE_RECEIPT_ENABLE_DELETE &&\r\n                    item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n                  );\r\n                });\r\n\r\n                var receiptDeleteStates = [];\r\n\r\n                if (\r\n                  receiptDeleteInfo !== undefined &&\r\n                  receiptDeleteInfo.length > 0\r\n                )\r\n                  receiptDeleteStates =\r\n                    receiptDeleteInfo[0].ReceiptStates;\r\n\r\n                operationsVisibilty.delete = this.props.userDetails\r\n                  .EntityResult.IsWebPortalUser\r\n                  ? false\r\n                  : receiptDeleteStates.indexOf(\r\n                    updatedselectedItem[0].MarineReceiptByCompartmentList_ReceiptStatus.toUpperCase()\r\n                  ) > -1 &&\r\n                  Utilities.isInFunction(\r\n                    this.props.userDetails.EntityResult.FunctionsList,\r\n                    functionGroups.remove,\r\n                    fnMarineReceiptByCompartment\r\n                  );\r\n\r\n                this.setState({\r\n                  selectedItems: updatedselectedItem,\r\n                  receiptItem: updatedselectedItem[0],\r\n                  operationsVisibilty\r\n                });\r\n                this.GetReceiptStatusOperations(updatedselectedItem[0]);\r\n                this.GetMarineReceiptAllStatuses(updatedselectedItem[0]);\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\r\n            \"Error in GetMarineReceiptListForRole:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: [], isReadyToRender: true });\r\n        console.log(\"Error while geting MarineReceipt List:\", error);\r\n      });\r\n  }\r\n\r\n  getTerminalsList(shareholder) {\r\n    try {\r\n      if (shareholder !== null && shareholder !== \"\") {\r\n        axios(\r\n          RestApis.GetTerminals,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            [shareholder],\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ terminalCodes: response.data.EntityResult });\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ terminalCodes: [] });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptComposite:Error occured on getTerminalsList\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnMarineReceiptByCompartment\r\n      );\r\n      this.setState({\r\n        operationsVisibilty,\r\n        selectedShareholder:\r\n          this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      });\r\n      this.getTerminalsList(\r\n        this.props.userDetails.EntityResult.PrimaryShareholder\r\n      );\r\n      this.getMarineReceiptList(\r\n        this.props.userDetails.EntityResult.PrimaryShareholder\r\n      );\r\n      this.getKPIList();\r\n      this.GetReceiptActivityInfo();\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n    // clear session storage on window refresh event\r\n    window.addEventListener(\"beforeunload\", this.clearStorage)\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    // clear session storage\r\n    this.clearStorage();\r\n\r\n    // remove event listener\r\n    window.removeEventListener(\"beforeunload\", this.clearStorage)\r\n  }\r\n\r\n  clearStorage = () => {\r\n    sessionStorage.removeItem(this.componentName + \"GridState\");\r\n  }\r\n\r\n  GetReceiptActivityInfo() {\r\n    try {\r\n      axios(\r\n        RestApis.GetReceiptActivityInfo,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ activityInfo: response.data.EntityResult });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting receipt activityInfo:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in GetReceiptActivityInfo:\", error);\r\n    }\r\n  }\r\n\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      this.setState({ selectedShareholder: shareholder });\r\n      this.getMarineReceiptList(shareholder);\r\n      this.getTerminalsList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getTransportationType() {\r\n    var transportationType = Constants.TransportationType.MARINE;\r\n    const { itemProps } = this.props.activeItem;\r\n    if (itemProps !== undefined && itemProps.transportationType !== undefined) {\r\n      transportationType = itemProps.transportationType;\r\n    }\r\n    return transportationType;\r\n  }\r\n\r\n  handleModalBack = () => {\r\n    this.setState({ showReport: false });\r\n  };\r\n  renderModal() {\r\n    let path = null;\r\n    if (this.props.userDetails.EntityResult.IsArchived) {\r\n      path = \"TM/\" + Constants.TMReportArchive + \"/MarineBOD\";\r\n    } else {\r\n      path = \"TM/\" + Constants.TMReports + \"/MarineBOD\";\r\n    }\r\n    let paramValues = {\r\n      Culture: this.props.userDetails.EntityResult.UICulture,\r\n      //ShareholderCode: this.state.selectedShareholder,\r\n      ReceiptCode:\r\n        this.state.selectedItems.length === 1\r\n          ? this.state.selectedItems[0].Common_Code\r\n          : this.state.selectedRow.Common_Code,\r\n    };\r\n\r\n    return (\r\n      <ReportDetails\r\n        showReport={this.state.showReport}\r\n        handleBack={this.handleModalBack}\r\n        handleModalClose={this.handleModalBack}\r\n        // proxyServerHost=\"http://epksr5115dit:3625/TMWebAPI/\"\r\n        proxyServerHost={RestApis.WebAPIURL}\r\n        reportServiceHost={this.reportServiceURI}\r\n        filePath={path}\r\n        parameters={paramValues}\r\n      />\r\n    );\r\n  }\r\n\r\n  viewBODClick = () => {\r\n    let showViewBODAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showViewBODAuthenticationLayout, }, () => {\r\n      if (showViewBODAuthenticationLayout === false) {\r\n        this.handleViewBOD();\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  handleViewBOD = () => {\r\n    if (this.reportServiceURI === undefined) {\r\n      axios(\r\n        RestApis.GetReportServiceURI,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        if (response.data.IsSuccess) {\r\n          this.reportServiceURI = response.data.EntityResult;\r\n          this.setState({ showReport: true });\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ showReport: true });\r\n    }\r\n  };\r\n\r\n  handleOperationClick = (operation) => {\r\n    this.setState({ marineReceiptBtnStatus: true });\r\n    setTimeout(() => {\r\n      this.setState({ marineReceiptBtnStatus: false });\r\n    }, 800);\r\n\r\n    if (\r\n      operation ===\r\n      Constants.ViewAllReceiptOperations.ViewReceipt_ViewTransactions\r\n    ) {\r\n      if (\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.view,\r\n          fnViewMarineUnloadingDetails\r\n        )\r\n      ) {\r\n        this.getMarineUnLoadingDetails(this.state.receiptItem);\r\n      }\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllReceiptOperations.ViewReceipt_ViewAuditTrail\r\n    ) {\r\n      if (\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.view,\r\n          fnViewMarineReceiptAuditTrail\r\n        )\r\n      ) {\r\n        this.getMarineAuditTrail(this.state.receiptItem);\r\n      }\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllReceiptOperations.ViewReceipt_AuthorizeToUnload\r\n    ) {\r\n      this.authorizeToUnloadClick();\r\n    } else if (\r\n      operation === Constants.ViewAllReceiptOperations.ViewReceipt_PrintRAN\r\n    ) {\r\n      if (\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.view,\r\n          fnPrintMarineRAN\r\n        )\r\n      ) {\r\n        this.PrintRANClick();\r\n      }\r\n    } else if (\r\n      operation === Constants.ViewAllReceiptOperations.ViewReceipt_CloseReceipt\r\n    ) {\r\n      if (\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.modify,\r\n          fnCloseMarineReceipt\r\n        )\r\n      ) {\r\n        this.setState({ openReceipt: true });\r\n      }\r\n    } else if (\r\n      operation === Constants.ViewAllReceiptOperations.ViewReceipt_PrintBOD\r\n    ) {\r\n      if (\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.view,\r\n          fnPrintMarineBOD\r\n        )\r\n      ) {\r\n        this.PrintBODClick();\r\n      }\r\n    } else if (\r\n      operation === Constants.ViewAllReceiptOperations.ViewReceipt_BISOutbound\r\n    ) {\r\n      this.getMarineBISOutbound(this.state.receiptItem);\r\n    } else if (\r\n      operation === Constants.ViewAllReceiptOperations.ViewReceipt_ManualEntry\r\n    ) {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.delete = false;\r\n      this.setState(\r\n        {\r\n          isMarinReceiptManualEntry: \"true\",\r\n          operationsVisibilty,\r\n          deleteEnableForConfigure: [],\r\n        },\r\n        () => { }\r\n      );\r\n    } else if (\r\n      operation === Constants.ViewAllReceiptOperations.ViewReceipt_ViewBOD\r\n    ) {\r\n      if (\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.view,\r\n          fnPrintMarineBOD\r\n        )\r\n      ) {\r\n        this.viewBODClick();\r\n      }\r\n    }\r\n  };\r\n\r\n  onTabChange = (activeIndex) => {\r\n    this.setState({\r\n      viewTab: activeIndex,\r\n    });\r\n  };\r\n\r\n  handleDrawer = () => {\r\n    var drawerStatus = lodash.cloneDeep(this.state.drawerStatus);\r\n    this.setState({\r\n      drawerStatus: !drawerStatus,\r\n    });\r\n  };\r\n\r\n  getMarineUnLoadingDetails(item) {\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"Receipt_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ReceiptCompDetail_ShipmentNumber\"],\r\n          keyValues: [item.Common_Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    try {\r\n      axios(\r\n        RestApis.GetMarineReceiptUnLoadingDetails +\r\n        \"?MarineReceiptCode=\" +\r\n        item[\"Common_Code\"],\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ ViewUnloadingData: result.EntityResult });\r\n            var { operationsVisibilty } = { ...this.state };\r\n            operationsVisibilty.delete = false;\r\n            operationsVisibilty.add = false;\r\n            operationsVisibilty.shareholder = false;\r\n            this.setState({\r\n              isViewUnloading: \"true\",\r\n              isViewDetails: \"false\",\r\n              operationsVisibilty,\r\n              deleteEnableForConfigure: [],\r\n            });\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0] + Constants.delimiter + item.Common_Code;\r\n            this.savedEvent(\"\", \"\", notification);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n\r\n      axios(\r\n        RestApis.GetMarineUnLoadingDetailConfigFields +\r\n        \"?MarineReceiptCode=\" +\r\n        item[\"Common_Code\"],\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({ ViewUnloadingHideFields: result.EntityResult });\r\n          } else {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0] + Constants.delimiter + item.Common_Code;\r\n            this.savedEvent(\"\", \"\", notification);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  getMarineAuditTrail(item) {\r\n    var { operationsVisibilty } = { ...this.state };\r\n\r\n    operationsVisibilty.delete = false;\r\n    operationsVisibilty.shareholder = false;\r\n    operationsVisibilty.add = false;\r\n    this.setState({\r\n      isViewAudit: \"true\",\r\n      isViewDetails: \"false\",\r\n      operationsVisibilty,\r\n      deleteEnableForConfigure: [],\r\n    });\r\n  }\r\n\r\n  authorizeToUnloadClick = () => {\r\n    let showAuthorizeToUnLoadAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showAuthorizeToUnLoadAuthenticationLayout, }, () => {\r\n      if (showAuthorizeToUnLoadAuthenticationLayout === false) {\r\n        this.authorizeToUnload();\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n\r\n  authorizeToUnload = () => {\r\n    this.handleAuthenticationClose();\r\n    var item = lodash.cloneDeep(this.state.selectedItems[0]);\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineReceiptCode,\r\n        value: item.Common_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.receiptStatus,\r\n        value: item.MarineReceiptByCompartmentList_ReceiptStatus,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    var notification = {\r\n      messageType: \"success\",\r\n      message: \"ViewMarineReceipt_AuthorizeUnLoad_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ReceiptCompDetail_ShipmentNumber\"],\r\n          keyValues: [item.Common_Code],\r\n          isSuccess: true,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestApis.MarineReceiptAuthorizeToUnLoad,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (this.state.isDetails === \"true\") {\r\n            // this.componentDidMount();\r\n            var selectItem = {\r\n              ReceiptCode: this.state.selectedItems[0].Common_Code,\r\n            };\r\n            this.handleClickRefresh(selectItem);\r\n            this.setState(\r\n              {\r\n                isDetails: \"false\",\r\n                marinePanle: false,\r\n              },\r\n              () => {\r\n                this.setState({\r\n                  isDetails: \"true\",\r\n                  marinePanle: true,\r\n                });\r\n              }\r\n            );\r\n          } else {\r\n            this.getMarineReceiptList();\r\n          }\r\n          this.savedEvent(\"\", \"\", notification);\r\n        } else {\r\n          notification.messageType = \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = false;\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0] + Constants.delimiter + item.Common_Code;\r\n          this.savedEvent(\"\", \"\", notification);\r\n          console.log(\"Error in AuthorizeToUnLoad:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while AuthorizeToUnLoad:\", error);\r\n      });\r\n  }\r\n\r\n  PrintRANClick = () => {\r\n    let showRANAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showRANAuthenticationLayout, }, () => {\r\n      if (showRANAuthenticationLayout === false) {\r\n        this.PrintRAN();\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  PrintRAN = () => {\r\n    this.handleAuthenticationClose();\r\n    let item = this.state.receiptItem;\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineReceiptCode,\r\n        value: item[\"Common_Code\"],\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    var notification = {\r\n      messageType: \"success\",\r\n      message: \"Receipt_PrintStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ReceiptCompDetail_ShipmentNumber\"],\r\n          keyValues: [item[\"Common_Code\"]],\r\n          isSuccess: true,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestApis.MarineReceiptPrintRAN,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (this.state.isDetails === \"true\") {\r\n            this.componentDidMount();\r\n            this.setState(\r\n              {\r\n                isDetails: \"false\",\r\n                marinePanle: false,\r\n              },\r\n              () => {\r\n                this.setState({\r\n                  isDetails: \"true\",\r\n                  marinePanle: true,\r\n                });\r\n              }\r\n            );\r\n          } else {\r\n            this.getMarineReceiptList();\r\n          }\r\n          this.savedEvent(\"\", \"\", notification);\r\n        } else {\r\n          notification.messageType = \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = false;\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0] + Constants.delimiter + item[\"Common_Code\"];\r\n          this.savedEvent(\"\", \"\", notification);\r\n          console.log(\"Error in PrintRAN:\", result.ErrorList[0]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while PrintRAN:\", error);\r\n      });\r\n  }\r\n\r\n\r\n  PrintBODClick = () => {\r\n    let showPrintBODAuthenticationLayout =\r\n      this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n        ? true\r\n        : false;\r\n\r\n    this.setState({ showPrintBODAuthenticationLayout, }, () => {\r\n      if (showPrintBODAuthenticationLayout === false) {\r\n        this.PrintBOD();\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  PrintBOD = () => {\r\n    this.handleAuthenticationClose();\r\n    let item = this.state.receiptItem;\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineReceiptCode,\r\n        value: item[\"Common_Code\"],\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    var notification = {\r\n      messageType: \"success\",\r\n      message: \"Receipt_PrintStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ReceiptCompDetail_ShipmentNumber\"],\r\n          keyValues: [item.Common_Code],\r\n          isSuccess: true,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestApis.MarineReceiptPrintBOD,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (this.state.isDetails === \"true\") {\r\n            this.componentDidMount();\r\n            this.setState(\r\n              {\r\n                isDetails: \"false\",\r\n                marinePanle: false,\r\n              },\r\n              () => {\r\n                this.setState({\r\n                  isDetails: \"true\",\r\n                  marinePanle: true,\r\n                });\r\n              }\r\n            );\r\n          } else {\r\n            this.getMarineReceiptList();\r\n          }\r\n          this.savedEvent(\"\", \"\", notification);\r\n        } else {\r\n          notification.messageType = \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = false;\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0] + Constants.delimiter + item[\"Common_Code\"];\r\n          this.savedEvent(\"\", \"\", notification);\r\n          console.log(\"Error in PrintBOD:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while PrintBOD:\", error);\r\n      });\r\n  }\r\n\r\n  getMarineBISOutbound(item) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineReceiptCode,\r\n        value: item[\"Common_Code\"],\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    var notification = {\r\n      messageType: \"success\",\r\n      message: \"ViewMarineReceipt_BSIOutbound_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ReceiptCompDetail_ShipmentNumber\"],\r\n          keyValues: [item[\"Common_Code\"]],\r\n          isSuccess: true,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestApis.MarineReceiptBSIOutboundReceipt,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (this.state.isDetails === \"true\") {\r\n            this.componentDidMount();\r\n            this.setState(\r\n              {\r\n                isDetails: \"false\",\r\n                marinePanle: false,\r\n              },\r\n              () => {\r\n                this.setState({\r\n                  isDetails: \"true\",\r\n                  marinePanle: true,\r\n                });\r\n              }\r\n            );\r\n          } else {\r\n            this.getMarineReceiptList();\r\n          }\r\n          this.savedEvent(\"\", \"\", notification);\r\n        } else {\r\n          notification.messageType = \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = false;\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0] + Constants.delimiter + item[\"Common_Code\"];\r\n          this.savedEvent(\"\", \"\", notification);\r\n          console.log(\"Error in BISOutbound:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while BISOutbound:\", error);\r\n      });\r\n  }\r\n\r\n  renderCloseModal() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal\r\n            onClose={() => this.setState({ openReceipt: false })}\r\n            size=\"small\"\r\n            open={this.state.openReceipt}\r\n            closeOnDimmerClick={false}\r\n          >\r\n            <Modal.Content>\r\n              <div className=\"ViewMarineReceiptCloseHeader\">\r\n                <b> {t(\"ViewMarineReceipt_CloseHeader\")}</b>\r\n              </div>\r\n              <div>\r\n                <Input\r\n                  fluid\r\n                  value={this.state.reason}\r\n                  indicator=\"required\"\r\n                  onChange={(data) => this.onFieldChange(\"Reason\", data)}\r\n                  label={t(\"ViewMarineReceiptList_Reason\")}\r\n                  error={t(this.state.validationErrors.Reason)}\r\n                />\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                size=\"small\"\r\n                content={t(\"ViewMarineReceiptList_Cancel\")}\r\n                onClick={() =>\r\n                  this.setState({\r\n                    openReceipt: false,\r\n                    validationErrors: [],\r\n                    reason: \"\",\r\n                  })\r\n                }\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                content={t(\"ViewMarineReceiptList_Ok\")}\r\n                onClick={() => {\r\n                  this.getMarineReason();\r\n                }}\r\n                disabled={this.state.marineReceiptBtnCloseOK}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n\r\n  onFieldChange(propertyName, data) {\r\n    try {\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      this.setState({ reason: data });\r\n      if (marineReceiptValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          marineReceiptValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n        if (\r\n          validationErrors.Reason === \"\" ||\r\n          validationErrors.Reason === undefined\r\n        ) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getMarineReason = () => {\r\n\r\n    this.setState({ marineReceiptBtnCloseOK: true });\r\n    setTimeout(() => {\r\n      this.setState({ marineReceiptBtnCloseOK: false });\r\n    }, 1800);\r\n\r\n    if (this.onFieldChange(\"Reason\", this.state.reason)) {\r\n\r\n      let showCloseReceiptAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n\r\n      this.setState({ showCloseReceiptAuthenticationLayout, }, () => {\r\n        if (showCloseReceiptAuthenticationLayout === false) {\r\n          this.CloseReceipt();\r\n        }\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  CloseReceipt = () => {\r\n    this.handleAuthenticationClose();\r\n    var item = lodash.cloneDeep(this.state.selectedItems[0]);\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineReceiptCode,\r\n        value: item.Common_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.marineReason,\r\n        value: this.state.reason,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    var notification = {\r\n      messageType: \"success\",\r\n      message: \"ViewMarineReceipt_CloseReceipt_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Marine_ReceiptCompDetail_ShipmentNumber\"],\r\n          keyValues: [item.Common_Code],\r\n          isSuccess: true,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestApis.MarineReceiptCloseReceipt,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (this.state.isDetails === \"true\") {\r\n            var selectItem = {\r\n              ReceiptCode: this.state.selectedItems[0].Common_Code,\r\n            };\r\n            this.handleClickRefresh(selectItem);\r\n          } else {\r\n            this.componentDidMount();\r\n          }\r\n          // this.getMarineReceiptList();\r\n          this.setState({ openReceipt: false, reason: \"\" });\r\n          this.savedEvent(\"\", \"\", notification);\r\n        } else {\r\n          notification.messageType = \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = false;\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0] + Constants.delimiter + item.Common_Code;\r\n          this.savedEvent(\"\", \"\", notification);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while CloseReceipt:\", error);\r\n      });\r\n  }\r\n\r\n  setValid = (fptransactionid, ProductCategoryType) => {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.marineReceiptCode,\r\n        value: this.state.receiptItem[\"Common_Code\"],\r\n      },\r\n      {\r\n        key: KeyCodes.fptTansactionID,\r\n        value: fptransactionid,\r\n      },\r\n      {\r\n        key: KeyCodes.productCategoryType,\r\n        value: ProductCategoryType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.MarineReceiptSetValidReceipt,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.getMarineUnLoadingDetails(this.state.receiptItem);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"MarineDisatchComposite:Error occured on setValid\", error);\r\n      });\r\n  };\r\n\r\n  //Get KPI for Marine Receipt\r\n  getKPIList() {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      var notification = {\r\n        message: \"\",\r\n        messageType: \"critical\",\r\n        messageResultDetails: [],\r\n      };\r\n      let objKPIRequestData = {\r\n        PageName: kpiMarineReceiptList,\r\n        InputParameters: [],\r\n      };\r\n\r\n      axios(\r\n        RestApis.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              marineReceiptKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ marineReceiptKPIList: [] });\r\n            console.log(\"Error in marine Receipt KPIList:\", result.ErrorList);\r\n            notification.messageResultDetails.push({\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: result.ErrorList[0],\r\n            });\r\n          }\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting marine Receipt KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n  // GetViewAllMarineReceiptCustomData(item, GoDetails) {\r\n  //   let keyCode = [\r\n  //     {\r\n  //       key: KeyCodes.marineReceiptStatus,\r\n  //       value: item.MarineReceiptByCompartmentList_ReceiptStatus,\r\n  //     },\r\n  //   ];\r\n  //   let obj = {\r\n  //     KeyCodes: keyCode,\r\n  //   };\r\n  //   axios(\r\n  //     RestApis.GetViewAllMarineReceiptCustomData,\r\n  //     Utilities.getAuthenticationObjectforPost(\r\n  //       obj,\r\n  //       this.props.tokenDetails.tokenInfo\r\n  //     )\r\n  //   )\r\n  //     .then((response) => {\r\n  //       const result = response.data;\r\n  //       let { deleteEnableForConfigure, operationsVisibilty } = this.state;\r\n  //       if (result.IsSuccess) {\r\n  //         if (result.EntityResult.MarineReceiptUpdateAllow === \"TRUE\") {\r\n  //           this.setState({\r\n  //             updateEnableForConfigure: true,\r\n  //           });\r\n  //         } else {\r\n  //           this.setState({\r\n  //             updateEnableForConfigure: false,\r\n  //           });\r\n  //         }\r\n  //         if (result.EntityResult.MarineReceiptDeleteAllow === \"TRUE\") {\r\n  //           deleteEnableForConfigure.push(true);\r\n  //         } else {\r\n  //           deleteEnableForConfigure.push(false);\r\n  //         }\r\n  //         operationsVisibilty.add = Utilities.isInFunction(\r\n  //           this.props.userDetails.EntityResult.FunctionsList,\r\n  //           functionGroups.add,\r\n  //           fnMarineReceipt\r\n  //         );\r\n  //         if (GoDetails) {\r\n  //           operationsVisibilty.delete =\r\n  //             deleteEnableForConfigure[deleteEnableForConfigure.length - 1] &&\r\n  //             Utilities.isInFunction(\r\n  //               this.props.userDetails.EntityResult.FunctionsList,\r\n  //               functionGroups.remove,\r\n  //               fnMarineReceipt\r\n  //             );\r\n  //         } else {\r\n  //           let isAllDeleteEnable = deleteEnableForConfigure.every(\r\n  //             (deleteEnable) => deleteEnable === true\r\n  //           );\r\n  //           operationsVisibilty.delete =\r\n  //             isAllDeleteEnable &&\r\n  //             Utilities.isInFunction(\r\n  //               this.props.userDetails.EntityResult.FunctionsList,\r\n  //               functionGroups.remove,\r\n  //               fnMarineReceipt\r\n  //             );\r\n  //         }\r\n  //         this.setState({ deleteEnableForConfigure, operationsVisibilty });\r\n  //       } else {\r\n  //         console.log(\"error in GetViewAllMarineReceiptCustomData\");\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(\"error in GetViewAllMarineReceiptCustomData\", error);\r\n  //     });\r\n  // }\r\n\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showDeleteAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showDeleteAuthenticationLayout });\r\n      if (showDeleteAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Marine Shipment Composite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n  handleAuthenticationClose = () => {\r\n\r\n    this.setState({\r\n      showDeleteAuthenticationLayout: false,\r\n      showAuthorizeToUnLoadAuthenticationLayout: false,\r\n      showCloseReceiptAuthenticationLayout: false,\r\n      showViewBODAuthenticationLayout: false,\r\n      showPrintBODAuthenticationLayout: false,\r\n      showRANAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n\r\n  getFunctionGroupName() {\r\n    if (this.state.showDeleteAuthenticationLayout)\r\n      return fnMarineReceiptByCompartment\r\n    else if (this.state.showCloseReceiptAuthenticationLayout)\r\n      return fnCloseMarineReceipt\r\n    else if (this.state.showAuthorizeToUnLoadAuthenticationLayout)\r\n      return fnMarineReceipt\r\n    else if (this.state.showViewBODAuthenticationLayout || this.state.showPrintBODAuthenticationLayout)\r\n      return fnPrintMarineBOD\r\n    else if (this.state.showRANAuthenticationLayout)\r\n      return fnPrintMarineRAN\r\n  };\r\n\r\n  getDeleteorEditMode() {\r\n    if (this.state.showDeleteAuthenticationLayout)\r\n      return functionGroups.remove;\r\n    else\r\n      return functionGroups.modify;\r\n  };\r\n\r\n  handleOperation() {\r\n\r\n    if (this.state.showDeleteAuthenticationLayout)\r\n      return this.handleDelete\r\n    else if (this.state.showAuthorizeToUnLoadAuthenticationLayout)\r\n      return this.authorizeToUnload\r\n    else if (this.state.showCloseReceiptAuthenticationLayout)\r\n      return this.CloseReceipt\r\n    else if (this.state.showRANAuthenticationLayout)\r\n      return this.PrintRAN\r\n    else if (this.state.showViewBODAuthenticationLayout)\r\n      return this.handleViewBOD;\r\n    else if (this.state.showPrintBODAuthenticationLayout)\r\n      return this.PrintBOD;\r\n  };\r\n\r\n  render() {\r\n    let fillPage = true;\r\n    let shipmentSelected = this.state.selectedItems.length === 1;\r\n    let loadingClass = \"globalLoader\";\r\n    if (\r\n      this.props.shipmentSource !== undefined &&\r\n      this.props.shipmentSource !== \"\" &&\r\n      this.props.shipmentSource !== null\r\n    ) {\r\n      fillPage = false;\r\n      loadingClass = \"nestedList\";\r\n    }\r\n    // let shipmentSelected =\r\n    //   this.state.selectedItems.length === 1 &&\r\n    //   this.props.userDetails.EntityResult.IsEnterpriseNode === false;\r\n\r\n    let updateEnableForConfigure = true;\r\n\r\n    if (shipmentSelected && this.state.selectedRow.Common_Code !== undefined) {\r\n      let receiptUpdateInfo = this.state.activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ReceiptActivityInfo.MARINE_RECEIPT_ENABLE_UPDATE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      let receiptUpdateStates = []\r\n\r\n      if (receiptUpdateInfo !== undefined &&\r\n        receiptUpdateInfo.length > 0)\r\n        receiptUpdateStates = receiptUpdateInfo[0].ReceiptStates;\r\n\r\n      updateEnableForConfigure = receiptUpdateStates.indexOf(\r\n        this.state.selectedItems[0].MarineReceiptByCompartmentList_ReceiptStatus.toUpperCase()\r\n      ) > -1\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.renderCloseModal()}\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            breadcrumbItem={this.props.activeItem}\r\n            shrVisible={false}\r\n            shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n            selectedShareholder={this.state.selectedShareholder}\r\n            onShareholderChange={this.handleShareholderSelectionChange}\r\n            onAdd={this.handleAdd}\r\n            onDelete={this.authenticateDelete}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isViewUnloading === \"true\" ? (\r\n          <ErrorBoundary>\r\n            {this.state.marinePanle ? (\r\n              <MarineReceiptLoadingDetails\r\n                tableData={this.state.ViewUnloadingData.Table}\r\n                loadingDetailsHideFields={this.state.ViewUnloadingHideFields}\r\n                setValid={this.setValid}\r\n                handleBack={this.handleBackPage}\r\n                onSaved={this.savedEvent}\r\n                userDetails={this.props.userDetails}\r\n                status={!this.state.receiptItem.MarineReceiptByCompartmentList_ReceiptStatus ? this.state.selectedItems[0].MarineReceiptByCompartmentList_ReceiptStatus :\r\n                  this.state.receiptItem.MarineReceiptByCompartmentList_ReceiptStatus\r\n\r\n                }\r\n                isWebPortalUser={\r\n                  this.props.userDetails.EntityResult.IsWebPortalUser\r\n                }\r\n              ></MarineReceiptLoadingDetails>\r\n            ) : (\r\n              <MarineReceiptLoadingDetails\r\n                tableData={this.state.ViewUnloadingData.Table}\r\n                loadingDetailsHideFields={this.state.ViewUnloadingHideFields}\r\n                setValid={this.setValid}\r\n                handleBack={this.handleBack}\r\n                onSaved={this.savedEvent}\r\n                userDetails={this.props.userDetails}\r\n                status={\r\n                  this.state.selectedItems[0]\r\n                    .MarineReceiptByCompartmentList_ReceiptStatus\r\n                }\r\n                isWebPortalUser={\r\n                  this.props.userDetails.EntityResult.IsWebPortalUser\r\n                }\r\n              ></MarineReceiptLoadingDetails>\r\n            )}\r\n          </ErrorBoundary>\r\n        ) : this.state.isViewAudit === \"true\" ? (\r\n          <ErrorBoundary>\r\n            {this.state.marinePanle ? (\r\n              <MarineReceiptViewAuditTrailComposite\r\n                receiptCode={this.state.receiptItem[\"Common_Code\"]}\r\n                selectedRow={this.state.selectedRow}\r\n                handleBack={this.handleBackPage}\r\n              ></MarineReceiptViewAuditTrailComposite>\r\n            ) : (\r\n              <MarineReceiptViewAuditTrailComposite\r\n                receiptCode={this.state.receiptItem[\"Common_Code\"]}\r\n                selectedRow={this.state.selectedRow}\r\n                handleBack={this.handleBack}\r\n              ></MarineReceiptViewAuditTrailComposite>\r\n            )}\r\n          </ErrorBoundary>\r\n        ) : this.state.isMarinReceiptManualEntry === \"true\" ? (\r\n          <ErrorBoundary>\r\n            {this.state.marinePanle ? (\r\n              <MarineReceiptManualEntryDetailsComposite\r\n                ReceiptCode={this.state.receiptItem.Common_Code}\r\n                handleBack={this.handleBackPage}\r\n                ReceiptStatus={\r\n                  this.state.receiptItem\r\n                    .MarineReceiptByCompartmentList_ReceiptStatus\r\n                }\r\n                QuantityUOM={this.state.receipt.QuantityUOM}\r\n                ActualTerminalCode={this.state.receipt.ActualTerminalCode}\r\n              ></MarineReceiptManualEntryDetailsComposite>\r\n            ) : (\r\n              <MarineReceiptManualEntryDetailsComposite\r\n                ReceiptCode={this.state.receiptItem.Common_Code}\r\n                handleBack={this.handleBack}\r\n                ReceiptStatus={\r\n                  this.state.receiptItem\r\n                    .MarineReceiptByCompartmentList_ReceiptStatus\r\n                }\r\n                QuantityUOM={this.state.receipt.QuantityUOM}\r\n                ActualTerminalCode={this.state.receipt.ActualTerminalCode}\r\n              ></MarineReceiptManualEntryDetailsComposite>\r\n            )}\r\n          </ErrorBoundary>\r\n        ) : this.state.isDetails === \"true\" ? (\r\n          <div>\r\n            <div\r\n              className={\r\n                this.state.marinePanle\r\n                  ? !this.state.drawerStatus\r\n                    ? \"showShipmentStatusRightPane\"\r\n                    : \"drawerClose\"\r\n                  : \"\"\r\n              }\r\n            >\r\n              <ErrorBoundary>\r\n                <MarineReceiptDetailsComposite\r\n                  Key=\"MarineReceiptDetails\"\r\n                  selectedRow={this.state.selectedRow}\r\n                  selectedShareholder={this.state.selectedShareholder}\r\n                  terminalCodes={this.state.terminalCodes}\r\n                  onBack={this.handleBack}\r\n                  onSaved={this.savedEvent}\r\n                  genericProps={this.props.activeItem.itemProps}\r\n                  handleOperationClick={this.handleOperationClick}\r\n                  viewTab={this.state.viewTab}\r\n                  handlePageAdd={this.handlePageAdd}\r\n                  onTabChange={this.onTabChange}\r\n                  updateEnableForConfigure={updateEnableForConfigure}\r\n                ></MarineReceiptDetailsComposite>\r\n              </ErrorBoundary>\r\n            </div>\r\n            {this.state.marinePanle ? (\r\n              <div\r\n                className={\r\n                  this.state.drawerStatus ? \"marineStatusLeftPane\" : \"\"\r\n                }\r\n              >\r\n                <TransactionSummaryOperations\r\n                  selectedItem={[\r\n                    { Common_Code: this.state.receiptItem.Common_Code },\r\n                  ]}\r\n                  shipmentNextOperations={this.state.receiptNextOperations}\r\n                  handleDetailsPageClick={this.handleDetailsPageClick}\r\n                  handleOperationButtonClick={this.handleOperationClick}\r\n                  currentStatuses={this.state.currentReceiptStatuses}\r\n                  isDetails={true}\r\n                  isEnterpriseNode={\r\n                    this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                  }\r\n                  unAllowedOperations={[]}\r\n                  handleDrawer={this.handleDrawer}\r\n                  isWebPortalUser={\r\n                    this.props.userDetails.EntityResult.IsWebPortalUser\r\n                  }\r\n                  title={\"ViewAllReceipt_Details\"}\r\n                  webPortalAllowedOperations={[\r\n                    \"ViewMarineReceiptList_ViewAuditTrail\",\r\n                    \"ViewMarineReceiptList_ViewTransactions\",\r\n                    \"ViewMarineReceiptList_ViewBOD\",\r\n                  ]}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <div className=\"kpiSummaryContainer\">\r\n                <KPIDashboardLayout\r\n                  kpiList={this.state.marineReceiptKPIList}\r\n                  pageName=\"MarineReceipt\"\r\n                ></KPIDashboardLayout>\r\n              </div>\r\n            </ErrorBoundary>\r\n            <div\r\n              className={\r\n                shipmentSelected\r\n                  ? !this.state.drawerStatus\r\n                    ? \"showShipmentStatusRightPane\"\r\n                    : \"drawerClose\"\r\n                  : \"\"\r\n              }\r\n            >\r\n              {this.state.isReadyToRender ? (\r\n                <div>\r\n                  <ErrorBoundary>\r\n                    <TMTransactionFilters\r\n                      dateRange={{\r\n                        from: this.state.fromDate,\r\n                        to: this.state.toDate,\r\n                      }}\r\n                      dateError={this.state.dateError}\r\n                      handleDateTextChange={this.handleDateTextChange}\r\n                      handleRangeSelect={this.handleRangeSelect}\r\n                      handleLoadOrders={this.handleLoadOrders}\r\n                      filterText=\"LoadReceipts\"\r\n                    ></TMTransactionFilters>\r\n                  </ErrorBoundary>\r\n                  <ErrorBoundary>\r\n                    <div\r\n                      className={\r\n                        fillPage === true ? \"compositeTransactionList\" : \"\"\r\n                      }\r\n                    >\r\n                      <MarineReceiptSummaryPageComposite\r\n                        tableData={this.state.data.Table}\r\n                        columnDetails={this.state.data.Column}\r\n                        pageSize={\r\n                          this.props.userDetails.EntityResult.PageAttibutes\r\n                            .WebPortalListPageSize\r\n                        }\r\n                        exportRequired={true}\r\n                        exportFileName=\"MarineReceiptList\"\r\n                        columnPickerRequired={true}\r\n                        terminalsToShow={\r\n                          this.props.userDetails.EntityResult.PageAttibutes\r\n                            .NoOfTerminalsToShow\r\n                        }\r\n                        selectionRequired={true}\r\n                        columnGroupingRequired={true}\r\n                        onSelectionChange={this.handleSelection}\r\n                        onRowClick={this.handleRowClick}\r\n                        parentComponent={this.componentName}\r\n                      ></MarineReceiptSummaryPageComposite>\r\n                    </div>\r\n                  </ErrorBoundary>\r\n                </div>\r\n              ) : (\r\n                <LoadingPage\r\n                  loadingClass={loadingClass}\r\n                  message=\"\"\r\n                ></LoadingPage>\r\n              )}\r\n            </div>\r\n            {shipmentSelected ? (\r\n              <div\r\n                className={\r\n                  this.state.drawerStatus ? \"marineStatusLeftPane\" : \"\"\r\n                }\r\n              >\r\n                {/* <TransactionSummaryOperationsMarine\r\n                  selectedItem={[\r\n                    { Common_Code: this.state.receiptItem.Common_Code },\r\n                  ]}\r\n                  shipmentNextOperations={this.state.receiptNextOperations}\r\n                  handleDetailsPageClick={this.handleDetailsPageClick}\r\n                  handleOperationButtonClick={this.handleOperationClick}\r\n                  currentStatuses={this.state.currentReceiptStatuses}\r\n                  isDetails={false}\r\n                  isEnterpriseNode={\r\n                    this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                  }\r\n                  unAllowedOperations={[]}\r\n                  handleDrawer={this.handleDrawer}\r\n                />*/}\r\n                <TransactionSummaryOperations\r\n                  selectedItem={[\r\n                    { Common_Code: this.state.receiptItem.Common_Code },\r\n                  ]}\r\n                  shipmentNextOperations={this.state.receiptNextOperations}\r\n                  handleDetailsPageClick={this.handleDetailsPageClick}\r\n                  handleOperationButtonClick={this.handleOperationClick}\r\n                  currentStatuses={this.state.currentReceiptStatuses}\r\n                  isDetails={false}\r\n                  isEnterpriseNode={\r\n                    this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                  }\r\n                  unAllowedOperations={[]}\r\n                  handleDrawer={this.handleDrawer}\r\n                  isWebPortalUser={\r\n                    this.props.userDetails.EntityResult.IsWebPortalUser\r\n                  }\r\n                  title={\"ViewAllReceipt_Details\"}\r\n                  webPortalAllowedOperations={[\r\n                    \"ViewMarineReceiptList_ViewAuditTrail\",\r\n                    \"ViewMarineReceiptList_ViewTransactions\",\r\n                    \"ViewMarineReceiptList_ViewBOD\",\r\n                  ]}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        )}\r\n        {Object.keys(this.state.selectedRow).length > 0 ||\r\n          this.state.selectedItems.length === 1\r\n          ? this.renderModal()\r\n          : \"\"}\r\n\r\n        {this.state.showDeleteAuthenticationLayout ||\r\n          this.state.showAuthorizeToUnLoadAuthenticationLayout ||\r\n          this.state.showCloseReceiptAuthenticationLayout ||\r\n          this.state.showViewBODAuthenticationLayout ||\r\n          this.state.showPrintBODAuthenticationLayout ||\r\n          this.state.showRANAuthenticationLayout\r\n          ? (\r\n            <UserAuthenticationLayout\r\n              Username={this.props.userDetails.EntityResult.UserName}\r\n              functionName={this.getDeleteorEditMode()}\r\n              functionGroup={this.getFunctionGroupName()}\r\n              handleClose={this.handleAuthenticationClose}\r\n              handleOperation={this.handleOperation()}\r\n            ></UserAuthenticationLayout>\r\n          ) : null}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nconst mapReceiptToProps = (receipt) => {\r\n  return {\r\n    userActions: bindActionCreators(getUserDetails, receipt),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapReceiptToProps\r\n)(MarineReceiptComposite);\r\n\r\nMarineReceiptComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { DatePicker, Button } from \"@scuf/common\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function TMTransactionFilters({\r\n  handleDateTextChange,\r\n  handleRangeSelect,\r\n  handleLoadOrders,\r\n  dateError,\r\n  dateRange,\r\n  filterText,\r\n}) {\r\n  //console.log(dateError);\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"dateRangeContainer\">\r\n          <div className=\"dateRangeMargin\">\r\n            <DatePicker\r\n              type=\"daterange\"\r\n              closeOnSelection={true}\r\n              error={t(dateError)}\r\n              displayFormat={getCurrentDateFormat()}\r\n              //value={dateRange}\r\n              rangeValue={dateRange}\r\n              onTextChange={handleDateTextChange}\r\n              onRangeSelect={handleRangeSelect}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"dateSearch\">\r\n            <Button content={t(filterText)} onClick={handleLoadOrders} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as WjCore from \"@grapecity/wijmo\";\r\nimport { ReportViewer } from \"@grapecity/wijmo.react.viewer\";\r\nimport * as wjViewer from \"@grapecity/wijmo.viewer\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { connect } from \"react-redux\";\r\n\r\nTMReportViewer.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\n\r\nTMReportViewer.defaultProps = {\r\n  parameters: {},\r\n};\r\n\r\nWjCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nfunction TMReportViewer({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  parameters,\r\n  filePath,\r\n  ...props\r\n}) {\r\n  //   const [proxyHost, setProxyHost] = useState(\r\n  //     \"http://localhost:8888/TMWebProxyAPI/\"\r\n  //   );\r\n  //   const [reportServiceHost, setReportServiceHost] = useState(\r\n  //     \"http://localhost:5632/\"\r\n  //   );\r\n  //   const [reportUrl, setReportUrl] = useState(proxyHost + \"api/report\");\r\n  //   const [filePath, setFilePath] = useState(\r\n  //     \"TM/\" + \"TMReports/\" + \"CarrierCompanyReport\"\r\n  //   );\r\n  const reportUrl = proxyServerHost + \"api/report\";\r\n  //const filePath = \"TM/\" + \"TMReports/\" + reportName;\r\n\r\n  const beforeXhrRequestSend = (s, event) => {\r\n    // use this event for Authorization purpose\r\n    const prevBeforeSend = event.settings.beforeSend;\r\n    event.settings.beforeSend = function (xhr) {\r\n      prevBeforeSend && prevBeforeSend(xhr);\r\n      //here you may add the params for XMLHttpRequest as required\r\n      if (!props.userDetails.EntityResult.IsWebPortalUser)\r\n        xhr.withCredentials = true;\r\n      if (xhr.URL_DEBUG.indexOf(\"parameters\") > -1) {\r\n        xhr.onreadystatechange = function () {\r\n          if (this.readyState === 4 && this.status === 200) {\r\n            var host = s.hostElement;\r\n            setTimeout(() => {\r\n              var splitter = host.querySelector(\".wj-viewer-splitter\");\r\n              var param = host\r\n                .querySelector(\".wj-viewer-tabsleft\")\r\n                .querySelectorAll(\"li\")[2];\r\n              if (!param.disabled) {\r\n                param.className = \"hidden\";\r\n                splitter.click();\r\n              }\r\n            }, 1000);\r\n          }\r\n        };\r\n      }\r\n    };\r\n  };\r\n  let header = {\r\n    Authorization: \"Bearer \" + props.tokenDetails.tokenInfo,\r\n  };\r\n\r\n  // let header = {\r\n  //   Authorization: \"Bearer \" + \"fiewjfjewifi\",\r\n  // };\r\n\r\n  const initViewer = (s, event) => {\r\n    wjViewer._ReportService.prototype.load = function (data) {\r\n      var _this = this;\r\n      var promise = new wjViewer._Promise();\r\n      if (!this._checkReportController(promise)) {\r\n        return promise;\r\n      }\r\n      this.httpRequest(this._getReportInstancesUrl(), {\r\n        method: \"POST\",\r\n        data: data,\r\n      }).then(\r\n        function (xhr) {\r\n          var v = wjViewer._parseReportExecutionInfo(xhr.responseText);\r\n          _this._instanceId = v.id;\r\n          _this._status = wjViewer._ExecutionStatus.loaded;\r\n          _this._outlinesLocation = v.outlinesLocation;\r\n          _this._statusLocation = v.statusLocation.replace(\r\n            reportServiceHost,\r\n            proxyServerHost\r\n          );\r\n          _this._pageSettingsLocation = v.pageSettingsLocation;\r\n          _this._featuresLocation = v.featuresLocation;\r\n          _this._parametersLocation = v.parametersLocation;\r\n          promise.resolve(v);\r\n        },\r\n        function (xhr) {\r\n          promise.reject(_this._getError(xhr));\r\n        }\r\n      );\r\n      return promise;\r\n    };\r\n  };\r\n\r\n  //console.log(props.userDetails.EntityResult.IsWebPortalUser, header);\r\n  return (\r\n    <div>\r\n      {props.userDetails.EntityResult.IsWebPortalUser ? (\r\n        <div>\r\n          <ReportViewer\r\n            requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <ReportViewer\r\n            //requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TMReportViewer);\r\n","import React from \"react\";\r\nimport { Modal, Button, Header } from \"@scuf/common\";\r\nimport TMReportViewer from \"../Common/TMReportViewer\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nReportDetails.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  filePath: PropTypes.string.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  showReport: PropTypes.bool.isRequired,\r\n  handleModalClose: PropTypes.func.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\nReportDetails.defaultProps = {\r\n  parameters: {},\r\n};\r\nexport default function ReportDetails({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  filePath,\r\n  handleBack,\r\n  showReport,\r\n  handleModalClose,\r\n  parameters,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <Modal\r\n      style={{ padding: \"0px\" }}\r\n      size=\"fullscreen\"\r\n      open={showReport}\r\n      // onClose={handleModalClose}\r\n    >\r\n      <div>\r\n        <Header title={t(\"Header_TerminalManager\")} menu={false} />\r\n        <TMReportViewer\r\n          proxyServerHost={proxyServerHost}\r\n          reportServiceHost={reportServiceHost}\r\n          filePath={filePath}\r\n          parameters={parameters}\r\n        />\r\n        <div style={{ marginTop: \"10px\", marginLeft: \"20px\" }}>\r\n          <Button\r\n            className=\"backButton\"\r\n            onClick={handleBack}\r\n            content={t(\"Report_Back\")}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","WijmoGrid","flex","setFlex","translator","useTranslation","_getData","pageLength","CollectionView","sourceData","pageSize","setData","rowsPerPage","theGrid","React","theSearch","gridFilter","pagingComponent","colPicker","selectedRows","selectionRequired","selector","gridInitialized","grid","customizeFilterConditions","onRowClick","addEventListener","hostElement","e","ht","hitTest","target","closest","classList","includes","cellType","wjGrid","Cell","rowData","rows","row","dataItem","selectionMode","wjCore","select","Selector","itemChecked","s","singleSelection","filter","isSelected","current","loadash","forEach","onSelectionHandle","r","selectedRow","showCheckAll","column","rowHeaders","columns","headersVisibility","HeadersVisibility","All","useEffect","control","push","selectedItems","refresh","localStorage","getItem","parentComponent","gridState","JSON","parse","newFlex","col","matchedCol","colSetting","binding","visible","filterDefinition","collectionView","deferUpdate","sortDescriptions","clear","i","sortDesc","property","ascending","groupDescriptions","sessionStorage","gridSessionState","moveToPage","pageCount","pageIndex","text","searchText","columnPickerRequired","itemsSource","checkedMemberPath","displayMemberPath","lostFocus","addHandler","hidePopup","exportExcel","gridFlex","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","exportFileName","displayValues","columnDetail","Name","PopOver","terminalCodes","split","terminalsToShow","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","saveGridState","group","document","getElementsByClassName","chkbx","parentNode","sessionState","setItem","stringify","FlexGridFilter","operator","Operator","header","descending","apply","conditions","search","selectAll","and","or","cancel","stringOperators","op","EQ","NE","BW","EW","CT","NC","numberOperators","GT","LT","GE","LE","dateOperators","booleanOperators","getWidth","columnDetails","window","screen","width","WidthPx","parseInt","WidthPercentage","FlexGridSearch","class","ref","id","actionType","event","host","offsetHeight","focus","showPopup","PopupPosition","Below","preventDefault","colPickerClickHandler","exportRequired","fontSize","top","columnGroupingRequired","GroupPanel","FlexGrid","autoGenerateColumns","alternatingRowStep","autoRowHeights","initialized","virtualizationThreshold","onUpdatedView","FlexGridColumn","minWidth","isReadOnly","wordWrap","align","FlexGridCellTemplate","template","context","conditionalRowStyleCheck","conditionalRowStyles","ListBox","picker","initializedPicker","CollectionViewNavigator","headerFormat","byPage","cv","MarineReceiptSummaryPageComposite","tableData","onSelectionChange","WijmoGridComposite","MarineReceiptComposite","receiptItem","receipt","isDetails","isReadyToRender","isDetailsModified","receiptNextOperations","isViewUnloading","ViewUnloadingData","ViewUnloadingHideFields","isViewAudit","currentReceiptStatuses","lastStatus","fromDate","toDate","dateError","isOperation","marinePanle","openReceipt","reason","marineReceiptValidationDef","marineReceiptBtnStatus","marineReceiptBtnCloseOK","viewTab","isMarinReceiptManualEntry","drawerStatus","showReport","marineReceiptKPIList","deleteEnableForConfigure","activityInfo","showDeleteAuthenticationLayout","showAuthorizeToUnLoadAuthenticationLayout","showCloseReceiptAuthenticationLayout","showViewBODAuthenticationLayout","showPrintBODAuthenticationLayout","showRANAuthenticationLayout","componentName","handleAdd","handleDelete","handleAuthenticationClose","deleteMarineReceiptKeys","MarineReceiptCode","KeyData","KeyCodes","Key","Value","RestApis","notification","getMarineReceiptList","getKPIList","messageResultDetails","messageResult","keyFields","toast","NotifyEvent","notificationMessage","autoClose","messageType","handleRangeSelect","to","from","handleDateTextChange","handleLoadOrders","handleBack","FunctionsList","functionGroups","fnMarineReceiptByCompartment","isViewDetails","handleBackPage","keyCode","Common_Code","obj","keyDataCode","ReceiptCode","MarineReceiptByCompartmentList_ReceiptStatus","ReceiptStatus","GetReceiptStatusOperations","GetMarineReceiptAllStatuses","handleRowClick","view","savedEvent","message","keyValues","isSuccess","errorMessage","receiptDeleteInfo","ActivityCode","Constants","MARINE_RECEIPT_ENABLE_DELETE","ActionTypeCode","CHECK","receiptDeleteStates","ReceiptStates","IsWebPortalUser","indexOf","toUpperCase","remove","getReceipt","handleSelection","items","isReady","findIndex","x","handleDetailsPageClick","saveType","Common_Shareholder","RailMarineReceiptCompartmentDetailPlanList","ShareholderCode","handlePageAdd","componentWillUnmount","clearStorage","removeEventListener","removeItem","handleShareholderSelectionChange","getTerminalsList","handleModalBack","viewBODClick","handleViewBOD","reportServiceURI","handleOperationClick","operation","setTimeout","ViewReceipt_ViewTransactions","fnViewMarineUnloadingDetails","getMarineUnLoadingDetails","ViewReceipt_ViewAuditTrail","fnViewMarineReceiptAuditTrail","getMarineAuditTrail","ViewReceipt_AuthorizeToUnload","authorizeToUnloadClick","ViewReceipt_PrintRAN","fnPrintMarineRAN","PrintRANClick","ViewReceipt_CloseReceipt","modify","fnCloseMarineReceipt","ViewReceipt_PrintBOD","fnPrintMarineBOD","PrintBODClick","ViewReceipt_BISOutbound","getMarineBISOutbound","ViewReceipt_ManualEntry","ViewReceipt_ViewBOD","onTabChange","activeIndex","handleDrawer","authorizeToUnload","selectItem","handleClickRefresh","PrintRAN","PrintBOD","getMarineReason","CloseReceipt","setValid","fptransactionid","ProductCategoryType","authenticateDelete","receiptRow","nextOperations","keys","filteredOptions","IsArchived","results","IsEnterpriseNode","localTerminalCode","setHours","startRange","endRange","TransportationType","MARINE","selectedItem","updatedselectedItem","Table","PrimaryShareholder","GetReceiptActivityInfo","getTransportationType","transportationType","activeItem","renderModal","path","paramValues","Culture","UICulture","ReportDetails","handleModalClose","proxyServerHost","reportServiceHost","filePath","parameters","renderCloseModal","onClose","closeOnDimmerClick","Reason","fnKPIInformation","objKPIRequestData","PageName","kpiMarineReceiptList","InputParameters","ListKPIDetails","getFunctionGroupName","fnMarineReceipt","getDeleteorEditMode","fillPage","shipmentSelected","loadingClass","shipmentSource","updateEnableForConfigure","receiptUpdateInfo","MARINE_RECEIPT_ENABLE_UPDATE","receiptUpdateStates","ShareholderList","MarineReceiptLoadingDetails","loadingDetailsHideFields","onSaved","status","isWebPortalUser","MarineReceiptViewAuditTrailComposite","receiptCode","MarineReceiptManualEntryDetailsComposite","QuantityUOM","ActualTerminalCode","MarineReceiptDetailsComposite","onBack","genericProps","TransactionSummaryOperations","shipmentNextOperations","handleOperationButtonClick","currentStatuses","isEnterpriseNode","unAllowedOperations","title","webPortalAllowedOperations","KPIDashboardLayout","kpiList","pageName","TMTransactionFilters","dateRange","filterText","Column","PageAttibutes","WebPortalListPageSize","NoOfTerminalsToShow","LoadingPage","UserName","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","userActions","bindActionCreators","DatePicker","closeOnSelection","displayFormat","getCurrentDateFormat","rangeValue","onTextChange","onRangeSelect","TMReportViewer","reportUrl","beforeXhrRequestSend","prevBeforeSend","settings","beforeSend","xhr","withCredentials","URL_DEBUG","onreadystatechange","readyState","splitter","querySelector","param","querySelectorAll","click","Authorization","initViewer","wjViewer","prototype","load","_this","promise","_checkReportController","httpRequest","_getReportInstancesUrl","method","v","responseText","_instanceId","_status","loaded","_outlinesLocation","outlinesLocation","_statusLocation","statusLocation","replace","_pageSettingsLocation","pageSettingsLocation","_featuresLocation","featuresLocation","_parametersLocation","parametersLocation","resolve","reject","_getError","ReportViewer","requestHeaders","height","serviceUrl","beforeSendRequest","WjCore","menu","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","shareholderCode","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","shipmentCode","orderCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","entityCode","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","bayCode","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","TransactionType","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks"],"sourceRoot":""}