{"version":3,"file":"static/js/4164.5efd4cb3.chunk.js","mappings":"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","sources":["Components/UIBase/Details/COAAssignmentDetails.jsx","Components/UIBase/Common/TMConfirmationModel.jsx","Components/Composite/Common/TMUserActionsForDeleteComposite.jsx","Components/Composite/Details/COAAssignmentDetailsComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Details/AttributeDetails.jsx","Components/UIBase/Common/TMReportViewer.jsx","Components/UIBase/Details/ReportDetails.jsx","JS/AttributeEntity.js","JS/functionalUtilities.js"],"sourcesContent":["import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Select, Input, Icon, Accordion } from \"@scuf/common\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport { Button } from \"@scuf/common\";\r\n\r\nCOAAssignmentDetails.propTypes = {\r\n  coaAssignment: PropTypes.object.isRequired,\r\n  modCOAAssignment: PropTypes.object.isRequired,\r\n  selectvalidationErrorslist: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    compartmentList: PropTypes.array,\r\n    tankCodes: PropTypes.array,\r\n    baseCOACodes: PropTypes.array,\r\n    bayCodes: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  handleCellDataEdit: PropTypes.func.isRequired,\r\n  handleTankCodeChange: PropTypes.func.isRequired,\r\n  handleBaseCOAChange: PropTypes.func.isRequired,\r\n  setCurrentList: PropTypes.func.isRequired,\r\n  handleAddCompartmentDetail: PropTypes.func.isRequired,\r\n  handleDeleteCompartmentDetail: PropTypes.func.isRequired,\r\n  pageSize: PropTypes.number,\r\n  attributeValidationListErrors: PropTypes.object.isRequired,\r\n  modAttributeMetaDataLists: PropTypes.array,\r\n  attributeMetaDataLists: PropTypes.array,\r\n  onAttributeDataChange: PropTypes.func.isRequired,\r\n  selectCompartment: PropTypes.object.isRequired,\r\n  AddEnable: PropTypes.bool.isRequired,\r\n  DeleteEnable: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport function COAAssignmentDetails({\r\n  coaAssignment,\r\n  modCOAAssignment,\r\n  selectvalidationErrorslist,\r\n  listOptions,\r\n  onFieldChange,\r\n  handleCellDataEdit,\r\n  setCurrentList,\r\n  handleAddCompartmentDetail,\r\n  handleDeleteCompartmentDetail,\r\n  handleTankCodeChange,\r\n  handleBaseCOAChange,\r\n  pageSize,\r\n  attributeValidationListErrors,\r\n  modAttributeMetaDataLists,\r\n  attributeMetaDataLists,\r\n  onAttributeDataChange,\r\n  selectCompartment,\r\n  AddEnable,\r\n  DeleteEnable,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  const handleCustomEditTextBox = (cellData, index) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={cellData.rowData[cellData.field]}\r\n        onChange={(value) => handleCellDataEdit(value, cellData, index)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  const CompartmentIndex =\r\n    modCOAAssignment.COATransactionCompartments.findIndex((ele) => {\r\n      return (\r\n        ele.CompartmentSeqNumber === selectCompartment.CompartmentSeqNumber\r\n      );\r\n    });\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6\">\r\n              <label className=\"TransloadingheaderLabel COAAssignment-TagName\">\r\n                {t(\"COAAssignment_TransactionDetails\")}\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"COAAssignment_TransactionCode\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>{modCOAAssignment.TransactionCode}</label>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"COAAssignment_TransactionStatus\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>{modCOAAssignment.TransactionStatus}</label>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"COAAssignment_TransportationType\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>{modCOAAssignment.TransportationType}</label>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n              <label className=\"TransloadingheaderLabel\">\r\n                {t(\"COAAssignment_TransactionType\")}\r\n              </label>\r\n              <label>:</label>\r\n              <label> </label>\r\n              <label>{modCOAAssignment.TransactionType}</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className=\"row COAAssignment-Contener\"\r\n            style={{ alignItems: \"stretch\" }}\r\n          >\r\n            <div\r\n              className=\"col-12 col-md-6 col-lg-2\"\r\n              style={{ border: \"1px solid #c8c8c8\", minHeight: \"400px\" }}\r\n            >\r\n              <div>\r\n                <label className=\"headerLabel\">\r\n                  {t(\"COAAssignmentView_Compartments\")}\r\n                </label>\r\n              </div>\r\n\r\n              <ul>\r\n                {modCOAAssignment.COATransactionCompartments.map((item, n) => {\r\n                  return (\r\n                    <li\r\n                      className={\r\n                        item.CompartmentSeqNumber ===\r\n                          selectCompartment.CompartmentSeqNumber\r\n                          ? \"activeted\"\r\n                          : \"\"\r\n                      }\r\n                      onClick={(e) => setCurrentList(item, n)}\r\n                      key={item.CompartmentSeqNumber}\r\n                    >\r\n                      {item.CompartmentSeqNumber +\r\n                        \".\" +\r\n                        item.FinishedProductCode +\r\n                        \"(\" +\r\n                        item.COATransactionCompartmentDetails.length +\r\n                        \")\"}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-10\">\r\n              <div class=\"row COAAssignment-Contener-Margin border-bottom-1\">\r\n                <div className=\"col-12 col-md-4 col-lg-8 COAAssignment-Contener-Padding\">\r\n                  <div class=\"row\">\r\n                    <div className=\"col-12 col-md-4 col-lg-6\">\r\n                      <label className=\"TransloadingheaderLabel\">\r\n                        {t(\"COAViewComapartment_CompartmentSeqNumber\")}\r\n                      </label>\r\n                      <label>:</label>\r\n                      <label> </label>\r\n                      <label>{selectCompartment.CompartmentSeqNumber}</label>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4 col-lg-6\">\r\n                      <label className=\"TransloadingheaderLabel\">\r\n                        {t(\"COAViewComapartment_FinishedProductCode\")}\r\n                      </label>\r\n                      <label>:</label>\r\n                      <label> </label>\r\n                      <label>{selectCompartment.FinishedProductCode}</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div className=\"col-12 col-md-4 col-lg-6\">\r\n                      <label className=\"TransloadingheaderLabel\">\r\n                        {t(\"COAViewComapartment_CustomerCode\")}\r\n                      </label>\r\n                      <label>:</label>\r\n                      <label> </label>\r\n                      <label>{selectCompartment.CustomerCode}</label>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4 col-lg-6\">\r\n                      <label className=\"TransloadingheaderLabel\">\r\n                        {t(\"COAViewComapartment_DestinationCode\")}\r\n                      </label>\r\n                      <label>:</label>\r\n                      <label> </label>\r\n                      <label>{selectCompartment.DestinationCode}</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-4 col-lg-2\">\r\n                  <Button\r\n                    disabled={!AddEnable}\r\n                    onClick={(e) => handleAddCompartmentDetail()}\r\n                    content={t(\"COAAssignment_AddCOA\")}\r\n                  ></Button>\r\n                </div>\r\n\r\n                {modAttributeMetaDataLists[CompartmentIndex].COAASSIGNMENT\r\n                  .length > 0\r\n                  ? modAttributeMetaDataLists[\r\n                      CompartmentIndex\r\n                    ].COAASSIGNMENT.map((attire) => (\r\n                      <ErrorBoundary>\r\n                        <Accordion>\r\n                          <Accordion.Content\r\n                            className=\"attributeAccordian\"\r\n                            title={t(\"Attributes_Header\")}\r\n                          >\r\n                            <AttributeDetails\r\n                              selectedAttributeList={\r\n                                attire.attributeMetaDataList\r\n                              }\r\n                              handleCellDataEdit={onAttributeDataChange}\r\n                              attributeValidationErrors={handleValidationErrorFilter(\r\n                                attributeValidationListErrors[CompartmentIndex],\r\n                                attire.TerminalCode\r\n                              )}\r\n                            ></AttributeDetails>\r\n                          </Accordion.Content>\r\n                        </Accordion>\r\n                      </ErrorBoundary>\r\n                    ))\r\n                  : null}\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                {selectCompartment.COATransactionCompartmentDetails !== null\r\n                  ? selectCompartment.COATransactionCompartmentDetails.map(\r\n                      (compartDetail, i) => {\r\n                        return (\r\n                          <div className=\"col-12 detailsTable COAAssignment-Contener\">\r\n                            <div className=\"row COAAssignment-Contener-Margin \">\r\n                              <div className=\"col-12\">\r\n                                <div\r\n                                  onClick={() =>\r\n                                    DeleteEnable\r\n                                      ? handleDeleteCompartmentDetail(i)\r\n                                      : null\r\n                                  }\r\n                                  className={\r\n                                    (DeleteEnable\r\n                                      ? \"iconCircle \"\r\n                                      : \"iconCircleDisable \") + \"iconblock\"\r\n                                  }\r\n                                  style={{ float: \"right\" }}\r\n                                >\r\n                                  <div>\r\n                                    <Icon\r\n                                      root=\"common\"\r\n                                      name=\"delete\"\r\n                                      size=\"small\"\r\n                                      color=\"white\"\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                <Select\r\n                                  fluid\r\n                                  placeholder=\"Select\"\r\n                                  indicator=\"required\"\r\n                                  value={compartDetail.BayCode}\r\n                                  text={compartDetail.BayCode}\r\n                                  label={t(\"COACompartmentDetails_BayCode\")}\r\n                                  options={Utilities.transferListtoOptions(\r\n                                    listOptions.bayCodes\r\n                                  )}\r\n                                  onChange={(data) =>\r\n                                    onFieldChange(\"BayCode\", data, i)\r\n                                  }\r\n                                  error={t(\r\n                                    selectvalidationErrorslist.length > i &&\r\n                                      selectvalidationErrorslist[i] !==\r\n                                        undefined\r\n                                      ? selectvalidationErrorslist[i].BayCode\r\n                                      : \"\"\r\n                                  )}\r\n                                  disabled={\r\n                                    compartDetail.ID !== null &&\r\n                                    compartDetail.ID !== \"\"\r\n                                  }\r\n                                  multiple={false}\r\n                                  reserveSpace={false}\r\n                                  search={true}\r\n                                  noResultsMessage={t(\"noResultsMessage\")}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                <Select\r\n                                  fluid\r\n                                  placeholder=\"Select\"\r\n                                  indicator=\"required\"\r\n                                  value={compartDetail.TankCode}\r\n                                  text={compartDetail.TankCode}\r\n                                  label={t(\"COACompartmentDetails_TankCode\")}\r\n                                  options={Utilities.transferListtoOptions(\r\n                                    listOptions.tankCodes\r\n                                  )}\r\n                                  onChange={(data) =>\r\n                                    handleTankCodeChange(data, i)\r\n                                  }\r\n                                  error={t(\r\n                                    selectvalidationErrorslist[i].TankCode\r\n                                  )}\r\n                                  disabled={\r\n                                    compartDetail.ID !== null &&\r\n                                    compartDetail.ID !== \"\"\r\n                                  }\r\n                                  multiple={false}\r\n                                  reserveSpace={false}\r\n                                  search={true}\r\n                                  noResultsMessage={t(\"noResultsMessage\")}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                <Select\r\n                                  fluid\r\n                                  placeholder=\"Select\"\r\n                                  indicator=\"required\"\r\n                                  value={compartDetail.BaseCOACode}\r\n                                  text={compartDetail.BaseCOACode}\r\n                                  label={t(\"COACompartmentDetails_BaseCOACode\")}\r\n                                  options={Utilities.transferListtoOptions(\r\n                                    listOptions.baseCOACodes\r\n                                  )}\r\n                                  onChange={(data) =>\r\n                                    handleBaseCOAChange(data, i)\r\n                                  }\r\n                                  error={t(\r\n                                    selectvalidationErrorslist[i].BaseCOACode\r\n                                  )}\r\n                                  disabled={\r\n                                    compartDetail.ID !== null &&\r\n                                    compartDetail.ID !== \"\"\r\n                                  }\r\n                                  multiple={false}\r\n                                  reserveSpace={false}\r\n                                  search={true}\r\n                                  noResultsMessage={t(\"noResultsMessage\")}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                <Input\r\n                                  fluid\r\n                                  value={compartDetail.BaseCOANumber}\r\n                                  label={t(\r\n                                    \"COACompartmentDetails_BaseCOANumber\"\r\n                                  )}\r\n                                  disabled={true}\r\n                                  onChange={(data) =>\r\n                                    onFieldChange(\"BaseCOANumber\", data, i)\r\n                                  }\r\n                                  error={t(\r\n                                    selectvalidationErrorslist[i].BaseCOANumber\r\n                                  )}\r\n                                  reserveSpace={false}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                <Input\r\n                                  fluid\r\n                                  value={\r\n                                    compartDetail.FinishedProductCOACode ===\r\n                                    null\r\n                                      ? \"\"\r\n                                      : compartDetail.FinishedProductCOACode\r\n                                  }\r\n                                  label={t(\r\n                                    \"COACompartmentDetails_FinishedProductCOACode\"\r\n                                  )}\r\n                                  disabled={false}\r\n                                  onChange={(data) =>\r\n                                    onFieldChange(\r\n                                      \"FinishedProductCOACode\",\r\n                                      data,\r\n                                      i\r\n                                    )\r\n                                  }\r\n                                  error={t(\r\n                                    selectvalidationErrorslist[i]\r\n                                      .FinishedProductCOACode\r\n                                  )}\r\n                                  reserveSpace={false}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                <Input\r\n                                  fluid\r\n                                  value={\r\n                                    compartDetail.FinishedProductCOANumber ===\r\n                                    null\r\n                                      ? \"\"\r\n                                      : compartDetail.FinishedProductCOANumber\r\n                                  }\r\n                                  label={t(\r\n                                    \"COACompartmentDetails_FinishedProductCOANumber\"\r\n                                  )}\r\n                                  disabled={false}\r\n                                  onChange={(data) =>\r\n                                    onFieldChange(\r\n                                      \"FinishedProductCOANumber\",\r\n                                      data,\r\n                                      i\r\n                                    )\r\n                                  }\r\n                                  error={t(\r\n                                    selectvalidationErrorslist[i]\r\n                                      .FinishedProductCOANumber\r\n                                  )}\r\n                                  reserveSpace={false}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                              <div className=\"col-12 col-md-12 col-lg-12\">\r\n                                <div className=\"detailsTable\">\r\n                                  <DataTable\r\n                                    data={\r\n                                      compartDetail.COATransactionCompartmentDetailParameterInfos\r\n                                    }\r\n                                    search={true}\r\n                                    rows={pageSize}\r\n                                    searchPlaceholder={t(\r\n                                      \"LoadingDetailsView_SearchGrid\"\r\n                                    )}\r\n                                  >\r\n                                    <DataTable.Column\r\n                                      className=\"compColHeight\"\r\n                                      key=\"Name\"\r\n                                      field=\"Name\"\r\n                                      header={t(\r\n                                        \"COAAssignmentDetail_ParameterName\"\r\n                                      )}\r\n                                    ></DataTable.Column>\r\n                                    <DataTable.Column\r\n                                      className=\"compColHeight\"\r\n                                      key=\"Specification\"\r\n                                      field=\"Specification\"\r\n                                      header={t(\r\n                                        \"COAAssignmentDetail_Specification\"\r\n                                      )}\r\n                                      editFieldType=\"text\"\r\n                                      editable={true}\r\n                                      customEditRenderer={(cellData) =>\r\n                                        handleCustomEditTextBox(cellData, i)\r\n                                      }\r\n                                    ></DataTable.Column>\r\n                                    <DataTable.Column\r\n                                      className=\"compColHeight\"\r\n                                      key=\"Method\"\r\n                                      field=\"Method\"\r\n                                      header={t(\"COAAssignmentDetail_Method\")}\r\n                                      editFieldType=\"text\"\r\n                                      editable={true}\r\n                                      customEditRenderer={(cellData) =>\r\n                                        handleCustomEditTextBox(cellData, i)\r\n                                      }\r\n                                    ></DataTable.Column>\r\n                                    <DataTable.Column\r\n                                      className=\"compColHeight\"\r\n                                      key=\"Result\"\r\n                                      field=\"Result\"\r\n                                      header={t(\"COAAssignmentDetail_Result\")}\r\n                                      editFieldType=\"text\"\r\n                                      editable={true}\r\n                                      customEditRenderer={(cellData) =>\r\n                                        handleCustomEditTextBox(cellData, i)\r\n                                      }\r\n                                    ></DataTable.Column>\r\n                                    <DataTable.Column\r\n                                      className=\"compColHeight\"\r\n                                      key=\"Sortindex\"\r\n                                      field=\"Sortindex\"\r\n                                      header={t(\r\n                                        \"COAAssignmentDetail_SortIndex\"\r\n                                      )}\r\n                                      editFieldType=\"text\"\r\n                                      editable={true}\r\n                                      customEditRenderer={(cellData) =>\r\n                                        handleCustomEditTextBox(cellData, i)\r\n                                      }\r\n                                    ></DataTable.Column>\r\n                                    {Array.isArray(\r\n                                      compartDetail.COATransactionCompartmentDetailParameterInfos\r\n                                    ) &&\r\n                                    compartDetail\r\n                                      .COATransactionCompartmentDetailParameterInfos\r\n                                      .length > pageSize ? (\r\n                                      <DataTable.Pagination />\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </DataTable>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      }\r\n                    )\r\n                  : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMConfirmationModel.propTypes = {\r\n  onConfirm: PropTypes.func.isRequired,\r\n  isShow: PropTypes.bool.isRequired,\r\n};\r\nexport function TMConfirmationModel({\r\n  onConfirm,\r\n  isShow,\r\n  confirmText,\r\n  cancelText,\r\n  submitText\r\n}) {\r\n  function DisplayTMconfirmationModel() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={isShow} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(confirmText)}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(cancelText)}\r\n                onClick={() =>{ \r\n                  onConfirm(false);\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(submitText)}\r\n                onClick={() => {\r\n                  onConfirm(true);\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          {DisplayTMconfirmationModel()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport { TMConfirmationModel } from \"../../UIBase/Common/TMConfirmationModel\";\r\nexport function TMUserActionsForDeleteComposite({\r\n  onDelete,\r\n  isShowDeleteComposite,\r\n  confirmDeleteText,\r\n  cancelText,\r\n  submitText\r\n}) {\r\n  return (\r\n    <TMConfirmationModel\r\n      onConfirm={onDelete}\r\n      isShow={isShowDeleteComposite}\r\n      confirmText={confirmDeleteText}\r\n      cancelText={cancelText}\r\n      submitText={submitText}\r\n    ></TMConfirmationModel>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { COAAssignmentDetails } from \"../../UIBase/Details/COAAssignmentDetails\";\r\nimport { coaassignmentValidationDef } from \"../../../JS/ValidationDef\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport {\r\n  emptyCOAAssignment,\r\n  COATransactionCompartmentDetailInfo,\r\n  COATransactionCompartments,\r\n} from \"../../../JS/DefaultEntities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { functionGroups, fnCOAAssignment } from \"../../../JS/FunctionGroups\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nimport { coaAssignmentAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport { TMUserActionsForDeleteComposite } from \"../Common/TMUserActionsForDeleteComposite\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport ReportDetails from \"../../UIBase/Details/ReportDetails\";\r\n\r\nclass COAAssignmentDetailsComposite extends Component {\r\n  state = {\r\n    coaAssignment: lodash.cloneDeep(emptyCOAAssignment),\r\n    modCOAAssignment: lodash.cloneDeep(emptyCOAAssignment),\r\n    modvalidationErrorslist: [],\r\n    selectvalidationErrorslist: [],\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    showAuthenticationLayout: false,\r\n    attributeMetaData: [],\r\n    attributeMetaDataLists: [],\r\n    modAttributeMetaDataLists: [],\r\n    attributeValidationListErrors: [],\r\n    attributeValidationError: [],\r\n    bayCodes: [],\r\n    tankCodes: [],\r\n    baseCOACodes: [],\r\n    isShowDeleteComposite: false,\r\n    deleteForIndex: -1,\r\n    showReport: false,\r\n    selectCompartment: lodash.cloneDeep(COATransactionCompartments),\r\n  };\r\n\r\n  handleModalBack = () => {\r\n    this.setState({ showReport: false });\r\n  };\r\n\r\n  renderModal() {\r\n    let path = null;\r\n    if (this.props.userDetails.EntityResult.IsArchived) {\r\n      path = \"TM/\" + Constants.TMReportArchive + \"/CertificateOfAnalysis\";\r\n    } else {\r\n      path = \"TM/\" + Constants.TMReports + \"/CertificateOfAnalysis\";\r\n    }\r\n    let modCOAAssignment = lodash.cloneDeep(this.state.modCOAAssignment);\r\n    let paramValues = {\r\n      Culture: this.props.userDetails.EntityResult.UICulture,\r\n      Shareholder: this.props.selectedShareholder,\r\n      ShipmentCode: modCOAAssignment.TransactionCode,\r\n      TransportType: \"ROAD\",\r\n    };\r\n    return (\r\n      <ReportDetails\r\n        showReport={this.state.showReport}\r\n        handleBack={this.handleModalBack}\r\n        handleModalClose={this.handleModalBack}\r\n        proxyServerHost={RestAPIs.WebAPIURL}\r\n        reportServiceHost={this.reportServiceURI}\r\n        filePath={path}\r\n        parameters={paramValues}\r\n      />\r\n    );\r\n  }\r\n\r\n  setCurrentList = (data, index) => {\r\n    try {\r\n      let modvalidationErrorslist = lodash.cloneDeep(\r\n        this.state.modvalidationErrorslist\r\n      );\r\n\r\n      this.setState(\r\n        {\r\n          selectCompartment: data,\r\n          selectvalidationErrorslist: modvalidationErrorslist[index],\r\n          isReadyToRender: false,\r\n        },\r\n        () => {\r\n          this.setState({ isReadyToRender: true });\r\n          this.GetBayCode();\r\n          this.GetTankCode();\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAAssignmentDetailsComposite:Error occured on setCurrentList\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAddCompartmentDetail = () => {\r\n    try {\r\n      let modCOAAssignment = lodash.cloneDeep(this.state.modCOAAssignment);\r\n      let modvalidationErrorslist = lodash.cloneDeep(\r\n        this.state.modvalidationErrorslist\r\n      );\r\n      let selectCompartment = lodash.cloneDeep(this.state.selectCompartment);\r\n      let selectvalidationErrorslist = lodash.cloneDeep(\r\n        this.state.selectvalidationErrorslist\r\n      );\r\n      if (\r\n        selectCompartment.CompartmentSeqNumber !== undefined &&\r\n        selectCompartment.CompartmentSeqNumber !== null\r\n      ) {\r\n        selectCompartment.COATransactionCompartmentDetails.push(\r\n          lodash.clone(COATransactionCompartmentDetailInfo)\r\n        );\r\n\r\n        selectvalidationErrorslist.push(\r\n          lodash.clone(\r\n            Utilities.getInitialValidationErrors(coaassignmentValidationDef)\r\n          )\r\n        );\r\n        var i = modCOAAssignment.COATransactionCompartments.findIndex((ele) => {\r\n          return (\r\n            ele.CompartmentSeqNumber === selectCompartment.CompartmentSeqNumber\r\n          );\r\n        });\r\n\r\n        modvalidationErrorslist[i] = selectvalidationErrorslist;\r\n\r\n        modCOAAssignment.COATransactionCompartments[i] = selectCompartment;\r\n        this.GetBayCode();\r\n        this.GetTankCode();\r\n\r\n        this.setState({\r\n          selectCompartment,\r\n          modCOAAssignment,\r\n          selectvalidationErrorslist,\r\n          modvalidationErrorslist,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in getting handleAddCompartmentDetail:\" + error);\r\n    }\r\n  };\r\n\r\n  GetTankCode = () => {\r\n    let modCOAAssignment = lodash.cloneDeep(this.state.modCOAAssignment);\r\n    let selectCompartment = lodash.cloneDeep(this.state.selectCompartment);\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: modCOAAssignment.TransactionCode,\r\n      },\r\n      {\r\n        key: KeyCodes.coaSeqNumber,\r\n        value: selectCompartment.CompartmentSeqNumber,\r\n      },\r\n      {\r\n        key: KeyCodes.transportaionType,\r\n        value: modCOAAssignment.TransportationType,\r\n      },\r\n      {\r\n        key: KeyCodes.TransactionType,\r\n        value: modCOAAssignment.TransactionType,\r\n      },\r\n    ];\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetCOATransactionTankCodes,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let tempTankCodes = [];\r\n          result.EntityResult.forEach((item) => {\r\n            tempTankCodes.push(item.Code);\r\n          });\r\n          this.setState({\r\n            tankCodes: tempTankCodes,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            tankCodes: [],\r\n          });\r\n          console.log(\"Error in getting tankCodes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting tankCodes:\", error);\r\n      });\r\n  };\r\n\r\n  GetBayCode = () => {\r\n    let modCOAAssignment = lodash.cloneDeep(this.state.modCOAAssignment);\r\n    let selectCompartment = lodash.cloneDeep(this.state.selectCompartment);\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: modCOAAssignment.TransactionCode,\r\n      },\r\n      {\r\n        key: KeyCodes.coaSeqNumber,\r\n        value: selectCompartment.CompartmentSeqNumber,\r\n      },\r\n      {\r\n        key: KeyCodes.transportaionType,\r\n        value: modCOAAssignment.TransportationType,\r\n      },\r\n      {\r\n        key: KeyCodes.TransactionType,\r\n        value: modCOAAssignment.TransactionType,\r\n      },\r\n    ];\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetCOATransactionBayCodes,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let tempBayCodes = [];\r\n          result.EntityResult.forEach((item) => {\r\n            tempBayCodes.push(item.Code);\r\n          });\r\n          this.setState({\r\n            bayCodes: tempBayCodes,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            bayCodes: [],\r\n          });\r\n          console.log(\"Error in getting bayCodes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting bayCodes:\", error);\r\n      });\r\n  };\r\n\r\n  handleDeleteCompartmentDetail = (index) => {\r\n    this.setState({\r\n      deleteForIndex: index,\r\n      isShowDeleteComposite: true,\r\n    });\r\n  };\r\n\r\n  handleDelete = (isDelete) => {\r\n    try {\r\n      if (isDelete) {\r\n        let selectCompartment = lodash.cloneDeep(this.state.selectCompartment);\r\n        let modvalidationErrorslist = lodash.cloneDeep(\r\n          this.state.modvalidationErrorslist\r\n        );\r\n        let modCOAAssignment = lodash.cloneDeep(this.state.modCOAAssignment);\r\n        let deleteForIndex = lodash.clone(this.state.deleteForIndex);\r\n        let selectvalidationErrorslist = lodash.cloneDeep(\r\n          this.state.selectvalidationErrorslist\r\n        );\r\n\r\n        selectCompartment.COATransactionCompartmentDetails.splice(\r\n          deleteForIndex,\r\n          1\r\n        );\r\n\r\n        selectvalidationErrorslist.splice(deleteForIndex, 1);\r\n\r\n        var i = modCOAAssignment.COATransactionCompartments.findIndex((ele) => {\r\n          return (\r\n            ele.CompartmentSeqNumber === selectCompartment.CompartmentSeqNumber\r\n          );\r\n        });\r\n\r\n        modCOAAssignment.COATransactionCompartments[i] = selectCompartment;\r\n        modvalidationErrorslist[i] = selectvalidationErrorslist;\r\n        this.setState({\r\n          selectCompartment,\r\n          modCOAAssignment,\r\n          selectvalidationErrorslist,\r\n          isShowDeleteComposite: false,\r\n          modvalidationErrorslist,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          isShowDeleteComposite: false,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error occured on handleDelete\", error);\r\n    }\r\n  };\r\n\r\n  terminalSelectionChange(selectedTerminals, index) {\r\n    try {\r\n      let attributeMetaDataLists = lodash.cloneDeep(\r\n        this.state.attributeMetaDataLists\r\n      );\r\n      let modAttributeMetaDataLists = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataLists\r\n      );\r\n      const attributeValidationListErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationListErrors\r\n      );\r\n      let attributeMetaDataList = attributeMetaDataLists[index];\r\n      let attributesTerminalsList = [];\r\n      let modAttributeMetaDataList = modAttributeMetaDataLists[index];\r\n\r\n      const attributeValidationErrors = attributeValidationListErrors[index];\r\n      let selectCompartment = lodash.cloneDeep(this.state.selectCompartment);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        let existitem = modAttributeMetaDataList.COAASSIGNMENT.find(\r\n          (selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          }\r\n        );\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.COAASSIGNMENT.forEach(function (\r\n            attributeMetaData\r\n          ) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              let Attributevalue = selectCompartment.Attributes.find(\r\n                (coaAssignmentAttribute) => {\r\n                  return coaAssignmentAttribute.TerminalCode === terminal;\r\n                }\r\n              );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.COAASSIGNMENT.forEach(\r\n                  function (attributeMetaData) {\r\n                    let valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  }\r\n                );\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modAttributeMetaDataList = [];\r\n      modAttributeMetaDataList = attributesTerminalsList;\r\n      modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modAttributeMetaDataList\r\n      );\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        let existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n\r\n      this.setState({\r\n        modAttributeMetaDataLists,\r\n        attributeValidationListErrors,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"CoaAssignmentDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      let attributeMetaDataLists = lodash.cloneDeep(\r\n        this.state.attributeMetaDataLists\r\n      );\r\n      if (attributeMetaDataLists.length > 0) {\r\n        for (let i = 0; i < attributeMetaDataLists.length; i++) {\r\n          let element = attributeMetaDataLists[i];\r\n          if (\r\n            Array.isArray(element.COAASSIGNMENT) &&\r\n            element.COAASSIGNMENT.length > 0\r\n          ) {\r\n            this.terminalSelectionChange(\r\n              [element.COAASSIGNMENT[0].TerminalCode],\r\n              i\r\n            );\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAAssignmentDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let modCOAAssignment = lodash.cloneDeep(this.state.modCOAAssignment);\r\n      let selectCompartment = lodash.cloneDeep(this.state.selectCompartment);\r\n      let CompartmentIndex =\r\n        modCOAAssignment.COATransactionCompartments.findIndex((ele) => {\r\n          return (\r\n            ele.CompartmentSeqNumber === selectCompartment.CompartmentSeqNumber\r\n          );\r\n        });\r\n      let modAttributeMetaDataLists = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataLists\r\n      );\r\n\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList =\r\n        modAttributeMetaDataLists[CompartmentIndex];\r\n\r\n      let matchedAttributesList = modAttributeMetaDataList.COAASSIGNMENT.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationListErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationListErrors\r\n      );\r\n      let attributeValidationErrors =\r\n        attributeValidationListErrors[CompartmentIndex];\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({\r\n        attributeValidationListErrors,\r\n        modAttributeMetaDataLists,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"CoaAssignmentDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      let attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.COAASSIGNMENT\r\n          ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleTankCodeChange = (data, index) => {\r\n    try {\r\n      let selectCompartment = lodash.cloneDeep(this.state.selectCompartment);\r\n      let modCOAAssignment = lodash.cloneDeep(this.state.modCOAAssignment);\r\n      let selectvalidationErrorslist = lodash.cloneDeep(\r\n        this.state.selectvalidationErrorslist\r\n      );\r\n      if (data !== undefined && data !== \"\") {\r\n        selectvalidationErrorslist[index].TankCode = \"\";\r\n      }\r\n\r\n      if (selectCompartment.CompartmentSeqNumber >= 0) {\r\n        selectCompartment.COATransactionCompartmentDetails[index].TankCode =\r\n          data;\r\n\r\n        selectCompartment.COATransactionCompartmentDetails[index].BaseCOACode =\r\n          \"\";\r\n        selectCompartment.COATransactionCompartmentDetails[\r\n          index\r\n        ].COATransactionCompartmentDetailParameterInfos = [];\r\n\r\n        var i = modCOAAssignment.COATransactionCompartments.findIndex((ele) => {\r\n          return (\r\n            ele.CompartmentSeqNumber === selectCompartment.CompartmentSeqNumber\r\n          );\r\n        });\r\n\r\n        modCOAAssignment.COATransactionCompartments[i] = selectCompartment;\r\n\r\n        this.setState({\r\n          selectvalidationErrorslist,\r\n          selectCompartment,\r\n          modCOAAssignment,\r\n        });\r\n\r\n        axios(\r\n          RestAPIs.GetTransactionBaseCOACodes + \"?tankCode=\" + data,\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            let result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              let tempBaseCOACodes = [];\r\n              result.EntityResult.forEach((item) => {\r\n                tempBaseCOACodes.push(item.Code);\r\n              });\r\n              this.setState({\r\n                baseCOACodes: tempBaseCOACodes,\r\n              });\r\n            } else {\r\n              this.setState({\r\n                baseCOACodes: [],\r\n              });\r\n              console.log(\r\n                \"Error in gettemplateFromTemplate:\",\r\n                result.ErrorList\r\n              );\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\r\n              \"Error while getting Template FromTemplate List:\",\r\n              error\r\n            );\r\n          });\r\n\r\n        this.setState({\r\n          selectCompartment,\r\n          modCOAAssignment,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"CoaAssignmentDetailsComposite:Error occured on handleTankCodeChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleBaseCOAChange = (data, index) => {\r\n    let modCOAAssignment = lodash.cloneDeep(this.state.modCOAAssignment);\r\n    let selectCompartment = lodash.cloneDeep(this.state.selectCompartment);\r\n    let selectvalidationErrorslist = lodash.cloneDeep(\r\n      this.state.selectvalidationErrorslist\r\n    );\r\n\r\n    if (data !== undefined && data !== \"\") {\r\n      selectvalidationErrorslist[index].BaseCOACode = \"\";\r\n    }\r\n\r\n    if (selectCompartment.CompartmentSeqNumber >= 0) {\r\n      selectCompartment.COATransactionCompartmentDetails[index].BaseCOACode =\r\n        data;\r\n\r\n      var i = modCOAAssignment.COATransactionCompartments.findIndex((ele) => {\r\n        return (\r\n          ele.CompartmentSeqNumber === selectCompartment.CompartmentSeqNumber\r\n        );\r\n      });\r\n\r\n      modCOAAssignment.COATransactionCompartments[i] = selectCompartment;\r\n\r\n      this.setState(\r\n        { selectvalidationErrorslist, isReadyToRender: false },\r\n        () => {\r\n          this.setState({ isReadyToRender: true });\r\n        }\r\n      );\r\n\r\n      let customerCode = selectCompartment.CustomerCode;\r\n      let fpCode = selectCompartment.FinishedProductCode;\r\n\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.customerCode,\r\n          value: customerCode,\r\n        },\r\n        {\r\n          key: KeyCodes.finishedProductCode,\r\n          value: fpCode,\r\n        },\r\n        {\r\n          key: KeyCodes.coaManagementCode,\r\n          value: data,\r\n        },\r\n      ];\r\n      let obj = {\r\n        ShareHolderCode: this.props.selectedShareholder,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetParametersByAssignment,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            selectCompartment.COATransactionCompartmentDetails[\r\n              index\r\n            ].COATransactionCompartmentDetailParameterInfos =\r\n              result.EntityResult;\r\n            this.setState(\r\n              {\r\n                selectCompartment,\r\n                modCOAAssignment,\r\n                isReadyToRender: false,\r\n              },\r\n              () => {\r\n                this.setState({ isReadyToRender: true });\r\n              }\r\n            );\r\n          } else {\r\n            let notification = {\r\n              messageType: \"critical\",\r\n              message: \"COAAssignmentDetails_GetStatus\",\r\n              messageResultDetails: [\r\n                {\r\n                  keyFields: [\"COAAssignmentCode\"],\r\n                  keyValues: [modCOAAssignment.TransactionCode],\r\n                  isSuccess: false,\r\n                  errorMessage: \"\",\r\n                },\r\n              ],\r\n            };\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\";\r\n            notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n            notification.messageResultDetails[0].errorMessage =\r\n              result.ErrorList[0];\r\n            this.props.onSaved(modCOAAssignment, \"update\", notification);\r\n            selectCompartment.COATransactionCompartmentDetails[\r\n              index\r\n            ].COATransactionCompartmentDetailParameterInfos = [];\r\n\r\n            this.setState({\r\n              selectCompartment,\r\n              modCOAAssignment,\r\n            });\r\n            console.log(\"Error in getting bayCodes:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting bayCodes:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  handleChange = (propertyName, data, index) => {\r\n    try {\r\n      let selectCompartment = lodash.cloneDeep(this.state.selectCompartment);\r\n      let modCOAAssignment = lodash.cloneDeep(this.state.modCOAAssignment);\r\n\r\n      selectCompartment.COATransactionCompartmentDetails[index][propertyName] =\r\n        data;\r\n\r\n      var i = modCOAAssignment.COATransactionCompartments.findIndex((ele) => {\r\n        return (\r\n          ele.CompartmentSeqNumber === selectCompartment.CompartmentSeqNumber\r\n        );\r\n      });\r\n\r\n      modCOAAssignment.COATransactionCompartments[i] = selectCompartment;\r\n\r\n      this.setState({\r\n        selectCompartment,\r\n        modCOAAssignment,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAAssignmentDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        nextProps.selectedRow.TransactionCode !== undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getCOAAssignment(nextProps.selectedRow);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAAssignmentDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getAttributes(this.props.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAAssignmentDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(coaAssignmentRow) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [coaAssignmentAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaData: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationError:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.COAASSIGNMENT\r\n                ),\r\n            },\r\n            () => this.getCOAAssignment(coaAssignmentRow)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  getCOAAssignment(selectedRow) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: selectedRow.TransactionCode,\r\n      },\r\n      {\r\n        key: KeyCodes.transportaionType,\r\n        value: selectedRow.TransportationType,\r\n      },\r\n      {\r\n        key: KeyCodes.TransactionType,\r\n        value: selectedRow.TransactionType,\r\n      },\r\n    ];\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    let saveEnabled = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.modify,\r\n      fnCOAAssignment\r\n    );\r\n\r\n    axios(\r\n      RestAPIs.GetCOAAssignment,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          const attributeMetaData = lodash.cloneDeep(\r\n            this.state.attributeMetaData\r\n          );\r\n          const attributeValidationError = lodash.cloneDeep(\r\n            this.state.attributeValidationError\r\n          );\r\n          let selectCompartmentindex =\r\n            result.EntityResult.COATransactionCompartments.findIndex((c) => {\r\n              return c.COATransactionCompartmentDetails.length > 0;\r\n            });\r\n\r\n          let modvalidationErrorslist = [];\r\n          let attributeMetaDataLists = [];\r\n          let attributeValidationListErrors = [];\r\n\r\n          for (\r\n            let i = 0;\r\n            i < result.EntityResult.COATransactionCompartments.length;\r\n            i++\r\n          ) {\r\n            const ele = result.EntityResult.COATransactionCompartments[i];\r\n            modvalidationErrorslist.push([]);\r\n            attributeMetaDataLists.push(lodash.cloneDeep(attributeMetaData));\r\n            if (ele.Attributes !== null && ele.Attributes !== undefined) {\r\n              for (let n = 0; n < ele.Attributes.length; n++) {\r\n                let attribute = attributeMetaDataLists[i].COAASSIGNMENT.find(\r\n                  (att) => {\r\n                    return att.TerminalCode === ele.Attributes[n].TerminalCode;\r\n                  }\r\n                );\r\n                for (\r\n                  let index = 0;\r\n                  index < ele.Attributes[n].ListOfAttributeData.length;\r\n                  index++\r\n                ) {\r\n                  let attributeMeta = attribute.attributeMetaDataList.find(\r\n                    (arr) => {\r\n                      return (\r\n                        arr.Code ===\r\n                        ele.Attributes[n].ListOfAttributeData[index]\r\n                          .AttributeCode\r\n                      );\r\n                    }\r\n                  );\r\n\r\n                  if (attributeMeta !== null && attributeMeta !== undefined) {\r\n                    attributeMeta.DefaultValue =\r\n                      ele.Attributes[n].ListOfAttributeData[\r\n                        index\r\n                      ].AttributeValue;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            attributeValidationListErrors.push(\r\n              lodash.cloneDeep(attributeValidationError)\r\n            );\r\n            ele.COATransactionCompartmentDetails.forEach(() => {\r\n              modvalidationErrorslist[i].push(\r\n                Utilities.getInitialValidationErrors(coaassignmentValidationDef)\r\n              );\r\n            });\r\n          }\r\n\r\n          let selectCompartment =\r\n            result.EntityResult.COATransactionCompartments[0];\r\n          let selectvalidationErrorslist = modvalidationErrorslist[0];\r\n\r\n          if (selectCompartmentindex > -1) {\r\n            selectCompartment =\r\n              result.EntityResult.COATransactionCompartments[\r\n                selectCompartmentindex\r\n              ];\r\n\r\n            selectvalidationErrorslist =\r\n              modvalidationErrorslist[selectCompartmentindex];\r\n          }\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              coaAssignment: result.EntityResult,\r\n              modCOAAssignment: result.EntityResult,\r\n              saveEnabled: saveEnabled,\r\n              selectCompartment: selectCompartment,\r\n              modvalidationErrorslist,\r\n              selectvalidationErrorslist,\r\n              attributeMetaDataLists,\r\n              modAttributeMetaDataLists: attributeMetaDataLists,\r\n              attributeValidationListErrors,\r\n            },\r\n            () => {\r\n              this.localNodeAttribute();\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            coaAssignment: lodash.cloneDeep(emptyCOAAssignment),\r\n            modCOAAssignment: lodash.cloneDeep(emptyCOAAssignment),\r\n            saveEnabled: saveEnabled,\r\n          });\r\n          console.log(\"Error in getCOAAssignment:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting coaAssignment:\", error, selectedRow);\r\n      });\r\n  }\r\n\r\n  validateSave() {\r\n    let attributeList = [];\r\n    this.state.modAttributeMetaDataLists.forEach((ele) => {\r\n      let attribute = Utilities.attributesConverttoLocaleString(\r\n        ele.COAASSIGNMENT\r\n      );\r\n      attributeList.push(attribute);\r\n    });\r\n\r\n    let selectvalidationErrorslist = lodash.cloneDeep(\r\n      this.state.selectvalidationErrorslist\r\n    );\r\n    let selectCompartment = lodash.cloneDeep(this.state.selectCompartment);\r\n\r\n    selectCompartment.COATransactionCompartmentDetails.forEach((obj, i) => {\r\n      Object.keys(coaassignmentValidationDef).forEach(function (key) {\r\n        selectvalidationErrorslist[i][key] = Utilities.validateField(\r\n          coaassignmentValidationDef[key],\r\n          obj[key]\r\n        );\r\n      });\r\n    });\r\n\r\n    let modvalidationErrorslist = lodash.cloneDeep(\r\n      this.state.modvalidationErrorslist\r\n    );\r\n    let modCOAAssignment = lodash.cloneDeep(this.state.modCOAAssignment);\r\n    modCOAAssignment.COATransactionCompartments.forEach((ele, m) => {\r\n      modCOAAssignment.COATransactionCompartments[\r\n        m\r\n      ].COATransactionCompartmentDetails.forEach((obj, n) => {\r\n        Object.keys(coaassignmentValidationDef).forEach(function (key) {\r\n          modvalidationErrorslist[m][n][key] = Utilities.validateField(\r\n            coaassignmentValidationDef[key],\r\n            obj[key]\r\n          );\r\n        });\r\n      });\r\n    });\r\n\r\n    this.setState({ selectvalidationErrorslist, modvalidationErrorslist });\r\n    let returnValue = true;\r\n\r\n    selectCompartment.COATransactionCompartmentDetails.forEach((obj) => {\r\n      if (\r\n        obj.BayCode === undefined ||\r\n        obj.BayCode === null ||\r\n        obj.BayCode === \"\"\r\n      ) {\r\n        return (returnValue = false);\r\n      }\r\n      if (\r\n        obj.TankCode === undefined ||\r\n        obj.TankCode === null ||\r\n        obj.BayCode === \"\"\r\n      ) {\r\n        return (returnValue = false);\r\n      }\r\n      if (\r\n        obj.BaseCOACode === undefined ||\r\n        obj.BaseCOACode === null ||\r\n        obj.BayCode === \"\"\r\n      ) {\r\n        return (returnValue = false);\r\n      }\r\n    });\r\n    if (returnValue)\r\n      modvalidationErrorslist.forEach((ele, m) => {\r\n        modvalidationErrorslist[m].forEach((validationErrors, n) => {\r\n          if (returnValue) {\r\n            returnValue = Object.values(validationErrors).every(function (\r\n              value\r\n            ) {\r\n              return value === \"\";\r\n            });\r\n          }\r\n        });\r\n      });\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"COAAssignmentDetails_GetStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"COAAssignmentCode\"],\r\n          keyValues: [modCOAAssignment.TransactionCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    if (returnValue) {\r\n      let attributeValidationListErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationListErrors\r\n      );\r\n\r\n      for (let i = 0; i < attributeValidationListErrors.length; i++) {\r\n        attributeValidationListErrors[i].forEach(\r\n          (attributeValidationErrors) => {\r\n            attributeList[i].forEach((attribute) => {\r\n              if (\r\n                attributeValidationErrors.TerminalCode ===\r\n                attribute.TerminalCode\r\n              ) {\r\n                attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n                  attributeValidationErrors.attributeValidationErrors[\r\n                    attributeMetaData.Code\r\n                  ] = Utilities.valiateAttributeField(\r\n                    attributeMetaData,\r\n                    attributeMetaData.DefaultValue\r\n                  );\r\n                });\r\n              }\r\n            });\r\n          }\r\n        );\r\n      }\r\n      this.setState({ modvalidationErrorslist, attributeValidationListErrors });\r\n\r\n      let compart = [];\r\n\r\n      for (let i = 0; i < attributeValidationListErrors.length; i++) {\r\n        let compartNum = i + 1;\r\n        attributeValidationListErrors[i].forEach((x) => {\r\n          if (\r\n            !Object.values(x.attributeValidationErrors).every(function (value) {\r\n              return value === \"\" || value === null;\r\n            }) &&\r\n            compart.indexOf(compartNum) < 0\r\n          ) {\r\n            compart.push(compartNum);\r\n          }\r\n        });\r\n      }\r\n\r\n      if (compart.length > 0) {\r\n        returnValue = false;\r\n        notification.messageResultDetails[0].errorMessage =\r\n          \"ERRMSG_COAASSIGNMENT_VALIDATION\" +\r\n          Constants.delimiter +\r\n          compart.toString();\r\n        this.props.onSaved(modCOAAssignment, \"update\", notification);\r\n      }\r\n    }\r\n\r\n    if (returnValue) {\r\n      for (\r\n        let m = 0;\r\n        m < modCOAAssignment.COATransactionCompartments.length;\r\n        m++\r\n      ) {\r\n        const compart = modCOAAssignment.COATransactionCompartments[m];\r\n\r\n        for (\r\n          let n = 0;\r\n          n < compart.COATransactionCompartmentDetails.length;\r\n          n++\r\n        ) {\r\n          const CompartmentDetail = compart.COATransactionCompartmentDetails[n];\r\n          if (\r\n            CompartmentDetail.COATransactionCompartmentDetailParameterInfos\r\n              .length === 0\r\n          ) {\r\n            notification.messageResultDetails[0].errorMessage =\r\n              \"ERRMSG_COAASSIGNMENT_CUSTOMERCOA_EMPTY\";\r\n            this.props.onSaved(modCOAAssignment, \"update\", notification);\r\n            returnValue = false;\r\n            break;\r\n          }\r\n        }\r\n        if (!returnValue) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  saveCOAAssignment = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false, isReadyToRender: false });\r\n      let modCOAAssignment = lodash.cloneDeep(this.state.modCOAAssignment);\r\n\r\n      let selectCompartment = lodash.cloneDeep(this.state.selectCompartment);\r\n\r\n      let selectindex = modCOAAssignment.COATransactionCompartments.findIndex(\r\n        (ele) => {\r\n          return (\r\n            ele.CompartmentSeqNumber === selectCompartment.CompartmentSeqNumber\r\n          );\r\n        }\r\n      );\r\n\r\n      modCOAAssignment.COATransactionCompartments[selectindex] =\r\n        selectCompartment;\r\n\r\n      for (\r\n        let i = 0;\r\n        i < modCOAAssignment.COATransactionCompartments.length;\r\n        i++\r\n      ) {\r\n        let element = modCOAAssignment.COATransactionCompartments[i];\r\n\r\n        let attributeList = Utilities.attributesConverttoLocaleString(\r\n          this.state.modAttributeMetaDataLists[i].COAASSIGNMENT\r\n        );\r\n\r\n        attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n        element.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n      }\r\n\r\n      this.updateCOAAssignment(modCOAAssignment);\r\n    } catch (error) {\r\n      console.log(\"COAAssignmentDetailsComposite : Error in saveCOAAssignment\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n      if (this.validateSave()) {\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        this.setState({ showAuthenticationLayout }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveCOAAssignment();\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAAssignmentDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  updateCOAAssignment(modCOAAssignment) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.shipmentCode,\r\n        value: modCOAAssignment.TransactionCode,\r\n      },\r\n    ];\r\n\r\n    if (modCOAAssignment.ShareholderCode == null) {\r\n      modCOAAssignment.ShareholderCode = this.props.selectedShareholder;\r\n    }\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      KeyCodes: keyCode,\r\n      Entity: modCOAAssignment,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"COAAssignmentDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"COAAssignmentCode\"],\r\n          keyValues: [modCOAAssignment.TransactionCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.COAAssignmentUpdate,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n\r\n        if (!result.IsSuccess) {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in updateCOAAssignment:\", result.ErrorList);\r\n        }\r\n        this.setState(\r\n          {\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnCOAAssignment\r\n            ),\r\n            showAuthenticationLayout: false,\r\n            modCOAAssignment,\r\n          },\r\n          () => this.getCOAAssignment(modCOAAssignment)\r\n        );\r\n        this.props.onSaved(modCOAAssignment, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modCOAAssignment, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnCOAAssignment\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const coaAssignment = lodash.cloneDeep(this.state.coaAssignment);\r\n\r\n      let selectCompartmentIndex =\r\n        coaAssignment.COATransactionCompartments.findIndex((c) => {\r\n          return c.COATransactionCompartmentDetails.length > 0;\r\n        });\r\n\r\n      if (selectCompartmentIndex < 0) {\r\n        selectCompartmentIndex = 0;\r\n      }\r\n\r\n      let modvalidationErrorslist = [];\r\n      for (\r\n        let i = 0;\r\n        i < coaAssignment.COATransactionCompartments.length;\r\n        i++\r\n      ) {\r\n        const ele = coaAssignment.COATransactionCompartments[i];\r\n        modvalidationErrorslist.push([]);\r\n        ele.COATransactionCompartmentDetails.forEach(() => {\r\n          modvalidationErrorslist[i].push(\r\n            Utilities.getInitialValidationErrors(coaassignmentValidationDef)\r\n          );\r\n        });\r\n      }\r\n\r\n      const selectvalidationErrorslist =\r\n        modvalidationErrorslist[selectCompartmentIndex];\r\n\r\n      this.setState(\r\n        {\r\n          modAttributeMetaDataList: [],\r\n          modCOAAssignment: { ...coaAssignment },\r\n          selectCompartment:\r\n            coaAssignment.COATransactionCompartments[selectCompartmentIndex],\r\n          selectvalidationErrorslist,\r\n          modvalidationErrorslist,\r\n        },\r\n        () => {\r\n          this.localNodeAttribute();\r\n          this.handleResetAttributeValidationError();\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"COAAssignmentDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleCellDataEdit = (newValue, cellData, index) => {\r\n    try {\r\n      let selectCompartment = lodash.cloneDeep(this.state.selectCompartment);\r\n\r\n      selectCompartment.COATransactionCompartmentDetails[\r\n        index\r\n      ].COATransactionCompartmentDetailParameterInfos[cellData.rowIndex][\r\n        cellData.field\r\n      ] = newValue;\r\n\r\n      this.setState({ selectCompartment });\r\n    } catch (error) {\r\n      console.log(\":Error occured on handleCellDataEdit\", error);\r\n    }\r\n  };\r\n\r\n  handleViewProductCOAReport = () => {\r\n    if (this.reportServiceURI === undefined) {\r\n      axios(\r\n        RestAPIs.GetReportServiceURI,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        if (response.data.IsSuccess) {\r\n          this.reportServiceURI = response.data.EntityResult;\r\n          this.setState({ showReport: true });\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ showReport: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      tankCodes: this.state.tankCodes,\r\n      baseCOACodes: this.state.baseCOACodes,\r\n      bayCodes: this.state.bayCodes,\r\n    };\r\n\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"COAViewComapartment_LastUpdatedTime\",\r\n        fieldValue:\r\n          this.state.selectCompartment.LastUpdatedTime !== undefined\r\n            ? this.state.selectCompartment.LastUpdatedTime.toString().indexOf(\r\n                \"0001-01-01\"\r\n              ) >= 0\r\n              ? \"\"\r\n              : new Date(\r\n                  this.state.selectCompartment.LastUpdatedTime\r\n                ).toLocaleDateString() +\r\n                \" \" +\r\n                new Date(\r\n                  this.state.selectCompartment.LastUpdatedTime\r\n                ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"COAViewComapartment_LastUpdatedBy\",\r\n        fieldValue:\r\n          this.state.selectCompartment.LastUpdatedBy == null\r\n            ? \"\"\r\n            : this.state.selectCompartment.LastUpdatedBy,\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <ErrorBoundary>\r\n              <TMDetailsHeader\r\n                newEntityName=\"COAAssignment_Title\"\r\n                entityCode={t(\"COAAssignment_Title\")}\r\n                popUpContents={popUpContents}\r\n              ></TMDetailsHeader>\r\n            </ErrorBoundary>\r\n          )}\r\n        </TranslationConsumer>\r\n        <ErrorBoundary>\r\n          <TMUserActionsForDeleteComposite\r\n            onDelete={this.handleDelete}\r\n            isShowDeleteComposite={this.state.isShowDeleteComposite}\r\n            confirmDeleteText=\"Confirm_Delete\"\r\n            cancelText=\"Cancel\"\r\n            submitText=\"PipelineDispatch_BtnSubmit\"\r\n          ></TMUserActionsForDeleteComposite>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <COAAssignmentDetails\r\n            coaAssignment={this.state.coaAssignment}\r\n            modCOAAssignment={this.state.modCOAAssignment}\r\n            selectCompartment={this.state.selectCompartment}\r\n            selectvalidationErrorslist={this.state.selectvalidationErrorslist}\r\n            listOptions={listOptions}\r\n            onFieldChange={this.handleChange}\r\n            setCurrentList={this.setCurrentList}\r\n            handleCellDataEdit={this.handleCellDataEdit}\r\n            attributeValidationListErrors={\r\n              this.state.attributeValidationListErrors\r\n            }\r\n            modAttributeMetaDataLists={this.state.modAttributeMetaDataLists}\r\n            attributeMetaDataLists={this.state.attributeMetaDataLists}\r\n            onAttributeDataChange={this.handleAttributeDataChange}\r\n            handleAddCompartmentDetail={this.handleAddCompartmentDetail}\r\n            handleDeleteCompartmentDetail={this.handleDeleteCompartmentDetail}\r\n            AddEnable={Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnCOAAssignment\r\n            )}\r\n            DeleteEnable={Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.remove,\r\n              fnCOAAssignment\r\n            )}\r\n            handleTankCodeChange={this.handleTankCodeChange}\r\n            handleBaseCOAChange={this.handleBaseCOAChange}\r\n            pageSize={\r\n              this.props.userDetails.EntityResult.PageAttibutes\r\n                .WebPortalListPageSize\r\n            }\r\n          ></COAAssignmentDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <div className=\"row userActionPosition\">\r\n                <div className=\"col col-2\">\r\n                  <Button\r\n                    className=\"backButton\"\r\n                    onClick={this.props.onBack}\r\n                    content={t(\"Back\")}\r\n                  ></Button>\r\n                </div>\r\n                <div className=\"col col-10\" style={{ textAlign: \"right\" }}>\r\n                  {this.state.selectCompartment === undefined ||\r\n                  this.state.selectCompartment.CompartmentSeqNumber ===\r\n                    -1 ? null : (\r\n                    <Button\r\n                      content={t(\"COAAssignment_ViewCOAReport\")}\r\n                      onClick={() => this.handleViewProductCOAReport()}\r\n                    ></Button>\r\n                  )}\r\n                  <Button\r\n                    content={t(\"LookUpData_btnReset\")}\r\n                    className=\"cancelButton\"\r\n                    onClick={() => this.handleReset()}\r\n                  ></Button>\r\n                  <Button\r\n                    content={t(\"Save\")}\r\n                    disabled={!this.state.saveEnabled}\r\n                    onClick={() => this.handleSave()}\r\n                  ></Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </TranslationConsumer>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.modify}\r\n            functionGroup={fnCOAAssignment}\r\n            handleOperation={this.saveCOAAssignment}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n        {this.renderModal()}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(COAAssignmentDetailsComposite);\r\n\r\nCOAAssignmentDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  genericProps: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport * as WjCore from \"@grapecity/wijmo\";\r\nimport { ReportViewer } from \"@grapecity/wijmo.react.viewer\";\r\nimport * as wjViewer from \"@grapecity/wijmo.viewer\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { connect } from \"react-redux\";\r\n\r\nTMReportViewer.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\n\r\nTMReportViewer.defaultProps = {\r\n  parameters: {},\r\n};\r\n\r\nWjCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nfunction TMReportViewer({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  parameters,\r\n  filePath,\r\n  ...props\r\n}) {\r\n  //   const [proxyHost, setProxyHost] = useState(\r\n  //     \"http://localhost:8888/TMWebProxyAPI/\"\r\n  //   );\r\n  //   const [reportServiceHost, setReportServiceHost] = useState(\r\n  //     \"http://localhost:5632/\"\r\n  //   );\r\n  //   const [reportUrl, setReportUrl] = useState(proxyHost + \"api/report\");\r\n  //   const [filePath, setFilePath] = useState(\r\n  //     \"TM/\" + \"TMReports/\" + \"CarrierCompanyReport\"\r\n  //   );\r\n  const reportUrl = proxyServerHost + \"api/report\";\r\n  //const filePath = \"TM/\" + \"TMReports/\" + reportName;\r\n\r\n  const beforeXhrRequestSend = (s, event) => {\r\n    // use this event for Authorization purpose\r\n    const prevBeforeSend = event.settings.beforeSend;\r\n    event.settings.beforeSend = function (xhr) {\r\n      prevBeforeSend && prevBeforeSend(xhr);\r\n      //here you may add the params for XMLHttpRequest as required\r\n      if (!props.userDetails.EntityResult.IsWebPortalUser)\r\n        xhr.withCredentials = true;\r\n      if (xhr.URL_DEBUG.indexOf(\"parameters\") > -1) {\r\n        xhr.onreadystatechange = function () {\r\n          if (this.readyState === 4 && this.status === 200) {\r\n            var host = s.hostElement;\r\n            setTimeout(() => {\r\n              var splitter = host.querySelector(\".wj-viewer-splitter\");\r\n              var param = host\r\n                .querySelector(\".wj-viewer-tabsleft\")\r\n                .querySelectorAll(\"li\")[2];\r\n              if (!param.disabled) {\r\n                param.className = \"hidden\";\r\n                splitter.click();\r\n              }\r\n            }, 1000);\r\n          }\r\n        };\r\n      }\r\n    };\r\n  };\r\n  let header = {\r\n    Authorization: \"Bearer \" + props.tokenDetails.tokenInfo,\r\n  };\r\n\r\n  // let header = {\r\n  //   Authorization: \"Bearer \" + \"fiewjfjewifi\",\r\n  // };\r\n\r\n  const initViewer = (s, event) => {\r\n    wjViewer._ReportService.prototype.load = function (data) {\r\n      var _this = this;\r\n      var promise = new wjViewer._Promise();\r\n      if (!this._checkReportController(promise)) {\r\n        return promise;\r\n      }\r\n      this.httpRequest(this._getReportInstancesUrl(), {\r\n        method: \"POST\",\r\n        data: data,\r\n      }).then(\r\n        function (xhr) {\r\n          var v = wjViewer._parseReportExecutionInfo(xhr.responseText);\r\n          _this._instanceId = v.id;\r\n          _this._status = wjViewer._ExecutionStatus.loaded;\r\n          _this._outlinesLocation = v.outlinesLocation;\r\n          _this._statusLocation = v.statusLocation.replace(\r\n            reportServiceHost,\r\n            proxyServerHost\r\n          );\r\n          _this._pageSettingsLocation = v.pageSettingsLocation;\r\n          _this._featuresLocation = v.featuresLocation;\r\n          _this._parametersLocation = v.parametersLocation;\r\n          promise.resolve(v);\r\n        },\r\n        function (xhr) {\r\n          promise.reject(_this._getError(xhr));\r\n        }\r\n      );\r\n      return promise;\r\n    };\r\n  };\r\n\r\n  //console.log(props.userDetails.EntityResult.IsWebPortalUser, header);\r\n  return (\r\n    <div>\r\n      {props.userDetails.EntityResult.IsWebPortalUser ? (\r\n        <div>\r\n          <ReportViewer\r\n            requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <ReportViewer\r\n            //requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TMReportViewer);\r\n","import React from \"react\";\r\nimport { Modal, Button, Header } from \"@scuf/common\";\r\nimport TMReportViewer from \"../Common/TMReportViewer\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nReportDetails.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  filePath: PropTypes.string.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  showReport: PropTypes.bool.isRequired,\r\n  handleModalClose: PropTypes.func.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\nReportDetails.defaultProps = {\r\n  parameters: {},\r\n};\r\nexport default function ReportDetails({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  filePath,\r\n  handleBack,\r\n  showReport,\r\n  handleModalClose,\r\n  parameters,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <Modal\r\n      style={{ padding: \"0px\" }}\r\n      size=\"fullscreen\"\r\n      open={showReport}\r\n      // onClose={handleModalClose}\r\n    >\r\n      <div>\r\n        <Header title={t(\"Header_TerminalManager\")} menu={false} />\r\n        <TMReportViewer\r\n          proxyServerHost={proxyServerHost}\r\n          reportServiceHost={reportServiceHost}\r\n          filePath={filePath}\r\n          parameters={parameters}\r\n        />\r\n        <div style={{ marginTop: \"10px\", marginLeft: \"20px\" }}>\r\n          <Button\r\n            className=\"backButton\"\r\n            onClick={handleBack}\r\n            content={t(\"Report_Back\")}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["COAAssignmentDetails","_ref","coaAssignment","modCOAAssignment","selectvalidationErrorslist","listOptions","onFieldChange","handleCellDataEdit","setCurrentList","handleAddCompartmentDetail","handleDeleteCompartmentDetail","handleTankCodeChange","handleBaseCOAChange","pageSize","attributeValidationListErrors","modAttributeMetaDataLists","attributeMetaDataLists","onAttributeDataChange","selectCompartment","AddEnable","DeleteEnable","handleValidationErrorFilter","attributeValidationErrors","terminal","attributeValidation","find","selectedAttribute","TerminalCode","handleCustomEditTextBox","cellData","index","_jsx","Input","fluid","value","rowData","field","onChange","reserveSpace","CompartmentIndex","COATransactionCompartments","findIndex","ele","CompartmentSeqNumber","TranslationConsumer","children","t","_jsxs","className","TransactionCode","TransactionStatus","TransportationType","TransactionType","style","alignItems","border","minHeight","map","item","n","onClick","e","FinishedProductCode","COATransactionCompartmentDetails","length","class","CustomerCode","DestinationCode","Button","disabled","content","COAASSIGNMENT","attire","ErrorBoundary","Accordion","Content","title","AttributeDetails","selectedAttributeList","attributeMetaDataList","compartDetail","i","float","Icon","root","name","size","color","Select","placeholder","indicator","BayCode","text","label","options","Utilities","bayCodes","data","error","undefined","ID","multiple","search","noResultsMessage","TankCode","tankCodes","BaseCOACode","baseCOACodes","BaseCOANumber","FinishedProductCOACode","FinishedProductCOANumber","DataTable","COATransactionCompartmentDetailParameterInfos","rows","searchPlaceholder","Column","header","editFieldType","editable","customEditRenderer","Array","isArray","Pagination","TMConfirmationModel","onConfirm","isShow","confirmText","cancelText","submitText","padding","marginTop","Modal","open","Footer","type","TMUserActionsForDeleteComposite","onDelete","isShowDeleteComposite","confirmDeleteText","COAAssignmentDetailsComposite","Component","constructor","arguments","state","lodash","emptyCOAAssignment","modvalidationErrorslist","isReadyToRender","saveEnabled","showAuthenticationLayout","attributeMetaData","attributeValidationError","deleteForIndex","showReport","handleModalBack","this","setState","GetBayCode","GetTankCode","console","log","push","COATransactionCompartmentDetailInfo","coaassignmentValidationDef","keyCode","key","KeyCodes","obj","ShareHolderCode","props","selectedShareholder","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","tempTankCodes","EntityResult","forEach","Code","ErrorList","catch","tempBayCodes","handleDelete","isDelete","splice","handleAttributeDataChange","attribute","matchedAttributes","matchedAttributesList","filter","modattribute","DefaultValue","tempBaseCOACodes","customerCode","fpCode","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","handleChange","propertyName","handleAuthenticationClose","saveCOAAssignment","selectindex","element","attributeList","Attributes","updateCOAAssignment","handleSave","validateSave","userDetails","IsWebPortalUser","handleReset","selectCompartmentIndex","c","modAttributeMetaDataList","localNodeAttribute","handleResetAttributeValidationError","newValue","rowIndex","handleViewProductCOAReport","reportServiceURI","renderModal","path","IsArchived","Constants","paramValues","Culture","UICulture","Shareholder","ShipmentCode","TransportType","ReportDetails","handleBack","handleModalClose","proxyServerHost","reportServiceHost","filePath","parameters","terminalSelectionChange","selectedTerminals","attributesTerminalsList","existitem","Attributevalue","coaAssignmentAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","Object","keys","componentWillReceiveProps","nextProps","selectedRow","getCOAAssignment","componentDidMount","getAttributes","coaAssignmentRow","coaAssignmentAttributeEntity","FunctionsList","functionGroups","modify","fnCOAAssignment","selectCompartmentindex","att","attributeMeta","arr","m","returnValue","validationErrors","values","every","compart","compartNum","indexOf","toString","ShareholderCode","Entity","render","popUpContents","fieldName","fieldValue","LastUpdatedTime","Date","toLocaleDateString","toLocaleTimeString","LastUpdatedBy","TMDetailsHeader","newEntityName","entityCode","add","remove","PageAttibutes","WebPortalListPageSize","onBack","textAlign","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth","margin","Popup","marginLeft","position","List","defaultProps","handleAttributeDateValue","convertAttributeDatetoString","chars","split","Dateval","getFullYear","getMonth","slice","getDate","DataType","toLowerCase","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","Checkbox","checked","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","toLocaleString","TMReportViewer","reportUrl","beforeXhrRequestSend","s","event","prevBeforeSend","settings","beforeSend","xhr","withCredentials","URL_DEBUG","onreadystatechange","readyState","status","host","hostElement","setTimeout","splitter","querySelector","param","querySelectorAll","click","Authorization","initViewer","wjViewer","prototype","load","_this","promise","_checkReportController","httpRequest","_getReportInstancesUrl","method","v","responseText","_instanceId","id","_status","loaded","_outlinesLocation","outlinesLocation","_statusLocation","statusLocation","replace","_pageSettingsLocation","pageSettingsLocation","_featuresLocation","featuresLocation","_parametersLocation","parametersLocation","resolve","reject","_getError","ReportViewer","requestHeaders","height","serviceUrl","initialized","beforeSendRequest","WjCore","useTranslation","Header","menu","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","getOptionsWithSelect","ddlOptions","selectOptionText","option","unshift","language","window","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell"],"sourceRoot":""}