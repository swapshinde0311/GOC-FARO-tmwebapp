{"version":3,"file":"static/js/6039.bf8d0492.chunk.js","mappings":"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","sources":["Components/UIBase/Details/MarineReceiptManualEntryDetails.jsx","Components/UIBase/Details/MarineReceiptManualEntryFPTransactionsDetails.jsx","Components/UIBase/Details/MarineReceiptManualEntryBaseProductDetails.jsx","Components/Composite/Details/MarineReceiptManualEntryDetailsComposite.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Select } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getCurrentDateFormat,\r\n  getOptionsWithSelect,\r\n} from \"../../../JS/functionalUtilities\";\r\n\r\nMarineReceiptManualEntryDetails.propTypes = {\r\n  listOptions: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  railMarineTransactionCommonInfo: PropTypes.object.isRequired,\r\n  marineReceiptManualEntryEnabled: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport function MarineReceiptManualEntryDetails({\r\n  listOptions,\r\n  validationErrors,\r\n  railMarineTransactionCommonInfo,\r\n  onFieldChange,\r\n  onDateTextChange,\r\n  selectedCompartment,\r\n  marineReceiptManualEntryEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={\r\n                  railMarineTransactionCommonInfo.CompartmentSeqNoInVehicle\r\n                }\r\n                label={t(\"MarineReceiptManualEntry_CompSeqNo\")}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"CompartmentSeqNoInVehicle\", data)\r\n                }\r\n                indicator=\"required\"\r\n                options={listOptions.compartmentSeqNoInVehicleList}\r\n                reserveSpace={false}\r\n                search={false}\r\n                multiple={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.CompartmentSeqNoInVehicle)}\r\n                disabled={selectedCompartment.ReceiptCompartmentStatus === null}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={railMarineTransactionCommonInfo.BayCode}\r\n                label={t(\"MarineReceiptManualEntry_Bay\")}\r\n                indicator=\"required\"\r\n                options={listOptions.berthList}\r\n                onChange={(data) => onFieldChange(\"BayCode\", data)}\r\n                reserveSpace={false}\r\n                search={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.BayCode)}\r\n                disabled={!marineReceiptManualEntryEnabled}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"BCU_Code\")}\r\n                value={railMarineTransactionCommonInfo.BCUCode}\r\n                indicator=\"required\"\r\n                options={listOptions.bcuCodeList}\r\n                onChange={(data) => onFieldChange(\"BCUCode\", data)}\r\n                reserveSpace={false}\r\n                search={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.BCUCode)}\r\n                disabled={!marineReceiptManualEntryEnabled}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={railMarineTransactionCommonInfo.UnLoadingArm}\r\n                label={t(\"MarineReceiptManualEntry_UnloadingArm\")}\r\n                options={listOptions.unLoadingArmList}\r\n                onChange={(data) => onFieldChange(\"UnLoadingArm\", data)}\r\n                reserveSpace={false}\r\n                search={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.UnLoadingArm)}\r\n                disabled={!marineReceiptManualEntryEnabled}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_UnloadStartTime\")}\r\n                value={new Date(railMarineTransactionCommonInfo.StartTime)}\r\n                onChange={(data) => onFieldChange(\"StartTime\", data)}\r\n                type=\"datetime\"\r\n                disablePast={false}\r\n                indicator=\"required\"\r\n                reserveSpace={false}\r\n                disableFuture={true}\r\n                minuteStep={1}\r\n                displayFormat={getCurrentDateFormat()}\r\n                onTextChange={(value, error) => {\r\n                  onDateTextChange(\"StartTime\", value, error);\r\n                }}\r\n                error={t(validationErrors.StartTime)}\r\n                disabled={!marineReceiptManualEntryEnabled}\r\n              ></DatePicker>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_UnloadEndTime\")}\r\n                value={new Date(railMarineTransactionCommonInfo.EndTime)}\r\n                onChange={(data) => onFieldChange(\"EndTime\", data)}\r\n                type=\"datetime\"\r\n                disablePast={false}\r\n                indicator=\"required\"\r\n                reserveSpace={false}\r\n                disableFuture={true}\r\n                minuteStep={1}\r\n                displayFormat={getCurrentDateFormat()}\r\n                onTextChange={(value, error) => {\r\n                  onDateTextChange(\"EndTime\", value, error);\r\n                }}\r\n                error={t(validationErrors.EndTime)}\r\n                disabled={!marineReceiptManualEntryEnabled}\r\n              ></DatePicker>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_FinishedProduct\")}\r\n                value={railMarineTransactionCommonInfo.FinishedProductCode}\r\n                disabled={true}\r\n                onChange={(data) => onFieldChange(\"FinishedProductCode\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.FinishedProductCode)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                indicator=\"required\"\r\n                label={t(\"MarineReceiptManualEntry_QuantityUOM\")}\r\n                value={railMarineTransactionCommonInfo.QuantityUOM}\r\n                onChange={(data) => onFieldChange(\"QuantityUOM\", data)}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.quantityUOMList,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                reserveSpace={false}\r\n                search={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.QuantityUOM)}\r\n                disabled={!marineReceiptManualEntryEnabled}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_TransactionNo\")}\r\n                value={railMarineTransactionCommonInfo.TransactionID}\r\n                onChange={(data) => onFieldChange(\"TransactionID\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.TransactionID)}\r\n                disabled={!marineReceiptManualEntryEnabled}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_Remarks\")}\r\n                value={railMarineTransactionCommonInfo.Remarks}\r\n                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.Remarks)}\r\n                disabled={!marineReceiptManualEntryEnabled}\r\n              ></Input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Input, Select, Accordion } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getOptionsWithSelect } from \"../../../JS/functionalUtilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\n\r\nMarineReceiptManualEntryFPTransactionsDetails.propTypes = {\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.object.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  railMarineTransactionCommonInfo: PropTypes.object.isRequired,\r\n  selectedAttributeList: PropTypes.array.isRequired,\r\n  handleAttributeCellDataEdit: PropTypes.func.isRequired,\r\n  attributeValidationErrors: PropTypes.array.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport function MarineReceiptManualEntryFPTransactionsDetails({\r\n  validationErrors,\r\n  listOptions,\r\n  onFieldChange,\r\n  railMarineTransactionCommonInfo,\r\n  selectedAttributeList,\r\n  handleAttributeCellDataEdit,\r\n  attributeValidationErrors,\r\n  isEnterpriseNode,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                indicator=\"required\"\r\n                label={t(\"GrossQuantity\")}\r\n                value={railMarineTransactionCommonInfo.GrossQuantity}\r\n                onChange={(data) => onFieldChange(\"GrossQuantity\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.GrossQuantity)}\r\n              ></Input>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_NetQuantity\")}\r\n                value={railMarineTransactionCommonInfo.NetQuantity}\r\n                onChange={(data) => onFieldChange(\"NetQuantity\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.NetQuantity)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_Temperature\")}\r\n                value={railMarineTransactionCommonInfo.Temperature}\r\n                onChange={(data) => onFieldChange(\"Temperature\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.Temperature)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"MarineReceiptManualEntry_TemperatureUOM\")}\r\n                value={railMarineTransactionCommonInfo.TemperatureUOM}\r\n                onChange={(data) => onFieldChange(\"TemperatureUOM\", data)}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.temperatureUOMList,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                reserveSpace={false}\r\n                search={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.TemperatureUOM)}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"Density\")}\r\n                value={railMarineTransactionCommonInfo.ProductDensity}\r\n                onChange={(data) => onFieldChange(\"ProductDensity\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.ProductDensity)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"BaseProductInfox_UOM\")}\r\n                value={railMarineTransactionCommonInfo.ProductDensityUOM}\r\n                onChange={(data) => onFieldChange(\"ProductDensityUOM\", data)}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.densityUOMList,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.ProductDensityUOM)}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineDispatchManualEntry_ReferenceDensity\")}\r\n                value={railMarineTransactionCommonInfo.ReferenceDensity}\r\n                onChange={(data) => onFieldChange(\"ReferenceDensity\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.ReferenceDensity)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"MeterCode\")}\r\n                value={railMarineTransactionCommonInfo.MeterCode}\r\n                onChange={(data) => onFieldChange(\"MeterCode\", data)}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.meterCodeList,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.MeterCode)}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_StartTotalizer\")}\r\n                value={railMarineTransactionCommonInfo.StartTotalizer}\r\n                onChange={(data) => onFieldChange(\"StartTotalizer\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.StartTotalizer)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"EndTotalizer\")}\r\n                value={railMarineTransactionCommonInfo.EndTotalizer}\r\n                onChange={(data) => onFieldChange(\"EndTotalizer\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.EndTotalizer)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_NetStartTotalizer\")}\r\n                value={railMarineTransactionCommonInfo.NetStartTotalizer}\r\n                onChange={(data) => onFieldChange(\"NetStartTotalizer\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.NetStartTotalizer)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_NetEndTotalizer\")}\r\n                value={railMarineTransactionCommonInfo.NetEndTotalizer}\r\n                onChange={(data) => onFieldChange(\"NetEndTotalizer\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.NetEndTotalizer)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"ViewMarineUnloadingDetails_Mass\")}\r\n                value={railMarineTransactionCommonInfo.GrossMass}\r\n                onChange={(data) => onFieldChange(\"GrossMass\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.GrossMass)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"BCU_MassUOM\")}\r\n                value={railMarineTransactionCommonInfo.MassUOM}\r\n                onChange={(data) => onFieldChange(\"MassUOM\", data)}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.massUOMList,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.MassUOM)}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_Pressure\")}\r\n                value={railMarineTransactionCommonInfo.Pressure}\r\n                onChange={(data) => onFieldChange(\"Pressure\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.Pressure)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"BCU_PressureUOM\")}\r\n                value={railMarineTransactionCommonInfo.PressureUOM}\r\n                onChange={(data) => onFieldChange(\"PressureUOM\", data)}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.pressureUOMList,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.PressureUOM)}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"LoadingDetailsEntry_CalculatedGross\")}\r\n                value={railMarineTransactionCommonInfo.CalculatedGross}\r\n                onChange={(data) => onFieldChange(\"CalculatedGross\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.CalculatedGross)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"LoadingDetailsEntry_CalculatedNet\")}\r\n                value={railMarineTransactionCommonInfo.CalculatedNet}\r\n                onChange={(data) => onFieldChange(\"CalculatedNet\", data)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.CalculatedNet)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"LoadingDetailsEntry_CalculatedValueUOM\")}\r\n                value={railMarineTransactionCommonInfo.CalculatedValueUOM}\r\n                onChange={(data) => onFieldChange(\"CalculatedValueUOM\", data)}\r\n                options={Utilities.transferListtoOptions(\r\n                  listOptions.calculatedValueUOMList\r\n                )}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.CalculatedValueUOM)}\r\n              ></Select>\r\n            </div>\r\n            {selectedAttributeList.length > 0\r\n              ? selectedAttributeList.map((attire) => (\r\n                  <ErrorBoundary>\r\n                    <Accordion>\r\n                      <Accordion.Content\r\n                        className=\"attributeAccordian\"\r\n                        title={\r\n                          isEnterpriseNode\r\n                            ? attire.TerminalCode +\r\n                              \" - \" +\r\n                              t(\"Attributes_Header\")\r\n                            : t(\"Attributes_Header\")\r\n                        }\r\n                      >\r\n                        <AttributeDetails\r\n                          selectedAttributeList={attire.attributeMetaDataList}\r\n                          handleCellDataEdit={handleAttributeCellDataEdit}\r\n                          attributeValidationErrors={handleValidationErrorFilter(\r\n                            attributeValidationErrors,\r\n                            attire.TerminalCode\r\n                          )}\r\n                        ></AttributeDetails>\r\n                      </Accordion.Content>\r\n                    </Accordion>\r\n                  </ErrorBoundary>\r\n                ))\r\n              : null}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Input, Select, Accordion } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getOptionsWithSelect } from \"../../../JS/functionalUtilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\n\r\nMarineReceiptManualEntryBaseProductDetails.propTypes = {\r\n  validationErrors: PropTypes.object,\r\n  listOptions: PropTypes.object.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  railMarineTransactionBPInfo: PropTypes.object,\r\n  handleAttributeCellDataEdit: PropTypes.func.isRequired,\r\n};\r\n\r\nMarineReceiptManualEntryBaseProductDetails.defaultProps = {\r\n  isEnterpriseNode: false,\r\n};\r\n\r\nexport function MarineReceiptManualEntryBaseProductDetails({\r\n  validationErrors,\r\n  listOptions,\r\n  index,\r\n  onFieldChange,\r\n  railMarineTransactionBPInfo,\r\n  code,\r\n  selectedAttributeList,\r\n  handleAttributeCellDataEdit,\r\n  attributeValidationErrors,\r\n  isEnterpriseNode,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                indicator=\"required\"\r\n                label={t(\"GrossQuantity\")}\r\n                value={railMarineTransactionBPInfo.GrossQuantity}\r\n                onChange={(data) => onFieldChange(\"GrossQuantity\", data, code)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.GrossQuantity)}\r\n              ></Input>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_NetQuantity\")}\r\n                value={railMarineTransactionBPInfo.NetQuantity}\r\n                onChange={(data) => onFieldChange(\"NetQuantity\", data, code)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.NetQuantity)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_Temperature\")}\r\n                value={railMarineTransactionBPInfo.Temperature}\r\n                onChange={(data) => onFieldChange(\"Temperature\", data, code)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.Temperature)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"MarineReceiptManualEntry_TemperatureUOM\")}\r\n                value={railMarineTransactionBPInfo.TemperatureUOM}\r\n                onChange={(data) => onFieldChange(\"TemperatureUOM\", data, code)}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.temperatureUOMList,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                reserveSpace={false}\r\n                search={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.TemperatureUOM)}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"Density\")}\r\n                value={railMarineTransactionBPInfo.ProductDensity}\r\n                onChange={(data) => onFieldChange(\"ProductDensity\", data, code)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.ProductDensity)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"BaseProductInfox_UOM\")}\r\n                value={railMarineTransactionBPInfo.ProductDensityUOM}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"ProductDensityUOM\", data, code)\r\n                }\r\n                options={getOptionsWithSelect(\r\n                  listOptions.densityUOMList,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.ProductDensityUOM)}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineDispatchManualEntry_ReferenceDensity\")}\r\n                value={railMarineTransactionBPInfo.ReferenceDensity}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"ReferenceDensity\", data, code)\r\n                }\r\n                reserveSpace={false}\r\n                error={t(validationErrors.ReferenceDensity)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"MeterCode\")}\r\n                value={railMarineTransactionBPInfo.MeterCode}\r\n                onChange={(data) => onFieldChange(\"MeterCode\", data, code)}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.meterCodeList,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                indicator=\"required\"\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.MeterCode)}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_StartTotalizer\")}\r\n                value={railMarineTransactionBPInfo.StartTotalizer}\r\n                onChange={(data) => onFieldChange(\"StartTotalizer\", data, code)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.StartTotalizer)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"EndTotalizer\")}\r\n                value={railMarineTransactionBPInfo.EndTotalizer}\r\n                onChange={(data) => onFieldChange(\"EndTotalizer\", data, code)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.EndTotalizer)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_NetStartTotalizer\")}\r\n                value={railMarineTransactionBPInfo.NetStartTotalizer}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"NetStartTotalizer\", data, code)\r\n                }\r\n                reserveSpace={false}\r\n                error={t(validationErrors.NetStartTotalizer)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_NetEndTotalizer\")}\r\n                value={railMarineTransactionBPInfo.NetEndTotalizer}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"NetEndTotalizer\", data, code)\r\n                }\r\n                reserveSpace={false}\r\n                error={t(validationErrors.NetEndTotalizer)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"ViewMarineUnloadingDetails_Mass\")}\r\n                value={railMarineTransactionBPInfo.GrossMass}\r\n                onChange={(data) => onFieldChange(\"GrossMass\", data, code)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.GrossMass)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"BCU_MassUOM\")}\r\n                value={railMarineTransactionBPInfo.MassUOM}\r\n                onChange={(data) => onFieldChange(\"MassUOM\", data, code)}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.massUOMList,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.MassUOM)}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"Marine_ReceiptCompDetail_Tank\")}\r\n                value={railMarineTransactionBPInfo.TankCode}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.tankList[index],\r\n                  t(\"Common_Select\")\r\n                )}\r\n                onChange={(data) => onFieldChange(\"TankCode\", data, code)}\r\n                reserveSpace={false}\r\n                search={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"MarineReceiptManualEntry_Pressure\")}\r\n                value={railMarineTransactionBPInfo.Pressure}\r\n                onChange={(data) => onFieldChange(\"Pressure\", data, code)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.Pressure)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"BCU_PressureUOM\")}\r\n                value={railMarineTransactionBPInfo.PressureUOM}\r\n                onChange={(data) => onFieldChange(\"PressureUOM\", data, code)}\r\n                options={getOptionsWithSelect(\r\n                  listOptions.pressureUOMList,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.PressureUOM)}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"ViewMarineUnloadingDetails_TankStartGrossQuantity\")}\r\n                value={railMarineTransactionBPInfo.TankStartGrossQuantity}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"TankStartGrossQuantity\", data, code)\r\n                }\r\n                reserveSpace={false}\r\n                error={t(validationErrors.TankStartGrossQuantity)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"ViewMarineUnloadingDetails_TankEndGrossQuantity\")}\r\n                value={railMarineTransactionBPInfo.TankEndGrossQuantity}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"TankEndGrossQuantity\", data, code)\r\n                }\r\n                reserveSpace={false}\r\n                error={t(validationErrors.TankEndGrossQuantity)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"ViewMarineUnloadingDetails_TankStartNetQuantity\")}\r\n                value={railMarineTransactionBPInfo.TankStartNetQuantity}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"TankStartNetQuantity\", data, code)\r\n                }\r\n                reserveSpace={false}\r\n                error={t(validationErrors.TankStartNetQuantity)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"ViewMarineUnloadingDetails_TankEndNetQuantity\")}\r\n                value={railMarineTransactionBPInfo.TankEndNetQuantity}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"TankEndNetQuantity\", data, code)\r\n                }\r\n                reserveSpace={false}\r\n                error={t(validationErrors.TankEndNetQuantity)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"ViewMarineUnloadingDetails_TankStartGrossMass\")}\r\n                value={railMarineTransactionBPInfo.TankStartGrossMass}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"TankStartGrossMass\", data, code)\r\n                }\r\n                reserveSpace={false}\r\n                error={t(validationErrors.TankStartGrossMass)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"ViewMarineUnloadingDetails_TankEndGrossMass\")}\r\n                value={railMarineTransactionBPInfo.TankEndGrossMass}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"TankEndGrossMass\", data, code)\r\n                }\r\n                reserveSpace={false}\r\n                error={validationErrors.TankEndGrossMass}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"LoadingDetailsEntry_TankStartPressure\")}\r\n                value={railMarineTransactionBPInfo.TankStartPressure}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"TankStartPressure\", data, code)\r\n                }\r\n                reserveSpace={false}\r\n                error={t(validationErrors.TankStartPressure)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"LoadingDetailsEntry_TankEndPressure\")}\r\n                value={railMarineTransactionBPInfo.TankEndPressure}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"TankEndPressure\", data, code)\r\n                }\r\n                reserveSpace={false}\r\n                error={t(validationErrors.TankEndPressure)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"LoadingDetailsEntry_CalculatedGross\")}\r\n                value={railMarineTransactionBPInfo.CalculatedGross}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"CalculatedGross\", data, code)\r\n                }\r\n                reserveSpace={false}\r\n                error={t(validationErrors.CalculatedGross)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                label={t(\"LoadingDetailsEntry_CalculatedNet\")}\r\n                value={railMarineTransactionBPInfo.CalculatedNet}\r\n                onChange={(data) => onFieldChange(\"CalculatedNet\", data, code)}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.CalculatedNet)}\r\n              ></Input>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                label={t(\"LoadingDetailsEntry_CalculatedValueUOM\")}\r\n                value={railMarineTransactionBPInfo.CalculatedValueUOM}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"CalculatedValueUOM\", data, code)\r\n                }\r\n                options={Utilities.transferListtoOptions(\r\n                  listOptions.calculatedValueUOMList\r\n                )}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.CalculatedValueUOM)}\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n          {selectedAttributeList.length > 0\r\n            ? selectedAttributeList.map((attire) => (\r\n                <ErrorBoundary>\r\n                  <Accordion>\r\n                    <Accordion.Content\r\n                      className=\"attributeAccordian\"\r\n                      title={\r\n                        isEnterpriseNode\r\n                          ? attire.TerminalCode + \" - \" + t(\"Attributes_Header\")\r\n                          : t(\"Attributes_Header\")\r\n                      }\r\n                    >\r\n                      <AttributeDetails\r\n                        selectedAttributeList={attire.attributeMetaDataList}\r\n                        handleCellDataEdit={(attribute, value) => {handleAttributeCellDataEdit(attribute,value,code)}}\r\n                        attributeValidationErrors={handleValidationErrorFilter(\r\n                          attributeValidationErrors,\r\n                          attire.TerminalCode\r\n                        )}\r\n                      ></AttributeDetails>\r\n                    </Accordion.Content>\r\n                  </Accordion>\r\n                </ErrorBoundary>\r\n              ))\r\n            : null}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestApis from \"../../../JS/RestApis\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { MarineReceiptManualEntryDetails } from \"../../UIBase/Details/MarineReceiptManualEntryDetails\";\r\nimport { MarineReceiptManualEntryFPTransactionsDetails } from \"../../UIBase/Details/MarineReceiptManualEntryFPTransactionsDetails\";\r\nimport { MarineReceiptManualEntryBaseProductDetails } from \"../../UIBase/Details/MarineReceiptManualEntryBaseProductDetails\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { Tab } from \"@scuf/common\";\r\nimport {\r\n  emptyRailMarineTransactionBPInfo,\r\n  emptyMarineRailTransactionCommonInfo,\r\n} from \"../../../JS/DefaultEntities\";\r\nimport {\r\n  marineReceiptManualEntryValidationDef,\r\n  marineReceiptManualEntryBPValidationDef,\r\n} from \"../../../JS/ValidationDef\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport lodash from \"lodash\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  marineUnloadingSFPAttributeEntity,\r\n  marineUnloadingSBPAttributeEntity,\r\n} from \"../../../JS/AttributeEntity\";\r\nimport { ReceiptCompartmentStatus } from \"../../../JS/Constants\";\r\nimport {functionGroups,fnMarineReceiptByCompartment,fnViewMarineUnloadingDetails} from \"../../../JS/FunctionGroups\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass MarineReceiptManualEntryDetailsComposite extends Component {\r\n  state = {\r\n    railMarineTransactionCommonInfo: lodash.cloneDeep(\r\n      emptyMarineRailTransactionCommonInfo\r\n    ),\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      marineReceiptManualEntryValidationDef\r\n    ),\r\n    railMarineTransactionBPInfo: {},\r\n    validationBPErrors: {},\r\n    isReadyToRender: false,\r\n    saveEnabled: true,\r\n    selectedCompartment: {},\r\n    compartmentSeqNoInVehicleList: [],\r\n    receiptCompartmentDetails: [],\r\n    productList: [],\r\n    berthList: [],\r\n    bcuCodeList: [],\r\n    unLoadingArmList: [],\r\n    quantityUOMList: [],\r\n    temperatureUOMList: [],\r\n    densityUOMList: [],\r\n    meterCodeList: [],\r\n    massUOMList: [],\r\n    pressureUOMList: [],\r\n    calculatedValueUOMList: [],\r\n    tankList: {},\r\n    activeIndex: 0,\r\n    attribute: [],\r\n    selectedAttributeFPList: [],\r\n    selectedAttributeBPList: {},\r\n    attributeUnloadingDetailsFPDataList: [],\r\n    attributeUnloadingDetailsBPDataList: [],\r\n    attributeValidationBPErrors: {},\r\n    attributeValidationFPErrors: [],\r\n    marineReceiptManualEntryEnabled: false,\r\n    showAuthenticationLayout: false,\r\n\r\n  };\r\n\r\n  getMarineReceiptManualEntryEnabled(selectedCompartment) {\r\n    let ReceiptCompartmentStatusKeys = Object.keys(ReceiptCompartmentStatus);\r\n    let MarineReceiptCompartmentStatus = \"\";\r\n    for (const key of ReceiptCompartmentStatusKeys) {\r\n      if (\r\n        ReceiptCompartmentStatus[key] ===\r\n        selectedCompartment.ReceiptCompartmentStatus\r\n      ) {\r\n        MarineReceiptCompartmentStatus = key;\r\n        break;\r\n      }\r\n    }\r\n    axios(\r\n      RestApis.GetMarineReceiptManualEntryEnabled +\r\n      \"?ShareholderCode=\" +\r\n      selectedCompartment.ShareholderCode +\r\n      \"&ReceiptStatus=\" +\r\n      this.props.ReceiptStatus +\r\n      \"&ReceiptCompartmentStatus=\" +\r\n      MarineReceiptCompartmentStatus,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let { marineReceiptManualEntryEnabled } = this.state;\r\n          if (result.EntityResult === \"TRUE\") {\r\n            marineReceiptManualEntryEnabled = true;\r\n          } else {\r\n            marineReceiptManualEntryEnabled = false;\r\n          }\r\n          this.setState({ marineReceiptManualEntryEnabled });\r\n        } else {\r\n          this.setState({ marineReceiptManualEntryEnabled: false });\r\n          console.log(\r\n            \"Error in getMarineReceiptManualEntryEnabled:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error while getting Marine Receipt ManualEntry Enabled:\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  getBerthList() {\r\n    axios(\r\n      RestApis.GetMarineBerthList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var berthList = [];\r\n          list.forEach((item) => {\r\n            berthList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            berthList: Utilities.transferListtoOptions(berthList),\r\n          });\r\n        } else {\r\n          console.log(\"Error in GetMarineUOMListByType:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while GetMarineUOMListByType:\", error);\r\n      });\r\n  }\r\n\r\n\r\n  getBCUDetails(deviceCode) {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.bcuCode,\r\n          value: deviceCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.bcuCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestApis.GetBCUDevice,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let bcu = result.EntityResult;\r\n\r\n          let railMarineTransactionCommonInfo = lodash.cloneDeep(this.state.railMarineTransactionCommonInfo);\r\n          railMarineTransactionCommonInfo.TemperatureUOM = bcu.TemperatureUOM;\r\n          railMarineTransactionCommonInfo.ProductDensityUOM = bcu.DensityUOM;\r\n          let railMarineTransactionBPInfo = lodash.cloneDeep(this.state.railMarineTransactionBPInfo)\r\n          if (railMarineTransactionBPInfo != null) {\r\n            Object.keys(railMarineTransactionBPInfo).forEach((bpInfo) => {\r\n              railMarineTransactionBPInfo[bpInfo]['TemperatureUOM'] = bcu.TemperatureUOM;\r\n              railMarineTransactionBPInfo[bpInfo]['ProductDensityUOM'] = bcu.DensityUOM;\r\n            })\r\n          }\r\n\r\n          this.setState({\r\n            railMarineTransactionCommonInfo, railMarineTransactionBPInfo\r\n          });\r\n\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentManualEntryDetailsComposite:Error while getting getBCUDeviceDetails\"\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  GetMetersForLA() {\r\n\r\n    const railMarineTransactionCommonInfo = lodash.cloneDeep(\r\n      this.state.railMarineTransactionCommonInfo\r\n    );\r\n    let bcuCode = '';\r\n    let loadingArmCode = ''\r\n    bcuCode = railMarineTransactionCommonInfo.BCUCode;\r\n    loadingArmCode = railMarineTransactionCommonInfo.UnLoadingArm;\r\n    if (bcuCode === '' || loadingArmCode === '')\r\n      return;\r\n\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.siteViewType,\r\n          value: Constants.siteViewType.MARINE_BCUVIEW,\r\n        },\r\n        {\r\n          key: KeyCodes.bcuCode,\r\n          value: bcuCode,\r\n        },\r\n        {\r\n          key: KeyCodes.terminalCode,\r\n          value: this.props.ActualTerminalCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.siteViewType,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestApis.GetBCUViewTree,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            Array.isArray(result.EntityResult) &&\r\n            result.EntityResult.length > 0\r\n          ) {\r\n\r\n            let loadingArm = result.EntityResult[0].AssociatedArmsList.find(larm => larm.Code === loadingArmCode);\r\n            if (loadingArm !== null) {\r\n              let mainLineMeters = [];\r\n\r\n              mainLineMeters = loadingArm.AssociatedMeterList.find(meter => meter.MeterLineType === \"MAINLINE\");\r\n\r\n              let bpMeterCode = '';\r\n              let meterCodeList = [];\r\n              if (mainLineMeters !== null && mainLineMeters !== \"\") {\r\n                mainLineMeters.MeterList.forEach(element => {\r\n                  meterCodeList.push(element.Code);\r\n                });\r\n                this.setState({\r\n                  meterCodeList: Utilities.transferListtoOptions(meterCodeList),\r\n                });\r\n\r\n                if (mainLineMeters.MeterList.length === 1) {\r\n                  bpMeterCode = mainLineMeters.MeterList[0].Code;\r\n                }\r\n              }\r\n\r\n              if (bpMeterCode !== '') {\r\n                let railMarineTransactionCommonInfo = lodash.cloneDeep(this.state.railMarineTransactionCommonInfo);\r\n                railMarineTransactionCommonInfo.MeterCode = bpMeterCode;\r\n                let railMarineTransactionBPInfo = lodash.cloneDeep(this.state.railMarineTransactionBPInfo)\r\n                if (railMarineTransactionBPInfo != null) {\r\n                  Object.keys(railMarineTransactionBPInfo).forEach((bpInfo) => {\r\n                    railMarineTransactionBPInfo[bpInfo]['MeterCode'] = bpMeterCode;\r\n                  })\r\n                }\r\n\r\n                this.setState({\r\n                  railMarineTransactionBPInfo, railMarineTransactionCommonInfo\r\n                });\r\n              }\r\n\r\n            }\r\n\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"SiteTreeView:Error occured in GetMetersForLA\", error);\r\n    }\r\n  }\r\n\r\n\r\n  getQuantityUOMList() {\r\n    axios(\r\n      RestApis.GetMarineUOMListByType +\r\n      \"?TypeName=\" +\r\n      Constants.UOM.QuantityUOM,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var quantityUOMList = [];\r\n          list.forEach((item) => {\r\n            quantityUOMList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            quantityUOMList: Utilities.transferListtoOptions(quantityUOMList),\r\n          });\r\n        } else {\r\n          console.log(\"Error in getQuantityUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getQuantityUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getTemperatureUOMList() {\r\n    axios(\r\n      RestApis.GetMarineUOMListByType +\r\n      \"?TypeName=\" +\r\n      Constants.UOM.TemperatureUOM,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var temperatureUOMList = [];\r\n          list.forEach((item) => {\r\n            temperatureUOMList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            temperatureUOMList:\r\n              Utilities.transferListtoOptions(temperatureUOMList),\r\n          });\r\n        } else {\r\n          console.log(\"Error in getTemperatureUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getTemperatureUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getDensityUOMList() {\r\n    axios(\r\n      RestApis.GetMarineUOMListByType + \"?TypeName=\" + Constants.UOM.DensityUOM,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var densityUOMList = [];\r\n          list.forEach((item) => {\r\n            densityUOMList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            densityUOMList: Utilities.transferListtoOptions(densityUOMList),\r\n          });\r\n        } else {\r\n          console.log(\"Error in getDensityUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getDensityUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getMeterCodeList() {\r\n    axios(\r\n      RestApis.GetMarineMeterList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var meterCodeList = [];\r\n          list.forEach((item) => {\r\n            meterCodeList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            meterCodeList: Utilities.transferListtoOptions(meterCodeList),\r\n          });\r\n        } else {\r\n          console.log(\"Error in GetMarineMeterList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while GetMarineMeterList:\", error);\r\n      });\r\n  }\r\n\r\n  getMassUOMList() {\r\n    axios(\r\n      RestApis.GetMarineUOMListByType + \"?TypeName=\" + Constants.UOM.MassUOM,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var massUOMList = [];\r\n          list.forEach((item) => {\r\n            massUOMList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            massUOMList: Utilities.transferListtoOptions(massUOMList),\r\n          });\r\n        } else {\r\n          console.log(\"Error in getMassUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getMassUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getPressureUOMList() {\r\n    axios(\r\n      RestApis.GetMarineUOMListByType +\r\n      \"?TypeName=\" +\r\n      Constants.UOM.PressureUOM,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var pressureUOMList = [];\r\n          list.forEach((item) => {\r\n            pressureUOMList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            pressureUOMList: Utilities.transferListtoOptions(pressureUOMList),\r\n          });\r\n        } else {\r\n          console.log(\"Error in getPressureUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getPressureUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getCalculatedValueUOMList() {\r\n    axios(\r\n      RestApis.GetMarineUOMListByType +\r\n      \"?TypeName=\" +\r\n      Constants.UOM.CalculatedValueUOM,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var calculatedValueUOMList = [];\r\n          list.forEach((item) => {\r\n            calculatedValueUOMList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            calculatedValueUOMList: calculatedValueUOMList,\r\n          });\r\n        } else {\r\n          console.log(\"Error in getCalculatedValueUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getCalculatedValueUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getBCUListByBerth(BayCode) {\r\n    axios(\r\n      RestApis.GetMarineBCUListByBerth + \"?Berth=\" + BayCode,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult;\r\n          var bcuCodeList = [];\r\n          list.forEach((item) => {\r\n            bcuCodeList.push(item.DeviceCode);\r\n          });\r\n          this.setState({\r\n            bcuCodeList: Utilities.transferListtoOptions(bcuCodeList),\r\n          });\r\n\r\n          if (bcuCodeList.length === 1) {\r\n            let railMarineTransactionCommonInfo = lodash.cloneDeep(\r\n              this.state.railMarineTransactionCommonInfo\r\n            );\r\n            railMarineTransactionCommonInfo.BCUCode = bcuCodeList[0];\r\n            this.setState({\r\n              railMarineTransactionCommonInfo\r\n            });\r\n            this.getBCUDetails(bcuCodeList[0]);\r\n            this.GetUnloadingArmListByBCU(bcuCodeList[0])\r\n          }\r\n\r\n        } else {\r\n          console.log(\"Error in GetMarineBCUListByBerth:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while GetMarineBCUListByBerth:\", error);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  GetUnloadingArmListByBCU(BCUCode) {\r\n    let railMarineTransactionCommonInfo = lodash.cloneDeep(\r\n      this.state.railMarineTransactionCommonInfo\r\n    );\r\n\r\n    axios(\r\n      RestApis.GetMarineLoadingArmListByBCU + \"?BCUCode=\" + BCUCode,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var unLoadingArmList = [];\r\n          list.forEach((item) => {\r\n            unLoadingArmList.push(item.LoadingArmCode);\r\n          });\r\n          this.setState({\r\n            unLoadingArmList: Utilities.transferListtoOptions(unLoadingArmList),\r\n          });\r\n\r\n          if (unLoadingArmList.length === 1) {\r\n            railMarineTransactionCommonInfo.UnLoadingArm = unLoadingArmList[0];\r\n\r\n            this.setState({\r\n              railMarineTransactionCommonInfo\r\n            });\r\n\r\n            this.GetMetersForLA();\r\n          }\r\n\r\n\r\n        } else {\r\n          console.log(\r\n            \"Error in GetMarineLoadingArmListByBCU:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while GetMarineLoadingArmListByBCU:\", error);\r\n      });\r\n  }\r\n\r\n  getTankList(item, index) {\r\n    var additiveCode = \"\";\r\n    axios(\r\n      RestApis.GetMarineTankList +\r\n      \"?AdditiveCode=\" +\r\n      additiveCode +\r\n      \"&BaseProductCode=\" +\r\n      item.code,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var tankList = this.state.tankList;\r\n          tankList[index] = [];\r\n          list.forEach((item) => {\r\n            tankList[index].push(item.Code);\r\n          });\r\n          tankList[index] = Utilities.transferListtoOptions(tankList[index]);\r\n          this.setState({ tankList });\r\n        } else {\r\n          console.log(\"Error in GetMarineTankList:  \" + result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while GetMarineTankList:\" + error);\r\n      });\r\n  }\r\n\r\n  getPartialMarineReceiptData() {\r\n    var keyCode = [\r\n      {\r\n        key: \"MarineReceiptCode\",\r\n        value: this.props.ReceiptCode,\r\n      },\r\n      {\r\n        key: \"CompartmentSeqNoInVehicle\",\r\n        value: this.state.selectedCompartment.CompartmentSeqNoInVehicle,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.state.selectedCompartment.ShareholderCode,\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetPartialMarineReceiptData,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        this.setState({\r\n          productList: response.data.EntityResult.Table,\r\n        });\r\n        this.state.productList.forEach((item, index) => {\r\n          this.getTankList(item, index);\r\n          this.handleProductDetail(item);\r\n        });\r\n        this.initializePartialAttribute();\r\n        this.getAttributes();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getPartialMarineReceiptData:\", error);\r\n      });\r\n  }\r\n\r\n  handleProductDetail(item) {\r\n    const { railMarineTransactionBPInfo, validationBPErrors } = this.state;\r\n    railMarineTransactionBPInfo[item.code] = lodash.cloneDeep(\r\n      emptyRailMarineTransactionBPInfo\r\n    );\r\n    validationBPErrors[item.code] = Utilities.getInitialValidationErrors(\r\n      marineReceiptManualEntryBPValidationDef\r\n    );\r\n    this.setState({\r\n      railMarineTransactionBPInfo,\r\n      validationBPErrors,\r\n    });\r\n  }\r\n\r\n  getReceiptCompartmentDetails() {\r\n    const { ReceiptCode } = this.props;\r\n    if (ReceiptCode === undefined) {\r\n      this.setState({\r\n        receiptCompartmentDetails: [],\r\n      });\r\n      return;\r\n    }\r\n    axios(\r\n      RestApis.GetMarineReceiptCompartmentDetails +\r\n      \"?MarineReceiptCode=\" +\r\n      ReceiptCode,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            receiptCompartmentDetails: result.EntityResult,\r\n          });\r\n          this.getCompartmentSeqNoInVehicleList();\r\n        } else {\r\n          this.setState({\r\n            receiptCompartmentDetails: [],\r\n          });\r\n          console.log(\r\n            \"Error in getReceiptCompartmentDetails:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting receipt compartment details:\", error);\r\n      });\r\n  }\r\n\r\n  getCompartmentSeqNoInVehicleList() {\r\n    let compartmentSeqNoInVehicleList = [];\r\n    this.state.receiptCompartmentDetails.forEach((item) => {\r\n      compartmentSeqNoInVehicleList.push(item.CompartmentSeqNoInVehicle);\r\n    });\r\n    this.setState({\r\n      compartmentSeqNoInVehicleList: Utilities.transferListtoOptions(\r\n        compartmentSeqNoInVehicleList\r\n      ),\r\n    });\r\n  }\r\n\r\n  getselectedCompartment(selectedCompartmentCompartmentSeqNoInVehicle) {\r\n    let selectedCompartment = this.state.receiptCompartmentDetails.find(\r\n      (item) => {\r\n        return (\r\n          item.CompartmentSeqNoInVehicle ===\r\n          +selectedCompartmentCompartmentSeqNoInVehicle\r\n        );\r\n      }\r\n    );\r\n    this.setState(\r\n      {\r\n        selectedCompartment,\r\n        activeIndex: 0,\r\n        railMarineTransactionBPInfo: {},\r\n        validationBPErrors: {},\r\n      },\r\n      () => {\r\n        this.handleChange(\r\n          \"FinishedProductCode\",\r\n          this.state.selectedCompartment.FinishedProductCode\r\n        );\r\n        this.getMarineReceiptManualEntryEnabled(selectedCompartment);\r\n        this.getPartialMarineReceiptData();\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setDefaultValues();\r\n    this.getReceiptCompartmentDetails();\r\n    this.getBerthList();\r\n    this.getQuantityUOMList();\r\n    this.getTemperatureUOMList();\r\n    this.getDensityUOMList();\r\n    this.getMeterCodeList();\r\n    this.getMassUOMList();\r\n    this.getPressureUOMList();\r\n    this.getCalculatedValueUOMList();\r\n    this.setState({\r\n      isReadyToRender: true,\r\n    });\r\n  }\r\n\r\n  setDefaultValues() {\r\n    let railMarineTransactionCommonInfo = lodash.cloneDeep(this.state.railMarineTransactionCommonInfo);\r\n    railMarineTransactionCommonInfo.StartTime = new Date();\r\n    railMarineTransactionCommonInfo.EndTime = new Date();\r\n    railMarineTransactionCommonInfo.QuantityUOM = this.props.QuantityUOM; // to display Ship Qty UOM, in place MOT UOM\r\n    this.setState({ railMarineTransactionCommonInfo });\r\n\r\n  }\r\n\r\n  initializePartialAttribute() {\r\n    let BPCode = Object.keys(this.state.railMarineTransactionBPInfo);\r\n    let { selectedAttributeBPList } = this.state;\r\n    BPCode.forEach((code) => {\r\n      selectedAttributeBPList[code] = [];\r\n    });\r\n    this.setState({\r\n      selectedAttributeBPList,\r\n      selectedAttributeFPList: [],\r\n      attribute: [],\r\n    });\r\n  }\r\n\r\n  getAttributes() {\r\n    try {\r\n      axios(\r\n        RestApis.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [\r\n            marineUnloadingSFPAttributeEntity,\r\n            marineUnloadingSBPAttributeEntity,\r\n          ],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let BPCode = Object.keys(this.state.railMarineTransactionBPInfo);\r\n          let { attributeValidationBPErrors } = this.state;\r\n          BPCode.forEach((code) => {\r\n            attributeValidationBPErrors[code] =\r\n              Utilities.getAttributeInitialValidationErrors(\r\n                result.EntityResult.marineUnloadingDetailsBP\r\n              );\r\n          });\r\n          this.setState(\r\n            {\r\n              attributeUnloadingDetailsFPDataList: lodash.cloneDeep(\r\n                result.EntityResult.marineUnloadingDetailsFP\r\n              ),\r\n              attributeValidationFPErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.marineUnloadingDetailsFP\r\n                ),\r\n              attributeUnloadingDetailsBPDataList: lodash.cloneDeep(\r\n                result.EntityResult.marineUnloadingDetailsBP\r\n              ),\r\n              attributeValidationBPErrors,\r\n            },\r\n            () => {\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                if (this.state.attributeUnloadingDetailsBPDataList.length > 0) {\r\n                  this.terminalSelectionChangeBP([\r\n                    this.state.attributeUnloadingDetailsBPDataList[0]\r\n                      .TerminalCode,\r\n                  ]);\r\n                }\r\n                if (this.state.attributeUnloadingDetailsFPDataList.length > 0) {\r\n                  this.terminalSelectionChangeFP([\r\n                    this.state.attributeUnloadingDetailsFPDataList[0]\r\n                      .TerminalCode,\r\n                  ]);\r\n                }\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          console.log(\"Failed to get Attributes\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Attributes:\", error);\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeUnloadingDetailsBPDataList = lodash.cloneDeep(\r\n        this.state.attributeUnloadingDetailsBPDataList\r\n      );\r\n      var attributeUnloadingDetailsFPDataList = lodash.cloneDeep(\r\n        this.state.attributeUnloadingDetailsFPDataList\r\n      );\r\n      if (Array.isArray(attributeUnloadingDetailsBPDataList) && attributeUnloadingDetailsBPDataList.length > 0) {\r\n        this.terminalSelectionChangeBP([\r\n          attributeUnloadingDetailsBPDataList[0].TerminalCode,\r\n        ]);\r\n      }\r\n      if (Array.isArray(attributeUnloadingDetailsFPDataList) && attributeUnloadingDetailsFPDataList.length > 0) {\r\n        this.terminalSelectionChangeFP([\r\n          attributeUnloadingDetailsFPDataList[0].TerminalCode,\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptManualEntryDetails:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  terminalSelectionChangeFP(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeUnloadingDetailsFPDataList = [];\r\n      var selectedAttributeFPList = [];\r\n      attributeUnloadingDetailsFPDataList = lodash.cloneDeep(\r\n        this.state.attributeUnloadingDetailsFPDataList\r\n      );\r\n      selectedAttributeFPList = lodash.cloneDeep(\r\n        this.state.selectedAttributeFPList\r\n      );\r\n      const attributeValidationFPErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationFPErrors\r\n      );\r\n      var railMarineTransactionFPInfo = lodash.cloneDeep(\r\n        emptyMarineRailTransactionCommonInfo\r\n      );\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = selectedAttributeFPList.find((selectedAttributeFP) => {\r\n          return selectedAttributeFP.TerminalCode === terminal;\r\n        });\r\n        if (existitem === undefined) {\r\n          attributeUnloadingDetailsFPDataList.forEach(function (\r\n            attributeMetaData\r\n          ) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue = railMarineTransactionFPInfo.Attributes.find(\r\n                (FPAttribute) => {\r\n                  return FPAttribute.TerminalCode === terminal;\r\n                }\r\n              );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeUnloadingDetailsFPDataList.forEach(\r\n                  function (attributeMetaData) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  }\r\n                );\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      selectedAttributeFPList = [];\r\n      selectedAttributeFPList = attributesTerminalsList;\r\n      attributeValidationFPErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationFPErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationFPErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n      this.setState({ selectedAttributeFPList, attributeValidationFPErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptManualEntryDetails:Error occured on terminalSelectionChangeFP\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  terminalSelectionChangeBP(selectedTerminals) {\r\n    let BPCode = Object.keys(this.state.railMarineTransactionBPInfo);\r\n    BPCode.forEach((code) => {\r\n      try {\r\n        let attributesTerminalsList = [];\r\n        var attributeUnloadingDetailsBPDataList = [];\r\n        var selectedAttributeBPList = [];\r\n        attributeUnloadingDetailsBPDataList = lodash.cloneDeep(\r\n          this.state.attributeUnloadingDetailsBPDataList\r\n        );\r\n        selectedAttributeBPList = lodash.cloneDeep(\r\n          this.state.selectedAttributeBPList[code]\r\n        );\r\n        const attributeValidationBPErrors = lodash.cloneDeep(\r\n          this.state.attributeValidationBPErrors[code]\r\n        );\r\n        var railMarineTransactionBPInfo = lodash.cloneDeep(\r\n          this.state.railMarineTransactionBPInfo[code]\r\n        );\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = selectedAttributeBPList.find(\r\n            (selectedAttributeBP) => {\r\n              return selectedAttributeBP.TerminalCode === terminal;\r\n            }\r\n          );\r\n          if (existitem === undefined) {\r\n            attributeUnloadingDetailsBPDataList.forEach(function (\r\n              attributeMetaData\r\n            ) {\r\n              if (attributeMetaData.TerminalCode === terminal) {\r\n                var Attributevalue =\r\n                  railMarineTransactionBPInfo.Attributes.find((BPAttribute) => {\r\n                    return BPAttribute.TerminalCode === terminal;\r\n                  });\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeUnloadingDetailsBPDataList.forEach(\r\n                    function (attributeMetaData) {\r\n                      var valueAttribute =\r\n                        Attributevalue.ListOfAttributeData.find((x) => {\r\n                          return x.AttributeCode === attributeMetaData.Code;\r\n                        });\r\n                      if (valueAttribute !== undefined)\r\n                        attributeMetaData.DefaultValue =\r\n                          valueAttribute.AttributeValue;\r\n                    }\r\n                  );\r\n                }\r\n                attributesTerminalsList.push(attributeMetaData);\r\n              }\r\n            });\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n        selectedAttributeBPList = [];\r\n        selectedAttributeBPList = attributesTerminalsList;\r\n        attributeValidationBPErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(\r\n              attributeValidation.attributeValidationBPErrors\r\n            ).forEach(\r\n              (key) =>\r\n                (attributeValidation.attributeValidationBPErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n        let newSelectedAttributeBPList = this.state.selectedAttributeBPList;\r\n        let newAttributeValidationBPErrors =\r\n          this.state.attributeValidationBPErrors;\r\n        newSelectedAttributeBPList[code] = selectedAttributeBPList;\r\n        newAttributeValidationBPErrors[code] = attributeValidationBPErrors;\r\n        this.setState({\r\n          selectedAttributeBPList: newSelectedAttributeBPList,\r\n          attributeValidationBPErrors: newAttributeValidationBPErrors,\r\n        });\r\n      } catch (error) {\r\n        console.log(\r\n          \"MarineReceiptManualEntryDetails:Error occured on terminalSelectionChangeBP\",\r\n          error\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      let railMarineTransactionCommonInfo = lodash.cloneDeep(\r\n        this.state.railMarineTransactionCommonInfo\r\n      );\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      railMarineTransactionCommonInfo[propertyName] = data;\r\n      this.setState({ railMarineTransactionCommonInfo });\r\n      if (marineReceiptManualEntryValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          marineReceiptManualEntryValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n      if (propertyName === \"CompartmentSeqNoInVehicle\") {\r\n        this.getselectedCompartment(data);\r\n        let railMarineTransactionCommonInfo = lodash.cloneDeep(\r\n          emptyMarineRailTransactionCommonInfo\r\n        );\r\n        if (data !== \"\") {\r\n          railMarineTransactionCommonInfo.CompartmentSeqNoInVehicle = data;\r\n          railMarineTransactionCommonInfo.QuantityUOM = this.props.QuantityUOM;\r\n          railMarineTransactionCommonInfo.StartTime = new Date();\r\n          railMarineTransactionCommonInfo.EndTime = new Date();\r\n        }\r\n        const validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach(function (key) {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({\r\n          railMarineTransactionCommonInfo,\r\n          validationErrors,\r\n          bcuCodeList: [],\r\n          unLoadingArmList: [],\r\n          saveEnabled: Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.modify,\r\n        fnMarineReceiptByCompartment),\r\n        });\r\n      }\r\n      if (propertyName === \"BayCode\") {\r\n        if (data === null) {\r\n          this.setState({ bcuCodeList: [] });\r\n        } else {\r\n          this.getBCUListByBerth(data);\r\n        }\r\n      }\r\n      else if (propertyName === \"BCUCode\") {\r\n        this.GetUnloadingArmListByBCU(data);\r\n      }\r\n      else if (propertyName === \"UnLoadingArm\") {\r\n        this.setState({ railMarineTransactionCommonInfo }, () => {\r\n          this.GetMetersForLA();\r\n        });\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptManualEntryDetails:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleBPChange = (propertyName, data, code) => {\r\n    try {\r\n      const railMarineTransactionBPInfo = lodash.cloneDeep(\r\n        this.state.railMarineTransactionBPInfo\r\n      );\r\n      const validationBPErrors = lodash.cloneDeep(\r\n        this.state.validationBPErrors\r\n      );\r\n      railMarineTransactionBPInfo[code][propertyName] = data;\r\n      this.setState({ railMarineTransactionBPInfo });\r\n      if (marineReceiptManualEntryBPValidationDef[propertyName] !== undefined) {\r\n        validationBPErrors[code][propertyName] = Utilities.validateField(\r\n          marineReceiptManualEntryBPValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationBPErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptManualEntryDetails:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleFPAttributeCellDataEdit = (attribute, value) => {\r\n    try {\r\n      const attributeValidationFPErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationFPErrors\r\n      );\r\n      attributeValidationFPErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationFPErrors });\r\n      if (\r\n        attribute.DataType === Constants.AttributeTypes.INT ||\r\n        attribute.DataType === Constants.AttributeTypes.LONG ||\r\n        attribute.DataType === Constants.AttributeTypes.FLOAT ||\r\n        attribute.DataType === Constants.AttributeTypes.DOUBLE\r\n      ) {\r\n        value = Utilities.convertStringtoDecimal(value);\r\n      }\r\n      attribute.DefaultValue = value;\r\n      this.setState({\r\n        attribute: attribute,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptManualEntryDetails:Error occured on handleFPAttributeCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleBPAttributeCellDataEdit = (attribute, value, code) => {\r\n    try {\r\n      const attributeValidationBPErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationBPErrors\r\n      );\r\n      attributeValidationBPErrors[code].forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationBPErrors });\r\n\r\n      if (\r\n        attribute.DataType === Constants.AttributeTypes.INT ||\r\n        attribute.DataType === Constants.AttributeTypes.LONG ||\r\n        attribute.DataType === Constants.AttributeTypes.FLOAT ||\r\n        attribute.DataType === Constants.AttributeTypes.DOUBLE\r\n      ) {\r\n        value = Utilities.convertStringtoDecimal(value);\r\n      }\r\n      attribute.DefaultValue = value;\r\n      this.setState({\r\n        attribute: attribute,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptManualEntryDetails:Error occured on handleBPAttributeCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  addLoadingDetails = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false, marineReceiptManualEntryEnabled: false });\r\n      this.createManualEntry();\r\n    } catch (error) {\r\n      console.log(\"Marine Loading DetailsComposite : Error in save Marine Loading details\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n      if (this.validateSave()) {\r\n       \r\n        this.fillFPAttributeDetails(this.state.railMarineTransactionCommonInfo);\r\n        this.fillBPAttributeDetails(this.state.railMarineTransactionBPInfo);\r\n        \r\n        let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      \r\n      this.setState({ showAuthenticationLayout }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.addLoadingDetails();\r\n          }\r\n        });\r\n\r\n      } else {\r\n        this.setState({  saveEnabled: Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.modify,\r\n        fnMarineReceiptByCompartment), });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptManualEntryDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateSave() {\r\n    const { railMarineTransactionBPInfo, railMarineTransactionCommonInfo } =\r\n      this.state;\r\n    var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    var validationBPErrors = lodash.cloneDeep(this.state.validationBPErrors);\r\n    let BPCode = Object.keys(validationBPErrors);\r\n\r\n    Object.keys(marineReceiptManualEntryValidationDef).forEach(function (key) {\r\n      validationErrors[key] = Utilities.validateField(\r\n        marineReceiptManualEntryValidationDef[key],\r\n        railMarineTransactionCommonInfo[key]\r\n      );\r\n    });\r\n    if (\r\n      railMarineTransactionCommonInfo.StartTime >=\r\n      railMarineTransactionCommonInfo.EndTime\r\n    ) {\r\n      validationErrors.StartTime = \"MarineReceiptManualEntry_ErrorUnloadTime\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    let returnValue = Object.values(validationErrors).every(function (value) {\r\n      return value === \"\";\r\n    });\r\n    if (!returnValue) {\r\n      this.setState({ activeIndex: 0 });\r\n    }\r\n    if (railMarineTransactionCommonInfo.CompartmentSeqNoInVehicle === \"\") {\r\n      return returnValue;\r\n    }\r\n\r\n    BPCode.forEach((code) => {\r\n      Object.keys(marineReceiptManualEntryBPValidationDef).forEach(function (\r\n        key\r\n      ) {\r\n        validationBPErrors[code][key] = Utilities.validateField(\r\n          marineReceiptManualEntryBPValidationDef[key],\r\n          railMarineTransactionBPInfo[code][key]\r\n        );\r\n      });\r\n    });\r\n    this.setState({ validationBPErrors });\r\n    let BPValueList = BPCode.map((code) => {\r\n      var BPValue = Object.values(validationBPErrors[code]).every(function (\r\n        value\r\n      ) {\r\n        return value === \"\";\r\n      });\r\n      return BPValue;\r\n    });\r\n    let errorIndex = BPValueList.findIndex((item) => {\r\n      return item !== true;\r\n    });\r\n    if (errorIndex !== -1) {\r\n      this.setState({ activeIndex: errorIndex + 1 });\r\n    }\r\n    let returnBPValue = BPValueList.every(function (value) {\r\n      return value === true;\r\n    });\r\n\r\n    var attributeValidationFPErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationFPErrors\r\n    );\r\n    let attributeFPList = lodash.cloneDeep(this.state.selectedAttributeFPList);\r\n    attributeFPList.forEach((attribute) => {\r\n      attributeValidationFPErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ attributeValidationFPErrors });\r\n    let returnAttributeFPValue = true;\r\n    attributeValidationFPErrors.forEach((x) => {\r\n      returnAttributeFPValue = Object.values(x.attributeValidationErrors).every(\r\n        function (value) {\r\n          return value === \"\";\r\n        }\r\n      );\r\n    });\r\n    if (!returnAttributeFPValue) {\r\n      this.setState({ activeIndex: 0 });\r\n    }\r\n\r\n    let attributeValidationBPErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationBPErrors\r\n    );\r\n    let attributeBPList = lodash.cloneDeep(this.state.selectedAttributeBPList);\r\n    BPCode.forEach((code) => {\r\n      attributeBPList[code].forEach((attribute) => {\r\n        attributeValidationBPErrors[code].forEach((attributeValidation) => {\r\n          if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n            attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n              attributeValidation.attributeValidationErrors[\r\n                attributeMetaData.Code\r\n              ] = Utilities.valiateAttributeField(\r\n                attributeMetaData,\r\n                attributeMetaData.DefaultValue\r\n              );\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n    this.setState({ attributeValidationBPErrors });\r\n    let attributeBPValueList = BPCode.map((code) => {\r\n      let attributeBPValue = true;\r\n      attributeValidationBPErrors[code].forEach((x) => {\r\n        attributeBPValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      });\r\n      return attributeBPValue;\r\n    });\r\n    let attributeErrorIndex = attributeBPValueList.findIndex((item) => {\r\n      return item !== true;\r\n    });\r\n    if (attributeErrorIndex !== -1) {\r\n      this.setState({ activeIndex: attributeErrorIndex + 1 });\r\n    }\r\n    let returnAttributeBPValue = attributeBPValueList.every(function (value) {\r\n      return value === true;\r\n    });\r\n\r\n    return (\r\n      returnValue &&\r\n      returnBPValue &&\r\n      returnAttributeFPValue &&\r\n      returnAttributeBPValue\r\n    );\r\n  }\r\n\r\n  createManualEntry() {\r\n    this.handleAuthenticationClose();\r\n    let railMarineTransactionCommonInfo = lodash.cloneDeep(\r\n      this.state.railMarineTransactionCommonInfo\r\n    );\r\n    let railMarineTransactionBPInfo = lodash.cloneDeep(\r\n      this.state.railMarineTransactionBPInfo\r\n    );\r\n    Object.keys(railMarineTransactionCommonInfo).forEach((key) => {\r\n      if (\r\n        !(\r\n          key.includes(\"UOM\") ||\r\n          key === \"BayCode\" ||\r\n          key === \"BCUCode\" ||\r\n          key === \"UnLoadingArm\" ||\r\n          key === \"StartTime\" ||\r\n          key === \"EndTime\" ||\r\n          key === \"FinishedProductCode\" ||\r\n          key === \"Remarks\" ||\r\n          key === \"MeterCode\" ||\r\n          key === \"Attributes\"\r\n        )\r\n      ) {\r\n        railMarineTransactionCommonInfo[key] = Utilities.convertStringtoDecimal(\r\n          railMarineTransactionCommonInfo[key]\r\n        );\r\n      }\r\n    });\r\n    let BPCode = Object.keys(railMarineTransactionBPInfo);\r\n    BPCode.forEach((code) => {\r\n      Object.keys(railMarineTransactionBPInfo[code]).forEach((key) => {\r\n        if (\r\n          !(\r\n            key.includes(\"UOM\") ||\r\n            key === \"MeterCode\" ||\r\n            key === \"Attributes\" ||\r\n            key === \"TankCode\"\r\n          )\r\n        ) {\r\n          railMarineTransactionBPInfo[code][key] =\r\n            Utilities.convertStringtoDecimal(\r\n              railMarineTransactionBPInfo[code][key]\r\n            );\r\n        }\r\n      });\r\n    });\r\n    var keyCode = [\r\n      {\r\n        key: \"MarineReceiptCode\",\r\n        value: this.props.ReceiptCode,\r\n      },\r\n      {\r\n        key: \"CompartmentSeqNoInVehicle\",\r\n        value: this.state.selectedCompartment.CompartmentSeqNoInVehicle,\r\n      },\r\n      {\r\n        key: \"FinishedProductCode\",\r\n        value: this.state.selectedCompartment.FinishedProductCode,\r\n      },\r\n    ];\r\n\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"MarineReceiptManualEntry_SavedSuccess\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"MarineReceiptManualEntry_CompSeqNo\"],\r\n          keyValues: [this.state.selectedCompartment.CompartmentSeqNoInVehicle],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    let arrTransactionBP = [];\r\n    BPCode.forEach((code) => {\r\n      arrTransactionBP.push({\r\n        BaseProductCode: code,\r\n        TankCode: railMarineTransactionBPInfo[code].TankCode,\r\n        TankStartSnapShot: {\r\n          MassUOM: railMarineTransactionBPInfo[code].MassUOM,\r\n          GrossVolume: railMarineTransactionBPInfo[code].TankStartGrossQuantity,\r\n          NetVolume: railMarineTransactionBPInfo[code].TankStartNetQuantity,\r\n          GrossMass: railMarineTransactionBPInfo[code].TankStartGrossMass,\r\n          Pressure: railMarineTransactionBPInfo[code].TankStartPressure,\r\n        },\r\n        TankEndSnapShot: {\r\n          MassUOM: railMarineTransactionBPInfo[code].MassUOM,\r\n          GrossVolume: railMarineTransactionBPInfo[code].TankEndGrossQuantity,\r\n          NetVolume: railMarineTransactionBPInfo[code].TankEndNetQuantity,\r\n          GrossMass: railMarineTransactionBPInfo[code].TankEndGrossMass,\r\n          Pressure: railMarineTransactionBPInfo[code].TankEndPressure,\r\n        },\r\n        QuantityUOM: railMarineTransactionCommonInfo.QuantityUOM,\r\n        StartTime: railMarineTransactionCommonInfo.StartTime,\r\n        EndTime: railMarineTransactionCommonInfo.EndTime,\r\n        TransactionID: railMarineTransactionCommonInfo.TransactionID,\r\n        Remarks: railMarineTransactionCommonInfo.Remarks,\r\n        GrossQuantity: railMarineTransactionBPInfo[code].GrossQuantity,\r\n        NetQuantity: railMarineTransactionBPInfo[code].NetQuantity,\r\n        Temperature: railMarineTransactionBPInfo[code].Temperature,\r\n        TemperatureUOM: railMarineTransactionBPInfo[code].TemperatureUOM,\r\n        ProductDensity: railMarineTransactionBPInfo[code].ProductDensity,\r\n        ProductDensityUOM: railMarineTransactionBPInfo[code].ProductDensityUOM,\r\n        StartTotalizer: railMarineTransactionBPInfo[code].StartTotalizer,\r\n        EndTotalizer: railMarineTransactionBPInfo[code].EndTotalizer,\r\n        NetStartTotalizer: railMarineTransactionBPInfo[code].NetStartTotalizer,\r\n        NetEndTotalizer: railMarineTransactionBPInfo[code].NetEndTotalizer,\r\n        MeterCode: railMarineTransactionBPInfo[code].MeterCode,\r\n        GrossMass: railMarineTransactionBPInfo[code].GrossMass,\r\n        MassUOM: railMarineTransactionBPInfo[code].MassUOM,\r\n        Pressure: railMarineTransactionBPInfo[code].Pressure,\r\n        PressureUOM: railMarineTransactionBPInfo[code].PressureUOM,\r\n        CalculatedGross: railMarineTransactionBPInfo[code].CalculatedGross,\r\n        CalculatedNet: railMarineTransactionBPInfo[code].CalculatedNet,\r\n        CalculatedValueUOM:\r\n          railMarineTransactionBPInfo[code].CalculatedValueUOM,\r\n        Attributes: railMarineTransactionBPInfo[code].Attributes,\r\n      });\r\n    });\r\n\r\n    var entity = {\r\n      CommonInfo: {\r\n        BayCode: railMarineTransactionCommonInfo.BayCode,\r\n        BCUCode: railMarineTransactionCommonInfo.BCUCode,\r\n        UnLoadingArm: railMarineTransactionCommonInfo.UnLoadingArm,\r\n      },\r\n      TransactionFPinfo: {\r\n        QuantityUOM: railMarineTransactionCommonInfo.QuantityUOM,\r\n        StartTime: railMarineTransactionCommonInfo.StartTime,\r\n        EndTime: railMarineTransactionCommonInfo.EndTime,\r\n        TransactionID: railMarineTransactionCommonInfo.TransactionID,\r\n        Remarks: railMarineTransactionCommonInfo.Remarks,\r\n        GrossQuantity: railMarineTransactionCommonInfo.GrossQuantity,\r\n        NetQuantity: railMarineTransactionCommonInfo.NetQuantity,\r\n        Temperature: railMarineTransactionCommonInfo.Temperature,\r\n        TemperatureUOM: railMarineTransactionCommonInfo.TemperatureUOM,\r\n        ProductDensity: railMarineTransactionCommonInfo.ProductDensity,\r\n        ProductDensityUOM: railMarineTransactionCommonInfo.ProductDensityUOM,\r\n        StartTotalizer: railMarineTransactionCommonInfo.StartTotalizer,\r\n        EndTotalizer: railMarineTransactionCommonInfo.EndTotalizer,\r\n        NetStartTotalizer: railMarineTransactionCommonInfo.NetStartTotalizer,\r\n        NetEndTotalizer: railMarineTransactionCommonInfo.NetEndTotalizer,\r\n        MeterCode: railMarineTransactionCommonInfo.MeterCode,\r\n        GrossMass: railMarineTransactionCommonInfo.GrossMass,\r\n        MassUOM: railMarineTransactionCommonInfo.MassUOM,\r\n        Pressure: railMarineTransactionCommonInfo.Pressure,\r\n        PressureUOM: railMarineTransactionCommonInfo.PressureUOM,\r\n        TankStartSnapShot: {\r\n          MassUOM: railMarineTransactionCommonInfo.MassUOM,\r\n        },\r\n        TankEndSnapShot: {\r\n          MassUOM: railMarineTransactionCommonInfo.MassUOM,\r\n        },\r\n        CalculatedGross: railMarineTransactionCommonInfo.CalculatedGross,\r\n        CalculatedNet: railMarineTransactionCommonInfo.CalculatedNet,\r\n        CalculatedValueUOM: railMarineTransactionCommonInfo.CalculatedValueUOM,\r\n        Attributes: railMarineTransactionCommonInfo.Attributes,\r\n      },\r\n      ArrTransactionBP: arrTransactionBP,\r\n      ArrTransactionAdditive: null,\r\n    };\r\n    var obj = {\r\n      ShareHolderCode: this.state.selectedCompartment.ShareHolderCode,\r\n      keyDataCode: KeyCodes.marineReceiptCode,\r\n      KeyCodes: keyCode,\r\n      Entity: entity,\r\n    };\r\n    axios(\r\n      RestApis.MarineReceiptManualEntrySave,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          //this.handleReset();\r\n          this.setState({  saveEnabled: Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.modify,\r\n        fnMarineReceiptByCompartment), }, () => {\r\n            this.getMarineReceiptManualEntryEnabled(this.state.selectedCompartment);\r\n          });\r\n        } else {\r\n          notification.message = \"MarineReceiptManualEntry_SaveFailure\";\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({  saveEnabled: Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.modify,\r\n            fnMarineReceiptByCompartment),\r\n            marineReceiptManualEntryEnabled: false\r\n          });\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        console.log(\"Error while handleSave:\", error);\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      const railMarineTransactionCommonInfo = lodash.cloneDeep(\r\n        emptyMarineRailTransactionCommonInfo\r\n      );\r\n\r\n      railMarineTransactionCommonInfo.StartTime = new Date();\r\n      railMarineTransactionCommonInfo.EndTime = new Date();\r\n      railMarineTransactionCommonInfo.QuantityUOM = this.props.QuantityUOM;\r\n\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState({\r\n        validationErrors,\r\n        activeIndex: 0,\r\n        bcuCodeList: [],\r\n        unLoadingArmList: [],\r\n        railMarineTransactionCommonInfo,\r\n        selectedAttributeFPList: [],\r\n        selectedAttributeBPList: {},\r\n        attributeUnloadingDetailsFPDataList: [],\r\n        attributeUnloadingDetailsBPDataList: [],\r\n        attributeValidationBPErrors: {},\r\n        attributeValidationFPErrors: [],\r\n         saveEnabled: Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.modify,\r\n        fnMarineReceiptByCompartment),\r\n        marineReceiptManualEntryEnabled: false\r\n      });\r\n      this.handleResetForCompartmentSeqNoInVehicle();\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptManualEntryDetails:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetForCompartmentSeqNoInVehicle() {\r\n    this.setState({\r\n      selectedCompartment: {},\r\n      productList: [],\r\n      tankList: {},\r\n      railMarineTransactionBPInfo: {},\r\n      validationBPErrors: {},\r\n      activeIndex: 0,\r\n    });\r\n  }\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      var railMarineTransactionCommonInfo = lodash.cloneDeep(\r\n        this.state.railMarineTransactionCommonInfo\r\n      );\r\n      validationErrors[propertyName] = error;\r\n      railMarineTransactionCommonInfo[propertyName] = value;\r\n      this.setState({ validationErrors, railMarineTransactionCommonInfo });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptManualEntryDetails:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleTabChange(index) {\r\n    this.setState({ activeIndex: index });\r\n  }\r\n\r\n  fillFPAttributeDetails(railMarineTransactionCommonInfo) {\r\n    try {\r\n      let attributeList = lodash.cloneDeep(this.state.selectedAttributeFPList);\r\n      railMarineTransactionCommonInfo.Attributes = [];\r\n      attributeList.forEach((comp) => {\r\n        let attribute = {\r\n          ListOfAttributeData: [],\r\n        };\r\n        attribute.TerminalCode = comp.TerminalCode;\r\n        comp.attributeMetaDataList.forEach((det) => {\r\n          attribute.ListOfAttributeData.push({\r\n            AttributeCode: det.Code,\r\n            AttributeValue: det.DefaultValue,\r\n          });\r\n        });\r\n        railMarineTransactionCommonInfo.Attributes.push(attribute);\r\n      });\r\n      this.setState({ railMarineTransactionCommonInfo });\r\n      return railMarineTransactionCommonInfo;\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptManualEntryDetails:Error occured on fillFPAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  fillBPAttributeDetails(railMarineTransactionBPInfo) {\r\n    let BPCode = Object.keys(railMarineTransactionBPInfo);\r\n    BPCode.forEach((code) => {\r\n      try {\r\n        let attributeList = lodash.cloneDeep(\r\n          this.state.selectedAttributeBPList[code]\r\n        );\r\n        railMarineTransactionBPInfo[code].Attributes = [];\r\n        attributeList.forEach((comp) => {\r\n          let attribute = {\r\n            ListOfAttributeData: [],\r\n          };\r\n          attribute.TerminalCode = comp.TerminalCode;\r\n          comp.attributeMetaDataList.forEach((det) => {\r\n            attribute.ListOfAttributeData.push({\r\n              AttributeCode: det.Code,\r\n              AttributeValue: det.DefaultValue,\r\n            });\r\n          });\r\n          railMarineTransactionBPInfo[code].Attributes.push(attribute);\r\n        });\r\n        this.setState({ railMarineTransactionBPInfo });\r\n        return railMarineTransactionBPInfo;\r\n      } catch (error) {\r\n        console.log(\r\n          \"MarineReceiptManualEntryDetails:Error occured on fillFPAttributeDetails\",\r\n          error\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      compartmentSeqNoInVehicleList: this.state.compartmentSeqNoInVehicleList,\r\n      bcuCodeList: this.state.bcuCodeList,\r\n      unLoadingArmList: this.state.unLoadingArmList,\r\n      berthList: this.state.berthList,\r\n      quantityUOMList: this.state.quantityUOMList,\r\n      temperatureUOMList: this.state.temperatureUOMList,\r\n      densityUOMList: this.state.densityUOMList,\r\n      meterCodeList: this.state.meterCodeList,\r\n      massUOMList: this.state.massUOMList,\r\n      pressureUOMList: this.state.pressureUOMList,\r\n      calculatedValueUOMList: this.state.calculatedValueUOMList,\r\n      tankList: this.state.tankList,\r\n    };\r\n    const { selectedCompartment, saveEnabled, marineReceiptManualEntryEnabled } = this.state;\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <TMDetailsHeader newEntityName=\"MarineReceiptManualEntry_PageTitle\"></TMDetailsHeader>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n              <MarineReceiptManualEntryDetails\r\n                selectedCompartment={selectedCompartment}\r\n                listOptions={listOptions}\r\n                validationErrors={this.state.validationErrors}\r\n                onFieldChange={this.handleChange}\r\n                railMarineTransactionCommonInfo={\r\n                  this.state.railMarineTransactionCommonInfo\r\n                }\r\n                onDateTextChange={this.handleDateTextChange}\r\n                marineReceiptManualEntryEnabled={marineReceiptManualEntryEnabled}\r\n              ></MarineReceiptManualEntryDetails>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n              <Tab\r\n                onTabChange={(index) => this.handleTabChange(index)}\r\n                activeIndex={this.state.activeIndex}\r\n              >\r\n                <Tab.Pane title={this.state.railMarineTransactionCommonInfo.FinishedProductCode === '' ? t(\"FinishedProduct\") : t(\"FinishedProduct\") + \"-\" + this.state.railMarineTransactionCommonInfo.FinishedProductCode}>\r\n                  <MarineReceiptManualEntryFPTransactionsDetails\r\n                    validationErrors={this.state.validationErrors}\r\n                    listOptions={listOptions}\r\n                    onFieldChange={this.handleChange}\r\n                    railMarineTransactionCommonInfo={\r\n                      this.state.railMarineTransactionCommonInfo\r\n                    }\r\n                    selectedAttributeList={this.state.selectedAttributeFPList}\r\n                    attributeValidationErrors={\r\n                      this.state.attributeValidationFPErrors\r\n                    }\r\n                    handleAttributeCellDataEdit={\r\n                      this.handleFPAttributeCellDataEdit\r\n                    }\r\n                    isEnterpriseNode={\r\n                      this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                    }\r\n                  ></MarineReceiptManualEntryFPTransactionsDetails>\r\n                </Tab.Pane>\r\n                {this.state.productList.map((item, index) => {\r\n                  return (\r\n                    <Tab.Pane\r\n                      key={index}\r\n                      title={\r\n                        item.ProductTYPE === \"baseproduct\"\r\n                          ? t(\"MarineReceipt_BaseProduct\") + \"-\" + item.code\r\n                          : t(\"MarineReceipt_BaseProduct\")\r\n                      }\r\n                    >\r\n                      <MarineReceiptManualEntryBaseProductDetails\r\n                        validationErrors={\r\n                          this.state.validationBPErrors[item.code]\r\n                        }\r\n                        listOptions={listOptions}\r\n                        index={index}\r\n                        code={item.code}\r\n                        onFieldChange={this.handleBPChange}\r\n                        railMarineTransactionBPInfo={\r\n                          this.state.railMarineTransactionBPInfo[item.code]\r\n                        }\r\n                        selectedAttributeList={\r\n                          this.state.selectedAttributeBPList[item.code]\r\n                        }\r\n                        attributeValidationErrors={\r\n                          this.state.attributeValidationBPErrors[item.code]\r\n                        }\r\n                        handleAttributeCellDataEdit={\r\n                          this.handleBPAttributeCellDataEdit\r\n                        }\r\n                      ></MarineReceiptManualEntryBaseProductDetails>\r\n                    </Tab.Pane>\r\n                  );\r\n                })}\r\n              </Tab>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n              <TMDetailsUserActions\r\n                handleBack={this.props.handleBack}\r\n                handleSave={this.handleSave}\r\n                handleReset={this.handleReset}\r\n                saveEnabled={\r\n                  saveEnabled && marineReceiptManualEntryEnabled\r\n                  // selectedCompartment.ReceiptCompartmentStatus === null\r\n                  //   ? saveEnabled\r\n                  //   : selectedCompartment.ReceiptCompartmentStatus === 2\r\n                  //   ? false\r\n                  //   : saveEnabled\r\n                }\r\n              ></TMDetailsUserActions>\r\n            </ErrorBoundary>\r\n            {this.state.showAuthenticationLayout ? (\r\n                    <UserAuthenticationLayout\r\n                        Username={this.props.userDetails.EntityResult.UserName}\r\n                        functionName={functionGroups.add}\r\n                        functionGroup={fnViewMarineUnloadingDetails}\r\n                        handleOperation={this.addLoadingDetails}\r\n                        handleClose={this.handleAuthenticationClose}\r\n                    ></UserAuthenticationLayout>\r\n                    ) : null}\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(\r\n  MarineReceiptManualEntryDetailsComposite\r\n);\r\n\r\nMarineReceiptManualEntryDetailsComposite.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  ReceiptCode: PropTypes.string.isRequired,\r\n  ReceiptStatus: PropTypes.string.isRequired,\r\n  QuantityUOM: PropTypes.string.isRequired,\r\n  ActualTerminalCode: PropTypes.string.isRequired,\r\n};\r\n"],"names":["MarineReceiptManualEntryDetails","_ref","listOptions","validationErrors","railMarineTransactionCommonInfo","onFieldChange","onDateTextChange","selectedCompartment","marineReceiptManualEntryEnabled","_jsx","TranslationConsumer","children","t","className","_jsxs","Select","fluid","placeholder","value","CompartmentSeqNoInVehicle","label","onChange","data","indicator","options","compartmentSeqNoInVehicleList","reserveSpace","search","multiple","noResultsMessage","error","disabled","ReceiptCompartmentStatus","BayCode","berthList","BCUCode","bcuCodeList","UnLoadingArm","unLoadingArmList","DatePicker","Date","StartTime","type","disablePast","disableFuture","minuteStep","displayFormat","getCurrentDateFormat","onTextChange","EndTime","Input","FinishedProductCode","QuantityUOM","getOptionsWithSelect","quantityUOMList","TransactionID","Remarks","MarineReceiptManualEntryFPTransactionsDetails","selectedAttributeList","handleAttributeCellDataEdit","attributeValidationErrors","isEnterpriseNode","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","GrossQuantity","NetQuantity","Temperature","TemperatureUOM","temperatureUOMList","ProductDensity","ProductDensityUOM","densityUOMList","ReferenceDensity","MeterCode","meterCodeList","StartTotalizer","EndTotalizer","NetStartTotalizer","NetEndTotalizer","GrossMass","MassUOM","massUOMList","Pressure","PressureUOM","pressureUOMList","CalculatedGross","CalculatedNet","CalculatedValueUOM","Utilities","calculatedValueUOMList","length","map","attire","ErrorBoundary","Accordion","Content","title","AttributeDetails","attributeMetaDataList","handleCellDataEdit","MarineReceiptManualEntryBaseProductDetails","index","railMarineTransactionBPInfo","code","TankCode","tankList","TankStartGrossQuantity","TankEndGrossQuantity","TankStartNetQuantity","TankEndNetQuantity","TankStartGrossMass","TankEndGrossMass","TankStartPressure","TankEndPressure","attribute","defaultProps","MarineReceiptManualEntryDetailsComposite","Component","constructor","arguments","state","lodash","emptyMarineRailTransactionCommonInfo","marineReceiptManualEntryValidationDef","validationBPErrors","isReadyToRender","saveEnabled","receiptCompartmentDetails","productList","activeIndex","selectedAttributeFPList","selectedAttributeBPList","attributeUnloadingDetailsFPDataList","attributeUnloadingDetailsBPDataList","attributeValidationBPErrors","attributeValidationFPErrors","showAuthenticationLayout","handleChange","propertyName","this","setState","undefined","getselectedCompartment","props","Object","keys","forEach","key","userDetails","EntityResult","FunctionsList","functionGroups","modify","fnMarineReceiptByCompartment","getBCUListByBerth","GetUnloadingArmListByBCU","GetMetersForLA","console","log","handleBPChange","marineReceiptManualEntryBPValidationDef","handleFPAttributeCellDataEdit","Code","DataType","Constants","INT","LONG","FLOAT","DOUBLE","DefaultValue","handleBPAttributeCellDataEdit","addLoadingDetails","createManualEntry","handleSave","validateSave","fillFPAttributeDetails","fillBPAttributeDetails","IsWebPortalUser","handleReset","handleResetForCompartmentSeqNoInVehicle","handleDateTextChange","handleAuthenticationClose","getMarineReceiptManualEntryEnabled","ReceiptCompartmentStatusKeys","MarineReceiptCompartmentStatus","axios","RestApis","ShareholderCode","ReceiptStatus","tokenDetails","tokenInfo","then","response","result","IsSuccess","ErrorList","catch","getBerthList","list","Table","item","push","getBCUDetails","deviceCode","keyCode","KeyCodes","obj","ShareHolderCode","keyDataCode","bcu","DensityUOM","bpInfo","bcuCode","loadingArmCode","MARINE_BCUVIEW","ActualTerminalCode","Array","isArray","loadingArm","AssociatedArmsList","larm","mainLineMeters","AssociatedMeterList","meter","MeterLineType","bpMeterCode","MeterList","element","getQuantityUOMList","getTemperatureUOMList","getDensityUOMList","getMeterCodeList","getMassUOMList","getPressureUOMList","getCalculatedValueUOMList","DeviceCode","LoadingArmCode","getTankList","getPartialMarineReceiptData","ReceiptCode","handleProductDetail","initializePartialAttribute","getAttributes","emptyRailMarineTransactionBPInfo","getReceiptCompartmentDetails","getCompartmentSeqNoInVehicleList","selectedCompartmentCompartmentSeqNoInVehicle","componentDidMount","setDefaultValues","BPCode","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","marineUnloadingDetailsBP","marineUnloadingDetailsFP","IsEnterpriseNode","terminalSelectionChangeBP","terminalSelectionChangeFP","localNodeAttribute","selectedTerminals","attributesTerminalsList","railMarineTransactionFPInfo","existitem","selectedAttributeFP","attributeMetaData","Attributevalue","Attributes","FPAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","selectedAttributeBP","BPAttribute","newSelectedAttributeBPList","newAttributeValidationBPErrors","returnValue","values","every","BPValueList","errorIndex","findIndex","returnBPValue","returnAttributeFPValue","attributeBPList","attributeBPValueList","attributeBPValue","attributeErrorIndex","returnAttributeBPValue","includes","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","arrTransactionBP","BaseProductCode","TankStartSnapShot","GrossVolume","NetVolume","TankEndSnapShot","entity","CommonInfo","TransactionFPinfo","ArrTransactionBP","ArrTransactionAdditive","Entity","toast","NotifyEvent","notificationMessage","autoClose","handleTabChange","attributeList","comp","det","render","TMDetailsHeader","newEntityName","Tab","onTabChange","Pane","ProductTYPE","TMDetailsUserActions","handleBack","UserAuthenticationLayout","Username","UserName","functionName","add","functionGroup","fnViewMarineUnloadingDetails","handleOperation","handleClose","LoadingPage","connect","getUserDetails","TokenAuth"],"sourceRoot":""}