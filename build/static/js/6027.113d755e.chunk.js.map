{"version":3,"file":"static/js/6027.113d755e.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/UIBase/Details/WebPortalUserMapDetails.jsx","Components/Composite/Details/WebPortalUserMapDetailsComposite.jsx","Components/Composite/Summary/WebPortalUserMapSummaryComposite.jsx","Components/Composite/Entity/WebPortalUserMapComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","JS/FunctionGroups.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Select, Input, Button, Icon } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\n\r\nWebPortalUserMapDetails.propTypes = {\r\n  webPortalUser: PropTypes.object.isRequired,\r\n  modWebPortalUser: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    securityUsers: PropTypes.array,\r\n  }).isRequired,\r\n  userChange: PropTypes.func.isRequired,\r\n  handleAvailableEntitySelection: PropTypes.func.isRequired,\r\n  handleAssociatedEntitySelection: PropTypes.func.isRequired,\r\n  handleEntityAssociation: PropTypes.func.isRequired,\r\n  handleEntityDisassociation: PropTypes.func.isRequired,\r\n  pageSize: PropTypes.number,\r\n};\r\n\r\nWebPortalUserMapDetails.defaultProps = {\r\n  listOptions: {\r\n    securityUsers: [],\r\n    availableEntities: [],\r\n    selectedAvailableEntities: [],\r\n    selectedAssociatedEntities: [],\r\n  },\r\n};\r\nexport function statusRenderer(cellData) {\r\n  const data = cellData.value;\r\n  if (typeof data === \"boolean\") {\r\n    if (data) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n    else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n  }\r\n}\r\nexport function WebPortalUserMapDetails({\r\n  webPortalUser,\r\n  modWebPortalUser,\r\n  validationErrors,\r\n  onFieldChange,\r\n  listOptions,\r\n  userChange,\r\n  handleAvailableEntitySelection,\r\n  handleAssociatedEntitySelection,\r\n  handleEntityAssociation,\r\n  handleEntityDisassociation,\r\n  pageSize,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              {webPortalUser.UserName === \"\" ? (\r\n                <Select\r\n                  fluid\r\n                  placeholder={t(\"Common_Select\")}\r\n                  label={t(\"WebPortal_Username\")}\r\n                  value={modWebPortalUser.UserName}\r\n                  options={listOptions.securityUsers}\r\n                  onChange={(data) => {\r\n                    userChange(data);\r\n                  }}\r\n                  indicator=\"required\"\r\n                  error={t(validationErrors.UserName)}\r\n                  reserveSpace={false}\r\n                  search={true}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                />\r\n              ) : (\r\n                <Input\r\n                  fluid\r\n                  value={modWebPortalUser.UserName}\r\n                  indicator=\"required\"\r\n                  disabled={true}\r\n                  label={t(\"WebPortal_Username\")}\r\n                  error={t(validationErrors.UserName)}\r\n                  reserveSpace={false}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modWebPortalUser.UserPrincipal}\r\n                indicator=\"required\"\r\n                onChange={(data) => onFieldChange(\"UserPrincipal\", data)}\r\n                label={t(\"WebPortal_UserPrincipal\")}\r\n                error={t(validationErrors.UserPrincipal)}\r\n                reserveSpace={false}\r\n                disabled={webPortalUser.UserName !== \"\"}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modWebPortalUser.RoleName}\r\n                label={t(\"WebPortal_Role\")}\r\n                reserveSpace={false}\r\n                disabled={true}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {listOptions.availableEntities.length > 0 ||\r\n          modWebPortalUser.WebPortalUserEntityItems.length > 0 ? (\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-md-5 col-lg-5\">\r\n                <h4>{t(\"WebPortal_AvailableEntity\")}</h4>\r\n                <div className=\"detailsTable\">\r\n                  <DataTable\r\n                    data={listOptions.availableEntities}\r\n                    search={true}\r\n                    selectionMode=\"multiple\"\r\n                    selection={listOptions.selectedAvailableEntities}\r\n                    onSelectionChange={handleAvailableEntitySelection}\r\n                    rows={pageSize}\r\n                    searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  >\r\n                    <DataTable.Column\r\n                      className=\"compColHeight\"\r\n                      key=\"Code\"\r\n                      field=\"Code\"\r\n                      header={t(\"WebPortal_Entity\")}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      className=\"compColHeight\"\r\n                      key=\"ShareholderCode\"\r\n                      field=\"ShareholderCode\"\r\n                      header={t(\"AccessCardInfo_Shareholder\")}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    {Array.isArray(listOptions.availableEntities) &&\r\n                    listOptions.availableEntities.length > pageSize ? (\r\n                      <DataTable.Pagination />\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </DataTable>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-12 col-md-2 col-lg-2\">\r\n                <br></br>\r\n                <br></br>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    icon={<Icon name=\"caret-right\" root=\"common\" />}\r\n                    content=\"\"\r\n                    iconPosition=\"right\"\r\n                    onClick={handleEntityAssociation}\r\n                    disabled={\r\n                      modWebPortalUser.RoleName ===\r\n                      Constants.WebPortalRoles.SHAREHOLDER\r\n                    }\r\n                  />\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <Button\r\n                    type=\"primary\"\r\n                    icon={<Icon name=\"caret-left\" root=\"common\" />}\r\n                    content=\"\"\r\n                    iconPosition=\"right\"\r\n                    onClick={handleEntityDisassociation}\r\n                    disabled={\r\n                      modWebPortalUser.RoleName ===\r\n                      Constants.WebPortalRoles.SHAREHOLDER\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 col-md-5 col-lg-5\">\r\n                <h4>{t(\"WebPortal_AssociatedEntity\")}</h4>\r\n                <div className=\"detailsTable\">\r\n                  <DataTable\r\n                    data={modWebPortalUser.WebPortalUserEntityItems}\r\n                    search={true}\r\n                    selectionMode=\"multiple\"\r\n                    selection={listOptions.selectedAssociatedEntities}\r\n                    onSelectionChange={handleAssociatedEntitySelection}\r\n                    rows={pageSize}\r\n                    searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  >\r\n                    <DataTable.Column\r\n                      className=\"compColHeight\"\r\n                      key=\"Code\"\r\n                      field=\"Code\"\r\n                      header={t(\"WebPortal_Entity\")}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      className=\"compColHeight\"\r\n                      key=\"ShareholderCode\"\r\n                      field=\"ShareholderCode\"\r\n                      header={t(\"AccessCardInfo_Shareholder\")}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      className=\"compColHeight\"\r\n                      key=\"IsEntityActive\"\r\n                      field=\"IsEntityActive\"\r\n                      header={t(\"TankGroupInfo_Active\")}\r\n                      editable={false}\r\n                      renderer={statusRenderer}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    {Array.isArray(modWebPortalUser.WebPortalUserEntityItems) &&\r\n                    modWebPortalUser.WebPortalUserEntityItems.length >\r\n                      pageSize ? (\r\n                      <DataTable.Pagination />\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </DataTable>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { WebPortalUserMapDetails } from \"../../UIBase/Details/WebPortalUserMapDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { emptyWebPortalUser } from \"../../../JS/DefaultEntities\";\r\nimport { webPortalUserValidationDef } from \"../../../JS/ValidationDef\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport lodash from \"lodash\";\r\nimport { functionGroups, fnWebPortalUserMap } from \"../../../JS/FunctionGroups\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button } from \"@scuf/common\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\n\r\nclass WebPortalUserMapDetailsComposite extends Component {\r\n    state = {\r\n        webPortalUser: lodash.cloneDeep(emptyWebPortalUser),\r\n        modWebPortalUser: {},\r\n        validationErrors: Utilities.getInitialValidationErrors(\r\n            webPortalUserValidationDef\r\n        ),\r\n        isReadyToRender: false,\r\n        saveEnabled: false,\r\n        securityUsers: [],\r\n        availableEntities: [],\r\n        selectedAvailableEntites: [],\r\n        selectedAssociatedEntities: [],\r\n        entityDisassociationPopUp:false\r\n    }\r\n\r\n  componentDidMount() {\r\n        try {\r\n            Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n            this.getWebPortalUser(this.props.selectedRow);\r\n            this.GetSecurityUsers();\r\n          } catch (error) {\r\n            console.log(\r\n              \"WebPortalUserMapDetailsComposite:Error occured on componentDidMount\",\r\n              error\r\n            );\r\n          }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.webPortalUser.UserName !== \"\" &&\r\n        nextProps.selectedRow.WebPortal_UserName === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getWebPortalUser(nextProps.selectedRow);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.log(\r\n        \"WebPortalUserMapDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getWebPortalUser(selectedRow) {\r\n        if (selectedRow.WebPortal_UserName === undefined) {\r\n            this.setState({\r\n                webPortalUser: lodash.cloneDeep(emptyWebPortalUser),\r\n                modWebPortalUser: lodash.cloneDeep(emptyWebPortalUser),\r\n                isReadyToRender: true,\r\n                saveEnabled: Utilities.isInFunction(\r\n                    this.props.userDetails.EntityResult.FunctionsList,\r\n                    functionGroups.add,\r\n                    fnWebPortalUserMap\r\n              ),\r\n              availableEntities:[]\r\n            }, () => {\r\n              this.GetSecurityUsers();\r\n            })\r\n            return;\r\n        }\r\n        \r\n        axios(\r\n            RestAPIs.GetWebPortalUser+'?userName='+selectedRow.WebPortal_UserName,\r\n            Utilities.getAuthenticationObjectforGet(\r\n                this.props.tokenDetails.tokenInfo\r\n            )\r\n        )\r\n          .then((response) => {\r\n                var result = response.data;\r\n                if (result.IsSuccess === true) {\r\n                    this.setState({\r\n                        isReadyToRender: false,\r\n                        webPortalUser: lodash.cloneDeep(result.EntityResult),\r\n                        modWebPortalUser: lodash.cloneDeep(result.EntityResult),\r\n                        saveEnabled: Utilities.isInFunction(\r\n                        this.props.userDetails.EntityResult.FunctionsList,\r\n                        functionGroups.modify,\r\n                        fnWebPortalUserMap\r\n                    ),\r\n                    }, () => {\r\n                      this.getEntityForPortalUser(result.EntityResult.UserName)\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        webPortalUser: lodash.cloneDeep(emptyWebPortalUser),\r\n                        modWebPortalUser: lodash.cloneDeep(emptyWebPortalUser),\r\n                        isReadyToRender: true,\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    GetSecurityUsers() {\r\n        try {\r\n            axios(\r\n                RestAPIs.GetSecurityUsers,\r\n                Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n              )\r\n                .then((response) => {\r\n                  var result = response.data;\r\n                  if (result.IsSuccess === true) {\r\n                    if (\r\n                      result.EntityResult !== null &&\r\n                      Array.isArray(result.EntityResult)\r\n                    ) {\r\n                      let securityUsers = Utilities.transferListtoOptions(\r\n                        result.EntityResult\r\n                      );\r\n                      this.setState({ securityUsers });\r\n                    }\r\n                  } else {\r\n                    console.log(\"Error in getUsers:\", result.ErrorList);\r\n                  }\r\n                })\r\n        }\r\n        catch (error) {\r\n            console.log(\"Error while getting getUsers:\", error);\r\n        } \r\n    }\r\n\r\n    handleChange = (propertyName, data) => {\r\n        try {\r\n          const modWebPortalUser = lodash.cloneDeep(this.state.modWebPortalUser);\r\n          modWebPortalUser[propertyName] = data;\r\n          this.setState({ modWebPortalUser });\r\n          const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n          if (webPortalUserValidationDef[propertyName] !== undefined) {\r\n            validationErrors[propertyName] = Utilities.validateField(\r\n                webPortalUserValidationDef[propertyName],\r\n              data\r\n            );\r\n            this.setState({ validationErrors });\r\n          }\r\n        } catch (error) {\r\n          console.log(\r\n            \"WebPortalUserMapDetailsComposite:Error occured on handleChange\",\r\n            error\r\n          );\r\n        }\r\n    };\r\n    \r\n    handleReset = () => {\r\n        try {\r\n          const { validationErrors } = { ...this.state };\r\n          const webPortalUser = lodash.cloneDeep(this.state.webPortalUser);\r\n          Object.keys(validationErrors).forEach(function (key) {\r\n            validationErrors[key] = \"\";\r\n          });\r\n          this.setState(\r\n            {\r\n              modWebPortalUser: { ...webPortalUser },\r\n              selectedCompRow: [],\r\n                  validationErrors,\r\n                  availableEntities: [],\r\n                  selectedAvailableEntites: [],\r\n              selectedAssociatedEntities: [],\r\n                  isReadyToRender:false\r\n            }, () => {\r\n              if (webPortalUser.UserName !== undefined && webPortalUser.UserName !== null && webPortalUser.UserName !== \"\")\r\n                this.getEntityForPortalUser(webPortalUser.UserName);\r\n              else\r\n                this.setState({isReadyToRender:true})\r\n            }\r\n          );\r\n        } catch (error) {\r\n          console.log(\r\n            \"WebPortalUserMapDetailsComposite:Error occured on handleReset\",\r\n            error\r\n          );\r\n        }\r\n    };\r\n    \r\n    handleUserChange = (data) => {\r\n      try {\r\n          let modWebPortalUser =  lodash.cloneDeep(emptyWebPortalUser);\r\n          const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n          validationErrors[\"UserName\"] = \"\";\r\n            modWebPortalUser[\"UserName\"] = data;\r\n          this.setState({ modWebPortalUser, validationErrors,selectedAssociatedEntities:[], selectedAvailableEntites:[] }, () => {\r\n            this.getEntityForPortalUser(data)\r\n            });\r\n        }\r\n        catch (error) {\r\n            console.log(\r\n                \"WebPortalUserMapDetailsComposite:Error occured on handleUserChange\",\r\n                error\r\n              );\r\n        }\r\n  }\r\n  \r\n  getEntityForPortalUser =(data)=> {\r\n    try {\r\n      let modWebPortalUser = lodash.cloneDeep(this.state.modWebPortalUser);\r\n      axios(\r\n        RestAPIs.GetEntityForPortalUser +'?userName='+data+'&entityType=',\r\n        Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n                modWebPortalUser[\"RoleName\"] = result.EntityResult.Table[0].RoleName;\r\n                //modWebPortalUser[\"WebPortalUserEntityItems\"]=[]\r\n              if (result.EntityResult.Table[0].RoleName === Constants.WebPortalRoles.SHAREHOLDER) {\r\n                modWebPortalUser.WebPortalUserEntityItems = result.EntityResult.Table1\r\n                this.setState({\r\n                  availableEntities: [],\r\n                  modWebPortalUser,\r\n                  isReadyToRender:true\r\n            })\r\n              }\r\n              else {\r\n                this.setState({\r\n                  availableEntities: result.EntityResult.Table1,\r\n                  modWebPortalUser,\r\n                  isReadyToRender:true\r\n            })\r\n              }\r\n          } else {\r\n            console.log(\"Error in GetEntityForPortalUser:\", result.ErrorList);\r\n          }\r\n        })\r\n    } catch (error) {\r\n      console.log(\r\n        \"WebPortalUserMapDetailsComposite:Error occured on getEntityForPortalUser\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n    handleAvailableEntitySelection = (e) => {\r\n        this.setState({ selectedAvailableEntites: e });\r\n    }\r\n    handleAssociatedEntitySelection = (e) => {\r\n        this.setState({ selectedAssociatedEntities: e });\r\n    }\r\n    handleEntityAssociation = () => {\r\n      try {\r\n        this.setState({ isReadyToRender: false }, () => {\r\n          const selectedAvailableEntites = lodash.cloneDeep(this.state.selectedAvailableEntites);\r\n          let availableEntities = lodash.cloneDeep(this.state.availableEntities);\r\n          let modWebPortalUser = lodash.cloneDeep(this.state.modWebPortalUser);\r\n          selectedAvailableEntites.forEach((obj) => {\r\n              modWebPortalUser.WebPortalUserEntityItems.push(obj);\r\n              availableEntities = availableEntities.filter(\r\n                  (com) => {\r\n                    return (com.Code !==obj.Code);\r\n                  });\r\n          })\r\n          this.setState({modWebPortalUser,selectedAvailableEntites:[],availableEntities,isReadyToRender:true});\r\n          })\r\n        } catch (error) {\r\n            console.log(\"WebPortalUserMapDetailsComposite:Error occured on handleEntityAssociation\",error);\r\n        }\r\n    }\r\n\r\n    handleEntityDisassociation = () => {\r\n        if(this.state.selectedAssociatedEntities.length > 0)\r\n        this.setState({entityDisassociationPopUp:true})\r\n    }\r\n\r\n    EntityDisassociation = () => {\r\n      try {\r\n        this.setState({ isReadyToRender: false }, () => {\r\n          const selectedAssociatedEntities = lodash.cloneDeep(this.state.selectedAssociatedEntities);\r\n          let modWebPortalUser = lodash.cloneDeep(this.state.modWebPortalUser);\r\n          let availableEntities = lodash.cloneDeep(this.state.availableEntities);\r\n          selectedAssociatedEntities.forEach((obj, index) => {\r\n              availableEntities.push(obj);\r\n              modWebPortalUser.WebPortalUserEntityItems = modWebPortalUser.WebPortalUserEntityItems.filter(\r\n                  (com, cindex) => {\r\n                    return (com.Code !==obj.Code);\r\n                  }\r\n                );\r\n          })\r\n          this.setState({selectedAssociatedEntities:[],modWebPortalUser,availableEntities,isReadyToRender:true})\r\n          })\r\n           \r\n        } catch (error) {\r\n            console.log(\"WebPortalUserMapDetailsComposite:Error occured on handleEntityDisassociation\",error);\r\n        }\r\n    }\r\n\r\n    confirmEntityDisassociation = () => {\r\n        return (\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <Modal open={this.state.entityDisassociationPopUp} size=\"small\">\r\n                  <Modal.Content>\r\n                    <div className=\"col col-lg-12\">\r\n                      <h5>{t(\"WebPortal_ConfirmDisassociation\")}</h5>\r\n                    </div>\r\n                  </Modal.Content>\r\n                  <Modal.Footer>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      content={t(\"AccessCardInfo_Ok\")}\r\n                      onClick={() => {\r\n                        this.setState({ entityDisassociationPopUp: false }, () => {\r\n                            this.EntityDisassociation();\r\n                          });\r\n                      }}\r\n                    />\r\n                    <Button\r\n                      type=\"primary\"\r\n                      content={t(\"Cancel\")}\r\n                      onClick={() => {\r\n                        this.setState({ entityDisassociationPopUp: false });\r\n                      }}\r\n                    />\r\n                  </Modal.Footer>\r\n                </Modal>\r\n              )}\r\n            </TranslationConsumer>\r\n          );\r\n    }\r\n\r\n    handleSave = () => {\r\n        try {\r\n            let modWebPortalUser = this.fillDetails(); \r\n            this.setState({ saveEnabled: false });\r\n            if (this.validateSave(modWebPortalUser)) {\r\n                this.state.webPortalUser.UserName === \"\"\r\n                ? this.createWebPortalUser(modWebPortalUser)\r\n                : this.updateWebPortalUser(modWebPortalUser);\r\n            } else this.setState({ saveEnabled: true });\r\n        } catch (error) {\r\n            console.log(\"WebPortalUserMapDetailsComposite:Error occured on handleSave\",error);\r\n        }\r\n    }\r\n\r\n  fillDetails() {\r\n      try {\r\n        let modWebPortalUser = lodash.cloneDeep(this.state.modWebPortalUser);\r\n        let Entities = [];\r\n          modWebPortalUser.WebPortalUserEntityItems.forEach(i => {\r\n            let EntityData = {\r\n                EntityType: i.EntityType === undefined ? i.Entity :i.EntityType,\r\n                Code: i.Code,\r\n                ShareholderCode:i.ShareholderCode\r\n            }\r\n            Entities.push(EntityData);\r\n        });\r\n        modWebPortalUser.WebPortalUserEntityItems = Entities;\r\n        \r\n            this.setState({ modWebPortalUser });\r\n            return modWebPortalUser;\r\n        }catch (error) {\r\n            console.log(\r\n              \"WebPortalUserMapDetailsComposite:Error occured on fillDetails\",\r\n              error\r\n            );\r\n          }\r\n    }\r\n\r\n    validateSave(modWebPortalUser) {\r\n        const validationErrors = { ...this.state.validationErrors };\r\n\r\n        Object.keys(webPortalUserValidationDef).forEach(function (key) {\r\n            if (modWebPortalUser[key] !== undefined)\r\n              validationErrors[key] = Utilities.validateField(\r\n                webPortalUserValidationDef[key],\r\n                modWebPortalUser[key]\r\n              );\r\n        });\r\n        \r\n      this.setState({ validationErrors });\r\n      \r\n      let notification = {\r\n        messageType: \"critical\",\r\n        message: \"WebPortaUserMap_SavedStatus\",\r\n        messageResultDetails: [],\r\n      };\r\n\r\n      if (modWebPortalUser.WebPortalUserEntityItems.length === 0) {\r\n        notification.messageResultDetails.push({\r\n          keyFields: [\"WebPortal_UserName\"],\r\n          keyValues: [modWebPortalUser.UserName],\r\n          isSuccess: false,\r\n          errorMessage: \"ASSOCIATED_ENTITY_ITEMS_EMPTY_X\",\r\n        });\r\n      }\r\n\r\n        let returnValue = Object.values(validationErrors).every(function (value) {\r\n            return value === \"\";\r\n          });\r\n    \r\n          if (notification.messageResultDetails.length > 0) {\r\n            this.props.onSaved(this.state.modWebPortalUser, \"update\", notification);\r\n            return false;\r\n          }\r\n          return returnValue;\r\n    }\r\n\r\n    createWebPortalUser(modWebPortalUser) {\r\n        let obj = {\r\n            Entity: modWebPortalUser,\r\n          };\r\n        let notification = {\r\n            messageType: \"critical\",\r\n            message: \"WebPortaUserMap_SavedStatus\",\r\n            messageResultDetails: [\r\n              {\r\n                keyFields: [\"WebPortal_UserName\"],\r\n                keyValues: [modWebPortalUser.UserName],\r\n                isSuccess: false,\r\n                errorMessage: \"\",\r\n              },\r\n            ],\r\n        };\r\n        \r\n        axios(\r\n            RestAPIs.CreateWebPortalUser,\r\n            Utilities.getAuthenticationObjectforPost(\r\n              obj,\r\n              this.props.tokenDetails.tokenInfo\r\n            )\r\n          )\r\n            .then((response) => {\r\n              let result = response.data;\r\n              notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n              notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n              if (result.IsSuccess === true) {\r\n                this.setState(\r\n                  {\r\n                    saveEnabled: Utilities.isInFunction(\r\n                      this.props.userDetails.EntityResult.FunctionsList,\r\n                      functionGroups.modify,\r\n                      fnWebPortalUserMap\r\n                    ),\r\n                  },\r\n                  () => this.getWebPortalUser({ WebPortal_UserName: modWebPortalUser.UserName })\r\n                );\r\n              } else {\r\n                notification.messageResultDetails[0].errorMessage =\r\n                  result.ErrorList[0];\r\n                this.setState({\r\n                  saveEnabled: Utilities.isInFunction(\r\n                    this.props.userDetails.EntityResult.FunctionsList,\r\n                    functionGroups.add,\r\n                    fnWebPortalUserMap\r\n                  ),\r\n                });\r\n                console.log(\"Error in createWebPortalUser:\", result.ErrorList);\r\n              }\r\n              this.props.onSaved(this.state.modWebPortalUser, \"add\", notification);\r\n            })\r\n            .catch((error) => {\r\n              this.setState({\r\n                saveEnabled: Utilities.isInFunction(\r\n                  this.props.userDetails.EntityResult.FunctionsList,\r\n                  functionGroups.add,\r\n                  fnWebPortalUserMap\r\n                ),\r\n              });\r\n              notification.messageResultDetails[0].errorMessage = error;\r\n              this.props.onSaved(this.state.modWebPortalUser, \"add\", notification);\r\n            });\r\n    }\r\n\r\n  updateWebPortalUser(modWebPortalUser) {\r\n    let obj = {\r\n      Entity: modWebPortalUser,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"WebPortaUserMap_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"WebPortal_UserName\"],\r\n          keyValues: [modWebPortalUser.UserName],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.UpdateWebPortalUser,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnWebPortalUserMap\r\n              ),\r\n            },\r\n            () => this.getWebPortalUser({ WebPortal_UserName: modWebPortalUser.UserName})\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnWebPortalUserMap\r\n            ),\r\n          });\r\n          console.log(\"Error in update updateWebPortalUser:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(this.state.modWebPortalUser, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnWebPortalUserMap\r\n          ),\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modWebPortalUser, \"modify\", notification);\r\n      });\r\n    }\r\n\r\n    render() {\r\n        const listOptions = {\r\n            securityUsers: this.state.securityUsers,\r\n            availableEntities: this.state.availableEntities,\r\n            selectedAvailableEntities: this.state.selectedAvailableEntites,\r\n            selectedAssociatedEntities:this.state.selectedAssociatedEntities\r\n        }\r\n        const popUpContents = [];\r\n        \r\n        return this.state.isReadyToRender ? (\r\n            <div>\r\n              <ErrorBoundary>\r\n                <TMDetailsHeader\r\n                  entityCode={this.state.webPortalUser.UserName}\r\n                  newEntityName=\"WebPortalUserAssociation\"\r\n                  popUpContents={popUpContents}\r\n                ></TMDetailsHeader>\r\n              </ErrorBoundary>\r\n              <ErrorBoundary>\r\n                <WebPortalUserMapDetails\r\n                  webPortalUser={this.state.webPortalUser}\r\n                  modWebPortalUser={this.state.modWebPortalUser}\r\n                  listOptions={listOptions}\r\n                  validationErrors={this.state.validationErrors}\r\n                  onFieldChange={this.handleChange}\r\n                  onActiveStatusChange={this.handleActiveStatusChange}\r\n                  onAllTerminalsChange={this.handleAllTerminalsChange}\r\n                  isEnterpriseNode={\r\n                    this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                  }\r\n                  attributeValidationErrors={this.state.attributeValidationErrors}\r\n                  selectedAttributeList={this.state.selectedAttributeList}\r\n                        handleCellDataEdit={this.handleCellDataEdit}\r\n                        userChange={this.handleUserChange}\r\n                        handleAvailableEntitySelection={this.handleAvailableEntitySelection}\r\n                        handleAssociatedEntitySelection={this.handleAssociatedEntitySelection}\r\n                        handleEntityAssociation={this.handleEntityAssociation}\r\n                handleEntityDisassociation={this.handleEntityDisassociation}\r\n                pageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                ></WebPortalUserMapDetails>\r\n              </ErrorBoundary>\r\n              <ErrorBoundary>\r\n                <TMDetailsUserActions\r\n                  handleBack={this.props.onBack}\r\n                  handleSave={this.handleSave}\r\n                  handleReset={this.handleReset}\r\n                  saveEnabled={this.state.saveEnabled}\r\n                ></TMDetailsUserActions>\r\n                </ErrorBoundary>\r\n                {this.state.entityDisassociationPopUp ? this.confirmEntityDisassociation() : null}\r\n            </div>\r\n          ) : (\r\n            <LoadingPage message=\"Loading\"></LoadingPage>\r\n          );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      userDetails: state.getUserDetails.userDetails,\r\n      tokenDetails: state.getUserDetails.TokenAuth,\r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps)(WebPortalUserMapDetailsComposite);\r\n  \r\n  WebPortalUserMapDetailsComposite.propTypes = {\r\n    selectedRow: PropTypes.object.isRequired,\r\n    onBack: PropTypes.func.isRequired,\r\n    onSaved: PropTypes.func.isRequired,\r\n  };\r\n  ","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\n\r\nWebPortalUserMapSummaryComposite.propTypes = {\r\n  tableData: PropTypes.array.isRequired,\r\n  columnDetails: PropTypes.array.isRequired,\r\n  pageSize: PropTypes.number,\r\n  selectedItems: PropTypes.array.isRequired,\r\n  onSelectionChange: PropTypes.func.isRequired,\r\n  onRowClick: PropTypes.func.isRequired,\r\n  fillPage: PropTypes.bool,\r\n  toggleExpand: PropTypes.func.isRequired,\r\n  expandedRows: PropTypes.array.isRequired,\r\n}\r\n\r\nexport function WebPortalUserMapSummaryComposite({ \r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  selectedItems,\r\n  onSelectionChange,\r\n  onRowClick,\r\n  toggleExpand,\r\n  expandedRows\r\n}) {\r\n  const [t] = useTranslation();\r\n  const expanderTemplate = (data) => {\r\n    try {\r\n      const open = expandedRows.findIndex(x => x.WebPortal_UserName === data.rowData.WebPortal_UserName) >= 0 ? true : false;\r\n    return (\r\n      <div onClick={() => toggleExpand(data.rowData, open)} className=\"compartmentIcon gridButtonFontColor\">\r\n        <ErrorBoundary>\r\n          <Icon root=\"common\" name={open ? \"slidercontrols-minus\" : \"ellipsis-horizontal\"} className=\"margin_l10\" />\r\n        </ErrorBoundary>\r\n        </div>\r\n    );\r\n    } catch (error) {\r\n      console.log(\"WebPortalUserMapSummaryComposite:Error occured on expanderTemplate\", error);\r\n    }\r\n  };\r\n  \r\n  function rowExpansionTemplate(data) {\r\n    return Array.isArray(data.EntityList) &&\r\n      data.EntityList.length > 0 ? (\r\n        <div className=\"ChildGridViewAllShipmentLoadingDetails secondarytable\">\r\n          <ErrorBoundary>\r\n            <DataTable\r\n                data={data.EntityList}\r\n          >\r\n             <DataTable.Column\r\n                        className=\"compColHeight\"\r\n                        key=\"Code\"\r\n                        field=\"Code\"\r\n                        header={t(\"Common_Code\")}\r\n                      ></DataTable.Column>\r\n                        <DataTable.Column\r\n                      className=\"compColHeight\"\r\n                      field=\"Shareholder\"\r\n                      key=\"Shareholder\"\r\n                      header={t(\"Shareholder\")}\r\n                        />\r\n            </DataTable>\r\n            </ErrorBoundary>\r\n        </div>\r\n    ) : ( \"\"\r\n    );\r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n          <div className={\"projectMasterList\"}>\r\n            <DataTable\r\n               data={tableData}\r\n              //  reorderableColumns={true}\r\n              //  resizableColumns={true}\r\n               onCellClick={(data) =>\r\n                 onRowClick !== undefined ? onRowClick(data) : {}\r\n               }\r\n               selectionMode={\"multiple\"}\r\n               selection={selectedItems}\r\n               onSelectionChange={(e) => onSelectionChange(e)}\r\n               search={true}\r\n               searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n              rows={pageSize}\r\n          rowExpansionTemplate={rowExpansionTemplate}\r\n          expandedRows={expandedRows}\r\n            >\r\n              <DataTable.ActionBar />\r\n              {columnDetails.map(function (columnDetail) {\r\n              return (\r\n                <DataTable.Column\r\n                  initialWidth={columnDetail.Width}\r\n                  key={columnDetail.Name}\r\n                  field={columnDetail.Name}\r\n                  header={t(columnDetail.Name)}\r\n                  sortable={true}\r\n                  renderer={(cellData) => cellData.value}\r\n                />\r\n              );\r\n              })}\r\n              <DataTable.Column\r\n                      className=\"expandedColumn\"\r\n                      initialWidth=\"50px\"\r\n            renderer={expanderTemplate}\r\n                    />\r\n                {Array.isArray(tableData) && tableData.length > pageSize ? (\r\n              <DataTable.Pagination />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n             </DataTable>\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { functionGroups, fnWebPortalUserMap } from \"../../../JS/FunctionGroups\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { WebPortalUserMapSummaryComposite } from \"../Summary/WebPortalUserMapSummaryComposite\";\r\nimport WebPortalUserMapDetailsComposite from \"../Details/WebPortalUserMapDetailsComposite\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\n\r\nclass WebPortalUserMapComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    data: {},\r\n    expandedRows: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnWebPortalUserMap\r\n      );\r\n      this.setState({\r\n        operationsVisibilty,\r\n      });\r\n      this.getWebportalUserList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"WebPortalUserMapComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getWebportalUserList() {\r\n    axios(\r\n      RestAPIs.GetAllWebPortalUser,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            result.EntityResult.Table !== undefined &&\r\n            result.EntityResult.Table2 !== undefined &&\r\n            result.EntityResult.Table !== null &&\r\n            result.EntityResult.Table2 !== null &&\r\n            Array.isArray(result.EntityResult.Table) &&\r\n            Array.isArray(result.EntityResult.Table2)\r\n          ) {\r\n            let entityList = result.EntityResult.Table2;\r\n            result.EntityResult.Table.forEach((items) => {\r\n              let entityitem = entityList.filter((entity) => {\r\n                return entity.UserName === items.WebPortal_UserName;\r\n              });\r\n              items[\"EntityList\"] = entityitem;\r\n            });\r\n          }\r\n\r\n          this.setState({ data: result.EntityResult, isReadyToRender: true });\r\n        } else {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error in getWebportalUserList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: [], isReadyToRender: true });\r\n        console.log(\"Error while getWebportalUserList List:\", error);\r\n      });\r\n  }\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: {},\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"WebPortalUserMapComposite:Error occured on handleAdd\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      if (notification.messageType === \"success\") {\r\n         operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnWebPortalUserMap\r\n        );\r\n\t      operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnWebPortalUserMap\r\n        );\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            WebPortal_UserName: data.UserName,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"WebPortalUserMapComposite:Error occured on savedEvent\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnWebPortalUserMap\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        expandedRows: [],\r\n        isReadyToRender: false,\r\n      });\r\n      this.getWebportalUserList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"WebPortalUserMapComposite:Error occured on Back click\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      if (item.field !== undefined) {\r\n        var { operationsVisibilty } = { ...this.state };\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnWebPortalUserMap\r\n        );\r\n        operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnWebPortalUserMap\r\n        );\r\n        this.setState({\r\n          isDetails: true,\r\n          selectedRow: item.rowData,\r\n          selectedItems: [item.rowData],\r\n          operationsVisibilty,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"WebPortalUserMapComposite:Error occured on Row click\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleSelection = (items) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete =\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnWebPortalUserMap\r\n        );\r\n      this.setState({ selectedItems: items, operationsVisibilty });\r\n    } catch (error) {\r\n      console.log(\r\n        \"WebPortalUserMapComposite:Error occured on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDelete = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n      var deleteUsers = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        var userName = this.state.selectedItems[i][\"WebPortal_UserName\"];\r\n        deleteUsers.push(userName);\r\n      }\r\n      let obj = {\r\n        Entity: deleteUsers,\r\n      };\r\n      axios(\r\n        RestAPIs.DeleteWebPortalUser,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          var isRefreshDataRequire = result.isSuccess;\r\n\r\n          if (\r\n            result.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            var failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n          var notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"WebPortaUserMap_DeletionStatus\",\r\n            [\"ShareHolderCode\"]\r\n          );\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({ isReadyToRender: false });\r\n            this.getWebportalUserList();\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n            });\r\n          } else {\r\n            operationsVisibilty.delete = true;\r\n            this.setState({ operationsVisibilty });\r\n          }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0)\r\n              messageResult.keyFields[0] = \"WebPortal_UserName\";\r\n          });\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error occured while deleting:\" + error);\r\n          var { operationsVisibilty } = { ...this.state };\r\n          operationsVisibilty.delete = true;\r\n          this.setState({ operationsVisibilty });\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"WebPortalUserMapComposite:Error occured on handleDelet\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  toggleExpand = (data, open) => {\r\n    try {\r\n      let expandedRows = this.state.expandedRows;\r\n      let expandedRowIndex = expandedRows.findIndex(\r\n        (item) => item.WebPortal_UserName === data.WebPortal_UserName\r\n      );\r\n      if (open) {\r\n        expandedRows.splice(expandedRowIndex, 1);\r\n      } else {\r\n        expandedRows.push(data);\r\n      }\r\n      this.setState({ expandedRows });\r\n    } catch (error) {\r\n      console.log(\r\n        \"WebPortalUserMapComposite:Error occured on toggleExpand\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            breadcrumbItem={this.props.activeItem}\r\n            shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n            onDelete={this.handleDelete}\r\n            onAdd={this.handleAdd}\r\n            shrVisible={false}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isDetails === true ? (\r\n          <ErrorBoundary>\r\n            <WebPortalUserMapDetailsComposite\r\n              selectedRow={this.state.selectedRow}\r\n              onBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n            ></WebPortalUserMapDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isReadyToRender ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <WebPortalUserMapSummaryComposite\r\n                tableData={this.state.data.Table}\r\n                columnDetails={this.state.data.Column}\r\n                pageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                selectedItems={this.state.selectedItems}\r\n                onRowClick={this.handleRowClick}\r\n                onSelectionChange={this.handleSelection}\r\n                expandedRows={this.state.expandedRows}\r\n                toggleExpand={this.toggleExpand}\r\n              ></WebPortalUserMapSummaryComposite>\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : (\r\n          <LoadingPage message=\"Loading\"></LoadingPage>\r\n        )}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(WebPortalUserMapComposite);\r\n\r\nWebPortalUserMapComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","statusRenderer","cellData","data","WebPortalUserMapDetails","webPortalUser","modWebPortalUser","validationErrors","onFieldChange","listOptions","userChange","handleAvailableEntitySelection","handleAssociatedEntitySelection","handleEntityAssociation","handleEntityDisassociation","pageSize","UserName","fluid","label","securityUsers","indicator","error","reserveSpace","search","noResultsMessage","Input","UserPrincipal","RoleName","availableEntities","WebPortalUserEntityItems","DataTable","selectionMode","selection","selectedAvailableEntities","onSelectionChange","rows","searchPlaceholder","Column","field","header","editFieldType","Array","isArray","Pagination","textAlign","icon","iconPosition","Constants","SHAREHOLDER","selectedAssociatedEntities","editable","renderer","WebPortalUserMapDetailsComposite","Component","constructor","arguments","state","lodash","emptyWebPortalUser","webPortalUserValidationDef","isReadyToRender","saveEnabled","selectedAvailableEntites","entityDisassociationPopUp","handleChange","propertyName","this","setState","console","log","handleReset","Object","keys","forEach","key","selectedCompRow","getEntityForPortalUser","handleUserChange","axios","RestAPIs","props","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","Table","Table1","ErrorList","e","obj","push","filter","com","Code","EntityDisassociation","index","cindex","confirmEntityDisassociation","handleSave","fillDetails","validateSave","createWebPortalUser","updateWebPortalUser","componentDidMount","userDetails","IsArchived","getWebPortalUser","selectedRow","GetSecurityUsers","componentWillReceiveProps","nextProps","WebPortal_UserName","FunctionsList","functionGroups","modify","fnWebPortalUserMap","Entities","i","EntityData","EntityType","Entity","ShareholderCode","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","returnValue","values","every","onSaved","catch","render","TMDetailsHeader","entityCode","newEntityName","popUpContents","onActiveStatusChange","handleActiveStatusChange","onAllTerminalsChange","handleAllTerminalsChange","isEnterpriseNode","IsEnterpriseNode","attributeValidationErrors","selectedAttributeList","handleCellDataEdit","PageAttibutes","WebPortalListPageSize","TMDetailsUserActions","handleBack","onBack","LoadingPage","connect","getUserDetails","TokenAuth","WebPortalUserMapSummaryComposite","tableData","columnDetails","selectedItems","onRowClick","toggleExpand","expandedRows","useTranslation","onCellClick","rowExpansionTemplate","EntityList","ActionBar","columnDetail","initialWidth","Width","Name","sortable","findIndex","x","rowData","WebPortalUserMapComposite","isDetails","isDetailsModified","handleAdd","savedEvent","saveType","remove","toast","NotifyEvent","notificationMessage","autoClose","getWebportalUserList","handleRowClick","handleSelection","items","handleDelete","deleteUsers","userName","isRefreshDataRequire","ResultDataList","res","messageResult","expandedRowIndex","splice","Table2","entityList","entityitem","entity","activeItem","ShareholderList","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","margin","List","view","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration"],"sourceRoot":""}