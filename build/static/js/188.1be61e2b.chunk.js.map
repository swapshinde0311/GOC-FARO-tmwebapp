{"version":3,"file":"static/js/188.1be61e2b.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Common/WijmoGrid.jsx","Components/Composite/Common/WijmoGridComposite.jsx","Components/UIBase/Details/RoleDetails.jsx","Components/Composite/Details/RoleDetailsComposite.jsx","Components/Composite/Summary/RoleSummaryComposite.jsx","Components/Composite/Entity/RolesComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","JS/FunctionGroups.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as wjCore from \"@grapecity/wijmo\";\r\nimport * as wjGrid from \"@grapecity/wijmo.grid\";\r\nimport {\r\n  FlexGrid,\r\n  FlexGridColumn,\r\n  FlexGridCellTemplate,\r\n} from \"@grapecity/wijmo.react.grid\";\r\nimport { FlexGridFilter } from \"@grapecity/wijmo.react.grid.filter\";\r\nimport { Operator } from \"@grapecity/wijmo.grid.filter\";\r\nimport { FlexGridSearch } from \"@grapecity/wijmo.react.grid.search\";\r\nimport { CollectionView } from \"@grapecity/wijmo\";\r\nimport { CollectionViewNavigator, ListBox } from \"@grapecity/wijmo.react.input\";\r\nimport { Selector } from \"@grapecity/wijmo.grid.selector\";\r\nimport { HeadersVisibility } from \"@grapecity/wijmo.grid\";\r\nimport { showPopup, hidePopup, PopupPosition } from \"@grapecity/wijmo\";\r\nimport * as wjcGridXlsx from \"@grapecity/wijmo.grid.xlsx\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport { GroupPanel } from \"@grapecity/wijmo.react.grid.grouppanel\";\r\nimport { Button, Card, Popup } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as loadash from \"lodash\";\r\nimport \"@grapecity/wijmo.touch\";\r\n\r\nconst WijmoGrid = (props) => {\r\n  const [flex, setFlex] = useState(null);\r\n  const [translator] = useTranslation();\r\n  const _getData = (pageLength) => {\r\n    return new CollectionView(props.sourceData, {\r\n      pageSize: pageLength,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState(_getData(props.rowsPerPage));\r\n  const theGrid = React.createRef();\r\n  const theSearch = React.createRef();\r\n  const gridFilter = React.createRef();\r\n  const pagingComponent = React.createRef();\r\n  const colPicker = React.useRef();\r\n\r\n  // to keep track of selected rows\r\n  const selectedRows = React.useRef(props.selectionRequired ? [] : null);\r\n\r\n  // to initialize grid checkbox selection\r\n  let selector = null;\r\n\r\n  //Initialize grid\r\n  const gridInitialized = (grid) => {\r\n    try {\r\n      // localize grid filter\r\n      customizeFilterConditions();\r\n\r\n      if (props.onRowClick) {\r\n        // add row click event handler\r\n        grid.addEventListener(grid.hostElement, \"click\", (e) => {\r\n          let ht = grid.hitTest(e);\r\n          // condition to check if cell is not a grouped cell and a data cell\r\n          if (\r\n            ht.target.closest(\".wj-cell\") &&\r\n            ![...ht.target.closest(\".wj-cell\").classList].includes(\r\n              \"wj-group\"\r\n            ) &&\r\n            ht.cellType === wjGrid.CellType.Cell\r\n          ) {\r\n            // fetch row data\r\n            const rowData = grid.rows[ht.row].dataItem;\r\n            props.onRowClick(rowData);\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      grid.select(-1, -1);\r\n\r\n      setFlex(grid);\r\n      if (props.selectionRequired) {\r\n        // enable checkbox selection\r\n        selector = new Selector(grid, {\r\n          itemChecked: (s, e) => {\r\n            // if only single checkbox selection is required\r\n            if (props.singleSelection) {\r\n              grid.rows\r\n                .filter((row) => {\r\n                  return (\r\n                    row.isSelected &&\r\n                    selectedRows.current.filter((item) =>\r\n                      loadash.isEqual(item, row.dataItem)\r\n                    ).length === 1\r\n                  );\r\n                })\r\n                .forEach((row) => {\r\n                  row.isSelected = false;\r\n                });\r\n            }\r\n\r\n            // pass row data as parameter to checkbox selection handler\r\n            props.onSelectionHandle(\r\n              grid.rows\r\n                .filter((r) => r.isSelected)\r\n                .map((selectedRow) => selectedRow.dataItem)\r\n            );\r\n          },\r\n          // if only single checkbox selection is required\r\n          showCheckAll: !props.singleSelection,\r\n        });\r\n\r\n        let theGrid = selector.column.grid;\r\n        selector.column = theGrid.rowHeaders.columns[0];\r\n        theGrid.headersVisibility = HeadersVisibility.All;\r\n        theGrid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in gridInitialized: \" + error);\r\n    }\r\n  };\r\n\r\n  //Update grid when data changes\r\n  useEffect(() => {\r\n    try {\r\n      if (theGrid != null) {\r\n        //Connect search to the grid\r\n        let grid = theGrid.current.control;\r\n        let search = theSearch.current.control;\r\n        search.grid = grid;\r\n      }\r\n\r\n      setData(_getData(props.rowsPerPage));\r\n    } catch (error) {\r\n      console.log(\"Error in grid update:\", error);\r\n    }\r\n  }, [props.sourceData]);\r\n\r\n  // Pre-select grid rows based on selectedItems props\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && props.selectionRequired) {\r\n        // clear the selectedRows array\r\n        selectedRows.current.length = 0;\r\n        // add selectedItems array items to selectedRows\r\n        selectedRows.current.push(...props.selectedItems);\r\n\r\n        flex.rows.forEach((row) => {\r\n          if (\r\n            props.selectedItems.filter((item) =>\r\n              loadash.isEqual(item, row.dataItem)\r\n            ).length === 1\r\n          ) {\r\n            // checks the row checkbox\r\n            row.isSelected = true;\r\n          } else {\r\n            // unchecks the row checkbox\r\n            row.isSelected = false;\r\n          }\r\n        });\r\n\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in pre-selecting rows:\", error);\r\n    }\r\n  }, [props.selectedItems]);\r\n\r\n  //Load the state of grid\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(props.parentComponent + \"GridState\") &&\r\n        localStorage.getItem(props.parentComponent + \"GridState\") !== \"null\" &&\r\n        flex\r\n      ) {\r\n        // restore grid settings\r\n        let gridState = JSON.parse(\r\n          localStorage.getItem(props.parentComponent + \"GridState\")\r\n        );\r\n        let newFlex = flex;\r\n\r\n        // restore column picker settings\r\n        newFlex.columns.forEach((col) => {\r\n          let matchedCol = gridState.columns.filter(\r\n            (colSetting) => colSetting.binding === col.binding\r\n          );\r\n          col.visible =\r\n            matchedCol.length > 0 ? matchedCol[0].visible : col.visible;\r\n        });\r\n\r\n        // restore filter settings\r\n        gridFilter.current.control.filterDefinition =\r\n          gridState.filterDefinition;\r\n\r\n        // restore sort settings\r\n        newFlex.collectionView.deferUpdate(() => {\r\n          newFlex.collectionView.sortDescriptions.clear();\r\n          for (let i = 0; i < gridState.sortDescriptions.length; i++) {\r\n            let sortDesc = gridState.sortDescriptions[i];\r\n            newFlex.collectionView.sortDescriptions.push(\r\n              new wjCore.SortDescription(sortDesc.property, sortDesc.ascending)\r\n            );\r\n          }\r\n        });\r\n\r\n        // restore grouping settings\r\n        for (let i = 0; i < gridState.groupDescriptions.length; i++) {\r\n          newFlex.collectionView.groupDescriptions.push(\r\n            new wjCore.PropertyGroupDescription(gridState.groupDescriptions[i])\r\n          );\r\n          newFlex.columns.filter(\r\n            (col) => col.binding === gridState.groupDescriptions[i]\r\n          )[0].visible = false;\r\n        }\r\n\r\n        if (\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") &&\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") !== \"null\"\r\n        ) {\r\n          let gridSessionState = JSON.parse(\r\n            sessionStorage.getItem(props.parentComponent + \"GridState\")\r\n          );\r\n          // restore paging settings\r\n          newFlex.collectionView.moveToPage(\r\n            newFlex.collectionView.pageCount - 1 >= gridSessionState.pageIndex\r\n              ? gridSessionState.pageIndex\r\n              : newFlex.collectionView.pageCount - 1\r\n          );\r\n\r\n          // restore search settings\r\n          if (theSearch) {\r\n            theSearch.current.control.text = gridSessionState.searchText;\r\n          }\r\n        }\r\n\r\n        setFlex(newFlex);\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in restoring local storage settings: \", error);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set Column Picker Properties\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && colPicker.current && props.columnPickerRequired) {\r\n        colPicker.current.itemsSource = flex.columns;\r\n        colPicker.current.checkedMemberPath = \"visible\";\r\n        colPicker.current.displayMemberPath = \"header\";\r\n        colPicker.current.lostFocus.addHandler(() => {\r\n          hidePopup(colPicker.current.hostElement);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in initializing column picker properties:\", error);\r\n    }\r\n  }, [colPicker.current]);\r\n\r\n  useEffect(() => {\r\n    // remove column picker pop-up on component unmount\r\n    return () => {\r\n      if (props.columnPickerRequired && colPicker.current) {\r\n        hidePopup(colPicker.current.hostElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // export grid data to excel\r\n  const exportExcel = () => {\r\n    try {\r\n      let gridFlex = flex;\r\n      //to download all rows from all pages\r\n      gridFlex.itemsSource.pageSize = props.sourceData.length;\r\n      setFlex(gridFlex);\r\n      wjcGridXlsx.FlexGridXlsxConverter.saveAsync(\r\n        flex,\r\n        {\r\n          includeColumnHeaders: true,\r\n          includeCellStyles: false,\r\n          formatItem: null,\r\n        },\r\n        props.exportFileName\r\n      );\r\n\r\n      //to restore paging\r\n      gridFlex.itemsSource.pageSize = props.rowsPerPage;\r\n      setFlex(gridFlex);\r\n    } catch (error) {\r\n      console.log(\"Error in export grid to excel:\", error);\r\n    }\r\n  };\r\n\r\n  const terminalPopOver = (terminalCodes) => {\r\n    if (terminalCodes.split(\",\").length > props.terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={terminalCodes.split(\",\").length}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return terminalCodes;\r\n    }\r\n  };\r\n\r\n  const displayValues = (value, columnDetail) => {\r\n    if (columnDetail !== undefined && columnDetail !== null) {\r\n      if (typeof value === \"boolean\" || columnDetail.Name === \"Active\") {\r\n        if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n        else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n      } else if (value === \"\" || value === null || value === undefined) {\r\n        return value;\r\n      } else if (\r\n        (columnDetail.Name === \"TerminalCodes\" ||\r\n          columnDetail.PopOver === \"1\") &&\r\n        value !== null\r\n      ) {\r\n        return terminalPopOver(value);\r\n      }\r\n      // var columnType = columnDetails.find(function (detail) {\r\n      //   if (detail.Name === field) {\r\n      //     return detail;\r\n      //   }\r\n      // });\r\n      else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"DateTime\"\r\n      ) {\r\n        return (\r\n          new Date(value).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(value).toLocaleTimeString()\r\n        );\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Date\"\r\n      ) {\r\n        return new Date(value).toLocaleDateString();\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Time\"\r\n      ) {\r\n        return new Date(value).toLocaleTimeString();\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  //Initialize Column Picker\r\n  const initializedPicker = (picker) => {\r\n    if (props.columnPickerRequired) {\r\n      colPicker.current = picker;\r\n    }\r\n  };\r\n\r\n  // Column Picker Handler\r\n  const colPickerClickHandler = (event) => {\r\n    try {\r\n      let host = colPicker.current.hostElement;\r\n      if (!host.offsetHeight) {\r\n        showPopup(host, event.target, PopupPosition.Below, true, false);\r\n        colPicker.current.focus();\r\n      } else {\r\n        hidePopup(host, true, true);\r\n        flex.focus();\r\n      }\r\n\r\n      colPicker.current.focus();\r\n      event.preventDefault();\r\n    } catch (error) {\r\n      console.log(\"Error in Column Picker click event:\", error);\r\n    }\r\n  };\r\n\r\n  const saveGridState = () => {\r\n    try {\r\n      if (flex && gridFilter.current) {\r\n        // grid column, filter, sort and grouping settings\r\n        let gridState = {\r\n          columns: flex.columns.map((col) => {\r\n            return {\r\n              binding: col.binding,\r\n              visible: col.visible,\r\n            };\r\n          }),\r\n          filterDefinition: gridFilter.current.control.filterDefinition,\r\n          sortDescriptions: flex.collectionView.sortDescriptions.map(\r\n            (sortDesc) => {\r\n              return {\r\n                property: sortDesc.property,\r\n                ascending: sortDesc.ascending,\r\n              };\r\n            }\r\n          ),\r\n          groupDescriptions: flex.collectionView.groupDescriptions.map(\r\n            (group) => {\r\n              if (group.propertyName) {\r\n                return group.propertyName;\r\n              }\r\n\r\n              return null;\r\n            }\r\n          ),\r\n        };\r\n\r\n        // add class to grouped checkbox div element\r\n        if (\r\n          flex.collectionView.groupDescriptions &&\r\n          flex.collectionView.groupDescriptions.length > 0\r\n        ) {\r\n          let groupedCheckboxes = [\r\n            ...document.getElementsByClassName(\"wj-column-selector-group\"),\r\n          ];\r\n          groupedCheckboxes.forEach((chkbx) => {\r\n            chkbx.parentNode.parentNode.classList.add(\"wj-grouped-checkbox\");\r\n          });\r\n        }\r\n\r\n        // grid paging and search settings\r\n        let sessionState = {\r\n          pageIndex: flex.collectionView.pageIndex,\r\n          searchText: theSearch.current.control.text,\r\n        };\r\n\r\n        localStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(gridState)\r\n        );\r\n        sessionStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(sessionState)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in saving grid state\");\r\n    }\r\n  };\r\n\r\n  // customize grid filter text and dropdowns\r\n  const customizeFilterConditions = () => {\r\n    // localize the FlexGrid filter\r\n    let filter = wjCore.culture.FlexGridFilter,\r\n      operator = Operator;\r\n    wjCore.culture.FlexGridFilter.header = translator(\"WijmoGridFilterHeader\");\r\n    wjCore.culture.FlexGridFilter.ascending =\r\n      \"\\u2191 \" + translator(\"WijmoGridFilterAscending\");\r\n    wjCore.culture.FlexGridFilter.descending =\r\n      \"\\u2193 \" + translator(\"WijmoGridFilterDescending\");\r\n    wjCore.culture.FlexGridFilter.apply = translator(\"RoleAdminEdit_Apply\");\r\n    wjCore.culture.FlexGridFilter.clear = translator(\"OrderCreate_btnClear\");\r\n    wjCore.culture.FlexGridFilter.conditions = translator(\r\n      \"WijmoGridFilterCondition\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.values = translator(\"WijmoGridFilterValue\");\r\n    wjCore.culture.FlexGridFilter.search = translator(\r\n      \"LoadingDetailsView_SearchGrid\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.selectAll = translator(\r\n      \"WijmoGridFilterSelectAll\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.and = translator(\"WijmoGridFilterAnd\");\r\n    wjCore.culture.FlexGridFilter.or = translator(\"WijmoGridFilterOr\");\r\n    wjCore.culture.FlexGridFilter.cancel = translator(\"AccessCardInfo_Cancel\");\r\n    // wjCore.culture.FlexGridFilter.null = 'test';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.and = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.asc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dialog = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dsc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.edit = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op2 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.or = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.search = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val2 = '';\r\n\r\n    // localize FlexGrid filter operators\r\n    filter.stringOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterBeginsWith\"), op: operator.BW },\r\n      { name: translator(\"WijmoGridFilterEndsWith\"), op: operator.EW },\r\n      { name: translator(\"WijmoGridFilterContains\"), op: operator.CT },\r\n      { name: translator(\"WijmoGridFilterDoesNotContain\"), op: operator.NC },\r\n    ];\r\n    filter.numberOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterGreaterThan\"), op: operator.GT },\r\n      { name: translator(\"WijmoGridFilterLessThan\"), op: operator.LT },\r\n      {\r\n        name: translator(\"WijmoGridFilterGreaterThanOrEqual\"),\r\n        op: operator.GE,\r\n      },\r\n      { name: translator(\"WijmoGridFilterLessThanOrEqual\"), op: operator.LE },\r\n    ];\r\n    filter.dateOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterDateEarlierThan\"), op: operator.LT },\r\n      { name: translator(\"WijmoGridFilterDateLaterThan\"), op: operator.GT },\r\n    ];\r\n    filter.booleanOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n    ];\r\n  };\r\n\r\n  // set column width based on screen size\r\n  const getWidth = (columnDetails) => {\r\n    try {\r\n      const screenWidth = window.screen.width;\r\n      if (screenWidth < 1024) {\r\n        if (columnDetails.WidthPx && columnDetails.WidthPx !== \"\")\r\n          return parseInt(columnDetails.WidthPx);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in width:\", error);\r\n    }\r\n\r\n    return columnDetails.WidthPercentage.includes(\"*\")\r\n      ? columnDetails.WidthPercentage\r\n      : parseInt(columnDetails.WidthPercentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pl-1\">\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <React.Fragment>\r\n              <div className=\"row pl-0\">\r\n                <div className=\"col-10 col-sm-12 col-md-5 col-lg-6\">\r\n                  <FlexGridSearch\r\n                    class=\"ui single-input\"\r\n                    ref={theSearch}\r\n                    placeholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-10 col-sm-12 col-md-7 col-lg-6\">\r\n                  <div style={{ float: \"right\" }}>\r\n                    {props.columnPickerRequired ? (\r\n                      <Button\r\n                        id=\"colPicker\"\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        onClick={(event) => colPickerClickHandler(event)}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridColumnPicker\")}\r\n                        </div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          <Icon\r\n                            name=\"caret-down\"\r\n                            className=\"btnIcon\"\r\n                            size=\"small\"\r\n                          />\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.exportRequired ? (\r\n                      <Button\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        className=\"mt-3 mt-md-0\"\r\n                        onClick={exportExcel}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridExport\")}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            className=\"icon-Xls\"\r\n                            style={{\r\n                              fontSize: \"17px\",\r\n                              position: \"absolute\",\r\n                              top: \"3px\",\r\n                            }}\r\n                          ></span>\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tableScroll\">\r\n                {props.columnGroupingRequired ? (\r\n                  <GroupPanel\r\n                    className=\"group-panel\"\r\n                    grid={flex}\r\n                    placeholder={t(\"WijmoGridGroupPanelPlaceholder\")}\r\n                  />\r\n                ) : null}\r\n                <ErrorBoundary>\r\n                  <FlexGrid\r\n                    ref={theGrid}\r\n                    autoGenerateColumns={false}\r\n                    alternatingRowStep={0}\r\n                    autoRowHeights={true}\r\n                    headersVisibility=\"Column\"\r\n                    itemsSource={data}\r\n                    selectionMode={wjCore.asEnum(\"None\", wjGrid.SelectionMode)}\r\n                    initialized={gridInitialized}\r\n                    virtualizationThreshold={[0, 10000]}\r\n                    onUpdatedView={saveGridState}\r\n                  >\r\n                    <FlexGridFilter ref={gridFilter} />\r\n                    {props.columns.map((column) => {\r\n                      return (\r\n                        <FlexGridColumn\r\n                          header={t(column.Name)}\r\n                          key={column.Name}\r\n                          binding={column.Name}\r\n                          width={getWidth(column)}\r\n                          minWidth={100}\r\n                          isReadOnly={true}\r\n                          wordWrap={true}\r\n                          align=\"left\"\r\n                        >\r\n                          <FlexGridCellTemplate\r\n                            cellType=\"Cell\"\r\n                            template={(context) => {\r\n                              return (\r\n                                <span\r\n                                  style={\r\n                                    props.conditionalRowStyleCheck == null ||\r\n                                    !props.conditionalRowStyleCheck(\r\n                                      context.item\r\n                                    )\r\n                                      ? null\r\n                                      : { ...props.conditionalRowStyles }\r\n                                  }\r\n                                >\r\n                                  {displayValues(\r\n                                    context.item[column.Name],\r\n                                    column\r\n                                  )}\r\n                                </span>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FlexGridColumn>\r\n                      );\r\n                    })}\r\n                  </FlexGrid>\r\n                </ErrorBoundary>\r\n                {props.columnPickerRequired ? (\r\n                  <div className=\"column-picker-div\">\r\n                    <ListBox\r\n                      className=\"column-picker\"\r\n                      initialized={(picker) => initializedPicker(picker)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"row\">\r\n                <CollectionViewNavigator\r\n                  ref={pagingComponent}\r\n                  className=\"ml-auto mr-auto mt-3\"\r\n                  headerFormat={t(\"WijmoGridPagingTemplate\")}\r\n                  byPage={true}\r\n                  cv={data}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nWijmoGrid.propTypes = {\r\n  sourceData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  exportRequired: PropTypes.bool.isRequired,\r\n  exportFileName: PropTypes.string,\r\n  selectionRequired: PropTypes.bool,\r\n  columnPickerRequired: PropTypes.bool,\r\n  columnGroupingRequired: PropTypes.bool,\r\n  conditionalRowStyleCheck: PropTypes.func,\r\n  conditionalRowStyles: PropTypes.object,\r\n  rowsPerPage: PropTypes.number,\r\n  onSelectionHandle: PropTypes.func,\r\n  parentComponent: PropTypes.string.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  terminalsToShow: PropTypes.number,\r\n  singleSelection: PropTypes.bool,\r\n  selectedItems: PropTypes.array,\r\n};\r\n\r\nWijmoGrid.defaultProps = {\r\n  sourceData: [],\r\n  columns: [],\r\n  exportRequired: true,\r\n  exportFileName: \"Grid.xlsx\",\r\n  selectionRequired: false,\r\n  columnPickerRequired: false,\r\n  columnGroupingRequired: false,\r\n  rowsPerPage: 10,\r\n  terminalsToShow: 2,\r\n  singleSelection: false,\r\n  selectedItems: [],\r\n};\r\n\r\nexport default WijmoGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WijmoGrid from '../../UIBase/Common/WijmoGrid';\r\n\r\nconst WijmoGridComposite = (props) => {\r\n    return (\r\n        <WijmoGrid\r\n            sourceData={props.data}\r\n            columns={props.columns}\r\n            exportRequired={props.exportRequired}\r\n            exportFileName={props.exportFileName}\r\n            columnPickerRequired={props.columnPickerRequired}\r\n            selectionRequired={props.selectionRequired}\r\n            columnGroupingRequired={props.columnGroupingRequired}\r\n            conditionalRowStyleCheck={props.conditionalRowStyleCheck}\r\n            conditionalRowStyles={props.conditionalRowStyles}\r\n            rowsPerPage={props.rowsPerPage}\r\n            onSelectionHandle={props.onSelectionHandle}\r\n            onRowClick={props.onRowClick}\r\n            parentComponent={props.parentComponent}\r\n            terminalsToShow={props.terminalsToShow}\r\n            singleSelection={props.singleSelection}\r\n            selectedItems={props.selectedItems}\r\n        />\r\n    )\r\n}\r\n\r\nWijmoGridComposite.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n    exportRequired: PropTypes.bool.isRequired,\r\n    exportFileName: PropTypes.string,\r\n    selectionRequired: PropTypes.bool,\r\n    columnPickerRequired: PropTypes.bool,\r\n    columnGroupingRequired: PropTypes.bool,\r\n    conditionalRowStyleCheck: PropTypes.func,\r\n    conditionalRowStyles: PropTypes.object,\r\n    rowsPerPage: PropTypes.number,\r\n    onSelectionHandle: PropTypes.func,\r\n    parentComponent: PropTypes.string.isRequired,\r\n    onRowClick: PropTypes.func,\r\n    terminalsToShow: PropTypes.number,\r\n    singleSelection: PropTypes.bool,\r\n    selectedItems: PropTypes.array\r\n}\r\n\r\nexport default WijmoGridComposite;","import React from \"react\";\r\nimport { Select, Input, Checkbox, Button, Accordion } from \"@scuf/common\";\r\nimport { useTranslation, TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { getOptionsWithSelect } from \"../../../JS/functionalUtilities\";\r\n\r\nRoleDetails.propTypes = {\r\n  role: PropTypes.object.isRequired,\r\n  modRole: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onVisibilityChange: PropTypes.func.isRequired,\r\n  roleOptions: PropTypes.array.isRequired,\r\n  handleCopyRoleAccess: PropTypes.func.isRequired,\r\n  modMenuItems: PropTypes.array.isRequired,\r\n  modFunctionGroupItems: PropTypes.array.isRequired,\r\n  onCopyPermissionChange: PropTypes.func.isRequired,\r\n  copyPermissionFromRole: PropTypes.string.isRequired,\r\n  onFunctionGroupChange: PropTypes.func.isRequired,\r\n};\r\n\r\nRoleDetails.defaultProps = {\r\n  modMenuItems: [],\r\n  modFunctionGroupItems: [],\r\n};\r\n\r\nexport function RoleDetails({\r\n  role,\r\n  modRole,\r\n  validationErrors,\r\n  onFieldChange,\r\n  onVisibilityChange,\r\n  roleOptions,\r\n  handleCopyRoleAccess,\r\n  modMenuItems,\r\n  modFunctionGroupItems,\r\n  copyPermissionFromRole,\r\n  onCopyPermissionChange,\r\n  onFunctionGroupChange,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  const visibilityCheckbox = (data) => {\r\n    return (\r\n      <div className={data.rowData.IsModified ? \"isModifiedCell\" : \"\"}>\r\n        <Checkbox\r\n          checked={data.rowData.Visible === true ? true : false}\r\n          onChange={(value) => onVisibilityChange(value, data)}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const showMenuName = (cellData) => {\r\n    let names = cellData.rowData.Name.split(\">\");\r\n    return (\r\n      <div>\r\n        {names.map((item, index) => {\r\n          if (names.length > index + 1)\r\n            return <span style={{ color: \"#a0a0a0\" }}>{t(item) + \" > \"}</span>;\r\n          else return <span>{t(item)}</span>;\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const showMenuGroup = (cellData) => {\r\n    try {\r\n      let menu = cellData.rowData.MenuGroup;\r\n      return (\r\n        <div>\r\n          {menu.map((menuNames) => {\r\n            if (menuNames !== null) {\r\n              let menuGroup = menuNames.split(\">\");\r\n              return (\r\n                <div>\r\n                  {menuGroup.map((item, index) => {\r\n                    if (menuGroup.length > index + 1)\r\n                      return (\r\n                        <span style={{ color: \"#a0a0a0\" }}>\r\n                          {t(item) + \" > \"}\r\n                        </span>\r\n                      );\r\n                    else return <span>{t(item)}</span>;\r\n                  })}\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n      );\r\n    } catch (error) {\r\n      console.log(\"Error occured on showMenuGroup\", error);\r\n    }\r\n  };\r\n\r\n  const renderCheckbox = (cellData, type, isPassword) => {\r\n    if (\r\n      cellData.rowData.FunctionInfoList.length > 0 &&\r\n      Array.isArray(cellData.rowData.FunctionInfoList)\r\n    ) {\r\n      let Item =\r\n        type === \"Add\"\r\n          ? cellData.rowData.FunctionInfoList.filter(\r\n              (item) => item.FunctionName === \"Add\"\r\n            )\r\n          : type === \"Modify\"\r\n          ? cellData.rowData.FunctionInfoList.filter(\r\n              (item) => item.FunctionName === \"Modify\"\r\n            )\r\n          : type === \"Remove\"\r\n          ? cellData.rowData.FunctionInfoList.filter(\r\n              (item) => item.FunctionName === \"Remove\"\r\n            )\r\n          : cellData.rowData.FunctionInfoList.filter(\r\n              (item) => item.FunctionName === \"View\"\r\n            );\r\n\r\n      if (Item.length > 0 && Array.isArray(Item)) {\r\n        return (\r\n          <div\r\n            className={\r\n              isPassword\r\n                ? Item[0].IsPasswordModified\r\n                  ? \"isModifiedCell\"\r\n                  : \"\"\r\n                : Item[0].FunctionProperties.IsModified\r\n                ? \"isModifiedCell\"\r\n                : \"\"\r\n            }\r\n          >\r\n            <Checkbox\r\n              disabled={\r\n                isPassword ? false : !Item[0].FunctionProperties.Editable\r\n              }\r\n              checked={\r\n                isPassword\r\n                  ? Item[0].PasswordEnabled === true\r\n                    ? true\r\n                    : false\r\n                  : Item[0].FunctionProperties.FunctionEnabled === true\r\n                  ? true\r\n                  : false\r\n              }\r\n              onChange={(value) =>\r\n                isPassword\r\n                  ? onFunctionGroupChange(\r\n                      cellData.rowData.FunctionGroupName,\r\n                      type,\r\n                      value,\r\n                      \"Password\"\r\n                    )\r\n                  : onFunctionGroupChange(\r\n                      cellData.rowData.FunctionGroupName,\r\n                      type,\r\n                      value\r\n                    )\r\n              }\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modRole.RoleName}\r\n                indicator=\"required\"\r\n                disabled={role.RoleName !== \"\"}\r\n                onChange={(data) => onFieldChange(\"RoleName\", data)}\r\n                label={t(\"RoleAdmin_RoleName\")}\r\n                error={t(validationErrors.RoleName)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modRole.Description}\r\n                label={t(\"RoleAdmin_Description\")}\r\n                onChange={(data) => onFieldChange(\"Description\", data)}\r\n                error={t(validationErrors.Description)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder=\"Select\"\r\n                value={copyPermissionFromRole}\r\n                label={t(\"RoleAdmin_CopyAccess\")}\r\n                options={getOptionsWithSelect(roleOptions, t(\"Common_Select\"))}\r\n                onChange={(data) => onCopyPermissionChange(data)}\r\n                reserveSpace={false}\r\n                search={true}\r\n                onResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div\r\n                className=\"col-12 col-md-6 col-lg-4\"\r\n                style={{ marginTop: \"25px\" }}\r\n              >\r\n                <Button\r\n                  type=\"primary\"\r\n                  disabled={\r\n                    copyPermissionFromRole === \"\" ||\r\n                    copyPermissionFromRole === null\r\n                  }\r\n                  content={t(\"RoleAdminEdit_Apply\")}\r\n                  onClick={handleCopyRoleAccess}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Accordion>\r\n            <Accordion.Content\r\n              className=\"attributeAccordian\"\r\n              title={t(\"RoleAdmin_PageMenu\")}\r\n            >\r\n              <div className=\"row marginRightZero tableScroll\">\r\n                <div className=\"col-12 detailsTable roleDatatableHeight\">\r\n                  <DataTable\r\n                    search={true}\r\n                    searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                    data={modMenuItems}\r\n                  >\r\n                    <DataTable.Column\r\n                      initialWidth=\"75%\"\r\n                      className=\"compColHeight\"\r\n                      key=\"Name\"\r\n                      field=\"Name\"\r\n                      header={t(\"RoleAdmin_MenuElement\")}\r\n                      renderer={showMenuName}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      initialWidth=\"25%\"\r\n                      className=\"compColHeight\"\r\n                      key=\"Visible\"\r\n                      field=\"Visible\"\r\n                      header={t(\"RoleAdmin_Visiblity\")}\r\n                      renderer={visibilityCheckbox}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                  </DataTable>\r\n                </div>\r\n              </div>\r\n            </Accordion.Content>\r\n\r\n            <Accordion.Content\r\n              className=\"attributeAccordian\"\r\n              title={t(\"RoleAdmin_FunctionGroups\")}\r\n            >\r\n              <div className=\"row marginRightZero tableScroll\">\r\n                <div className=\"col-12 detailsTable roleDatatableHeight\">\r\n                  <DataTable\r\n                    search={true}\r\n                    searchPlaceholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                    data={modFunctionGroupItems}\r\n                  >\r\n                    <DataTable.Column\r\n                      initialWidth=\"22%\"\r\n                      className=\"compColHeight\"\r\n                      header={t(\"Menu\")}\r\n                      renderer={showMenuGroup}\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      initialWidth=\"20%\"\r\n                      className=\"compColHeight\"\r\n                      key=\"FunctionGroupName\"\r\n                      field=\"FunctionGroupName\"\r\n                      header={t(\"RoleAdmin_Features\")}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      initialWidth=\"5%\"\r\n                      className=\"compColHeight\"\r\n                      header={t(\"BayGroupList_Add\")}\r\n                      renderer={(cellData) =>\r\n                        renderCheckbox(cellData, \"Add\", false)\r\n                      }\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      initialWidth=\"7%\"\r\n                      className=\"compColHeight\"\r\n                      header={t(\"AccessCardInfo_x_Pwd\")}\r\n                      renderer={(cellData) =>\r\n                        renderCheckbox(cellData, \"Add\", true)\r\n                      }\r\n                    ></DataTable.Column>\r\n\r\n                    <DataTable.Column\r\n                      initialWidth=\"5%\"\r\n                      className=\"compColHeight\"\r\n                      header={t(\"RoleAdmin_Modify\")}\r\n                      renderer={(cellData) =>\r\n                        renderCheckbox(cellData, \"Modify\", false)\r\n                      }\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      initialWidth=\"7%\"\r\n                      className=\"compColHeight\"\r\n                      header={t(\"AccessCardInfo_x_Pwd\")}\r\n                      renderer={(cellData) =>\r\n                        renderCheckbox(cellData, \"Modify\", true)\r\n                      }\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      initialWidth=\"5%\"\r\n                      className=\"compColHeight\"\r\n                      header={t(\"AccessCardInfo_Delete\")}\r\n                      renderer={(cellData) =>\r\n                        renderCheckbox(cellData, \"Remove\", false)\r\n                      }\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      initialWidth=\"7%\"\r\n                      className=\"compColHeight\"\r\n                      header={t(\"AccessCardInfo_x_Pwd\")}\r\n                      renderer={(cellData) =>\r\n                        renderCheckbox(cellData, \"Remove\", true)\r\n                      }\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      initialWidth=\"5%\"\r\n                      className=\"compColHeight\"\r\n                      header={t(\"RoleAdmin_View\")}\r\n                      renderer={(cellData) =>\r\n                        renderCheckbox(cellData, \"View\", false)\r\n                      }\r\n                    ></DataTable.Column>\r\n                  </DataTable>\r\n                </div>\r\n              </div>\r\n            </Accordion.Content>\r\n          </Accordion>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { RoleDetails } from \"../../UIBase/Details/RoleDetails\";\r\nimport { emptyRole } from \"../../../JS/DefaultEntities\";\r\nimport lodash from \"lodash\";\r\nimport { roleValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { functionGroups, fnRoleAdmin } from \"../../../JS/FunctionGroups\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button } from \"@scuf/common\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass RoleDetailsComposite extends Component {\r\n  state = {\r\n    role: lodash.cloneDeep(emptyRole),\r\n    modRole: {},\r\n    isReadyToRender: false,\r\n    validationErrors: Utilities.getInitialValidationErrors(roleValidationDef),\r\n    saveEnabled: false,\r\n    roleOptions: [],\r\n    menuItems: [],\r\n    modMenuItems: [],\r\n    functionGroupItems: [],\r\n    modFunctionGroupItems: [],\r\n    copyPermissionFromRole: \"\",\r\n    isConfirmToSave: false,\r\n    allMenuItems: [],\r\n    showAuthenticationLayout: false,\r\n    tempRole: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getSecurityRoles();\r\n      this.getRole(this.props.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RoleDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.role.RoleName !== \"\" &&\r\n        nextProps.selectedRow.RoleAdmin_RoleName === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getRole(nextProps.selectedRow);\r\n        this.getSecurityRoles();\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors, copyPermissionFromRole: \"\" });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RoleDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getRole(roleRow) {\r\n    try {\r\n      if (roleRow.RoleAdmin_RoleName === undefined) {\r\n        axios(\r\n          RestAPIs.GetSecurityRole + \"?roleName=\",\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let menuList = [];\r\n            let functionGroupsList = [];\r\n            if (result.EntityResult !== null) {\r\n              if (\r\n                result.EntityResult.MenuItems.length > 0 &&\r\n                Array.isArray(result.EntityResult.MenuItems)\r\n              )\r\n                menuList = result.EntityResult.MenuItems.filter(\r\n                  (item) => item.IsComponent === true\r\n                );\r\n              if (\r\n                result.EntityResult.FunctionGroupItems.length > 0 &&\r\n                Array.isArray(result.EntityResult.FunctionGroupItems)\r\n              ) {\r\n                result.EntityResult.FunctionGroupItems.forEach(\r\n                  (functionGroup) => {\r\n                    var existitem = functionGroupsList.find((item) => {\r\n                      return (\r\n                        item.FunctionGroupName ===\r\n                        functionGroup.FunctionGroupName\r\n                      );\r\n                    });\r\n                    if (existitem === undefined) {\r\n                      let fgItem = {\r\n                        FunctionGroupName: functionGroup.FunctionGroupName,\r\n                        FunctionInfoList: functionGroup.FunctionInfoList,\r\n                        MenuGroup: [functionGroup.MenuGroup],\r\n                      };\r\n                      functionGroupsList.push(fgItem);\r\n                    } else {\r\n                      existitem.MenuGroup.push(functionGroup.MenuGroup);\r\n                    }\r\n                  }\r\n                );\r\n              }\r\n            }\r\n            this.setState({\r\n              allMenuItems: result.EntityResult.MenuItems,\r\n              menuItems: menuList,\r\n              modMenuItems: menuList,\r\n              isReadyToRender: true,\r\n              role: lodash.cloneDeep(emptyRole),\r\n              modRole: lodash.cloneDeep(emptyRole),\r\n              functionGroupItems: functionGroupsList,\r\n              modFunctionGroupItems: functionGroupsList,\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnRoleAdmin\r\n              ),\r\n            });\r\n          } else {\r\n            this.setState({\r\n              role: lodash.cloneDeep(emptyRole),\r\n              modRole: lodash.cloneDeep(emptyRole),\r\n              isReadyToRender: true,\r\n            });\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      axios(\r\n        RestAPIs.GetSecurityRole + \"?roleName=\" + roleRow.RoleAdmin_RoleName,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let menuList = [];\r\n          let functionGroupsList = [];\r\n          if (result.EntityResult !== null) {\r\n            if (\r\n              result.EntityResult.MenuItems.length > 0 &&\r\n              Array.isArray(result.EntityResult.MenuItems)\r\n            )\r\n              menuList = result.EntityResult.MenuItems.filter(\r\n                (item) => item.IsComponent === true\r\n              );\r\n            if (\r\n              result.EntityResult.FunctionGroupItems.length > 0 &&\r\n              Array.isArray(result.EntityResult.FunctionGroupItems)\r\n            ) {\r\n              result.EntityResult.FunctionGroupItems.forEach(\r\n                (functionGroup) => {\r\n                  var existitem = functionGroupsList.find((item) => {\r\n                    return (\r\n                      item.FunctionGroupName === functionGroup.FunctionGroupName\r\n                    );\r\n                  });\r\n                  if (existitem === undefined) {\r\n                    let fgItem = {\r\n                      FunctionGroupName: functionGroup.FunctionGroupName,\r\n                      FunctionInfoList: functionGroup.FunctionInfoList,\r\n                      MenuGroup: [functionGroup.MenuGroup],\r\n                    };\r\n                    functionGroupsList.push(fgItem);\r\n                  } else {\r\n                    existitem.MenuGroup.push(functionGroup.MenuGroup);\r\n                  }\r\n                }\r\n              );\r\n            }\r\n          }\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              role: lodash.cloneDeep(result.EntityResult),\r\n              modRole: lodash.cloneDeep(result.EntityResult),\r\n              allMenuItems: result.EntityResult.MenuItems,\r\n              menuItems: menuList,\r\n              modMenuItems: menuList,\r\n              functionGroupItems: functionGroupsList,\r\n              modFunctionGroupItems: functionGroupsList,\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnRoleAdmin\r\n              ),\r\n            },\r\n            () => {\r\n              this.updateCopyPermissionRole(result.EntityResult.RoleName);\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            role: lodash.cloneDeep(emptyRole),\r\n            modRole: lodash.cloneDeep(emptyRole),\r\n            menuItems: [],\r\n            modMenuItems: [],\r\n            isReadyToRender: true,\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"RoleDetailsComposite:Error occured on getRole\", error);\r\n    }\r\n  }\r\n\r\n  updateCopyPermissionRole = (roleName) => {\r\n    try {\r\n      const roleOptions = lodash.cloneDeep(this.state.roleOptions);\r\n      let roles = roleOptions.filter((item) => item.text !== roleName);\r\n      this.setState({ roleOptions: roles });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RoleDetailsComposite:Error occured on updateCopyPermissionRole\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modRole = lodash.cloneDeep(this.state.modRole);\r\n      modRole[propertyName] = data;\r\n      this.setState({ modRole });\r\n\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (roleValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          roleValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"RoleDetailsComposite:Error occured on handleChange\", error);\r\n    }\r\n  };\r\n\r\n  handleCopyPermission = (data) => {\r\n    this.setState({ copyPermissionFromRole: data });\r\n  };\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const { validationErrors } = { ...this.state };\r\n      const role = lodash.cloneDeep(this.state.role);\r\n      const menuItems = lodash.cloneDeep(this.state.menuItems);\r\n      const functionGroupItems = lodash.cloneDeep(\r\n        this.state.functionGroupItems\r\n      );\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n\r\n      this.setState({\r\n        modRole: { ...role },\r\n        validationErrors,\r\n        modMenuItems: menuItems,\r\n        modFunctionGroupItems: functionGroupItems,\r\n        copyPermissionFromRole: \"\",\r\n      });\r\n    } catch (error) {\r\n      console.log(\"RoleDetailsComposite:Error occured on handleReset\", error);\r\n    }\r\n  };\r\n\r\n  getSecurityRoles() {\r\n    axios(\r\n      RestAPIs.GetSecurityRoles,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let roleOptions = [];\r\n            roleOptions = Utilities.transferListtoOptions(result.EntityResult);\r\n            this.setState({ roleOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getSecurityRoles:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getSecurityRoles:\", error);\r\n      });\r\n  }\r\n\r\n  handleCopyRoleAccess = () => {\r\n    let copyPermissionFromRole = lodash.cloneDeep(\r\n      this.state.copyPermissionFromRole\r\n    );\r\n    if (copyPermissionFromRole !== \"\" || copyPermissionFromRole !== null) {\r\n      axios(\r\n        RestAPIs.GetSecurityRole + \"?roleName=\" + copyPermissionFromRole,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let menuList = [];\r\n          let functionGroupsList = [];\r\n          if (result.EntityResult !== null) {\r\n            if (\r\n              result.EntityResult.MenuItems.length > 0 &&\r\n              Array.isArray(result.EntityResult.MenuItems)\r\n            )\r\n              menuList = result.EntityResult.MenuItems.filter(\r\n                (item) => item.IsComponent === true\r\n              );\r\n            if (\r\n              result.EntityResult.FunctionGroupItems.length > 0 &&\r\n              Array.isArray(result.EntityResult.FunctionGroupItems)\r\n            ) {\r\n              result.EntityResult.FunctionGroupItems.forEach(\r\n                (functionGroup) => {\r\n                  var existitem = functionGroupsList.find((item) => {\r\n                    return (\r\n                      item.FunctionGroupName === functionGroup.FunctionGroupName\r\n                    );\r\n                  });\r\n                  if (existitem === undefined) {\r\n                    let fgItem = {\r\n                      FunctionGroupName: functionGroup.FunctionGroupName,\r\n                      FunctionInfoList: functionGroup.FunctionInfoList,\r\n                      MenuGroup: [functionGroup.MenuGroup],\r\n                    };\r\n                    functionGroupsList.push(fgItem);\r\n                  } else {\r\n                    existitem.MenuGroup.push(functionGroup.MenuGroup);\r\n                  }\r\n                }\r\n              );\r\n            }\r\n          }\r\n          this.setState({\r\n            allMenuItems: result.EntityResult.MenuItems,\r\n            modMenuItems: menuList,\r\n            modFunctionGroupItems: functionGroupsList,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  confirmToSave = () => {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={this.state.isConfirmToSave} size=\"small\">\r\n            <Modal.Content>\r\n              <div className=\"col col-lg-12\">\r\n                <h5>{t(\"Role_ConfirmToSave\")}</h5>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"AccessCardInfo_Ok\")}\r\n                onClick={() => {\r\n                  this.setState({ isConfirmToSave: false }, () => {\r\n                    this.handleSave();\r\n                  });\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => {\r\n                  this.setState({ isConfirmToSave: false });\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n  handleSave = () => {\r\n    try {\r\n      let modRole = this.fillDetails();\r\n      if (this.validateSave(modRole)) {\r\n        let tempRole = lodash.cloneDeep(modRole);\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        this.setState({ showAuthenticationLayout, tempRole }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveRole();\r\n          }\r\n          })\r\n      ;\r\n        \r\n      }\r\n    } catch (error) {\r\n      console.log(\"RoleDetailsComposite:Error occured on handleSave\", error);\r\n    }\r\n  };\r\n\r\n  saveRole = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempRole = lodash.cloneDeep(this.state.tempRole);\r\n      this.state.role.RoleName === \"\"\r\n        ? this.createRole(tempRole)\r\n        : this.updateRole(tempRole);\r\n    } catch (error) {\r\n      console.log(\"RoleDetailsComposite:Error occured on saveRole\", error);\r\n    }\r\n  };\r\n\r\n  handleSaveModal = () => {\r\n    this.setState({ isConfirmToSave: true });\r\n  };\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modRole = lodash.cloneDeep(this.state.modRole);\r\n      let modMenuItems = lodash.cloneDeep(this.state.modMenuItems);\r\n      let allMenuItems = lodash.cloneDeep(this.state.allMenuItems);\r\n      let modFunctionGroupItems = lodash.cloneDeep(\r\n        this.state.modFunctionGroupItems\r\n      );\r\n      let menuList = [];\r\n      let functionGroupList = [];\r\n      modMenuItems.forEach((item) => {\r\n        let menu = {\r\n          MenuCode: item.MenuCode,\r\n          Visible: item.Visible,\r\n        };\r\n        menuList.push(menu);\r\n      });\r\n      allMenuItems\r\n        .filter((item) => item.IsComponent === false)\r\n        .forEach((item) => {\r\n          let menu = {\r\n            MenuCode: item.MenuCode,\r\n            Visible: 1,\r\n          };\r\n          menuList.push(menu);\r\n        });\r\n      modFunctionGroupItems.forEach((item) => {\r\n        let selectedData = item.FunctionInfoList.filter(\r\n          (functionGroupItem) =>\r\n            functionGroupItem.FunctionProperties.FunctionEnabled === true\r\n        );\r\n        let functionGroup = {\r\n          FunctionGroupName: item.FunctionGroupName,\r\n          FunctionInfoList: selectedData,\r\n        };\r\n        functionGroupList.push(functionGroup);\r\n      });\r\n      modRole.MenuItems = menuList;\r\n      modRole.FunctionGroupItems = functionGroupList;\r\n      this.setState({ modRole });\r\n      return modRole;\r\n    } catch (error) {\r\n      console.log(\"RoleDetailsComposite:Error occured on fillDetailss\", error);\r\n    }\r\n  }\r\n\r\n  validateSave(modRole) {\r\n    try {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      Object.keys(roleValidationDef).forEach(function (key) {\r\n        if (modRole[key] !== undefined)\r\n          validationErrors[key] = Utilities.validateField(\r\n            roleValidationDef[key],\r\n            modRole[key]\r\n          );\r\n      });\r\n      this.setState({ validationErrors });\r\n\r\n      let returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n      return returnValue;\r\n    } catch (error) {\r\n      console.log(\"RoleDetailsComposite:Error occured on validateSave\", error);\r\n    }\r\n  }\r\n\r\n  createRole(modRole) {\r\n    let obj = {\r\n      Entity: modRole,\r\n    };\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"RoleInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RoleAdmin_RoleName\"],\r\n          keyValues: [modRole.RoleName],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.CreateSecurityRole,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnRoleAdmin\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () => this.getRole({ RoleAdmin_RoleName: modRole.RoleName })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnRoleAdmin\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in createRole:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(this.state.modRole, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnRoleAdmin\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modRole, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateRole(modRole) {\r\n    let obj = {\r\n      Entity: modRole,\r\n    };\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"RoleInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"RoleAdmin_RoleName\"],\r\n          keyValues: [modRole.RoleName],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.UpdateSecurityRole,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnRoleAdmin\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () => this.getRole({ RoleAdmin_RoleName: modRole.RoleName })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnRoleAdmin\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in updateRole:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(this.state.modRole, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnRoleAdmin\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modRole, \"update\", notification);\r\n      });\r\n  }\r\n\r\n  handleVisibilityChange = (newValue, data) => {\r\n    try {\r\n      let modMenuItems = lodash.cloneDeep(this.state.modMenuItems);\r\n      let menuItems = lodash.cloneDeep(this.state.menuItems);\r\n      let role = lodash.cloneDeep(this.state.role);\r\n      let matchedData = modMenuItems.filter(\r\n        (item) => item.MenuCode === data.rowData.MenuCode\r\n      );\r\n      if (matchedData.length > 0) {\r\n        matchedData[0].Visible = newValue;\r\n        if (role.RoleName !== \"\") {\r\n          let matchedOldData = menuItems.filter(\r\n            (item) => item.MenuCode === data.rowData.MenuCode\r\n          );\r\n          if (matchedData[0].Visible !== matchedOldData[0].Visible)\r\n            matchedData[0].IsModified = true;\r\n          else matchedData[0].IsModified = false;\r\n        }\r\n      }\r\n      this.setState({ modMenuItems });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RoleDetailsComposite:Error occured on handleVisibilityChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleFunctionGroupChange = (\r\n    functionGroupName,\r\n    type,\r\n    data,\r\n    operationType\r\n  ) => {\r\n    try {\r\n      let modFunctionGroupItems = lodash.cloneDeep(\r\n        this.state.modFunctionGroupItems\r\n      );\r\n      let functionGroupItems = lodash.cloneDeep(this.state.functionGroupItems);\r\n      let role = lodash.cloneDeep(this.state.role);\r\n\r\n      let matchedData = modFunctionGroupItems.filter(\r\n        (item) => item.FunctionGroupName === functionGroupName\r\n      );\r\n      if (matchedData.length > 0) {\r\n        let functionInfo = matchedData[0].FunctionInfoList.filter(\r\n          (item) => item.FunctionName === type\r\n        );\r\n\r\n        if (functionInfo.length > 0) {\r\n          if (operationType === \"Password\") {\r\n            functionInfo[0].PasswordEnabled = data;\r\n            if (role.RoleName !== \"\") {\r\n              let mactchedOldGroupItems = functionGroupItems.filter(\r\n                (item) => item.FunctionGroupName === functionGroupName\r\n              );\r\n              let matchedOldFunctionInfo =\r\n                mactchedOldGroupItems[0].FunctionInfoList.filter(\r\n                  (item) => item.FunctionName === type\r\n                );\r\n              if (\r\n                functionInfo[0].PasswordEnabled !==\r\n                matchedOldFunctionInfo[0].PasswordEnabled\r\n              )\r\n                functionInfo[0].IsPasswordModified = true;\r\n              else functionInfo[0].IsPasswordModified = false;\r\n            }\r\n          } else {\r\n            functionInfo[0].FunctionProperties.FunctionEnabled = data;\r\n            if (role.RoleName !== \"\") {\r\n              let mactchedOldGroupItems = functionGroupItems.filter(\r\n                (item) => item.FunctionGroupName === functionGroupName\r\n              );\r\n              let matchedOldFunctionInfo =\r\n                mactchedOldGroupItems[0].FunctionInfoList.filter(\r\n                  (item) => item.FunctionName === type\r\n                );\r\n              if (\r\n                functionInfo[0].FunctionProperties.FunctionEnabled !==\r\n                matchedOldFunctionInfo[0].FunctionProperties.FunctionEnabled\r\n              )\r\n                functionInfo[0].FunctionProperties.IsModified = true;\r\n              else functionInfo[0].FunctionProperties.IsModified = false;\r\n            }\r\n          }\r\n          this.setState({ modFunctionGroupItems });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RoleDetailsComposite:Error occured on handleFunctionGroupChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"BaseProductInfo_LastUpdated\",\r\n        fieldValue:\r\n          new Date(this.state.modRole.LastUpdatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modRole.LastUpdatedTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"BaseProductInfo_Created\",\r\n        fieldValue:\r\n          new Date(this.state.modRole.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modRole.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.role.RoleName}\r\n            newEntityName=\"RoleAdmin_NewRole\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <RoleDetails\r\n            role={this.state.role}\r\n            modRole={this.state.modRole}\r\n            validationErrors={this.state.validationErrors}\r\n            onFieldChange={this.handleChange}\r\n            onVisibilityChange={this.handleVisibilityChange}\r\n            roleOptions={this.state.roleOptions}\r\n            handleCopyRoleAccess={this.handleCopyRoleAccess}\r\n            modMenuItems={this.state.modMenuItems}\r\n            modFunctionGroupItems={this.state.modFunctionGroupItems}\r\n            copyPermissionFromRole={this.state.copyPermissionFromRole}\r\n            onCopyPermissionChange={this.handleCopyPermission}\r\n            onFunctionGroupChange={this.handleFunctionGroupChange}\r\n          ></RoleDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSaveModal}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.isConfirmToSave ? this.confirmToSave() : null}\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.role.RoleName === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnRoleAdmin}\r\n            handleOperation={this.saveRole}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RoleDetailsComposite);\r\n\r\nRoleDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nexport function RoleSummaryComposite({\r\n    tableData,\r\n    columnDetails,\r\n    pageSize,\r\n    exportRequired,\r\n    exportFileName,\r\n    columnPickerRequired,\r\n    columnGroupingRequired,\r\n    terminalsToShow,\r\n    selectionRequired,     \r\n    onSelectionChange,\r\n    onRowClick,\r\n    parentComponent\r\n}) {\r\n    return (\r\n        <WijmoGridComposite\r\n        data={tableData}\r\n        columns={columnDetails}\r\n        rowsPerPage={pageSize}\r\n        exportRequired={exportRequired}\r\n        exportFileName={exportFileName}\r\n        columnPickerRequired={columnPickerRequired}\r\n        columnGroupingRequired={columnGroupingRequired}\r\n        terminalsToShow={terminalsToShow}\r\n        selectionRequired={selectionRequired}\r\n        onSelectionHandle={onSelectionChange}\r\n        onRowClick={onRowClick}\r\n        parentComponent={parentComponent}\r\n        ></WijmoGridComposite>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { RoleSummaryComposite } from \"../Summary/RoleSummaryComposite\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport \"../../../CSS/styles.css\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { functionGroups, fnRoleAdmin } from \"../../../JS/FunctionGroups\";\r\nimport RoleDetailsComposite from \"../Details/RoleDetailsComposite\";\r\nimport { COREADMIN } from \"../../../JS/Constants\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../CSS/styles.css\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass RolesComposite extends Component {\r\n  state = {\r\n    data: {},\r\n    isDetails: \"false\",\r\n    isReadyToRender: false,\r\n    operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    showAuthenticationLayout: false,\r\n  };\r\n\r\n  componentName = \"RoleComponent\";\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnRoleAdmin\r\n      );\r\n      this.setState({\r\n        operationsVisibilty,\r\n      });\r\n      this.getSecurityRoleList();\r\n    } catch (error) {\r\n      console.log(\"RolesComposite:Error occured on ComponentDidMount\", error);\r\n    }\r\n  }\r\n\r\n  getSecurityRoleList() {\r\n    axios(\r\n      RestAPIs.GetSecurityRolesList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ data: result.EntityResult, isReadyToRender: true });\r\n        } else {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error in getSecurityRoleList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: [], isReadyToRender: true });\r\n        console.log(\"Error while getSecurityRoleList:\", error);\r\n      });\r\n  }\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      this.setState({\r\n        isDetails: \"true\",\r\n        selectedRow: {},\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"RolesComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showAuthenticationLayout });\r\n      if (showAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"RolesComposite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleDelete = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n\r\n      var deleteRoleKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        var RoleName = this.state.selectedItems[i][\"RoleAdmin_RoleName\"];\r\n        deleteRoleKeys.push(RoleName);\r\n      }\r\n      let obj = {\r\n        Entity: deleteRoleKeys,\r\n      };\r\n      axios(\r\n        RestAPIs.DeleteSecurityRole,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          var isRefreshDataRequire = result.isSuccess;\r\n\r\n          if (\r\n            result.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            var failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n\r\n          var notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"RoleAdmin_DeletionStatus\",\r\n            [\"Role\"]\r\n          );\r\n          if (isRefreshDataRequire) {\r\n            this.setState({\r\n              isReadyToRender: false,\r\n              showAuthenticationLayout: false,\r\n            });\r\n            this.getSecurityRoleList();\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n            });\r\n          } else {\r\n            operationsVisibilty.delete = true;\r\n            this.setState({ operationsVisibilty, showAuthenticationLayout: false });\r\n          }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0)\r\n              messageResult.keyFields[0] = \"RoleAdmin_RoleName\";\r\n          });\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"RolesComposite:Error occured on handleDelete\", error);\r\n          var { operationsVisibilty } = { ...this.state };\r\n          operationsVisibilty.delete = true;\r\n          this.setState({ operationsVisibilty, showAuthenticationLayout: false });\r\n        });\r\n    } catch (error) {\r\n      console.log(\"RolesComposite:Error occured on handleDelete\", error);\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnRoleAdmin\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      this.setState({\r\n        isDetails: \"false\",\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getSecurityRoleList();\r\n    } catch (error) {\r\n      console.log(\"RolesComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnRoleAdmin\r\n      );\r\n      operationsVisibilty.delete = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.remove,\r\n        fnRoleAdmin\r\n      );\r\n      this.setState({\r\n        isDetails: \"true\",\r\n        selectedRow: item,\r\n        selectedItems: [item],\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"RolesComposite:Error occured on handleRowClick\", error);\r\n    }\r\n  };\r\n\r\n  handleSelection = (items) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      let isCoreAdmin =\r\n        items.findIndex(\r\n          (x) => x.RoleAdmin_RoleName.toUpperCase() === COREADMIN\r\n        ) >= 0\r\n          ? true\r\n          : false;\r\n      let isReadonly =\r\n        items.findIndex((x) => x.LookUpData_ReadOnly === true) >= 0\r\n          ? true\r\n          : false;\r\n\r\n      operationsVisibilty.delete =\r\n        items.length > 0 && !isCoreAdmin && !isReadonly;\r\n      Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.remove,\r\n        fnRoleAdmin\r\n      );\r\n      this.setState({ selectedItems: items, operationsVisibilty });\r\n    } catch (error) {\r\n      console.log(\"RolesComposite:Error occured on handleSelection\", error);\r\n    }\r\n  };\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnRoleAdmin\r\n        );\r\n        operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnRoleAdmin\r\n        );\r\n        this.setState({ operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            RoleAdmin_RoleName: data.RoleName,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"RolesComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    // clear session storage\r\n    this.clearStorage();\r\n    // remove event listener\r\n    window.removeEventListener(\"beforeunload\", this.clearStorage);\r\n  };\r\n\r\n  clearStorage = () => {\r\n    sessionStorage.removeItem(this.componentName + \"GridState\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            breadcrumbItem={this.props.activeItem}\r\n            onDelete={this.authenticateDelete}\r\n            onAdd={this.handleAdd}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n            shrVisible={false}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isDetails === \"true\" ? (\r\n          <ErrorBoundary>\r\n            <RoleDetailsComposite\r\n              selectedRow={this.state.selectedRow}\r\n              onBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n            ></RoleDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isReadyToRender ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <RoleSummaryComposite\r\n                tableData={this.state.data.Table}\r\n                columnDetails={this.state.data.Column}\r\n                pageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                exportRequired={true}\r\n                exportFileName=\"RoleList\"\r\n                columnPickerRequired={true}\r\n                selectionRequired={true}\r\n                columnGroupingRequired={true}\r\n                onRowClick={this.handleRowClick}\r\n                onSelectionChange={this.handleSelection}\r\n                parentComponent={this.componentName}\r\n              ></RoleSummaryComposite>\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : (\r\n          <LoadingPage message=\"Loading\"></LoadingPage>\r\n        )}\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.remove}\r\n            functionGroup={fnRoleAdmin}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleDelete}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RolesComposite);\r\n\r\nRolesComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","WijmoGrid","flex","setFlex","translator","useTranslation","_getData","pageLength","CollectionView","sourceData","pageSize","setData","rowsPerPage","theGrid","React","theSearch","gridFilter","pagingComponent","colPicker","selectedRows","selectionRequired","selector","gridInitialized","grid","customizeFilterConditions","onRowClick","addEventListener","hostElement","e","ht","hitTest","target","closest","classList","includes","cellType","wjGrid","Cell","rowData","rows","row","dataItem","selectionMode","wjCore","select","Selector","itemChecked","s","singleSelection","filter","isSelected","current","loadash","forEach","onSelectionHandle","r","selectedRow","showCheckAll","column","rowHeaders","columns","headersVisibility","HeadersVisibility","All","useEffect","control","push","selectedItems","refresh","localStorage","getItem","parentComponent","gridState","JSON","parse","newFlex","col","matchedCol","colSetting","binding","visible","filterDefinition","collectionView","deferUpdate","sortDescriptions","clear","i","sortDesc","property","ascending","groupDescriptions","sessionStorage","gridSessionState","moveToPage","pageCount","pageIndex","text","searchText","columnPickerRequired","itemsSource","checkedMemberPath","displayMemberPath","lostFocus","addHandler","hidePopup","exportExcel","gridFlex","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","exportFileName","displayValues","columnDetail","Name","PopOver","terminalCodes","split","terminalsToShow","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","saveGridState","group","document","getElementsByClassName","chkbx","parentNode","sessionState","setItem","stringify","FlexGridFilter","operator","Operator","header","descending","apply","conditions","search","selectAll","and","or","cancel","stringOperators","op","EQ","NE","BW","EW","CT","NC","numberOperators","GT","LT","GE","LE","dateOperators","booleanOperators","getWidth","columnDetails","window","screen","width","WidthPx","parseInt","WidthPercentage","FlexGridSearch","class","ref","id","actionType","event","host","offsetHeight","focus","showPopup","PopupPosition","Below","preventDefault","colPickerClickHandler","exportRequired","fontSize","top","columnGroupingRequired","GroupPanel","FlexGrid","autoGenerateColumns","alternatingRowStep","autoRowHeights","initialized","virtualizationThreshold","onUpdatedView","FlexGridColumn","minWidth","isReadOnly","wordWrap","align","FlexGridCellTemplate","template","context","conditionalRowStyleCheck","conditionalRowStyles","ListBox","picker","initializedPicker","CollectionViewNavigator","headerFormat","byPage","cv","RoleDetails","role","modRole","onVisibilityChange","roleOptions","handleCopyRoleAccess","modMenuItems","modFunctionGroupItems","copyPermissionFromRole","onCopyPermissionChange","onFunctionGroupChange","visibilityCheckbox","IsModified","Checkbox","checked","Visible","showMenuName","cellData","names","index","showMenuGroup","menu","MenuGroup","menuNames","menuGroup","renderCheckbox","isPassword","FunctionInfoList","Array","isArray","FunctionName","IsPasswordModified","FunctionProperties","Editable","PasswordEnabled","FunctionEnabled","FunctionGroupName","RoleName","Description","getOptionsWithSelect","onResultsMessage","Accordion","title","DataTable","searchPlaceholder","Column","initialWidth","field","renderer","editFieldType","RoleDetailsComposite","emptyRole","isReadyToRender","roleValidationDef","saveEnabled","menuItems","functionGroupItems","isConfirmToSave","allMenuItems","showAuthenticationLayout","tempRole","updateCopyPermissionRole","roleName","roles","handleChange","handleCopyPermission","handleReset","keys","menuList","functionGroupsList","MenuItems","IsComponent","FunctionGroupItems","existitem","find","fgItem","confirmToSave","handleSave","handleAuthenticationClose","fillDetails","validateSave","IsWebPortalUser","saveRole","createRole","updateRole","handleSaveModal","handleVisibilityChange","newValue","matchedData","MenuCode","matchedOldData","handleFunctionGroupChange","functionGroupName","operationType","functionInfo","matchedOldFunctionInfo","IsArchived","getSecurityRoles","getRole","componentWillReceiveProps","nextProps","RoleAdmin_RoleName","roleRow","FunctionsList","functionGroups","modify","fnRoleAdmin","functionGroupList","selectedData","functionGroupItem","obj","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","popUpContents","LastUpdatedTime","CreatedTime","TMDetailsHeader","entityCode","newEntityName","TMDetailsUserActions","handleBack","onBack","UserName","LoadingPage","RoleSummaryComposite","tableData","onSelectionChange","WijmoGridComposite","RolesComposite","isDetails","componentName","handleAdd","authenticateDelete","handleDelete","deleteRoleKeys","isRefreshDataRequire","ResultDataList","res","getSecurityRoleList","messageResult","toast","NotifyEvent","notificationMessage","autoClose","handleRowClick","remove","handleSelection","items","isCoreAdmin","findIndex","x","toUpperCase","COREADMIN","isReadonly","LookUpData_ReadOnly","savedEvent","saveType","componentWillUnmount","clearStorage","removeEventListener","removeItem","activeItem","Table","PageAttibutes","WebPortalListPageSize","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","margin","List","view","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","ddlOptions","selectOptionText","option","unshift","getCurrentDateFormat","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell"],"sourceRoot":""}