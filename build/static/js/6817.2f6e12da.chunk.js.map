{"version":3,"file":"static/js/6817.2f6e12da.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Common/WijmoGrid.jsx","Components/Composite/Common/WijmoGridComposite.jsx","Components/Composite/Details/RailReceiptViewAuditTrailDetailsComposite.jsx","Components/Composite/Summary/RailReceiptSummaryComposite.jsx","Components/UIBase/Details/RailReceiptManualEntryDetails.jsx","Components/Composite/Details/RailReceiptManualEntryComposite.jsx","Components/UIBase/Details/RailReceiptLoadSpotAssignDetails.jsx","Components/Composite/Details/RailReceiptLoadSpotAssignComposite.jsx","Components/UIBase/Details/RailReceiptUnLoadingDetails.jsx","Components/Composite/Entity/RailReceiptComposite.jsx","Components/UIBase/Common/CommonConfirmModal.jsx","Components/UIBase/Common/TMTransactionFilters.jsx","Components/UIBase/Common/TMReportViewer.jsx","Components/UIBase/Details/ReportDetails.jsx","JS/FunctionGroups.js","JS/KeyCodes.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as wjCore from \"@grapecity/wijmo\";\r\nimport * as wjGrid from \"@grapecity/wijmo.grid\";\r\nimport {\r\n  FlexGrid,\r\n  FlexGridColumn,\r\n  FlexGridCellTemplate,\r\n} from \"@grapecity/wijmo.react.grid\";\r\nimport { FlexGridFilter } from \"@grapecity/wijmo.react.grid.filter\";\r\nimport { Operator } from \"@grapecity/wijmo.grid.filter\";\r\nimport { FlexGridSearch } from \"@grapecity/wijmo.react.grid.search\";\r\nimport { CollectionView } from \"@grapecity/wijmo\";\r\nimport { CollectionViewNavigator, ListBox } from \"@grapecity/wijmo.react.input\";\r\nimport { Selector } from \"@grapecity/wijmo.grid.selector\";\r\nimport { HeadersVisibility } from \"@grapecity/wijmo.grid\";\r\nimport { showPopup, hidePopup, PopupPosition } from \"@grapecity/wijmo\";\r\nimport * as wjcGridXlsx from \"@grapecity/wijmo.grid.xlsx\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport { GroupPanel } from \"@grapecity/wijmo.react.grid.grouppanel\";\r\nimport { Button, Card, Popup } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as loadash from \"lodash\";\r\nimport \"@grapecity/wijmo.touch\";\r\n\r\nconst WijmoGrid = (props) => {\r\n  const [flex, setFlex] = useState(null);\r\n  const [translator] = useTranslation();\r\n  const _getData = (pageLength) => {\r\n    return new CollectionView(props.sourceData, {\r\n      pageSize: pageLength,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState(_getData(props.rowsPerPage));\r\n  const theGrid = React.createRef();\r\n  const theSearch = React.createRef();\r\n  const gridFilter = React.createRef();\r\n  const pagingComponent = React.createRef();\r\n  const colPicker = React.useRef();\r\n\r\n  // to keep track of selected rows\r\n  const selectedRows = React.useRef(props.selectionRequired ? [] : null);\r\n\r\n  // to initialize grid checkbox selection\r\n  let selector = null;\r\n\r\n  //Initialize grid\r\n  const gridInitialized = (grid) => {\r\n    try {\r\n      // localize grid filter\r\n      customizeFilterConditions();\r\n\r\n      if (props.onRowClick) {\r\n        // add row click event handler\r\n        grid.addEventListener(grid.hostElement, \"click\", (e) => {\r\n          let ht = grid.hitTest(e);\r\n          // condition to check if cell is not a grouped cell and a data cell\r\n          if (\r\n            ht.target.closest(\".wj-cell\") &&\r\n            ![...ht.target.closest(\".wj-cell\").classList].includes(\r\n              \"wj-group\"\r\n            ) &&\r\n            ht.cellType === wjGrid.CellType.Cell\r\n          ) {\r\n            // fetch row data\r\n            const rowData = grid.rows[ht.row].dataItem;\r\n            props.onRowClick(rowData);\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      grid.select(-1, -1);\r\n\r\n      setFlex(grid);\r\n      if (props.selectionRequired) {\r\n        // enable checkbox selection\r\n        selector = new Selector(grid, {\r\n          itemChecked: (s, e) => {\r\n            // if only single checkbox selection is required\r\n            if (props.singleSelection) {\r\n              grid.rows\r\n                .filter((row) => {\r\n                  return (\r\n                    row.isSelected &&\r\n                    selectedRows.current.filter((item) =>\r\n                      loadash.isEqual(item, row.dataItem)\r\n                    ).length === 1\r\n                  );\r\n                })\r\n                .forEach((row) => {\r\n                  row.isSelected = false;\r\n                });\r\n            }\r\n\r\n            // pass row data as parameter to checkbox selection handler\r\n            props.onSelectionHandle(\r\n              grid.rows\r\n                .filter((r) => r.isSelected)\r\n                .map((selectedRow) => selectedRow.dataItem)\r\n            );\r\n          },\r\n          // if only single checkbox selection is required\r\n          showCheckAll: !props.singleSelection,\r\n        });\r\n\r\n        let theGrid = selector.column.grid;\r\n        selector.column = theGrid.rowHeaders.columns[0];\r\n        theGrid.headersVisibility = HeadersVisibility.All;\r\n        theGrid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in gridInitialized: \" + error);\r\n    }\r\n  };\r\n\r\n  //Update grid when data changes\r\n  useEffect(() => {\r\n    try {\r\n      if (theGrid != null) {\r\n        //Connect search to the grid\r\n        let grid = theGrid.current.control;\r\n        let search = theSearch.current.control;\r\n        search.grid = grid;\r\n      }\r\n\r\n      setData(_getData(props.rowsPerPage));\r\n    } catch (error) {\r\n      console.log(\"Error in grid update:\", error);\r\n    }\r\n  }, [props.sourceData]);\r\n\r\n  // Pre-select grid rows based on selectedItems props\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && props.selectionRequired) {\r\n        // clear the selectedRows array\r\n        selectedRows.current.length = 0;\r\n        // add selectedItems array items to selectedRows\r\n        selectedRows.current.push(...props.selectedItems);\r\n\r\n        flex.rows.forEach((row) => {\r\n          if (\r\n            props.selectedItems.filter((item) =>\r\n              loadash.isEqual(item, row.dataItem)\r\n            ).length === 1\r\n          ) {\r\n            // checks the row checkbox\r\n            row.isSelected = true;\r\n          } else {\r\n            // unchecks the row checkbox\r\n            row.isSelected = false;\r\n          }\r\n        });\r\n\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in pre-selecting rows:\", error);\r\n    }\r\n  }, [props.selectedItems]);\r\n\r\n  //Load the state of grid\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(props.parentComponent + \"GridState\") &&\r\n        localStorage.getItem(props.parentComponent + \"GridState\") !== \"null\" &&\r\n        flex\r\n      ) {\r\n        // restore grid settings\r\n        let gridState = JSON.parse(\r\n          localStorage.getItem(props.parentComponent + \"GridState\")\r\n        );\r\n        let newFlex = flex;\r\n\r\n        // restore column picker settings\r\n        newFlex.columns.forEach((col) => {\r\n          let matchedCol = gridState.columns.filter(\r\n            (colSetting) => colSetting.binding === col.binding\r\n          );\r\n          col.visible =\r\n            matchedCol.length > 0 ? matchedCol[0].visible : col.visible;\r\n        });\r\n\r\n        // restore filter settings\r\n        gridFilter.current.control.filterDefinition =\r\n          gridState.filterDefinition;\r\n\r\n        // restore sort settings\r\n        newFlex.collectionView.deferUpdate(() => {\r\n          newFlex.collectionView.sortDescriptions.clear();\r\n          for (let i = 0; i < gridState.sortDescriptions.length; i++) {\r\n            let sortDesc = gridState.sortDescriptions[i];\r\n            newFlex.collectionView.sortDescriptions.push(\r\n              new wjCore.SortDescription(sortDesc.property, sortDesc.ascending)\r\n            );\r\n          }\r\n        });\r\n\r\n        // restore grouping settings\r\n        for (let i = 0; i < gridState.groupDescriptions.length; i++) {\r\n          newFlex.collectionView.groupDescriptions.push(\r\n            new wjCore.PropertyGroupDescription(gridState.groupDescriptions[i])\r\n          );\r\n          newFlex.columns.filter(\r\n            (col) => col.binding === gridState.groupDescriptions[i]\r\n          )[0].visible = false;\r\n        }\r\n\r\n        if (\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") &&\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") !== \"null\"\r\n        ) {\r\n          let gridSessionState = JSON.parse(\r\n            sessionStorage.getItem(props.parentComponent + \"GridState\")\r\n          );\r\n          // restore paging settings\r\n          newFlex.collectionView.moveToPage(\r\n            newFlex.collectionView.pageCount - 1 >= gridSessionState.pageIndex\r\n              ? gridSessionState.pageIndex\r\n              : newFlex.collectionView.pageCount - 1\r\n          );\r\n\r\n          // restore search settings\r\n          if (theSearch) {\r\n            theSearch.current.control.text = gridSessionState.searchText;\r\n          }\r\n        }\r\n\r\n        setFlex(newFlex);\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in restoring local storage settings: \", error);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set Column Picker Properties\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && colPicker.current && props.columnPickerRequired) {\r\n        colPicker.current.itemsSource = flex.columns;\r\n        colPicker.current.checkedMemberPath = \"visible\";\r\n        colPicker.current.displayMemberPath = \"header\";\r\n        colPicker.current.lostFocus.addHandler(() => {\r\n          hidePopup(colPicker.current.hostElement);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in initializing column picker properties:\", error);\r\n    }\r\n  }, [colPicker.current]);\r\n\r\n  useEffect(() => {\r\n    // remove column picker pop-up on component unmount\r\n    return () => {\r\n      if (props.columnPickerRequired && colPicker.current) {\r\n        hidePopup(colPicker.current.hostElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // export grid data to excel\r\n  const exportExcel = () => {\r\n    try {\r\n      let gridFlex = flex;\r\n      //to download all rows from all pages\r\n      gridFlex.itemsSource.pageSize = props.sourceData.length;\r\n      setFlex(gridFlex);\r\n      wjcGridXlsx.FlexGridXlsxConverter.saveAsync(\r\n        flex,\r\n        {\r\n          includeColumnHeaders: true,\r\n          includeCellStyles: false,\r\n          formatItem: null,\r\n        },\r\n        props.exportFileName\r\n      );\r\n\r\n      //to restore paging\r\n      gridFlex.itemsSource.pageSize = props.rowsPerPage;\r\n      setFlex(gridFlex);\r\n    } catch (error) {\r\n      console.log(\"Error in export grid to excel:\", error);\r\n    }\r\n  };\r\n\r\n  const terminalPopOver = (terminalCodes) => {\r\n    if (terminalCodes.split(\",\").length > props.terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={terminalCodes.split(\",\").length}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return terminalCodes;\r\n    }\r\n  };\r\n\r\n  const displayValues = (value, columnDetail) => {\r\n    if (columnDetail !== undefined && columnDetail !== null) {\r\n      if (typeof value === \"boolean\" || columnDetail.Name === \"Active\") {\r\n        if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n        else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n      } else if (value === \"\" || value === null || value === undefined) {\r\n        return value;\r\n      } else if (\r\n        (columnDetail.Name === \"TerminalCodes\" ||\r\n          columnDetail.PopOver === \"1\") &&\r\n        value !== null\r\n      ) {\r\n        return terminalPopOver(value);\r\n      }\r\n      // var columnType = columnDetails.find(function (detail) {\r\n      //   if (detail.Name === field) {\r\n      //     return detail;\r\n      //   }\r\n      // });\r\n      else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"DateTime\"\r\n      ) {\r\n        return (\r\n          new Date(value).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(value).toLocaleTimeString()\r\n        );\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Date\"\r\n      ) {\r\n        return new Date(value).toLocaleDateString();\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Time\"\r\n      ) {\r\n        return new Date(value).toLocaleTimeString();\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  //Initialize Column Picker\r\n  const initializedPicker = (picker) => {\r\n    if (props.columnPickerRequired) {\r\n      colPicker.current = picker;\r\n    }\r\n  };\r\n\r\n  // Column Picker Handler\r\n  const colPickerClickHandler = (event) => {\r\n    try {\r\n      let host = colPicker.current.hostElement;\r\n      if (!host.offsetHeight) {\r\n        showPopup(host, event.target, PopupPosition.Below, true, false);\r\n        colPicker.current.focus();\r\n      } else {\r\n        hidePopup(host, true, true);\r\n        flex.focus();\r\n      }\r\n\r\n      colPicker.current.focus();\r\n      event.preventDefault();\r\n    } catch (error) {\r\n      console.log(\"Error in Column Picker click event:\", error);\r\n    }\r\n  };\r\n\r\n  const saveGridState = () => {\r\n    try {\r\n      if (flex && gridFilter.current) {\r\n        // grid column, filter, sort and grouping settings\r\n        let gridState = {\r\n          columns: flex.columns.map((col) => {\r\n            return {\r\n              binding: col.binding,\r\n              visible: col.visible,\r\n            };\r\n          }),\r\n          filterDefinition: gridFilter.current.control.filterDefinition,\r\n          sortDescriptions: flex.collectionView.sortDescriptions.map(\r\n            (sortDesc) => {\r\n              return {\r\n                property: sortDesc.property,\r\n                ascending: sortDesc.ascending,\r\n              };\r\n            }\r\n          ),\r\n          groupDescriptions: flex.collectionView.groupDescriptions.map(\r\n            (group) => {\r\n              if (group.propertyName) {\r\n                return group.propertyName;\r\n              }\r\n\r\n              return null;\r\n            }\r\n          ),\r\n        };\r\n\r\n        // add class to grouped checkbox div element\r\n        if (\r\n          flex.collectionView.groupDescriptions &&\r\n          flex.collectionView.groupDescriptions.length > 0\r\n        ) {\r\n          let groupedCheckboxes = [\r\n            ...document.getElementsByClassName(\"wj-column-selector-group\"),\r\n          ];\r\n          groupedCheckboxes.forEach((chkbx) => {\r\n            chkbx.parentNode.parentNode.classList.add(\"wj-grouped-checkbox\");\r\n          });\r\n        }\r\n\r\n        // grid paging and search settings\r\n        let sessionState = {\r\n          pageIndex: flex.collectionView.pageIndex,\r\n          searchText: theSearch.current.control.text,\r\n        };\r\n\r\n        localStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(gridState)\r\n        );\r\n        sessionStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(sessionState)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in saving grid state\");\r\n    }\r\n  };\r\n\r\n  // customize grid filter text and dropdowns\r\n  const customizeFilterConditions = () => {\r\n    // localize the FlexGrid filter\r\n    let filter = wjCore.culture.FlexGridFilter,\r\n      operator = Operator;\r\n    wjCore.culture.FlexGridFilter.header = translator(\"WijmoGridFilterHeader\");\r\n    wjCore.culture.FlexGridFilter.ascending =\r\n      \"\\u2191 \" + translator(\"WijmoGridFilterAscending\");\r\n    wjCore.culture.FlexGridFilter.descending =\r\n      \"\\u2193 \" + translator(\"WijmoGridFilterDescending\");\r\n    wjCore.culture.FlexGridFilter.apply = translator(\"RoleAdminEdit_Apply\");\r\n    wjCore.culture.FlexGridFilter.clear = translator(\"OrderCreate_btnClear\");\r\n    wjCore.culture.FlexGridFilter.conditions = translator(\r\n      \"WijmoGridFilterCondition\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.values = translator(\"WijmoGridFilterValue\");\r\n    wjCore.culture.FlexGridFilter.search = translator(\r\n      \"LoadingDetailsView_SearchGrid\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.selectAll = translator(\r\n      \"WijmoGridFilterSelectAll\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.and = translator(\"WijmoGridFilterAnd\");\r\n    wjCore.culture.FlexGridFilter.or = translator(\"WijmoGridFilterOr\");\r\n    wjCore.culture.FlexGridFilter.cancel = translator(\"AccessCardInfo_Cancel\");\r\n    // wjCore.culture.FlexGridFilter.null = 'test';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.and = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.asc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dialog = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dsc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.edit = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op2 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.or = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.search = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val2 = '';\r\n\r\n    // localize FlexGrid filter operators\r\n    filter.stringOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterBeginsWith\"), op: operator.BW },\r\n      { name: translator(\"WijmoGridFilterEndsWith\"), op: operator.EW },\r\n      { name: translator(\"WijmoGridFilterContains\"), op: operator.CT },\r\n      { name: translator(\"WijmoGridFilterDoesNotContain\"), op: operator.NC },\r\n    ];\r\n    filter.numberOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterGreaterThan\"), op: operator.GT },\r\n      { name: translator(\"WijmoGridFilterLessThan\"), op: operator.LT },\r\n      {\r\n        name: translator(\"WijmoGridFilterGreaterThanOrEqual\"),\r\n        op: operator.GE,\r\n      },\r\n      { name: translator(\"WijmoGridFilterLessThanOrEqual\"), op: operator.LE },\r\n    ];\r\n    filter.dateOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterDateEarlierThan\"), op: operator.LT },\r\n      { name: translator(\"WijmoGridFilterDateLaterThan\"), op: operator.GT },\r\n    ];\r\n    filter.booleanOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n    ];\r\n  };\r\n\r\n  // set column width based on screen size\r\n  const getWidth = (columnDetails) => {\r\n    try {\r\n      const screenWidth = window.screen.width;\r\n      if (screenWidth < 1024) {\r\n        if (columnDetails.WidthPx && columnDetails.WidthPx !== \"\")\r\n          return parseInt(columnDetails.WidthPx);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in width:\", error);\r\n    }\r\n\r\n    return columnDetails.WidthPercentage.includes(\"*\")\r\n      ? columnDetails.WidthPercentage\r\n      : parseInt(columnDetails.WidthPercentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pl-1\">\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <React.Fragment>\r\n              <div className=\"row pl-0\">\r\n                <div className=\"col-10 col-sm-12 col-md-5 col-lg-6\">\r\n                  <FlexGridSearch\r\n                    class=\"ui single-input\"\r\n                    ref={theSearch}\r\n                    placeholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-10 col-sm-12 col-md-7 col-lg-6\">\r\n                  <div style={{ float: \"right\" }}>\r\n                    {props.columnPickerRequired ? (\r\n                      <Button\r\n                        id=\"colPicker\"\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        onClick={(event) => colPickerClickHandler(event)}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridColumnPicker\")}\r\n                        </div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          <Icon\r\n                            name=\"caret-down\"\r\n                            className=\"btnIcon\"\r\n                            size=\"small\"\r\n                          />\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.exportRequired ? (\r\n                      <Button\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        className=\"mt-3 mt-md-0\"\r\n                        onClick={exportExcel}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridExport\")}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            className=\"icon-Xls\"\r\n                            style={{\r\n                              fontSize: \"17px\",\r\n                              position: \"absolute\",\r\n                              top: \"3px\",\r\n                            }}\r\n                          ></span>\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tableScroll\">\r\n                {props.columnGroupingRequired ? (\r\n                  <GroupPanel\r\n                    className=\"group-panel\"\r\n                    grid={flex}\r\n                    placeholder={t(\"WijmoGridGroupPanelPlaceholder\")}\r\n                  />\r\n                ) : null}\r\n                <ErrorBoundary>\r\n                  <FlexGrid\r\n                    ref={theGrid}\r\n                    autoGenerateColumns={false}\r\n                    alternatingRowStep={0}\r\n                    autoRowHeights={true}\r\n                    headersVisibility=\"Column\"\r\n                    itemsSource={data}\r\n                    selectionMode={wjCore.asEnum(\"None\", wjGrid.SelectionMode)}\r\n                    initialized={gridInitialized}\r\n                    virtualizationThreshold={[0, 10000]}\r\n                    onUpdatedView={saveGridState}\r\n                  >\r\n                    <FlexGridFilter ref={gridFilter} />\r\n                    {props.columns.map((column) => {\r\n                      return (\r\n                        <FlexGridColumn\r\n                          header={t(column.Name)}\r\n                          key={column.Name}\r\n                          binding={column.Name}\r\n                          width={getWidth(column)}\r\n                          minWidth={100}\r\n                          isReadOnly={true}\r\n                          wordWrap={true}\r\n                          align=\"left\"\r\n                        >\r\n                          <FlexGridCellTemplate\r\n                            cellType=\"Cell\"\r\n                            template={(context) => {\r\n                              return (\r\n                                <span\r\n                                  style={\r\n                                    props.conditionalRowStyleCheck == null ||\r\n                                    !props.conditionalRowStyleCheck(\r\n                                      context.item\r\n                                    )\r\n                                      ? null\r\n                                      : { ...props.conditionalRowStyles }\r\n                                  }\r\n                                >\r\n                                  {displayValues(\r\n                                    context.item[column.Name],\r\n                                    column\r\n                                  )}\r\n                                </span>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FlexGridColumn>\r\n                      );\r\n                    })}\r\n                  </FlexGrid>\r\n                </ErrorBoundary>\r\n                {props.columnPickerRequired ? (\r\n                  <div className=\"column-picker-div\">\r\n                    <ListBox\r\n                      className=\"column-picker\"\r\n                      initialized={(picker) => initializedPicker(picker)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"row\">\r\n                <CollectionViewNavigator\r\n                  ref={pagingComponent}\r\n                  className=\"ml-auto mr-auto mt-3\"\r\n                  headerFormat={t(\"WijmoGridPagingTemplate\")}\r\n                  byPage={true}\r\n                  cv={data}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nWijmoGrid.propTypes = {\r\n  sourceData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  exportRequired: PropTypes.bool.isRequired,\r\n  exportFileName: PropTypes.string,\r\n  selectionRequired: PropTypes.bool,\r\n  columnPickerRequired: PropTypes.bool,\r\n  columnGroupingRequired: PropTypes.bool,\r\n  conditionalRowStyleCheck: PropTypes.func,\r\n  conditionalRowStyles: PropTypes.object,\r\n  rowsPerPage: PropTypes.number,\r\n  onSelectionHandle: PropTypes.func,\r\n  parentComponent: PropTypes.string.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  terminalsToShow: PropTypes.number,\r\n  singleSelection: PropTypes.bool,\r\n  selectedItems: PropTypes.array,\r\n};\r\n\r\nWijmoGrid.defaultProps = {\r\n  sourceData: [],\r\n  columns: [],\r\n  exportRequired: true,\r\n  exportFileName: \"Grid.xlsx\",\r\n  selectionRequired: false,\r\n  columnPickerRequired: false,\r\n  columnGroupingRequired: false,\r\n  rowsPerPage: 10,\r\n  terminalsToShow: 2,\r\n  singleSelection: false,\r\n  selectedItems: [],\r\n};\r\n\r\nexport default WijmoGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WijmoGrid from '../../UIBase/Common/WijmoGrid';\r\n\r\nconst WijmoGridComposite = (props) => {\r\n    return (\r\n        <WijmoGrid\r\n            sourceData={props.data}\r\n            columns={props.columns}\r\n            exportRequired={props.exportRequired}\r\n            exportFileName={props.exportFileName}\r\n            columnPickerRequired={props.columnPickerRequired}\r\n            selectionRequired={props.selectionRequired}\r\n            columnGroupingRequired={props.columnGroupingRequired}\r\n            conditionalRowStyleCheck={props.conditionalRowStyleCheck}\r\n            conditionalRowStyles={props.conditionalRowStyles}\r\n            rowsPerPage={props.rowsPerPage}\r\n            onSelectionHandle={props.onSelectionHandle}\r\n            onRowClick={props.onRowClick}\r\n            parentComponent={props.parentComponent}\r\n            terminalsToShow={props.terminalsToShow}\r\n            singleSelection={props.singleSelection}\r\n            selectedItems={props.selectedItems}\r\n        />\r\n    )\r\n}\r\n\r\nWijmoGridComposite.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n    exportRequired: PropTypes.bool.isRequired,\r\n    exportFileName: PropTypes.string,\r\n    selectionRequired: PropTypes.bool,\r\n    columnPickerRequired: PropTypes.bool,\r\n    columnGroupingRequired: PropTypes.bool,\r\n    conditionalRowStyleCheck: PropTypes.func,\r\n    conditionalRowStyles: PropTypes.object,\r\n    rowsPerPage: PropTypes.number,\r\n    onSelectionHandle: PropTypes.func,\r\n    parentComponent: PropTypes.string.isRequired,\r\n    onRowClick: PropTypes.func,\r\n    terminalsToShow: PropTypes.number,\r\n    singleSelection: PropTypes.bool,\r\n    selectedItems: PropTypes.array\r\n}\r\n\r\nexport default WijmoGridComposite;","import React, { Component } from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button, Modal, Checkbox } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport { connect } from \"react-redux\";\r\nimport lodash from \"lodash\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as wjChart from \"@grapecity/wijmo.react.chart\";\r\nimport * as wjcCore from \"@grapecity/wijmo\";\r\nimport { MARINEDISPATCHSTATUSTIME } from \"../../../JS/AttributeEntity\";\r\n\r\nwjcCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nclass RailReceiptViewAuditTrailDetailsComposite extends Component {\r\n  state = {\r\n    receiptViewAuditTrailData: [],\r\n    modReceiptViewAuditTrailData: [],\r\n    auditTrailAttributeMetaDataList: [],\r\n    Attributes: [],\r\n  };\r\n\r\n  getReceiptViewAuditTrail(receiptCode) {\r\n    if (receiptCode === undefined) {\r\n      this.setState({\r\n        receiptViewAuditTrailData: [],\r\n        modReceiptViewAuditTrailData: [],\r\n      });\r\n      return;\r\n    }\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.railReceiptCode,\r\n        value: receiptCode,\r\n      },\r\n    ];\r\n    const cobj = {\r\n      ShareHolderCode: this.props.shareholderCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    let obj = {\r\n      ReceiptCode: receiptCode,\r\n      TmWebApiRequest: cobj,\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailReceiptAuditTrailList,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            receiptViewAuditTrailData: lodash.cloneDeep(result.EntityResult),\r\n            modReceiptViewAuditTrailData: lodash.cloneDeep(result.EntityResult),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            receiptViewAuditTrailData: [],\r\n            modReceiptViewAuditTrailData: [],\r\n          });\r\n        }\r\n        var modReceiptViewAuditTrailData = lodash.cloneDeep(\r\n          this.state.modReceiptViewAuditTrailData\r\n        );\r\n        var receiptViewAuditTrailData = lodash.cloneDeep(\r\n          this.state.receiptViewAuditTrailData\r\n        );\r\n        for (let i = 0; i < modReceiptViewAuditTrailData.length; i++) {\r\n          let receiptStatus = modReceiptViewAuditTrailData[i].ReceiptStatus;\r\n          if (receiptStatus === Constants.Receipt_Status.AUTO_UNLOADED) {\r\n            receiptStatus = Constants.ReceiptStatus.AUTO_LOADED;\r\n          } else if (receiptStatus === Constants.Receipt_Status.CHECKED_IN) {\r\n            receiptStatus = Constants.ReceiptStatus.CHECKED_IN;\r\n          } else if (receiptStatus === Constants.Receipt_Status.CLOSED) {\r\n            receiptStatus = Constants.ReceiptStatus.CLOSED;\r\n          } else if (receiptStatus === Constants.Receipt_Status.INTERRUPTED) {\r\n            receiptStatus = Constants.ReceiptStatus.INTERRUPTED;\r\n          } else if (receiptStatus === Constants.Receipt_Status.UNLOADING) {\r\n            receiptStatus = Constants.ReceiptStatus.UNLOADING;\r\n          } else if (\r\n            receiptStatus === Constants.Receipt_Status.MANUALLY_UNLOADED\r\n          ) {\r\n            receiptStatus = Constants.ReceiptStatus.MANUALLY_UNLOADED;\r\n          } else if (\r\n            receiptStatus === Constants.Receipt_Status.PARTIALLY_UNLOADED\r\n          ) {\r\n            receiptStatus = Constants.ReceiptStatus.PARTIALLY_UNLOADED;\r\n          } else if (receiptStatus === Constants.Receipt_Status.QUEUED) {\r\n            receiptStatus = Constants.ReceiptStatus.QUEUED;\r\n          } else if (receiptStatus === Constants.Receipt_Status.READY) {\r\n            receiptStatus = Constants.ReceiptStatus.READY;\r\n          } else if (receiptStatus === Constants.Receipt_Status.DE_QUEUED) {\r\n            receiptStatus = Constants.ReceiptStatus.DE_QUEUED;\r\n          } else if (receiptStatus === Constants.Receipt_Status.WEIGHED_IN) {\r\n            receiptStatus = Constants.ReceiptStatus.WEIGHED_IN;\r\n          } else if (receiptStatus === Constants.Receipt_Status.WEIGHED_OUT) {\r\n            receiptStatus = Constants.ReceiptStatus.WEIGHED_OUT;\r\n          } else if (receiptStatus === Constants.Receipt_Status.USER_DEFINED) {\r\n            receiptStatus = Constants.ReceiptStatus.USER_DEFINED;\r\n          } else if (receiptStatus === Constants.Receipt_Status.ASSIGNED) {\r\n            receiptStatus = Constants.ReceiptStatus.ASSIGNED;\r\n          } else if (receiptStatus === Constants.Receipt_Status.CANCELLED) {\r\n            receiptStatus = Constants.ReceiptStatus.CANCELLED;\r\n          } else if (receiptStatus === Constants.Receipt_Status.EXPIRED) {\r\n            receiptStatus = Constants.ReceiptStatus.EXPIRED;\r\n          } else if (receiptStatus === Constants.Receipt_Status.REJECTED) {\r\n            receiptStatus = Constants.ReceiptStatus.REJECTED;\r\n          }\r\n          let attributeMetaDataList = lodash.cloneDeep(\r\n            this.state.auditTrailAttributeMetaDataList\r\n          );\r\n          for (let i = 0; i < receiptViewAuditTrailData.length; i++) {\r\n            receiptViewAuditTrailData[i].AttributesforUI =\r\n              this.formReadonlyCompAttributes(\r\n                receiptViewAuditTrailData[i].Attributes,\r\n                attributeMetaDataList\r\n              );\r\n          }\r\n          let Attributes =\r\n            // receiptViewAuditTrailData !== undefined &&\r\n            receiptViewAuditTrailData.length > 0\r\n              ? receiptViewAuditTrailData[0].AttributesforUI\r\n              : [];\r\n\r\n          modReceiptViewAuditTrailData[i].ReceiptStatus = receiptStatus;\r\n          modReceiptViewAuditTrailData[i].UpdatedTime =\r\n            new Date(\r\n              modReceiptViewAuditTrailData[i].UpdatedTime\r\n            ).toLocaleDateString() +\r\n            \" \" +\r\n            new Date(\r\n              modReceiptViewAuditTrailData[i].UpdatedTime\r\n            ).toLocaleTimeString();\r\n          this.setState({\r\n            modReceiptViewAuditTrailData,\r\n            Attributes,\r\n            receiptViewAuditTrailData,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting MarineReceiptViewAuditTrail:\", error);\r\n      });\r\n  }\r\n\r\n  formReadonlyCompAttributes(attributes, attributeMetaDataList) {\r\n    let compAttributes = [];\r\n    if (\r\n      attributeMetaDataList !== null &&\r\n      attributeMetaDataList !== undefined &&\r\n      attributeMetaDataList.length > 0\r\n    ) {\r\n      attributeMetaDataList.forEach((att) => {\r\n        att.attributeMetaDataList.forEach((attribute) => {\r\n          //if (attribute.TerminalCode)\r\n          compAttributes.push({\r\n            AttributeCode: attribute.Code,\r\n            AttributeName: attribute.DisplayName\r\n              ? attribute.DisplayName\r\n              : attribute.Code,\r\n            AttributeValue: attribute.DefaultValue,\r\n            TerminalCode: attribute.TerminalCode,\r\n            IsMandatory: attribute.IsMandatory,\r\n            DataType: attribute.DataType,\r\n            IsReadonly: attribute.IsReadonly,\r\n            MinValue: attribute.MinValue,\r\n            MaxValue: attribute.MaxValue,\r\n            ValidationFormat: attribute.ValidationFormat,\r\n            compSequenceNo: \"\",\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    if (\r\n      attributes !== null &&\r\n      attributes !== undefined &&\r\n      attributes.length > 0\r\n    ) {\r\n      attributes.forEach((att) => {\r\n        compAttributes.forEach((compAtt) => {\r\n          if (compAtt.TerminalCode === att.TerminalCode) {\r\n            att.ListOfAttributeData.forEach((selAtt) => {\r\n              if (compAtt.AttributeCode === selAtt.AttributeCode)\r\n                compAtt.AttributeValue = selAtt.AttributeValue;\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    return compAttributes;\r\n  }\r\n\r\n  getAttributes() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [MARINEDISPATCHSTATUSTIME],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              auditTrailAttributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.MARINEDISPATCHSTATUSTIME\r\n              ),\r\n            },\r\n            () => {\r\n              this.getReceiptViewAuditTrail(this.props.selectedRow.Common_Code);\r\n            }\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    try {\r\n      this.getAttributes();\r\n      //this.getReceiptViewAuditTrail(this.props.selectedRow.Common_Code);\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptViewAuditTrailDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handlePrint = () => {\r\n    try {\r\n      this.setState({ openPrint: true }, () => {});\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptViewAuditTrailDetailsComposite:Error occured on handlePrint\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  printTable() {\r\n    let el = window.document.getElementById(\"printTable\").innerHTML;\r\n    const iframe = window.document.createElement(\"IFRAME\");\r\n    let doc = null;\r\n    window.document.body.appendChild(iframe);\r\n    doc = iframe.contentWindow.document;\r\n    const str1 = el.substring(0, el.indexOf(\"<table\") + 6);\r\n    const str2 = el.substring(el.indexOf(\"<table\") + 6, el.length);\r\n    el = str1 + ' border=\"1\" cellspacing=\"0\"' + str2;\r\n    el = el.replace('<tfoot class=\"p-datatable-tfoot\">', \"\");\r\n    el = el.replace(\r\n      '<tr><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td><td class=\"compColHeight\"></td></tr>',\r\n      \"\"\r\n    );\r\n    doc.write(el);\r\n    console.info(el);\r\n    doc.close();\r\n    iframe.contentWindow.focus();\r\n    iframe.contentWindow.print();\r\n    setTimeout(() => {\r\n      document.body.removeChild(iframe);\r\n    }, 2000);\r\n  }\r\n\r\n  render() {\r\n    const handleStatus = (e) => {\r\n      if (e === 0 && e !== null) {\r\n        return Constants.ReceiptStatus.COMPLETED.toLocaleString();\r\n      }\r\n      if (e === 1 && e !== null) {\r\n        return Constants.ReceiptStatus.EMPTY.toLocaleString();\r\n      }\r\n      if (e === 2 && e !== null) {\r\n        return Constants.ReceiptStatus.FORCE_COMPLETED.toLocaleString();\r\n      }\r\n      if (e === 3 && e !== null) {\r\n        return Constants.ReceiptStatus.INTERRUPTED.toLocaleString();\r\n      }\r\n      if (e === 4 && e !== null) {\r\n        return Constants.ReceiptStatus.OVER_UNLOADED.toLocaleString();\r\n      }\r\n      if (e === 5 && e !== null) {\r\n        return Constants.ReceiptStatus.PART_UNLOADED.toLocaleString();\r\n      }\r\n      if (e === 6 && e !== null) {\r\n        return Constants.ReceiptStatus.UNLOAD_NOTSTARTED.toLocaleString();\r\n      }\r\n      if (e === 7 && e !== null) {\r\n        return Constants.ReceiptStatus.UNLOADING.toLocaleString();\r\n      } else {\r\n        return e;\r\n      }\r\n    };\r\n    const handleAttributeType = (data) => {\r\n      const attribute = data.rowData.AttributesforUI.filter(\r\n        (att) => att.AttributeName === data.name\r\n      )[0];\r\n\r\n      return attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.STRING.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.INT.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.LONG.toLowerCase() ||\r\n        attribute.DataType.toLowerCase() ===\r\n          Constants.DataType.FLOAT.toLowerCase() ? (\r\n        <label>{attribute.AttributeValue}</label>\r\n      ) : attribute.DataType.toLowerCase() ===\r\n        Constants.DataType.BOOL.toLowerCase() ? (\r\n        <Checkbox\r\n          checked={\r\n            attribute.AttributeValue.toString().toLowerCase() === \"true\"\r\n              ? true\r\n              : false\r\n          }\r\n          disabled={true}\r\n        ></Checkbox>\r\n      ) : (\r\n        <label>{new Date(attribute.AttributeValue).toLocaleDateString()}</label>\r\n      );\r\n    };\r\n    const formatter = (engine, label) => {\r\n      label.cls = null;\r\n      engine.fontSize = \"7px\";\r\n      if (label.val === Constants.ReceiptStatus.AUTO_LOADED) {\r\n        label.text = Constants.Receipt_Status.AUTO_LOADED;\r\n      } else if (label.val === Constants.ReceiptStatus.CHECKED_IN) {\r\n        label.text = Constants.Receipt_Status.CHECKED_IN;\r\n      } else if (label.val === Constants.ReceiptStatus.CLOSED) {\r\n        label.text = Constants.Receipt_Status.CLOSED;\r\n      } else if (label.val === Constants.ReceiptStatus.INTERRUPTED) {\r\n        label.text = Constants.Receipt_Status.INTERRUPTED;\r\n      } else if (label.val === Constants.ReceiptStatus.UNLOADING) {\r\n        label.text = Constants.Receipt_Status.UNLOADING;\r\n      } else if (label.val === Constants.ReceiptStatus.MANUALLY_UNLOADED) {\r\n        label.text = Constants.Receipt_Status.MANUALLY_UNLOADED;\r\n      } else if (label.val === Constants.ReceiptStatus.PARTIALLY_UNLOADED) {\r\n        label.text = Constants.Receipt_Status.PARTIALLY_UNLOADED;\r\n      } else if (label.val === Constants.ReceiptStatus.QUEUED) {\r\n        label.text = Constants.Receipt_Status.QUEUED;\r\n      } else if (label.val === Constants.ReceiptStatus.READY) {\r\n        label.text = Constants.Receipt_Status.READY;\r\n      } else if (label.val === Constants.ReceiptStatus.DE_QUEUED) {\r\n        label.text = Constants.Receipt_Status.DE_QUEUED;\r\n      } else if (label.val === Constants.ReceiptStatus.WEIGHED_IN) {\r\n        label.text = Constants.Receipt_Status.WEIGHED_IN;\r\n      } else if (label.val === Constants.ReceiptStatus.WEIGHED_OUT) {\r\n        label.text = Constants.Receipt_Status.WEIGHED_OUT;\r\n      } else if (label.val === Constants.ReceiptStatus.USER_DEFINED) {\r\n        label.text = Constants.Receipt_Status.USER_DEFINED;\r\n      } else if (label.val === Constants.ReceiptStatus.ASSIGNED) {\r\n        label.text = Constants.Receipt_Status.ASSIGNED;\r\n      } else if (label.val === Constants.ReceiptStatus.CANCELLED) {\r\n        label.text = Constants.Receipt_Status.CANCELLED;\r\n      } else if (label.val === Constants.ReceiptStatus.EXPIRED) {\r\n        label.text = Constants.Receipt_Status.EXPIRED;\r\n      } else if (label.val === Constants.ReceiptStatus.REJECTED) {\r\n        label.text = Constants.Receipt_Status.REJECTED;\r\n      }\r\n      return label;\r\n    };\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div>\r\n            <Modal\r\n              onClose={() => this.setState({ openPrint: false })}\r\n              size=\"large\"\r\n              open={this.state.openPrint}\r\n              className=\"marineModalPrint\"\r\n              closeOnDimmerClick={false}\r\n            >\r\n              <Modal.Content>\r\n                <div id=\"printTable\">\r\n                  <div className=\"ViewAuditTrailDetailsPrint\">\r\n                    <b>\r\n                      {t(\"ViewAuditTrail_ViewAuditTrailForReceipt\") +\r\n                        \" : \" +\r\n                        this.props.selectedRow.Common_Code}\r\n                    </b>\r\n                  </div>\r\n                  <div className=\"col-md-10 container-fluid\">\r\n                    <wjChart.FlexChart\r\n                      itemsSource={this.state.modReceiptViewAuditTrailData}\r\n                      chartType=\"Line\"\r\n                      bindingX=\"UpdatedTime\"\r\n                      palette={[\"red\"]}\r\n                      style={{ width: \"100%\", height: \"450px\" }}\r\n                    >\r\n                      <wjChart.FlexChartLegend position=\"Bottom\"></wjChart.FlexChartLegend>\r\n                      <wjChart.FlexChartAxis\r\n                        wjProperty=\"axisY\"\r\n                        majorUnit={1}\r\n                        max={16}\r\n                        min={0}\r\n                        itemFormatter={formatter}\r\n                        axisLine={true}\r\n                      ></wjChart.FlexChartAxis>\r\n                      <wjChart.FlexChartSeries\r\n                        binding=\"ReceiptStatus\"\r\n                        name=\"ReceiptStatus\"\r\n                      ></wjChart.FlexChartSeries>\r\n                    </wjChart.FlexChart>\r\n                  </div>\r\n\r\n                  <div className=\"col-12 detailsTable\">\r\n                    <DataTable\r\n                      data={this.state.receiptViewAuditTrailData}\r\n                      scrollable={true}\r\n                      value={\"\"}\r\n                    >\r\n                      <DataTable.Column\r\n                        className=\"compColHeight\"\r\n                        key=\"ReceiptCode\"\r\n                        field=\"ReceiptCode\"\r\n                        header={t(\"Receipt_Code\")}\r\n                        editable={false}\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight\"\r\n                        key=\"ReceiptStatus\"\r\n                        field=\"ReceiptStatus\"\r\n                        header={t(\"ReceiptStatus\")}\r\n                        editable={false}\r\n                        renderer={(cellData) =>\r\n                          handleStatus(cellData.rowData.ReceiptStatus)\r\n                        }\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight\"\r\n                        key=\"TrailerCode\"\r\n                        field=\"TrailerCode\"\r\n                        header={t(\"Rail_Wagon_Code\")}\r\n                        editable={false}\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight\"\r\n                        key=\"CarrierCompanyCode\"\r\n                        field=\"CarrierCompanyCode\"\r\n                        header={t(\"Carrier_Company_Code\")}\r\n                        editable={false}\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight\"\r\n                        key=\"ReceiptCompartmentStatus\"\r\n                        field=\"ReceiptCompartmentStatus\"\r\n                        renderer={(cellData) => {\r\n                          return cellData.value === null\r\n                            ? \"\"\r\n                            : Utilities.getKeyByValue(\r\n                                Constants.ReceiptCompartmentStatus,\r\n                                cellData.value\r\n                              );\r\n                        }}\r\n                        header={t(\"ReceiptCompartmentStatus\")}\r\n                        editable={false}\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight\"\r\n                        key=\"UserPIN\"\r\n                        field=\"UserPIN\"\r\n                        header={t(\"PIN\")}\r\n                        editable={false}\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n                      <DataTable.Column\r\n                        className=\"compColHeight\"\r\n                        key=\"UpdatedTime\"\r\n                        field=\"UpdatedTime\"\r\n                        renderer={(cellData) => {\r\n                          return new Date(cellData.value).toLocaleString();\r\n                        }}\r\n                        header={t(\"SAAuditTrial_UpdatedTime\")}\r\n                        editable={false}\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n\r\n                      <DataTable.Column\r\n                        className=\"compColHeight\"\r\n                        key=\"OfficerName\"\r\n                        field=\"OfficerName\"\r\n                        header={t(\"ViewAuditTrail_OfficerName\")}\r\n                        editable={false}\r\n                        editFieldType=\"text\"\r\n                      ></DataTable.Column>\r\n                      {this.state.Attributes.map((att) => {\r\n                        return (\r\n                          <DataTable.Column\r\n                            className=\"compColHeight\"\r\n                            header={t(att.AttributeName)}\r\n                            editable={false}\r\n                            renderer={handleAttributeType}\r\n                          ></DataTable.Column>\r\n                        );\r\n                      })}\r\n                    </DataTable>\r\n                  </div>\r\n                </div>\r\n              </Modal.Content>\r\n              <Modal.Footer>\r\n                <Button\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  content={t(\"EOD_Print\")}\r\n                  onClick={() => {\r\n                    this.printTable();\r\n                  }}\r\n                />\r\n                <Button\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  content={t(\"MarineEOD_Close\")}\r\n                  onClick={() => {\r\n                    this.setState({ openPrint: false });\r\n                  }}\r\n                />\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div className=\"detailsContainer\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12 \">\r\n                  <h3>\r\n                    {t(\"ViewAuditTrail_ViewAuditTrailForReceipt\") +\r\n                      \" : \" +\r\n                      this.props.selectedRow.Common_Code}\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n              <div className=\"row marginRightZero tableScroll\">\r\n                <div className=\"col-12 detailsTable container-fluid\">\r\n                  <wjChart.FlexChart\r\n                    itemsSource={this.state.modReceiptViewAuditTrailData}\r\n                    chartType=\"Line\"\r\n                    bindingX=\"UpdatedTime\"\r\n                    palette={[\"red\"]}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      minWidth: \"800px\",\r\n                      height: \"450px\",\r\n                    }}\r\n                  >\r\n                    <wjChart.FlexChartLegend position=\"Bottom\"></wjChart.FlexChartLegend>\r\n                    <wjChart.FlexChartAxis\r\n                      wjProperty=\"axisY\"\r\n                      majorUnit={1}\r\n                      max={16}\r\n                      min={0}\r\n                      itemFormatter={formatter}\r\n                      axisLine={true}\r\n                    ></wjChart.FlexChartAxis>\r\n                    <wjChart.FlexChartSeries\r\n                      binding=\"ReceiptStatus\"\r\n                      name=\"ReceiptStatus\"\r\n                    ></wjChart.FlexChartSeries>\r\n                  </wjChart.FlexChart>\r\n                </div>\r\n              </div>\r\n              <div className=\"row marginRightZero tableScroll\">\r\n                <div className=\"col-12 detailsTable\">\r\n                  <DataTable\r\n                    data={this.state.receiptViewAuditTrailData}\r\n                    scrollable={true}\r\n                    value={\"\"}\r\n                  >\r\n                    <DataTable.Column\r\n                      className=\"compColHeight colminWidth\"\r\n                      key=\"ReceiptCode\"\r\n                      field=\"ReceiptCode\"\r\n                      header={t(\"Receipt_Code\")}\r\n                      editable={false}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      className=\"compColHeight colminWidth\"\r\n                      key=\"ReceiptStatus\"\r\n                      field=\"ReceiptStatus\"\r\n                      header={t(\"ReceiptStatus\")}\r\n                      editable={false}\r\n                      renderer={(cellData) =>\r\n                        handleStatus(cellData.rowData.ReceiptStatus)\r\n                      }\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      className=\"compColHeight colminWidth\"\r\n                      key=\"TrailerCode\"\r\n                      field=\"TrailerCode\"\r\n                      header={t(\"Rail_Wagon_Code\")}\r\n                      editable={false}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      className=\"compColHeight colminWidth\"\r\n                      key=\"CarrierCompanyCode\"\r\n                      field=\"CarrierCompanyCode\"\r\n                      header={t(\"Carrier_Company_Code\")}\r\n                      editable={false}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      className=\"compColHeight colminWidth\"\r\n                      key=\"ReceiptCompartmentStatus\"\r\n                      field=\"ReceiptCompartmentStatus\"\r\n                      renderer={(cellData) => {\r\n                        return cellData.value === null\r\n                          ? \"\"\r\n                          : Utilities.getKeyByValue(\r\n                              Constants.ReceiptCompartmentStatus,\r\n                              cellData.value\r\n                            );\r\n                      }}\r\n                      header={t(\"ReceiptCompartmentStatus\")}\r\n                      editable={false}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      className=\"compColHeight colminWidth\"\r\n                      key=\"UserPIN\"\r\n                      field=\"UserPIN\"\r\n                      header={t(\"PIN\")}\r\n                      editable={false}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    <DataTable.Column\r\n                      className=\"compColHeight colminWidth\"\r\n                      key=\"UpdatedTime\"\r\n                      field=\"UpdatedTime\"\r\n                      renderer={(cellData) => {\r\n                        return new Date(cellData.value).toLocaleString();\r\n                      }}\r\n                      header={t(\"SAAuditTrial_UpdatedTime\")}\r\n                      editable={false}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n\r\n                    <DataTable.Column\r\n                      className=\"compColHeight colminWidth\"\r\n                      key=\"OfficerName\"\r\n                      field=\"OfficerName\"\r\n                      header={t(\"ViewAuditTrail_OfficerName\")}\r\n                      editable={false}\r\n                      editFieldType=\"text\"\r\n                    ></DataTable.Column>\r\n                    {this.state.Attributes.map((att) => {\r\n                      return (\r\n                        <DataTable.Column\r\n                          className=\"compColHeight colminWidth\"\r\n                          header={t(att.AttributeName)}\r\n                          editable={false}\r\n                          renderer={handleAttributeType}\r\n                        ></DataTable.Column>\r\n                      );\r\n                    })}\r\n                  </DataTable>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-sm-6 col-lg-8\">\r\n                  <Button\r\n                    className=\"backButton\"\r\n                    onClick={this.props.handleBack}\r\n                    content={t(\"Back\")}\r\n                  ></Button>\r\n                </div>\r\n                <div\r\n                  className=\"col-12 col-sm-6 col-lg-4\"\r\n                  style={{ textAlign: \"right\" }}\r\n                >\r\n                  <Button\r\n                    className=\"printButton\"\r\n                    onClick={this.handlePrint}\r\n                    content={t(\"ViewEAAuditTrail_PrintAuditTrail\")}\r\n                  ></Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nconst mapReceiptToProps = (receipt) => {\r\n  return {\r\n    userActions: bindActionCreators(getUserDetails, receipt),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapReceiptToProps\r\n)(RailReceiptViewAuditTrailDetailsComposite);\r\n\r\nRailReceiptViewAuditTrailDetailsComposite.propTypes = {\r\n  receiptCode: PropTypes.string.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  selectedRow: PropTypes.object.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nexport function RailReceiptSummaryPageComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  selectionRequired,\r\n  terminalsToShow,\r\n  selectedItems,\r\n  onSelectionChange,\r\n  onRowClick,\r\n  parentComponent,\r\n}) {\r\n  return (\r\n    <WijmoGridComposite\r\n    data={tableData}\r\n    columns={columnDetails}\r\n    rowsPerPage={pageSize}\r\n    exportRequired={exportRequired}\r\n    exportFileName={exportFileName}\r\n    columnPickerRequired={columnPickerRequired}\r\n    columnGroupingRequired={columnGroupingRequired}\r\n    selectionRequired={selectionRequired}\r\n    selectedItems={selectedItems}\r\n    onSelectionHandle={onSelectionChange}\r\n    onRowClick={onRowClick}\r\n    parentComponent={parentComponent}\r\n    terminalsToShow={terminalsToShow}\r\n  ></WijmoGridComposite>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Input, Select, Tab, DatePicker, Accordion } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getOptionsWithSelect,\r\n  getCurrentDateFormat,\r\n} from \"../../../JS/functionalUtilities\";\r\nRailReceiptManualEntryDetails.propTypes = {\r\n  modLoadingDataInfo: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    wagonCodes: PropTypes.array,\r\n    clusterCodes: PropTypes.array,\r\n    BCUCodes: PropTypes.array,\r\n    loadingArmCodes: PropTypes.array,\r\n    quantityUOMs: PropTypes.array,\r\n    densityUOMs: PropTypes.array,\r\n    temperatureUOMs: PropTypes.array,\r\n    tankCodes: PropTypes.array,\r\n    meterCodes: PropTypes.array,\r\n  }),\r\n  IsManEntryEnabled: PropTypes.bool.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onTankSearchChange: PropTypes.func.isRequired,\r\n  onMeterSearchChange: PropTypes.func.isRequired,\r\n  onTabChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  handleAttributeCellDataEdit: PropTypes.func.isRequired,\r\n  selectedFPAttributeList: PropTypes.array.isRequired,\r\n  selectedBPAttributeList: PropTypes.array.isRequired,\r\n  selectedAddAttributeList: PropTypes.array.isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function RailReceiptManualEntryDetails({\r\n  modLoadingDataInfo,\r\n  IsManEntryEnabled,\r\n  listOptions,\r\n  validationErrors,\r\n  onFieldChange,\r\n  onTankSearchChange,\r\n  onMeterSearchChange,\r\n  onTabChange,\r\n  tabActiveIndex,\r\n  isEnterpriseNode,\r\n  selectedFPAttributeList,\r\n  selectedBPAttributeList,\r\n  selectedAddAttributeList,\r\n  handleAttributeCellDataEdit,\r\n  attributeAddValidationErrors,\r\n  attributeBPValidationErrors,\r\n  attributeFPValidationErrors,\r\n  onDateTextChange,\r\n}) {\r\n  const [t] = useTranslation();\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  const generateTabPane = (listIndex, isAdditive, errorIndex) => {\r\n    let title, dataKeyName;\r\n    if (isAdditive) {\r\n      title =\r\n        t(\"BaseProductInfo_Additive\") +\r\n        \" - \" +\r\n        modLoadingDataInfo.ArrTransactionAdditive[listIndex]\r\n          .AdditiveProductCode +\r\n        \" (\" +\r\n        t(\"BPCode\") +\r\n        \" - \" +\r\n        modLoadingDataInfo.ArrTransactionAdditive[listIndex].BaseProductCode +\r\n        \")\";\r\n      dataKeyName = \"ArrTransactionAdditive\";\r\n    } else {\r\n      title =\r\n        t(\"BPCode\") +\r\n        \" - \" +\r\n        modLoadingDataInfo.ArrTransactionBP[listIndex].BaseProductCode;\r\n      dataKeyName = \"ArrTransactionBP\";\r\n    }\r\n    return (\r\n      <Tab.Pane title={title}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              indicator=\"required\"\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].GrossQuantity}\r\n              label={t(\"GrossQuantity\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\"GrossQuantity\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              error={t(validationErrors.product[errorIndex].GrossQuantity)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].NetQuantity}\r\n              label={t(\"NetQuantity\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\"NetQuantity\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              error={t(validationErrors.product[errorIndex].NetQuantity)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].Temperature}\r\n              label={t(\"Temperature\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\"Temperature\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              error={t(validationErrors.product[errorIndex].Temperature)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"MarineDispatchManualEntry_TemperatureUOM\")}\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].TemperatureUOM}\r\n              options={listOptions.temperatureUOMs}\r\n              onChange={(data) =>\r\n                onFieldChange(\"TemperatureUOM\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              reserveSpace={false}\r\n              noResultsMessage={t(\"noResultsMessage\")}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].ProductDensity}\r\n              label={t(\"Density\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\"ProductDensity\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              error={t(validationErrors.product[errorIndex].ProductDensity)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"BCU_DensityUOM\")}\r\n              value={\r\n                modLoadingDataInfo[dataKeyName][listIndex].ProductDensityUOM\r\n              }\r\n              options={listOptions.densityUOMs}\r\n              onChange={(data) =>\r\n                onFieldChange(\"ProductDensityUOM\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              reserveSpace={false}\r\n              noResultsMessage={t(\"noResultsMessage\")}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"MeterCode\")}\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].MeterCode}\r\n              options={getOptionsWithSelect(\r\n                listOptions.meterCodes,\r\n                t(\"Common_Select\")\r\n              )}\r\n              onChange={(data) =>\r\n                onFieldChange(\"MeterCode\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              search={true}\r\n              reserveSpace={false}\r\n              noResultsMessage={t(\"noResultsMessage\")}\r\n              onSearch={onMeterSearchChange}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"TankCode\")}\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].TankCode}\r\n              options={getOptionsWithSelect(\r\n                listOptions.tankCodes,\r\n                t(\"Common_Select\")\r\n              )}\r\n              onChange={(data) =>\r\n                onFieldChange(\"TankCode\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              search={true}\r\n              reserveSpace={false}\r\n              noResultsMessage={t(\"noResultsMessage\")}\r\n              onSearch={onTankSearchChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].StartTotalizer}\r\n              label={t(\"StartTotalizer\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\"StartTotalizer\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              error={t(validationErrors.product[errorIndex].StartTotalizer)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].EndTotalizer}\r\n              label={t(\"EndTotalizer\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\"EndTotalizer\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              error={t(validationErrors.product[errorIndex].EndTotalizer)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={\r\n                modLoadingDataInfo[dataKeyName][listIndex].NetStartTotalizer\r\n              }\r\n              label={t(\"MarineReceiptManualEntry_NetStartTotalizer\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\"NetStartTotalizer\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              error={t(validationErrors.product[errorIndex].NetStartTotalizer)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].NetEndTotalizer}\r\n              label={t(\"MarineReceiptManualEntry_NetEndTotalizer\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\"NetEndTotalizer\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              error={t(validationErrors.product[errorIndex].NetEndTotalizer)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].CalculatedGross}\r\n              label={t(\"LoadingDetailsEntry_CalculatedGross\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\"CalculatedGross\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              error={t(validationErrors.product[errorIndex].CalculatedGross)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Input\r\n              fluid\r\n              value={modLoadingDataInfo[dataKeyName][listIndex].CalculatedNet}\r\n              label={t(\"LoadingDetailsEntry_CalculatedNet\")}\r\n              onChange={(data) =>\r\n                onFieldChange(\"CalculatedNet\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              error={t(validationErrors.product[errorIndex].CalculatedNet)}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"LoadingDetails_CalculatedValueUOM\")}\r\n              value={\r\n                modLoadingDataInfo[dataKeyName][listIndex].CalculatedValueUOM\r\n              }\r\n              multiple={false}\r\n              options={listOptions.quantityUOMs}\r\n              onChange={(data) =>\r\n                onFieldChange(\"CalculatedValueUOM\", data, {\r\n                  type: dataKeyName,\r\n                  index: listIndex,\r\n                })\r\n              }\r\n              reserveSpace={false}\r\n              noResultsMessage={t(\"noResultsMessage\")}\r\n            />\r\n          </div>\r\n        </div>\r\n        {isAdditive ? (\r\n          <>\r\n            {selectedAddAttributeList.length > 0 &&\r\n            selectedAddAttributeList[listIndex].length > 0\r\n              ? selectedAddAttributeList[listIndex].map((attire) => (\r\n                  <ErrorBoundary>\r\n                    <Accordion>\r\n                      <Accordion.Content\r\n                        className=\"attributeAccordian\"\r\n                        title={\r\n                          isEnterpriseNode\r\n                            ? attire.TerminalCode +\r\n                              \" - \" +\r\n                              t(\"Attributes_Header\")\r\n                            : t(\"Attributes_Header\")\r\n                        }\r\n                      >\r\n                        <AttributeDetails\r\n                          selectedAttributeList={attire.attributeMetaDataList}\r\n                          handleCellDataEdit={(attribute, value) =>\r\n                            handleAttributeCellDataEdit(attribute, value, {\r\n                              type: dataKeyName,\r\n                              index: listIndex,\r\n                            })\r\n                          }\r\n                          attributeValidationErrors={handleValidationErrorFilter(\r\n                            attributeAddValidationErrors,\r\n                            attire.TerminalCode\r\n                          )}\r\n                        ></AttributeDetails>\r\n                      </Accordion.Content>\r\n                    </Accordion>\r\n                  </ErrorBoundary>\r\n                ))\r\n              : null}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {selectedBPAttributeList.length > 0 &&\r\n            selectedBPAttributeList[listIndex].length > 0\r\n              ? selectedBPAttributeList[listIndex].map((attire) => (\r\n                  <ErrorBoundary>\r\n                    <Accordion>\r\n                      <Accordion.Content\r\n                        className=\"attributeAccordian\"\r\n                        title={\r\n                          isEnterpriseNode\r\n                            ? attire.TerminalCode +\r\n                              \" - \" +\r\n                              t(\"Attributes_Header\")\r\n                            : t(\"Attributes_Header\")\r\n                        }\r\n                      >\r\n                        <AttributeDetails\r\n                          selectedAttributeList={attire.attributeMetaDataList}\r\n                          handleCellDataEdit={(attribute, value) =>\r\n                            handleAttributeCellDataEdit(attribute, value, {\r\n                              type: dataKeyName,\r\n                              index: listIndex,\r\n                            })\r\n                          }\r\n                          attributeValidationErrors={handleValidationErrorFilter(\r\n                            attributeBPValidationErrors,\r\n                            attire.TerminalCode\r\n                          )}\r\n                        ></AttributeDetails>\r\n                      </Accordion.Content>\r\n                    </Accordion>\r\n                  </ErrorBoundary>\r\n                ))\r\n              : null}\r\n          </>\r\n        )}\r\n      </Tab.Pane>\r\n    );\r\n  };\r\n\r\n  const tabPaneList = [];\r\n  let errorIndex = 1;\r\n  for (\r\n    let index = 0;\r\n    index < modLoadingDataInfo.ArrTransactionBP.length;\r\n    index++\r\n  ) {\r\n    tabPaneList.push(generateTabPane(index, false, errorIndex));\r\n    errorIndex += 1;\r\n  }\r\n  for (\r\n    let index = 0;\r\n    index < modLoadingDataInfo.ArrTransactionAdditive.length;\r\n    index++\r\n  ) {\r\n    tabPaneList.push(generateTabPane(index, true, errorIndex));\r\n    errorIndex += 1;\r\n  }\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLoadingDataInfo.CommonInfo.ReceiptCode}\r\n                disabled={true}\r\n                label={t(\"Receipt_Code\")}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLoadingDataInfo.CommonInfo.CarrierCode}\r\n                disabled={true}\r\n                label={t(\"Entity_Carrier_Code\")}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                indicator=\"required\"\r\n                disabled={IsManEntryEnabled}\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"Rail_Receipt_Wagon\")}\r\n                value={modLoadingDataInfo.CommonInfo.TrailerCode}\r\n                options={listOptions.wagonCodes}\r\n                onChange={(data) => onFieldChange(\"TrailerCode\", data)}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                indicator=\"required\"\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"RailDispatchManualEntry_Cluster\")}\r\n                value={modLoadingDataInfo.CommonInfo.BayCode}\r\n                onChange={(data) => onFieldChange(\"BayCode\", data)}\r\n                options={listOptions.clusterCodes}\r\n                error={t(validationErrors.bayCode)}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"BCU_Code\")}\r\n                value={modLoadingDataInfo.CommonInfo.BCUCode}\r\n                onChange={(data) => onFieldChange(\"BCUCode\", data)}\r\n                options={listOptions.BCUCodes}\r\n                reserveSpace={false}\r\n                indicator=\"required\"\r\n                error={t(validationErrors.BCUCode)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"UnloadingDetailsEntry_LoadingArm\")}\r\n                value={modLoadingDataInfo.TransactionFPinfo.ArmCode}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"ArmCode\", data, {\r\n                    type: \"TransactionFPinfo\",\r\n                  })\r\n                }\r\n                options={listOptions.loadingArmCodes}\r\n                reserveSpace={false}\r\n                indicator=\"required\"\r\n                error={t(validationErrors.LoadingArm)}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLoadingDataInfo.TransactionFPinfo.FinishedProductCode}\r\n                label={t(\"RailDispatchManualEntry_FinishedProduct\")}\r\n                reserveSpace={false}\r\n                disabled={IsManEntryEnabled}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLoadingDataInfo.TransactionFPinfo.TransactionID}\r\n                label={t(\"UnloadingDetailsEntry_TransactionNo\")}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"TransactionID\", data, {\r\n                    type: \"TransactionFPinfo\",\r\n                  })\r\n                }\r\n                error={t(validationErrors.common.TransactionID)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                value={modLoadingDataInfo.TransactionFPinfo.StartTime}\r\n                label={t(\"LoadingDetailsEntry_loadStartTime\")}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"StartTime\", data, {\r\n                    type: \"TransactionFPinfo\",\r\n                  })\r\n                }\r\n                type=\"datetime\"\r\n                disablePast={false}\r\n                disableFuture={true}\r\n                indicator=\"required\"\r\n                reserveSpace={false}\r\n                minuteStep={5}\r\n                showYearSelector={true}\r\n                displayFormat={getCurrentDateFormat()}\r\n                onTextChange={(data, error) => {\r\n                  onDateTextChange(\"StartTime\", data, error);\r\n                }}\r\n                error={t(validationErrors.common.StartTime)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                value={modLoadingDataInfo.TransactionFPinfo.EndTime}\r\n                label={t(\"LoadingDetailsEntry_loadEndTime\")}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"EndTime\", data, { type: \"TransactionFPinfo\" })\r\n                }\r\n                type=\"datetime\"\r\n                disablePast={false}\r\n                disableFuture={true}\r\n                indicator=\"required\"\r\n                reserveSpace={false}\r\n                minuteStep={5}\r\n                showYearSelector={true}\r\n                onTextChange={(data, error) => {\r\n                  onDateTextChange(\"EndTime\", data, error);\r\n                }}\r\n                error={t(validationErrors.common.EndTime)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"LoadingDetailsEntry_QuantityUOM\")}\r\n                value={modLoadingDataInfo.TransactionFPinfo.QuantityUOM}\r\n                multiple={false}\r\n                indicator=\"required\"\r\n                options={listOptions.quantityUOMs}\r\n                reserveSpace={false}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                value={modLoadingDataInfo.TransactionFPinfo.Remarks}\r\n                label={t(\"LoadingDetails_Remarks\")}\r\n                onChange={(data) =>\r\n                  onFieldChange(\"Remarks\", data, { type: \"TransactionFPinfo\" })\r\n                }\r\n                error={t(validationErrors.Remarks)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"shipmentTabAlignment\">\r\n            <Tab activeIndex={tabActiveIndex} onTabChange={onTabChange}>\r\n              <Tab.Pane\r\n                title={\r\n                  modLoadingDataInfo.TransactionFPinfo.FinishedProductCode ===\r\n                  \"\"\r\n                    ? t(\"FinishedProduct\")\r\n                    : t(\"FinishedProduct\") +\r\n                      \"-\" +\r\n                      modLoadingDataInfo.TransactionFPinfo.FinishedProductCode\r\n                }\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      indicator=\"required\"\r\n                      value={modLoadingDataInfo.TransactionFPinfo.GrossQuantity}\r\n                      label={t(\"Reconciliation_Quantity\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"GrossQuantity\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      error={t(validationErrors.product[0].GrossQuantity)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={modLoadingDataInfo.TransactionFPinfo.NetQuantity}\r\n                      label={t(\"NetQuantity\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"NetQuantity\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      error={t(validationErrors.product[0].NetQuantity)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={modLoadingDataInfo.TransactionFPinfo.Temperature}\r\n                      label={t(\"LoadingDetails_Temperature\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"Temperature\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      error={t(validationErrors.product[0].Temperature)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                      fluid\r\n                      placeholder={t(\"Common_Select\")}\r\n                      label={t(\"BCU_TemperatureUOM\")}\r\n                      value={\r\n                        modLoadingDataInfo.TransactionFPinfo.TemperatureUOM\r\n                      }\r\n                      options={listOptions.temperatureUOMs}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"TemperatureUOM\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      reserveSpace={false}\r\n                      noResultsMessage={t(\"noResultsMessage\")}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={\r\n                        modLoadingDataInfo.TransactionFPinfo.ProductDensity\r\n                      }\r\n                      label={t(\"BaseProductInfo_Density\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"ProductDensity\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      error={t(validationErrors.product[0].ProductDensity)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                      fluid\r\n                      placeholder={t(\"Common_Select\")}\r\n                      label={t(\"Reconciliation_DensityUOM\")}\r\n                      value={\r\n                        modLoadingDataInfo.TransactionFPinfo.ProductDensityUOM\r\n                      }\r\n                      options={listOptions.densityUOMs}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"ProductDensityUOM\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      reserveSpace={false}\r\n                      noResultsMessage={t(\"noResultsMessage\")}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                      fluid\r\n                      placeholder={t(\"Common_Select\")}\r\n                      label={t(\"MeterCode\")}\r\n                      value={modLoadingDataInfo.TransactionFPinfo.MeterCode}\r\n                      options={getOptionsWithSelect(\r\n                        listOptions.meterCodes,\r\n                        t(\"Common_Select\")\r\n                      )}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"MeterCode\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      search={true}\r\n                      reserveSpace={false}\r\n                      noResultsMessage={t(\"noResultsMessage\")}\r\n                      onSearch={onMeterSearchChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                      fluid\r\n                      placeholder={t(\"Common_Select\")}\r\n                      label={t(\"TankCode\")}\r\n                      value={modLoadingDataInfo.TransactionFPinfo.TankCode}\r\n                      options={getOptionsWithSelect(\r\n                        listOptions.tankCodes,\r\n                        t(\"Common_Select\")\r\n                      )}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"TankCode\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      search={true}\r\n                      reserveSpace={false}\r\n                      noResultsMessage={t(\"noResultsMessage\")}\r\n                      onSearch={onTankSearchChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={\r\n                        modLoadingDataInfo.TransactionFPinfo.StartTotalizer\r\n                      }\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"StartTotalizer\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      error={t(validationErrors.product[0].StartTotalizer)}\r\n                      label={t(\"StartTotalizer\")}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={modLoadingDataInfo.TransactionFPinfo.EndTotalizer}\r\n                      label={t(\"EndTotalizer\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"EndTotalizer\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      error={t(validationErrors.product[0].EndTotalizer)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={\r\n                        modLoadingDataInfo.TransactionFPinfo.NetStartTotalizer\r\n                      }\r\n                      label={t(\"ViewRailLoadingDetails_netstarttotalizer\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"NetStartTotalizer\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      error={t(validationErrors.product[0].NetStartTotalizer)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={\r\n                        modLoadingDataInfo.TransactionFPinfo.NetEndTotalizer\r\n                      }\r\n                      label={t(\"ViewRailLoadingDetails_netendtotalizer\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"NetEndTotalizer\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      error={t(validationErrors.product[0].NetEndTotalizer)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={\r\n                        modLoadingDataInfo.TransactionFPinfo.CalculatedGross\r\n                      }\r\n                      label={t(\"LoadingDetails_CalculatedGross\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"CalculatedGross\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      error={t(validationErrors.product[0].CalculatedGross)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Input\r\n                      fluid\r\n                      value={modLoadingDataInfo.TransactionFPinfo.CalculatedNet}\r\n                      label={t(\"LoadingDetails_CalculatedNet\")}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"CalculatedNet\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      error={t(validationErrors.product[0].CalculatedNet)}\r\n                      reserveSpace={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-lg-4\">\r\n                    <Select\r\n                      fluid\r\n                      placeholder={t(\"Common_Select\")}\r\n                      label={t(\"LoadingDetails_CalculatedValueUOM\")}\r\n                      value={\r\n                        modLoadingDataInfo.TransactionFPinfo.CalculatedValueUOM\r\n                      }\r\n                      options={listOptions.quantityUOMs}\r\n                      onChange={(data) =>\r\n                        onFieldChange(\"CalculatedValueUOM\", data, {\r\n                          type: \"TransactionFPinfo\",\r\n                        })\r\n                      }\r\n                      reserveSpace={false}\r\n                      noResultsMessage={t(\"noResultsMessage\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {selectedFPAttributeList.length > 0\r\n                  ? selectedFPAttributeList.map((attire) => (\r\n                      <ErrorBoundary>\r\n                        <Accordion>\r\n                          <Accordion.Content\r\n                            className=\"attributeAccordian\"\r\n                            title={\r\n                              isEnterpriseNode\r\n                                ? attire.TerminalCode +\r\n                                  \" - \" +\r\n                                  t(\"Attributes_Header\")\r\n                                : t(\"Attributes_Header\")\r\n                            }\r\n                          >\r\n                            <AttributeDetails\r\n                              selectedAttributeList={\r\n                                attire.attributeMetaDataList\r\n                              }\r\n                              handleCellDataEdit={(attribute, value) =>\r\n                                handleAttributeCellDataEdit(attribute, value, {\r\n                                  type: \"TransactionFPinfo\",\r\n                                  index: 0,\r\n                                })\r\n                              }\r\n                              attributeValidationErrors={handleValidationErrorFilter(\r\n                                attributeFPValidationErrors,\r\n                                attire.TerminalCode\r\n                              )}\r\n                            ></AttributeDetails>\r\n                          </Accordion.Content>\r\n                        </Accordion>\r\n                      </ErrorBoundary>\r\n                    ))\r\n                  : null}\r\n              </Tab.Pane>\r\n              {tabPaneList}\r\n            </Tab>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button, Modal } from \"@scuf/common\";\r\nimport {\r\n  emptyRailReceipt,\r\n  emptyRailMarineTransactionCommonInfo,\r\n  emptyRailMarineTransactionProductInfo,\r\n} from \"../../../JS/DefaultEntities\";\r\nimport { getKeyByValue } from \"../../../JS/Utilities\";\r\nimport { RailReceiptManualEntryDetails } from \"../../UIBase/Details/RailReceiptManualEntryDetails\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { railReceiptCompartmentManualEntryValidationDef } from \"../../../JS/ValidationDef\";\r\nimport {\r\n  railReceiptManualEntryFPAttributeEntity,\r\n  railReceiptManualEntryBPAttributeEntity,\r\n  railReceiptManualEntryAddAttributeEntity,\r\n} from \"../../../JS/AttributeEntity\";\r\n\r\nimport {functionGroups,fnViewRailUnLoadingDetails} from \"../../../JS/FunctionGroups\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass RailReceiptManualEntryComposite extends Component {\r\n  state = {\r\n    loadingDataInfo: {},\r\n    modLoadingDataInfo: {},\r\n    tabActiveIndex: 0,\r\n    manualEntryTabActiveIndex: 0,\r\n    SaveEnabled: true,\r\n    railReceipt: {},\r\n    modRailReceipt: {},\r\n    modRailWagon: {},\r\n    modWagonDetails: [],\r\n    modRailReceiptCompartmentPlanList: [],\r\n    isReadyToRender: false,\r\n    shareholders: this.getShareholders(),\r\n    selectedWagonRow: [],\r\n    manualEntryValidationDict: {},\r\n    selectedShareholder: \"\",\r\n    clusterCodeOptions: [],\r\n    clusterBCUOptions: [],\r\n    BCUCodeOptions: [],\r\n    loadingArmCodeOptions: [],\r\n    loadingArmCodes: [],\r\n    quantityUOMOptions: [],\r\n    densityUOMOptions: [],\r\n    temperatureUOMOptions: [],\r\n    meterCodeOptions: [],\r\n    meterCodeSearchOptions: [],\r\n    tankCodeOptions: [],\r\n    tankCodeSearchOptions: [],\r\n    wagonCodeOptions: [],\r\n    openManualEntryWarn: false,\r\n    IsManEntryEnabled: false,\r\n    isEnterpriseNode: false,\r\n    loadingArmCodeList: [],\r\n    attributeMetaDataList: [],\r\n    attributeFPMetaDataList: [],\r\n    attributeBPMetaDataList: [],\r\n    attributeAddMetaDataList: [],\r\n    selectedFPAttributeList: [],\r\n    selectedBPAttributeList: [],\r\n    selectedAddAttributeList: [],\r\n    attributeAddValidationErrors: [],\r\n\r\n    attributeFPValidationErrors: [],\r\n\r\n    attributeBPValidationErrors: [],\r\n    showAuthenticationLayout: false,\r\n    tempUnLoadingDetails: {},\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (nextProps.selectedWagonRow.TrailerCode === undefined)\r\n        this.getRailWagon(nextProps.selectedWagonRow);\r\n      this.getRailReceipt(nextProps.selectedRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptManualEntryComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  getFinishedProductCodes() {\r\n    axios(\r\n      RestAPIs.GetFinishedProductListForShareholder +\r\n      \"?ShareholderCode=\" +\r\n      \"&TransportationType=\" +\r\n      Constants.TransportationType.RAIL,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            const finishedProductOptions = result.EntityResult;\r\n            this.setState({ finishedProductOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetFinishedProductCodes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while GetFinishedProductCodes List:\", error);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n\r\n      this.getUOMs();\r\n      this.getTankCode(this.props.selectedShareholder);\r\n      this.getMeterCode();\r\n      this.getRailReceipt(this.props.selectedRow);\r\n      this.getRailBayAndBcuList();\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptManualEntryComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  //TankCodes\r\n  getTankCode(shareholder) {\r\n    axios(\r\n      RestAPIs.GetTanks + \"?ShareholderCode=\" + shareholder,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            const tankCodeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            let tankCodeSearchOptions = lodash.cloneDeep(tankCodeOptions);\r\n            if (tankCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n              tankCodeSearchOptions = tankCodeSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({\r\n              tankCodeOptions,\r\n              tankCodeSearchOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getTankCode:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getTankCode:\", error);\r\n      });\r\n  }\r\n  //MeterCodes\r\n  getMeterCode() {\r\n    axios(\r\n      RestAPIs.GetMeters,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            const meterCodeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            let meterCodeSearchOptions = lodash.cloneDeep(meterCodeOptions);\r\n            if (\r\n              meterCodeSearchOptions.length > Constants.filteredOptionsCount\r\n            ) {\r\n              meterCodeSearchOptions = meterCodeSearchOptions.slice(\r\n                0,\r\n                Constants.filteredOptionsCount\r\n              );\r\n            }\r\n            this.setState({\r\n              meterCodeOptions,\r\n              meterCodeSearchOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getMeterCode:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getMeterCode:\", error);\r\n      });\r\n  }\r\n  //BCUCodes&ClusterCodes\r\n  getRailBayAndBcuList() {\r\n    axios(\r\n      RestAPIs.GetRailBayAndBcuList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          const clusterBCUOptions = {};\r\n          const clusterCodeList = [];\r\n          if (\r\n            Array.isArray(result.EntityResult.Table) &&\r\n            result.EntityResult.Table.length > 0\r\n          ) {\r\n            for (let cluster of result.EntityResult.Table) {\r\n              clusterBCUOptions[cluster.Code] = [];\r\n              clusterCodeList.push(cluster.Code);\r\n            }\r\n          }\r\n          if (\r\n            Array.isArray(result.EntityResult.Table1) &&\r\n            result.EntityResult.Table1.length > 0\r\n          ) {\r\n            for (let BCU of result.EntityResult.Table1) {\r\n              if(clusterBCUOptions[BCU.locationCode]!==undefined)\r\n              clusterBCUOptions[BCU.locationCode].push(BCU.Code);\r\n            }\r\n          }\r\n          this.setState({\r\n            clusterBCUOptions,\r\n            clusterCodeOptions:\r\n              Utilities.transferListtoOptions(clusterCodeList),\r\n          });\r\n        } else {\r\n          console.log(\"Error in getRailBayAndBcuList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getRailBayAndBcuList:\", error);\r\n      });\r\n  }\r\n  getLoadingArms(BCUCode, callback) {\r\n    axios(\r\n      RestAPIs.GetLoadingArms + \"?bcuCode=\" + BCUCode,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          callback(result.EntityResult);\r\n        } else {\r\n          console.log(\"Error in getLoadingArms:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getLoadingArms:\", error);\r\n      });\r\n  }\r\n  getRailReceipt(selectedRow) {\r\n    var transportationType = this.getTransportationType();\r\n    emptyRailReceipt.TransportationType = transportationType;\r\n    const emptyLoadingDataInfo = {\r\n      CommonInfo: lodash.cloneDeep(emptyRailMarineTransactionCommonInfo),\r\n      TransactionFPinfo: lodash.cloneDeep(\r\n        emptyRailMarineTransactionProductInfo\r\n      ),\r\n      ArrTransactionBP: [],\r\n      ArrTransactionAdditive: [],\r\n      IsLocalLoaded: false,\r\n    };\r\n    if (selectedRow.Common_Code === undefined) {\r\n      this.setState({\r\n        railReceipt: lodash.cloneDeep(emptyRailReceipt),\r\n        modRailReceipt: lodash.cloneDeep(emptyRailReceipt),\r\n        loadingDataInfo: lodash.cloneDeep(emptyLoadingDataInfo),\r\n        isReadyToRender: true,\r\n        tabActiveIndex: 0,\r\n      });\r\n      return;\r\n    }\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.railReceiptCode,\r\n        value: selectedRow.Common_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: transportationType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.railReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailReceipt,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          emptyLoadingDataInfo.CommonInfo.LoadingType = Utilities.getKeyByValue(\r\n            Constants.LoadingDetailsType,\r\n            1\r\n          );\r\n          emptyLoadingDataInfo.CommonInfo.TransactionType = \"RECEIPT\";\r\n          emptyLoadingDataInfo.CommonInfo.TransportationType =\r\n            Constants.TransportationType.RAIL;\r\n          emptyLoadingDataInfo.CommonInfo.ReceiptCode =\r\n            result.EntityResult.ReceiptCode;\r\n          emptyLoadingDataInfo.CommonInfo.IsBonded =\r\n            result.EntityResult.IsBonded;\r\n          const wagonDetails = this.getWagonDetailsFromReceipt(\r\n            result.EntityResult\r\n          );\r\n          this.setState({\r\n            isReadyToRender: false,\r\n            railReceipt: result.EntityResult,\r\n            modRailReceipt: lodash.cloneDeep(result.EntityResult),\r\n            modWagonDetails: wagonDetails,\r\n            loadingDataInfo: lodash.cloneDeep(emptyLoadingDataInfo),\r\n            saveEnabled: true,\r\n          });\r\n          this.handleManualEntry(wagonDetails);\r\n          //this.getAttributes();\r\n        } else {\r\n          this.setState({\r\n            railReceipt: lodash.cloneDeep(emptyRailReceipt),\r\n            modRailReceipt: lodash.cloneDeep(emptyRailReceipt),\r\n            loadingDataInfo: lodash.cloneDeep(emptyLoadingDataInfo),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetCarrier:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting RailReceipt:\", error);\r\n      });\r\n  }\r\n\r\n  getTransportationType() {\r\n    var transportationType = Constants.TransportationType.RAIL;\r\n    const { genericProps } = this.props;\r\n    if (\r\n      genericProps !== undefined &&\r\n      genericProps.transportationType !== undefined\r\n    ) {\r\n      transportationType = genericProps.transportationType;\r\n    }\r\n    return transportationType;\r\n  }\r\n\r\n  getShareholders() {\r\n    return Utilities.transferListtoOptions(\r\n      this.props.userDetails.EntityResult.ShareholderList\r\n    );\r\n  }\r\n  checkManualEntryEnabled(wagonDetails) {\r\n    var trailerCode=\"\";\r\n    for (let item of wagonDetails) {\r\n      trailerCode=item.TrailerCode;\r\n      if (\r\n        item.ReceiptCompartmentStatus ===\r\n        Constants.ReceiptCompartmentStatus.UNLOAD_NOTSTARTED ||\r\n        item.ReceiptCompartmentStatus ===\r\n        Constants.ReceiptCompartmentStatus.PART_UNLOADED ||\r\n        item.ReceiptCompartmentStatus ===\r\n        Constants.ReceiptCompartmentStatus.INTERRUPTED\r\n      ) {\r\n        return item.TrailerCode;\r\n      } /*else {\r\n        this.setState({\r\n          openManualEntryWarn: true,\r\n          IsManEntryEnabled: true,\r\n          SaveEnabled: false,\r\n        });\r\n        return item.TrailerCode;\r\n      }*/\r\n    }\r\n    this.setState({\r\n      openManualEntryWarn: true,\r\n      IsManEntryEnabled: true,\r\n      SaveEnabled: false,\r\n    });\r\n    return trailerCode;\r\n  }\r\n  handleshareholderChange = (shareholderList) => {\r\n    try {\r\n      this.getTerminalsList(shareholderList);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptManualEntryComposite:Error occured on handleshareholderChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  getTankCodeSearchOptions() {\r\n    let tankCodeSearchOptions = lodash.cloneDeep(\r\n      this.state.tankCodeSearchOptions\r\n    );\r\n    let modTankCode = \"\"; //this.state.modLeakageManualEntry.TankCode;\r\n    if (\r\n      modTankCode !== null &&\r\n      modTankCode !== \"\" &&\r\n      modTankCode !== undefined\r\n    ) {\r\n      let selectedTankCode = tankCodeSearchOptions.find(\r\n        (element) => element.value.toLowerCase() === modTankCode.toLowerCase()\r\n      );\r\n      if (selectedTankCode === undefined) {\r\n        tankCodeSearchOptions.push({\r\n          text: modTankCode,\r\n          value: modTankCode,\r\n        });\r\n      }\r\n    }\r\n    return tankCodeSearchOptions;\r\n  }\r\n  getMeterCodeSearchOptions() {\r\n    let meterCodeSearchOptions = lodash.cloneDeep(\r\n      this.state.meterCodeSearchOptions\r\n    );\r\n    let modMeterCode = \"\"; //this.state.modLeakageManualEntry.MeterCode;\r\n    if (\r\n      modMeterCode !== null &&\r\n      modMeterCode !== \"\" &&\r\n      modMeterCode !== undefined\r\n    ) {\r\n      let selectedMeterCode = meterCodeSearchOptions.find(\r\n        (element) => element.value.toLowerCase() === modMeterCode.toLowerCase()\r\n      );\r\n      if (selectedMeterCode === undefined) {\r\n        meterCodeSearchOptions.push({\r\n          text: modMeterCode,\r\n          value: modMeterCode,\r\n        });\r\n      }\r\n    }\r\n    return meterCodeSearchOptions;\r\n  }\r\n  getUOMs() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            if (\r\n              Array.isArray(result.EntityResult.VOLUME) &&\r\n              Array.isArray(result.EntityResult.MASS)\r\n            ) {\r\n              const quantityUOMList = [];\r\n              result.EntityResult.VOLUME.forEach((UOM) => {\r\n                quantityUOMList.push(UOM);\r\n              });\r\n              result.EntityResult.MASS.forEach((UOM) => {\r\n                quantityUOMList.push(UOM);\r\n              });\r\n              this.setState({\r\n                quantityUOMOptions:\r\n                  Utilities.transferListtoOptions(quantityUOMList),\r\n              });\r\n            }\r\n            if (Array.isArray(result.EntityResult.DENSITY)) {\r\n              const densityUOMList = [];\r\n              result.EntityResult.DENSITY.forEach((UOM) => {\r\n                densityUOMList.push(UOM);\r\n              });\r\n              this.setState({\r\n                densityUOMOptions:\r\n                  Utilities.transferListtoOptions(densityUOMList),\r\n              });\r\n            }\r\n            if (Array.isArray(result.EntityResult.TEMPERATURE)) {\r\n              const temperatureUOMList = [];\r\n              result.EntityResult.TEMPERATURE.forEach((UOM) => {\r\n                temperatureUOMList.push(UOM);\r\n              });\r\n              this.setState({\r\n                temperatureUOMOptions:\r\n                  Utilities.transferListtoOptions(temperatureUOMList),\r\n              });\r\n            }\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in GetUOMList:\", error);\r\n      });\r\n  }\r\n  getRailReceiptCompartmentPlanListFromReceipt(railReceipt) {\r\n    let ReceiptCompartmentPlanList = [];\r\n    if (Array.isArray(railReceipt.RailMarineReceiptCompartmentPlanList)) {\r\n      railReceipt.RailMarineReceiptCompartmentPlanList.forEach(\r\n        (receiptCompartment) => {\r\n          ReceiptCompartmentPlanList.push({\r\n            ReceiptCode: receiptCompartment.ReceiptCode,\r\n            CarrierCompanyCode: receiptCompartment.CarrierCompanyCode,\r\n            SequenceNo: receiptCompartment.SequenceNo,\r\n            ReceiptCompartmentStatus: getKeyByValue(\r\n              Constants.ReceiptCompartmentStatus,\r\n              receiptCompartment.ReceiptCompartmentStatus\r\n            ),\r\n            AdjustedPlanQuantity: receiptCompartment.AdjustedPlanQuantity,\r\n            NetUnLoadedQuantity: receiptCompartment.NetUnLoadedQuantity,\r\n            UnloadedQuantity: receiptCompartment.UnloadedQuantity,\r\n            UnloadedQuantityUOM: receiptCompartment.UnloadedQuantityUOM,\r\n            PurgingRequired: receiptCompartment.PurgingRequired,\r\n            PurgingCompleted: receiptCompartment.PurgingCompleted,\r\n            AssociatedOrderItems: receiptCompartment.AssociatedOrderItems,\r\n            IsTransloading: receiptCompartment.IsTransloading,\r\n            ShareholderCode: receiptCompartment.ShareholderCode,\r\n            FinishedProductCode: receiptCompartment.FinishedProductCode,\r\n            CompartmentCode: receiptCompartment.CompartmentCode,\r\n            TrailerCode: receiptCompartment.TrailerCode,\r\n            PlannedQuantity: receiptCompartment.PlannedQuantity,\r\n            PlanQuantityUOM: receiptCompartment.PlanQuantityUOM,\r\n            CompartmentSeqNoInVehicle:\r\n              receiptCompartment.CompartmentSeqNoInVehicle,\r\n            Attributes: receiptCompartment.Attributes,\r\n            AssociatedContractItems: receiptCompartment.AssociatedContractItems,\r\n            ReceiptCompartmentTanks: receiptCompartment.ReceiptCompartmentTanks,\r\n          });\r\n        }\r\n      );\r\n    }\r\n    // receiptAssociations = Utilities.addSeqNumberToListObject(\r\n    //     receiptAssociations\r\n    // );\r\n    return ReceiptCompartmentPlanList;\r\n  }\r\n  getWagonDetailsFromReceipt(railReceipt) {\r\n    const wagonDetails = [];\r\n    const wagonCodeList = [];\r\n    if (Array.isArray(railReceipt.RailMarineReceiptCompartmentPlanList)) {\r\n      railReceipt.RailMarineReceiptCompartmentPlanList.forEach((item) => {\r\n        if (\r\n          item.ReceiptCompartmentStatus ===\r\n          Constants.ReceiptCompartmentStatus.EMPTY ||\r\n          item.ReceiptCompartmentStatus ===\r\n          Constants.ReceiptCompartmentStatus.PART_UNLOADED ||\r\n          item.ReceiptCompartmentStatus ===\r\n          Constants.ReceiptCompartmentStatus.INTERRUPTED ||\r\n          item.ReceiptCompartmentStatus ===\r\n          Constants.ReceiptCompartmentStatus.UNLOAD_NOTSTARTED\r\n        ) {\r\n          wagonCodeList.push(item.TrailerCode);\r\n        }\r\n        let wagonDetail = {\r\n          ReceiptCode: item.ReceiptCode,\r\n          TrailerCode: item.TrailerCode,\r\n          CarrierCompanyCode: item.CarrierCompanyCode,\r\n          FinishedProductCode: item.FinishedProductCode,\r\n          ReceiptCompartmentStatus: item.ReceiptCompartmentStatus,\r\n          PlannedQuantity:\r\n            item.PlannedQuantity !== null && item.PlannedQuantity !== \"\"\r\n              ? item.PlannedQuantity.toLocaleString() +\r\n              (item.PlanQuantityUOM ? \" \" + item.PlanQuantityUOM : \"\")\r\n              : \"\",\r\n          UnloadedQuantity:\r\n            item.UnloadedQuantity !== null && item.UnloadedQuantity !== \"\"\r\n              ? item.UnloadedQuantity.toLocaleString() +\r\n              (item.UnloadedQuantityUOM ? \" \" + item.UnloadedQuantityUOM : \"\")\r\n              : \"\",\r\n          ForceComplete: false,\r\n        };\r\n        wagonDetails.push(wagonDetail);\r\n      });\r\n    }\r\n    this.setState({\r\n      wagonCodeOptions: Utilities.transferListtoOptions(wagonCodeList),\r\n    });\r\n    return wagonDetails;\r\n  }\r\n  getFinishedProduct(finishedProductCode, shareHolderCode, callback) {\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.finishedProductCode,\r\n        value: finishedProductCode,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shareHolderCode,\r\n      keyDataCode: KeyCodes.finishedProductCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetFinishedProduct,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess) {\r\n          callback(result.EntityResult);\r\n        } else {\r\n          console.log(\"Error in getFinishedProduct:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Finished Product:\", error);\r\n      });\r\n  }\r\n\r\n  preprocessManualEntryData(trailerCode, callback = () => { }) {\r\n    let compartmentPlan = null;\r\n    let compartmentDetailPlan = null;\r\n    for (let item of this.state.modRailReceipt\r\n      .RailMarineReceiptCompartmentPlanList) {\r\n      if (item.TrailerCode === trailerCode) {\r\n        compartmentPlan = item;\r\n        break;\r\n      }\r\n    }\r\n    for (let item of this.state.modRailReceipt\r\n      .RailMarineReceiptCompartmentDetailPlanList) {\r\n      if (item.TrailerCode === trailerCode) {\r\n        compartmentDetailPlan = item;\r\n        break;\r\n      }\r\n    }\r\n    if (compartmentPlan !== null && compartmentDetailPlan !== null) {\r\n      if (!compartmentPlan.FinishedProductCode) {\r\n        const notification = {\r\n          messageType: \"critical\",\r\n          message: \"ViewRailReceiptManualEntry_status\",\r\n          messageResultDetails: [\r\n            {\r\n              keyFields: [\"Rail_Receipt_Wagon\"],\r\n              keyValues: [trailerCode],\r\n              isSuccess: false,\r\n              errorMessage: \"RailReceiptManualEntry_ProductNotAssigned\",\r\n            },\r\n          ],\r\n        };\r\n        this.props.onNotify(notification);\r\n        return;\r\n      }\r\n\r\n      const loadingDataInfo = lodash.cloneDeep(this.state.loadingDataInfo);\r\n      loadingDataInfo.CommonInfo.TrailerCode = trailerCode;\r\n      loadingDataInfo.CommonInfo.CarrierCode =\r\n        compartmentPlan.CarrierCompanyCode;\r\n      loadingDataInfo.TransactionFPinfo.FinishedProductCode =\r\n        compartmentPlan.FinishedProductCode;\r\n      loadingDataInfo.TransactionFPinfo.QuantityUOM =\r\n        this.state.modRailReceipt.QuantityUOM;\r\n      loadingDataInfo.TransactionFPinfo.Attributes = [];\r\n\r\n      loadingDataInfo.TransactionFPinfo.StartTime = new Date();\r\n      loadingDataInfo.TransactionFPinfo.EndTime = new Date();\r\n\r\n      this.getFinishedProduct(\r\n        compartmentPlan.FinishedProductCode,\r\n        compartmentPlan.ShareholderCode,\r\n        (entityResult) => {\r\n          loadingDataInfo.ArrTransactionBP = [];\r\n          loadingDataInfo.ArrTransactionAdditive = [];\r\n          if (\r\n            Array.isArray(entityResult.FinishedProductItems) &&\r\n            entityResult.FinishedProductItems.length > 0\r\n          ) {\r\n            for (let item of entityResult.FinishedProductItems) {\r\n              const productInfo = lodash.cloneDeep(\r\n                emptyRailMarineTransactionProductInfo\r\n              );\r\n              productInfo.FinishedProductCode = item.FinishedProductCode;\r\n              productInfo.BaseProductCode = item.BaseProductCode;\r\n              productInfo.AdditiveProductCode = item.AdditiveCode;\r\n              productInfo.Attributes = [];\r\n              if (item.AdditiveCode !== null && item.AdditiveCode !== \"\") {\r\n                loadingDataInfo.ArrTransactionAdditive.push(productInfo);\r\n              } else {\r\n                loadingDataInfo.ArrTransactionBP.push(productInfo);\r\n              }\r\n            }\r\n          }\r\n\r\n          this.setState(\r\n            {\r\n              loadingDataInfo,\r\n              isReadyToRender: true,\r\n              modLoadingDataInfo: lodash.cloneDeep(loadingDataInfo),\r\n              manualEntryValidationDict:\r\n                this.initialManualEntryValidationErrors(loadingDataInfo),\r\n            },\r\n            () => this.getAttributes()\r\n          );\r\n          callback();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getDefaultUOMs(bcuCode) {\r\n\r\n\r\n\r\n    let densityUOM = '';\r\n    let temperatureUOM = ''\r\n\r\n    if (bcuCode === '' || bcuCode === undefined)\r\n      return;\r\n\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.bcuCode,\r\n          value: bcuCode,\r\n        }\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.bcuCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetBCUDevice,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n\r\n          let bcu = result.EntityResult\r\n\r\n          temperatureUOM = bcu.TemperatureUOM;\r\n          densityUOM = bcu.DensityUOM;\r\n\r\n          let modLoadingDataInfo = lodash.cloneDeep(this.state.modLoadingDataInfo);\r\n          modLoadingDataInfo.TransactionFPinfo.TemperatureUOM = temperatureUOM;\r\n          modLoadingDataInfo.TransactionFPinfo.ProductDensityUOM = densityUOM;\r\n\r\n          modLoadingDataInfo.ArrTransactionAdditive.map(item => { item.TemperatureUOM = temperatureUOM; item.ProductDensityUOM = densityUOM; })\r\n          modLoadingDataInfo.ArrTransactionBP.map(item => { item.TemperatureUOM = temperatureUOM; item.ProductDensityUOM = densityUOM; })\r\n\r\n          this.setState({ modLoadingDataInfo });\r\n\r\n\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentManualEntryDetailsComposite:Error while getting getBCUDeviceDetails\"\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  GetMetersForLA(bcuCode, loadingArmCode) {\r\n\r\n\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.siteViewType,\r\n          value: Constants.siteViewType.RAIL_BCUVIEW,\r\n        },\r\n        {\r\n          key: KeyCodes.bcuCode,\r\n          value: bcuCode,\r\n        },\r\n        {\r\n          key: KeyCodes.terminalCode,\r\n          value: this.state.modRailReceipt.ActualTerminalCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.siteViewType,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestAPIs.GetBCUViewTree,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            Array.isArray(result.EntityResult) &&\r\n            result.EntityResult.length > 0\r\n          ) {\r\n\r\n            let loadingArm = result.EntityResult[0].AssociatedArmsList.find(larm => larm.Code === loadingArmCode);\r\n            if (loadingArm !== null) {\r\n              let modLoadingDataInfo = lodash.cloneDeep(this.state.modLoadingDataInfo);\r\n\r\n              let mainLineMeters = [];\r\n              let additiveMeters = [];\r\n              mainLineMeters = loadingArm.AssociatedMeterList.find(meter => meter.MeterLineType === \"MAINLINE\");\r\n              additiveMeters = loadingArm.AssociatedMeterList.find(meter => meter.MeterLineType === \"ADDITIVE\");\r\n              let bpMeterCode = '';\r\n              let additiveMeterCode = '';\r\n              if (mainLineMeters.MeterList.length === 1) {\r\n                bpMeterCode = mainLineMeters.MeterList[0].Code;\r\n              }\r\n              if (additiveMeters.MeterList.length === 1) {\r\n                additiveMeterCode = additiveMeters.MeterList[0].Code;\r\n              }\r\n\r\n\r\n              if (bpMeterCode !== '') {\r\n\r\n                modLoadingDataInfo.ArrTransactionBP.map(item => { item.MeterCode = bpMeterCode; })\r\n\r\n              }\r\n\r\n              if (additiveMeterCode !== '') {\r\n                modLoadingDataInfo.ArrTransactionAdditive.map(item => { item.MeterCode = additiveMeterCode; })\r\n              }\r\n\r\n              this.setState({ modLoadingDataInfo });\r\n\r\n            }\r\n\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"SiteTreeView:Error occured in GetMetersForLA\", error);\r\n    }\r\n  }\r\n\r\n  initialManualEntryValidationErrors(loadingDataInfo) {\r\n    const commonValidation = {};\r\n    const productValidation = {};\r\n    for (let key in railReceiptCompartmentManualEntryValidationDef) {\r\n      if (key === \"BayCode\" || key === \"BCUCode\" || key === \"LoadingArm\") {\r\n        continue;\r\n      } else if (\r\n        key === \"TransactionID\" ||\r\n        key === \"StartTime\" ||\r\n        key === \"EndTime\" ||\r\n        key === \"Remarks\"\r\n      ) {\r\n        commonValidation[key] = \"\";\r\n      } else {\r\n        productValidation[key] = \"\";\r\n      }\r\n    }\r\n    const manualEntryValidationDict = {\r\n      bayCode: \"\",\r\n      BCUCode: \"\",\r\n      LoadingArm: \"\",\r\n      common: commonValidation,\r\n      product: [productValidation],\r\n    };\r\n    for (let i = 0; i < loadingDataInfo.ArrTransactionBP.length; i++) {\r\n      manualEntryValidationDict.product.push(\r\n        lodash.cloneDeep(productValidation)\r\n      );\r\n    }\r\n    for (let i = 0; i < loadingDataInfo.ArrTransactionAdditive.length; i++) {\r\n      manualEntryValidationDict.product.push(\r\n        lodash.cloneDeep(productValidation)\r\n      );\r\n    }\r\n    return manualEntryValidationDict;\r\n  }\r\n  handleManualEntry(wagonDetails) {\r\n    try {\r\n      /*else {\r\n        this.setState({\r\n          openManualEntryWarn: true,\r\n          IsManEntryEnabled: true,\r\n          SaveEnabled: false,\r\n        });\r\n        return item.TrailerCode;\r\n      }*/\r\n      if (wagonDetails.length > 0) {\r\n        const trailerCode = this.checkManualEntryEnabled(wagonDetails);\r\n        this.preprocessManualEntryData(trailerCode);\r\n        \r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptDetailsComposite: Error occurred on handleManualEntry\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  handleCompartmentManualEntryChange = (\r\n    propertyName,\r\n    data,\r\n    dataPosition = {}\r\n  ) => {\r\n    try {\r\n      if (propertyName === \"TrailerCode\") {\r\n        this.preprocessManualEntryData(data);\r\n        return;\r\n      }\r\n      const modLoadingDataInfo = lodash.cloneDeep(\r\n        this.state.modLoadingDataInfo\r\n      );\r\n      const clusterBCUOptions = lodash.cloneDeep(this.state.clusterBCUOptions);\r\n      if (dataPosition.type !== undefined) {\r\n        if (dataPosition.index !== undefined) {\r\n          modLoadingDataInfo[dataPosition.type][dataPosition.index][\r\n            propertyName\r\n          ] = data;\r\n        } else {\r\n          modLoadingDataInfo[dataPosition.type][propertyName] = data;\r\n        }\r\n      } else {\r\n        modLoadingDataInfo.CommonInfo[propertyName] = data;\r\n      }\r\n      let triggerToGetLoadingArmCode = false;\r\n      if (propertyName === \"BayCode\") {\r\n\r\n        let bcuCodeList = Utilities.transferListtoOptions(\r\n          clusterBCUOptions[data]\r\n        )\r\n        this.setState({\r\n          BCUCodeOptions: Utilities.transferListtoOptions(\r\n            clusterBCUOptions[data]\r\n          ),\r\n        });\r\n\r\n        if (bcuCodeList.length === 1) {\r\n          triggerToGetLoadingArmCode = true;\r\n          modLoadingDataInfo.CommonInfo.BCUCode = clusterBCUOptions[data][0];\r\n\r\n          this.getDefaultUOMs(modLoadingDataInfo.CommonInfo.BCUCode);\r\n        }\r\n\r\n      } else if (propertyName === \"BCUCode\") {\r\n        triggerToGetLoadingArmCode = true;\r\n        this.getDefaultUOMs(modLoadingDataInfo.CommonInfo.BCUCode);\r\n      }\r\n      this.setState({ modLoadingDataInfo });\r\n      if (triggerToGetLoadingArmCode) {\r\n        this.getLoadingArms(\r\n          modLoadingDataInfo.CommonInfo.BCUCode,\r\n          (entityResult) => {\r\n            const loadingArmCodeList = [];\r\n            if (Array.isArray(entityResult)) {\r\n              for (let item of entityResult) {\r\n                loadingArmCodeList.push(item);\r\n              }\r\n              if (loadingArmCodeList.length === 1) {\r\n                modLoadingDataInfo.TransactionFPinfo.ArmCode =\r\n                  loadingArmCodeList[0];\r\n                this.GetMetersForLA(modLoadingDataInfo.CommonInfo.BCUCode, loadingArmCodeList[0]);\r\n                this.setState({\r\n                  modLoadingDataInfo,\r\n                  loadingArmCodeOptions:\r\n                    Utilities.transferListtoOptions(loadingArmCodeList),\r\n                });\r\n              }\r\n            }\r\n            this.setState({\r\n              loadingArmCodeOptions:\r\n                Utilities.transferListtoOptions(loadingArmCodeList),\r\n            });\r\n          }\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptDetailsComposite: Error occurred on handleCompartmentManualEntryChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleCompartmentManualEntryReset = () => {\r\n    try {\r\n      const loadingDataInfo = lodash.cloneDeep(this.state.loadingDataInfo);\r\n      this.setState({\r\n        modLoadingDataInfo: loadingDataInfo,\r\n        manualEntryValidationDict:\r\n          this.initialManualEntryValidationErrors(loadingDataInfo),\r\n      });\r\n      console.log(\"handleCompartmentManualEntryReset\");\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptDetailsComposite:Error occurred on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modLoadingDataInfo = lodash.cloneDeep(this.state.modLoadingDataInfo);\r\n      //let attributeList = lodash.cloneDeep(this.state.selectedAttributeList);\r\n      if (\r\n        modLoadingDataInfo.TransactionFPinfo.GrossQuantity !== null &&\r\n        modLoadingDataInfo.TransactionFPinfo.GrossQuantity !== \"\"\r\n      )\r\n        modLoadingDataInfo.TransactionFPinfo.GrossQuantity =\r\n          modLoadingDataInfo.TransactionFPinfo.GrossQuantity.toLocaleString();\r\n      if (\r\n        modLoadingDataInfo.TransactionFPinfo.NetQuantity !== null &&\r\n        modLoadingDataInfo.TransactionFPinfo.NetQuantity !== \"\"\r\n      )\r\n        modLoadingDataInfo.TransactionFPinfo.NetQuantity =\r\n          modLoadingDataInfo.TransactionFPinfo.NetQuantity.toLocaleString();\r\n      if (\r\n        modLoadingDataInfo.TransactionFPinfo.Temperature !== null &&\r\n        modLoadingDataInfo.TransactionFPinfo.Temperature !== \"\"\r\n      )\r\n        modLoadingDataInfo.TransactionFPinfo.Temperature =\r\n          modLoadingDataInfo.TransactionFPinfo.Temperature.toLocaleString();\r\n      if (\r\n        modLoadingDataInfo.TransactionFPinfo.ProductDensity !== null &&\r\n        modLoadingDataInfo.TransactionFPinfo.ProductDensity !== \"\"\r\n      )\r\n        modLoadingDataInfo.TransactionFPinfo.ProductDensity =\r\n          modLoadingDataInfo.TransactionFPinfo.ProductDensity.toLocaleString();\r\n      if (\r\n        modLoadingDataInfo.TransactionFPinfo.StartTotalizer !== null &&\r\n        modLoadingDataInfo.TransactionFPinfo.StartTotalizer !== \"\"\r\n      )\r\n        modLoadingDataInfo.TransactionFPinfo.StartTotalizer =\r\n          modLoadingDataInfo.TransactionFPinfo.StartTotalizer.toLocaleString();\r\n      if (\r\n        modLoadingDataInfo.TransactionFPinfo.EndTotalizer !== null &&\r\n        modLoadingDataInfo.TransactionFPinfo.EndTotalizer !== \"\"\r\n      )\r\n        modLoadingDataInfo.TransactionFPinfo.EndTotalizer =\r\n          modLoadingDataInfo.TransactionFPinfo.EndTotalizer.toLocaleString();\r\n      if (\r\n        modLoadingDataInfo.TransactionFPinfo.NetStartTotalizer !== null &&\r\n        modLoadingDataInfo.TransactionFPinfo.NetStartTotalizer !== \"\"\r\n      )\r\n        modLoadingDataInfo.TransactionFPinfo.NetStartTotalizer =\r\n          modLoadingDataInfo.TransactionFPinfo.NetStartTotalizer.toLocaleString();\r\n      if (\r\n        modLoadingDataInfo.TransactionFPinfo.StartTotalizer !== null &&\r\n        modLoadingDataInfo.TransactionFPinfo.StartTotalizer !== \"\"\r\n      )\r\n        modLoadingDataInfo.TransactionFPinfo.StartTotalizer =\r\n          modLoadingDataInfo.TransactionFPinfo.StartTotalizer.toLocaleString();\r\n      if (\r\n        modLoadingDataInfo.TransactionFPinfo.NetEndTotalizer !== null &&\r\n        modLoadingDataInfo.TransactionFPinfo.NetEndTotalizer !== \"\"\r\n      )\r\n        modLoadingDataInfo.TransactionFPinfo.NetEndTotalizer =\r\n          modLoadingDataInfo.TransactionFPinfo.NetEndTotalizer.toLocaleString();\r\n      if (\r\n        modLoadingDataInfo.TransactionFPinfo.CalculatedGross !== null &&\r\n        modLoadingDataInfo.TransactionFPinfo.CalculatedGross !== \"\"\r\n      )\r\n        modLoadingDataInfo.TransactionFPinfo.CalculatedGross =\r\n          modLoadingDataInfo.TransactionFPinfo.CalculatedGross.toLocaleString();\r\n      if (\r\n        modLoadingDataInfo.TransactionFPinfo.CalculatedNet !== null &&\r\n        modLoadingDataInfo.TransactionFPinfo.CalculatedNet !== \"\"\r\n      )\r\n        modLoadingDataInfo.TransactionFPinfo.CalculatedNet =\r\n          modLoadingDataInfo.TransactionFPinfo.CalculatedNet.toLocaleString();\r\n      let i = 0;\r\n      modLoadingDataInfo.ArrTransactionBP.forEach((e) => {\r\n        if (e.GrossQuantity !== null && e.GrossQuantity !== \"\")\r\n          modLoadingDataInfo.ArrTransactionBP[i].GrossQuantity =\r\n            e.GrossQuantity.toLocaleString();\r\n        if (e.NetQuantity !== null && e.NetQuantity !== \"\")\r\n          modLoadingDataInfo.ArrTransactionBP[i].NetQuantity =\r\n            e.NetQuantity.toLocaleString();\r\n        if (e.Temperature !== null && e.Temperature !== \"\")\r\n          modLoadingDataInfo.ArrTransactionBP[i].Temperature =\r\n            e.Temperature.toLocaleString();\r\n        if (e.ProductDensity !== null && e.ProductDensity !== \"\")\r\n          modLoadingDataInfo.ArrTransactionBP[i].ProductDensity =\r\n            e.ProductDensity.toLocaleString();\r\n        if (e.StartTotalizer !== null && e.StartTotalizer !== \"\")\r\n          modLoadingDataInfo.ArrTransactionBP[i].StartTotalizer =\r\n            e.StartTotalizer.toLocaleString();\r\n        if (e.EndTotalizer !== null && e.EndTotalizer !== \"\")\r\n          modLoadingDataInfo.ArrTransactionBP[i].EndTotalizer =\r\n            e.EndTotalizer.toLocaleString();\r\n        if (e.NetStartTotalizer !== null && e.NetStartTotalizer !== \"\")\r\n          modLoadingDataInfo.ArrTransactionBP[i].NetStartTotalizer =\r\n            e.NetStartTotalizer.toLocaleString();\r\n        if (e.NetEndTotalizer !== null && e.NetEndTotalizer !== \"\")\r\n          modLoadingDataInfo.ArrTransactionBP[i].NetEndTotalizer =\r\n            e.NetEndTotalizer.toLocaleString();\r\n        if (e.CalculatedGross !== null && e.CalculatedGross !== \"\")\r\n          modLoadingDataInfo.ArrTransactionBP[i].CalculatedGross =\r\n            e.CalculatedGross.toLocaleString();\r\n        if (e.CalculatedNet !== null && e.CalculatedNet !== \"\")\r\n          modLoadingDataInfo.ArrTransactionBP[i].CalculatedNet =\r\n            e.CalculatedNet.toLocaleString();\r\n      });\r\n\r\n      //attributeList = Utilities.attributesConverttoLocaleString(attributeList);\r\n      this.setState({ modLoadingDataInfo });\r\n      return modLoadingDataInfo;\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptRecordWeightDetailsComposite:Error occured on fillDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCompartmentManualEntrySave = () => {\r\n    try {\r\n      let modLoadingDataInfo = this.fillDetails();\r\n     \r\n\r\n      let attributeFPList = [];\r\n      if (this.state.selectedFPAttributeList.length > 0) {\r\n        attributeFPList = Utilities.attributesConverttoLocaleString(\r\n          this.state.selectedFPAttributeList\r\n        );\r\n      }\r\n      let attributeBPList = [];\r\n      if (this.state.selectedBPAttributeList.length > 0) {\r\n        this.state.selectedBPAttributeList.forEach((element) => {\r\n          element = Utilities.attributesConverttoLocaleString(element);\r\n          attributeBPList.push(element);\r\n        });\r\n      }\r\n      let attributeAddList = [];\r\n      if (this.state.selectedAddAttributeList.length > 0) {\r\n        this.state.selectedAddAttributeList.forEach((element) => {\r\n          element = Utilities.attributesConverttoLocaleString(element);\r\n          attributeAddList.push(element);\r\n        });\r\n      }\r\n\r\n      if (\r\n        this.validateManualEntry(\r\n          modLoadingDataInfo,\r\n          attributeFPList,\r\n          attributeBPList,\r\n          attributeAddList\r\n        )\r\n      ) {\r\n        modLoadingDataInfo = this.fillAttributeDetails(\r\n          modLoadingDataInfo,\r\n          attributeFPList,\r\n          attributeBPList,\r\n          attributeAddList\r\n        );\r\n        modLoadingDataInfo.TransactionFPinfo.GrossQuantity =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.GrossQuantity\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.NetQuantity =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.NetQuantity\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.Temperature =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.Temperature\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.ProductDensity =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.ProductDensity\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.StartTotalizer =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.StartTotalizer\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.EndTotalizer =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.EndTotalizer\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.NetStartTotalizer =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.NetStartTotalizer\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.NetEndTotalizer =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.NetEndTotalizer\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.CalculatedGross =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.CalculatedGross\r\n          );\r\n        modLoadingDataInfo.TransactionFPinfo.CalculatedNet =\r\n          Utilities.convertStringtoDecimal(\r\n            modLoadingDataInfo.TransactionFPinfo.CalculatedNet\r\n          );\r\n        for (let index in modLoadingDataInfo.ArrTransactionBP) {\r\n          modLoadingDataInfo.ArrTransactionBP[index].StartTime =\r\n            modLoadingDataInfo.TransactionFPinfo.StartTime;\r\n          modLoadingDataInfo.ArrTransactionBP[index].EndTime =\r\n            modLoadingDataInfo.TransactionFPinfo.EndTime;\r\n          modLoadingDataInfo.ArrTransactionBP[index].ArmCode =\r\n            modLoadingDataInfo.TransactionFPinfo.ArmCode;\r\n          modLoadingDataInfo.ArrTransactionBP[index].QuantityUOM =\r\n            modLoadingDataInfo.TransactionFPinfo.QuantityUOM;\r\n          modLoadingDataInfo.ArrTransactionBP[index].TransactionID =\r\n            modLoadingDataInfo.TransactionFPinfo.TransactionID;\r\n          modLoadingDataInfo.ArrTransactionBP[index].FinishedProductCode =\r\n            modLoadingDataInfo.TransactionFPinfo.FinishedProductCode;\r\n          modLoadingDataInfo.ArrTransactionBP[index].GrossQuantity =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].GrossQuantity\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].NetQuantity =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].NetQuantity\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].Temperature =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].Temperature\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].ProductDensity =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].ProductDensity\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].StartTotalizer =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].StartTotalizer\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].EndTotalizer =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].EndTotalizer\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].NetStartTotalizer =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].NetStartTotalizer\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].NetEndTotalizer =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].NetEndTotalizer\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].CalculatedGross =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].CalculatedGross\r\n            );\r\n          modLoadingDataInfo.ArrTransactionBP[index].CalculatedNet =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionBP[index].CalculatedNet\r\n            );\r\n        }\r\n        for (let index in modLoadingDataInfo.ArrTransactionAdditive) {\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].StartTime =\r\n            modLoadingDataInfo.TransactionFPinfo.StartTime;\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].EndTime =\r\n            modLoadingDataInfo.TransactionFPinfo.EndTime;\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].ArmCode =\r\n            modLoadingDataInfo.TransactionFPinfo.ArmCode;\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].QuantityUOM =\r\n            modLoadingDataInfo.TransactionFPinfo.QuantityUOM;\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].TransactionID =\r\n            modLoadingDataInfo.TransactionFPinfo.TransactionID;\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].FinishedProductCode =\r\n            modLoadingDataInfo.TransactionFPinfo.FinishedProductCode;\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].GrossQuantity =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].GrossQuantity\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].NetQuantity =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].NetQuantity\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].Temperature =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].Temperature\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].ProductDensity =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].ProductDensity\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].StartTotalizer =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].StartTotalizer\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].EndTotalizer =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].EndTotalizer\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].NetStartTotalizer =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].NetStartTotalizer\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].NetEndTotalizer =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].NetEndTotalizer\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].CalculatedGross =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].CalculatedGross\r\n            );\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].CalculatedNet =\r\n            Utilities.convertStringtoDecimal(\r\n              modLoadingDataInfo.ArrTransactionAdditive[index].CalculatedNet\r\n            );\r\n        }\r\n\r\n     //  this.saveManualEntry(modLoadingDataInfo);\r\n\r\n     let showAuthenticationLayout =\r\n     this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n       ? true\r\n       : false;\r\n       \r\n   let tempUnLoadingDetails = lodash.cloneDeep(modLoadingDataInfo);\r\n   this.setState({ showAuthenticationLayout, tempUnLoadingDetails }, () => {\r\n     if (showAuthenticationLayout === false) {\r\n       this.saveManualEntry();\r\n       }\r\n     });\r\n\r\n      } else {\r\n        this.setState({ SaveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptDetailsComposite:Error occurred on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  saveManualEntry= () => {\r\n    \r\n    this.handleAuthenticationClose();\r\n    this.setState({ SaveEnabled: false });\r\n    let modLoadingDataInfo = lodash.cloneDeep(this.state.tempUnLoadingDetails);\r\n\r\n    const keyCode = [\r\n      {\r\n        key: KeyCodes.railReceiptCode,\r\n        value: modLoadingDataInfo.CommonInfo.ReceiptCode,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.railReceiptCode,\r\n      KeyCodes: keyCode,\r\n      Entity: [modLoadingDataInfo],\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewRailReceiptManualEntry_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ViewRailReceiptDetails_ReceiptCode\"],\r\n          keyValues: [modLoadingDataInfo.CommonInfo.ReceiptCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.RailReceiptManualEntry,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ SaveEnabled: true });\r\n        } else {\r\n          this.setState({ SaveEnabled: true });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          //console.log(\"Error in saveManualEntry: \", result.ErrorList);\r\n        }\r\n        this.props.onSaved(this.state.modRailReceipt, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ SaveEnabled: true });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(modLoadingDataInfo, \"modify\", notification);\r\n      });\r\n  }\r\n  validateManualEntry(\r\n    modLoadingDataInfo,\r\n    attributeFPList,\r\n    attributeBPList,\r\n    attributeAddList\r\n  ) {\r\n    const manualEntryValidationDict = lodash.cloneDeep(\r\n      this.state.manualEntryValidationDict\r\n    );\r\n    let validateFlag = true;\r\n\r\n    manualEntryValidationDict.bayCode = Utilities.validateField(\r\n      railReceiptCompartmentManualEntryValidationDef.BayCode,\r\n      modLoadingDataInfo.CommonInfo.BayCode\r\n    );\r\n\r\n    manualEntryValidationDict.BCUCode = Utilities.validateField(\r\n      railReceiptCompartmentManualEntryValidationDef.BCUCode,\r\n      modLoadingDataInfo.CommonInfo.BCUCode\r\n    );\r\n\r\n    manualEntryValidationDict.LoadingArm = Utilities.validateField(\r\n      railReceiptCompartmentManualEntryValidationDef.LoadingArm,\r\n      modLoadingDataInfo.TransactionFPinfo.ArmCode\r\n    );\r\n\r\n    if (manualEntryValidationDict.bayCode !== \"\") {\r\n      validateFlag = false;\r\n    }\r\n\r\n    if (manualEntryValidationDict.BCUCode !== \"\") {\r\n      validateFlag = false;\r\n    }\r\n\r\n    if (manualEntryValidationDict.LoadingArm !== \"\") {\r\n      validateFlag = false;\r\n    }\r\n\r\n    for (let key in manualEntryValidationDict.common) {\r\n      manualEntryValidationDict.common[key] = Utilities.validateField(\r\n        railReceiptCompartmentManualEntryValidationDef[key],\r\n        modLoadingDataInfo.TransactionFPinfo[key]\r\n      );\r\n      if (manualEntryValidationDict.common[key] !== \"\") {\r\n        validateFlag = false;\r\n      }\r\n    }\r\n\r\n    if (\r\n      modLoadingDataInfo.TransactionFPinfo.StartTime >=\r\n      modLoadingDataInfo.TransactionFPinfo.EndTime\r\n  ) {\r\n    manualEntryValidationDict.common[\"StartTime\"] =\r\n          \"MarineReceiptManualEntry_ErrorUnloadTime\";\r\n\r\n          validateFlag = false;\r\n  }\r\n\r\n    let tabIndex;\r\n    let index = 0;\r\n    for (let data in manualEntryValidationDict.product[index]) {\r\n      manualEntryValidationDict.product[index][data] = Utilities.validateField(\r\n        railReceiptCompartmentManualEntryValidationDef[data],\r\n        modLoadingDataInfo.TransactionFPinfo[data]\r\n      );\r\n      if (manualEntryValidationDict.product[index][data] !== \"\") {\r\n        validateFlag = false;\r\n        if (tabIndex === undefined) {\r\n          tabIndex = index;\r\n        }\r\n      }\r\n    }\r\n    for (let item of modLoadingDataInfo.ArrTransactionBP) {\r\n      index += 1;\r\n      for (let key in manualEntryValidationDict.product[index]) {\r\n        manualEntryValidationDict.product[index][key] = Utilities.validateField(\r\n          railReceiptCompartmentManualEntryValidationDef[key],\r\n          item[key]\r\n        );\r\n        if (manualEntryValidationDict.product[index][key] !== \"\") {\r\n          validateFlag = false;\r\n          if (tabIndex === undefined) {\r\n            tabIndex = index;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (let item of modLoadingDataInfo.ArrTransactionAdditive) {\r\n      index += 1;\r\n      for (let key in manualEntryValidationDict.product[index]) {\r\n        manualEntryValidationDict.product[index][key] = Utilities.validateField(\r\n          railReceiptCompartmentManualEntryValidationDef[key],\r\n          item[key]\r\n        );\r\n        if (manualEntryValidationDict.product[index][key] !== \"\") {\r\n          validateFlag = false;\r\n          if (tabIndex === undefined) {\r\n            tabIndex = index;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (tabIndex !== undefined) {\r\n      this.handleManualEntryTabChange(tabIndex);\r\n    }\r\n    var attributeFPValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeFPValidationErrors\r\n    );\r\n\r\n    attributeFPList.forEach((attribute) => {\r\n      attributeFPValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n    var attributeBPValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeBPValidationErrors\r\n    );\r\n\r\n    attributeBPList.forEach((attribute) => {\r\n      attribute.forEach((att) => {\r\n        attributeBPValidationErrors.forEach((attributeValidation) => {\r\n          if (attributeValidation.TerminalCode === att.TerminalCode) {\r\n            att.attributeMetaDataList.forEach((attributeMetaData) => {\r\n              attributeValidation.attributeValidationErrors[\r\n                attributeMetaData.Code\r\n              ] = Utilities.valiateAttributeField(\r\n                attributeMetaData,\r\n                attributeMetaData.DefaultValue\r\n              );\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    var attributeAddValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeAddValidationErrors\r\n    );\r\n\r\n    attributeAddList.forEach((attribute) => {\r\n      attribute.forEach((att) => {\r\n        attributeAddValidationErrors.forEach((attributeValidation) => {\r\n          if (attributeValidation.TerminalCode === att.TerminalCode) {\r\n            att.attributeMetaDataList.forEach((attributeMetaData) => {\r\n              attributeValidation.attributeValidationErrors[\r\n                attributeMetaData.Code\r\n              ] = Utilities.valiateAttributeField(\r\n                attributeMetaData,\r\n                attributeMetaData.DefaultValue\r\n              );\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n    this.setState({\r\n      attributeFPValidationErrors,\r\n      attributeBPValidationErrors,\r\n      attributeAddValidationErrors,\r\n    });\r\n\r\n    this.setState({ manualEntryValidationDict });\r\n\r\n    return validateFlag;\r\n  }\r\n\r\n  handleTankSearchChange = (tankCode) => {\r\n    try {\r\n      let tankCodeSearchOptions = this.state.tankCodeOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(tankCode.toLowerCase())\r\n      );\r\n\r\n      if (tankCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n        tankCodeSearchOptions = tankCodeSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        tankCodeSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite: Error occurred on handleRouteSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleMeterSearchChange = (meterCode) => {\r\n    try {\r\n      let meterCodeSearchOptions = this.state.meterCodeOptions.filter((item) =>\r\n        item.value.toLowerCase().includes(meterCode.toLowerCase())\r\n      );\r\n\r\n      if (meterCodeSearchOptions.length > Constants.filteredOptionsCount) {\r\n        meterCodeSearchOptions = meterCodeSearchOptions.slice(\r\n          0,\r\n          Constants.filteredOptionsCount\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        meterCodeSearchOptions,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"LeakageManualEntryDetailsComposite: Error occurred on handleMeterSearchChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleManualEntryTabChange = (activeIndex) => {\r\n    try {\r\n      this.setState({ manualEntryTabActiveIndex: activeIndex });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptDetailsComposite: Error occurred on handleManualEntryTabChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  getAttributes() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [\r\n            railReceiptManualEntryFPAttributeEntity,\r\n            railReceiptManualEntryBPAttributeEntity,\r\n            railReceiptManualEntryAddAttributeEntity,\r\n          ],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeFPValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.RAILUNLOADINGDETAILSFP\r\n                ),\r\n              attributeBPValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.RAILUNLOADINGDETAILSBP\r\n                ),\r\n              attributeAddValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.RAILUNLOADINGDETAILSADDITIVE\r\n                ),\r\n            },\r\n            () => {\r\n              if (this.props.IsEnterpriseNode) {\r\n                this.terminalFPSelectionChange([]);\r\n                this.terminalBPSelectionChange([]);\r\n                this.terminalAddSelectionChange([]);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n  fillAttributeDetails(\r\n    modLoadingDataInfo,\r\n    attributeFPList,\r\n    attributeBPList,\r\n    attributeAddList\r\n  ) {\r\n    try {\r\n      attributeFPList = Utilities.attributesDatatypeConversion(attributeFPList);\r\n\r\n      if (attributeBPList.length > 0) {\r\n        attributeBPList.forEach((element) => {\r\n          element = Utilities.attributesDatatypeConversion(element);\r\n        });\r\n      }\r\n\r\n      if (attributeAddList.length > 0) {\r\n        attributeAddList.forEach((element) => {\r\n          element = Utilities.attributesDatatypeConversion(element);\r\n        });\r\n      }\r\n\r\n      modLoadingDataInfo.Attributes = [];\r\n      attributeFPList.forEach((comp) => {\r\n        let attribute = {\r\n          ListOfAttributeData: [],\r\n        };\r\n        attribute.TerminalCode = comp.TerminalCode;\r\n        comp.attributeMetaDataList.forEach((det) => {\r\n          attribute.ListOfAttributeData.push({\r\n            AttributeCode: det.Code,\r\n            AttributeValue: det.DefaultValue,\r\n          });\r\n        });\r\n        modLoadingDataInfo.TransactionFPinfo.Attributes.push(attribute);\r\n      });\r\n      for (let index = 0; index < attributeBPList.length; index++) {\r\n        let comp = attributeBPList[index];\r\n        comp.forEach((att) => {\r\n          let attribute = {\r\n            ListOfAttributeData: [],\r\n          };\r\n          attribute.TerminalCode = att.TerminalCode;\r\n          att.attributeMetaDataList.forEach((det) => {\r\n            attribute.ListOfAttributeData.push({\r\n              AttributeCode: det.Code,\r\n              AttributeValue: det.DefaultValue,\r\n            });\r\n          });\r\n          modLoadingDataInfo.ArrTransactionBP[index].Attributes.push(attribute);\r\n        });\r\n      }\r\n      for (let index = 0; index < attributeAddList.length; index++) {\r\n        let addComp = attributeAddList[index];\r\n        addComp.forEach((addAtt) => {\r\n          let attribute = {\r\n            ListOfAttributeData: [],\r\n          };\r\n          attribute.TerminalCode = addAtt.TerminalCode;\r\n          addAtt.attributeMetaDataList.forEach((det) => {\r\n            attribute.ListOfAttributeData.push({\r\n              AttributeCode: det.Code,\r\n              AttributeValue: det.DefaultValue,\r\n            });\r\n          });\r\n          modLoadingDataInfo.ArrTransactionAdditive[index].Attributes.push(\r\n            attribute\r\n          );\r\n        });\r\n      }\r\n      this.setState({ modLoadingDataInfo });\r\n      return modLoadingDataInfo;\r\n    } catch (error) {\r\n      console.log(\r\n        \"TankDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAttributeCellDataEdit = (attribute, value, dataPosition = {}) => {\r\n    try {\r\n      attribute.DefaultValue = value;\r\n      if (dataPosition.type === \"TransactionFPinfo\") {\r\n        const attributeFPValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeFPValidationErrors\r\n        );\r\n\r\n        attributeFPValidationErrors.forEach((attributeValidation) => {\r\n          if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n            attributeValidation.attributeValidationErrors[attribute.Code] =\r\n              Utilities.valiateAttributeField(attribute, value);\r\n          }\r\n        });\r\n        this.setState({ attributeFPValidationErrors });\r\n      } else if (dataPosition.type === \"ArrTransactionBP\") {\r\n        const attributeBPValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeBPValidationErrors\r\n        );\r\n\r\n        attributeBPValidationErrors.forEach((attributeValidation) => {\r\n          if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n            attributeValidation.attributeValidationErrors[attribute.Code] =\r\n              Utilities.valiateAttributeField(attribute, value);\r\n          }\r\n        });\r\n        this.setState({ attributeBPValidationErrors });\r\n      } else {\r\n        const attributeAddValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeAddValidationErrors\r\n        );\r\n\r\n        attributeAddValidationErrors.forEach((attributeValidation) => {\r\n          if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n            attributeValidation.attributeValidationErrors[attribute.Code] =\r\n              Utilities.valiateAttributeField(attribute, value);\r\n          }\r\n        });\r\n        this.setState({ attributeAddValidationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptManualEntryDetailsComposite:Error occured on handleAttributeCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  terminalFPSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals !== undefined && selectedTerminals !== null) {\r\n        let attributesTerminalsList = [];\r\n        var attributeMetaDataList = [];\r\n        var selectedFPAttributeList = [];\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        selectedFPAttributeList = lodash.cloneDeep(\r\n          this.state.selectedFPAttributeList\r\n        );\r\n        const attributeFPValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeFPValidationErrors\r\n        );\r\n        var modLoadingDataInfo = lodash.cloneDeep(\r\n          this.state.modLoadingDataInfo\r\n        );\r\n\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = selectedFPAttributeList.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          });\r\n\r\n          if (existitem === undefined) {\r\n            attributeMetaDataList.RAILUNLOADINGDETAILSFP.forEach(function (\r\n              attributeMetaData\r\n            ) {\r\n              if (attributeMetaData.TerminalCode === terminal) {\r\n                var Attributevalue =\r\n                  modLoadingDataInfo.TransactionFPinfo.Attributes.find(\r\n                    (Attribute) => {\r\n                      return Attribute.TerminalCode === terminal;\r\n                    }\r\n                  );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n                attributesTerminalsList.push(attributeMetaData);\r\n              }\r\n            });\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n        selectedFPAttributeList = [];\r\n        selectedFPAttributeList = attributesTerminalsList;\r\n        selectedFPAttributeList = Utilities.attributesConvertoDecimal(\r\n          selectedFPAttributeList\r\n        );\r\n\r\n        attributeFPValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n              (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n        this.setState({ selectedFPAttributeList, attributeFPValidationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptManualEntryComposite:Error occured on terminalFPSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  terminalBPSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals !== undefined && selectedTerminals !== null) {\r\n        let attributesTerminalsLists = [];\r\n\r\n        var attributeMetaDataList = [];\r\n        var selectedBPAttributeList = [];\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        selectedBPAttributeList = lodash.cloneDeep(\r\n          this.state.selectedBPAttributeList\r\n        );\r\n        const attributeBPValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeBPValidationErrors\r\n        );\r\n        var modLoadingDataInfo = lodash.cloneDeep(\r\n          this.state.modLoadingDataInfo\r\n        );\r\n\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = selectedBPAttributeList.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          });\r\n\r\n          if (existitem === undefined) {\r\n            for (let bpItem of modLoadingDataInfo.ArrTransactionBP) {\r\n              let attributesTerminalsList = [];\r\n              attributeMetaDataList.RAILUNLOADINGDETAILSBP.forEach(function (\r\n                attributeMetaData\r\n              ) {\r\n                if (attributeMetaData.TerminalCode === terminal) {\r\n                  var Attributevalue = bpItem.Attributes.find((Attribute) => {\r\n                    return Attribute.TerminalCode === terminal;\r\n                  });\r\n                  if (Attributevalue !== undefined) {\r\n                    attributeMetaData.attributeMetaDataList.forEach(function (\r\n                      attributeMetaData\r\n                    ) {\r\n                      var valueAttribute =\r\n                        Attributevalue.ListOfAttributeData.find((x) => {\r\n                          return x.AttributeCode === attributeMetaData.Code;\r\n                        });\r\n                      if (valueAttribute !== undefined)\r\n                        attributeMetaData.DefaultValue =\r\n                          valueAttribute.AttributeValue;\r\n                    });\r\n                  }\r\n                  attributesTerminalsList.push(\r\n                    lodash.cloneDeep(attributeMetaData)\r\n                  );\r\n                }\r\n              });\r\n              attributesTerminalsLists.push(attributesTerminalsList);\r\n            }\r\n          } else {\r\n            attributesTerminalsLists.push(existitem);\r\n          }\r\n        });\r\n        selectedBPAttributeList = [];\r\n        selectedBPAttributeList = attributesTerminalsLists;\r\n        attributesTerminalsLists.forEach((item) => {\r\n          item = Utilities.attributesConvertoDecimal(item);\r\n        });\r\n\r\n        attributeBPValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(\r\n              attributeValidation.attributeBPValidationErrors\r\n            ).forEach(\r\n              (key) =>\r\n                (attributeValidation.attributeBPValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n        this.setState({ selectedBPAttributeList, attributeBPValidationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptManualEntryComposite:Error occured on terminalBPSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  terminalAddSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals !== undefined && selectedTerminals !== null) {\r\n        let attributesTerminalsLists = [];\r\n        let attributesTerminalsList = [];\r\n        var attributeMetaDataList = [];\r\n        var selectedAddAttributeList = [];\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        selectedAddAttributeList = lodash.cloneDeep(\r\n          this.state.selectedAddAttributeList\r\n        );\r\n        const attributeAddValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeAddValidationErrors\r\n        );\r\n        var modLoadingDataInfo = lodash.cloneDeep(\r\n          this.state.modLoadingDataInfo\r\n        );\r\n\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = selectedAddAttributeList.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          });\r\n\r\n          if (existitem === undefined) {\r\n            for (let addItem of modLoadingDataInfo.ArrTransactionAdditive) {\r\n              attributeMetaDataList.RAILUNLOADINGDETAILSADDITIVE.forEach(\r\n                function (attributeMetaData) {\r\n                  if (attributeMetaData.TerminalCode === terminal) {\r\n                    var Attributevalue = addItem.Attributes.find(\r\n                      (Attribute) => {\r\n                        return Attribute.TerminalCode === terminal;\r\n                      }\r\n                    );\r\n                    if (Attributevalue !== undefined) {\r\n                      attributeMetaData.attributeMetaDataList.forEach(function (\r\n                        attributeMetaData\r\n                      ) {\r\n                        var valueAttribute =\r\n                          Attributevalue.ListOfAttributeData.find((x) => {\r\n                            return x.AttributeCode === attributeMetaData.Code;\r\n                          });\r\n                        if (valueAttribute !== undefined)\r\n                          attributeMetaData.DefaultValue =\r\n                            valueAttribute.AttributeValue;\r\n                      });\r\n                    }\r\n                    attributesTerminalsList.push(\r\n                      lodash.cloneDeep(attributeMetaData)\r\n                    );\r\n                  }\r\n                }\r\n              );\r\n              attributesTerminalsLists.push(attributesTerminalsList);\r\n            }\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n        selectedAddAttributeList = [];\r\n        selectedAddAttributeList = attributesTerminalsLists;\r\n        attributesTerminalsLists.forEach((item) => {\r\n          item = Utilities.attributesConvertoDecimal(item);\r\n        });\r\n\r\n        attributeAddValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(\r\n              attributeValidation.attributeAddValidationErrors\r\n            ).forEach(\r\n              (key) =>\r\n                (attributeValidation.attributeAddValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n        this.setState({\r\n          selectedAddAttributeList,\r\n          attributeAddValidationErrors,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptManualEntryComposite:Error occured on terminalAddSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (Array.isArray(attributeMetaDataList.RAILUNLOADINGDETAILSFP) && attributeMetaDataList.RAILUNLOADINGDETAILSFP.length > 0) {\r\n        this.terminalFPSelectionChange([\r\n          attributeMetaDataList.RAILUNLOADINGDETAILSFP[0].TerminalCode,\r\n        ]);\r\n      }\r\n      if (Array.isArray(attributeMetaDataList.RAILUNLOADINGDETAILSBP) && attributeMetaDataList.RAILUNLOADINGDETAILSBP.length > 0) {\r\n        this.terminalBPSelectionChange([\r\n          attributeMetaDataList.RAILUNLOADINGDETAILSBP[0].TerminalCode,\r\n        ]);\r\n      }\r\n      if (Array.isArray(attributeMetaDataList.RAILUNLOADINGDETAILSADDITIVE) && attributeMetaDataList.RAILUNLOADINGDETAILSADDITIVE.length > 0) {\r\n        this.terminalAddSelectionChange([\r\n          attributeMetaDataList.RAILUNLOADINGDETAILSADDITIVE[0].TerminalCode,\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      var manualEntryValidationDict = lodash.cloneDeep(\r\n        this.state.manualEntryValidationDict\r\n      );\r\n      var modLoadingDataInfo = lodash.cloneDeep(this.state.modLoadingDataInfo);\r\n      manualEntryValidationDict.common[propertyName] = error;\r\n      modLoadingDataInfo.TransactionFPinfo[propertyName] = value;\r\n      this.setState({ manualEntryValidationDict, modLoadingDataInfo });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentManualEntryDetailsComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeFPValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.RAILUNLOADINGDETAILSFP\r\n          ),\r\n        attributeBPValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.RAILUNLOADINGDETAILSBP\r\n          ),\r\n        attributeAddValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.RAILUNLOADINGDETAILSADDITIVE\r\n          ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  renderModal() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal\r\n            onClose={() => this.setState({ openManualEntryWarn: false })}\r\n            size=\"mini\"\r\n            open={this.state.openManualEntryWarn}\r\n            closeOnDimmerClick={false}\r\n          >\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"WagonStatusForManualEntryInvalid\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                content={t(\"ViewMarineReceiptList_Cancel\")}\r\n                onClick={() => this.setState({ openManualEntryWarn: false })}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        {this.renderModal()}\r\n        <ErrorBoundary>\r\n          <RailReceiptManualEntryDetails\r\n            IsManEntryEnabled={this.state.IsManEntryEnabled}\r\n            modLoadingDataInfo={this.state.modLoadingDataInfo}\r\n            validationErrors={this.state.manualEntryValidationDict}\r\n            listOptions={{\r\n              wagonCodes: this.state.wagonCodeOptions,\r\n              clusterCodes: this.state.clusterCodeOptions,\r\n              BCUCodes: this.state.BCUCodeOptions,\r\n              loadingArmCodes: this.state.loadingArmCodeOptions,\r\n              quantityUOMs: this.state.quantityUOMOptions,\r\n              densityUOMs: this.state.densityUOMOptions,\r\n              temperatureUOMs: this.state.temperatureUOMOptions,\r\n              tankCodes: this.getTankCodeSearchOptions(),\r\n              meterCodes: this.getMeterCodeSearchOptions(),\r\n            }}\r\n            onFieldChange={this.handleCompartmentManualEntryChange}\r\n            onTankSearchChange={this.handleTankSearchChange}\r\n            onMeterSearchChange={this.handleMeterSearchChange}\r\n            onTabChange={this.handleManualEntryTabChange}\r\n            tabActiveIndex={this.state.manualEntryTabActiveIndex}\r\n            selectedFPAttributeList={this.state.selectedFPAttributeList}\r\n            selectedBPAttributeList={this.state.selectedBPAttributeList}\r\n            selectedAddAttributeList={this.state.selectedAddAttributeList}\r\n            attributeBPValidationErrors={this.state.attributeBPValidationErrors}\r\n            attributeFPValidationErrors={this.state.attributeFPValidationErrors}\r\n            attributeAddValidationErrors={\r\n              this.state.attributeAddValidationErrors\r\n            }\r\n            onDateTextChange={this.handleDateTextChange}\r\n            handleAttributeCellDataEdit={this.handleAttributeCellDataEdit}\r\n          ></RailReceiptManualEntryDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleCompartmentManualEntrySave}\r\n            handleReset={this.handleCompartmentManualEntryReset}\r\n            saveEnabled={this.state.SaveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n                    <UserAuthenticationLayout\r\n                        Username={this.props.userDetails.EntityResult.UserName}\r\n                        functionName={functionGroups.add}\r\n                        functionGroup={fnViewRailUnLoadingDetails}\r\n                        handleOperation={this.saveManualEntry}\r\n                        handleClose={this.handleAuthenticationClose}\r\n                    ></UserAuthenticationLayout>\r\n                    ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nconst mapWagonToProps = (receipt) => {\r\n  return {\r\n    userActions: bindActionCreators(getUserDetails, receipt),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapWagonToProps\r\n)(RailReceiptManualEntryComposite);\r\n\r\nRailReceiptManualEntryComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { Input, Select, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nRailReceiptLoadSpotAssignDetails.propTypes = {\r\n  listOptions: PropTypes.shape({\r\n    spurCodes: PropTypes.array,\r\n    clusterCodes: PropTypes.array,\r\n    BCUCodes: PropTypes.array,\r\n  }).isRequired,\r\n  IsAuthorizeEnable: PropTypes.bool,\r\n  modRailWagonBatchPlanList: PropTypes.array,\r\n  onCellDataEdit: PropTypes.func.isRequired,\r\n  onAuthorize: PropTypes.func.isRequired,\r\n  railReceipt: PropTypes.object.isRequired,\r\n};\r\n\r\nexport function RailReceiptLoadSpotAssignDetails({\r\n  listOptions,\r\n  modRailWagonBatchPlanList,\r\n  onCellDataEdit,\r\n  onAuthorize,\r\n  railReceipt,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  const handleCustomEditDropDown = (cellData, dropDownOptions) => {\r\n    return (\r\n      <Select\r\n        className=\"selectDropwdown\"\r\n        value={modRailWagonBatchPlanList[cellData.rowIndex][cellData.field]}\r\n        fluid\r\n        options={dropDownOptions}\r\n        onChange={(value) => onCellDataEdit(value, cellData)}\r\n        indicator=\"required\"\r\n        reserveSpace={false}\r\n        search={true}\r\n        noResultsMessage={t(\"noResultsMessage\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleCustomEditTextBox = (cellData) => {\r\n    return (\r\n      <Input\r\n        fluid\r\n        value={modRailWagonBatchPlanList[cellData.rowIndex][cellData.field]}\r\n        onChange={(value) => onCellDataEdit(value, cellData)}\r\n        reserveSpace={false}\r\n      />\r\n    );\r\n  };\r\n  const AuthorizeButton = (cellData) => {\r\n    // let rowIndex = modRailWagonBatchPlanList.findIndex(\r\n    //   (item) => item.UniqueID === cellData.rowData.UniqueID\r\n    // );\r\n    return (\r\n      <div\r\n        className={\r\n          \"compartmentIconContainer\" +\r\n          (cellData.value ? \" gridButtonFontColor\" : \"\")\r\n        }\r\n      >\r\n        <div\r\n          onClick={() => onAuthorize(cellData.rowData)}\r\n          className=\"compartmentIcon\"\r\n        >\r\n          <div className=\"margin_l10\">\r\n            <h5 className=\"font14\">{t(\"RailDispatchPlanInfo_Authorize\")}</h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const decimalDisplayValues = (cellData) => {\r\n    const { value } = cellData;\r\n    if (typeof value === \"number\") {\r\n      return value.toLocaleString();\r\n    } else {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"detailsContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                indicator=\"required\"\r\n                value={railReceipt.ReceiptCode}\r\n                label={t(\"ViewReceiptList_ReceiptCode\")}\r\n                editable={false}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <DatePicker\r\n                fluid\r\n                indicator=\"required\"\r\n                // value={railReceipt.ScheduledDate}\r\n                value={\r\n                  railReceipt.ScheduledDate === null ||\r\n                  railReceipt.ScheduledDate === undefined ||\r\n                  railReceipt.ScheduledDate === \"\"\r\n                    ? \"\"\r\n                    : new Date(railReceipt.ScheduledDate)\r\n                }\r\n                label={t(\"UnLoadingInfo_ScheduledDate\")}\r\n                // editable={false}\r\n                type=\"datetime\"\r\n                minuteStep=\"5\"\r\n                displayFormat={getCurrentDateFormat()}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-4\">\r\n              <Input\r\n                fluid\r\n                indicator=\"required\"\r\n                value={railReceipt.ReceiptStatus}\r\n                label={t(\"Receipt_ReceiptStatus\")}\r\n                editable={false}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 detailsTable\">\r\n              <DataTable data={modRailWagonBatchPlanList}>\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"RailWagonCode\"\r\n                  field=\"RailWagonCode\"\r\n                  header={t(\"ViewRailLoadingDetails_RailWagonCode\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"CarrierCompanyCode\"\r\n                  field=\"CarrierCompanyCode\"\r\n                  header={t(\"ViewRailLoadingDetails_CarrierCompany\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"FinishedProduct\"\r\n                  field=\"FinishedProduct\"\r\n                  header={t(\"ViewRailDispatchList_FinishedProductCode\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"PresetQuantity\"\r\n                  field=\"PresetQuantity\"\r\n                  header={t(\"RailDispatchTrainAssignment_PresetQuantity\")}\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"SpurCode\"\r\n                  field=\"SpurCode\"\r\n                  header={t(\"Spur_Code\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditDropDown(cellData, listOptions.spurCodes)\r\n                  }\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"ClusterCode\"\r\n                  field=\"ClusterCode\"\r\n                  header={t(\"RailDispatchManualEntry_Cluster\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditDropDown(cellData, listOptions.clusterCodes)\r\n                  }\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"BCUCode\"\r\n                  field=\"BCUCode\"\r\n                  header={t(\"ViewRailLoadingDetails_BCUCode\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditDropDown(cellData, listOptions.BCUCodes)\r\n                  }\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"ArmNoInBCU\"\r\n                  field=\"ArmNoInBCU\"\r\n                  header={t(\"LoadingArmInfo_ArmNoInBCU\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditTextBox(cellData)\r\n                  }\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"LoadingSequenceNo\"\r\n                  field=\"LoadingSequenceNo\"\r\n                  header={t(\"RailDispatchLoadSpotAssign_LoadingSeq\")}\r\n                  editable={true}\r\n                  editFieldType=\"text\"\r\n                  renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                  customEditRenderer={(cellData) =>\r\n                    handleCustomEditTextBox(cellData)\r\n                  }\r\n                />\r\n                <DataTable.Column\r\n                  className=\"compColHeight\"\r\n                  key=\"AllowAuthorize\"\r\n                  field=\"AllowAuthorize\"\r\n                  header={t(\"RailDispatchPlanInfo_Authorize\")}\r\n                  renderer={(cellData) => AuthorizeButton(cellData)}\r\n                />\r\n              </DataTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { RailReceiptLoadSpotAssignDetails } from \"../../UIBase/Details/RailReceiptLoadSpotAssignDetails\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as getUserDetails from \"../../../Redux/Actions/GetUserDetails\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport lodash from \"lodash\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { emptyRailReceipt } from \"../../../JS/DefaultEntities\";\r\nimport { railReceiptLoadSpotAssignmentDef } from \"../../../JS/DetailsTableValidationDef\";\r\nimport { functionGroups, fnRailReceiptUnloadSpotAssignment } from \"../../../JS/FunctionGroups\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nimport CommonConfirmModal from \"../../UIBase/Common/CommonConfirmModal\"\r\n\r\nclass RailReceiptLoadSpotAssignmentComposite extends Component {\r\n  state = {\r\n    spurCodeOptions: [],\r\n    loadSpotClusterCodeOptions: [],\r\n    loadSpotBCUCodeOptions: [],\r\n    railWagonBatchPlanList: {},\r\n    modRailWagonBatchPlanList: {},\r\n    loadSpotAssignmentSaveEnabled: false,\r\n    isReadyToRender: false,\r\n    railReceipt: {},\r\n    showAuthenticationLayout: false,\r\n    isShowMultipleSpurs:false,\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (nextProps.selectedWagonRow.TrailerCode === undefined)\r\n        this.getRailWagon(nextProps.selectedWagonRow);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptLoadSpotAssignmentComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  getRailLoadSpotDevices(ParentEntityCode, EntityType) {\r\n    axios(\r\n      RestAPIs.GetRailLoadSpotDevices +\r\n      \"?ParentEntityCode=\" +\r\n      ParentEntityCode +\r\n      \"&EntityType=\" +\r\n      EntityType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true && Array.isArray(result.EntityResult)) {\r\n          if (EntityType === \"SPUR\") {\r\n            this.setState({\r\n              spurCodeOptions: Utilities.transferListtoOptions(\r\n                result.EntityResult\r\n              ),\r\n            });\r\n          } else if (EntityType === \"CLUSTER\") {\r\n            this.setState({\r\n              loadSpotClusterCodeOptions: Utilities.transferListtoOptions(\r\n                result.EntityResult\r\n              ),\r\n            });\r\n          } else if (EntityType === \"BCU\") {\r\n            this.setState({\r\n              loadSpotBCUCodeOptions: Utilities.transferListtoOptions(\r\n                result.EntityResult\r\n              ),\r\n            });\r\n          }\r\n          this.setState({ isReadyToRender: true });\r\n        } else {\r\n          console.log(\"Error in getRailLoadSpotDevices: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in getRailLoadSpotDevices: \", error);\r\n      });\r\n  }\r\n\r\n  GetRailLoadSpot(rowindx, EntityCode, EntityType) {\r\n    axios(\r\n      RestAPIs.GetRailLoadSpot +\r\n      \"?EntityCode=\" +\r\n      EntityCode +\r\n      \"&EntityType=\" +\r\n      EntityType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((Loadresponse) => {\r\n        const result = Loadresponse.data;\r\n        var modRailWagonBatchPlanList = lodash.cloneDeep(\r\n          this.state.modRailWagonBatchPlanList\r\n        );\r\n        if (result.IsSuccess === true) {\r\n          modRailWagonBatchPlanList[rowindx].BCUCode =\r\n            result.EntityResult.BCUCode;\r\n          modRailWagonBatchPlanList[rowindx].ClusterCode =\r\n            result.EntityResult.ClusterCode;\r\n          modRailWagonBatchPlanList[rowindx].ArmNoInBCU =\r\n            result.EntityResult.ArmNoInBCU;\r\n          if (\r\n            modRailWagonBatchPlanList[rowindx].ClusterCode !== null ||\r\n            modRailWagonBatchPlanList[rowindx].ClusterCode !== \"\"\r\n          ) {\r\n            this.getRailLoadSpotDevices(\r\n              modRailWagonBatchPlanList[rowindx].ClusterCode,\r\n              \"BCU\"\r\n            );\r\n          }\r\n          this.setState({\r\n            modRailWagonBatchPlanList,\r\n            isReadyToRender: true,\r\n          });\r\n        } else {\r\n          console.log(\"Error in GetRailLoadSpot: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in GetRailLoadSpot: \", error);\r\n      });\r\n  }\r\n  getRailReceipt(selectedRow) {\r\n    var transportationType = this.getTransportationType();\r\n    emptyRailReceipt.TransportationType = transportationType;\r\n    if (selectedRow.Common_Code === undefined) {\r\n      this.setState({\r\n        railReceipt: { ...emptyRailReceipt },\r\n        isReadyToRender: true,\r\n      });\r\n      return;\r\n    }\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.railReceiptCode,\r\n        value: selectedRow.Common_Code,\r\n      },\r\n      {\r\n        key: KeyCodes.transportationType,\r\n        value: transportationType,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.railReceiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailReceipt,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          // if (result.EntityResult.ReceiptStatus === \"READY\") {\r\n          //   this.setState({\r\n          //     isReadyToRender: true,\r\n          //     railReceipt: lodash.cloneDeep(result.EntityResult),\r\n          //   });\r\n          // } else {\r\n          //   this.setState({\r\n          //     isReadyToRender: true,\r\n          //     railReceipt: lodash.cloneDeep(result.EntityResult),\r\n          //   });\r\n          // }\r\n          this.setState({\r\n            isReadyToRender: true,\r\n            railReceipt: lodash.cloneDeep(result.EntityResult),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            railReceipt: lodash.cloneDeep(emptyRailReceipt),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetRailReceipt:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting railReceipt:\", error);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getRailReceipt(this.props.selectedRow);\r\n      this.initialLoadSpotAssignmentList();\r\n      this.getRailLoadSpotDevices(\"\", \"SPUR\");\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptLoadSpotAssignmentComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getTransportationType() {\r\n    var transportationType = Constants.TransportationType.RAIL;\r\n    const { genericProps } = this.props;\r\n    if (\r\n      genericProps !== undefined &&\r\n      genericProps.transportationType !== undefined\r\n    ) {\r\n      transportationType = genericProps.transportationType;\r\n    }\r\n    return transportationType;\r\n  }\r\n\r\n  getShareholders() {\r\n    return Utilities.transferListtoOptions(\r\n      this.props.userDetails.EntityResult.ShareholderList\r\n    );\r\n  }\r\n\r\n  handleshareholderChange = (shareholderList) => {\r\n    try {\r\n      this.getTerminalsList(shareholderList);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptLoadSpotAssignmentComposite:Error occured on handleshareholderChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  initialLoadSpotAssignmentList(callback = () => { }) {\r\n    var KeyCode = [\r\n      {\r\n        key: KeyCodes.receiptCode,\r\n        value: this.props.selectedRow.Common_Code,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      KeyCodes: KeyCode,\r\n      keyDataCode: KeyCodes.railReceiptCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailReceiptBatchPlanDetails,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true && Array.isArray(result.EntityResult)) {\r\n          this.setState({\r\n            railWagonBatchPlanList: result.EntityResult,\r\n            modRailWagonBatchPlanList: lodash.cloneDeep(result.EntityResult),\r\n            loadSpotAssignmentSaveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnRailReceiptUnloadSpotAssignment\r\n          ),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            railWagonBatchPlanList: [],\r\n            modRailWagonBatchPlanList: [],\r\n            loadSpotAssignmentSaveEnabled: false,\r\n          });\r\n          console.log(\r\n            \"Error in GetRailReceiptBatchPlanDetails: \",\r\n            result.ErrorList\r\n          );\r\n        }\r\n        callback();\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          railWagonBatchPlanList: [],\r\n          modRailWagonBatchPlanList: [],\r\n          loadSpotAssignmentSaveEnabled: false,\r\n        });\r\n        console.log(\r\n          \"Error while getting GetRailReceiptBatchPlanDetails: \",\r\n          error\r\n        );\r\n      });\r\n  }\r\n  handleLoadSpotAssignmentAssignWagon = (railWagonBatchPlan) => {\r\n    try {\r\n      if (railWagonBatchPlan.AllowAuthorize) {\r\n        const obj = {\r\n          ShareHolderCode:\r\n            this.props.userDetails.EntityResult.PrimaryShareholder,\r\n          keyDataCode: KeyCodes.railReceiptCode,\r\n          KeyCodes: [\r\n            {\r\n              key: KeyCodes.railReceiptCode,\r\n              value: this.props.selectedRow.Common_Code,\r\n            },\r\n          ],\r\n          Entity: railWagonBatchPlan,\r\n        };\r\n        const notification = {\r\n          messageType: \"critical\",\r\n          message: \"ShipmentCompDetail_SavedStatus\",\r\n          messageResultDetails: [\r\n            {\r\n              keyFields: [\"Rail_Receipt_Wagon\"],\r\n              keyValues: [railWagonBatchPlan.RailWagonCode],\r\n              isSuccess: false,\r\n              errorMessage: \"\",\r\n            },\r\n          ],\r\n        };\r\n        axios(\r\n          RestAPIs.RailReceiptAuthorizeRailWagonPlan,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            const result = response.data;\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\";\r\n            notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n            if (result.IsSuccess === true) {\r\n              notification.message = \"RailReceipt_BatchAuthorize_Success\";\r\n            } else {\r\n              notification.messageResultDetails[0].errorMessage =\r\n                result.ErrorList[0];\r\n              console.log(\r\n                \"Error in handleLoadSpotAssignmentAssignWagon: \",\r\n                result.ErrorList\r\n              );\r\n            }\r\n            this.props.onSaved(this.props.selectedRow, \"Authorize\", notification);\r\n          })\r\n          .catch((error) => {\r\n            notification.messageResultDetails[0].errorMessage = error;\r\n            this.props.onSaved(this.props.selectedRow, \"Authorize\", notification);\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptDetailsComposite: Error occurred on handleLoadSpotAssignmentAssignWagon\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleLoadSpotAssignmentCellDataEdit = (newVal, cellData) => {\r\n    const modRailWagonBatchPlanList = lodash.cloneDeep(\r\n      this.state.modRailWagonBatchPlanList\r\n    );\r\n\r\n    modRailWagonBatchPlanList[cellData.rowIndex][cellData.field] = newVal;\r\n\r\n    if (cellData.field === \"SpurCode\") {\r\n      this.getRailLoadSpotDevices(newVal, \"CLUSTER\");\r\n      this.GetRailLoadSpot(cellData.rowIndex, newVal, \"SPUR\");\r\n    } else if (cellData.field === \"ClusterCode\") {\r\n      this.getRailLoadSpotDevices(newVal, \"BCU\");\r\n    }\r\n    this.setState({ modRailWagonBatchPlanList });\r\n  };\r\n  handleLoadSpotAssignReset = () => {\r\n    this.setState({\r\n      modRailWagonBatchPlanList: lodash.cloneDeep(\r\n        this.state.railWagonBatchPlanList\r\n      ),\r\n    });\r\n  };\r\n\r\n  saveLoadSpotAssign = () => {\r\n    this.handleAuthenticationClose();\r\n    const modRailWagonBatchPlanList = lodash.cloneDeep(\r\n      this.state.modRailWagonBatchPlanList\r\n    );\r\n\r\n    this.setState({ loadSpotAssignmentSaveEnabled: false });\r\n    const obj = {\r\n      ShareHolderCode:\r\n        this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      keyDataCode: KeyCodes.railReceiptCode,\r\n      KeyCodes: [\r\n        {\r\n          key: KeyCodes.railReceiptCode,\r\n          value: this.props.selectedRow.Common_Code,\r\n        },\r\n      ],\r\n      Entity: modRailWagonBatchPlanList,\r\n    };\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewRailReceipt_LoadSportAssignment_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ViewReceipt_ReceiptCode\"],\r\n          keyValues: [this.props.selectedRow.Common_Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateRailReceiptBatchPlan,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess\r\n          ? \"success\"\r\n          : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.initialLoadSpotAssignmentList();\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n        loadSpotAssignmentSaveEnabled: Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.modify,\r\n        fnRailReceiptUnloadSpotAssignment\r\n      ),\r\n          });\r\n          console.log(\r\n            \"Error in handleLoadSpotAssignSave: \",\r\n            result.ErrorList\r\n          );\r\n        }\r\n        this.props.onSaved(\r\n          this.props.selectedRow,\r\n          \"Update\",\r\n          notification\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          loadSpotAssignmentSaveEnabled: true,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(\r\n          this.props.selectedRow,\r\n          \"Update\",\r\n          notification\r\n        );\r\n      });\r\n\r\n  }\r\n\r\n  handleLoadSpotAssignSave = () => {\r\n    try {\r\n     \r\n      const modRailWagonBatchPlanList = lodash.cloneDeep(\r\n        this.state.modRailWagonBatchPlanList\r\n      );\r\n      if (this.validateLoadSpotAssignSave(modRailWagonBatchPlanList)) {\r\n       \r\n        let differentSpurs= false;\r\n        modRailWagonBatchPlanList.forEach(function(item){\r\n          let resArr  = modRailWagonBatchPlanList.filter(x => x.SpurCode != item.SpurCode);\r\n          if(resArr.length>0)\r\n          {\r\n            differentSpurs= true;\r\n          }\r\n           \r\n        });\r\n        \r\n     if(differentSpurs)\r\n     {\r\n      this.setState({ isShowMultipleSpurs: true });\r\n     }\r\n     else\r\n     {\r\n        this.saveLoadSpotAfterConfirm()\r\n     }\r\n\r\n      } else {\r\n        this.setState({ loadSpotAssignmentSaveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnRailReceiptUnloadSpotAssignment\r\n          ) });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptDetailsComposite: Error occurred on handleLoadSpotAssignSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  saveLoadSpotAfterConfirm  = () => {\r\n    \r\n    this.setState({ isShowMultipleSpurs: false });\r\n    \r\n    let showAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n  \r\n    this.setState({ showAuthenticationLayout, }, () => {\r\n      if (showAuthenticationLayout === false) {\r\n        this.saveLoadSpotAssign();\r\n      }})\r\n\r\n  }\r\n\r\n  validateLoadSpotAssignSave(modRailWagonBatchPlanList) {\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewRailReceipt_LoadSportAssignment_status\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    const railReceiptLoadSpotAssignmentDefMod = lodash.cloneDeep(\r\n      railReceiptLoadSpotAssignmentDef\r\n    );\r\n    for (let item of modRailWagonBatchPlanList) {\r\n      railReceiptLoadSpotAssignmentDefMod.forEach((col) => {\r\n        let error = \"\";\r\n        if (col.validator !== undefined) {\r\n          error = Utilities.validateField(col.validator, item[col.field]);\r\n        }\r\n        if (error !== \"\") {\r\n          notification.messageResultDetails.push({\r\n            keyFields: [\"Receipt_Code\", col.displayName],\r\n            keyValues: [this.props.selectedRow.Common_Code, item[col.field]],\r\n            isSuccess: false,\r\n            errorMessage: error,\r\n          });\r\n        }\r\n      });\r\n    }\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.props.selectedRow, \"Validate\", notification);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.railReceipt.ReceiptCode}\r\n            newEntityName=\"RailReceiptLoadSpotAssign_PageTitle\"\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <RailReceiptLoadSpotAssignDetails\r\n            listOptions={{\r\n              spurCodes: this.state.spurCodeOptions,\r\n              clusterCodes: this.state.loadSpotClusterCodeOptions,\r\n              BCUCodes: this.state.loadSpotBCUCodeOptions,\r\n            }}\r\n            railReceipt={this.state.railReceipt}\r\n            modRailWagonBatchPlanList={this.state.modRailWagonBatchPlanList}\r\n            onCellDataEdit={this.handleLoadSpotAssignmentCellDataEdit}\r\n            onAuthorize={this.handleLoadSpotAssignmentAssignWagon}\r\n          ></RailReceiptLoadSpotAssignDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n              <CommonConfirmModal isOpen={this.state.isShowMultipleSpurs} confirmMessage=\"Confirm_RailReceiptSave\"\r\n                  handleNo={() => { this.setState({ isShowMultipleSpurs:false });\r\n                }} handleYes={() => this.saveLoadSpotAfterConfirm()}></CommonConfirmModal>\r\n          </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleLoadSpotAssignSave}\r\n            handleReset={this.handleLoadSpotAssignReset}\r\n            saveEnabled={this.state.loadSpotAssignmentSaveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n\r\n        {this.state.showAuthenticationLayout  \r\n          ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.modify}\r\n            functionGroup={fnRailReceiptUnloadSpotAssignment}\r\n             handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.saveLoadSpotAssign}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nconst mapWagonToProps = (receipt) => {\r\n  return {\r\n    userActions: bindActionCreators(getUserDetails, receipt),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapWagonToProps\r\n)(RailReceiptLoadSpotAssignmentComposite);\r\n\r\nRailReceiptLoadSpotAssignmentComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\n\r\nRailReceiptUnLoadingDetails.propTypes = {\r\n  tableData: PropTypes.array,\r\n  handleBack: PropTypes.func.isRequired,\r\n};\r\n\r\nRailReceiptUnLoadingDetails.defaultProps = {};\r\n\r\nexport function RailReceiptUnLoadingDetails({ tableData, handleBack }) {\r\n  const [t] = useTranslation();\r\n  const convertNumberWithUOM = (quantityString) => {\r\n    try {\r\n      if (\r\n        quantityString === null ||\r\n        quantityString === undefined ||\r\n        quantityString === \" \"\r\n      ) {\r\n        return \"\";\r\n      }\r\n      const quantityList = quantityString.split(\" \", 2);\r\n      if (quantityList.length !== 2) {\r\n        return \"\";\r\n      }\r\n      if (quantityList[0] === \"\") {\r\n        return \"\";\r\n      }\r\n      return (\r\n        parseFloat(quantityList[0]).toLocaleString() + \" \" + quantityList[1]\r\n      );\r\n    } catch (error) {\r\n      console.log(\"Error in convertNumberWithUOM \" + quantityString);\r\n      return quantityString;\r\n    }\r\n  };\r\n  const changeNoSpaceNumber = (e) => {\r\n    const { value } = e;\r\n    if (value != null && value !== \"\") {\r\n      return value.toLocaleString();\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"detailsContainer\">\r\n      <div className=\"row\">\r\n        <div className=\"detailsTable loadingTable\">\r\n          <DataTable\r\n            data={tableData}\r\n            scrollable={true}\r\n            bAutoWidth={true}\r\n            scrollHeight=\"450px\"\r\n            resizableColumns={true}\r\n          >\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"CompartmentSeqNoInVehicle\"\r\n              field=\"CompartmentSeqNoInVehicle\"\r\n              initialWidth=\"125px\"\r\n              header={t(\"RailDispatchTrainAssignment_SequenceNo\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"TrailerCode\"\r\n              field=\"TrailerCode\"\r\n              initialWidth=\"146px\"\r\n              header={t(\"Rail_Wagon_Code\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"CarrierCode\"\r\n              field=\"CarrierCode\"\r\n              initialWidth=\"140px\"\r\n              header={t(\"ViewReceipt_CarrierCompany\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"ProductCode\"\r\n              field=\"ProductCode\"\r\n              initialWidth=\"130px\"\r\n              header={t(\"Report_ProductCode\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"BaseProductCode\"\r\n              field=\"BaseProductCode\"\r\n              initialWidth=\"155px\"\r\n              header={t(\"BaseProductCode\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"TankCode\"\r\n              field=\"TankCode\"\r\n              initialWidth=\"105px\"\r\n              header={t(\"TankList_Code\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"BayCode\"\r\n              field=\"BayCode\"\r\n              initialWidth=\"120px\"\r\n              header={t(\"ViewRailLoadingDetails_BayCode\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"BCUCode\"\r\n              field=\"BCUCode\"\r\n              initialWidth=\"110px\"\r\n              header={t(\"BCU_Code\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"MeterCode\"\r\n              field=\"MeterCode\"\r\n              initialWidth=\"110px\"\r\n              header={t(\"LoadingDetails_MeterCode\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"GrossQuantity\"\r\n              field=\"GrossQuantity\"\r\n              initialWidth=\"130px\"\r\n              renderer={(cellData) => convertNumberWithUOM(cellData.value)}\r\n              header={t(\"LoadingDetailsEntry_GrossQuantity\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"NetQuantity\"\r\n              field=\"NetQuantity\"\r\n              initialWidth=\"130px\"\r\n              renderer={(cellData) => convertNumberWithUOM(cellData.value)}\r\n              header={t(\"LoadingDetailsEntry_NetQuantity\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"Density\"\r\n              field=\"Density\"\r\n              initialWidth=\"150px\"\r\n              renderer={(cellData) => convertNumberWithUOM(cellData.value)}\r\n              header={t(\"UnLoadingInfo_ProductDensity\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"Pressure\"\r\n              field=\"Pressure\"\r\n              initialWidth=\"100px\"\r\n              renderer={(cellData) => convertNumberWithUOM(cellData.value)}\r\n              header={t(\"UnloadingDetailsEntry_Pressure\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"Temperature\"\r\n              field=\"Temperature\"\r\n              initialWidth=\"120px\"\r\n              renderer={(cellData) => convertNumberWithUOM(cellData.value)}\r\n              header={t(\"LoadingDetailsEntry_Temperature\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"StartTime\"\r\n              field=\"StartTime\"\r\n              initialWidth=\"190px\"\r\n              header={t(\"Reconciliation_StartTime\")}\r\n              renderer={(cellData) => {\r\n                return (\r\n                  new Date(cellData.value).toLocaleDateString() +\r\n                  \" \" +\r\n                  new Date(cellData.value).toLocaleTimeString()\r\n                );\r\n              }}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"EndTime\"\r\n              field=\"EndTime\"\r\n              initialWidth=\"190px\"\r\n              type=\"datetime\"\r\n              renderer={(cellData) => {\r\n                return (\r\n                  new Date(cellData.value).toLocaleDateString() +\r\n                  \" \" +\r\n                  new Date(cellData.value).toLocaleTimeString()\r\n                );\r\n              }}\r\n              header={t(\"Reconciliation_EndTime\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"StartTotalizer\"\r\n              field=\"StartTotalizer\"\r\n              initialWidth=\"125px\"\r\n              renderer={(celldata) => changeNoSpaceNumber(celldata)}\r\n              header={t(\"StartTotalizer\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"EndTotalizer\"\r\n              initialWidth=\"125px\"\r\n              field=\"EndTotalizer\"\r\n              renderer={(celldata) => changeNoSpaceNumber(celldata)}\r\n              header={t(\"EndTotalizer\")}\r\n            ></DataTable.Column>\r\n            <DataTable.Column\r\n              className=\"compColHeight\"\r\n              key=\"TransactionID\"\r\n              field=\"TransactionID\"\r\n              initialWidth=\"140px\"\r\n              header={t(\"ViewRailUnloadingDetails_TransactionNo\")}\r\n            ></DataTable.Column>\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { RailReceiptSummaryPageComposite } from \"../Summary/RailReceiptSummaryComposite\";\r\nimport RailReceiptDetailsComposite from \"../Details/RailReceiptDetailsComposite\";\r\nimport RailReceiptManualEntryComposite from \"../Details/RailReceiptManualEntryComposite\";\r\nimport RailReceiptViewAuditTrailDetailsComposite from \"../Details/RailReceiptViewAuditTrailDetailsComposite\";\r\nimport RailReceiptRecordWeightDetailsComposite from \"../Details/RailReceiptRecordWeightDetailsComposite\";\r\nimport RailReceiptLoadSpotAssignComposite from \"../Details/RailReceiptLoadSpotAssignComposite\";\r\nimport { RailReceiptUnLoadingDetails } from \"../../UIBase/Details/RailReceiptUnLoadingDetails\";\r\nimport axios from \"axios\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport lodash from \"lodash\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../../CSS/styles.css\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport {\r\n  functionGroups,\r\n  fnRailReceipt,\r\n  fnKPIInformation,\r\n  fnCloseRailReceipt,\r\n  fnPrintRailBOD,\r\n  fnPrintRailRAN, \r\n  fnViewRailReceipt,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { TMTransactionFilters } from \"../../UIBase/Common/TMTransactionFilters\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Button, Input, Modal } from \"@scuf/common\";\r\nimport { railReceiptValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { emptyRailReceipt } from \"../../../JS/DefaultEntities\";\r\nimport ReportDetails from \"../../UIBase/Details/ReportDetails\";\r\nimport TransactionSummaryOperations from \"../Common/TransactionSummaryOperations\";\r\n//import TransactionSummaryOperationsMarine from \"../Common/TransactionSummaryOperationsMarine\";\r\nimport { kpiRailReceiptList } from \"../../../JS/KPIPageName\";\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass RailReceiptComposite extends Component {\r\n  state = {\r\n    railReceipt: lodash.cloneDeep(emptyRailReceipt),\r\n    receiptItem: {},\r\n    isShowRightPanel: false,\r\n    isDetails: \"false\",\r\n    isRecordWeight: \"false\",\r\n    isViewAuditTrail: \"false\",\r\n    isViewUnloadingDetails: \"false\",\r\n    isMunalEntry: \"false\",\r\n    isLoadSpotAssign: false,\r\n    ViewUnloadingData: [],\r\n    ViewUnloadingHideFields: [],\r\n    isReadyToRender: false,\r\n    isOperation: false,\r\n    reason: \"\",\r\n    isDetailsModified: \"false\",\r\n    operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    selectedShareholder: \"\",\r\n    data: {},\r\n    loadingDetails: [],\r\n    loadingDetailsHideFields: [],\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    dateError: \"\",\r\n    terminalCodes: [],\r\n    openReceipt: false,\r\n    railReceiptBtnCloseOK: false,\r\n    NextOperations: [],\r\n    currentStatuses: [],\r\n    lastStatus: \"\",\r\n    railReceiptType: \"\",\r\n    modWeight: {},\r\n    viewTab: 0,\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      railReceiptValidationDef\r\n    ),\r\n    enableHSEInspection: true,\r\n    attributeRailReceiptDataList: [],\r\n    selectedAttributeList: [],\r\n    attributeValidationErrors: [],\r\n    saveEnabled: false,\r\n    tabActiveIndex: 0,\r\n    railLookUpData: {},\r\n    showReport: false,\r\n    drawerStatus: false,\r\n    currentAccess: {},\r\n    railReceiptKPIList: [],\r\n    railReceiptDeleteStates: [],\r\n    activityInfo: [],\r\n    showDeleteAuthenticationLayout: false,\r\n    showAuthorizeToUnLoadAuthenticationLayout: false,\r\n    showCloseReceiptAuthenticationLayout: false,\r\n    showViewBODAuthenticationLayout: false,\r\n    showPrintBODAuthenticationLayout:false,\r\n    showRANAuthenticationLayout: false,\r\n  };\r\n\r\n  componentName = \"RailReceiptComponent\";\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: \"true\",\r\n        selectedRow: {},\r\n        operationsVisibilty,\r\n        viewTab: 0,\r\n        isShowRightPanel: false,\r\n        drawerStatus: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"RailDisatchComposite:Error occured on handleAdd\");\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  handleDelete = () => {\r\n    this.handleAuthenticationClose();\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n      var deleteRailReceiptKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        var RailReceiptCode = this.state.selectedItems[i][\"Common_Code\"];\r\n        var shCode = this.state.selectedShareholder;\r\n        var KeyData = {\r\n          ShareHolderCode: shCode,\r\n          KeyCodes: [{ Key: KeyCodes.railReceiptCode, Value: RailReceiptCode }],\r\n        };\r\n        deleteRailReceiptKeys.push(KeyData);\r\n      }\r\n\r\n      axios(\r\n        RestAPIs.DeleteRailReceipt,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteRailReceiptKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          var isRefreshDataRequire = result.IsSuccess;\r\n          if (\r\n            response.data.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            var failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n          var notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"RailReceipt_DeletionStatus\",\r\n            [\"RailReceiptCode\"]\r\n          );\r\n\r\n          if (\r\n            result.ErrorList !== null &&\r\n            result.ErrorList !== undefined &&\r\n            result.ErrorList.length > 0 &&\r\n            notification.messageResultDetails.length === 0\r\n          ) {\r\n            notification.message =\r\n              result.ErrorList[0] === \"ERRMSG_EXCEPTION_IN_WEBAPI\"\r\n                ? \"CannotDeleteRailTransaction\"\r\n                : result.ErrorList[0];\r\n            notification.messageType = result.IsSuccess\r\n              ? \"success\"\r\n              : \"critical\"; //TODO:Localize\r\n          }\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({ isReadyToRender: false });\r\n            this.getRailReceiptList(shCode);\r\n            this.getKPIList();\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              isShowRightPanel: false,\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n            });\r\n          }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0) {\r\n              messageResult.keyFields[0] = \"RailReceipt_Code\";\r\n            }\r\n          });\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    } catch (error) {\r\n      console.log(\"RailReceiptComposite:Error occured on handleDelete\");\r\n    }\r\n  };\r\n  handleRangeSelect = ({ to, from }) => {\r\n    if (to !== undefined) this.setState({ toDate: to });\r\n    if (from !== undefined) this.setState({ fromDate: from });\r\n  };\r\n  handleDateTextChange = (value, error) => {\r\n    if (value === \"\")\r\n      this.setState({ dateError: \"\", toDate: \"\", fromDate: \"\" });\r\n    if (error !== null && error !== \"\")\r\n      this.setState({\r\n        dateError: \"Common_InvalidDate\",\r\n        toDate: \"\",\r\n        fromDate: \"\",\r\n      });\r\n    else {\r\n      this.setState({ dateError: \"\", toDate: value.to, fromDate: value.from });\r\n    }\r\n  };\r\n  handleLoadOrders = () => {\r\n    let error = Utilities.validateDateRange(\r\n      this.state.toDate,\r\n      this.state.fromDate\r\n    );\r\n\r\n    if (error !== \"\") {\r\n      this.setState({ dateError: error });\r\n    } else {\r\n      this.setState({ dateError: \"\" });\r\n      this.getRailReceiptList(this.state.selectedShareholder);\r\n    }\r\n  };\r\n  handleBack = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnRailReceipt\r\n      );\r\n      let selectedRow = lodash.cloneDeep(this.state.selectedRow);\r\n      operationsVisibilty.delete = selectedRow.ReceiptStatus === \"READY\";\r\n      operationsVisibilty.shareholder = true;\r\n      let isRecordWeight = lodash.cloneDeep(this.state.isRecordWeight);\r\n      let isDetails = lodash.cloneDeep(this.state.isDetails);\r\n      let isViewAuditTrail = lodash.cloneDeep(this.state.isViewAuditTrail);\r\n      let isViewUnloadingDetails = lodash.cloneDeep(\r\n        this.state.isViewUnloadingDetails\r\n      );\r\n      let isMunalEntry = lodash.cloneDeep(this.state.isMunalEntry);\r\n      let isLoadSpotAssign = lodash.cloneDeep(this.state.isLoadSpotAssign);\r\n      this.getKPIList();\r\n      if (isDetails === \"true\") {\r\n        if (\r\n          isMunalEntry === \"true\" ||\r\n          isRecordWeight === \"true\" ||\r\n          isViewAuditTrail === \"true\" ||\r\n          isViewUnloadingDetails === \"true\" ||\r\n          isLoadSpotAssign\r\n        ) {\r\n          this.setState({\r\n            isReadyToRender: false,\r\n            isShowRightPanel: true,\r\n            isDetails: \"true\",\r\n            isRecordWeight: \"false\",\r\n            isViewAuditTrail: \"false\",\r\n            isViewUnloadingDetails: \"false\",\r\n            isMunalEntry: \"false\",\r\n            isLoadSpotAssign: false,\r\n            operationsVisibilty,\r\n            drawerStatus: false,\r\n          });\r\n        } else {\r\n          operationsVisibilty.delete = false;\r\n          this.setState({\r\n            isReadyToRender: false,\r\n            isShowRightPanel: false,\r\n            isDetails: \"false\",\r\n            isRecordWeight: \"false\",\r\n            isViewAuditTrail: \"false\",\r\n            isViewUnloadingDetails: \"false\",\r\n            isMunalEntry: \"false\",\r\n            isLoadSpotAssign: false,\r\n            selectedRow: {},\r\n            selectedItems: [],\r\n            operationsVisibilty,\r\n            drawerStatus: false,\r\n          });\r\n\r\n          this.getRailReceiptList(this.state.selectedShareholder);\r\n        }\r\n      } else {\r\n        this.setState({\r\n          isReadyToRender: false,\r\n          isDetails: \"false\",\r\n          isRecordWeight: \"false\",\r\n          isViewAuditTrail: \"false\",\r\n          isViewUnloadingDetails: \"false\",\r\n          isMunalEntry: \"false\",\r\n          isLoadSpotAssign: false,\r\n          operationsVisibilty,\r\n          isShowRightPanel: false,\r\n          selectedRow: {},\r\n          selectedItems: [],\r\n          drawerStatus: false,\r\n        });\r\n        this.getRailReceiptList(this.state.selectedShareholder);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"RailReceiptComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n  handleRowClick = (item) => {\r\n    try {\r\n      var { operationsVisibilty, activityInfo } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnRailReceipt\r\n      );\r\n\r\n      let receiptDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ReceiptActivityInfo.RAIL_RECEIPT_ENABLE_DELETE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      var receiptDeleteStates = [];\r\n\r\n      if (\r\n        receiptDeleteInfo !== undefined &&\r\n        receiptDeleteInfo.length > 0\r\n      )\r\n        receiptDeleteStates =\r\n          receiptDeleteInfo[0].ReceiptStates;\r\n\r\n      operationsVisibilty.delete = this.props.userDetails\r\n        .EntityResult.IsWebPortalUser\r\n        ? false\r\n        : receiptDeleteStates.indexOf(\r\n          item.ReceiptStatus.toUpperCase()\r\n        ) > -1 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnRailReceipt\r\n        );\r\n\r\n      // const isReady = Utilities.isInFunction(\r\n      //   this.props.userDetails.EntityResult.FunctionsList,\r\n      //   functionGroups.remove,\r\n      //   fnRailReceipt\r\n      // );\r\n      // operationsVisibilty.delete = item[\"ReceiptStatus\"] === \"READY\" && isReady;\r\n      operationsVisibilty.shareholder = false;\r\n      this.getRailReceiptOperations(item);\r\n      this.getRailReceiptAllChangeStatus(item);\r\n      this.setState({\r\n        isDetails: \"true\",\r\n        saveEnabled: true,\r\n        selectedRow: item,\r\n        selectedItems: [item],\r\n        operationsVisibilty,\r\n        isShowRightPanel: true,\r\n        viewTab: 0,\r\n        detailEnable: true,\r\n        drawerStatus: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptComposite:Error occured on handleRowClick\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleSelection = (items) => {\r\n    try {\r\n      const operationsVisibilty = lodash.cloneDeep(\r\n        this.state.operationsVisibilty\r\n      );\r\n\r\n      var { drawerStatus, activityInfo } = { ...this.state };\r\n\r\n      let receiptDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ReceiptActivityInfo.RAIL_RECEIPT_ENABLE_DELETE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      var receiptDeleteStates = [];\r\n\r\n      if (\r\n        receiptDeleteInfo !== undefined &&\r\n        receiptDeleteInfo.length > 0\r\n      )\r\n        receiptDeleteStates =\r\n          receiptDeleteInfo[0].ReceiptStates;\r\n\r\n      let isReady =\r\n        items.findIndex(\r\n          (x) =>\r\n            receiptDeleteStates.indexOf(\r\n              x.ReceiptStatus.toUpperCase()\r\n            ) < 0\r\n        ) >= 0\r\n          ? false\r\n          : true;\r\n\r\n      operationsVisibilty.delete = this.props.userDetails.EntityResult\r\n        .IsWebPortalUser\r\n        ? false\r\n        : isReady &&\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnRailReceipt\r\n        );\r\n\r\n      // let railReceiptDeleteStates = lodash.cloneDeep(\r\n      //   this.state.railReceiptDeleteStates\r\n      // );\r\n\r\n      // const isReady =\r\n      //   items.findIndex(\r\n      //     (x) =>\r\n      //       railReceiptDeleteStates.indexOf(x.ReceiptStatus.toUpperCase()) < 0\r\n      //   ) >= 0\r\n      //     ? false\r\n      //     : true;\r\n\r\n      // operationsVisibilty.delete =\r\n      //   isReady &&\r\n      //   items.length > 0 &&\r\n      //   Utilities.isInFunction(\r\n      //     this.props.userDetails.EntityResult.FunctionsList,\r\n      //     functionGroups.remove,\r\n      //     fnRailReceipt\r\n      //   );\r\n\r\n      operationsVisibilty.shareholder = false;\r\n\r\n      if (items.length !== 1) {\r\n        drawerStatus = true;\r\n      } else {\r\n        drawerStatus = false;\r\n      }\r\n\r\n      this.setState({\r\n        isShowRightPanel: true,\r\n        selectedItems: items,\r\n        operationsVisibilty,\r\n        isOperation: false,\r\n        drawerStatus,\r\n      });\r\n\r\n      if (items.length === 1) {\r\n        this.getRailReceiptOperations(items[0]);\r\n        this.getRailReceiptAllChangeStatus(items[0]);\r\n        this.setState({ isOperation: true });\r\n      } else {\r\n        this.setState({\r\n          isShowRightPanel: false,\r\n          selectedItems: items,\r\n          operationsVisibilty,\r\n          isOperation: false,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptSComposite: Error occurred on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleUpdateStatusOperation = (railReceipt) => {\r\n    const item = {\r\n      Common_Code: railReceipt.ReceiptCode,\r\n      ReceiptStatus: railReceipt.ReceiptStatus,\r\n      AssociatedTerminals: railReceipt.TerminalCodes,\r\n      AcutalTerminalCode: railReceipt.ActualTerminalCode,\r\n    };\r\n    this.setState(\r\n      {\r\n        selectedItems: [item],\r\n        selectedRow: item,\r\n      },\r\n      () => {\r\n        this.getRailReceiptOperations(item);\r\n        this.getRailReceiptAllChangeStatus(item);\r\n      }\r\n    );\r\n\r\n    this.setState({ isOperation: true });\r\n  };\r\n  getRailReceiptOperations = (items) => {\r\n    var localTerminalCode = items.AcutalTerminalCode;\r\n    if (localTerminalCode === null || localTerminalCode === undefined) {\r\n      if (this.state.selectedItems.length === 1) {\r\n        localTerminalCode = this.state.selectedItems[0].AcutalTerminalCode;\r\n      }\r\n    }\r\n    var obj = {\r\n      Reason: \"\",\r\n      ReceiptCode: items.Common_Code,\r\n      ReceiptStatus: items.ReceiptStatus,\r\n    };\r\n    try {\r\n      axios(\r\n        RestAPIs.GetRailReceiptOperations,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          const currentAccess = {\r\n            ViewRailReceipt_Delete: false,\r\n            ViewRailReceipt_Update: false,\r\n          };\r\n          const operationOrder = [\r\n            \"ViewRailReceipt_Update\",\r\n            \"ViewRailReceipt_Delete\",\r\n            \"ViewRailReceipt_AuthorizeToUnLoad\",\r\n            \"ViewRailReceipt_PrintRAN\",\r\n            \"ViewRailReceipt_RecordWeight\",\r\n            \"ViewRailReceipt_LoadSpotAssign\",\r\n            \"ViewRailReceipt_ManualEntry\",\r\n            \"ViewRailReceipt_ViewLoadingDetails\",\r\n            \"ViewRailReceipt_ViewAuditTrail\",\r\n            \"ViewRailReceipt_CloseReceipt\",\r\n            \"ViewRailReceipt_ViewBOD\",\r\n            \"ViewRailReceipt_PrintBOD\",\r\n            \"ViewRailReceipt_BSIOutbound\",\r\n          ];\r\n          const NextOperations = [];\r\n          for (let operation of operationOrder) {\r\n            if (\r\n              operation === \"ViewRailReceipt_Update\" ||\r\n              operation === \"ViewRailReceipt_Delete\"\r\n            ) {\r\n              let operationsVisibilty = this.state.operationsVisibilty;\r\n              if (operation === \"ViewRailReceipt_Update\") {\r\n                //operationsVisibility.modify=true;\r\n                currentAccess.ViewRailReceipt_Update =\r\n                  result.EntityResult[operation];\r\n              }\r\n              if (operation === \"ViewRailReceipt_Delete\") {\r\n                currentAccess.ViewRailReceipt_Delete =\r\n                  result.EntityResult[operation];\r\n                operationsVisibilty.delete = result.EntityResult[operation];\r\n              }\r\n              this.setState({ operationsVisibilty });\r\n              continue;\r\n            }\r\n\r\n            if (\r\n              operation === \"ViewRailReceipt_PrintRAN\" &&\r\n              result.EntityResult[operation] === true\r\n            ) {\r\n              if (!this.props.userDetails.EntityResult.IsWebPortalUser) {\r\n                NextOperations.push(operation);\r\n              }\r\n              //NextOperations.push(\"ViewRailReceipt_ViewRAN\");\r\n              continue;\r\n            } else if (\r\n              operation === \"ViewRailReceipt_PrintBOD\" &&\r\n              result.EntityResult[operation] === true\r\n            ) {\r\n              if (!this.props.userDetails.EntityResult.IsWebPortalUser) {\r\n                NextOperations.push(operation);\r\n              }\r\n              NextOperations.push(\"ViewRailReceipt_ViewBOD\");\r\n              continue;\r\n            } else if (operation === \"ViewRailReceipt_LoadSpotAssign\") {\r\n              if (\r\n                !this.props.userDetails.EntityResult.IsEnterpriseNode &&\r\n                items.ReceiptStatus !== \"READY\" &&\r\n                localTerminalCode === null\r\n              ) {\r\n                continue;\r\n              } else if (result.EntityResult[operation] === true) {\r\n                NextOperations.push(operation);\r\n              }\r\n            } else if (result.EntityResult[operation] === true) {\r\n              if (\r\n                operation === \"ViewRailReceipt_CloseReceipt\" ||\r\n                operation === \"ViewRailReceipt_RecordWeight\" ||\r\n                operation === \"ViewRailReceipt_ManualEntry\"\r\n              ) {\r\n                if (\r\n                  !this.props.userDetails.EntityResult.IsEnterpriseNode &&\r\n                  localTerminalCode !==\r\n                  this.props.userDetails.EntityResult.TerminalCode\r\n                ) {\r\n                  continue;\r\n                }\r\n              }\r\n\r\n              NextOperations.push(operation);\r\n            }\r\n          }\r\n          if (\r\n            items.ReceiptStatus === Constants.Receipt_Status.CLOSED &&\r\n            this.props.userDetails.EntityResult.IsBSIEnabledLicense &&\r\n            !this.props.userDetails.EntityResult.IsArchived &&\r\n            !this.props.userDetails.EntityResult.IsWebPortalUser\r\n          )\r\n            NextOperations.push(\"ViewRailReceipt_BSIOutbound\");\r\n          this.setState({ NextOperations, currentAccess });\r\n        } else {\r\n          console.log(\"Error in getRailReceiptOperations:\", result.ErrorList);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting RailReceipt Operations List:\", error);\r\n    }\r\n  };\r\n  getRailReceiptAllChangeStatus(items) {\r\n    var obj = {\r\n      Reason: \"\",\r\n      ReceiptCode: items.Common_Code,\r\n      ReceiptStatus: items.ReceiptStatus,\r\n    };\r\n    try {\r\n      axios(\r\n        RestAPIs.GetRailReceiptAllChangeStatus,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              currentStatuses: result.EntityResult,\r\n              //lastStatus: result.EntityResult,\r\n            });\r\n          } else {\r\n            console.log(\r\n              \"Error in getRailReceiptAllChangeStatus: \",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getRailReceiptAllChangeStatus:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      var { operationsVisibilty, activityInfo } = { ...this.state };\r\n\r\n      let receiptDeleteInfo = activityInfo.filter((item) => {\r\n        return (\r\n          item.ActivityCode ===\r\n          Constants.ReceiptActivityInfo.RAIL_RECEIPT_ENABLE_DELETE &&\r\n          item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n        );\r\n      });\r\n\r\n      var receiptDeleteStates = [];\r\n\r\n      if (\r\n        receiptDeleteInfo !== undefined &&\r\n        receiptDeleteInfo.length > 0\r\n      )\r\n        receiptDeleteStates =\r\n          receiptDeleteInfo[0].ReceiptStates;\r\n\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnRailReceipt\r\n        );\r\n        operationsVisibilty.delete = this.props.userDetails\r\n          .EntityResult.IsWebPortalUser\r\n          ? false\r\n          : receiptDeleteStates.indexOf(\r\n            data.ReceiptStatus.toUpperCase()\r\n          ) > -1 &&\r\n          Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.remove,\r\n            fnRailReceipt\r\n          );\r\n\r\n        // operationsVisibilty.delete = Utilities.isInFunction(\r\n        //   this.props.userDetails.EntityResult.FunctionsList,\r\n        //   functionGroups.remove,\r\n        //   fnRailReceipt\r\n        // );\r\n        this.setState({ isDetailsModified: \"true\", operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            RailReceiptCode: data.ReceiptCode,\r\n            Common_Shareholder: data.ShareholderCode,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems, isShowRightPanel: true });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"RailReceiptComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n  getRailReceiptList(shareholder) {\r\n    try {\r\n      this.setState({ isReadyToRender: false });\r\n      let fromDate = new Date(this.state.fromDate);\r\n      let toDate = new Date(this.state.toDate);\r\n      fromDate.setHours(0, 0, 0);\r\n      toDate.setHours(23, 59, 59);\r\n      let obj = {\r\n        startRange: fromDate,\r\n        endRange: toDate,\r\n        TransportationType: Constants.TransportationType.RAIL,\r\n        ShareHolderCode: shareholder,\r\n      };\r\n      axios(\r\n        RestAPIs.GetRailReceiptListForRole,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          let result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState(\r\n              { data: result.EntityResult, isReadyToRender: true },\r\n              () => {\r\n                if (this.state.selectedItems.length === 1) {\r\n                  const selectedItem = this.state.selectedItems[0];\r\n                  const updatedSelectedItem = result.EntityResult.Table.filter(\r\n                    (item) => {\r\n                      return item.Common_Code === selectedItem.Common_Code;\r\n                    }\r\n                  );\r\n\r\n                  let { operationsVisibilty, activityInfo } = { ...this.state }\r\n\r\n                  let receiptDeleteInfo = activityInfo.filter((item) => {\r\n                    return (\r\n                      item.ActivityCode ===\r\n                      Constants.ReceiptActivityInfo.RAIL_RECEIPT_ENABLE_DELETE &&\r\n                      item.ActionTypeCode === Constants.ActionTypeCode.CHECK\r\n                    );\r\n                  });\r\n\r\n                  var receiptDeleteStates = [];\r\n\r\n                  if (\r\n                    receiptDeleteInfo !== undefined &&\r\n                    receiptDeleteInfo.length > 0\r\n                  )\r\n                    receiptDeleteStates =\r\n                      receiptDeleteInfo[0].ReceiptStates;\r\n\r\n                  operationsVisibilty.delete = this.props.userDetails\r\n                    .EntityResult.IsWebPortalUser\r\n                    ? false\r\n                    : receiptDeleteStates.indexOf(\r\n                      updatedSelectedItem[0].ReceiptStatus.toUpperCase()\r\n                    ) > -1 &&\r\n                    Utilities.isInFunction(\r\n                      this.props.userDetails.EntityResult.FunctionsList,\r\n                      functionGroups.remove,\r\n                      fnRailReceipt\r\n                    );\r\n\r\n                  if (this.state.isDetails === \"true\") {\r\n                    this.setState({\r\n                      selectedItems: updatedSelectedItem,\r\n                      selectedRow: updatedSelectedItem[0],\r\n                      operationsVisibilty\r\n                    });\r\n                  } else {\r\n                    this.getRailReceiptOperations(updatedSelectedItem[0]);\r\n                    this.getRailReceiptAllChangeStatus(updatedSelectedItem[0]);\r\n                    this.setState({\r\n                      selectedItems: updatedSelectedItem,\r\n                      operationsVisibilty\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n            );\r\n          } else {\r\n            this.setState({ data: [], isReadyToRender: true });\r\n            console.log(\r\n              \"Error in GetRailReceiptListForRole:\",\r\n              result.ErrorList\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error while geting RailReceipt List:\", error);\r\n        });\r\n    } catch (error) {\r\n      this.setState({ isReadyToRender: true });\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  getLookUpData = (lookUpTypeCode, callback) => {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=\" + lookUpTypeCode,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          callback(result.EntityResult);\r\n        } else {\r\n          console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"RailReceiptComposite: Error occurred on getLookUpData\",\r\n          error\r\n        );\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnRailReceipt\r\n      );\r\n      this.setState({\r\n        operationsVisibilty,\r\n        selectedShareholder:\r\n          this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      });\r\n      // this.CheckRailReceiptDeleteAllowed();\r\n      this.getLookUpData(\"HSEInspection\", (entityResult) => {\r\n        this.setState({\r\n          enableHSEInspection: entityResult.EnableRail === \"True\",\r\n        });\r\n      });\r\n      this.getLookUpData(\"Rail\", (entityResult) => {\r\n        this.setState({ railLookUpData: entityResult });\r\n      });\r\n      this.getTerminalsList(\r\n        this.props.userDetails.EntityResult.PrimaryShareholder\r\n      );\r\n      this.getRailReceiptList(\r\n        this.props.userDetails.EntityResult.PrimaryShareholder\r\n      );\r\n      this.getKPIList();\r\n      this.GetReceiptActivityInfo();\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n    // clear session storage on window refresh event\r\n    window.addEventListener(\"beforeunload\", this.clearStorage)\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    // clear session storage\r\n    this.clearStorage();\r\n\r\n    // remove event listener\r\n    window.removeEventListener(\"beforeunload\", this.clearStorage)\r\n  }\r\n\r\n  clearStorage = () => {\r\n    sessionStorage.removeItem(this.componentName + \"GridState\");\r\n  }\r\n\r\n\r\n  GetReceiptActivityInfo() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetReceiptActivityInfo,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ activityInfo: response.data.EntityResult });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting receipt activityInfo:\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error in GetReceiptActivityInfo:\", error);\r\n    }\r\n  }\r\n\r\n  getTerminalsList(shareholder) {\r\n    try {\r\n      if (shareholder !== null && shareholder !== \"\") {\r\n        axios(\r\n          RestAPIs.GetTerminals,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            [shareholder],\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        ).then((response) => {\r\n          if (response.data.IsSuccess) {\r\n            this.setState({ terminalCodes: response.data.EntityResult });\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ terminalCodes: [] });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"DestinationComposite:Error occured on getTerminalsList\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      this.setState({ selectedShareholder: shareholder });\r\n      this.getRailReceiptList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailReceiptComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  getTransportationType() {\r\n    var transportationType = Constants.TransportationType.RAIL;\r\n    const { itemProps } = this.props.activeItem;\r\n    if (itemProps !== undefined && itemProps.transportationType !== undefined) {\r\n      transportationType = itemProps.transportationType;\r\n    }\r\n    return transportationType;\r\n  }\r\n  handleOperationClick = (operation) => {\r\n    //this.setState({ railReceiptBtnStatus: true });\r\n    let modWeight = lodash.cloneDeep(this.state.modWeight);\r\n    var { operationsVisibilty } = { ...this.state };\r\n    // if (this.state.isDetails === \"true\") {\r\n    //   this.setState(\r\n    //     {\r\n    //       isDetails: \"false\",\r\n    //       isShowRightPanel: false,\r\n    //     },\r\n    //     () => {\r\n    //       this.setState({\r\n    //         isDetails: \"true\",\r\n    //         isShowRightPanel: true,\r\n    //       });\r\n    //     }\r\n    //   );\r\n    // }\r\n    // setTimeout(() => {\r\n    //   this.setState({ railReceiptBtnStatus: false });\r\n    // }, 2000);\r\n    if (\r\n      operation ===\r\n      Constants.ViewAllRailReceiptOperations.ViewRailReceipt_AuthorizeToUnload\r\n    ) {\r\n      this.authorizeToUnLoadClick();\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllRailReceiptOperations.ViewRailReceipt_RecordWeight\r\n    ) {\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.delete = false;\r\n      this.handleRecordWeight(modWeight);\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllRailReceiptOperations.ViewRailReceipt_CloseReceipt\r\n    ) {\r\n      this.setState({ openReceipt: true });\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllRailReceiptOperations.ViewRailReceipt_ViewAuditTrail\r\n    ) {\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.delete = false;\r\n      this.handleViewAuditTrail();\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllRailReceiptOperations.ViewRailReceipt_ViewLoadingDetails\r\n    ) {\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.delete = false;\r\n      this.handleViewUnLoadingDetails();\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllRailReceiptOperations.ViewRailReceipt_PrintRAN\r\n    ) {\r\n      this.printRANClick();\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllRailReceiptOperations.ViewRailReceipt_ViewBOD\r\n    ) {\r\n      operationsVisibilty.add = false;\r\n      this.viewBODClick();\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllRailReceiptOperations.ViewRailReceipt_PrintBOD\r\n    ) {\r\n      this.printBODClick();\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllRailReceiptOperations.ViewRailReceipt_BISOutbound\r\n    ) {\r\n      this.handleBSIOutbound(this.state.selectedItems[0].Common_Code);\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllRailReceiptOperations.ViewRailReceipt_ManualEntry\r\n    ) {\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.delete = false;\r\n      this.handleRailReceiptManualEntry();\r\n    } else if (\r\n      operation ===\r\n      Constants.ViewAllRailReceiptOperations.ViewRailReceipt_LoadSpotAssign\r\n    ) {\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.delete = false;\r\n      this.handleLoadSpotAssign();\r\n    }\r\n    this.setState({ operationsVisibilty });\r\n  };\r\n\r\n  handleNotify(notification) {\r\n    try {\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchComposite: Error occurred on handleNotify\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  onFieldChange(propertyName, data) {\r\n    try {\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      this.setState({ reason: data });\r\n      if (railReceiptValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          railReceiptValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n        if (\r\n          validationErrors.Reason === \"\" ||\r\n          validationErrors.Reason === undefined\r\n        ) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"railReceiptDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  authorizeToUnLoadClick = () => {\r\n    let showAuthorizeToUnLoadAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n  \r\n    this.setState({ showAuthorizeToUnLoadAuthenticationLayout, }, () => {\r\n      if (showAuthorizeToUnLoadAuthenticationLayout === false) {\r\n        this.handleAuthorizeToLoad();\r\n      }})\r\n    }\r\n\r\n  handleAuthorizeToUnload = () => {\r\n    this.handleAuthenticationClose();\r\n\r\n    let ReceiptCode= this.state.selectedItems[0].Common_Code;\r\n    let ReceiptStatus= this.state.selectedItems[0].ReceiptStatus;\r\n\r\n    var shCode = this.state.selectedShareholder;\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.railReceiptCode,\r\n        value: ReceiptCode,\r\n      },\r\n    ];\r\n    const cobj = {\r\n      ShareHolderCode: shCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    let obj = {\r\n      ReceiptCode: ReceiptCode,\r\n      ReceiptStatus: ReceiptStatus,\r\n      TmWebApiRequest: cobj,\r\n    };\r\n    var notification = {\r\n      messageType: \"success\",\r\n      message: \"ViewRailReceipt_AuthorizeLoad_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Receipt_Code\"],\r\n          keyValues: [ReceiptCode],\r\n          isSuccess: true,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.RailReceiptAuthorizeToUnLoad,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          const selectedRow = lodash.cloneDeep(this.state.selectedRow);\r\n          if (this.state.isDetails === \"true\") {\r\n            selectedRow.ReceiptStatus = Constants.Shipment_Status.CHECKED_IN;\r\n          } else {\r\n            this.getRailReceiptList(shCode);\r\n          }\r\n          this.setState({ selectedRow }, () => {\r\n            this.savedEvent(selectedRow, \"\", notification)\r\n          });\r\n        } else {\r\n          notification.messageType = \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = false;\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.savedEvent(\"\", \"\", notification);\r\n          console.log(\"Error in AuthorizeToUnLoad:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while AuthorizeToUnLoad:\", error);\r\n      });\r\n  };\r\n  handleRecordWeight() {\r\n    this.setState({ isRecordWeight: \"true\" });\r\n  }\r\n\r\n  handleCloseReceipt= () =>\r\n{\r\n  let showCloseReceiptAuthenticationLayout =\r\n  this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n    ? true\r\n    : false;\r\n\r\n  this.setState({ showCloseReceiptAuthenticationLayout, }, () => {\r\n    if (showCloseReceiptAuthenticationLayout === false) {\r\n      this.closeRailDispatch();\r\n    }})\r\n};\r\n\r\n\r\ncloseRailDispatch = () => {\r\n    this.handleAuthenticationClose();\r\n    try {\r\n      var shCode = this.state.selectedShareholder;\r\n      this.setState({ railReceiptBtnCloseOK: true });\r\n      setTimeout(() => {\r\n        this.setState({ railReceiptBtnCloseOK: false });\r\n      }, 3600);\r\n      var items = lodash.cloneDeep(this.state.selectedItems[0]);\r\n      let keyCode = [\r\n        {\r\n          key: KeyCodes.railReceiptCode,\r\n          value: items.Common_Code,\r\n        },\r\n      ];\r\n\r\n      let entity = {\r\n        Reason: this.state.reason,\r\n        ReceiptCode: items.Common_Code,\r\n        ReceiptStatus: items.ReceiptStatus,\r\n      };\r\n      const obj = {\r\n        ShareHolderCode: shCode,\r\n        KeyCodes: keyCode,\r\n        Entity: entity,\r\n      };\r\n      var notification = {\r\n        messageType: \"success\",\r\n        message: \"ViewRailReceipt_CloseReceipt_status\",\r\n        messageResultDetails: [\r\n          {\r\n            keyFields: [\"Receipt_Code\"],\r\n            keyValues: [items.Common_Code],\r\n            isSuccess: true,\r\n            errorMessage: \"\",\r\n          },\r\n        ],\r\n      };\r\n      axios(\r\n        RestAPIs.ForceCloseRailReceipt,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        if (response.data.IsSuccess) {\r\n          const selectedRow = lodash.cloneDeep(this.state.selectedRow);\r\n          if (this.state.isDetails === \"true\") {\r\n            selectedRow.ReceiptStatus = Constants.Shipment_Status.CLOSED;\r\n            // this.setState({ selectedRow });\r\n          } else {\r\n            this.getRailReceiptList(shCode);\r\n          }\r\n          this.setState({ openReceipt: false, selectedRow }, () => this.savedEvent(selectedRow, \"\", notification));\r\n\r\n        } else {\r\n          notification.messageType = \"critical\";\r\n          notification.messageResultDetails[0].isSuccess = false;\r\n          notification.messageResultDetails[0].errorMessage =\r\n            response.data.ErrorList[0];\r\n          this.savedEvent(\"\", \"\", notification);\r\n        }\r\n      });\r\n    } catch (error) { }\r\n  };\r\n  handleViewAuditTrail() {\r\n    var { operationsVisibilty } = { ...this.state };\r\n    operationsVisibilty.add = false;\r\n    this.setState({\r\n      isViewAuditTrail: \"true\",\r\n      saveEnabled: false,\r\n      operationsVisibilty,\r\n    });\r\n  }\r\n  handleViewUnLoadingDetails() {\r\n    var shCode = this.state.selectedShareholder;\r\n    var items = lodash.cloneDeep(this.state.selectedItems[0]);\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.railReceiptCode,\r\n        value: items.Common_Code,\r\n      },\r\n    ];\r\n    const cobj = {\r\n      ShareHolderCode: shCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    let obj = {\r\n      Reason: this.state.reason,\r\n      ReceiptCode: items.Common_Code,\r\n      ReceiptStatus: items.ReceiptStatus,\r\n      TmWebApiRequest: cobj,\r\n    };\r\n    axios(\r\n      RestAPIs.GetRailReceiptUnLoadingDetails,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            isViewUnloadingDetails: \"true\",\r\n            ViewUnloadingData: result.EntityResult,\r\n          });\r\n        } else {\r\n          console.log(\"Error in viewUnLoadingDetails:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while viewUnLoadingDetails:\", error);\r\n      });\r\n  }\r\n\r\n  printRANClick= () => {\r\n    let showRANAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n  \r\n    this.setState({ showRANAuthenticationLayout, }, () => {\r\n      if (showRANAuthenticationLayout === false) {\r\n        this.handlePrintRAN();\r\n      }})\r\n     \r\n    }\r\n\r\n  handlePrintRAN= () => {\r\n    this.handleAuthenticationClose();\r\n    var shCode = this.state.selectedShareholder;\r\n    let ReceiptCode= this.state.selectedItems[0].Common_Code;\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.railReceiptCode,\r\n        value: ReceiptCode,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: shCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_PrintStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Receipt_Code\"],\r\n          keyValues: [ReceiptCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.RailReceiptPrintRAN,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess !== true) {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in handlePrintRAN: \", result.ErrorList);\r\n        }\r\n        this.handleNotify(notification);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while handlePrintRAN: \", error);\r\n      });\r\n  }\r\n\r\n  handleModalBack = () => {\r\n    this.setState({ showReport: false });\r\n  };\r\n  renderReportModal() {\r\n    let path = null;\r\n    if (this.props.userDetails.EntityResult.IsArchived) {\r\n      path = \"TM/\" + Constants.TMReportArchive + \"/RailBOD\";\r\n    } else {\r\n      path = \"TM/\" + Constants.TMReports + \"/RailBOD\";\r\n    }\r\n    let paramValues = {\r\n      Culture: this.props.userDetails.EntityResult.UICulture,\r\n      ShareholderCode: this.state.selectedShareholder,\r\n      RailReceiptCode:\r\n        this.state.selectedItems.length === 1\r\n          ? this.state.selectedItems[0].Common_Code\r\n          : this.state.selectedRow.Common_Code,\r\n    };\r\n\r\n    return (\r\n      <ReportDetails\r\n        showReport={this.state.showReport}\r\n        handleBack={this.handleModalBack}\r\n        handleModalClose={this.handleModalBack}\r\n        // proxyServerHost=\"http://epksr5115dit:3625/TMWebAPI/\"\r\n        proxyServerHost={RestAPIs.WebAPIURL}\r\n        reportServiceHost={this.reportServiceURI}\r\n        filePath={path}\r\n        parameters={paramValues}\r\n      />\r\n    );\r\n  }\r\n\r\n  viewBODClick= () => {\r\n    let showViewBODAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n  \r\n    this.setState({ showViewBODAuthenticationLayout, }, () => {\r\n      if (showViewBODAuthenticationLayout === false) {\r\n        this.handleViewBOD();\r\n      }})\r\n     \r\n    }\r\n\r\n  handleViewBOD = () => {\r\n    this.handleAuthenticationClose();\r\n    if (this.reportServiceURI === undefined) {\r\n      axios(\r\n        RestAPIs.GetReportServiceURI,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        if (response.data.IsSuccess) {\r\n          this.reportServiceURI = response.data.EntityResult;\r\n          this.setState({ showReport: true });\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ showReport: true });\r\n    }\r\n  };\r\n\r\n    printBODClick= () => {\r\n    let showPrintBODAuthenticationLayout =\r\n    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n      ? true\r\n      : false;\r\n  \r\n    this.setState({ showPrintBODAuthenticationLayout, }, () => {\r\n      if (showPrintBODAuthenticationLayout === false) {\r\n        this.handlePrintBOD();\r\n      }})\r\n     \r\n    }\r\n\r\n\r\n  handlePrintBOD= () => {\r\n    this.handleAuthenticationClose();\r\n    var shCode = this.state.selectedShareholder;\r\n    let ReceiptCode= this.state.selectedItems[0].Common_Code;\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.railReceiptCode,\r\n        value: ReceiptCode,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: shCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShipmentCompDetail_PrintStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Receipt_Code\"],\r\n          keyValues: [ReceiptCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.RailReceiptPrintBOD,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess !== true) {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in handlePrintBOD: \", result.ErrorList);\r\n        }\r\n        this.handleNotify(notification);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while handlePrintBOD: \", error);\r\n      });\r\n  }\r\n  handleBSIOutbound(ReceiptCode) {\r\n    var shCode = this.state.selectedShareholder;\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.railReceiptCode,\r\n        value: ReceiptCode,\r\n      },\r\n    ];\r\n    const obj = {\r\n      ShareHolderCode: shCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    const notification = {\r\n      messageType: \"critical\",\r\n      message: \"ViewRailReceipt_BSIOutbound_status\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Receipt_Code\"],\r\n          keyValues: [ReceiptCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.RailReceiptBSIOutbound,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess !== true) {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in handleBSIOutbound: \", result.ErrorList);\r\n        }\r\n        this.handleNotify(notification);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while handleBSIOutbound: \", error);\r\n      });\r\n  }\r\n  handleRailReceiptManualEntry() {\r\n    this.setState({\r\n      isMunalEntry: \"true\",\r\n    });\r\n  }\r\n  handleLoadSpotAssign() {\r\n    this.setState({\r\n      isLoadSpotAssign: true,\r\n    });\r\n  }\r\n\r\n  renderModal() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal\r\n            onClose={() => this.setState({ openReceipt: false })}\r\n            size=\"mini\"\r\n            open={this.state.openReceipt}\r\n            closeOnDimmerClick={false}\r\n          >\r\n            <Modal.Content>\r\n              <div className=\"ViewMarineReceiptCloseHeader\">\r\n                <b> {t(\"Receipt_ForceCloseHeader\")}</b>\r\n              </div>\r\n              <div>\r\n                <Input\r\n                  fluid\r\n                  value={this.state.reason}\r\n                  indicator=\"required\"\r\n                  onChange={(data) => this.onFieldChange(\"Reason\", data)}\r\n                  label={t(\"Receipt_ForceCloseHeader\")}\r\n                  error={t(this.state.validationErrors.Reason)}\r\n                />\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                content={t(\"ViewMarineReceiptList_Ok\")}\r\n                onClick={() => {\r\n                  this.handleCloseReceipt();\r\n                }}\r\n                disabled={this.state.railReceiptBtnCloseOK}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                content={t(\"ViewMarineReceiptList_Cancel\")}\r\n                onClick={() => this.setState({ openReceipt: false })}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  handleManualEntryTabChange = (activeIndex) => {\r\n    try {\r\n      this.setState({ manualEntryTabActiveIndex: activeIndex });\r\n    } catch (error) {\r\n      console.log(\r\n        \"RailDispatchDetailsComposite: Error occurred on handleManualEntryTabChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDrawer = () => {\r\n    var drawerStatus = lodash.cloneDeep(this.state.drawerStatus);\r\n    this.setState({\r\n      drawerStatus: !drawerStatus,\r\n    });\r\n  };\r\n\r\n  //Get KPI for Rail Receipt\r\n  getKPIList() {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      var notification = {\r\n        message: \"\",\r\n        messageType: \"critical\",\r\n        messageResultDetails: [],\r\n      };\r\n      let objKPIRequestData = {\r\n        PageName: kpiRailReceiptList,\r\n        InputParameters: [],\r\n      };\r\n\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              railReceiptKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ railReceiptKPIList: [] });\r\n            console.log(\"Error in Rail Receipt KPIList:\", result.ErrorList);\r\n            notification.messageResultDetails.push({\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: result.ErrorList[0],\r\n            });\r\n          }\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Rail Receipt KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showDeleteAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showDeleteAuthenticationLayout });\r\n      if (showDeleteAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Marine Shipment Composite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n \r\n\r\n  handleAuthenticationClose = () => {\r\n    \r\n    this.setState({\r\n      showDeleteAuthenticationLayout: false,\r\n      showAuthorizeToUnLoadAuthenticationLayout: false,\r\n      showCloseReceiptAuthenticationLayout: false,\r\n      showViewBODAuthenticationLayout: false,\r\n      showPrintBODAuthenticationLayout:false,\r\n      showRANAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  \r\n  getFunctionGroupName() {\r\n    if(this.state.showDeleteAuthenticationLayout )\r\n      return fnRailReceipt\r\n    else if(this.state.showCloseReceiptAuthenticationLayout)\r\n      return fnCloseRailReceipt\r\n    else if(this.state.showAuthorizeToUnLoadAuthenticationLayout)\r\n      return fnViewRailReceipt\r\n    else if(this.state.showViewBODAuthenticationLayout || this.state.showPrintBODAuthenticationLayout)\r\n      return fnPrintRailBOD\r\n      else if(this.state.showRANAuthenticationLayout)\r\n      return fnPrintRailRAN\r\n   };\r\n\r\n   getDeleteorEditMode() {\r\n    if(this.state.showDeleteAuthenticationLayout)\r\n      return functionGroups.remove;\r\n    else\r\n      return functionGroups.modify;\r\n   };\r\n\r\n   handleOperation()  {\r\n  \r\n    if(this.state.showDeleteAuthenticationLayout)\r\n      return this.handleDelete\r\n    else if(this.state.showAuthorizeToUnLoadAuthenticationLayout)\r\n      return this.handleAuthorizeToUnload\r\n    else if(this.state.showCloseReceiptAuthenticationLayout)\r\n      return this.closeRailDispatch\r\n    else if(this.state.showRANAuthenticationLayout)\r\n      return this.handlePrintRAN\r\n    else if(this.state.showViewBODAuthenticationLayout)\r\n      return this.handleViewBOD;\r\n      else if(this.state.showPrintBODAuthenticationLayout)\r\n      return this.handlePrintBOD;\r\n };\r\n\r\n  render() {\r\n    let loadingClass = \"globalLoader\";\r\n    return (\r\n      <div>\r\n        {this.renderModal()}\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            breadcrumbItem={this.props.activeItem}\r\n            shareholders={this.props.userDetails.EntityResult.ShareholderList}\r\n            selectedShareholder={this.state.selectedShareholder}\r\n            onShareholderChange={this.handleShareholderSelectionChange}\r\n            onAdd={this.handleAdd}\r\n            onDelete={this.authenticateDelete}\r\n            shrVisible={false}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isRecordWeight === \"true\" ? (\r\n          <ErrorBoundary>\r\n            <RailReceiptRecordWeightDetailsComposite\r\n              Key=\"RailReceiptRecordWeightDetails\"\r\n              selectedRow={this.state.selectedItems[0]}\r\n              shareholderCode={this.state.selectedShareholder}\r\n              handleBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n            ></RailReceiptRecordWeightDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isViewAuditTrail === \"true\" ? (\r\n          <ErrorBoundary>\r\n            <RailReceiptViewAuditTrailDetailsComposite\r\n              Key=\"RailReceiptViewAuditTrailDetails\"\r\n              selectedRow={this.state.selectedItems[0]}\r\n              shareholderCode={this.state.selectedShareholder}\r\n              handleBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n            ></RailReceiptViewAuditTrailDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isViewUnloadingDetails === \"true\" ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <TranslationConsumer>\r\n                {(t) => (\r\n                  <TMDetailsHeader\r\n                    newEntityName={t(\"ViewRailReceiptUnloading_Title\")}\r\n                  />\r\n                )}\r\n              </TranslationConsumer>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n              <RailReceiptUnLoadingDetails\r\n                tableData={this.state.ViewUnloadingData.Table}\r\n              ></RailReceiptUnLoadingDetails>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n              <TranslationConsumer>\r\n                {(t) => (\r\n                  <div className=\"row\">\r\n                    <div className=\"col\" style={{ textAlign: \"left\" }}>\r\n                      <Button\r\n                        className=\"backButton\"\r\n                        onClick={() => this.handleBack()}\r\n                        content={t(\"Back\")}\r\n                      ></Button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </TranslationConsumer>\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : this.state.isLoadSpotAssign ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <RailReceiptLoadSpotAssignComposite\r\n                onSaved={this.savedEvent}\r\n                selectedRow={this.state.selectedItems[0]}\r\n                selectedShareholder={this.state.selectedShareholder}\r\n                onBack={this.handleBack}\r\n              />\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : this.state.isMunalEntry === \"true\" ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              {\r\n                <RailReceiptManualEntryComposite\r\n                  onSaved={this.savedEvent}\r\n                  selectedRow={this.state.selectedItems[0]}\r\n                  selectedShareholder={this.state.selectedShareholder}\r\n                  onBack={this.handleBack}\r\n                ></RailReceiptManualEntryComposite>\r\n              }\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : this.state.isDetails === \"true\" ? (\r\n          <div>\r\n            {/* <div\r\n              className={\r\n                this.state.isShowRightPanel ? \"showShipmentStatusRightPane\" : \"\"\r\n              }\r\n            > */}\r\n            <div\r\n              className={\r\n                this.state.isShowRightPanel\r\n                  ? !this.state.drawerStatus\r\n                    ? \"showShipmentStatusRightPane\"\r\n                    : \"drawerClose\"\r\n                  : \"\"\r\n              }\r\n            >\r\n              <ErrorBoundary>\r\n                <RailReceiptDetailsComposite\r\n                  Key=\"RailReceiptDetails\"\r\n                  selectedRow={this.state.selectedRow}\r\n                  selectedShareholder={this.state.selectedShareholder}\r\n                  onBack={this.handleBack}\r\n                  onSaved={this.savedEvent}\r\n                  enableHSEInspection={this.state.enableHSEInspection}\r\n                  handleOperationClick={this.handleOperationClick}\r\n                  onUpdateStatusOperation={this.handleUpdateStatusOperation}\r\n                  terminalCodes={this.state.terminalCodes}\r\n                  genericProps={this.props.activeItem.itemProps}\r\n                  railLookUpData={this.state.railLookUpData}\r\n                  currentAccess={this.state.currentAccess}\r\n                ></RailReceiptDetailsComposite>\r\n              </ErrorBoundary>\r\n            </div>\r\n            {this.state.isShowRightPanel ? (\r\n              // <div className=\"showShipmentStatusLeftPane\">\r\n              <div\r\n                className={\r\n                  this.state.drawerStatus ? \"marineStatusLeftPane\" : \"\"\r\n                }\r\n              >\r\n                {/* <RailReceiptSummaryOperations\r\n                  selectedItem={this.state.selectedItems}\r\n                  NextOperations={this.state.NextOperations}\r\n                  handleDetailsPageClick={this.handleRowClick}\r\n                  handleOperationButtonClick={this.handleOperationClick}\r\n                  currentStatuses={this.state.currentStatuses}\r\n                  lastStatus={this.state.lastStatus}\r\n                  pageStatus={false}\r\n                  railReceiptBtnStatus={this.state.railReceiptBtnStatus}\r\n                /> */}\r\n                <TransactionSummaryOperations\r\n                  selectedItem={this.state.selectedItems}\r\n                  shipmentNextOperations={this.state.NextOperations}\r\n                  handleDetailsPageClick={this.handleRowClick}\r\n                  handleOperationButtonClick={this.handleOperationClick}\r\n                  currentStatuses={this.state.currentStatuses}\r\n                  isDetails={this.state.isDetails}\r\n                  handleDrawer={this.handleDrawer}\r\n                  isWebPortalUser={\r\n                    this.props.userDetails.EntityResult.IsWebPortalUser\r\n                  }\r\n                  title={\"ViewAllShipment_Details\"}\r\n                  unAllowedOperations={[]}\r\n                  webPortalAllowedOperations={[\r\n                    \"ViewRailReceipt_ViewLoadingDetails\",\r\n                    \"ViewRailReceipt_ViewAuditTrail\",\r\n                    \"ViewRailReceipt_ViewBOD\",\r\n                  ]}\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <div className=\"kpiSummaryContainer\">\r\n                <KPIDashboardLayout\r\n                  kpiList={this.state.railReceiptKPIList}\r\n                  pageName=\"RailReceipt\"\r\n                ></KPIDashboardLayout>\r\n              </div>\r\n            </ErrorBoundary>\r\n            {/* <div\r\n              className={\r\n                this.state.isShowRightPanel ? \"showShipmentStatusRightPane\" : \"\"\r\n              }\r\n            > */}\r\n            <div\r\n              className={\r\n                this.state.isShowRightPanel\r\n                  ? !this.state.drawerStatus\r\n                    ? \"showShipmentStatusRightPane\"\r\n                    : \"drawerClose\"\r\n                  : \"\"\r\n              }\r\n            >\r\n              <ErrorBoundary>\r\n                <TMTransactionFilters\r\n                  dateRange={{\r\n                    from: this.state.fromDate,\r\n                    to: this.state.toDate,\r\n                  }}\r\n                  dateError={this.state.dateError}\r\n                  handleDateTextChange={this.handleDateTextChange}\r\n                  handleRangeSelect={this.handleRangeSelect}\r\n                  handleLoadOrders={this.handleLoadOrders}\r\n                  filterText=\"LoadReceipts\"\r\n                ></TMTransactionFilters>\r\n              </ErrorBoundary>\r\n              {this.state.isReadyToRender ? (\r\n                <ErrorBoundary>\r\n                  <RailReceiptSummaryPageComposite\r\n                    tableData={this.state.data.Table}\r\n                    columnDetails={this.state.data.Column}\r\n                    pageSize={\r\n                      this.props.userDetails.EntityResult.PageAttibutes\r\n                        .WebPortalListPageSize\r\n                    }\r\n                    exportRequired={true}\r\n                    exportFileName=\"RailReceiptList\"\r\n                    columnPickerRequired={true}\r\n                    terminalsToShow={\r\n                      this.props.userDetails.EntityResult.PageAttibutes\r\n                        .NoOfTerminalsToShow\r\n                    }\r\n                    selectionRequired={true}\r\n                    columnGroupingRequired={true}\r\n                    onSelectionChange={this.handleSelection}\r\n                    onRowClick={this.handleRowClick}\r\n                    parentComponent={this.componentName}\r\n                  ></RailReceiptSummaryPageComposite>\r\n                </ErrorBoundary>\r\n              ) : (\r\n                <LoadingPage\r\n                  loadingClass={loadingClass}\r\n                  message=\"Loading\"\r\n                ></LoadingPage>\r\n              )}\r\n            </div>\r\n            {this.state.isShowRightPanel ? (\r\n              // <div className=\"showShipmentStatusLeftPane\">\r\n              <div\r\n                className={\r\n                  this.state.drawerStatus ? \"marineStatusLeftPane\" : \"\"\r\n                }\r\n              >\r\n                \r\n                <TransactionSummaryOperations\r\n                  selectedItem={this.state.selectedItems}\r\n                  shipmentNextOperations={this.state.NextOperations}\r\n                  handleDetailsPageClick={this.handleRowClick}\r\n                  handleOperationButtonClick={this.handleOperationClick}\r\n                  currentStatuses={this.state.currentStatuses}\r\n                  isDetails={this.state.isDetails}\r\n                  handleDrawer={this.handleDrawer}\r\n                  isWebPortalUser={\r\n                    this.props.userDetails.EntityResult.IsWebPortalUser\r\n                  }\r\n                  title={\"ViewAllReceipt_Details\"}\r\n                  unAllowedOperations={[]}\r\n                  webPortalAllowedOperations={[\r\n                    \"ViewRailReceipt_ViewLoadingDetails\",\r\n                    \"ViewRailReceipt_ViewAuditTrail\",\r\n                    \"ViewRailReceipt_ViewBOD\",\r\n                  ]}\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        )}\r\n\r\n        {Object.keys(this.state.selectedRow).length > 0 ||\r\n          this.state.selectedItems.length === 1\r\n          ? this.renderReportModal()\r\n          : \"\"}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n\r\n        {this.state.showDeleteAuthenticationLayout  ||\r\n           this.state.showAuthorizeToUnLoadAuthenticationLayout ||\r\n           this.state.showCloseReceiptAuthenticationLayout ||\r\n           this.state.showViewBODAuthenticationLayout ||\r\n           this.state.showPrintBODAuthenticationLayout ||\r\n           this.state.showRANAuthenticationLayout \r\n          ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={this.getDeleteorEditMode()}\r\n            functionGroup={this.getFunctionGroupName()}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleOperation()}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RailReceiptComposite);\r\nRailReceiptComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n  selectedShareholder: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport { Icon, Modal, Button } from '@scuf/common';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorBoundary from '../../ErrorBoundary';\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport \"../../../CSS/styles.css\"\r\n\r\nconst CommonConfirmModal = (props) => {\r\n  return (\r\n    <ErrorBoundary>\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div id=\"confirmModal\">\r\n            <Modal open={props.isOpen} size=\"large\">\r\n              <Modal.Content>\r\n                <div style={{ textAlign: \"center\", fontSize: \"20px\" }}>\r\n                  <div>\r\n                    <b>{t(props.confirmMessage)}</b>\r\n                  </div>\r\n                  <div style={{ marginTop: \"50px\" }}>\r\n                    <Button\r\n                      type=\"secondary\"\r\n                      content={t(\"COMMON_NO\")}\r\n                      onClick={() => props.handleNo()}\r\n                    />\r\n                    <Button\r\n                      type=\"primary\"\r\n                      content={t(\"COMMON_YES\")}\r\n                      onClick={() => props.handleYes()}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Modal.Content>\r\n            </Modal>\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n    </ErrorBoundary >\r\n  )\r\n}\r\n\r\nCommonConfirmModal.propTypes = {\r\n  confirmMessage: PropTypes.string,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  handleYes: PropTypes.func,\r\n  handleNo: PropTypes.func\r\n}\r\n\r\nCommonConfirmModal.defaultProps = {\r\n  isOpen: false\r\n}\r\n\r\nexport default CommonConfirmModal;","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { DatePicker, Button } from \"@scuf/common\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function TMTransactionFilters({\r\n  handleDateTextChange,\r\n  handleRangeSelect,\r\n  handleLoadOrders,\r\n  dateError,\r\n  dateRange,\r\n  filterText,\r\n}) {\r\n  //console.log(dateError);\r\n\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"dateRangeContainer\">\r\n          <div className=\"dateRangeMargin\">\r\n            <DatePicker\r\n              type=\"daterange\"\r\n              closeOnSelection={true}\r\n              error={t(dateError)}\r\n              displayFormat={getCurrentDateFormat()}\r\n              //value={dateRange}\r\n              rangeValue={dateRange}\r\n              onTextChange={handleDateTextChange}\r\n              onRangeSelect={handleRangeSelect}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"dateSearch\">\r\n            <Button content={t(filterText)} onClick={handleLoadOrders} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as WjCore from \"@grapecity/wijmo\";\r\nimport { ReportViewer } from \"@grapecity/wijmo.react.viewer\";\r\nimport * as wjViewer from \"@grapecity/wijmo.viewer\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Constants from \"./../../../JS/Constants\";\r\nimport { connect } from \"react-redux\";\r\n\r\nTMReportViewer.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\n\r\nTMReportViewer.defaultProps = {\r\n  parameters: {},\r\n};\r\n\r\nWjCore.setLicenseKey(Constants.wizmoKey);\r\n\r\nfunction TMReportViewer({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  parameters,\r\n  filePath,\r\n  ...props\r\n}) {\r\n  //   const [proxyHost, setProxyHost] = useState(\r\n  //     \"http://localhost:8888/TMWebProxyAPI/\"\r\n  //   );\r\n  //   const [reportServiceHost, setReportServiceHost] = useState(\r\n  //     \"http://localhost:5632/\"\r\n  //   );\r\n  //   const [reportUrl, setReportUrl] = useState(proxyHost + \"api/report\");\r\n  //   const [filePath, setFilePath] = useState(\r\n  //     \"TM/\" + \"TMReports/\" + \"CarrierCompanyReport\"\r\n  //   );\r\n  const reportUrl = proxyServerHost + \"api/report\";\r\n  //const filePath = \"TM/\" + \"TMReports/\" + reportName;\r\n\r\n  const beforeXhrRequestSend = (s, event) => {\r\n    // use this event for Authorization purpose\r\n    const prevBeforeSend = event.settings.beforeSend;\r\n    event.settings.beforeSend = function (xhr) {\r\n      prevBeforeSend && prevBeforeSend(xhr);\r\n      //here you may add the params for XMLHttpRequest as required\r\n      if (!props.userDetails.EntityResult.IsWebPortalUser)\r\n        xhr.withCredentials = true;\r\n      if (xhr.URL_DEBUG.indexOf(\"parameters\") > -1) {\r\n        xhr.onreadystatechange = function () {\r\n          if (this.readyState === 4 && this.status === 200) {\r\n            var host = s.hostElement;\r\n            setTimeout(() => {\r\n              var splitter = host.querySelector(\".wj-viewer-splitter\");\r\n              var param = host\r\n                .querySelector(\".wj-viewer-tabsleft\")\r\n                .querySelectorAll(\"li\")[2];\r\n              if (!param.disabled) {\r\n                param.className = \"hidden\";\r\n                splitter.click();\r\n              }\r\n            }, 1000);\r\n          }\r\n        };\r\n      }\r\n    };\r\n  };\r\n  let header = {\r\n    Authorization: \"Bearer \" + props.tokenDetails.tokenInfo,\r\n  };\r\n\r\n  // let header = {\r\n  //   Authorization: \"Bearer \" + \"fiewjfjewifi\",\r\n  // };\r\n\r\n  const initViewer = (s, event) => {\r\n    wjViewer._ReportService.prototype.load = function (data) {\r\n      var _this = this;\r\n      var promise = new wjViewer._Promise();\r\n      if (!this._checkReportController(promise)) {\r\n        return promise;\r\n      }\r\n      this.httpRequest(this._getReportInstancesUrl(), {\r\n        method: \"POST\",\r\n        data: data,\r\n      }).then(\r\n        function (xhr) {\r\n          var v = wjViewer._parseReportExecutionInfo(xhr.responseText);\r\n          _this._instanceId = v.id;\r\n          _this._status = wjViewer._ExecutionStatus.loaded;\r\n          _this._outlinesLocation = v.outlinesLocation;\r\n          _this._statusLocation = v.statusLocation.replace(\r\n            reportServiceHost,\r\n            proxyServerHost\r\n          );\r\n          _this._pageSettingsLocation = v.pageSettingsLocation;\r\n          _this._featuresLocation = v.featuresLocation;\r\n          _this._parametersLocation = v.parametersLocation;\r\n          promise.resolve(v);\r\n        },\r\n        function (xhr) {\r\n          promise.reject(_this._getError(xhr));\r\n        }\r\n      );\r\n      return promise;\r\n    };\r\n  };\r\n\r\n  //console.log(props.userDetails.EntityResult.IsWebPortalUser, header);\r\n  return (\r\n    <div>\r\n      {props.userDetails.EntityResult.IsWebPortalUser ? (\r\n        <div>\r\n          <ReportViewer\r\n            requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <ReportViewer\r\n            //requestHeaders={header}\r\n            style={{ height: \"80vh\" }}\r\n            parameters={parameters}\r\n            serviceUrl={reportUrl}\r\n            filePath={filePath}\r\n            initialized={initViewer}\r\n            beforeSendRequest={beforeXhrRequestSend}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TMReportViewer);\r\n","import React from \"react\";\r\nimport { Modal, Button, Header } from \"@scuf/common\";\r\nimport TMReportViewer from \"../Common/TMReportViewer\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nReportDetails.propTypes = {\r\n  proxyServerHost: PropTypes.string.isRequired,\r\n  reportServiceHost: PropTypes.string.isRequired,\r\n  filePath: PropTypes.string.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  showReport: PropTypes.bool.isRequired,\r\n  handleModalClose: PropTypes.func.isRequired,\r\n  parameters: PropTypes.object.isRequired,\r\n};\r\nReportDetails.defaultProps = {\r\n  parameters: {},\r\n};\r\nexport default function ReportDetails({\r\n  proxyServerHost,\r\n  reportServiceHost,\r\n  filePath,\r\n  handleBack,\r\n  showReport,\r\n  handleModalClose,\r\n  parameters,\r\n}) {\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <Modal\r\n      style={{ padding: \"0px\" }}\r\n      size=\"fullscreen\"\r\n      open={showReport}\r\n      // onClose={handleModalClose}\r\n    >\r\n      <div>\r\n        <Header title={t(\"Header_TerminalManager\")} menu={false} />\r\n        <TMReportViewer\r\n          proxyServerHost={proxyServerHost}\r\n          reportServiceHost={reportServiceHost}\r\n          filePath={filePath}\r\n          parameters={parameters}\r\n        />\r\n        <div style={{ marginTop: \"10px\", marginLeft: \"20px\" }}>\r\n          <Button\r\n            className=\"backButton\"\r\n            onClick={handleBack}\r\n            content={t(\"Report_Back\")}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","WijmoGrid","flex","setFlex","translator","useTranslation","_getData","pageLength","CollectionView","sourceData","pageSize","setData","rowsPerPage","theGrid","React","theSearch","gridFilter","pagingComponent","colPicker","selectedRows","selectionRequired","selector","gridInitialized","grid","customizeFilterConditions","onRowClick","addEventListener","hostElement","e","ht","hitTest","target","closest","classList","includes","cellType","wjGrid","Cell","rowData","rows","row","dataItem","selectionMode","wjCore","select","Selector","itemChecked","s","singleSelection","filter","isSelected","current","loadash","forEach","onSelectionHandle","r","selectedRow","showCheckAll","column","rowHeaders","columns","headersVisibility","HeadersVisibility","All","useEffect","control","push","selectedItems","refresh","localStorage","getItem","parentComponent","gridState","JSON","parse","newFlex","col","matchedCol","colSetting","binding","visible","filterDefinition","collectionView","deferUpdate","sortDescriptions","clear","i","sortDesc","property","ascending","groupDescriptions","sessionStorage","gridSessionState","moveToPage","pageCount","pageIndex","text","searchText","columnPickerRequired","itemsSource","checkedMemberPath","displayMemberPath","lostFocus","addHandler","hidePopup","exportExcel","gridFlex","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","exportFileName","displayValues","columnDetail","Name","PopOver","terminalCodes","split","terminalsToShow","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","saveGridState","group","document","getElementsByClassName","chkbx","parentNode","sessionState","setItem","stringify","FlexGridFilter","operator","Operator","header","descending","apply","conditions","search","selectAll","and","or","cancel","stringOperators","op","EQ","NE","BW","EW","CT","NC","numberOperators","GT","LT","GE","LE","dateOperators","booleanOperators","getWidth","columnDetails","window","screen","width","WidthPx","parseInt","WidthPercentage","FlexGridSearch","class","ref","id","actionType","event","host","offsetHeight","focus","showPopup","PopupPosition","Below","preventDefault","colPickerClickHandler","exportRequired","fontSize","top","columnGroupingRequired","GroupPanel","FlexGrid","autoGenerateColumns","alternatingRowStep","autoRowHeights","initialized","virtualizationThreshold","onUpdatedView","FlexGridColumn","minWidth","isReadOnly","wordWrap","align","FlexGridCellTemplate","template","context","conditionalRowStyleCheck","conditionalRowStyles","ListBox","picker","initializedPicker","CollectionViewNavigator","headerFormat","byPage","cv","wjcCore","Constants","RailReceiptViewAuditTrailDetailsComposite","receiptViewAuditTrailData","modReceiptViewAuditTrailData","auditTrailAttributeMetaDataList","Attributes","handlePrint","openPrint","getReceiptViewAuditTrail","receiptCode","keyCode","KeyCodes","obj","ReceiptCode","TmWebApiRequest","ShareHolderCode","shareholderCode","receiptStatus","ReceiptStatus","AUTO_UNLOADED","AUTO_LOADED","CHECKED_IN","CLOSED","INTERRUPTED","UNLOADING","MANUALLY_UNLOADED","PARTIALLY_UNLOADED","QUEUED","READY","DE_QUEUED","WEIGHED_IN","WEIGHED_OUT","USER_DEFINED","ASSIGNED","CANCELLED","EXPIRED","REJECTED","attributeMetaDataList","AttributesforUI","formReadonlyCompAttributes","UpdatedTime","attributes","compAttributes","att","attribute","AttributeCode","Code","AttributeName","DisplayName","AttributeValue","DefaultValue","TerminalCode","IsMandatory","IsReadonly","MinValue","MaxValue","ValidationFormat","compSequenceNo","compAtt","ListOfAttributeData","selAtt","getAttributes","MARINEDISPATCHSTATUSTIME","Common_Code","IsArchived","printTable","el","getElementById","innerHTML","iframe","createElement","doc","body","appendChild","contentWindow","str1","substring","indexOf","str2","replace","write","info","close","print","setTimeout","removeChild","handleStatus","COMPLETED","toLocaleString","EMPTY","FORCE_COMPLETED","OVER_UNLOADED","PART_UNLOADED","UNLOAD_NOTSTARTED","handleAttributeType","STRING","INT","LONG","FLOAT","BOOL","Checkbox","checked","formatter","engine","cls","val","onClose","closeOnDimmerClick","wjChart","chartType","bindingX","palette","height","wjProperty","majorUnit","max","min","itemFormatter","axisLine","DataTable","scrollable","Column","field","editable","editFieldType","renderer","cellData","handleBack","receipt","userActions","bindActionCreators","RailReceiptSummaryPageComposite","tableData","onSelectionChange","WijmoGridComposite","RailReceiptManualEntryDetails","modLoadingDataInfo","IsManEntryEnabled","listOptions","onTankSearchChange","onMeterSearchChange","onTabChange","tabActiveIndex","isEnterpriseNode","selectedFPAttributeList","selectedBPAttributeList","selectedAddAttributeList","handleAttributeCellDataEdit","attributeAddValidationErrors","attributeBPValidationErrors","attributeFPValidationErrors","onDateTextChange","handleValidationErrorFilter","attributeValidationErrors","terminal","attributeValidation","find","selectedAttribute","generateTabPane","listIndex","isAdditive","errorIndex","title","dataKeyName","ArrTransactionAdditive","AdditiveProductCode","BaseProductCode","ArrTransactionBP","Tab","Pane","GrossQuantity","index","product","NetQuantity","Temperature","TemperatureUOM","temperatureUOMs","noResultsMessage","ProductDensity","ProductDensityUOM","densityUOMs","MeterCode","getOptionsWithSelect","meterCodes","onSearch","TankCode","tankCodes","StartTotalizer","EndTotalizer","NetStartTotalizer","NetEndTotalizer","CalculatedGross","CalculatedNet","CalculatedValueUOM","multiple","quantityUOMs","attire","Accordion","AttributeDetails","selectedAttributeList","handleCellDataEdit","tabPaneList","CommonInfo","CarrierCode","TrailerCode","wagonCodes","BayCode","clusterCodes","bayCode","BCUCode","BCUCodes","TransactionFPinfo","ArmCode","loadingArmCodes","LoadingArm","FinishedProductCode","TransactionID","common","DatePicker","StartTime","disablePast","disableFuture","minuteStep","showYearSelector","displayFormat","getCurrentDateFormat","onTextChange","EndTime","QuantityUOM","Remarks","activeIndex","RailReceiptManualEntryComposite","_this","loadingDataInfo","manualEntryTabActiveIndex","SaveEnabled","railReceipt","modRailReceipt","modRailWagon","modWagonDetails","modRailReceiptCompartmentPlanList","isReadyToRender","getShareholders","selectedWagonRow","manualEntryValidationDict","clusterCodeOptions","clusterBCUOptions","BCUCodeOptions","loadingArmCodeOptions","quantityUOMOptions","densityUOMOptions","temperatureUOMOptions","meterCodeOptions","meterCodeSearchOptions","tankCodeOptions","tankCodeSearchOptions","wagonCodeOptions","openManualEntryWarn","loadingArmCodeList","attributeFPMetaDataList","attributeBPMetaDataList","attributeAddMetaDataList","showAuthenticationLayout","tempUnLoadingDetails","handleshareholderChange","shareholderList","getTerminalsList","handleCompartmentManualEntryChange","dataPosition","preprocessManualEntryData","triggerToGetLoadingArmCode","bcuCodeList","getDefaultUOMs","getLoadingArms","entityResult","Array","isArray","GetMetersForLA","handleCompartmentManualEntryReset","initialManualEntryValidationErrors","handleCompartmentManualEntrySave","fillDetails","attributeFPList","attributeBPList","attributeAddList","validateManualEntry","fillAttributeDetails","IsWebPortalUser","saveManualEntry","handleAuthenticationClose","PrimaryShareholder","keyDataCode","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","handleTankSearchChange","tankCode","slice","handleMeterSearchChange","meterCode","handleManualEntryTabChange","handleDateTextChange","componentWillReceiveProps","nextProps","getRailWagon","getRailReceipt","getFinishedProductCodes","RAIL","finishedProductOptions","getUOMs","getTankCode","getMeterCode","getRailBayAndBcuList","clusterCodeList","Table","cluster","Table1","BCU","locationCode","callback","transportationType","getTransportationType","emptyRailReceipt","TransportationType","emptyLoadingDataInfo","emptyRailMarineTransactionCommonInfo","emptyRailMarineTransactionProductInfo","IsLocalLoaded","LoadingType","TransactionType","IsBonded","wagonDetails","getWagonDetailsFromReceipt","saveEnabled","handleManualEntry","genericProps","ShareholderList","checkManualEntryEnabled","trailerCode","ReceiptCompartmentStatus","getTankCodeSearchOptions","getMeterCodeSearchOptions","VOLUME","MASS","quantityUOMList","UOM","DENSITY","densityUOMList","TEMPERATURE","temperatureUOMList","getRailReceiptCompartmentPlanListFromReceipt","ReceiptCompartmentPlanList","RailMarineReceiptCompartmentPlanList","receiptCompartment","CarrierCompanyCode","SequenceNo","getKeyByValue","AdjustedPlanQuantity","NetUnLoadedQuantity","UnloadedQuantity","UnloadedQuantityUOM","PurgingRequired","PurgingCompleted","AssociatedOrderItems","IsTransloading","ShareholderCode","CompartmentCode","PlannedQuantity","PlanQuantityUOM","CompartmentSeqNoInVehicle","AssociatedContractItems","ReceiptCompartmentTanks","wagonCodeList","wagonDetail","ForceComplete","getFinishedProduct","finishedProductCode","shareHolderCode","compartmentPlan","compartmentDetailPlan","RailMarineReceiptCompartmentDetailPlanList","onNotify","FinishedProductItems","productInfo","AdditiveCode","bcuCode","densityUOM","temperatureUOM","bcu","DensityUOM","loadingArmCode","RAIL_BCUVIEW","ActualTerminalCode","loadingArm","AssociatedArmsList","larm","mainLineMeters","additiveMeters","AssociatedMeterList","meter","MeterLineType","bpMeterCode","additiveMeterCode","MeterList","commonValidation","productValidation","railReceiptCompartmentManualEntryValidationDef","tabIndex","validateFlag","attributeMetaData","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","RAILUNLOADINGDETAILSFP","RAILUNLOADINGDETAILSBP","RAILUNLOADINGDETAILSADDITIVE","IsEnterpriseNode","terminalFPSelectionChange","terminalBPSelectionChange","terminalAddSelectionChange","localNodeAttribute","comp","det","addAtt","selectedTerminals","attributesTerminalsList","existitem","Attributevalue","Attribute","valueAttribute","x","keys","attributesTerminalsLists","bpItem","addItem","handleResetAttributeValidationError","renderModal","TMDetailsUserActions","onBack","handleSave","handleReset","UserName","functionGroups","fnViewRailUnLoadingDetails","LoadingPage","RailReceiptLoadSpotAssignDetails","modRailWagonBatchPlanList","onCellDataEdit","onAuthorize","handleCustomEditDropDown","dropDownOptions","rowIndex","handleCustomEditTextBox","AuthorizeButton","decimalDisplayValues","ScheduledDate","customEditRenderer","spurCodes","RailReceiptLoadSpotAssignmentComposite","spurCodeOptions","loadSpotClusterCodeOptions","loadSpotBCUCodeOptions","railWagonBatchPlanList","loadSpotAssignmentSaveEnabled","isShowMultipleSpurs","handleLoadSpotAssignmentAssignWagon","railWagonBatchPlan","AllowAuthorize","RailWagonCode","handleLoadSpotAssignmentCellDataEdit","newVal","getRailLoadSpotDevices","GetRailLoadSpot","handleLoadSpotAssignReset","saveLoadSpotAssign","initialLoadSpotAssignmentList","FunctionsList","modify","fnRailReceiptUnloadSpotAssignment","handleLoadSpotAssignSave","validateLoadSpotAssignSave","differentSpurs","SpurCode","saveLoadSpotAfterConfirm","ParentEntityCode","EntityType","rowindx","EntityCode","Loadresponse","ClusterCode","ArmNoInBCU","KeyCode","railReceiptLoadSpotAssignmentDefMod","railReceiptLoadSpotAssignmentDef","validator","displayName","TMDetailsHeader","entityCode","newEntityName","CommonConfirmModal","isOpen","confirmMessage","handleNo","handleYes","RailReceiptUnLoadingDetails","convertNumberWithUOM","quantityString","quantityList","parseFloat","changeNoSpaceNumber","bAutoWidth","scrollHeight","resizableColumns","initialWidth","celldata","RailReceiptComposite","receiptItem","isShowRightPanel","isDetails","isRecordWeight","isViewAuditTrail","isViewUnloadingDetails","isMunalEntry","isLoadSpotAssign","ViewUnloadingData","ViewUnloadingHideFields","isOperation","reason","isDetailsModified","loadingDetails","loadingDetailsHideFields","fromDate","toDate","dateError","openReceipt","railReceiptBtnCloseOK","NextOperations","currentStatuses","lastStatus","railReceiptType","modWeight","viewTab","railReceiptValidationDef","enableHSEInspection","attributeRailReceiptDataList","railLookUpData","showReport","drawerStatus","currentAccess","railReceiptKPIList","railReceiptDeleteStates","activityInfo","showDeleteAuthenticationLayout","showAuthorizeToUnLoadAuthenticationLayout","showCloseReceiptAuthenticationLayout","showViewBODAuthenticationLayout","showPrintBODAuthenticationLayout","showRANAuthenticationLayout","componentName","handleAdd","handleDelete","deleteRailReceiptKeys","RailReceiptCode","shCode","KeyData","Key","Value","isRefreshDataRequire","ResultDataList","res","getRailReceiptList","getKPIList","messageResult","toast","NotifyEvent","notificationMessage","autoClose","handleRangeSelect","to","from","handleLoadOrders","fnRailReceipt","handleRowClick","receiptDeleteInfo","ActivityCode","RAIL_RECEIPT_ENABLE_DELETE","ActionTypeCode","CHECK","receiptDeleteStates","ReceiptStates","toUpperCase","remove","getRailReceiptOperations","getRailReceiptAllChangeStatus","detailEnable","handleSelection","items","isReady","findIndex","handleUpdateStatusOperation","AssociatedTerminals","TerminalCodes","AcutalTerminalCode","localTerminalCode","Reason","ViewRailReceipt_Delete","ViewRailReceipt_Update","operationOrder","operation","IsBSIEnabledLicense","savedEvent","saveType","Common_Shareholder","getLookUpData","lookUpTypeCode","componentWillUnmount","clearStorage","removeEventListener","removeItem","handleShareholderSelectionChange","handleOperationClick","ViewRailReceipt_AuthorizeToUnload","authorizeToUnLoadClick","ViewRailReceipt_RecordWeight","handleRecordWeight","ViewRailReceipt_CloseReceipt","ViewRailReceipt_ViewAuditTrail","handleViewAuditTrail","ViewRailReceipt_ViewLoadingDetails","handleViewUnLoadingDetails","ViewRailReceipt_PrintRAN","printRANClick","ViewRailReceipt_ViewBOD","viewBODClick","ViewRailReceipt_PrintBOD","printBODClick","ViewRailReceipt_BISOutbound","handleBSIOutbound","ViewRailReceipt_ManualEntry","handleRailReceiptManualEntry","ViewRailReceipt_LoadSpotAssign","handleLoadSpotAssign","handleAuthorizeToLoad","handleAuthorizeToUnload","handleCloseReceipt","closeRailDispatch","entity","handlePrintRAN","handleNotify","handleModalBack","handleViewBOD","reportServiceURI","handlePrintBOD","handleDrawer","authenticateDelete","setHours","startRange","endRange","selectedItem","updatedSelectedItem","EnableRail","GetReceiptActivityInfo","activeItem","cobj","renderReportModal","path","paramValues","Culture","UICulture","ReportDetails","handleModalClose","proxyServerHost","reportServiceHost","filePath","parameters","view","fnKPIInformation","objKPIRequestData","PageName","kpiRailReceiptList","InputParameters","ListKPIDetails","getFunctionGroupName","fnCloseRailReceipt","fnViewRailReceipt","fnPrintRailBOD","fnPrintRailRAN","getDeleteorEditMode","RailReceiptRecordWeightDetailsComposite","RailReceiptLoadSpotAssignComposite","RailReceiptDetailsComposite","onUpdateStatusOperation","TransactionSummaryOperations","shipmentNextOperations","handleDetailsPageClick","handleOperationButtonClick","isWebPortalUser","unAllowedOperations","webPortalAllowedOperations","KPIDashboardLayout","kpiList","pageName","TMTransactionFilters","dateRange","filterText","PageAttibutes","WebPortalListPageSize","NoOfTerminalsToShow","loadingClass","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","closeOnSelection","rangeValue","onRangeSelect","TMReportViewer","reportUrl","beforeXhrRequestSend","prevBeforeSend","settings","beforeSend","xhr","withCredentials","URL_DEBUG","onreadystatechange","readyState","status","splitter","querySelector","param","querySelectorAll","click","Authorization","initViewer","wjViewer","prototype","load","promise","_checkReportController","httpRequest","_getReportInstancesUrl","method","v","responseText","_instanceId","_status","loaded","_outlinesLocation","outlinesLocation","_statusLocation","statusLocation","_pageSettingsLocation","pageSettingsLocation","_featuresLocation","featuresLocation","_parametersLocation","parametersLocation","resolve","reject","_getError","ReportViewer","requestHeaders","serviceUrl","beforeSendRequest","WjCore","menu","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","driverCode","customerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","shipmentCode","orderCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","siteViewType","entityType","cardReaderCode","accessCardCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","transportaionType","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks"],"sourceRoot":""}