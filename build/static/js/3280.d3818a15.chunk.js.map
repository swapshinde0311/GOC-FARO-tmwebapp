{"version":3,"file":"static/js/3280.d3818a15.chunk.js","mappings":"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","sources":["Components/Composite/Common/TMDetailsKPILayout.jsx","Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Common/WijmoGrid.jsx","Components/Composite/Common/WijmoGridComposite.jsx","Components/UIBase/Details/ShareholderDetails.jsx","Components/Composite/Details/ShareholderDetailsComposite.jsx","Components/Composite/Summary/ShareholderSummaryComposite.jsx","Components/Composite/Entity/ShareholderComposite.jsx","Components/UIBase/Common/AssociatedTerminals.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/FunctionGroups.js","JS/KeyCodes.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nexport default function TMDetailsKPILayout({\r\n    KPIList,\r\n    pageName,\r\n    rowHeight,\r\n    widgetHeight,\r\n    isDraggable,\r\n    isResizable,\r\n    kpiDisplayTopBreakpoint\r\n}) {\r\n    const [KPIDisplays, setKPIDisplays] = useState(1);\r\n\r\n    const kpiDiv = React.useRef(null);\r\n\r\n    const hideKpis = () => {\r\n        let currentScrollPos = window.pageYOffset;\r\n        let KPIDisplay = KPIDisplays;\r\n\r\n        // hide kpis based on div position to top of the window \r\n        if (kpiDiv.current && kpiDiv.current.getBoundingClientRect().top < kpiDisplayTopBreakpoint) {\r\n            KPIDisplay = 0;\r\n        }\r\n        // show the kpis once at top of the screen\r\n        else if (currentScrollPos === 0) {\r\n            KPIDisplay = 1\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n        setKPIDisplays(KPIDisplay);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\") {\r\n            window.addEventListener(\"scroll\", hideKpis);\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // remove listener on unmount\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", hideKpis)\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={kpiDiv}>\r\n            {KPIDisplays === 1 ? <TranslationConsumer>\r\n                {(t) => (\r\n                    <div style={{ marginTop: \"6px\" }}>\r\n                        <ErrorBoundary>\r\n                            <KPIDashboardLayout\r\n                                kpiList={KPIList}\r\n                                isDraggable={isDraggable}\r\n                                isResizable={isResizable}\r\n                                rowHeight={rowHeight}\r\n                                widgetHeight={widgetHeight}\r\n                                pageName={pageName}\r\n                            ></KPIDashboardLayout>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n                )}\r\n            </TranslationConsumer> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nTMDetailsKPILayout.propTypes = {\r\n    kpiDisplayTopBreakpoint: PropTypes.number\r\n}\r\n\r\nTMDetailsKPILayout.defaultProps = {\r\n    kpiDisplayTopBreakpoint: 100\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as wjCore from \"@grapecity/wijmo\";\r\nimport * as wjGrid from \"@grapecity/wijmo.grid\";\r\nimport {\r\n  FlexGrid,\r\n  FlexGridColumn,\r\n  FlexGridCellTemplate,\r\n} from \"@grapecity/wijmo.react.grid\";\r\nimport { FlexGridFilter } from \"@grapecity/wijmo.react.grid.filter\";\r\nimport { Operator } from \"@grapecity/wijmo.grid.filter\";\r\nimport { FlexGridSearch } from \"@grapecity/wijmo.react.grid.search\";\r\nimport { CollectionView } from \"@grapecity/wijmo\";\r\nimport { CollectionViewNavigator, ListBox } from \"@grapecity/wijmo.react.input\";\r\nimport { Selector } from \"@grapecity/wijmo.grid.selector\";\r\nimport { HeadersVisibility } from \"@grapecity/wijmo.grid\";\r\nimport { showPopup, hidePopup, PopupPosition } from \"@grapecity/wijmo\";\r\nimport * as wjcGridXlsx from \"@grapecity/wijmo.grid.xlsx\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport { GroupPanel } from \"@grapecity/wijmo.react.grid.grouppanel\";\r\nimport { Button, Card, Popup } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as loadash from \"lodash\";\r\nimport \"@grapecity/wijmo.touch\";\r\n\r\nconst WijmoGrid = (props) => {\r\n  const [flex, setFlex] = useState(null);\r\n  const [translator] = useTranslation();\r\n  const _getData = (pageLength) => {\r\n    return new CollectionView(props.sourceData, {\r\n      pageSize: pageLength,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState(_getData(props.rowsPerPage));\r\n  const theGrid = React.createRef();\r\n  const theSearch = React.createRef();\r\n  const gridFilter = React.createRef();\r\n  const pagingComponent = React.createRef();\r\n  const colPicker = React.useRef();\r\n\r\n  // to keep track of selected rows\r\n  const selectedRows = React.useRef(props.selectionRequired ? [] : null);\r\n\r\n  // to initialize grid checkbox selection\r\n  let selector = null;\r\n\r\n  //Initialize grid\r\n  const gridInitialized = (grid) => {\r\n    try {\r\n      // localize grid filter\r\n      customizeFilterConditions();\r\n\r\n      if (props.onRowClick) {\r\n        // add row click event handler\r\n        grid.addEventListener(grid.hostElement, \"click\", (e) => {\r\n          let ht = grid.hitTest(e);\r\n          // condition to check if cell is not a grouped cell and a data cell\r\n          if (\r\n            ht.target.closest(\".wj-cell\") &&\r\n            ![...ht.target.closest(\".wj-cell\").classList].includes(\r\n              \"wj-group\"\r\n            ) &&\r\n            ht.cellType === wjGrid.CellType.Cell\r\n          ) {\r\n            // fetch row data\r\n            const rowData = grid.rows[ht.row].dataItem;\r\n            props.onRowClick(rowData);\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      grid.select(-1, -1);\r\n\r\n      setFlex(grid);\r\n      if (props.selectionRequired) {\r\n        // enable checkbox selection\r\n        selector = new Selector(grid, {\r\n          itemChecked: (s, e) => {\r\n            // if only single checkbox selection is required\r\n            if (props.singleSelection) {\r\n              grid.rows\r\n                .filter((row) => {\r\n                  return (\r\n                    row.isSelected &&\r\n                    selectedRows.current.filter((item) =>\r\n                      loadash.isEqual(item, row.dataItem)\r\n                    ).length === 1\r\n                  );\r\n                })\r\n                .forEach((row) => {\r\n                  row.isSelected = false;\r\n                });\r\n            }\r\n\r\n            // pass row data as parameter to checkbox selection handler\r\n            props.onSelectionHandle(\r\n              grid.rows\r\n                .filter((r) => r.isSelected)\r\n                .map((selectedRow) => selectedRow.dataItem)\r\n            );\r\n          },\r\n          // if only single checkbox selection is required\r\n          showCheckAll: !props.singleSelection,\r\n        });\r\n\r\n        let theGrid = selector.column.grid;\r\n        selector.column = theGrid.rowHeaders.columns[0];\r\n        theGrid.headersVisibility = HeadersVisibility.All;\r\n        theGrid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in gridInitialized: \" + error);\r\n    }\r\n  };\r\n\r\n  //Update grid when data changes\r\n  useEffect(() => {\r\n    try {\r\n      if (theGrid != null) {\r\n        //Connect search to the grid\r\n        let grid = theGrid.current.control;\r\n        let search = theSearch.current.control;\r\n        search.grid = grid;\r\n      }\r\n\r\n      setData(_getData(props.rowsPerPage));\r\n    } catch (error) {\r\n      console.log(\"Error in grid update:\", error);\r\n    }\r\n  }, [props.sourceData]);\r\n\r\n  // Pre-select grid rows based on selectedItems props\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && props.selectionRequired) {\r\n        // clear the selectedRows array\r\n        selectedRows.current.length = 0;\r\n        // add selectedItems array items to selectedRows\r\n        selectedRows.current.push(...props.selectedItems);\r\n\r\n        flex.rows.forEach((row) => {\r\n          if (\r\n            props.selectedItems.filter((item) =>\r\n              loadash.isEqual(item, row.dataItem)\r\n            ).length === 1\r\n          ) {\r\n            // checks the row checkbox\r\n            row.isSelected = true;\r\n          } else {\r\n            // unchecks the row checkbox\r\n            row.isSelected = false;\r\n          }\r\n        });\r\n\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in pre-selecting rows:\", error);\r\n    }\r\n  }, [props.selectedItems]);\r\n\r\n  //Load the state of grid\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(props.parentComponent + \"GridState\") &&\r\n        localStorage.getItem(props.parentComponent + \"GridState\") !== \"null\" &&\r\n        flex\r\n      ) {\r\n        // restore grid settings\r\n        let gridState = JSON.parse(\r\n          localStorage.getItem(props.parentComponent + \"GridState\")\r\n        );\r\n        let newFlex = flex;\r\n\r\n        // restore column picker settings\r\n        newFlex.columns.forEach((col) => {\r\n          let matchedCol = gridState.columns.filter(\r\n            (colSetting) => colSetting.binding === col.binding\r\n          );\r\n          col.visible =\r\n            matchedCol.length > 0 ? matchedCol[0].visible : col.visible;\r\n        });\r\n\r\n        // restore filter settings\r\n        gridFilter.current.control.filterDefinition =\r\n          gridState.filterDefinition;\r\n\r\n        // restore sort settings\r\n        newFlex.collectionView.deferUpdate(() => {\r\n          newFlex.collectionView.sortDescriptions.clear();\r\n          for (let i = 0; i < gridState.sortDescriptions.length; i++) {\r\n            let sortDesc = gridState.sortDescriptions[i];\r\n            newFlex.collectionView.sortDescriptions.push(\r\n              new wjCore.SortDescription(sortDesc.property, sortDesc.ascending)\r\n            );\r\n          }\r\n        });\r\n\r\n        // restore grouping settings\r\n        for (let i = 0; i < gridState.groupDescriptions.length; i++) {\r\n          newFlex.collectionView.groupDescriptions.push(\r\n            new wjCore.PropertyGroupDescription(gridState.groupDescriptions[i])\r\n          );\r\n          newFlex.columns.filter(\r\n            (col) => col.binding === gridState.groupDescriptions[i]\r\n          )[0].visible = false;\r\n        }\r\n\r\n        if (\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") &&\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") !== \"null\"\r\n        ) {\r\n          let gridSessionState = JSON.parse(\r\n            sessionStorage.getItem(props.parentComponent + \"GridState\")\r\n          );\r\n          // restore paging settings\r\n          newFlex.collectionView.moveToPage(\r\n            newFlex.collectionView.pageCount - 1 >= gridSessionState.pageIndex\r\n              ? gridSessionState.pageIndex\r\n              : newFlex.collectionView.pageCount - 1\r\n          );\r\n\r\n          // restore search settings\r\n          if (theSearch) {\r\n            theSearch.current.control.text = gridSessionState.searchText;\r\n          }\r\n        }\r\n\r\n        setFlex(newFlex);\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in restoring local storage settings: \", error);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set Column Picker Properties\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && colPicker.current && props.columnPickerRequired) {\r\n        colPicker.current.itemsSource = flex.columns;\r\n        colPicker.current.checkedMemberPath = \"visible\";\r\n        colPicker.current.displayMemberPath = \"header\";\r\n        colPicker.current.lostFocus.addHandler(() => {\r\n          hidePopup(colPicker.current.hostElement);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in initializing column picker properties:\", error);\r\n    }\r\n  }, [colPicker.current]);\r\n\r\n  useEffect(() => {\r\n    // remove column picker pop-up on component unmount\r\n    return () => {\r\n      if (props.columnPickerRequired && colPicker.current) {\r\n        hidePopup(colPicker.current.hostElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // export grid data to excel\r\n  const exportExcel = () => {\r\n    try {\r\n      let gridFlex = flex;\r\n      //to download all rows from all pages\r\n      gridFlex.itemsSource.pageSize = props.sourceData.length;\r\n      setFlex(gridFlex);\r\n      wjcGridXlsx.FlexGridXlsxConverter.saveAsync(\r\n        flex,\r\n        {\r\n          includeColumnHeaders: true,\r\n          includeCellStyles: false,\r\n          formatItem: null,\r\n        },\r\n        props.exportFileName\r\n      );\r\n\r\n      //to restore paging\r\n      gridFlex.itemsSource.pageSize = props.rowsPerPage;\r\n      setFlex(gridFlex);\r\n    } catch (error) {\r\n      console.log(\"Error in export grid to excel:\", error);\r\n    }\r\n  };\r\n\r\n  const terminalPopOver = (terminalCodes) => {\r\n    if (terminalCodes.split(\",\").length > props.terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={terminalCodes.split(\",\").length}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return terminalCodes;\r\n    }\r\n  };\r\n\r\n  const displayValues = (value, columnDetail) => {\r\n    if (columnDetail !== undefined && columnDetail !== null) {\r\n      if (typeof value === \"boolean\" || columnDetail.Name === \"Active\") {\r\n        if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n        else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n      } else if (value === \"\" || value === null || value === undefined) {\r\n        return value;\r\n      } else if (\r\n        (columnDetail.Name === \"TerminalCodes\" ||\r\n          columnDetail.PopOver === \"1\") &&\r\n        value !== null\r\n      ) {\r\n        return terminalPopOver(value);\r\n      }\r\n      // var columnType = columnDetails.find(function (detail) {\r\n      //   if (detail.Name === field) {\r\n      //     return detail;\r\n      //   }\r\n      // });\r\n      else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"DateTime\"\r\n      ) {\r\n        return (\r\n          new Date(value).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(value).toLocaleTimeString()\r\n        );\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Date\"\r\n      ) {\r\n        return new Date(value).toLocaleDateString();\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Time\"\r\n      ) {\r\n        return new Date(value).toLocaleTimeString();\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  //Initialize Column Picker\r\n  const initializedPicker = (picker) => {\r\n    if (props.columnPickerRequired) {\r\n      colPicker.current = picker;\r\n    }\r\n  };\r\n\r\n  // Column Picker Handler\r\n  const colPickerClickHandler = (event) => {\r\n    try {\r\n      let host = colPicker.current.hostElement;\r\n      if (!host.offsetHeight) {\r\n        showPopup(host, event.target, PopupPosition.Below, true, false);\r\n        colPicker.current.focus();\r\n      } else {\r\n        hidePopup(host, true, true);\r\n        flex.focus();\r\n      }\r\n\r\n      colPicker.current.focus();\r\n      event.preventDefault();\r\n    } catch (error) {\r\n      console.log(\"Error in Column Picker click event:\", error);\r\n    }\r\n  };\r\n\r\n  const saveGridState = () => {\r\n    try {\r\n      if (flex && gridFilter.current) {\r\n        // grid column, filter, sort and grouping settings\r\n        let gridState = {\r\n          columns: flex.columns.map((col) => {\r\n            return {\r\n              binding: col.binding,\r\n              visible: col.visible,\r\n            };\r\n          }),\r\n          filterDefinition: gridFilter.current.control.filterDefinition,\r\n          sortDescriptions: flex.collectionView.sortDescriptions.map(\r\n            (sortDesc) => {\r\n              return {\r\n                property: sortDesc.property,\r\n                ascending: sortDesc.ascending,\r\n              };\r\n            }\r\n          ),\r\n          groupDescriptions: flex.collectionView.groupDescriptions.map(\r\n            (group) => {\r\n              if (group.propertyName) {\r\n                return group.propertyName;\r\n              }\r\n\r\n              return null;\r\n            }\r\n          ),\r\n        };\r\n\r\n        // add class to grouped checkbox div element\r\n        if (\r\n          flex.collectionView.groupDescriptions &&\r\n          flex.collectionView.groupDescriptions.length > 0\r\n        ) {\r\n          let groupedCheckboxes = [\r\n            ...document.getElementsByClassName(\"wj-column-selector-group\"),\r\n          ];\r\n          groupedCheckboxes.forEach((chkbx) => {\r\n            chkbx.parentNode.parentNode.classList.add(\"wj-grouped-checkbox\");\r\n          });\r\n        }\r\n\r\n        // grid paging and search settings\r\n        let sessionState = {\r\n          pageIndex: flex.collectionView.pageIndex,\r\n          searchText: theSearch.current.control.text,\r\n        };\r\n\r\n        localStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(gridState)\r\n        );\r\n        sessionStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(sessionState)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in saving grid state\");\r\n    }\r\n  };\r\n\r\n  // customize grid filter text and dropdowns\r\n  const customizeFilterConditions = () => {\r\n    // localize the FlexGrid filter\r\n    let filter = wjCore.culture.FlexGridFilter,\r\n      operator = Operator;\r\n    wjCore.culture.FlexGridFilter.header = translator(\"WijmoGridFilterHeader\");\r\n    wjCore.culture.FlexGridFilter.ascending =\r\n      \"\\u2191 \" + translator(\"WijmoGridFilterAscending\");\r\n    wjCore.culture.FlexGridFilter.descending =\r\n      \"\\u2193 \" + translator(\"WijmoGridFilterDescending\");\r\n    wjCore.culture.FlexGridFilter.apply = translator(\"RoleAdminEdit_Apply\");\r\n    wjCore.culture.FlexGridFilter.clear = translator(\"OrderCreate_btnClear\");\r\n    wjCore.culture.FlexGridFilter.conditions = translator(\r\n      \"WijmoGridFilterCondition\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.values = translator(\"WijmoGridFilterValue\");\r\n    wjCore.culture.FlexGridFilter.search = translator(\r\n      \"LoadingDetailsView_SearchGrid\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.selectAll = translator(\r\n      \"WijmoGridFilterSelectAll\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.and = translator(\"WijmoGridFilterAnd\");\r\n    wjCore.culture.FlexGridFilter.or = translator(\"WijmoGridFilterOr\");\r\n    wjCore.culture.FlexGridFilter.cancel = translator(\"AccessCardInfo_Cancel\");\r\n    // wjCore.culture.FlexGridFilter.null = 'test';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.and = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.asc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dialog = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dsc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.edit = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op2 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.or = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.search = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val2 = '';\r\n\r\n    // localize FlexGrid filter operators\r\n    filter.stringOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterBeginsWith\"), op: operator.BW },\r\n      { name: translator(\"WijmoGridFilterEndsWith\"), op: operator.EW },\r\n      { name: translator(\"WijmoGridFilterContains\"), op: operator.CT },\r\n      { name: translator(\"WijmoGridFilterDoesNotContain\"), op: operator.NC },\r\n    ];\r\n    filter.numberOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterGreaterThan\"), op: operator.GT },\r\n      { name: translator(\"WijmoGridFilterLessThan\"), op: operator.LT },\r\n      {\r\n        name: translator(\"WijmoGridFilterGreaterThanOrEqual\"),\r\n        op: operator.GE,\r\n      },\r\n      { name: translator(\"WijmoGridFilterLessThanOrEqual\"), op: operator.LE },\r\n    ];\r\n    filter.dateOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterDateEarlierThan\"), op: operator.LT },\r\n      { name: translator(\"WijmoGridFilterDateLaterThan\"), op: operator.GT },\r\n    ];\r\n    filter.booleanOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n    ];\r\n  };\r\n\r\n  // set column width based on screen size\r\n  const getWidth = (columnDetails) => {\r\n    try {\r\n      const screenWidth = window.screen.width;\r\n      if (screenWidth < 1024) {\r\n        if (columnDetails.WidthPx && columnDetails.WidthPx !== \"\")\r\n          return parseInt(columnDetails.WidthPx);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in width:\", error);\r\n    }\r\n\r\n    return columnDetails.WidthPercentage.includes(\"*\")\r\n      ? columnDetails.WidthPercentage\r\n      : parseInt(columnDetails.WidthPercentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pl-1\">\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <React.Fragment>\r\n              <div className=\"row pl-0\">\r\n                <div className=\"col-10 col-sm-12 col-md-5 col-lg-6\">\r\n                  <FlexGridSearch\r\n                    class=\"ui single-input\"\r\n                    ref={theSearch}\r\n                    placeholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-10 col-sm-12 col-md-7 col-lg-6\">\r\n                  <div style={{ float: \"right\" }}>\r\n                    {props.columnPickerRequired ? (\r\n                      <Button\r\n                        id=\"colPicker\"\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        onClick={(event) => colPickerClickHandler(event)}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridColumnPicker\")}\r\n                        </div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          <Icon\r\n                            name=\"caret-down\"\r\n                            className=\"btnIcon\"\r\n                            size=\"small\"\r\n                          />\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.exportRequired ? (\r\n                      <Button\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        className=\"mt-3 mt-md-0\"\r\n                        onClick={exportExcel}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridExport\")}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            className=\"icon-Xls\"\r\n                            style={{\r\n                              fontSize: \"17px\",\r\n                              position: \"absolute\",\r\n                              top: \"3px\",\r\n                            }}\r\n                          ></span>\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tableScroll\">\r\n                {props.columnGroupingRequired ? (\r\n                  <GroupPanel\r\n                    className=\"group-panel\"\r\n                    grid={flex}\r\n                    placeholder={t(\"WijmoGridGroupPanelPlaceholder\")}\r\n                  />\r\n                ) : null}\r\n                <ErrorBoundary>\r\n                  <FlexGrid\r\n                    ref={theGrid}\r\n                    autoGenerateColumns={false}\r\n                    alternatingRowStep={0}\r\n                    autoRowHeights={true}\r\n                    headersVisibility=\"Column\"\r\n                    itemsSource={data}\r\n                    selectionMode={wjCore.asEnum(\"None\", wjGrid.SelectionMode)}\r\n                    initialized={gridInitialized}\r\n                    virtualizationThreshold={[0, 10000]}\r\n                    onUpdatedView={saveGridState}\r\n                  >\r\n                    <FlexGridFilter ref={gridFilter} />\r\n                    {props.columns.map((column) => {\r\n                      return (\r\n                        <FlexGridColumn\r\n                          header={t(column.Name)}\r\n                          key={column.Name}\r\n                          binding={column.Name}\r\n                          width={getWidth(column)}\r\n                          minWidth={100}\r\n                          isReadOnly={true}\r\n                          wordWrap={true}\r\n                          align=\"left\"\r\n                        >\r\n                          <FlexGridCellTemplate\r\n                            cellType=\"Cell\"\r\n                            template={(context) => {\r\n                              return (\r\n                                <span\r\n                                  style={\r\n                                    props.conditionalRowStyleCheck == null ||\r\n                                    !props.conditionalRowStyleCheck(\r\n                                      context.item\r\n                                    )\r\n                                      ? null\r\n                                      : { ...props.conditionalRowStyles }\r\n                                  }\r\n                                >\r\n                                  {displayValues(\r\n                                    context.item[column.Name],\r\n                                    column\r\n                                  )}\r\n                                </span>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FlexGridColumn>\r\n                      );\r\n                    })}\r\n                  </FlexGrid>\r\n                </ErrorBoundary>\r\n                {props.columnPickerRequired ? (\r\n                  <div className=\"column-picker-div\">\r\n                    <ListBox\r\n                      className=\"column-picker\"\r\n                      initialized={(picker) => initializedPicker(picker)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"row\">\r\n                <CollectionViewNavigator\r\n                  ref={pagingComponent}\r\n                  className=\"ml-auto mr-auto mt-3\"\r\n                  headerFormat={t(\"WijmoGridPagingTemplate\")}\r\n                  byPage={true}\r\n                  cv={data}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nWijmoGrid.propTypes = {\r\n  sourceData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  exportRequired: PropTypes.bool.isRequired,\r\n  exportFileName: PropTypes.string,\r\n  selectionRequired: PropTypes.bool,\r\n  columnPickerRequired: PropTypes.bool,\r\n  columnGroupingRequired: PropTypes.bool,\r\n  conditionalRowStyleCheck: PropTypes.func,\r\n  conditionalRowStyles: PropTypes.object,\r\n  rowsPerPage: PropTypes.number,\r\n  onSelectionHandle: PropTypes.func,\r\n  parentComponent: PropTypes.string.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  terminalsToShow: PropTypes.number,\r\n  singleSelection: PropTypes.bool,\r\n  selectedItems: PropTypes.array,\r\n};\r\n\r\nWijmoGrid.defaultProps = {\r\n  sourceData: [],\r\n  columns: [],\r\n  exportRequired: true,\r\n  exportFileName: \"Grid.xlsx\",\r\n  selectionRequired: false,\r\n  columnPickerRequired: false,\r\n  columnGroupingRequired: false,\r\n  rowsPerPage: 10,\r\n  terminalsToShow: 2,\r\n  singleSelection: false,\r\n  selectedItems: [],\r\n};\r\n\r\nexport default WijmoGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WijmoGrid from '../../UIBase/Common/WijmoGrid';\r\n\r\nconst WijmoGridComposite = (props) => {\r\n    return (\r\n        <WijmoGrid\r\n            sourceData={props.data}\r\n            columns={props.columns}\r\n            exportRequired={props.exportRequired}\r\n            exportFileName={props.exportFileName}\r\n            columnPickerRequired={props.columnPickerRequired}\r\n            selectionRequired={props.selectionRequired}\r\n            columnGroupingRequired={props.columnGroupingRequired}\r\n            conditionalRowStyleCheck={props.conditionalRowStyleCheck}\r\n            conditionalRowStyles={props.conditionalRowStyles}\r\n            rowsPerPage={props.rowsPerPage}\r\n            onSelectionHandle={props.onSelectionHandle}\r\n            onRowClick={props.onRowClick}\r\n            parentComponent={props.parentComponent}\r\n            terminalsToShow={props.terminalsToShow}\r\n            singleSelection={props.singleSelection}\r\n            selectedItems={props.selectedItems}\r\n        />\r\n    )\r\n}\r\n\r\nWijmoGridComposite.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n    exportRequired: PropTypes.bool.isRequired,\r\n    exportFileName: PropTypes.string,\r\n    selectionRequired: PropTypes.bool,\r\n    columnPickerRequired: PropTypes.bool,\r\n    columnGroupingRequired: PropTypes.bool,\r\n    conditionalRowStyleCheck: PropTypes.func,\r\n    conditionalRowStyles: PropTypes.object,\r\n    rowsPerPage: PropTypes.number,\r\n    onSelectionHandle: PropTypes.func,\r\n    parentComponent: PropTypes.string.isRequired,\r\n    onRowClick: PropTypes.func,\r\n    terminalsToShow: PropTypes.number,\r\n    singleSelection: PropTypes.bool,\r\n    selectedItems: PropTypes.array\r\n}\r\n\r\nexport default WijmoGridComposite;","import React from \"react\";\r\nimport { Select, Input, Checkbox, Icon, Accordion } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { getOptionsWithSelect } from \"../../../JS/functionalUtilities\";\r\n\r\nShareholderDetails.propTypes = {\r\n    shareholder: PropTypes.object.isRequired,\r\n    modShareholder: PropTypes.object.isRequired,\r\n    validationErrors: PropTypes.object.isRequired,\r\n    modAttributeMetaDataList: PropTypes.array.isRequired,\r\n    attributeValidationErrors: PropTypes.array.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    onExternalSystemCodeChange: PropTypes.func.isRequired,\r\n    onActiveStatusChange: PropTypes.func.isRequired,\r\n    onAllTerminalsChange: PropTypes.func.isRequired,\r\n    listOptions: PropTypes.shape({\r\n        terminalCodes: PropTypes.array,\r\n\r\n    }).isRequired,\r\n    isEnterpriseNode: PropTypes.bool.isRequired,\r\n    isDCHEnabled: PropTypes.bool.isRequired,\r\n    isSealingEnabled: PropTypes.bool.isRequired,\r\n    handleAttributeDataChange: PropTypes.func.isRequired,\r\n}\r\n\r\nShareholderDetails.defaultProps = {\r\n    listOptions: { terminalCodes: [], ExternalSystemInfo: [], SealCodes: [] },\r\n    isEnterpriseNode: false, isDCHEnabled: false, isSealingEnabled: false\r\n}\r\n\r\nexport function ShareholderDetails({\r\n    shareholder,\r\n    modShareholder,\r\n    validationErrors,\r\n    onFieldChange,\r\n    onActiveStatusChange,\r\n    onAllTerminalsChange,\r\n    listOptions,\r\n    isEnterpriseNode,\r\n    onExternalSystemCodeChange,\r\n    isDCHEnabled,\r\n    modAttributeMetaDataList,\r\n    attributeValidationErrors,\r\n    handleAttributeDataChange,\r\n    isSealingEnabled\r\n}) {\r\n    const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n        let attributeValidation = [];\r\n        attributeValidation = attributeValidationErrors.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n        })\r\n        return attributeValidation.attributeValidationErrors;\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"detailsContainer\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modShareholder.ShareholderCode}\r\n                                indicator=\"required\"\r\n                                disabled={shareholder.ShareholderCode !== \"\"}\r\n                                onChange={(data) => onFieldChange(\"ShareholderCode\", data)}\r\n                                label={t(\"ShareholderDetails_Code\")}\r\n                                error={t(validationErrors.ShareholderCode)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modShareholder.ShareholderName}\r\n                                indicator=\"required\"\r\n                                onChange={(data) => onFieldChange(\"ShareholderName\", data)}\r\n                                label={t(\"ShareholderDetails_Name\")}\r\n                                error={t(validationErrors.ShareholderName)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        {\r\n                            isSealingEnabled ? (<div className=\"col-12 col-md-6 col-lg-4\">\r\n                                <Select\r\n                                    fluid\r\n                                    placeholder={t(\"Common_Select\")}\r\n                                    label={t(\"ShareholderDetails_SealId\")}\r\n                                    value={modShareholder.SealCode}\r\n                                    options={getOptionsWithSelect(\r\n                                        listOptions.SealCodes,\r\n                                        t(\"Common_Select\")\r\n                                    )}\r\n                                    onChange={(data) => onFieldChange(\"SealCode\", data)}\r\n                                    reserveSpace={false}\r\n                                    search={true}\r\n                                    noResultsMessage={t(\"noResultsMessage\")}\r\n                                />\r\n                            </div>) : (\"\")\r\n                        }\r\n\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modShareholder.Description}\r\n                                onChange={(data) => onFieldChange(\"Description\", data)}\r\n                                label={t(\"ShareholderDetails_Description\")}\r\n                                error={t(validationErrors.Description)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(`ShareholderDetails_Status`)}\r\n                                value={modShareholder.Active}\r\n                                options={[\r\n                                    { text: t(\"ViewShipment_Ok\"), value: true },\r\n                                    { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                                ]}\r\n                                onChange={(data) => onActiveStatusChange(data)}\r\n                                error={t(validationErrors.Active)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modShareholder.Remarks}\r\n                                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                                label={t(\"ShareholderDetails_Remarks\")}\r\n                                error={t(validationErrors.Remarks)}\r\n                                indicator={modShareholder.Active !== shareholder.Active ? \"required\" : \"\"}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        {\r\n                            isEnterpriseNode ? (\r\n                                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                    <AssociatedTerminals\r\n                                        terminalList={listOptions.terminalCodes}\r\n                                        selectedTerminal={modShareholder.TerminalCodes}\r\n                                        validationError={t(validationErrors.TerminalCodes)}\r\n                                        onFieldChange={onFieldChange}\r\n                                        onCheckChange={onAllTerminalsChange}\r\n                                    ></AssociatedTerminals>\r\n                                </div>\r\n                            ) : (\"\")\r\n                        }\r\n                        {\r\n                            isDCHEnabled ? (\r\n                                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                        <div style={{ width: \"60%\" }}>\r\n                                            <Select\r\n                                                fluid\r\n                                                placeholder={t(\"Common_Select\")}\r\n                                                label={t(\"ShareholderDetails_ExternalSystem\")}\r\n                                                value={modShareholder.ExternalSystemCode}\r\n                                                options={listOptions.ExternalSystemInfo}\r\n                                                onChange={(data) => onExternalSystemCodeChange(data)}\r\n                                                reserveSpace={false}\r\n                                                search={true}\r\n                                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"ddlSelectAll\">\r\n                                            <Checkbox\r\n                                                label={t(\"ShareholderDetails_BypassMode\")}\r\n                                                checked={modShareholder.IsBypass ? true : false}\r\n                                                onChange={(data) => onFieldChange(\"IsBypass\", data)}\r\n                                                disabled={modShareholder.ExternalSystemCode === \"1\"}\r\n                                            />\r\n                                        </div>\r\n                                        <div>\r\n                                            <Icon root=\"common\" title={t(\"Shareholder_BypassTooltip\")} name=\"badge-info\" size=\"medium\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\"\")\r\n                        }\r\n                    </div>\r\n                    {\r\n                        modAttributeMetaDataList.length > 0 ?\r\n                        modAttributeMetaDataList.map((attribute) =>\r\n                                <ErrorBoundary>\r\n                                    <Accordion>\r\n                                        <Accordion.Content\r\n                                            className=\"attributeAccordian\"\r\n                                            title={isEnterpriseNode ? (attribute.TerminalCode + ' - ' + t(\"Attributes_Header\")) : (t(\"Attributes_Header\"))}\r\n                                        >\r\n                                            <AttributeDetails\r\n                                                selectedAttributeList={attribute.attributeMetaDataList}\r\n                                                handleCellDataEdit={handleAttributeDataChange}\r\n                                                attributeValidationErrors={handleValidationErrorFilter(attributeValidationErrors, attribute.TerminalCode)}\r\n                                            ></AttributeDetails>\r\n                                        </Accordion.Content>\r\n                                    </Accordion>\r\n                                </ErrorBoundary>\r\n                            ) : null\r\n\r\n                    }\r\n\r\n                </div>\r\n\r\n            )}\r\n        </TranslationConsumer>\r\n    )\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { ShareholderDetails } from \"../../UIBase/Details/ShareholderDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { emptyShareholder } from \"../../../JS/DefaultEntities\";\r\nimport { shareholderValidationDef } from \"../../../JS/ValidationDef\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport lodash from \"lodash\";\r\nimport { functionGroups, fnShareholder, fnKPIInformation } from \"../../../JS/FunctionGroups\";\r\nimport { shareholderAttributeEntity } from \"../../../JS/AttributeEntity\";\r\nimport TMDetailsKPILayout from \"../Common/TMDetailsKPILayout\";\r\nimport { kpiShareholderDetail } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass ShareholderDetailsComposite extends Component {\r\n  state = {\r\n    shareholder: lodash.cloneDeep(emptyShareholder),\r\n    modShareholder: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      shareholderValidationDef\r\n    ),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    ExternalSystemList: [],\r\n    SealCodeOptions: [],\r\n    attributeMetaDataList: [],\r\n    modAttributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    shareholderKPIList: [],\r\n    showAuthenticationLayout: false,\r\n    tempShareholder: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getAttributes(this.props.selectedRow);\r\n      if (this.props.userDetails.EntityResult.IsDCHEnabled)\r\n        this.getExternalSystemInfo();\r\n      this.getSealCodesInfo();\r\n    } catch (error) {\r\n      console.log(\r\n        \"ShareholderDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.shareholder.ShareholderCode !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getAttributes(nextProps.selectedRow);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"ShareholderDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getAttributes(shareholderRow) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [shareholderAttributeEntity],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              attributeValidationErrors: Utilities.getAttributeInitialValidationErrors(\r\n                result.EntityResult.shareholder\r\n              ),\r\n            },\r\n            () => this.getShareholder(shareholderRow)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals !== undefined && selectedTerminals !== null) {\r\n        let attributesTerminalsList = [];\r\n        var attributeMetaDataList = [];\r\n        var modAttributeMetaDataList = [];\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        modAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.modAttributeMetaDataList\r\n        );\r\n        const attributeValidationErrors = lodash.cloneDeep(\r\n          this.state.attributeValidationErrors\r\n        );\r\n        var modShareholder = lodash.cloneDeep(this.state.modShareholder);\r\n\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = modAttributeMetaDataList.find((selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          });\r\n\r\n          if (existitem === undefined) {\r\n            attributeMetaDataList.shareholder.forEach(function (\r\n              attributeMetaData\r\n            ) {\r\n              if (attributeMetaData.TerminalCode === terminal) {\r\n                var Attributevalue = modShareholder.Attributes.find(\r\n                  (shareholderAttribute) => {\r\n                    return shareholderAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                      (x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      }\r\n                    );\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n                attributesTerminalsList.push(attributeMetaData);\r\n              }\r\n            });\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n        modAttributeMetaDataList = [];\r\n        modAttributeMetaDataList = attributesTerminalsList;\r\n        modAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n          modAttributeMetaDataList\r\n        );\r\n        attributeValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n              (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n        this.setState({ modAttributeMetaDataList, attributeValidationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"ShareholderDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (Array.isArray(attributeMetaDataList.shareholder) && attributeMetaDataList.shareholder.length > 0) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.shareholder[0].TerminalCode,\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"ShareholderDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getShareholder(shareholderRow) {\r\n    emptyShareholder.TerminalCodes =\r\n      this.props.terminalCodes.length === 1\r\n        ? [...this.props.terminalCodes]\r\n        : [];\r\n\r\n    if (shareholderRow.Common_Code === undefined) {\r\n      this.setState(\r\n        {\r\n          shareholder: lodash.cloneDeep(emptyShareholder),\r\n          modShareholder: lodash.cloneDeep(emptyShareholder),\r\n          isReadyToRender: true,\r\n          modAttributeMetaDataList: [],\r\n          shareholderKPIList: [],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnShareholder\r\n          ),\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            if (this.props.terminalCodes.length === 1) {\r\n              this.terminalSelectionChange(this.props.terminalCodes);\r\n            } else {\r\n              this.terminalSelectionChange([]);\r\n            }\r\n          }\r\n          else {\r\n            this.localNodeAttribute();\r\n          }\r\n        }\r\n      );\r\n      return;\r\n    }\r\n\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: shareholderRow.Common_Code,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: shareholderRow.Common_Code,\r\n      keyDataCode: KeyCodes.shareholderCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetShareholder,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          result.EntityResult.ExternalSystemCode = result.EntityResult.ExternalSystemCode.toString();\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              shareholder: lodash.cloneDeep(result.EntityResult),\r\n              modShareholder: lodash.cloneDeep(result.EntityResult),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnShareholder\r\n              ),\r\n            },\r\n            () => {\r\n              this.getKPIList(result.EntityResult.ShareholderCode);\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            shareholder: lodash.cloneDeep(emptyShareholder),\r\n            modShareholder: lodash.cloneDeep(emptyShareholder),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in getShareholder:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getShareholder:\", error, shareholderRow);\r\n      });\r\n  }\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modShareholder = lodash.cloneDeep(this.state.modShareholder);\r\n      modShareholder[propertyName] = data;\r\n      this.setState({ modShareholder });\r\n\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (shareholderValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          shareholderValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n\r\n      if (propertyName === \"TerminalCodes\") {\r\n        this.terminalSelectionChange(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"ShareholderDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleExternalSystemCodeChange = (data) => {\r\n    try {\r\n      const modShareholder = lodash.cloneDeep(this.state.modShareholder);\r\n      modShareholder[\"ExternalSystemCode\"] = data;\r\n      if (data === \"1\") {\r\n        modShareholder[\"IsBypass\"] = false;\r\n      } else {\r\n        modShareholder[\"IsBypass\"] = true;\r\n      }\r\n      this.setState({ modShareholder });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ShareholderDetailsComposite:Error occured on handleExternalSystemCodeChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      validationErrors[\"TerminalCodes\"] = \"\";\r\n      var terminalCodes = [...this.props.terminalCodes];\r\n      let modShareholder = lodash.cloneDeep(this.state.modShareholder);\r\n      if (checked) modShareholder.TerminalCodes = [...terminalCodes];\r\n      else modShareholder.TerminalCodes = [];\r\n      this.setState({ modShareholder, validationErrors });\r\n      this.terminalSelectionChange(modShareholder.TerminalCodes);\r\n    } catch (error) {\r\n      console.log(\r\n        \"ShareholderDetailsComposite:Error occured on handleAllTerminalsChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const { validationErrors } = { ...this.state };\r\n      const shareholder = lodash.cloneDeep(this.state.shareholder);\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState(\r\n        {\r\n          modShareholder: { ...shareholder },\r\n          selectedCompRow: [],\r\n          validationErrors,\r\n          modAttributeMetaDataList: [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(shareholder.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"ShareholderDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        attributeValidationErrors: Utilities.getAttributeInitialValidationErrors(\r\n          attributeMetaDataList.shareholder\r\n        ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"handleAttributeValidationError:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleActiveStatusChange = (data) => {\r\n    try {\r\n      const modShareholder = lodash.cloneDeep(this.state.modShareholder);\r\n\r\n      modShareholder.Active = data;\r\n      if (modShareholder.Active !== this.state.shareholder.Active)\r\n        modShareholder.Remarks = \"\";\r\n      this.setState({ modShareholder });\r\n\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (modShareholder.Active === this.state.shareholder.Active) {\r\n        if (modShareholder.Remarks === null || modShareholder.Remarks === \"\") {\r\n          validationErrors.Remarks = \"\";\r\n        }\r\n      }\r\n      this.setState({ validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ShareholderDetailsComposite:Error occured on handleActiveStatusChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  saveShareholder = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempShareholder = lodash.cloneDeep(this.state.tempShareholder);\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      attributeList = Utilities.attributesDatatypeConversion(attributeList);\r\n      tempShareholder.Attributes = Utilities.fillAttributeDetails(attributeList);\r\n      this.state.shareholder.ShareholderCode === \"\"\r\n        ? this.createShareholder(tempShareholder)\r\n        : this.updateShareholder(tempShareholder);\r\n    } catch (error) {\r\n      console.log(\"ShareholderDetailsComposite : Error in saveShareholder\" )\r\n    }\r\n}\r\n  handleSave = () => {\r\n    try {\r\n      //let modShareholder = this.fillAttributeDetails();\r\n      let modShareholder = lodash.cloneDeep(this.state.modShareholder);\r\n      let attributeList = Utilities.attributesConverttoLocaleString(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      // this.setState({ saveEnabled: false });\r\n      if (this.validateSave(modShareholder, attributeList)) {\r\n        let tempShareholder = lodash.cloneDeep(modShareholder);\r\n        let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        this.setState({ showAuthenticationLayout, tempShareholder }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveShareholder();\r\n          }\r\n        });\r\n      } else this.setState({ saveEnabled: true });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ShareholderDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateSave(modShareholder, attributeList) {\r\n    var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    Object.keys(shareholderValidationDef).forEach(function (key) {\r\n      validationErrors[key] = Utilities.validateField(\r\n        shareholderValidationDef[key],\r\n        modShareholder[key]\r\n      );\r\n    });\r\n\r\n    if (modShareholder.Active !== this.state.shareholder.Active) {\r\n      if (modShareholder.Remarks === null || modShareholder.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"ShareholderDetails_RemarksRequired\";\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.props.userDetails.EntityResult.IsEnterpriseNode &&\r\n      this.state.shareholder.ShareholderCode !== \"\"\r\n    ) {\r\n      var isPresent = true;\r\n      let existTermincalCodes = this.state.shareholder.TerminalCodes;\r\n      let newTermincalCodes = modShareholder.TerminalCodes;\r\n      if (existTermincalCodes !== null)\r\n        existTermincalCodes.forEach(function (value) {\r\n          if (isPresent)\r\n            isPresent = newTermincalCodes.some((item) => value === item);\r\n          else return isPresent;\r\n        });\r\n      if (!isPresent) {\r\n        validationErrors[\"TerminalCodes\"] =\r\n          \"ShareholderInfo_TerminalDisassociation\";\r\n      } else {\r\n        validationErrors[\"TerminalCodes\"] = \"\";\r\n      }\r\n    }\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n\r\n    attributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({ validationErrors, attributeValidationErrors });\r\n\r\n    var returnValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  }\r\n\r\n  createShareholder(modShareholder) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: modShareholder.ShareholderCode,\r\n      },\r\n    ];\r\n    let obj = {\r\n      keyDataCode: KeyCodes.shareholderCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modShareholder,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShareholderDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShareholderDetails_Code\"],\r\n          keyValues: [modShareholder.ShareholderCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.CreateShareholder,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnShareholder\r\n              ),\r\n              showAuthenticationLayout: false,\r\n\r\n            },\r\n            () =>\r\n              this.getShareholder({\r\n                Common_Code: modShareholder.ShareholderCode,\r\n              })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnShareholder\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          console.log(\"Error in createShareholder:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(this.state.modShareholder, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnShareholder\r\n          ),\r\n          showAuthenticationLayout: false,\r\n\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modShareholder, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateShareholder(modShareholder) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.shareholderCode,\r\n        value: modShareholder.ShareholderCode,\r\n      },\r\n    ];\r\n    let obj = {\r\n      keyDataCode: KeyCodes.shareholderCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modShareholder,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"ShareholderDetails_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"ShareholderDetails_Code\"],\r\n          keyValues: [modShareholder.ShareholderCode],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.UpdateShareholder,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnShareholder\r\n              ),\r\n              showAuthenticationLayout: false,\r\n            },\r\n            () =>\r\n              this.getShareholder({\r\n                Common_Code: modShareholder.ShareholderCode,\r\n              })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnShareholder\r\n            ),\r\n            showAuthenticationLayout: false,\r\n\r\n          });\r\n          console.log(\"Error in update Shareholder:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(this.state.modShareholder, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnShareholder\r\n          ),\r\n          showAuthenticationLayout: false,\r\n\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modShareholder, \"modify\", notification);\r\n      });\r\n  }\r\n\r\n  getExternalSystemInfo() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetExternalSystemInfo,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess) {\r\n          let ExternalSystemList = this.state.ExternalSystemList;\r\n          Object.keys(result.EntityResult).forEach(function (key) {\r\n            ExternalSystemList.push({\r\n              text: result.EntityResult[key],\r\n              value: key,\r\n            });\r\n          });\r\n          this.setState({ ExternalSystemList: ExternalSystemList });\r\n        } else {\r\n          this.setState({ ExternalSystemList: [] });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ShareholderDetailsComposite:Error occured on get ExternalSystemInfo List\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getSealCodesInfo() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetSealCodes,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let SealCodeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ SealCodeOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getSealCodesInfo:\", result.ErrorList);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ShareholderDetailsComposite:Error occured on getSealCodesInfo List\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[\r\n            attribute.Code\r\n          ] = Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors, modAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ShareholderDetailsComposite:Error occured on handleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  //Get KPI for Shareholder\r\n  getKPIList(shareholderCode) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      let objKPIRequestData = {\r\n        PageName: kpiShareholderDetail,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholderCode }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              shareholderKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ shareholderKPIList: [] });\r\n            console.log(\"Error in shareholder KPIList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Shareholder KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      terminalCodes: this.props.terminalCodes,\r\n      ExternalSystemInfo: this.state.ExternalSystemList,\r\n      SealCodes: this.state.SealCodeOptions,\r\n    };\r\n\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"ShareholderDetails_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modShareholder.LastUpdatedDate\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modShareholder.LastUpdatedDate\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"ShareholderDetails_LastActive\",\r\n        fieldValue:\r\n          this.state.modShareholder.LastActiveTime !== undefined &&\r\n            this.state.modShareholder.LastActiveTime !== null\r\n            ? new Date(\r\n              this.state.modShareholder.LastActiveTime\r\n            ).toLocaleDateString() +\r\n            \" \" +\r\n            new Date(\r\n              this.state.modShareholder.LastActiveTime\r\n            ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"ShareholderDetails_CreatedDate\",\r\n        fieldValue:\r\n          new Date(this.state.modShareholder.CreatedDate).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modShareholder.CreatedDate).toLocaleTimeString(),\r\n      },\r\n    ];\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.shareholder.ShareholderCode}\r\n            newEntityName=\"ShareholderDetails_Header\"\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <TMDetailsKPILayout\r\n          KPIList={this.state.shareholderKPIList}\r\n          pageName=\"ShareholderDetails\"\r\n          rowHeight={175}>\r\n        </TMDetailsKPILayout>\r\n        <ErrorBoundary>\r\n          <ShareholderDetails\r\n            shareholder={this.state.shareholder}\r\n            modShareholder={this.state.modShareholder}\r\n            validationErrors={this.state.validationErrors}\r\n            attributeValidationErrors={this.state.attributeValidationErrors}\r\n            modAttributeMetaDataList={this.state.modAttributeMetaDataList}\r\n            onFieldChange={this.handleChange}\r\n            onActiveStatusChange={this.handleActiveStatusChange}\r\n            onAllTerminalsChange={this.handleAllTerminalsChange}\r\n            listOptions={listOptions}\r\n            isEnterpriseNode={\r\n              this.props.userDetails.EntityResult.IsEnterpriseNode\r\n            }\r\n            onExternalSystemCodeChange={this.handleExternalSystemCodeChange}\r\n            isDCHEnabled={this.props.userDetails.EntityResult.IsDCHEnabled}\r\n            isSealingEnabled={\r\n              this.props.userDetails.EntityResult.IsSealingEnabled\r\n            }\r\n            onAttributeDataChange={this.handleAttributeDataChange}\r\n          ></ShareholderDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={\r\n              this.state.shareholder.Code === \"\"\r\n                ? functionGroups.add\r\n                : functionGroups.modify\r\n            }\r\n            functionGroup={fnShareholder}\r\n            handleOperation={this.saveShareholder}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ShareholderDetailsComposite);\r\n\r\nShareholderDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nexport function ShareholderSummaryComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  terminalsToShow,\r\n  selectionRequired,     \r\n  onSelectionChange,\r\n  onRowClick,\r\n  parentComponent\r\n}) {\r\n    return (\r\n        <WijmoGridComposite\r\n        data={tableData}\r\n        columns={columnDetails}\r\n        rowsPerPage={pageSize}\r\n        exportRequired={exportRequired}\r\n        exportFileName={exportFileName}\r\n        columnPickerRequired={columnPickerRequired}\r\n        columnGroupingRequired={columnGroupingRequired}\r\n        terminalsToShow={terminalsToShow}\r\n        selectionRequired={selectionRequired}\r\n        onSelectionHandle={onSelectionChange}\r\n        onRowClick={onRowClick}\r\n        parentComponent={parentComponent}\r\n        ></WijmoGridComposite>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { ShareholderSummaryComposite } from \"../Summary/ShareholderSummaryComposite\";\r\nimport ShareholderDetailsComposite from \"../Details/ShareholderDetailsComposite\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../../CSS/styles.css\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport { kpiShareholderList } from \"../../../JS/KPIPageName\";\r\nimport {\r\n  functionGroups,\r\n  fnShareholder,\r\n  fnKPIInformation,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass ShareholderComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    data: {},\r\n    terminalCodes: [],\r\n    shareholderKPIList: [],\r\n    showAuthenticationLayout: false,\r\n\r\n  };\r\n\r\n  componentName = \"ShareholderComponent\";\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnShareholder\r\n      );\r\n      this.setState({\r\n        operationsVisibilty,\r\n        selectedShareholder:\r\n          this.props.userDetails.EntityResult.PrimaryShareholder,\r\n      });\r\n      this.getShareholderList();\r\n      this.getKPIList();\r\n\r\n      if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n        this.getAllTerminals();\r\n    } catch (error) {\r\n      console.log(\r\n        \"ShareholderComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n\r\n    // clear session storage on window refresh event\r\n    window.addEventListener(\"beforeunload\", this.clearStorage)\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    // clear session storage\r\n    this.clearStorage();\r\n\r\n    // remove event listener\r\n    window.removeEventListener(\"beforeunload\", this.clearStorage)\r\n  }\r\n\r\n  clearStorage = () => {\r\n    sessionStorage.removeItem(this.componentName + \"GridState\");\r\n  }\r\n\r\n\r\n  getShareholderList() {\r\n    axios(\r\n      RestAPIs.GetShareholderListForRole,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ data: result.EntityResult, isReadyToRender: true });\r\n        } else {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error in getShareholderList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: [], isReadyToRender: true });\r\n        console.log(\"Error while getting ShareholderList:\", error);\r\n      });\r\n  }\r\n\r\n  getAllTerminals() {\r\n    try {\r\n      axios(\r\n        // RestAPIs.GetTerminals,\r\n        RestAPIs.GetAllTerminals,\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        if (response.data.IsSuccess) {\r\n          if (response.data.EntityResult !== null)\r\n            this.setState({ terminalCodes: response.data.EntityResult });\r\n        } else {\r\n          this.setState({ terminalCodes: [] });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      this.setState({ terminalCodes: [] });\r\n      console.log(\r\n        \"ShareholderComposite:Error occured on getAllTerminalsList\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: {},\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"ShareholderComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnShareholder\r\n        );\r\n        if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n          operationsVisibilty.delete = false;\r\n        } else {\r\n          operationsVisibilty.delete = Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.remove,\r\n            fnShareholder\r\n          );\r\n        }\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            Common_Code: data.ShareholderCode,\r\n            Common_Status: data.Active,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"ShareholderComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnShareholder\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        isReadyToRender: false,\r\n      });\r\n      this.getShareholderList();\r\n      this.getKPIList();\r\n    } catch (error) {\r\n      console.log(\"ShareholderComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnShareholder\r\n      );\r\n      if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n        operationsVisibilty.delete = false;\r\n      } else {\r\n        operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnShareholder\r\n        );\r\n      }\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: item,\r\n        selectedItems: [item],\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"ShareholderComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n\r\n  handleSelection = (items) => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n\r\n      if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n        operationsVisibilty.delete = false;\r\n      } else {\r\n        operationsVisibilty.delete =\r\n          items.length > 0 &&\r\n          Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.remove,\r\n            fnShareholder\r\n          );\r\n      }\r\n      this.setState({ selectedItems: items, operationsVisibilty });\r\n    } catch (error) {\r\n      console.log(\r\n        \"ShareholderComposite:Error occured on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDelete = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n      var deleteShareholderKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        var ShareholderCode = this.state.selectedItems[i][\"Common_Code\"];\r\n        var keyData = {\r\n          ShareHolderCode: ShareholderCode,\r\n          KeyCodes: [{ Key: KeyCodes.shareholderCode, Value: ShareholderCode }],\r\n        };\r\n        deleteShareholderKeys.push(keyData);\r\n      }\r\n      axios(\r\n        RestAPIs.DeleteShareholder,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteShareholderKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          var isRefreshDataRequire = result.isSuccess;\r\n\r\n          if (\r\n            result.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            var failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n          var notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"ShareholderDetails_DeletionStatus\",\r\n            [\"ShareHolderCode\"]\r\n          );\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({\r\n              isReadyToRender: false,\r\n              showAuthenticationLayout: false,\r\n            });\r\n            this.getShareholderList();\r\n            this.getKPIList();\r\n\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n              showAuthenticationLayout: false,\r\n\r\n            });\r\n          } else {\r\n            operationsVisibilty.delete = true;\r\n            this.setState({\r\n              operationsVisibilty,\r\n              showAuthenticationLayout: false,\r\n            });\r\n          }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0)\r\n              messageResult.keyFields[0] = \"ShareholderDetails_Code\";\r\n          });\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error occured while deleting:\" + error);\r\n          var { operationsVisibilty } = { ...this.state };\r\n          operationsVisibilty.delete = true;\r\n          this.setState({\r\n            operationsVisibilty,\r\n            showAuthenticationLayout: false,\r\n          });\r\n        });\r\n    } catch (error) {\r\n      console.log(\"ShareholderComposite:Error occured on handleDelet\", error);\r\n    }\r\n  };\r\n\r\n  //Get KPI for Shareholder\r\n  getKPIList() {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      var notification = {\r\n        message: \"\",\r\n        messageType: \"critical\",\r\n        messageResultDetails: [],\r\n      };\r\n      let objKPIRequestData = {\r\n        PageName: kpiShareholderList,\r\n        InputParameters: [],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              shareholderKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ shareholderKPIList: [] });\r\n            console.log(\"Error in shareholder KPIList:\", result.ErrorList);\r\n            notification.messageResultDetails.push({\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: result.ErrorList[0],\r\n            });\r\n          }\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Shareholder KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showAuthenticationLayout });\r\n      if (showAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"ShareholderComposite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMUserActionsComposite\r\n            operationsVisibilty={this.state.operationsVisibilty}\r\n            breadcrumbItem={this.props.activeItem}\r\n            onDelete={this.authenticateDelete}\r\n            onAdd={this.handleAdd}\r\n            shrVisible={false}\r\n            handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n            deleteVisible={!this.props.userDetails.EntityResult.IsEnterpriseNode}\r\n          ></TMUserActionsComposite>\r\n        </ErrorBoundary>\r\n        {this.state.isDetails === true ? (\r\n          <ErrorBoundary>\r\n            <ShareholderDetailsComposite\r\n              key=\"ShareholderDetails\"\r\n              selectedRow={this.state.selectedRow}\r\n              terminalCodes={this.state.terminalCodes}\r\n              onBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n            ></ShareholderDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isReadyToRender ? (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <div className=\"kpiSummaryContainer\">\r\n                <KPIDashboardLayout\r\n                  kpiList={this.state.shareholderKPIList}\r\n                  pageName=\"Shareholder\"\r\n                ></KPIDashboardLayout>\r\n              </div>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n              <ShareholderSummaryComposite\r\n                tableData={this.state.data.Table}\r\n                columnDetails={this.state.data.Column}\r\n                pageSize={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .WebPortalListPageSize\r\n                }\r\n                exportRequired={true}\r\n                exportFileName=\"ShareholderList\"\r\n                columnPickerRequired={true}\r\n\r\n                terminalsToShow={\r\n                  this.props.userDetails.EntityResult.PageAttibutes\r\n                    .NoOfTerminalsToShow\r\n                }\r\n                selectionRequired={true}\r\n                columnGroupingRequired={true}\r\n                onSelectionChange={this.handleSelection}\r\n                onRowClick={this.handleRowClick}\r\n                parentComponent={this.componentName}\r\n              ></ShareholderSummaryComposite>\r\n            </ErrorBoundary>\r\n          </div>\r\n        ) : (\r\n          <LoadingPage message=\"Loading\"></LoadingPage>\r\n        )}\r\n        {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.remove}\r\n            functionGroup={fnShareholder}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleDelete}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ShareholderComposite);\r\n\r\nShareholderComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Select, Checkbox } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nAssociatedTerminals.propTypes = {\r\n  terminalList: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedTerminal: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  validationError: PropTypes.string,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCheckChange: PropTypes.func.isRequired,\r\n};\r\nAssociatedTerminals.defaultProps = {\r\n  terminalList: [],\r\n  selectedTerminal: [],\r\n  validationError: \"\",\r\n};\r\nexport function AssociatedTerminals({\r\n  terminalList,\r\n  selectedTerminal,\r\n  validationError,\r\n  onFieldChange,\r\n  onCheckChange,\r\n}) {\r\n  //console.log(\"component terminalList\", terminalList);\r\n  if (selectedTerminal === null) selectedTerminal = [];\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div style={{ width: \"80%\" }}>\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"TerminalCodes\")}\r\n              value={selectedTerminal}\r\n              multiple={true}\r\n              options={Utilities.transferListtoOptions(terminalList)}\r\n              onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n              error={t(validationError)}\r\n              disabled={terminalList.length === 0}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"ddlSelectAll\">\r\n            <Checkbox\r\n              label={t(\"Common_All\")}\r\n              checked={\r\n                Array.isArray(selectedTerminal) &&\r\n                selectedTerminal.length === terminalList.length\r\n              }\r\n              onChange={(checked) => onCheckChange(checked)}\r\n            ></Checkbox>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMDetailsKPILayout","_ref","KPIList","pageName","rowHeight","widgetHeight","isDraggable","isResizable","kpiDisplayTopBreakpoint","KPIDisplays","setKPIDisplays","useState","kpiDiv","React","hideKpis","currentScrollPos","window","pageYOffset","KPIDisplay","current","getBoundingClientRect","top","useEffect","addEventListener","removeEventListener","_jsx","ref","children","TranslationConsumer","t","style","marginTop","ErrorBoundary","KPIDashboardLayout","kpiList","defaultProps","TMUserActions","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","alignItems","padding","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","WijmoGrid","flex","setFlex","translator","useTranslation","_getData","pageLength","CollectionView","sourceData","pageSize","setData","rowsPerPage","theGrid","theSearch","gridFilter","pagingComponent","colPicker","selectedRows","selectionRequired","selector","gridInitialized","grid","customizeFilterConditions","onRowClick","hostElement","e","ht","hitTest","target","closest","classList","includes","cellType","wjGrid","Cell","rowData","rows","row","dataItem","selectionMode","wjCore","select","Selector","itemChecked","s","singleSelection","filter","isSelected","loadash","forEach","onSelectionHandle","r","selectedRow","showCheckAll","column","rowHeaders","columns","headersVisibility","HeadersVisibility","All","control","push","selectedItems","refresh","localStorage","getItem","parentComponent","gridState","JSON","parse","newFlex","col","matchedCol","colSetting","binding","visible","filterDefinition","collectionView","deferUpdate","sortDescriptions","clear","i","sortDesc","property","ascending","groupDescriptions","sessionStorage","gridSessionState","moveToPage","pageCount","pageIndex","text","searchText","columnPickerRequired","itemsSource","checkedMemberPath","displayMemberPath","lostFocus","addHandler","hidePopup","exportExcel","gridFlex","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","exportFileName","displayValues","columnDetail","Name","PopOver","terminalCodes","split","terminalsToShow","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","saveGridState","group","document","getElementsByClassName","chkbx","parentNode","sessionState","setItem","stringify","FlexGridFilter","operator","Operator","header","descending","apply","conditions","search","selectAll","and","or","cancel","stringOperators","op","EQ","NE","BW","EW","CT","NC","numberOperators","GT","LT","GE","LE","dateOperators","booleanOperators","getWidth","columnDetails","screen","width","WidthPx","parseInt","WidthPercentage","FlexGridSearch","class","id","actionType","event","host","offsetHeight","focus","showPopup","PopupPosition","Below","preventDefault","colPickerClickHandler","exportRequired","fontSize","columnGroupingRequired","GroupPanel","FlexGrid","autoGenerateColumns","alternatingRowStep","autoRowHeights","initialized","virtualizationThreshold","onUpdatedView","FlexGridColumn","minWidth","isReadOnly","wordWrap","align","FlexGridCellTemplate","template","context","conditionalRowStyleCheck","conditionalRowStyles","ListBox","picker","initializedPicker","CollectionViewNavigator","headerFormat","byPage","cv","ShareholderDetails","modShareholder","onActiveStatusChange","onAllTerminalsChange","listOptions","isEnterpriseNode","onExternalSystemCodeChange","isDCHEnabled","modAttributeMetaDataList","attributeValidationErrors","handleAttributeDataChange","isSealingEnabled","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","ShareholderCode","ShareholderName","SealCode","getOptionsWithSelect","SealCodes","noResultsMessage","Description","Active","Remarks","AssociatedTerminals","terminalList","selectedTerminal","TerminalCodes","validationError","onCheckChange","ExternalSystemCode","ExternalSystemInfo","Checkbox","checked","IsBypass","title","attribute","Accordion","AttributeDetails","selectedAttributeList","attributeMetaDataList","handleCellDataEdit","ShareholderDetailsComposite","emptyShareholder","shareholderValidationDef","isReadyToRender","saveEnabled","ExternalSystemList","SealCodeOptions","shareholderKPIList","showAuthenticationLayout","tempShareholder","handleChange","terminalSelectionChange","handleExternalSystemCodeChange","handleAllTerminalsChange","handleReset","keys","selectedCompRow","IsEnterpriseNode","handleResetAttributeValidationError","localNodeAttribute","handleActiveStatusChange","saveShareholder","attributeList","Attributes","createShareholder","updateShareholder","handleSave","validateSave","IsWebPortalUser","matchedAttributes","matchedAttributesList","modattribute","Array","isArray","Code","DefaultValue","handleAuthenticationClose","IsArchived","getAttributes","IsDCHEnabled","getExternalSystemInfo","getSealCodesInfo","componentWillReceiveProps","nextProps","Common_Code","shareholderRow","shareholderAttributeEntity","getShareholder","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","shareholderAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","keyCode","KeyCodes","obj","ShareHolderCode","keyDataCode","FunctionsList","functionGroups","modify","fnShareholder","getKPIList","isPresent","existTermincalCodes","newTermincalCodes","some","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","onSaved","shareholderCode","view","fnKPIInformation","objKPIRequestData","PageName","kpiShareholderDetail","InputParameters","ListKPIDetails","popUpContents","LastUpdatedDate","LastActiveTime","CreatedDate","TMDetailsHeader","entityCode","newEntityName","IsSealingEnabled","onAttributeDataChange","TMDetailsUserActions","handleBack","onBack","UserName","LoadingPage","ShareholderSummaryComposite","tableData","onSelectionChange","WijmoGridComposite","ShareholderComposite","isDetails","isDetailsModified","componentName","componentWillUnmount","clearStorage","removeItem","handleAdd","savedEvent","saveType","remove","Common_Status","toast","NotifyEvent","notificationMessage","autoClose","getShareholderList","handleRowClick","handleSelection","items","handleDelete","deleteShareholderKeys","keyData","Key","Value","isRefreshDataRequire","ResultDataList","res","messageResult","authenticateDelete","PrimaryShareholder","getAllTerminals","kpiShareholderList","activeItem","Table","Column","PageAttibutes","WebPortalListPageSize","NoOfTerminalsToShow","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","multiple","margin","List","handleAttributeDateValue","convertAttributeDatetoString","chars","Dateval","getFullYear","getMonth","slice","getDate","Constants","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","toLocaleString","driverAttributeEntity","carrierAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","transportationType","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","shipmentCode","orderCode","receiptCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","bayCode","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","TransactionType","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks","ddlOptions","selectOptionText","option","unshift","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell"],"sourceRoot":""}