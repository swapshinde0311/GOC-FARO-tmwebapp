{"version":3,"file":"static/js/8262.4f8c3c69.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Common/WijmoGrid.jsx","Components/Composite/Common/WijmoGridComposite.jsx","Components/UIBase/Details/CustomerStockTransferDetails.jsx","Components/Composite/Details/CustomerStockTransferDetailsComposite.jsx","Components/Composite/Summary/CustomerStockTransferSummaryComposite.jsx","Components/Composite/Entity/CustomerStockTransferComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","JS/FunctionGroups.js","JS/KeyCodes.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as wjCore from \"@grapecity/wijmo\";\r\nimport * as wjGrid from \"@grapecity/wijmo.grid\";\r\nimport {\r\n  FlexGrid,\r\n  FlexGridColumn,\r\n  FlexGridCellTemplate,\r\n} from \"@grapecity/wijmo.react.grid\";\r\nimport { FlexGridFilter } from \"@grapecity/wijmo.react.grid.filter\";\r\nimport { Operator } from \"@grapecity/wijmo.grid.filter\";\r\nimport { FlexGridSearch } from \"@grapecity/wijmo.react.grid.search\";\r\nimport { CollectionView } from \"@grapecity/wijmo\";\r\nimport { CollectionViewNavigator, ListBox } from \"@grapecity/wijmo.react.input\";\r\nimport { Selector } from \"@grapecity/wijmo.grid.selector\";\r\nimport { HeadersVisibility } from \"@grapecity/wijmo.grid\";\r\nimport { showPopup, hidePopup, PopupPosition } from \"@grapecity/wijmo\";\r\nimport * as wjcGridXlsx from \"@grapecity/wijmo.grid.xlsx\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport { GroupPanel } from \"@grapecity/wijmo.react.grid.grouppanel\";\r\nimport { Button, Card, Popup } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as loadash from \"lodash\";\r\nimport \"@grapecity/wijmo.touch\";\r\n\r\nconst WijmoGrid = (props) => {\r\n  const [flex, setFlex] = useState(null);\r\n  const [translator] = useTranslation();\r\n  const _getData = (pageLength) => {\r\n    return new CollectionView(props.sourceData, {\r\n      pageSize: pageLength,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState(_getData(props.rowsPerPage));\r\n  const theGrid = React.createRef();\r\n  const theSearch = React.createRef();\r\n  const gridFilter = React.createRef();\r\n  const pagingComponent = React.createRef();\r\n  const colPicker = React.useRef();\r\n\r\n  // to keep track of selected rows\r\n  const selectedRows = React.useRef(props.selectionRequired ? [] : null);\r\n\r\n  // to initialize grid checkbox selection\r\n  let selector = null;\r\n\r\n  //Initialize grid\r\n  const gridInitialized = (grid) => {\r\n    try {\r\n      // localize grid filter\r\n      customizeFilterConditions();\r\n\r\n      if (props.onRowClick) {\r\n        // add row click event handler\r\n        grid.addEventListener(grid.hostElement, \"click\", (e) => {\r\n          let ht = grid.hitTest(e);\r\n          // condition to check if cell is not a grouped cell and a data cell\r\n          if (\r\n            ht.target.closest(\".wj-cell\") &&\r\n            ![...ht.target.closest(\".wj-cell\").classList].includes(\r\n              \"wj-group\"\r\n            ) &&\r\n            ht.cellType === wjGrid.CellType.Cell\r\n          ) {\r\n            // fetch row data\r\n            const rowData = grid.rows[ht.row].dataItem;\r\n            props.onRowClick(rowData);\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      grid.select(-1, -1);\r\n\r\n      setFlex(grid);\r\n      if (props.selectionRequired) {\r\n        // enable checkbox selection\r\n        selector = new Selector(grid, {\r\n          itemChecked: (s, e) => {\r\n            // if only single checkbox selection is required\r\n            if (props.singleSelection) {\r\n              grid.rows\r\n                .filter((row) => {\r\n                  return (\r\n                    row.isSelected &&\r\n                    selectedRows.current.filter((item) =>\r\n                      loadash.isEqual(item, row.dataItem)\r\n                    ).length === 1\r\n                  );\r\n                })\r\n                .forEach((row) => {\r\n                  row.isSelected = false;\r\n                });\r\n            }\r\n\r\n            // pass row data as parameter to checkbox selection handler\r\n            props.onSelectionHandle(\r\n              grid.rows\r\n                .filter((r) => r.isSelected)\r\n                .map((selectedRow) => selectedRow.dataItem)\r\n            );\r\n          },\r\n          // if only single checkbox selection is required\r\n          showCheckAll: !props.singleSelection,\r\n        });\r\n\r\n        let theGrid = selector.column.grid;\r\n        selector.column = theGrid.rowHeaders.columns[0];\r\n        theGrid.headersVisibility = HeadersVisibility.All;\r\n        theGrid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in gridInitialized: \" + error);\r\n    }\r\n  };\r\n\r\n  //Update grid when data changes\r\n  useEffect(() => {\r\n    try {\r\n      if (theGrid != null) {\r\n        //Connect search to the grid\r\n        let grid = theGrid.current.control;\r\n        let search = theSearch.current.control;\r\n        search.grid = grid;\r\n      }\r\n\r\n      setData(_getData(props.rowsPerPage));\r\n    } catch (error) {\r\n      console.log(\"Error in grid update:\", error);\r\n    }\r\n  }, [props.sourceData]);\r\n\r\n  // Pre-select grid rows based on selectedItems props\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && props.selectionRequired) {\r\n        // clear the selectedRows array\r\n        selectedRows.current.length = 0;\r\n        // add selectedItems array items to selectedRows\r\n        selectedRows.current.push(...props.selectedItems);\r\n\r\n        flex.rows.forEach((row) => {\r\n          if (\r\n            props.selectedItems.filter((item) =>\r\n              loadash.isEqual(item, row.dataItem)\r\n            ).length === 1\r\n          ) {\r\n            // checks the row checkbox\r\n            row.isSelected = true;\r\n          } else {\r\n            // unchecks the row checkbox\r\n            row.isSelected = false;\r\n          }\r\n        });\r\n\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in pre-selecting rows:\", error);\r\n    }\r\n  }, [props.selectedItems]);\r\n\r\n  //Load the state of grid\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(props.parentComponent + \"GridState\") &&\r\n        localStorage.getItem(props.parentComponent + \"GridState\") !== \"null\" &&\r\n        flex\r\n      ) {\r\n        // restore grid settings\r\n        let gridState = JSON.parse(\r\n          localStorage.getItem(props.parentComponent + \"GridState\")\r\n        );\r\n        let newFlex = flex;\r\n\r\n        // restore column picker settings\r\n        newFlex.columns.forEach((col) => {\r\n          let matchedCol = gridState.columns.filter(\r\n            (colSetting) => colSetting.binding === col.binding\r\n          );\r\n          col.visible =\r\n            matchedCol.length > 0 ? matchedCol[0].visible : col.visible;\r\n        });\r\n\r\n        // restore filter settings\r\n        gridFilter.current.control.filterDefinition =\r\n          gridState.filterDefinition;\r\n\r\n        // restore sort settings\r\n        newFlex.collectionView.deferUpdate(() => {\r\n          newFlex.collectionView.sortDescriptions.clear();\r\n          for (let i = 0; i < gridState.sortDescriptions.length; i++) {\r\n            let sortDesc = gridState.sortDescriptions[i];\r\n            newFlex.collectionView.sortDescriptions.push(\r\n              new wjCore.SortDescription(sortDesc.property, sortDesc.ascending)\r\n            );\r\n          }\r\n        });\r\n\r\n        // restore grouping settings\r\n        for (let i = 0; i < gridState.groupDescriptions.length; i++) {\r\n          newFlex.collectionView.groupDescriptions.push(\r\n            new wjCore.PropertyGroupDescription(gridState.groupDescriptions[i])\r\n          );\r\n          newFlex.columns.filter(\r\n            (col) => col.binding === gridState.groupDescriptions[i]\r\n          )[0].visible = false;\r\n        }\r\n\r\n        if (\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") &&\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") !== \"null\"\r\n        ) {\r\n          let gridSessionState = JSON.parse(\r\n            sessionStorage.getItem(props.parentComponent + \"GridState\")\r\n          );\r\n          // restore paging settings\r\n          newFlex.collectionView.moveToPage(\r\n            newFlex.collectionView.pageCount - 1 >= gridSessionState.pageIndex\r\n              ? gridSessionState.pageIndex\r\n              : newFlex.collectionView.pageCount - 1\r\n          );\r\n\r\n          // restore search settings\r\n          if (theSearch) {\r\n            theSearch.current.control.text = gridSessionState.searchText;\r\n          }\r\n        }\r\n\r\n        setFlex(newFlex);\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in restoring local storage settings: \", error);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set Column Picker Properties\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && colPicker.current && props.columnPickerRequired) {\r\n        colPicker.current.itemsSource = flex.columns;\r\n        colPicker.current.checkedMemberPath = \"visible\";\r\n        colPicker.current.displayMemberPath = \"header\";\r\n        colPicker.current.lostFocus.addHandler(() => {\r\n          hidePopup(colPicker.current.hostElement);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in initializing column picker properties:\", error);\r\n    }\r\n  }, [colPicker.current]);\r\n\r\n  useEffect(() => {\r\n    // remove column picker pop-up on component unmount\r\n    return () => {\r\n      if (props.columnPickerRequired && colPicker.current) {\r\n        hidePopup(colPicker.current.hostElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // export grid data to excel\r\n  const exportExcel = () => {\r\n    try {\r\n      let gridFlex = flex;\r\n      //to download all rows from all pages\r\n      gridFlex.itemsSource.pageSize = props.sourceData.length;\r\n      setFlex(gridFlex);\r\n      wjcGridXlsx.FlexGridXlsxConverter.saveAsync(\r\n        flex,\r\n        {\r\n          includeColumnHeaders: true,\r\n          includeCellStyles: false,\r\n          formatItem: null,\r\n        },\r\n        props.exportFileName\r\n      );\r\n\r\n      //to restore paging\r\n      gridFlex.itemsSource.pageSize = props.rowsPerPage;\r\n      setFlex(gridFlex);\r\n    } catch (error) {\r\n      console.log(\"Error in export grid to excel:\", error);\r\n    }\r\n  };\r\n\r\n  const terminalPopOver = (terminalCodes) => {\r\n    if (terminalCodes.split(\",\").length > props.terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={terminalCodes.split(\",\").length}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return terminalCodes;\r\n    }\r\n  };\r\n\r\n  const displayValues = (value, columnDetail) => {\r\n    if (columnDetail !== undefined && columnDetail !== null) {\r\n      if (typeof value === \"boolean\" || columnDetail.Name === \"Active\") {\r\n        if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n        else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n      } else if (value === \"\" || value === null || value === undefined) {\r\n        return value;\r\n      } else if (\r\n        (columnDetail.Name === \"TerminalCodes\" ||\r\n          columnDetail.PopOver === \"1\") &&\r\n        value !== null\r\n      ) {\r\n        return terminalPopOver(value);\r\n      }\r\n      // var columnType = columnDetails.find(function (detail) {\r\n      //   if (detail.Name === field) {\r\n      //     return detail;\r\n      //   }\r\n      // });\r\n      else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"DateTime\"\r\n      ) {\r\n        return (\r\n          new Date(value).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(value).toLocaleTimeString()\r\n        );\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Date\"\r\n      ) {\r\n        return new Date(value).toLocaleDateString();\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Time\"\r\n      ) {\r\n        return new Date(value).toLocaleTimeString();\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  //Initialize Column Picker\r\n  const initializedPicker = (picker) => {\r\n    if (props.columnPickerRequired) {\r\n      colPicker.current = picker;\r\n    }\r\n  };\r\n\r\n  // Column Picker Handler\r\n  const colPickerClickHandler = (event) => {\r\n    try {\r\n      let host = colPicker.current.hostElement;\r\n      if (!host.offsetHeight) {\r\n        showPopup(host, event.target, PopupPosition.Below, true, false);\r\n        colPicker.current.focus();\r\n      } else {\r\n        hidePopup(host, true, true);\r\n        flex.focus();\r\n      }\r\n\r\n      colPicker.current.focus();\r\n      event.preventDefault();\r\n    } catch (error) {\r\n      console.log(\"Error in Column Picker click event:\", error);\r\n    }\r\n  };\r\n\r\n  const saveGridState = () => {\r\n    try {\r\n      if (flex && gridFilter.current) {\r\n        // grid column, filter, sort and grouping settings\r\n        let gridState = {\r\n          columns: flex.columns.map((col) => {\r\n            return {\r\n              binding: col.binding,\r\n              visible: col.visible,\r\n            };\r\n          }),\r\n          filterDefinition: gridFilter.current.control.filterDefinition,\r\n          sortDescriptions: flex.collectionView.sortDescriptions.map(\r\n            (sortDesc) => {\r\n              return {\r\n                property: sortDesc.property,\r\n                ascending: sortDesc.ascending,\r\n              };\r\n            }\r\n          ),\r\n          groupDescriptions: flex.collectionView.groupDescriptions.map(\r\n            (group) => {\r\n              if (group.propertyName) {\r\n                return group.propertyName;\r\n              }\r\n\r\n              return null;\r\n            }\r\n          ),\r\n        };\r\n\r\n        // add class to grouped checkbox div element\r\n        if (\r\n          flex.collectionView.groupDescriptions &&\r\n          flex.collectionView.groupDescriptions.length > 0\r\n        ) {\r\n          let groupedCheckboxes = [\r\n            ...document.getElementsByClassName(\"wj-column-selector-group\"),\r\n          ];\r\n          groupedCheckboxes.forEach((chkbx) => {\r\n            chkbx.parentNode.parentNode.classList.add(\"wj-grouped-checkbox\");\r\n          });\r\n        }\r\n\r\n        // grid paging and search settings\r\n        let sessionState = {\r\n          pageIndex: flex.collectionView.pageIndex,\r\n          searchText: theSearch.current.control.text,\r\n        };\r\n\r\n        localStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(gridState)\r\n        );\r\n        sessionStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(sessionState)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in saving grid state\");\r\n    }\r\n  };\r\n\r\n  // customize grid filter text and dropdowns\r\n  const customizeFilterConditions = () => {\r\n    // localize the FlexGrid filter\r\n    let filter = wjCore.culture.FlexGridFilter,\r\n      operator = Operator;\r\n    wjCore.culture.FlexGridFilter.header = translator(\"WijmoGridFilterHeader\");\r\n    wjCore.culture.FlexGridFilter.ascending =\r\n      \"\\u2191 \" + translator(\"WijmoGridFilterAscending\");\r\n    wjCore.culture.FlexGridFilter.descending =\r\n      \"\\u2193 \" + translator(\"WijmoGridFilterDescending\");\r\n    wjCore.culture.FlexGridFilter.apply = translator(\"RoleAdminEdit_Apply\");\r\n    wjCore.culture.FlexGridFilter.clear = translator(\"OrderCreate_btnClear\");\r\n    wjCore.culture.FlexGridFilter.conditions = translator(\r\n      \"WijmoGridFilterCondition\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.values = translator(\"WijmoGridFilterValue\");\r\n    wjCore.culture.FlexGridFilter.search = translator(\r\n      \"LoadingDetailsView_SearchGrid\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.selectAll = translator(\r\n      \"WijmoGridFilterSelectAll\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.and = translator(\"WijmoGridFilterAnd\");\r\n    wjCore.culture.FlexGridFilter.or = translator(\"WijmoGridFilterOr\");\r\n    wjCore.culture.FlexGridFilter.cancel = translator(\"AccessCardInfo_Cancel\");\r\n    // wjCore.culture.FlexGridFilter.null = 'test';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.and = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.asc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dialog = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dsc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.edit = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op2 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.or = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.search = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val2 = '';\r\n\r\n    // localize FlexGrid filter operators\r\n    filter.stringOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterBeginsWith\"), op: operator.BW },\r\n      { name: translator(\"WijmoGridFilterEndsWith\"), op: operator.EW },\r\n      { name: translator(\"WijmoGridFilterContains\"), op: operator.CT },\r\n      { name: translator(\"WijmoGridFilterDoesNotContain\"), op: operator.NC },\r\n    ];\r\n    filter.numberOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterGreaterThan\"), op: operator.GT },\r\n      { name: translator(\"WijmoGridFilterLessThan\"), op: operator.LT },\r\n      {\r\n        name: translator(\"WijmoGridFilterGreaterThanOrEqual\"),\r\n        op: operator.GE,\r\n      },\r\n      { name: translator(\"WijmoGridFilterLessThanOrEqual\"), op: operator.LE },\r\n    ];\r\n    filter.dateOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterDateEarlierThan\"), op: operator.LT },\r\n      { name: translator(\"WijmoGridFilterDateLaterThan\"), op: operator.GT },\r\n    ];\r\n    filter.booleanOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n    ];\r\n  };\r\n\r\n  // set column width based on screen size\r\n  const getWidth = (columnDetails) => {\r\n    try {\r\n      const screenWidth = window.screen.width;\r\n      if (screenWidth < 1024) {\r\n        if (columnDetails.WidthPx && columnDetails.WidthPx !== \"\")\r\n          return parseInt(columnDetails.WidthPx);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in width:\", error);\r\n    }\r\n\r\n    return columnDetails.WidthPercentage.includes(\"*\")\r\n      ? columnDetails.WidthPercentage\r\n      : parseInt(columnDetails.WidthPercentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pl-1\">\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <React.Fragment>\r\n              <div className=\"row pl-0\">\r\n                <div className=\"col-10 col-sm-12 col-md-5 col-lg-6\">\r\n                  <FlexGridSearch\r\n                    class=\"ui single-input\"\r\n                    ref={theSearch}\r\n                    placeholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-10 col-sm-12 col-md-7 col-lg-6\">\r\n                  <div style={{ float: \"right\" }}>\r\n                    {props.columnPickerRequired ? (\r\n                      <Button\r\n                        id=\"colPicker\"\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        onClick={(event) => colPickerClickHandler(event)}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridColumnPicker\")}\r\n                        </div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          <Icon\r\n                            name=\"caret-down\"\r\n                            className=\"btnIcon\"\r\n                            size=\"small\"\r\n                          />\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.exportRequired ? (\r\n                      <Button\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        className=\"mt-3 mt-md-0\"\r\n                        onClick={exportExcel}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridExport\")}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            className=\"icon-Xls\"\r\n                            style={{\r\n                              fontSize: \"17px\",\r\n                              position: \"absolute\",\r\n                              top: \"3px\",\r\n                            }}\r\n                          ></span>\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tableScroll\">\r\n                {props.columnGroupingRequired ? (\r\n                  <GroupPanel\r\n                    className=\"group-panel\"\r\n                    grid={flex}\r\n                    placeholder={t(\"WijmoGridGroupPanelPlaceholder\")}\r\n                  />\r\n                ) : null}\r\n                <ErrorBoundary>\r\n                  <FlexGrid\r\n                    ref={theGrid}\r\n                    autoGenerateColumns={false}\r\n                    alternatingRowStep={0}\r\n                    autoRowHeights={true}\r\n                    headersVisibility=\"Column\"\r\n                    itemsSource={data}\r\n                    selectionMode={wjCore.asEnum(\"None\", wjGrid.SelectionMode)}\r\n                    initialized={gridInitialized}\r\n                    virtualizationThreshold={[0, 10000]}\r\n                    onUpdatedView={saveGridState}\r\n                  >\r\n                    <FlexGridFilter ref={gridFilter} />\r\n                    {props.columns.map((column) => {\r\n                      return (\r\n                        <FlexGridColumn\r\n                          header={t(column.Name)}\r\n                          key={column.Name}\r\n                          binding={column.Name}\r\n                          width={getWidth(column)}\r\n                          minWidth={100}\r\n                          isReadOnly={true}\r\n                          wordWrap={true}\r\n                          align=\"left\"\r\n                        >\r\n                          <FlexGridCellTemplate\r\n                            cellType=\"Cell\"\r\n                            template={(context) => {\r\n                              return (\r\n                                <span\r\n                                  style={\r\n                                    props.conditionalRowStyleCheck == null ||\r\n                                    !props.conditionalRowStyleCheck(\r\n                                      context.item\r\n                                    )\r\n                                      ? null\r\n                                      : { ...props.conditionalRowStyles }\r\n                                  }\r\n                                >\r\n                                  {displayValues(\r\n                                    context.item[column.Name],\r\n                                    column\r\n                                  )}\r\n                                </span>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FlexGridColumn>\r\n                      );\r\n                    })}\r\n                  </FlexGrid>\r\n                </ErrorBoundary>\r\n                {props.columnPickerRequired ? (\r\n                  <div className=\"column-picker-div\">\r\n                    <ListBox\r\n                      className=\"column-picker\"\r\n                      initialized={(picker) => initializedPicker(picker)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"row\">\r\n                <CollectionViewNavigator\r\n                  ref={pagingComponent}\r\n                  className=\"ml-auto mr-auto mt-3\"\r\n                  headerFormat={t(\"WijmoGridPagingTemplate\")}\r\n                  byPage={true}\r\n                  cv={data}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nWijmoGrid.propTypes = {\r\n  sourceData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  exportRequired: PropTypes.bool.isRequired,\r\n  exportFileName: PropTypes.string,\r\n  selectionRequired: PropTypes.bool,\r\n  columnPickerRequired: PropTypes.bool,\r\n  columnGroupingRequired: PropTypes.bool,\r\n  conditionalRowStyleCheck: PropTypes.func,\r\n  conditionalRowStyles: PropTypes.object,\r\n  rowsPerPage: PropTypes.number,\r\n  onSelectionHandle: PropTypes.func,\r\n  parentComponent: PropTypes.string.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  terminalsToShow: PropTypes.number,\r\n  singleSelection: PropTypes.bool,\r\n  selectedItems: PropTypes.array,\r\n};\r\n\r\nWijmoGrid.defaultProps = {\r\n  sourceData: [],\r\n  columns: [],\r\n  exportRequired: true,\r\n  exportFileName: \"Grid.xlsx\",\r\n  selectionRequired: false,\r\n  columnPickerRequired: false,\r\n  columnGroupingRequired: false,\r\n  rowsPerPage: 10,\r\n  terminalsToShow: 2,\r\n  singleSelection: false,\r\n  selectedItems: [],\r\n};\r\n\r\nexport default WijmoGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WijmoGrid from '../../UIBase/Common/WijmoGrid';\r\n\r\nconst WijmoGridComposite = (props) => {\r\n    return (\r\n        <WijmoGrid\r\n            sourceData={props.data}\r\n            columns={props.columns}\r\n            exportRequired={props.exportRequired}\r\n            exportFileName={props.exportFileName}\r\n            columnPickerRequired={props.columnPickerRequired}\r\n            selectionRequired={props.selectionRequired}\r\n            columnGroupingRequired={props.columnGroupingRequired}\r\n            conditionalRowStyleCheck={props.conditionalRowStyleCheck}\r\n            conditionalRowStyles={props.conditionalRowStyles}\r\n            rowsPerPage={props.rowsPerPage}\r\n            onSelectionHandle={props.onSelectionHandle}\r\n            onRowClick={props.onRowClick}\r\n            parentComponent={props.parentComponent}\r\n            terminalsToShow={props.terminalsToShow}\r\n            singleSelection={props.singleSelection}\r\n            selectedItems={props.selectedItems}\r\n        />\r\n    )\r\n}\r\n\r\nWijmoGridComposite.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n    exportRequired: PropTypes.bool.isRequired,\r\n    exportFileName: PropTypes.string,\r\n    selectionRequired: PropTypes.bool,\r\n    columnPickerRequired: PropTypes.bool,\r\n    columnGroupingRequired: PropTypes.bool,\r\n    conditionalRowStyleCheck: PropTypes.func,\r\n    conditionalRowStyles: PropTypes.object,\r\n    rowsPerPage: PropTypes.number,\r\n    onSelectionHandle: PropTypes.func,\r\n    parentComponent: PropTypes.string.isRequired,\r\n    onRowClick: PropTypes.func,\r\n    terminalsToShow: PropTypes.number,\r\n    singleSelection: PropTypes.bool,\r\n    selectedItems: PropTypes.array\r\n}\r\n\r\nexport default WijmoGridComposite;","import React from \"react\";\r\nimport { Input, Accordion,Select,Icon } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\n\r\nCustomerStockTransferDetails.propTypes = {\r\n    modCustomerstockTransfer:PropTypes.object.isRequired,\r\n    CustomerAgreementItems: PropTypes.array.isRequired,\r\n    listOptions: PropTypes.shape({\r\n        shareholders: PropTypes.array,\r\n        RequestercustomerOptions: PropTypes.array,\r\n        LendercustomerOptions: PropTypes.array,\r\n        baseProductOptions: PropTypes.array,\r\n        quantityUOMOptions: PropTypes.array,\r\n\r\n\r\n    }).isRequired,\r\n    handleCellDataEdit: PropTypes.func.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    selectedAssociations: PropTypes.array.isRequired,\r\n    handleRowSelectionChange: PropTypes.func.isRequired,\r\n    handleAddAssociation: PropTypes.func.isRequired,\r\n    handleDeleteAssociation: PropTypes.func.isRequired,\r\n    validationErrors: PropTypes.object.isRequired,\r\n\r\n}\r\nCustomerStockTransferDetails.defaultProps = {\r\n    listOptions: {\r\n        quantityUOMOptions: [],\r\n        baseProductOptions:[],\r\n        customerOptions: [],\r\n        LendercustomerOptions:[],\r\n        RequestercustomerOptions: [],\r\n        shareholders:[]\r\n    },\r\n};\r\nexport function CustomerStockTransferDetails({\r\n    modCustomerstockTransfer,\r\n    CustomerAgreementItems,\r\n    onFieldChange,\r\n    listOptions,\r\n    handleCellDataEdit,\r\n    handleDeleteAssociation,\r\n    handleAddAssociation,\r\n    handleRowSelectionChange,\r\n    selectedAssociations,\r\nvalidationErrors\r\n}) {\r\n    const [t] = useTranslation();\r\n    const decimalDisplayValues = (cellData) => {\r\n        const { value } = cellData;\r\n        if (typeof value === \"number\") {\r\n            return value.toLocaleString();\r\n        } else {\r\n            return value;\r\n        }\r\n    };\r\n    const handleCustomEditDropDown = (cellData, listOptions) => {\r\n        return (\r\n            <Select\r\n                className=\"selectDropwdown\"\r\n                value={CustomerAgreementItems[cellData.rowIndex][cellData.field]}\r\n                fluid\r\n                options={listOptions}\r\n                onChange={(value) => handleCellDataEdit(value, cellData)}\r\n                indicator=\"required\"\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n            />\r\n        );\r\n    };\r\n    const handleCustomEditTextBox = (cellData) => {\r\n        return (\r\n            <Input\r\n                fluid\r\n                value={CustomerAgreementItems[cellData.rowIndex][cellData.field]}\r\n                onChange={(value) => handleCellDataEdit(value, cellData)}\r\n                reserveSpace={false}\r\n            />\r\n        );\r\n    };\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t, index) => (\r\n                <div className=\"detailsContainer\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                key={index}\r\n                                fluid\r\n                                value={modCustomerstockTransfer.Code}\r\n                                indicator=\"required\"\r\n                                onChange={(data) => onFieldChange(\"Code\", data)}\r\n                                label={t(\"CustomerAgreement_TransferReferenceCode\")}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.Code)}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder=\"Select\"\r\n                                indicator=\"required\"\r\n                                value={modCustomerstockTransfer.LenderShareholderCode}\r\n                                label={t(\"ExchangeAgreementDetails_lenderShareHolder\")}\r\n                                options={listOptions.shareholders}\r\n                                onChange={(data) => onFieldChange(\"LenderShareholderCode\", data)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                onResultsMessage={t(\"noResultsMessage\")}\r\n                                error={t(validationErrors.LenderShareholderCode)}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                indicator=\"required\"\r\n                                label={t(\"CustomerAgreement_FromCustomerCode\")}\r\n                                value={modCustomerstockTransfer.LenderCustomerCode === null ? \"\" : modCustomerstockTransfer.LenderCustomerCode }\r\n                                onChange={(data) => onFieldChange(\"LenderCustomerCode\", data)}\r\n                                options={listOptions.LendercustomerOptions}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.LenderCustomerCode)}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder=\"Select\"\r\n                                value={modCustomerstockTransfer.RequestorShareholderCode}\r\n                                label={t(\"CustomerAgreement_ToShareholder\")}\r\n                                options={listOptions.shareholders}\r\n                                onChange={(data) => onFieldChange(\"RequestorShareholderCode\", data)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                onResultsMessage={t(\"noResultsMessage\")}\r\n                                indicator=\"required\"\r\n                                error={t(validationErrors.RequestorShareholderCode)}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                indicator=\"required\"\r\n                                placeholder=\"Select\"\r\n                                label={t(\"CustomerAgreement_ToCustomer\")}\r\n                                value={modCustomerstockTransfer.RequestorCustomerCode === null ? \"\" : modCustomerstockTransfer.RequestorCustomerCode}\r\n                                onChange={(data) => onFieldChange(\"RequestorCustomerCode\", data)}\r\n                                options={listOptions.RequestercustomerOptions}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.RequestorCustomerCode)}\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                        <div className=\"row compartmentRow\">\r\n                        <h3>{t(\"CustomerAgreement_TransferDetails\")} </h3>\r\n                            <div className=\"col\">\r\n                                <div className=\"compartmentIconContainer\">\r\n                                    <div\r\n                                        onClick={handleAddAssociation}\r\n                                        className=\"compartmentIcon\"\r\n                                    >\r\n                                        <div>\r\n                                            <Icon root=\"common\" name=\"badge-plus\" size=\"medium\" />\r\n                                        </div>\r\n                                        <div className=\"margin_l10\">\r\n                                            <h5 className=\"font14\">{t(\"TrailerInfo_Add\")}</h5>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div\r\n                                        onClick={handleDeleteAssociation}\r\n                                        className=\"compartmentIcon margin_l30\"\r\n                                    >\r\n                                        <div>\r\n                                            <Icon root=\"common\" name=\"delete\" size=\"medium\" />\r\n                                        </div>\r\n                                        <div className=\"margin_l10\">\r\n                                            <h5 className=\"font14\">{t(\"TrailerInfo_Delete\")}</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row marginRightZero tableScroll\">\r\n                                <div className=\"col-12 detailsTable\">\r\n                                    <DataTable\r\n                                        data={CustomerAgreementItems}\r\n                                        selectionMode=\"multiple\"\r\n                                        selection={selectedAssociations}\r\n                                    onSelectionChange={handleRowSelectionChange}\r\n                                        scrollable={true}\r\n                                        scrollHeight=\"320px\"\r\n                                    >\r\n                                        <DataTable.Column\r\n                                            className=\"compColHeight colminWidth\"\r\n                                            key=\"BaseProductCode\"\r\n                                            field=\"BaseProductCode\"\r\n                                            header={t(\"ExchangeAgreementDetailsItem_Product\")}\r\n                                            editFieldType=\"text\"\r\n                                            editable={true}\r\n                                            customEditRenderer={(celldata) =>\r\n                                                handleCustomEditDropDown(\r\n                                                    celldata,\r\n                                                    listOptions.baseProductOptions\r\n                                                )\r\n                                            }\r\n\r\n                                        ></DataTable.Column>\r\n                                        \r\n\r\n                                        <DataTable.Column\r\n                                            className=\"compColHeight colminWidth\"\r\n                                            key=\"Quantity\"\r\n                                            field=\"Quantity\"\r\n                                            header={t(\"ExchangeAgreementDetailsItem_Qty\")}\r\n                                            editable={true}\r\n                                            editFieldType=\"text\"\r\n                                            renderer={(cellData) => decimalDisplayValues(cellData)}\r\n                                            customEditRenderer={handleCustomEditTextBox}\r\n                                        ></DataTable.Column>\r\n                                       \r\n                                        <DataTable.Column\r\n                                            className=\"compColHeight colminWidth\"\r\n                                            key=\"QuantityUOM\"\r\n                                            field=\"QuantityUOM\"\r\n                                            header={t(\"ExchangeAgreementDetailsItem_UOM\")}\r\n                                            //rowHeader={true}\r\n                                            editable={true}\r\n                                            editFieldType=\"text\"\r\n                                        customEditRenderer={(celldata) =>\r\n                                            handleCustomEditDropDown(\r\n                                                celldata,\r\n                                                listOptions.quantityUOMOptions\r\n                                            )\r\n                                        }\r\n                                        ></DataTable.Column>\r\n                                      \r\n                                    </DataTable>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        \r\n\r\n                       \r\n                        \r\n                       \r\n\r\n\r\n                </div>\r\n\r\n            )}\r\n        </TranslationConsumer>\r\n    )\r\n\r\n\r\n\r\n\r\n }","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { emptyCustomerStockTransfer } from \"../../../JS/DefaultEntities\";\r\nimport { connect } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport { CustomerStockTransferDetails } from \"../../UIBase/Details/CustomerStockTransferDetails\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport lodash from \"lodash\";\r\nimport { functionGroups, fnCustomerAgreement } from \"../../../JS/FunctionGroups\";\r\nimport { CustomerStockTransferValidationDef } from \"../../../JS/ValidationDef\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass CustomerStockTransferDetailsComposite extends Component { \r\n\r\n    state = {\r\n        customerstockTransfer: lodash.cloneDeep(emptyCustomerStockTransfer),\r\n        validationErrors: Utilities.getInitialValidationErrors(CustomerStockTransferValidationDef),\r\n        modCustomerstockTransfer: {},\r\n        CustomerAgreementItems:[],\r\n        isReadyToRender: false,\r\n        saveEnabled: false,\r\n        LendercustomerOptions: [],\r\n        RequestercustomerOptions:[],\r\n        shareholders: this.getShareholders(),\r\n        baseProductOptions: [],\r\n        quantityUOMOptions:[],\r\n        selectedAssociations: [],\r\n        showAuthenticationLayout: false,\r\n        tempCustomerstockTransfer: {}\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n            this.getCustomerStockTransfer(this.props.selectedRow);\r\n            this.getBaseProducts();\r\n            this.GetUOMList();\r\n        } catch (error) {\r\n            console.log(\r\n                \"customertransferDetailsComposite:Error occured on componentDidMount\",\r\n                error\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        try {\r\n            if (\r\n                this.state.customerstockTransfer.Code !== \"\" &&\r\n                nextProps.selectedRow.CustomerAgreement_TransferReferenceCode === undefined &&\r\n                this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n            ) {\r\n                this.getCustomerStockTransfer(nextProps.selectedRow);\r\n            }\r\n        } catch (error) {\r\n            console.log(\r\n                \"customertransferDetailsComposite:Error occured on componentWillReceiveProps\",\r\n                error\r\n            );\r\n        }\r\n    }\r\n    getShareholders() {\r\n        return Utilities.transferListtoOptions(\r\n            this.props.userDetails.EntityResult.ShareholderList\r\n        );\r\n    }\r\n    getCustomerList(shareholders, shareholderType) {\r\n        try {\r\n            if (shareholders !== undefined && shareholders !== \"\") {\r\n                axios(\r\n                    RestAPIs.GetCustomerDestinations +\r\n                    \"?ShareholderCode=\" +\r\n                    shareholders +\r\n                    \"&TransportationType=\" +\r\n                    \"\",\r\n                    Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n                ).then((response) => {\r\n                \r\n                    var result = response.data;\r\n                    if (result.IsSuccess === true) {\r\n                        if (Array.isArray(result.EntityResult)) {\r\n                        \r\n                            let shareholderCustomers = result.EntityResult.filter(\r\n                                (shareholderCust) =>\r\n                                    shareholderCust.ShareholderCode === shareholders\r\n                            );\r\n                            if (shareholderType === \"RequestorShareholderCode\") {\r\n                                if (shareholderCustomers.length > 0) {\r\n                                    let customerDestinationOptions =\r\n                                        shareholderCustomers[0].CustomerDestinationsList;\r\n                                    let RequestercustomerOptions = [];\r\n                                    if (customerDestinationOptions !== null) {\r\n                                        RequestercustomerOptions = Object.keys(customerDestinationOptions);\r\n                                        RequestercustomerOptions =\r\n                                            Utilities.transferListtoOptions(RequestercustomerOptions);\r\n                                    }\r\n                                    this.setState({ RequestercustomerOptions });\r\n                                }\r\n                            } else if (shareholderType === \"LenderShareholderCode\") {\r\n                                if (shareholderCustomers.length > 0) {\r\n                                    let customerDestinationOptions =\r\n                                        shareholderCustomers[0].CustomerDestinationsList;\r\n                                    let LendercustomerOptions = [];\r\n                                    if (customerDestinationOptions !== null) {\r\n                                        LendercustomerOptions = Object.keys(customerDestinationOptions);\r\n                                        LendercustomerOptions =\r\n                                            Utilities.transferListtoOptions(LendercustomerOptions);\r\n                                    }\r\n                                    this.setState({ LendercustomerOptions });\r\n                                }\r\n                            }\r\n                            else {\r\n                                console.log(\r\n                                    \"CustomerStockTransferDetailsComposite:no customers identified for shareholder\"\r\n                                );\r\n                            }\r\n                        } else {\r\n                            console.log(\r\n                                \"CustomerStockTransferDetailsComposite:customerdestinations not identified for shareholder\"\r\n                            );\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        } catch (err) {\r\n            console.log(\"error in requestorcustomerlist\",err)\r\n        }\r\n    }\r\n    getBaseProducts() {\r\n        try {\r\n            axios(\r\n                RestAPIs.GetAllBaseProduct + \"?TerminalCode=\",\r\n                Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n            )\r\n                .then((response) => {\r\n                \r\n                    var result = response.data;\r\n                    if (result.IsSuccess === true) {\r\n                        if (\r\n                            result.EntityResult !== null &&\r\n                            Array.isArray(result.EntityResult)\r\n                        ) {\r\n                            let baseProductOptions = Utilities.transferListtoOptions(\r\n                                result.EntityResult\r\n                            );\r\n                            this.setState({ baseProductOptions });\r\n                        }\r\n                    } else {\r\n                        console.log(\"Error in getBaseProducts:\", result.ErrorList);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error while getting BaseProducts:\", error);\r\n                });\r\n        } catch (err) {\r\n            console.log(\"Error while getting BaseProducts:\", err); \r\n        }\r\n    }\r\n    handleChange = (propertyName, data) => {\r\n        \r\n        try {\r\n            const modCustomerstockTransfer = lodash.cloneDeep(this.state.modCustomerstockTransfer);\r\n            modCustomerstockTransfer[propertyName] = data;\r\n            this.setState({ modCustomerstockTransfer });\r\n            if (propertyName === \"LenderShareholderCode\" ) {\r\n                this.getCustomerList(data,\"LenderShareholderCode\");\r\n            }  if (propertyName === \"RequestorShareholderCode\")\r\n            {\r\n                this.getCustomerList(data,\"RequestorShareholderCode\");\r\n            }\r\n\r\n            const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n            if (CustomerStockTransferValidationDef[propertyName] !== undefined) {\r\n                validationErrors[propertyName] = Utilities.validateField(\r\n                    CustomerStockTransferValidationDef[propertyName],\r\n                    data\r\n                );\r\n                this.setState({ validationErrors });\r\n            }\r\n        } catch (error) {\r\n            console.log(\r\n                \"CustomerstocktransferDetailsComposite:Error occured on handleChange\",\r\n                error\r\n            );\r\n        }\r\n    };\r\n    handleCellDataEdit = (newVal, cellData) => {\r\n        try {\r\n            let CustomerAgreementItems = lodash.cloneDeep(this.state.CustomerAgreementItems);\r\n            CustomerAgreementItems[cellData.rowIndex][cellData.field] = newVal;\r\n            this.setState({ CustomerAgreementItems });\r\n        } catch (err) {\r\n            console.log(\"errror in handlecelledit\",err)\r\n        }\r\n    };\r\n    GetUOMList() {\r\n        try {\r\n            axios(\r\n                RestAPIs.GetUOMList,\r\n                Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n            )\r\n                .then((response) => {\r\n                    var result = response.data;\r\n\r\n                    if (result.IsSuccess === true) {\r\n                        if (result.EntityResult !== null) {\r\n                            let quantityUOMOptions = [];\r\n                            if (Array.isArray(result.EntityResult.VOLUME)) {\r\n                                quantityUOMOptions = Utilities.transferListtoOptions(\r\n                                    result.EntityResult.VOLUME\r\n                                );\r\n                            }\r\n                            if (Array.isArray(result.EntityResult.MASS)) {\r\n                                let massUOMOptions = Utilities.transferListtoOptions(\r\n                                    result.EntityResult.MASS\r\n                                );\r\n                                massUOMOptions.forEach((massUOM) =>\r\n                                    quantityUOMOptions.push(massUOM)\r\n                                );\r\n                            }\r\n\r\n                            this.setState({ quantityUOMOptions });\r\n                        }\r\n                    } else {\r\n                        console.log(\"Error in GetUOMList:\", result.ErrorList);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error while getting GetUOMList:\", error);\r\n                });\r\n        } catch (error) {\r\n            console.log(\"Error while getting GetUOMList:\", error);\r\n        }\r\n    }\r\n    getCustomerStockTransfer(CustomerstockTransferRow) {\r\n        try {\r\n            if (CustomerstockTransferRow.CustomerAgreement_TransferReferenceCode === undefined) {\r\n                this.setState({\r\n                    customerstockTransfer: lodash.cloneDeep(emptyCustomerStockTransfer),\r\n                    modCustomerstockTransfer: lodash.cloneDeep(emptyCustomerStockTransfer),\r\n                    isReadyToRender: true,\r\n                    selectedAttributeList: [],\r\n                    CustomerAgreementItems: [],\r\n                    saveEnabled: Utilities.isInFunction(\r\n                        this.props.userDetails.EntityResult.FunctionsList,\r\n                        functionGroups.add,\r\n                        fnCustomerAgreement\r\n                    ),\r\n                }\r\n                );\r\n                return;\r\n            }\r\n            var keyCode = [\r\n                {\r\n                    key: KeyCodes.TransferReferenceCode,\r\n                    value: CustomerstockTransferRow.CustomerAgreement_TransferReferenceCode,\r\n                }\r\n            ];\r\n            var obj = {\r\n                TransferReferenceCode: CustomerstockTransferRow.CustomerAgreement_TransferReferenceCode,\r\n                keyDataCode: KeyCodes.TransferReferenceCode,\r\n                KeyCodes: keyCode,\r\n            };\r\n            axios(\r\n                RestAPIs.GetCustomerStockTransfer,\r\n                Utilities.getAuthenticationObjectforPost(\r\n                    obj,\r\n                    this.props.tokenDetails.tokenInfo\r\n                )\r\n            ).then((response) => {\r\n            \r\n                var result = response.data;\r\n                if (result.IsSuccess === true) {\r\n                    let modCustomerstockTransfer = lodash.cloneDeep(result.EntityResult)\r\n                    this.setState(\r\n                        {\r\n                            isReadyToRender: true,\r\n                            customerstockTransfer: lodash.cloneDeep(result.EntityResult),\r\n                            modCustomerstockTransfer,\r\n                            CustomerAgreementItems: modCustomerstockTransfer.CustomerAgreementItems,\r\n                            saveEnabled: false\r\n                        }, () => {\r\n                            if (modCustomerstockTransfer.RequestorShareholderCode !== undefined) {\r\n                                this.getCustomerList(modCustomerstockTransfer.RequestorShareholderCode, \"RequestorShareholderCode\")\r\n                            }\r\n                            if (modCustomerstockTransfer.LenderShareholderCode !== undefined) {\r\n                                this.getCustomerList(modCustomerstockTransfer.LenderShareholderCode, \"LenderShareholderCode\")\r\n                            }\r\n                        }\r\n                    );\r\n                } else {\r\n                    this.setState({\r\n                        customerstockTransfer: lodash.cloneDeep(emptyCustomerStockTransfer),\r\n                        modCustomerstockTransfer: lodash.cloneDeep(emptyCustomerStockTransfer),\r\n                        isReadyToRender: true,\r\n                    });\r\n                    console.log(\"Error in getcustomerstock:\", result.ErrorList);\r\n                }\r\n            })\r\n                .catch((error) => {\r\n                    console.log(\"Error while getcustomerstock:\", error, CustomerstockTransferRow);\r\n                });\r\n        } catch (err) {\r\n            console.log(\"Error while getcustomerstock:\",err)\r\n        }\r\n    }\r\n    fillDetails(modAssociations) {\r\n        \r\n        let AssociationDetails = [];\r\n        try {\r\n            if (Array.isArray(modAssociations)) {\r\n                modAssociations.forEach((association) => {\r\n                    if (\r\n                        !(\r\n                            association.BaseProductCode === null ||\r\n                            association.BaseProductCode === \"\"\r\n                        ) ||\r\n                        !(association.Quantity === null || association.Quantity === \"\")\r\n                    ) {\r\n                        AssociationDetails.push({\r\n                            BaseProductCode: association.BaseProductCode,\r\n                            Quantity: association.Quantity,\r\n                            QuantityUOM: association.QuantityUOM\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(\"Error while making filldetails:\", error);\r\n        }\r\n        return AssociationDetails;\r\n    }\r\n    handleAssociationSelectionChange = (associations) => {\r\n        this.setState({ selectedAssociations: associations });\r\n    };\r\n    handleAddAssociation = () => {\r\n        \r\n                try {\r\n                    let CustomerAgreementItems = lodash.cloneDeep(\r\n                        this.state.CustomerAgreementItems\r\n                    );\r\n                    let newComp = {\r\n                        BaseProductCode:\"\",\r\n                        Quantity: 0,\r\n                        QuantityUOM: \"\",\r\n                       \r\n                    };\r\n                   CustomerAgreementItems.push(newComp);\r\n\r\n                    this.setState({\r\n                        CustomerAgreementItems,\r\n                        selectedAssociations: [],\r\n                    });\r\n                } catch (error) {\r\n                    console.log(\r\n                        \"CustomerstockTransferDetailsComposite:Error occured on handleAddAssociation\",\r\n                        error\r\n                    );\r\n                }\r\n    };\r\n\r\n    handleDeleteAssociation = () => {\r\n        try {\r\n                try {\r\n                    if (\r\n                        this.state.selectedAssociations != null &&\r\n                        this.state.selectedAssociations.length > 0\r\n                    ) {\r\n                        if (\r\n                            this.state.CustomerAgreementItems.length > 0\r\n                        ) {\r\n                            let CustomerAgreementItems = lodash.cloneDeep(\r\n                                this.state.CustomerAgreementItems\r\n                            );\r\n\r\n                            this.state.selectedAssociations.forEach((obj, index) => {\r\n                                CustomerAgreementItems =\r\n                                    CustomerAgreementItems.filter(\r\n                                        (com, cindex) => {\r\n                                            return com.BaseProductCode !== obj.BaseProductCode;\r\n                                        }\r\n                                    );\r\n                            });\r\n\r\n                            this.setState({ CustomerAgreementItems });\r\n                        }\r\n                    }\r\n\r\n                    this.setState({ selectedAssociations: [] });\r\n                } catch (error) {\r\n                    console.log(\r\n                        \"customerstocltransferDetailsComposite:Error occured on handleDeleteAssociation\",\r\n                        error\r\n                    );\r\n                }\r\n        } catch (error) {\r\n            console.log(\"error in handle Delete Association\", error)\r\n        }\r\n    };\r\n    handleReset = () => {\r\n        try {\r\n            const customerstockTransfer = lodash.cloneDeep(this.state.customerstockTransfer);\r\n            this.setState({\r\n                modCustomerstockTransfer: { ...customerstockTransfer },\r\n            });\r\n        } catch (error) {\r\n            console.log(\"CustomerStocktransferDetailsComposite:Error occured on handleReset\", error);\r\n        }\r\n    };\r\n    validateSave(modCustomerstockTransfer) {\r\n        try {\r\n            var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n            Object.keys(CustomerStockTransferValidationDef).forEach(function (key) {\r\n                validationErrors[key] = Utilities.validateField(\r\n                    CustomerStockTransferValidationDef[key],\r\n                    modCustomerstockTransfer[key]\r\n                );\r\n            });\r\n            let notification = {\r\n                messageType: \"critical\",\r\n                message: [\"CustomerStockTransfer_SavedStatus\"],\r\n                messageResultDetails: [],\r\n            };\r\n            this.setState({ validationErrors });\r\n            var returnValue = true;\r\n            if (returnValue)\r\n                returnValue = Object.values(validationErrors).every(function (value) {\r\n                    return value === \"\";\r\n                });\r\n            if (notification.messageResultDetails.length > 0) {\r\n                this.props.onSaved(this.state.modCustomerstockTransfer, \"update\", notification);\r\n                return false;\r\n            }\r\n            return returnValue;\r\n        } catch (error) {\r\n            console.log(\"Error while Validate Save\", error)\r\n        }\r\n    }\r\n    saveCustomerStockTransfer = () => {\r\n    \r\n        try {\r\n            this.setState({ saveEnabled: false });\r\n            let tempCustomerstockTransfer = lodash.cloneDeep(this.state.tempCustomerstockTransfer);\r\n            tempCustomerstockTransfer.TransferDate = new Date();\r\n            tempCustomerstockTransfer.CustomerAgreementItems = this.fillDetails(this.state.CustomerAgreementItems)\r\n            this.CreateCustomerStockTransfer(tempCustomerstockTransfer)\r\n        } catch (error) {\r\n            console.log(\"CustomerstockTransferDetailsComposite : Error in saveBaseProduct\");\r\n        }\r\n    }\r\n    handleSave = () => {\r\n        \r\n        try {\r\n            let modCustomerstockTransfer = lodash.cloneDeep(this.state.modCustomerstockTransfer);\r\n            modCustomerstockTransfer.TransferDate = new Date();\r\n            modCustomerstockTransfer.CustomerAgreementItems = this.fillDetails(this.state.CustomerAgreementItems)\r\n            this.setState({ saveEnabled: false });\r\n            if (this.validateSave(modCustomerstockTransfer)) {\r\n                let tempCustomerstockTransfer = lodash.cloneDeep(modCustomerstockTransfer);\r\n                tempCustomerstockTransfer.CustomerAgreementItems = this.fillDetails(this.state.CustomerAgreementItems)\r\n                let showAuthenticationLayout =\r\n                    this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n                        ? true\r\n                        : false;\r\n                this.setState({ showAuthenticationLayout, tempCustomerstockTransfer }, () => {\r\n                    if (showAuthenticationLayout === false) {\r\n                        this.saveCustomerStockTransfer();\r\n                    }\r\n                });\r\n\r\n            } else this.setState({ saveEnabled: true });\r\n        } catch (err) {\r\n            console.log(\"error in handleSave\",err)\r\n        }\r\n    }\r\n    CreateCustomerStockTransfer(modCustomerstockTransfer) {\r\n        \r\n        try {\r\n            let obj = {\r\n                Entity: modCustomerstockTransfer,\r\n            };\r\n\r\n            let notification = {\r\n                messageType: \"critical\",\r\n                message: \"CustomerStockTransfer_SavedStatus\",\r\n                messageResultDetails: [\r\n                    {\r\n                        keyFields: [\"CustomerAgreement_TransferReferenceCode\"],\r\n                        keyValues: [modCustomerstockTransfer.Code],\r\n                        isSuccess: false,\r\n                        errorMessage: \"\",\r\n                    },\r\n                ],\r\n            };\r\n            axios(\r\n                RestAPIs.CreateCustomerStockTransfer,\r\n                Utilities.getAuthenticationObjectforPost(\r\n                    obj,\r\n                    this.props.tokenDetails.tokenInfo\r\n                )\r\n            )\r\n                .then((response) => {\r\n                    let result = response.data;\r\n                    notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n                    notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n                    if (result.IsSuccess === true) {\r\n                        this.setState({\r\n                            saveEnabled:false\r\n                        });\r\n                        this.getCustomerStockTransfer({ CustomerAgreement_TransferReferenceCode: modCustomerstockTransfer.Code })\r\n                    } else {\r\n                        notification.messageResultDetails[0].errorMessage =\r\n                            result.ErrorList[0];\r\n                        this.setState({\r\n                            saveEnabled: true,\r\n                        });\r\n                        console.log(\"Error in CustomerstockTransfer:\", result.ErrorList);\r\n                    }\r\n                    this.props.onSaved(modCustomerstockTransfer, \"add\", notification);\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        saveEnabled: true,\r\n                    });\r\n                    notification.messageResultDetails[0].errorMessage = error;\r\n                    this.props.onSaved(modCustomerstockTransfer, \"add\", notification);\r\n                });\r\n        } catch (err) {\r\n            console.log(\"Error in CustomerstockTransfer:\", err);\r\n        }\r\n    }\r\n    handleAuthenticationClose = () => {\r\n        this.setState({\r\n            showAuthenticationLayout: false,\r\n        });\r\n    };\r\n\r\n    \r\n    render() {\r\n        const listOptions = {\r\n            shareholders: this.state.shareholders,\r\n            RequestercustomerOptions: this.state.RequestercustomerOptions,\r\n            LendercustomerOptions:this.state.LendercustomerOptions,\r\n            baseProductOptions: this.state.baseProductOptions,\r\n            quantityUOMOptions: this.state.quantityUOMOptions\r\n\r\n\r\n        };\r\n        return this.state.isReadyToRender ? (\r\n            <div>\r\n                <ErrorBoundary>\r\n                    <TMDetailsHeader\r\n                        entityCode={this.state.customerstockTransfer.Code}\r\n                        newEntityName=\"CustomerAgreement_DetailsPageTitle\"\r\n\r\n                    ></TMDetailsHeader>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CustomerStockTransferDetails\r\n                        modCustomerstockTransfer={this.state.modCustomerstockTransfer} \r\n                        CustomerAgreementItems={this.state.CustomerAgreementItems}\r\n                        listOptions={listOptions}\r\n                        handleCellDataEdit={this.handleCellDataEdit}\r\n                        onFieldChange={this.handleChange}\r\n                        handleAddAssociation={this.handleAddAssociation}\r\n                        handleDeleteAssociation={this.handleDeleteAssociation}\r\n                        selectedAssociations={this.state.selectedAssociations}\r\n                        handleRowSelectionChange={\r\n                            this.handleAssociationSelectionChange\r\n                        }\r\n                        validationErrors={this.state.validationErrors}\r\n                    >\r\n                    </CustomerStockTransferDetails>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <TMDetailsUserActions\r\n                        handleBack={this.props.onBack}\r\n                        handleSave={this.handleSave}\r\n                        handleReset={this.handleReset}\r\n                        saveEnabled={this.state.saveEnabled}\r\n                    ></TMDetailsUserActions>\r\n                </ErrorBoundary>\r\n                {this.state.showAuthenticationLayout ? (\r\n                    <UserAuthenticationLayout\r\n                        Username={this.props.userDetails.EntityResult.UserName}\r\n                        functionName={\r\n                                 functionGroups.add\r\n                        }\r\n                        functionGroup={fnCustomerAgreement}\r\n                        handleOperation={this.saveCustomerStockTransfer}\r\n                        handleClose={this.handleAuthenticationClose}\r\n                    ></UserAuthenticationLayout>\r\n                ) : null}\r\n            </div>\r\n        ) : (\r\n            <LoadingPage message=\"Loading\"></LoadingPage>\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userDetails: state.getUserDetails.userDetails,\r\n        tokenDetails: state.getUserDetails.TokenAuth,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CustomerStockTransferDetailsComposite);\r\n\r\nCustomerStockTransferDetailsComposite.propTypes = {\r\n    selectedRow: PropTypes.object.isRequired,\r\n    terminalCodes: PropTypes.array.isRequired,\r\n    onBack: PropTypes.func.isRequired,\r\n    onSaved: PropTypes.func.isRequired,\r\n};","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nexport function CustomerStockTransferSummaryComposite({\r\n    tableData,\r\n    columnDetails,\r\n    pageSize,\r\n    exportRequired,\r\n    exportFileName,\r\n    columnPickerRequired,\r\n    columnGroupingRequired,\r\n    terminalsToShow,\r\n    selectionRequired,\r\n    onSelectionChange,\r\n    onRowClick,\r\n    parentComponent\r\n}) {\r\n    return (\r\n        <WijmoGridComposite\r\n            data={tableData}\r\n            columns={columnDetails}\r\n            rowsPerPage={pageSize}\r\n            exportRequired={exportRequired}\r\n            exportFileName={exportFileName}\r\n            columnPickerRequired={columnPickerRequired}\r\n            columnGroupingRequired={columnGroupingRequired}\r\n            terminalsToShow={terminalsToShow}\r\n            selectionRequired={selectionRequired}\r\n            onSelectionHandle={onSelectionChange}\r\n            onRowClick={onRowClick}\r\n            parentComponent={parentComponent}\r\n        ></WijmoGridComposite>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { CustomerStockTransferSummaryComposite } from \"../Summary/CustomerStockTransferSummaryComposite\";\r\nimport CustomerStockTransferDetailsComposite from \"../Details/CustomerStockTransferDetailsComposite\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport Error from \"../../Error\";\r\nimport { functionGroups, fnCustomerAgreement } from \"../../../JS/FunctionGroups\";\r\n\r\n\r\nclass CustomerStockTransferComposite extends Component {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n    selectedRow: {},\r\n    data: {},\r\n    isEnable: true,\r\n\r\n  };\r\n  componentName = \"CustomerStockTransferComponent\";\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnCustomerAgreement\r\n      );\r\n      this.setState({\r\n        operationsVisibilty,\r\n        selectedSealMaster:\r\n          this.props.userDetails.EntityResult.PrimarySealmaster,\r\n      });\r\n      this.getLookUpData();\r\n    } catch (error) {\r\n      console.log(\r\n        \"CustomerStockTransferComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n    // clear session storage on window refresh event\r\n    window.addEventListener(\"beforeunload\", () => Utilities.clearSessionStorage(this.componentName + \"GridState\"));\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    Utilities.clearSessionStorage(this.componentName + \"GridState\");\r\n    window.removeEventListener(\"beforeunload\", () => Utilities.clearSessionStorage(this.componentName + \"GridState\"));\r\n  }\r\n  getLookUpData() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=CustomerInventory\",\r\n        Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n      )\r\n        .then((response) => {\r\n          const result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let isEnable = true;\r\n            if (result.EntityResult.Enabled === \"False\") {\r\n              isEnable = false;\r\n            }\r\n            this.setState({ isEnable });\r\n            if (isEnable) {\r\n              this.GetCustomerStockTransferList(this.props.userDetails.EntityResult.PrimaryShareholder);\r\n            }\r\n          } else {\r\n            console.log(\"Error in getLookUpData: \", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"CustomerInventoryComposite: Error occurred on getLookUpData\", error);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"CustomerInventoryComposite: Error occurred on getLookUpData\", error);\r\n    }\r\n  }\r\n\r\n  GetCustomerStockTransferList() {\r\n    \r\n    try {\r\n      axios(\r\n        RestAPIs.GetCustomerStockTransferList,\r\n        Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            let data = result.EntityResult\r\n            if (Array.isArray(data.Table)) {\r\n              data.Table.forEach(function (customerstock) {\r\n                customerstock.CustomerAgreement_ToCustomerShareholderCode = customerstock.CustomerAgreement_ToCustomerShareholderCode + \"( \" + customerstock.RequestorShareHolderCode+\")\";\r\n                customerstock.CustomerAgreement_FromCustomerShareholderCode = customerstock.CustomerAgreement_FromCustomerShareholderCode + \"(\" + customerstock.LendorShareHolderCode+\")\";\r\n              })\r\n              this.setState({ data, isReadyToRender: true });\r\n            }\r\n          } else {\r\n            this.setState({ data: [], isReadyToRender: true });\r\n            console.log(\"Error in GetCustomerStockTransferList:\", result.ErrorList);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ data: [], isReadyToRender: true });\r\n          console.log(\"Error while getting CustomerStockTransferList:\", error);\r\n        });\r\n    } catch (err) {\r\n      console.log(\"Error while getting CustomerStockTransferList:\", err)\r\n    }\r\n  }\r\n  handleAdd = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: {},\r\n        data: {},\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"customertransferComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnCustomerAgreement\r\n        );\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            CustomerAgreement_TransferReferenceCode: data.Code,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"customertransferComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n  handleBack = () => {\r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnCustomerAgreement\r\n      );\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        isReadyToRender: false,\r\n      });\r\n      this.GetCustomerStockTransferList();\r\n    } catch (error) {\r\n      console.log(\"customertransferComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n  handleRowClick = (item) => {\r\n    \r\n    try {\r\n      var { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnCustomerAgreement\r\n      );\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: item,\r\n        selectedItems: [item],\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"customertransferComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isEnable ? (\r\n          <ErrorBoundary>\r\n            <TMUserActionsComposite\r\n              operationsVisibilty={this.state.operationsVisibilty}\r\n              breadcrumbItem={this.props.activeItem}\r\n              onAdd={this.handleAdd}\r\n              shrVisible={false}\r\n              deleteVisible={false}\r\n              handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n            ></TMUserActionsComposite>\r\n          </ErrorBoundary>\r\n        ) : \"\"\r\n        }\r\n        {this.state.isDetails === true ? (\r\n          <ErrorBoundary>\r\n            <CustomerStockTransferDetailsComposite\r\n              key=\"SealMasterDetails\"\r\n              selectedRow={this.state.selectedRow}\r\n              onBack={this.handleBack}\r\n              onSaved={this.savedEvent}\r\n            >\r\n\r\n            </CustomerStockTransferDetailsComposite>\r\n          </ErrorBoundary>\r\n        ) : this.state.isReadyToRender ? (\r\n          <ErrorBoundary>\r\n              <CustomerStockTransferSummaryComposite\r\n              tableData={this.state.data.Table}\r\n              columnDetails={this.state.data.Column}\r\n              pageSize={\r\n                this.props.userDetails.EntityResult.PageAttibutes\r\n                  .WebPortalListPageSize\r\n              }\r\n              exportRequired={true}\r\n              exportFileName=\"SealMasterList\"\r\n              columnPickerRequired={true}\r\n\r\n              terminalsToShow={\r\n                this.props.userDetails.EntityResult.PageAttibutes\r\n                  .NoOfTerminalsToShow\r\n              }\r\n              columnGroupingRequired={true}\r\n              onRowClick={this.handleRowClick}\r\n              parentComponent={this.componentName}\r\n              ></CustomerStockTransferSummaryComposite>\r\n          </ErrorBoundary>\r\n        ) : (\r\n              <>\r\n                {this.state.isEnable ? (\r\n                  <LoadingPage message=\"Loading\"></LoadingPage>\r\n                ) : (\r\n                  <Error errorMessage=\"CustomerInventoryFeatureNotEnabled\"></Error>\r\n                )}\r\n              </>\r\n        )}\r\n        <ErrorBoundary>\r\n          <ToastContainer\r\n            hideProgressBar={true}\r\n            closeOnClick={false}\r\n            closeButton={true}\r\n            newestOnTop={true}\r\n            position=\"bottom-right\"\r\n            toastClassName=\"toast-notification-wrap\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CustomerStockTransferComposite);\r\n\r\nCustomerStockTransferComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","WijmoGrid","flex","setFlex","translator","useTranslation","_getData","pageLength","CollectionView","sourceData","pageSize","setData","rowsPerPage","theGrid","React","theSearch","gridFilter","pagingComponent","colPicker","selectedRows","selectionRequired","selector","gridInitialized","grid","customizeFilterConditions","onRowClick","addEventListener","hostElement","e","ht","hitTest","target","closest","classList","includes","cellType","wjGrid","Cell","rowData","rows","row","dataItem","selectionMode","wjCore","select","Selector","itemChecked","s","singleSelection","filter","isSelected","current","loadash","forEach","onSelectionHandle","r","selectedRow","showCheckAll","column","rowHeaders","columns","headersVisibility","HeadersVisibility","All","useEffect","control","push","selectedItems","refresh","localStorage","getItem","parentComponent","gridState","JSON","parse","newFlex","col","matchedCol","colSetting","binding","visible","filterDefinition","collectionView","deferUpdate","sortDescriptions","clear","i","sortDesc","property","ascending","groupDescriptions","sessionStorage","gridSessionState","moveToPage","pageCount","pageIndex","text","searchText","columnPickerRequired","itemsSource","checkedMemberPath","displayMemberPath","lostFocus","addHandler","hidePopup","exportExcel","gridFlex","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","exportFileName","displayValues","columnDetail","Name","PopOver","terminalCodes","split","terminalsToShow","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","saveGridState","group","document","getElementsByClassName","chkbx","parentNode","sessionState","setItem","stringify","FlexGridFilter","operator","Operator","header","descending","apply","conditions","search","selectAll","and","or","cancel","stringOperators","op","EQ","NE","BW","EW","CT","NC","numberOperators","GT","LT","GE","LE","dateOperators","booleanOperators","getWidth","columnDetails","window","screen","width","WidthPx","parseInt","WidthPercentage","FlexGridSearch","class","ref","id","actionType","event","host","offsetHeight","focus","showPopup","PopupPosition","Below","preventDefault","colPickerClickHandler","exportRequired","fontSize","top","columnGroupingRequired","GroupPanel","FlexGrid","autoGenerateColumns","alternatingRowStep","autoRowHeights","initialized","virtualizationThreshold","onUpdatedView","FlexGridColumn","minWidth","isReadOnly","wordWrap","align","FlexGridCellTemplate","template","context","conditionalRowStyleCheck","conditionalRowStyles","ListBox","picker","initializedPicker","CollectionViewNavigator","headerFormat","byPage","cv","CustomerStockTransferDetails","modCustomerstockTransfer","CustomerAgreementItems","listOptions","handleCellDataEdit","handleDeleteAssociation","handleAddAssociation","handleRowSelectionChange","selectedAssociations","handleCustomEditDropDown","cellData","rowIndex","field","noResultsMessage","handleCustomEditTextBox","index","Code","LenderShareholderCode","onResultsMessage","LenderCustomerCode","LendercustomerOptions","RequestorShareholderCode","RequestorCustomerCode","RequestercustomerOptions","DataTable","selection","onSelectionChange","scrollable","scrollHeight","Column","editFieldType","editable","customEditRenderer","celldata","baseProductOptions","renderer","toLocaleString","decimalDisplayValues","quantityUOMOptions","customerOptions","CustomerStockTransferDetailsComposite","customerstockTransfer","emptyCustomerStockTransfer","CustomerStockTransferValidationDef","isReadyToRender","saveEnabled","getShareholders","showAuthenticationLayout","tempCustomerstockTransfer","handleChange","getCustomerList","newVal","err","handleAssociationSelectionChange","associations","newComp","BaseProductCode","Quantity","QuantityUOM","obj","com","cindex","handleReset","saveCustomerStockTransfer","TransferDate","fillDetails","CreateCustomerStockTransfer","handleSave","validateSave","IsWebPortalUser","handleAuthenticationClose","IsArchived","getCustomerStockTransfer","getBaseProducts","GetUOMList","componentWillReceiveProps","nextProps","CustomerAgreement_TransferReferenceCode","ShareholderList","shareholderType","Array","isArray","shareholderCustomers","shareholderCust","ShareholderCode","customerDestinationOptions","CustomerDestinationsList","keys","VOLUME","MASS","massUOM","CustomerstockTransferRow","selectedAttributeList","FunctionsList","functionGroups","fnCustomerAgreement","keyCode","KeyCodes","TransferReferenceCode","keyDataCode","modAssociations","AssociationDetails","association","notification","messageType","message","messageResultDetails","onSaved","Entity","keyFields","keyValues","isSuccess","errorMessage","TMDetailsHeader","entityCode","newEntityName","TMDetailsUserActions","handleBack","onBack","UserName","LoadingPage","CustomerStockTransferSummaryComposite","tableData","WijmoGridComposite","CustomerStockTransferComposite","isDetails","isDetailsModified","isEnable","componentName","componentWillUnmount","removeEventListener","handleAdd","savedEvent","saveType","toast","NotifyEvent","notificationMessage","autoClose","GetCustomerStockTransferList","handleRowClick","selectedSealMaster","PrimarySealmaster","getLookUpData","Enabled","PrimaryShareholder","Table","customerstock","CustomerAgreement_ToCustomerShareholderCode","RequestorShareHolderCode","CustomerAgreement_FromCustomerShareholderCode","LendorShareHolderCode","activeItem","PageAttibutes","WebPortalListPageSize","NoOfTerminalsToShow","Error","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","popUpContents","margin","List","view","modify","remove","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","transportationType","shareholderCode","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","shipmentCode","orderCode","receiptCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","bayCode","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","TransactionType","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks"],"sourceRoot":""}