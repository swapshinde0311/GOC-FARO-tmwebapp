{"version":3,"file":"static/js/3164.7fb59dad.chunk.js","mappings":"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","sources":["Components/UIBase/Details/MarineShipmentManualBaseDetails.jsx","Components/UIBase/Details/MarineShipmentManualTransactionsDetails.jsx","Components/UIBase/Details/MarineShipmentManualBaseProductDetails.jsx","Components/Composite/Details/MarineDispatchManualEntryDetailsComposite.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Input, Select, DatePicker } from \"@scuf/common\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nMarineShipmentManualBaseDetails.propTypes = {\r\n  railMarineFinishedProductInfo: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    compartmentSeqNoInVehicleList: PropTypes.array,\r\n    berthList: PropTypes.array,\r\n    bcuCodeList: PropTypes.array,\r\n    loadingArmList: PropTypes.array,\r\n    quantityUOMList: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  marineDispatchManualEntryEnabled: PropTypes.bool.isRequired,\r\n};\r\n\r\nMarineShipmentManualBaseDetails.defaultProps = {};\r\n\r\nexport function MarineShipmentManualBaseDetails({\r\n  railMarineFinishedProductInfo,\r\n  validationErrors,\r\n  listOptions,\r\n  onFieldChange,\r\n  onDateTextChange,\r\n  selectedCompartment,\r\n  marineDispatchManualEntryEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div>\r\n          <div className=\"detailsContainer\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder=\"Select\"\r\n                  value={\r\n                    railMarineFinishedProductInfo.CompartmentSeqNoInVehicle\r\n                  }\r\n                  label={t(\"MarineDispatchManualEntry_CompSeqNo\")}\r\n                  options={Utilities.transferListtoOptions(\r\n                    listOptions.compartmentSeqNoInVehicleList\r\n                  )}\r\n                  onChange={(data) =>\r\n                    onFieldChange(\"FP\", \"CompartmentSeqNoInVehicle\", data)\r\n                  }\r\n                  multiple={false}\r\n                  reserveSpace={false}\r\n                  search={false}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                  indicator=\"required\"\r\n                  error={t(validationErrors.CompartmentSeqNoInVehicle)}\r\n                  disabled={\r\n                    selectedCompartment.DispatchCompartmentStatus === null\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder=\"Select\"\r\n                  value={railMarineFinishedProductInfo.BayCode}\r\n                  label={t(\"MarineDispatchManualEntry_Bay\")}\r\n                  options={Utilities.transferListtoOptions(\r\n                    listOptions.berthList\r\n                  )}\r\n                  onChange={(data) => onFieldChange(\"FP\", \"BayCode\", data)}\r\n                  multiple={false}\r\n                  reserveSpace={false}\r\n                  search={false}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                  indicator=\"required\"\r\n                  error={t(validationErrors.BayCode)}\r\n                  disabled={!marineDispatchManualEntryEnabled}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder=\"Select\"\r\n                  value={railMarineFinishedProductInfo.BCUCode}\r\n                  label={t(\"BCU_Code\")}\r\n                  options={Utilities.transferListtoOptions(\r\n                    listOptions.bcuCodeList\r\n                  )}\r\n                  onChange={(data) => onFieldChange(\"FP\", \"BCUCode\", data)}\r\n                  multiple={false}\r\n                  reserveSpace={false}\r\n                  search={false}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                  indicator=\"required\"\r\n                  error={t(validationErrors.BCUCode)}\r\n                  disabled={!marineDispatchManualEntryEnabled}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder=\"Select\"\r\n                  value={railMarineFinishedProductInfo.LoadingArm}\r\n                  label={t(\"MarineDispatchManualEntry_LoadingArm\")}\r\n                  options={Utilities.transferListtoOptions(\r\n                    listOptions.loadingArmList\r\n                  )}\r\n                  onChange={(data) => onFieldChange(\"FP\", \"LoadingArm\", data)}\r\n                  multiple={false}\r\n                  reserveSpace={false}\r\n                  search={false}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                  indicator=\"required\"\r\n                  error={t(validationErrors.LoadingArm)}\r\n                  disabled={!marineDispatchManualEntryEnabled}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <DatePicker\r\n                  fluid\r\n                  value={new Date(railMarineFinishedProductInfo.StartTime)}\r\n                  label={t(\"MarineDispatchManualEntry_MandatoryLoadStartTime\")}\r\n                  disablePast={false}\r\n                  minuteStep={1}\r\n                  type=\"datetime\"\r\n                  indicator=\"required\"\r\n                  onChange={(data) => onFieldChange(\"FP\", \"StartTime\", data)}\r\n                  displayFormat={getCurrentDateFormat()}\r\n                  reserveSpace={false}\r\n                  disableFuture={true}\r\n                  onTextChange={(value, error) => {\r\n                    onDateTextChange(\"StartTime\", value, error);\r\n                  }}\r\n                  error={t(validationErrors.StartTime)}\r\n                  disabled={!marineDispatchManualEntryEnabled}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <DatePicker\r\n                  fluid\r\n                  value={new Date(railMarineFinishedProductInfo.EndTime)}\r\n                  label={t(\"MarineDispatchManualEntry_MandatoryLoadEndTime\")}\r\n                  disablePast={false}\r\n                  minuteStep={1}\r\n                  type=\"datetime\"\r\n                  indicator=\"required\"\r\n                  onChange={(data) => onFieldChange(\"FP\", \"EndTime\", data)}\r\n                  displayFormat={getCurrentDateFormat()}\r\n                  reserveSpace={false}\r\n                  disableFuture={true}\r\n                  onTextChange={(value, error) => {\r\n                    onDateTextChange(\"EndTime\", value, error);\r\n                  }}\r\n                  error={t(validationErrors.EndTime)}\r\n                  disabled={!marineDispatchManualEntryEnabled}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Input\r\n                  fluid\r\n                  value={railMarineFinishedProductInfo.FinishedProductCode}\r\n                  label={t(\"MarineDispatchManualEntry_FinishedProduct\")}\r\n                  disabled={true}\r\n                  onChange={(data) =>\r\n                    onFieldChange(\"FP\", \"FinishedProductCode\", data)\r\n                  }\r\n                  reserveSpace={false}\r\n                  error={t(validationErrors.FinishedProductCode)}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Select\r\n                  fluid\r\n                  placeholder=\"Select\"\r\n                  value={railMarineFinishedProductInfo.QuantityUOM}\r\n                  label={t(\"MarineDispatchManualEntry_QuantityUOM\")}\r\n                  options={Utilities.transferListtoOptions(\r\n                    listOptions.quantityUOMList\r\n                  )}\r\n                  onChange={(data) => onFieldChange(\"FP\", \"QuantityUOM\", data)}\r\n                  multiple={false}\r\n                  reserveSpace={false}\r\n                  search={false}\r\n                  noResultsMessage={t(\"noResultsMessage\")}\r\n                  indicator=\"required\"\r\n                  error={t(validationErrors.QuantityUOM)}\r\n                  disabled={!marineDispatchManualEntryEnabled}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Input\r\n                  fluid\r\n                  value={railMarineFinishedProductInfo.TransactionID}\r\n                  label={t(\"MarineDispatchManualEntry_TransactionNo\")}\r\n                  onChange={(data) =>\r\n                    onFieldChange(\"FP\", \"TransactionID\", data)\r\n                  }\r\n                  reserveSpace={false}\r\n                  error={t(validationErrors.TransactionID)}\r\n                  disabled={!marineDispatchManualEntryEnabled}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                <Input\r\n                  fluid\r\n                  value={railMarineFinishedProductInfo.Remarks}\r\n                  label={t(\"MarineDispatchManualEntry_Remarks\")}\r\n                  onChange={(data) => onFieldChange(\"FP\", \"Remarks\", data)}\r\n                  reserveSpace={false}\r\n                  error={t(validationErrors.Remarks)}\r\n                  disabled={!marineDispatchManualEntryEnabled}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Input, Select } from \"@scuf/common\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\n\r\n\r\nMarineShipmentManualTransactionsDetails.propTypes = {\r\n    railMarineFinishedProductInfo: PropTypes.object.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    listOptions: PropTypes.shape({\r\n        temperatureUOMs: PropTypes.array,\r\n        densityUOMs: PropTypes.array,\r\n        meterCodes: PropTypes.array,\r\n        massUOMs: PropTypes.array,\r\n        pressureUOMs: PropTypes.array,\r\n        calculatedValueUOMs: PropTypes.array,\r\n    }).isRequired,\r\n    validationErrors: PropTypes.object.isRequired\r\n};\r\n\r\nMarineShipmentManualTransactionsDetails.defaultProps = {\r\n\r\n};\r\n\r\nexport function MarineShipmentManualTransactionsDetails({\r\n    railMarineFinishedProductInfo,\r\n    onFieldChange,\r\n    listOptions,\r\n    validationErrors\r\n}) {\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"detailsContainer\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.GrossQuantity}\r\n                                label={t(\"GrossQuantity\")}\r\n                                indicator=\"required\"\r\n                                onChange={(data) => onFieldChange(\"FP\", \"GrossQuantity\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.GrossQuantity)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.NetQuantity}\r\n                                label={t(\"NetQuantity\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"NetQuantity\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.NetQuantity)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.Temperature}\r\n                                label={t(\"Temperature\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"Temperature\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.Temperature)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.TemperatureUOM}\r\n                                options={Utilities.transferListtoOptions(\r\n                                    listOptions.temperatureUOMs\r\n                                )}\r\n                                placeholder=\"Select\"\r\n                                label={t(\"MarineDispatchManualEntry_TemperatureUOM\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"TemperatureUOM\", data)}\r\n                                multiple={false}\r\n                                reserveSpace={false}\r\n                                search={false}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                error={t(validationErrors.TemperatureUOM)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.ProductDensity}\r\n                                label={t(\"ViewShipment_Density\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"ProductDensity\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.ProductDensity)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.ProductDensityUOM}\r\n                                options={Utilities.transferListtoOptions(\r\n                                    listOptions.densityUOMs\r\n                                )}\r\n                                placeholder=\"Select\"\r\n                                label={t(\"ViewShipment_DensityUOM\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"ProductDensityUOM\", data)}\r\n                                multiple={false}\r\n                                reserveSpace={false}\r\n                                search={false}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                error={t(validationErrors.ProductDensityUOM)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.ReferenceDensity}\r\n                                label={t(\"MarineDispatchManualEntry_ReferenceDensity\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"ReferenceDensity\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.ReferenceDensity)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.MeterCode}\r\n                                options={Utilities.transferListtoOptions(\r\n                                    listOptions.meterCodes\r\n                                )}\r\n                                placeholder=\"Select\"\r\n                                label={t(\"Meter_Code\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"MeterCode\", data)}\r\n                                multiple={false}\r\n                                reserveSpace={false}\r\n                                search={false}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                error={t(validationErrors.MeterCode)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.StartTotalizer}\r\n                                label={t(\"StartTotalizer\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"StartTotalizer\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.StartTotalizer)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.EndTotalizer}\r\n                                label={t(\"EndTotalizer\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"EndTotalizer\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.EndTotalizer)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.NetStartTotalizer}\r\n                                label={t(\"MarineDispatchManualEntry_NetStartTotalizer\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"NetStartTotalizer\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.NetStartTotalizer)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.NetEndTotalizer}\r\n                                label={t(\"MarineDispatchManualEntry_NetEndTotalizer\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"NetEndTotalizer\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.NetEndTotalizer)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.GrossMass}\r\n                                label={t(\"LoadingDetailsEntry_GrossMass\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"GrossMass\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.GrossMass)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.MassUOM}\r\n                                options={Utilities.transferListtoOptions(\r\n                                    listOptions.massUOMs\r\n                                )}\r\n                                placeholder=\"Select\"\r\n                                label={t(\"LoadingDetailsEntry_MassUom\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"MassUOM\", data)}\r\n                                multiple={false}\r\n                                reserveSpace={false}\r\n                                search={false}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                error={t(validationErrors.MassUOM)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.Pressure}\r\n                                label={t(\"Pressure\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"Pressure\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.Pressure)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.PressureUOM}\r\n                                options={Utilities.transferListtoOptions(\r\n                                    listOptions.pressureUOMs\r\n                                )}\r\n                                placeholder=\"Select\"\r\n                                label={t(\"LoadingDetailsEntry_PressureUOM\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"PressureUOM\", data)}\r\n                                multiple={false}\r\n                                reserveSpace={false}\r\n                                search={false}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                error={t(validationErrors.PressureUOM)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.CalculatedGross}\r\n                                label={t(\"LoadingDetails_CalculatedGross\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"CalculatedGross\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.CalculatedGross)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.CalculatedNet}\r\n                                label={t(\"LoadingDetails_CalculatedNet\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"CalculatedNet\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.CalculatedNet)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                value={railMarineFinishedProductInfo.CalculatedValueUOM}\r\n                                options={Utilities.transferListtoOptions(\r\n                                    listOptions.calculatedValueUOMs\r\n                                )}\r\n                                placeholder=\"Select\"\r\n                                label={t(\"LoadingDetails_CalculatedValueUOM\")}\r\n                                onChange={(data) => onFieldChange(\"FP\", \"CalculatedValueUOM\", data)}\r\n                                multiple={false}\r\n                                reserveSpace={false}\r\n                                search={false}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                error={t(validationErrors.CalculatedValueUOM)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport {Accordion, Input, Select} from \"@scuf/common\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport {AttributeDetails} from \"./AttributeDetails\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\n\r\nMarineShipmentManualBaseProductDetails.propTypes = {\r\n    railMarineBaseProductInfo: PropTypes.object.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    listOptions: PropTypes.shape({\r\n        temperatureUOMs: PropTypes.array,\r\n        densityUOMs: PropTypes.array,\r\n        meterCodes: PropTypes.array,\r\n        massUOMs: PropTypes.array,\r\n        pressureUOMs: PropTypes.array,\r\n        calculatedValueUOMs: PropTypes.array,\r\n        tankList: PropTypes.array,\r\n    }).isRequired,\r\n    validationErrors: PropTypes.object.isRequired,\r\n    handleAttributeCellDataEdit: PropTypes.func.isRequired,\r\n    isEnterpriseNode: PropTypes.bool.isRequired,\r\n};\r\n\r\nMarineShipmentManualBaseProductDetails.defaultProps = {\r\n\r\n};\r\n\r\nexport function MarineShipmentManualBaseProductDetails({\r\n    railMarineBaseProductInfo,\r\n    onFieldChange,\r\n    listOptions,\r\n    code,\r\n    selectedAttributeList,\r\n    handleAttributeCellDataEdit,\r\n    attributeValidationErrors,\r\n    isEnterpriseNode,\r\n    validationErrors\r\n}) {\r\n    const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n        let attributeValidation = [];\r\n        attributeValidation = attributeValidationErrors.find(\r\n            (selectedAttribute) => {\r\n                return selectedAttribute.TerminalCode === terminal;\r\n            }\r\n        );\r\n        return attributeValidation.attributeValidationErrors;\r\n    };\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"detailsContainer\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.GrossQuantity}\r\n                                label={t(\"GrossQuantity\")}\r\n                                indicator=\"required\"\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"GrossQuantity\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.GrossQuantity)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.NetQuantity}\r\n                                label={t(\"NetQuantity\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"NetQuantity\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.NetQuantity)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.Temperature}\r\n                                label={t(\"Temperature\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"Temperature\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.Temperature)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.TemperatureUOM}\r\n                                options={Utilities.transferListtoOptions(\r\n                                    listOptions.temperatureUOMs\r\n                                )}\r\n                                placeholder=\"Select\"\r\n                                label={t(\"MarineDispatchManualEntry_TemperatureUOM\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"TemperatureUOM\", data)}\r\n                                multiple={false}\r\n                                reserveSpace={false}\r\n                                search={false}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                error={t(validationErrors.TemperatureUOM)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.ProductDensity}\r\n                                label={t(\"ViewShipment_Density\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"ProductDensity\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.ProductDensity)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.ProductDensityUOM}\r\n                                options={Utilities.transferListtoOptions(\r\n                                    listOptions.densityUOMs\r\n                                )}\r\n                                placeholder=\"Select\"\r\n                                label={t(\"ViewShipment_DensityUOM\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"ProductDensityUOM\", data)}\r\n                                multiple={false}\r\n                                reserveSpace={false}\r\n                                search={false}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                error={t(validationErrors.ProductDensityUOM)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.ReferenceDensity}\r\n                                label={t(\"MarineDispatchManualEntry_ReferenceDensity\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"ReferenceDensity\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.ReferenceDensity)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.MeterCode}\r\n                                options={Utilities.transferListtoOptions(\r\n                                    listOptions.meterCodes\r\n                                )}\r\n                                placeholder=\"Select\"\r\n                                label={t(\"Meter_Code\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"MeterCode\", data)}\r\n                                multiple={false}\r\n                                reserveSpace={false}\r\n                                search={false}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                error={t(validationErrors.MeterCode)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.StartTotalizer}\r\n                                label={t(\"StartTotalizer\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"StartTotalizer\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.StartTotalizer)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.EndTotalizer}\r\n                                label={t(\"EndTotalizer\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"EndTotalizer\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.EndTotalizer)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.NetStartTotalizer}\r\n                                label={t(\"MarineDispatchManualEntry_NetStartTotalizer\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"NetStartTotalizer\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.NetStartTotalizer)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.NetEndTotalizer}\r\n                                label={t(\"MarineDispatchManualEntry_NetEndTotalizer\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"NetEndTotalizer\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.NetEndTotalizer)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.GrossMass}\r\n                                label={t(\"LoadingDetailsEntry_GrossMass\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"GrossMass\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.GrossMass)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.MassUOM}\r\n                                options={Utilities.transferListtoOptions(\r\n                                    listOptions.massUOMs\r\n                                )}\r\n                                placeholder=\"Select\"\r\n                                label={t(\"LoadingDetailsEntry_MassUom\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"MassUOM\", data)}\r\n                                multiple={false}\r\n                                reserveSpace={false}\r\n                                search={false}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                error={t(validationErrors.MassUOM)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.TankCode}\r\n                                options={Utilities.transferListtoOptions(\r\n                                    listOptions.tankList\r\n                                )}\r\n                                placeholder=\"Select\"\r\n                                label={t(\"TankCode\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"TankCode\", data)}\r\n                                multiple={false}\r\n                                reserveSpace={false}\r\n                                search={false}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                error={t(validationErrors.TankCode)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.Pressure}\r\n                                label={t(\"Pressure\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"Pressure\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.Pressure)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.PressureUOM}\r\n                                options={Utilities.transferListtoOptions(\r\n                                    listOptions.pressureUOMs\r\n                                )}\r\n                                placeholder=\"Select\"\r\n                                label={t(\"LoadingDetailsEntry_PressureUOM\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"PressureUOM\", data)}\r\n                                multiple={false}\r\n                                reserveSpace={false}\r\n                                search={false}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                error={t(validationErrors.PressureUOM)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.TankStartGrossQuantity}\r\n                                label={t(\"LoadingDetailsEntry_TankStartGrossQuantity\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"TankStartGrossQuantity\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.TankStartGrossQuantity)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.TankEndGrossQuantity}\r\n                                label={t(\"LoadingDetailsEntry_TankEndGrossQuantity\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"TankEndGrossQuantity\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.TankEndGrossQuantity)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.TankStartNetQuantity}\r\n                                label={t(\"LoadingDetailsEntry_TankStartNetQuantity\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"TankStartNetQuantity\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.TankStartNetQuantity)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.TankEndNetQuantity}\r\n                                label={t(\"LoadingDetailsEntry_TankEndNetQuantity\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"TankEndNetQuantity\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.TankEndNetQuantity)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.TankStartGrossMass}\r\n                                label={t(\"LoadingDetailsEntry_TankStartGrossMass\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"TankStartGrossMass\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.TankStartMass)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.TankEndGrossMass}\r\n                                label={t(\"LoadingDetailsEntry_TankEndGrossMass\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"TankEndGrossMass\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.TankEndMass)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.TankStartPressure}\r\n                                label={t(\"LoadingDetailsEntry_TankStartPressure\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"TankStartPressure\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.TankStartPressure)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.TankEndPressure}\r\n                                label={t(\"LoadingDetailsEntry_TankEndPressure\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"TankEndPressure\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.TankEndPressure)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.CalculatedGross}\r\n                                label={t(\"LoadingDetails_CalculatedGross\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"CalculatedGross\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.CalculatedGross)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.CalculatedNet}\r\n                                label={t(\"LoadingDetails_CalculatedNet\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"CalculatedNet\", data)}\r\n                                reserveSpace={false}\r\n                                error={t(validationErrors.CalculatedNet)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                value={railMarineBaseProductInfo.CalculatedValueUOM}\r\n                                options={Utilities.transferListtoOptions(\r\n                                    listOptions.calculatedValueUOMs\r\n                                )}\r\n                                placeholder=\"Select\"\r\n                                label={t(\"LoadingDetails_CalculatedValueUOM\")}\r\n                                onChange={(data) => onFieldChange(\"BaseProduct\", \"CalculatedValueUOM\", data)}\r\n                                multiple={false}\r\n                                reserveSpace={false}\r\n                                search={false}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                                error={t(validationErrors.CalculatedValueUOM)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {selectedAttributeList.length > 0\r\n                        ? selectedAttributeList.map((attire) => (\r\n                            <ErrorBoundary>\r\n                                <Accordion>\r\n                                    <Accordion.Content\r\n                                        className=\"attributeAccordian\"\r\n                                        title={\r\n                                            isEnterpriseNode\r\n                                                ? attire.TerminalCode + \" - \" + t(\"Attributes_Header\")\r\n                                                : t(\"Attributes_Header\")\r\n                                        }\r\n                                    >\r\n                                        <AttributeDetails\r\n                                            selectedAttributeList={attire.attributeMetaDataList}\r\n                                            handleCellDataEdit={(attribute, value) => {handleAttributeCellDataEdit(attribute,value,code)}}\r\n                                            attributeValidationErrors={handleValidationErrorFilter(\r\n                                                attributeValidationErrors,\r\n                                                attire.TerminalCode\r\n                                            )}\r\n                                        ></AttributeDetails>\r\n                                    </Accordion.Content>\r\n                                </Accordion>\r\n                            </ErrorBoundary>\r\n                        ))\r\n                        : null}\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport { toast } from \"react-toastify\";\r\nimport { MarineShipmentManualBaseDetails } from \"../../UIBase/Details/MarineShipmentManualBaseDetails\";\r\nimport { Accordion, Tab } from \"@scuf/common\";\r\nimport { MarineShipmentManualTransactionsDetails } from \"../../UIBase/Details/MarineShipmentManualTransactionsDetails\";\r\nimport { MarineShipmentManualBaseProductDetails } from \"../../UIBase/Details/MarineShipmentManualBaseProductDetails\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport lodash from \"lodash\";\r\nimport {\r\n  emptyMarineDispatchTransactionCommonInfo,\r\n  emptyRailMarineTransactionBPInfo,\r\n} from \"../../../JS/DefaultEntities\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport {\r\n  marineShipmentManualEntryBPValidationDef,\r\n  marineShipmentManualEntryValidationDef,\r\n} from \"../../../JS/ValidationDef\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as RestApis from \"../../../JS/RestApis\";\r\nimport {\r\n  marineLoadingDetailsAdditiveAttributeEntity,\r\n  marineLoadingDetailsBPAttributeEntity,\r\n  marineManualEntryFPAttributeEntity,\r\n} from \"../../../JS/AttributeEntity\";\r\nimport { AttributeDetails } from \"../../UIBase/Details/AttributeDetails\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { MarineDispatchCompartmentStatus } from \"../../../JS/Constants\";\r\nimport { functionGroups, fnMarineShipmentByCompartment, fnViewMarineLoadingDetails } from \"../../../JS/FunctionGroups\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass MarineDispatchManualEntryDetailsComposite extends Component {\r\n  state = {\r\n    railMarineFinishedProductInfo: lodash.cloneDeep(\r\n      emptyMarineDispatchTransactionCommonInfo\r\n    ),\r\n    railMarineBaseProductInfo: [],\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      marineShipmentManualEntryValidationDef\r\n    ),\r\n    validationErrorsForBP: [],\r\n    selectedCompartment: {},\r\n    compartmentSeqNoInVehicleList: [],\r\n    marineCompartmentDetails: [],\r\n    berthList: [],\r\n    bcuCodeList: [],\r\n    loadingArmList: [],\r\n    quantityUOMList: [],\r\n    densityUOMList: [],\r\n    temperatureUOMList: [],\r\n    massUOMList: [],\r\n    pressureUOMList: [],\r\n    calculatedValueUOMList: [],\r\n    meterCodeList: [],\r\n    tankList: [],\r\n    productList: [],\r\n    activeIndex: 0,\r\n    manualEntrySaveEnable: false,\r\n    attributeMetaDataList: [],\r\n    attributeValidationErrors: [],\r\n    BPattributeValidationErrors: [],\r\n    compartmentAttributeMetaDataList: [],\r\n    baseProductAttributeMetaDataList: [],\r\n    selectedAttributeList: [],\r\n    BPselectedAttributeList: [],\r\n    attribute: [],\r\n    marineDispatchManualEntryEnabled: false,\r\n\r\n    showAuthenticationLayout: false,\r\n    tempLoadingDetails: {},\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setDefaultValues();\r\n    this.getMarineCompartmentDetails();\r\n    this.getBerthList();\r\n    this.getQuantityUOMList();\r\n    this.getDensityUOMList();\r\n    this.getTemperatureUOMList();\r\n    this.getMassUOMList();\r\n    this.getPressureUOMList();\r\n    this.getCalculatedValueUOMList();\r\n    this.GetMeterList();\r\n    this.setState({\r\n      manualEntrySaveEnable: Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.modify,\r\n        fnMarineShipmentByCompartment)\r\n    })\r\n  }\r\n\r\n  setDefaultValues() {\r\n    emptyMarineDispatchTransactionCommonInfo.StartTime = new Date();\r\n    emptyMarineDispatchTransactionCommonInfo.EndTime = new Date();\r\n    emptyMarineDispatchTransactionCommonInfo.QuantityUOM = this.props.QuantityUOM; // to display Ship Qty UOM, in place MOT UOM\r\n    this.setState({ railMarineFinishedProductInfo: lodash.cloneDeep(emptyMarineDispatchTransactionCommonInfo) });\r\n\r\n  }\r\n\r\n  getMarineDispatchManualEntryEnabled(selectedCompartment) {\r\n    let DispatchCompartmentStatusKeys = Object.keys(\r\n      MarineDispatchCompartmentStatus\r\n    );\r\n    let DispatchCompartmentStatus = \"\";\r\n    for (const key of DispatchCompartmentStatusKeys) {\r\n      if (\r\n        MarineDispatchCompartmentStatus[key] ===\r\n        selectedCompartment.DispatchCompartmentStatus\r\n      ) {\r\n        DispatchCompartmentStatus = key;\r\n        break;\r\n      }\r\n    }\r\n    axios(\r\n      RestApis.GetMarineDispatchManualEntryEnabled +\r\n      \"?ShareholderCode=\" +\r\n      selectedCompartment.ShareholderCode +\r\n      \"&DispatchStatus=\" +\r\n      this.props.DispatchStatus +\r\n      \"&DispatchCompartmentStatus=\" +\r\n      DispatchCompartmentStatus,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let { marineDispatchManualEntryEnabled } = this.state;\r\n          if (result.EntityResult === \"TRUE\") {\r\n            marineDispatchManualEntryEnabled = true;\r\n          }\r\n          else {\r\n            marineDispatchManualEntryEnabled = false;\r\n          }\r\n          this.setState({ marineDispatchManualEntryEnabled });\r\n        } else {\r\n          this.setState({ marineDispatchManualEntryEnabled: false });\r\n          console.log(\r\n            \"Error in getMarineDispatchManualEntryEnabled:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Error while getting Marine Dispatch ManualEntry Enabled:\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  initializeAttributeForBP() {\r\n    let BPCode = Object.keys(this.state.railMarineBaseProductInfo);\r\n    let { BPselectedAttributeList } = this.state;\r\n    BPCode.forEach((code) => {\r\n      BPselectedAttributeList[code] = [];\r\n    });\r\n    this.setState({ BPselectedAttributeList });\r\n  }\r\n\r\n  getAttributes() {\r\n    try {\r\n      axios(\r\n        RestApis.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [\r\n            marineManualEntryFPAttributeEntity,\r\n            marineLoadingDetailsAdditiveAttributeEntity,\r\n            marineLoadingDetailsBPAttributeEntity,\r\n          ],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let { BPattributeValidationErrors } = this.state;\r\n          let BPCode = Object.keys(this.state.railMarineBaseProductInfo);\r\n          BPCode.forEach((code) => {\r\n            BPattributeValidationErrors[code] =\r\n              Utilities.getAttributeInitialValidationErrors(\r\n                result.EntityResult.marineLoadingDetailsBP\r\n              );\r\n          });\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.marineLoadingDetailsFP\r\n              ),\r\n              attributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.marineLoadingDetailsFP\r\n                ),\r\n              compartmentAttributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.marineLoadingDetailsAdditive\r\n              ),\r\n              baseProductAttributeMetaDataList: lodash.cloneDeep(\r\n                result.EntityResult.marineLoadingDetailsBP\r\n              ),\r\n              BPattributeValidationErrors,\r\n            },\r\n            () => {\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                if (this.state.baseProductAttributeMetaDataList.length > 0) {\r\n                  this.baseProductSelectionChange([\r\n                    this.state.baseProductAttributeMetaDataList[0].TerminalCode,\r\n                  ]);\r\n                }\r\n                if (this.state.attributeMetaDataList.length > 0) {\r\n                  this.terminalSelectionChange([\r\n                    this.state.attributeMetaDataList[0].TerminalCode,\r\n                  ]);\r\n                }\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          console.log(\"Failed to get Attributes\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getting Attributes:\", error);\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      var baseProductAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.baseProductAttributeMetaDataList\r\n      );\r\n      if (Array.isArray(attributeMetaDataList) && attributeMetaDataList.length > 0) {\r\n        this.terminalSelectionChange([attributeMetaDataList[0].TerminalCode]);\r\n      }\r\n      if (Array.isArray(baseProductAttributeMetaDataList) && baseProductAttributeMetaDataList.length > 0) {\r\n        this.baseProductSelectionChange([\r\n          baseProductAttributeMetaDataList[0].TerminalCode,\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var selectedAttributeList = [];\r\n\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      selectedAttributeList = lodash.cloneDeep(\r\n        this.state.selectedAttributeList\r\n      );\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n      var railMarineFinishedProductInfo = lodash.cloneDeep(\r\n        this.state.railMarineFinishedProductInfo\r\n      );\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = selectedAttributeList.find((selectedAttribute) => {\r\n          return selectedAttribute.TerminalCode === terminal;\r\n        });\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.forEach(function (attributeMetaData) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              var Attributevalue =\r\n                railMarineFinishedProductInfo.Attributes.find(\r\n                  (marineDispatchAttribute) => {\r\n                    return marineDispatchAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n              if (Attributevalue !== undefined) {\r\n                attributeMetaData.attributeMetaDataList.forEach(function (\r\n                  attributeMetaData\r\n                ) {\r\n                  var valueAttribute = Attributevalue.ListOfAttributeData.find(\r\n                    (x) => {\r\n                      return x.AttributeCode === attributeMetaData.Code;\r\n                    }\r\n                  );\r\n                  if (valueAttribute !== undefined)\r\n                    attributeMetaData.DefaultValue =\r\n                      valueAttribute.AttributeValue;\r\n                });\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      selectedAttributeList = [];\r\n      selectedAttributeList = attributesTerminalsList;\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n      this.setState({ selectedAttributeList, attributeValidationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  baseProductSelectionChange(selectedTerminals) {\r\n    let BPCode = Object.keys(this.state.railMarineBaseProductInfo);\r\n    BPCode.forEach((code) => {\r\n      try {\r\n        let attributesTerminalsList = [];\r\n        var baseProductAttributeMetaDataList = [];\r\n        var BPselectedAttributeList = [];\r\n        baseProductAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.baseProductAttributeMetaDataList\r\n        );\r\n        BPselectedAttributeList = lodash.cloneDeep(\r\n          this.state.BPselectedAttributeList[code]\r\n        );\r\n        const BPattributeValidationErrors = lodash.cloneDeep(\r\n          this.state.BPattributeValidationErrors[code]\r\n        );\r\n        var railMarineBaseProductInfo = lodash.cloneDeep(\r\n          this.state.railMarineBaseProductInfo[code]\r\n        );\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = BPselectedAttributeList.find(\r\n            (selectedAttributeBP) => {\r\n              return selectedAttributeBP.TerminalCode === terminal;\r\n            }\r\n          );\r\n          if (existitem === undefined) {\r\n            baseProductAttributeMetaDataList.forEach(function (\r\n              attributeMetaData\r\n            ) {\r\n              if (attributeMetaData.TerminalCode === terminal) {\r\n                var Attributevalue = railMarineBaseProductInfo.Attributes.find(\r\n                  (BPAttribute) => {\r\n                    return BPAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.baseProductAttributeMetaDataList.forEach(\r\n                    function (attributeMetaData) {\r\n                      var valueAttribute =\r\n                        Attributevalue.ListOfAttributeData.find((x) => {\r\n                          return x.AttributeCode === attributeMetaData.Code;\r\n                        });\r\n                      if (valueAttribute !== undefined)\r\n                        attributeMetaData.DefaultValue =\r\n                          valueAttribute.AttributeValue;\r\n                    }\r\n                  );\r\n                }\r\n                attributesTerminalsList.push(attributeMetaData);\r\n              }\r\n            });\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n        BPselectedAttributeList = [];\r\n        BPselectedAttributeList = attributesTerminalsList;\r\n        BPattributeValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(\r\n              attributeValidation.BPattributeValidationErrors\r\n            ).forEach(\r\n              (key) =>\r\n                (attributeValidation.BPattributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n        let newSelectedAttributeBPList = this.state.BPselectedAttributeList;\r\n        let newAttributeValidationBPErrors =\r\n          this.state.BPattributeValidationErrors;\r\n        newSelectedAttributeBPList[code] = BPselectedAttributeList;\r\n        newAttributeValidationBPErrors[code] = BPattributeValidationErrors;\r\n        this.setState({\r\n          BPselectedAttributeList: newSelectedAttributeBPList,\r\n          BPattributeValidationErrors: newAttributeValidationBPErrors,\r\n        });\r\n      } catch (error) {\r\n        console.log(\r\n          \"MarineReceiptManualEntryDetails:Error occured on terminalSelectionChangeBP\",\r\n          error\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  handleAttributeCellDataEdit = (attribute, value) => {\r\n    try {\r\n      const attributeValidationErrors = lodash.cloneDeep(\r\n        this.state.attributeValidationErrors\r\n      );\r\n\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ attributeValidationErrors });\r\n\r\n      if (\r\n        attribute.DataType === Constants.AttributeTypes.INT ||\r\n        attribute.DataType === Constants.AttributeTypes.LONG ||\r\n        attribute.DataType === Constants.AttributeTypes.FLOAT ||\r\n        attribute.DataType === Constants.AttributeTypes.DOUBLE\r\n      ) {\r\n        value = Utilities.convertStringtoDecimal(value);\r\n      }\r\n      attribute.DefaultValue = value;\r\n      this.setState({\r\n        attribute: attribute,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on handleAttributeCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleBPAttributeCellDataEdit = (attribute, value, code) => {\r\n    try {\r\n      const BPattributeValidationErrors = lodash.cloneDeep(\r\n        this.state.BPattributeValidationErrors\r\n      );\r\n\r\n      BPattributeValidationErrors[code].forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ BPattributeValidationErrors });\r\n\r\n      if (\r\n        attribute.DataType === Constants.AttributeTypes.INT ||\r\n        attribute.DataType === Constants.AttributeTypes.LONG ||\r\n        attribute.DataType === Constants.AttributeTypes.FLOAT ||\r\n        attribute.DataType === Constants.AttributeTypes.DOUBLE\r\n      ) {\r\n        value = Utilities.convertStringtoDecimal(value);\r\n      }\r\n      attribute.DefaultValue = value;\r\n      this.setState({\r\n        attribute: attribute,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptManualEntryDetails:Error occured on handleBPAttributeCellDataEdit\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  fillAttributeDetails() {\r\n    try {\r\n      let attributeList = lodash.cloneDeep(this.state.selectedAttributeList);\r\n      let railMarineFinishedProductInfo = lodash.cloneDeep(\r\n        this.state.railMarineFinishedProductInfo\r\n      );\r\n      railMarineFinishedProductInfo.Attributes = [];\r\n      attributeList.forEach((comp) => {\r\n        let attribute = {\r\n          ListOfAttributeData: [],\r\n        };\r\n        attribute.TerminalCode = comp.TerminalCode;\r\n        comp.attributeMetaDataList.forEach((det) => {\r\n          attribute.ListOfAttributeData.push({\r\n            AttributeCode: det.Code,\r\n            AttributeValue: det.DefaultValue,\r\n          });\r\n        });\r\n        railMarineFinishedProductInfo.Attributes.push(attribute);\r\n      });\r\n\r\n      this.setState({ railMarineFinishedProductInfo });\r\n      return railMarineFinishedProductInfo;\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  fillBPAttributeDetails(railMarineBaseProductInfo) {\r\n    let BPCode = Object.keys(railMarineBaseProductInfo);\r\n    BPCode.forEach((code) => {\r\n      try {\r\n        let attributeList = lodash.cloneDeep(\r\n          this.state.BPselectedAttributeList[code]\r\n        );\r\n        railMarineBaseProductInfo[code].Attributes = [];\r\n        attributeList.forEach((comp) => {\r\n          let attribute = {\r\n            ListOfAttributeData: [],\r\n          };\r\n          attribute.TerminalCode = comp.TerminalCode;\r\n          comp.attributeMetaDataList.forEach((det) => {\r\n            attribute.ListOfAttributeData.push({\r\n              AttributeCode: det.Code,\r\n              AttributeValue: det.DefaultValue,\r\n            });\r\n          });\r\n          railMarineBaseProductInfo[code].Attributes.push(attribute);\r\n        });\r\n        this.setState({ railMarineBaseProductInfo });\r\n        return railMarineBaseProductInfo;\r\n      } catch (error) {\r\n        console.log(\r\n          \"MarineReceiptManualEntryDetails:Error occured on fillFPAttributeDetails\",\r\n          error\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  getPartialMarineDispatchData() {\r\n    var keyCode = [\r\n      {\r\n        key: \"MarineDispatchCode\",\r\n        value: this.props.dispatchCode,\r\n      },\r\n      {\r\n        key: \"CompartmentSeqNoInVehicle\",\r\n        value: this.state.selectedCompartment.CompartmentSeqNoInVehicle,\r\n      },\r\n    ];\r\n    var obj = {\r\n      ShareHolderCode: this.state.selectedCompartment.ShareholderCode,\r\n      keyDataCode: KeyCodes.marineDispatchCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestApis.GetPartialMarineDispatchData,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var productList = [];\r\n          var validationErrorsForBPList = [];\r\n          var railMarineBaseProductInfoList = [];\r\n          list.forEach(\r\n            (item) => {\r\n              productList.push(item);\r\n              validationErrorsForBPList.push(\r\n                Utilities.getInitialValidationErrors(\r\n                  marineShipmentManualEntryBPValidationDef\r\n                )\r\n              );\r\n              railMarineBaseProductInfoList.push(\r\n                lodash.cloneDeep(emptyRailMarineTransactionBPInfo)\r\n              );\r\n            },\r\n            () => { }\r\n          );\r\n          this.setState(\r\n            {\r\n              productList,\r\n              validationErrorsForBP: validationErrorsForBPList,\r\n              railMarineBaseProductInfo: railMarineBaseProductInfoList,\r\n            },\r\n            () => {\r\n              this.initializeAttributeForBP();\r\n              this.getAttributes();\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getPartialMarineDispatchData:\", error);\r\n      });\r\n  }\r\n\r\n  getBerthList() {\r\n    axios(\r\n      RestApis.GetMarineBerthList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var berthList = [];\r\n          list.forEach((item) => {\r\n            berthList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            berthList: berthList,\r\n          });\r\n        } else {\r\n          console.log(\"Error in getBerthList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getBerthList:\", error);\r\n      });\r\n  }\r\n\r\n  getBCUListByBerth() {\r\n    const railMarineFinishedProductInfo = lodash.cloneDeep(\r\n      this.state.railMarineFinishedProductInfo\r\n    );\r\n    axios(\r\n      RestApis.GetMarineBCUListByBerth +\r\n      \"?Berth=\" +\r\n      railMarineFinishedProductInfo.BayCode,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult;\r\n          var bcuCodeList = [];\r\n          list.forEach((item) => {\r\n            bcuCodeList.push(item.DeviceCode);\r\n          });\r\n          this.setState({\r\n            bcuCodeList: bcuCodeList,\r\n          });\r\n          if (bcuCodeList.length === 1) {\r\n            railMarineFinishedProductInfo.BCUCode = bcuCodeList[0];\r\n            this.setState({\r\n              railMarineFinishedProductInfo\r\n            });\r\n            this.getBCUDetails(bcuCodeList[0]);\r\n            this.GetLoadingArmListByBCU()\r\n          }\r\n        } else {\r\n          console.log(\"Error in getBCUListByBerth:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getBCUListByBerth:\", error);\r\n      });\r\n  }\r\n\r\n  GetLoadingArmListByBCU() {\r\n    const railMarineFinishedProductInfo = lodash.cloneDeep(\r\n      this.state.railMarineFinishedProductInfo\r\n    );\r\n    axios(\r\n      RestApis.GetMarineLoadingArmListByBCU +\r\n      \"?BCUCode=\" +\r\n      railMarineFinishedProductInfo.BCUCode,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var loadingArmList = [];\r\n          list.forEach((item) => {\r\n            loadingArmList.push(item.LoadingArmCode);\r\n          });\r\n          this.setState({\r\n            loadingArmList: loadingArmList,\r\n          });\r\n          if (loadingArmList.length === 1) {\r\n            railMarineFinishedProductInfo.LoadingArm = loadingArmList[0];\r\n            this.setState({\r\n              railMarineFinishedProductInfo\r\n            });\r\n\r\n            this.GetMetersForLA();\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetLoadingArmListByBCU:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while GetLoadingArmListByBCU:\", error);\r\n      });\r\n  }\r\n\r\n\r\n  getBCUDetails(deviceCode) {\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.bcuCode,\r\n          value: deviceCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.bcuCode,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestApis.GetBCUDevice,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let bcu = result.EntityResult;\r\n\r\n          let railMarineFinishedProductInfo = lodash.cloneDeep(this.state.railMarineFinishedProductInfo);\r\n          railMarineFinishedProductInfo.TemperatureUOM = bcu.TemperatureUOM;\r\n          railMarineFinishedProductInfo.ProductDensityUOM = bcu.DensityUOM;\r\n\r\n          let railMarineBaseProductInfo = lodash.cloneDeep(this.state.railMarineBaseProductInfo);\r\n          railMarineBaseProductInfo.map(item => { item.TemperatureUOM = bcu.TemperatureUOM; item.ProductDensityUOM = bcu.DensityUOM; })\r\n\r\n\r\n          this.setState({\r\n            railMarineFinishedProductInfo, railMarineBaseProductInfo\r\n          });\r\n\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TruckShipmentManualEntryDetailsComposite:Error while getting getBCUDeviceDetails\"\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  GetMetersForLA() {\r\n\r\n    const railMarineFinishedProductInfo = lodash.cloneDeep(\r\n      this.state.railMarineFinishedProductInfo\r\n    );\r\n    let bcuCode = '';\r\n    let loadingArmCode = ''\r\n    bcuCode = railMarineFinishedProductInfo.BCUCode;\r\n    loadingArmCode = railMarineFinishedProductInfo.LoadingArm;\r\n    if (bcuCode === '' || loadingArmCode === '')\r\n      return;\r\n\r\n    try {\r\n      var keyCode = [\r\n        {\r\n          key: KeyCodes.siteViewType,\r\n          value: Constants.siteViewType.MARINE_BCUVIEW,\r\n        },\r\n        {\r\n          key: KeyCodes.bcuCode,\r\n          value: bcuCode,\r\n        },\r\n        {\r\n          key: KeyCodes.terminalCode,\r\n          value: this.props.ActualTerminalCode,\r\n        },\r\n      ];\r\n      var obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: KeyCodes.siteViewType,\r\n        KeyCodes: keyCode,\r\n      };\r\n      axios(\r\n        RestApis.GetBCUViewTree,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          obj,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            Array.isArray(result.EntityResult) &&\r\n            result.EntityResult.length > 0\r\n          ) {\r\n\r\n            let loadingArm = result.EntityResult[0].AssociatedArmsList.find(larm => larm.Code === loadingArmCode);\r\n            if (loadingArm !== null) {\r\n              let mainLineMeters = [];\r\n\r\n              mainLineMeters = loadingArm.AssociatedMeterList.find(meter => meter.MeterLineType === \"MAINLINE\");\r\n\r\n              let bpMeterCode = '';\r\n              if (mainLineMeters !== null && mainLineMeters !== \"\") {\r\n                let meterCodeList = [];\r\n                mainLineMeters.MeterList.forEach(element => {\r\n                  meterCodeList.push(element.Code);\r\n                });\r\n                this.setState({\r\n                  meterCodeList: meterCodeList,\r\n                });\r\n\r\n                if (mainLineMeters.MeterList.length === 1) {\r\n                  bpMeterCode = mainLineMeters.MeterList[0].Code;\r\n                }\r\n              }\r\n\r\n              if (bpMeterCode !== '') {\r\n                let railMarineFinishedProductInfo = lodash.cloneDeep(this.state.railMarineFinishedProductInfo);\r\n                railMarineFinishedProductInfo.MeterCode = bpMeterCode;\r\n                let railMarineBaseProductInfo = lodash.cloneDeep(this.state.railMarineBaseProductInfo);\r\n                railMarineBaseProductInfo.map(item => { item.MeterCode = bpMeterCode; })\r\n                this.setState({\r\n                  railMarineBaseProductInfo, railMarineFinishedProductInfo\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"SiteTreeView:Error occured in GetMetersForLA\", error);\r\n    }\r\n  }\r\n\r\n  getQuantityUOMList() {\r\n    axios(\r\n      RestApis.GetMarineUOMListByType +\r\n      \"?TypeName=\" +\r\n      Constants.UOM.QuantityUOM,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var quantityUOMList = [];\r\n          list.forEach((item) => {\r\n            quantityUOMList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            quantityUOMList: quantityUOMList,\r\n          });\r\n        } else {\r\n          console.log(\"Error in getQuantityUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getQuantityUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getDensityUOMList() {\r\n    axios(\r\n      RestApis.GetMarineUOMListByType + \"?TypeName=\" + Constants.UOM.DensityUOM,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var densityUOMList = [];\r\n          list.forEach((item) => {\r\n            densityUOMList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            densityUOMList: densityUOMList,\r\n          });\r\n        } else {\r\n          console.log(\"Error in getDensityUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getDensityUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getTemperatureUOMList() {\r\n    axios(\r\n      RestApis.GetMarineUOMListByType +\r\n      \"?TypeName=\" +\r\n      Constants.UOM.TemperatureUOM,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var temperatureUOMList = [];\r\n          list.forEach((item) => {\r\n            temperatureUOMList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            temperatureUOMList: temperatureUOMList,\r\n          });\r\n        } else {\r\n          console.log(\"Error in getTemperatureUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getTemperatureUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getMassUOMList() {\r\n    axios(\r\n      RestApis.GetMarineUOMListByType + \"?TypeName=\" + Constants.UOM.MassUOM,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var massUOMList = [];\r\n          list.forEach((item) => {\r\n            massUOMList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            massUOMList: massUOMList,\r\n          });\r\n        } else {\r\n          console.log(\"Error in getMassUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getMassUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getPressureUOMList() {\r\n    axios(\r\n      RestApis.GetMarineUOMListByType +\r\n      \"?TypeName=\" +\r\n      Constants.UOM.PressureUOM,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var pressureUOMList = [];\r\n          list.forEach((item) => {\r\n            pressureUOMList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            pressureUOMList: pressureUOMList,\r\n          });\r\n        } else {\r\n          console.log(\"Error in getPressureUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getPressureUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  getCalculatedValueUOMList() {\r\n    axios(\r\n      RestApis.GetMarineUOMListByType +\r\n      \"?TypeName=\" +\r\n      Constants.UOM.CalculatedValueUOM,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var calculatedValueUOMList = [];\r\n          list.forEach((item) => {\r\n            calculatedValueUOMList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            calculatedValueUOMList: calculatedValueUOMList,\r\n          });\r\n        } else {\r\n          console.log(\"Error in getCalculatedValueUOMList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getCalculatedValueUOMList:\", error);\r\n      });\r\n  }\r\n\r\n  GetMeterList() {\r\n    axios(\r\n      RestApis.GetMarineMeterList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var meterCodeList = [];\r\n          list.forEach((item) => {\r\n            meterCodeList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            meterCodeList: meterCodeList,\r\n          });\r\n        } else {\r\n          console.log(\"Error in GetMeterList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while GetMeterList:\", error);\r\n      });\r\n  }\r\n\r\n  GetTankList(index) {\r\n    if (index === 0) {\r\n      return;\r\n    }\r\n    if (this.state.productList.length === 0) {\r\n      return;\r\n    }\r\n    const BPCode = this.state.productList[index - 1].code;\r\n    axios(\r\n      RestApis.GetMarineTankList +\r\n      \"?BaseProductCode=\" +\r\n      BPCode +\r\n      \"&AdditiveCode=\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          var list = result.EntityResult.Table;\r\n          var tankList = [];\r\n          list.forEach((item) => {\r\n            tankList.push(item.Code);\r\n          });\r\n          this.setState({\r\n            tankList: tankList,\r\n          });\r\n        } else {\r\n          console.log(\"Error in GetTankList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while GetTankList:\", error);\r\n      });\r\n  }\r\n\r\n  getMarineCompartmentDetails() {\r\n    const { dispatchCode } = this.props;\r\n    if (dispatchCode === undefined) {\r\n      this.setState({\r\n        marineCompartmentDetails: [],\r\n      });\r\n      return;\r\n    }\r\n    axios(\r\n      RestApis.GetMarineDispatchCompartmentDetails +\r\n      \"?MarineDispatchCode=\" +\r\n      dispatchCode,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            marineCompartmentDetails: result.EntityResult,\r\n          });\r\n          this.getCompartmentSeqNoInVehicleList();\r\n        } else {\r\n          this.setState({\r\n            marineCompartmentDetails: [],\r\n          });\r\n          console.log(\r\n            \"Error in getMarineCompartmentDetails:\",\r\n            result.ErrorList\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting marine compartment details:\", error);\r\n      });\r\n  }\r\n\r\n  getCompartmentSeqNoInVehicleList() {\r\n    let compartmentSeqNoInVehicleList = [];\r\n    this.state.marineCompartmentDetails.forEach((item) => {\r\n      compartmentSeqNoInVehicleList.push(item.CompartmentSeqNoInVehicle);\r\n    });\r\n    this.setState({\r\n      compartmentSeqNoInVehicleList,\r\n    });\r\n  }\r\n\r\n  getSelectedCompartment(selectedCompartmentCompartmentSeqNoInVehicle) {\r\n    let selectedCompartment = this.state.marineCompartmentDetails.find(\r\n      (item) => {\r\n        return (\r\n          item.CompartmentSeqNoInVehicle ===\r\n          +selectedCompartmentCompartmentSeqNoInVehicle\r\n        );\r\n      }\r\n    );\r\n    this.setState(\r\n      {\r\n        selectedCompartment,\r\n        activeIndex: 0,\r\n        railMarineBaseProductInfo: [],\r\n        validationErrorsForBP: [],\r\n      },\r\n      () => {\r\n        this.handleChange(\r\n          \"FP\",\r\n          \"FinishedProductCode\",\r\n          this.state.selectedCompartment.FinishedProductCode\r\n        );\r\n        this.getMarineDispatchManualEntryEnabled(selectedCompartment);\r\n        this.getPartialMarineDispatchData();\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  handleChange = (type, propertyName, data) => {\r\n    try {\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      const validationErrorsForBP = lodash.cloneDeep(\r\n        this.state.validationErrorsForBP\r\n      );\r\n      if (type === \"FP\") {\r\n        const railMarineFinishedProductInfo = lodash.cloneDeep(\r\n          this.state.railMarineFinishedProductInfo\r\n        );\r\n        railMarineFinishedProductInfo[propertyName] = data;\r\n        if (\r\n          marineShipmentManualEntryValidationDef[propertyName] !== undefined\r\n        ) {\r\n          validationErrors[propertyName] = Utilities.validateField(\r\n            marineShipmentManualEntryValidationDef[propertyName],\r\n            data\r\n          );\r\n        }\r\n        this.setState({\r\n          railMarineFinishedProductInfo,\r\n          validationErrors,\r\n        });\r\n        if (propertyName === \"CompartmentSeqNoInVehicle\") {\r\n          this.getSelectedCompartment(data);\r\n          let railMarineFinishedProductInfo = lodash.cloneDeep(\r\n            emptyMarineDispatchTransactionCommonInfo\r\n          );\r\n          if (data !== \"\") {\r\n            railMarineFinishedProductInfo.CompartmentSeqNoInVehicle = data;\r\n            railMarineFinishedProductInfo.QuantityUOM = this.props.QuantityUOM;\r\n          }\r\n          const validationErrors = { ...this.state.validationErrors };\r\n          Object.keys(validationErrors).forEach(function (key) {\r\n            validationErrors[key] = \"\";\r\n          });\r\n          this.setState({\r\n            railMarineFinishedProductInfo,\r\n            validationErrors,\r\n            bcuCodeList: [],\r\n            loadingArmList: [],\r\n            manualEntrySaveEnable: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnMarineShipmentByCompartment)\r\n          });\r\n        }\r\n        if (propertyName === \"BayCode\") {\r\n          this.setState({ railMarineFinishedProductInfo }, () => {\r\n            this.getBCUListByBerth();\r\n          });\r\n        } else if (propertyName === \"BCUCode\") {\r\n          this.setState({ railMarineFinishedProductInfo }, () => {\r\n            this.GetLoadingArmListByBCU();\r\n          });\r\n        }\r\n        else if (propertyName === \"LoadingArm\") {\r\n          this.setState({ railMarineFinishedProductInfo }, () => {\r\n            this.GetMetersForLA();\r\n          });\r\n        }\r\n      }\r\n      else if (type === \"BaseProduct\") {\r\n        const railMarineBaseProductInfo = lodash.cloneDeep(\r\n          this.state.railMarineBaseProductInfo\r\n        );\r\n        railMarineBaseProductInfo[this.state.activeIndex - 1][propertyName] =\r\n          data;\r\n        if (\r\n          marineShipmentManualEntryBPValidationDef[propertyName] !== undefined\r\n        ) {\r\n          validationErrorsForBP[this.state.activeIndex - 1][propertyName] =\r\n            Utilities.validateField(\r\n              marineShipmentManualEntryBPValidationDef[propertyName],\r\n              data\r\n            );\r\n        }\r\n        this.setState({\r\n          railMarineBaseProductInfo,\r\n          validationErrorsForBP,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineDispatchManualEntryComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      var railMarineFinishedProductInfo = lodash.cloneDeep(\r\n        this.state.railMarineFinishedProductInfo\r\n      );\r\n      validationErrors[propertyName] = error;\r\n      railMarineFinishedProductInfo[propertyName] = value;\r\n      this.setState({ validationErrors, railMarineFinishedProductInfo });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptDetailsComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleTabChange = (index) => {\r\n    this.GetTankList(index);\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  validateSave() {\r\n    const { railMarineFinishedProductInfo, railMarineBaseProductInfo } =\r\n      this.state;\r\n    var validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    var validationErrorsForBP = lodash.cloneDeep(\r\n      this.state.validationErrorsForBP\r\n    );\r\n    let BPCode = Object.keys(validationErrorsForBP);\r\n\r\n    Object.keys(marineShipmentManualEntryValidationDef).forEach(function (key) {\r\n      validationErrors[key] = Utilities.validateField(\r\n        marineShipmentManualEntryValidationDef[key],\r\n        railMarineFinishedProductInfo[key]\r\n      );\r\n    });\r\n    this.state.productList.forEach((item, index) => {\r\n      Object.keys(marineShipmentManualEntryBPValidationDef).forEach(function (\r\n        key\r\n      ) {\r\n        validationErrorsForBP[index][key] = Utilities.validateField(\r\n          marineShipmentManualEntryBPValidationDef[key],\r\n          railMarineBaseProductInfo[index][key]\r\n        );\r\n      });\r\n    });\r\n    if (\r\n      railMarineFinishedProductInfo.StartTime >=\r\n      railMarineFinishedProductInfo.EndTime\r\n    ) {\r\n      validationErrors.StartTime = \"MarineDispatchManualEntry_ErrorLoadTime\";\r\n    }\r\n\r\n    this.setState({ validationErrors, validationErrorsForBP });\r\n    var returnValueBase = Object.values(validationErrors).every(function (\r\n      value\r\n    ) {\r\n      return value === \"\";\r\n    });\r\n    var returnValueAddition = true;\r\n    var times = 0;\r\n    this.state.productList.forEach((item, index) => {\r\n      returnValueAddition =\r\n        returnValueAddition &&\r\n        Object.values(validationErrorsForBP[index]).every(function (value) {\r\n          return value === \"\";\r\n        });\r\n      if (!returnValueAddition && times === 0) {\r\n        times++;\r\n        this.setState({\r\n          activeIndex: index + 1,\r\n        });\r\n      }\r\n    });\r\n    if (!returnValueBase) {\r\n      this.setState({\r\n        activeIndex: 0,\r\n      });\r\n    }\r\n\r\n    var attributeValidationErrors = lodash.cloneDeep(\r\n      this.state.attributeValidationErrors\r\n    );\r\n    let selectedAttributeList = lodash.cloneDeep(\r\n      this.state.selectedAttributeList\r\n    );\r\n    selectedAttributeList.forEach((attribute) => {\r\n      attributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ attributeValidationErrors });\r\n    let returnAttributeFPValue = true;\r\n    attributeValidationErrors.forEach((x) => {\r\n      returnAttributeFPValue = Object.values(x.attributeValidationErrors).every(\r\n        function (value) {\r\n          return value === \"\";\r\n        }\r\n      );\r\n    });\r\n    if (!returnAttributeFPValue) {\r\n      this.setState({ activeIndex: 0 });\r\n    }\r\n\r\n    let BPattributeValidationErrors = lodash.cloneDeep(\r\n      this.state.BPattributeValidationErrors\r\n    );\r\n    let BPselectedAttributeList = lodash.cloneDeep(\r\n      this.state.BPselectedAttributeList\r\n    );\r\n    BPCode.forEach((code) => {\r\n      BPselectedAttributeList[code].forEach((attribute) => {\r\n        BPattributeValidationErrors[code].forEach((attributeValidation) => {\r\n          if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n            attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n              attributeValidation.attributeValidationErrors[\r\n                attributeMetaData.Code\r\n              ] = Utilities.valiateAttributeField(\r\n                attributeMetaData,\r\n                attributeMetaData.DefaultValue\r\n              );\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n    this.setState({ BPattributeValidationErrors });\r\n    let attributeBPValueList = BPCode.map((code) => {\r\n      let attributeBPValue = true;\r\n      BPattributeValidationErrors[code].forEach((x) => {\r\n        attributeBPValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      });\r\n      return attributeBPValue;\r\n    });\r\n    let attributeErrorIndex = attributeBPValueList.findIndex((item) => {\r\n      return item !== true;\r\n    });\r\n    if (attributeErrorIndex !== -1) {\r\n      this.setState({ activeIndex: attributeErrorIndex + 1 });\r\n    }\r\n    let returnAttributeBPValue = attributeBPValueList.every(function (value) {\r\n      return value === true;\r\n    });\r\n\r\n    return (\r\n      returnValueBase &&\r\n      returnValueAddition &&\r\n      returnAttributeFPValue &&\r\n      returnAttributeBPValue\r\n    );\r\n  }\r\n\r\n  addLoadingDetails = () => {\r\n    try {\r\n      this.setState({ manualEntrySaveEnable: false, marineDispatchManualEntryEnabled: false });\r\n      let tempLoadingDetails = lodash.cloneDeep(this.state.tempLoadingDetails);\r\n      this.manualEntrySave(tempLoadingDetails);\r\n    } catch (error) {\r\n      console.log(\"Marine Loading DetailsComposite : Error in save Marine Loading details\");\r\n    }\r\n  };\r\n  \r\n  handleSave = () => {\r\n    try {\r\n      \r\n      let railMarineFinishedProductInfo = this.fillAttributeDetails();\r\n      this.fillBPAttributeDetails(this.state.railMarineBaseProductInfo);\r\n      if (this.validateSave()) {\r\n        let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n          \r\n      let tempLoadingDetails = lodash.cloneDeep(railMarineFinishedProductInfo);\r\n      this.setState({ showAuthenticationLayout, tempLoadingDetails }, () => {\r\n        if (showAuthenticationLayout === false) {\r\n          this.addLoadingDetails();\r\n          }\r\n        });\r\n\r\n       \r\n      } else {\r\n        this.setState({\r\n          manualEntrySaveEnable: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnMarineShipmentByCompartment),\r\n          marineDispatchManualEntryEnabled: true, showAuthenticationLayout: false,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineShipmentDetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  manualEntrySave(railMarineFinishedProductInfo) {\r\n    const { railMarineBaseProductInfo, productList } = this.state;\r\n    Object.keys(railMarineFinishedProductInfo).forEach((key) => {\r\n      if (\r\n        !(\r\n          key.includes(\"UOM\") ||\r\n          key === \"BayCode\" ||\r\n          key === \"BCUCode\" ||\r\n          key === \"UnLoadingArm\" ||\r\n          key === \"StartTime\" ||\r\n          key === \"EndTime\" ||\r\n          key === \"FinishedProductCode\" ||\r\n          key === \"Remarks\" ||\r\n          key === \"MeterCode\" ||\r\n          key === \"Attributes\"\r\n        )\r\n      ) {\r\n        railMarineFinishedProductInfo[key] = Utilities.convertStringtoDecimal(\r\n          railMarineFinishedProductInfo[key]\r\n        );\r\n      }\r\n    });\r\n    let BPCode = Object.keys(railMarineBaseProductInfo);\r\n    BPCode.forEach((code) => {\r\n      Object.keys(railMarineBaseProductInfo[code]).forEach((key) => {\r\n        if (\r\n          !(\r\n            key.includes(\"UOM\") ||\r\n            key === \"MeterCode\" ||\r\n            key === \"Attributes\" ||\r\n            key === \"TankCode\"\r\n          )\r\n        ) {\r\n          railMarineBaseProductInfo[code][key] =\r\n            Utilities.convertStringtoDecimal(\r\n              railMarineBaseProductInfo[code][key]\r\n            );\r\n        }\r\n      });\r\n    });\r\n    var keyCode = [\r\n      {\r\n        key: \"MarineDispatchCode\",\r\n        value: this.props.dispatchCode,\r\n      },\r\n      {\r\n        key: \"CompartmentSeqNoInVehicle\",\r\n        value: this.state.selectedCompartment.CompartmentSeqNoInVehicle,\r\n      },\r\n      {\r\n        key: \"FinishedProductCode\",\r\n        value: this.state.selectedCompartment.FinishedProductCode,\r\n      },\r\n    ];\r\n\r\n    var notification = {\r\n      messageType: \"critical\",\r\n      message: \"MarineDispatchManualEntry_SavedSuccess\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"MarineDispatchManualEntry_CompSeqNo\"],\r\n          keyValues: [this.state.selectedCompartment.CompartmentSeqNoInVehicle],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    var entity = {\r\n      CommonInfo: {\r\n        BayCode: railMarineFinishedProductInfo.BayCode,\r\n        BCUCode: railMarineFinishedProductInfo.BCUCode,\r\n        LoadingArm: railMarineFinishedProductInfo.LoadingArm,\r\n        IsBonded: this.props.IsBonded,\r\n      },\r\n      TransactionFPinfo: {\r\n        QuantityUOM: railMarineFinishedProductInfo.QuantityUOM,\r\n        StartTime: railMarineFinishedProductInfo.StartTime,\r\n        EndTime: railMarineFinishedProductInfo.EndTime,\r\n        TransactionID: railMarineFinishedProductInfo.TransactionID,\r\n        Remarks: railMarineFinishedProductInfo.Remarks,\r\n        GrossQuantity: railMarineFinishedProductInfo.GrossQuantity,\r\n        NetQuantity: railMarineFinishedProductInfo.NetQuantity,\r\n        Temperature: railMarineFinishedProductInfo.Temperature,\r\n        TemperatureUOM: railMarineFinishedProductInfo.TemperatureUOM,\r\n        ProductDensity: railMarineFinishedProductInfo.ProductDensity,\r\n        ProductDensityUOM: railMarineFinishedProductInfo.ProductDensityUOM,\r\n        StartTotalizer: railMarineFinishedProductInfo.StartTotalizer,\r\n        EndTotalizer: railMarineFinishedProductInfo.EndTotalizer,\r\n        NetStartTotalizer: railMarineFinishedProductInfo.NetStartTotalizer,\r\n        NetEndTotalizer: railMarineFinishedProductInfo.NetEndTotalizer,\r\n        MeterCode: railMarineFinishedProductInfo.MeterCode,\r\n        GrossMass: railMarineFinishedProductInfo.GrossMass,\r\n        MassUOM: railMarineFinishedProductInfo.MassUOM,\r\n        Pressure: railMarineFinishedProductInfo.Pressure,\r\n        PressureUOM: railMarineFinishedProductInfo.PressureUOM,\r\n        TankStartSnapShot: {\r\n          MassUOM: railMarineFinishedProductInfo.MassUOM,\r\n        },\r\n        TankEndSnapShot: {\r\n          MassUOM: railMarineFinishedProductInfo.MassUOM,\r\n        },\r\n        CalculatedGross: railMarineFinishedProductInfo.CalculatedGross,\r\n        CalculatedNet: railMarineFinishedProductInfo.CalculatedNet,\r\n        CalculatedValueUOM: railMarineFinishedProductInfo.CalculatedValueUOM,\r\n        Attributes: railMarineFinishedProductInfo.Attributes,\r\n      },\r\n      ArrTransactionBP: [],\r\n      ArrTransactionAdditive: null,\r\n    };\r\n    BPCode.forEach((index) => {\r\n      var baseProduct = {\r\n        BaseProductCode: productList[index].code,\r\n        TankCode: railMarineBaseProductInfo[index].TankCode,\r\n        TankStartSnapShot: {\r\n          MassUOM: railMarineBaseProductInfo[index].MassUOM,\r\n          GrossVolume: railMarineBaseProductInfo[index].TankStartGrossQuantity,\r\n          NetVolume: railMarineBaseProductInfo[index].TankStartNetQuantity,\r\n          GrossMass: railMarineBaseProductInfo[index].TankStartGrossMass,\r\n          Pressure: railMarineBaseProductInfo[index].TankStartPressure,\r\n        },\r\n        TankEndSnapShot: {\r\n          MassUOM: railMarineBaseProductInfo[index].MassUOM,\r\n          GrossVolume: railMarineBaseProductInfo[index].TankEndGrossQuantity,\r\n          NetVolume: railMarineBaseProductInfo[index].TankEndNetQuantity,\r\n          GrossMass: railMarineBaseProductInfo[index].TankEndGrossMass,\r\n          Pressure: railMarineBaseProductInfo[index].TankEndPressure,\r\n        },\r\n        QuantityUOM: railMarineBaseProductInfo[index].QuantityUOM,\r\n        StartTime: railMarineBaseProductInfo[index].StartTime,\r\n        EndTime: railMarineBaseProductInfo[index].EndTime,\r\n        TransactionID: railMarineBaseProductInfo[index].TransactionID,\r\n        Remarks: railMarineBaseProductInfo[index].Remarks,\r\n        GrossQuantity: railMarineBaseProductInfo[index].GrossQuantity,\r\n        NetQuantity: railMarineBaseProductInfo[index].NetQuantity,\r\n        Temperature: railMarineBaseProductInfo[index].Temperature,\r\n        TemperatureUOM: railMarineBaseProductInfo[index].TemperatureUOM,\r\n        ProductDensity: railMarineBaseProductInfo[index].ProductDensity,\r\n        ProductDensityUOM: railMarineBaseProductInfo[index].ProductDensityUOM,\r\n        StartTotalizer: railMarineBaseProductInfo[index].StartTotalizer,\r\n        EndTotalizer: railMarineBaseProductInfo[index].EndTotalizer,\r\n        NetStartTotalizer: railMarineBaseProductInfo[index].NetStartTotalizer,\r\n        NetEndTotalizer: railMarineBaseProductInfo[index].NetEndTotalizer,\r\n        MeterCode: railMarineBaseProductInfo[index].MeterCode,\r\n        GrossMass: railMarineBaseProductInfo[index].GrossMass,\r\n        MassUOM: railMarineBaseProductInfo[index].MassUOM,\r\n        Pressure: railMarineBaseProductInfo[index].Pressure,\r\n        PressureUOM: railMarineBaseProductInfo[index].PressureUOM,\r\n        CalculatedGross: railMarineBaseProductInfo[index].CalculatedGross,\r\n        CalculatedNet: railMarineBaseProductInfo[index].CalculatedNet,\r\n        CalculatedValueUOM: railMarineBaseProductInfo[index].CalculatedValueUOM,\r\n        Attributes: railMarineBaseProductInfo[index].Attributes,\r\n      };\r\n      entity.ArrTransactionBP.push(baseProduct);\r\n    });\r\n    var obj = {\r\n      ShareHolderCode: this.state.selectedCompartment.ShareHolderCode,\r\n      keyDataCode: KeyCodes.marineDispatchCode,\r\n      KeyCodes: keyCode,\r\n      Entity: entity,\r\n    };\r\n    axios(\r\n      RestApis.MarineDispatchManualEntrySave,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            manualEntrySaveEnable: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnMarineShipmentByCompartment),showAuthenticationLayout:false,\r\n          }, () => {\r\n            this.getMarineDispatchManualEntryEnabled(this.state.selectedCompartment)\r\n          });\r\n        } else {\r\n          notification.message = \"MarineDispatchManualEntry_SaveFailure\";\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            manualEntrySaveEnable: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnMarineShipmentByCompartment),\r\n            marineDispatchManualEntryEnabled: false,\r\n            showAuthenticationLayout:false,\r\n          });\r\n        }\r\n        toast(\r\n          <ErrorBoundary>\r\n            <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n          </ErrorBoundary>,\r\n          {\r\n            autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ showAuthenticationLayout:false });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        console.log(\"Error while handleSave:\", error);\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const {\r\n        validationErrors,\r\n        validationErrorsForBP,\r\n        railMarineBaseProductInfo,\r\n      } = this.state;\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      validationErrorsForBP.forEach((item, index) => {\r\n        Object.keys(validationErrorsForBP[index]).forEach(function (key) {\r\n          validationErrorsForBP[index][key] = \"\";\r\n        });\r\n      });\r\n\r\n      var railMarineFinishedProductInfo = lodash.cloneDeep(\r\n        emptyMarineDispatchTransactionCommonInfo\r\n      );\r\n\r\n      railMarineFinishedProductInfo.StartTime = new Date();\r\n      railMarineFinishedProductInfo.EndTime = new Date();\r\n      railMarineFinishedProductInfo.QuantityUOM = this.props.QuantityUOM; // to displ\r\n\r\n      railMarineBaseProductInfo.forEach((item, index) => {\r\n        railMarineBaseProductInfo[index] = lodash.cloneDeep(\r\n          emptyRailMarineTransactionBPInfo\r\n        );\r\n      });\r\n\r\n      this.setState({\r\n        validationErrors,\r\n        validationErrorsForBP,\r\n        railMarineFinishedProductInfo: railMarineFinishedProductInfo,\r\n        railMarineBaseProductInfo,\r\n        bcuCodeList: [],\r\n        loadingArmList: [],\r\n        productList: [],\r\n        activeIndex: 0,\r\n        selectedCompartment: {},\r\n        selectedAttributeList: [],\r\n        BPselectedAttributeList: [],\r\n        manualEntrySaveEnable: Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.modify,\r\n          fnMarineShipmentByCompartment),\r\n        marineDispatchManualEntryEnabled: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"MarineReceiptManualEntryDetails:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      compartmentSeqNoInVehicleList: this.state.compartmentSeqNoInVehicleList,\r\n      berthList: this.state.berthList,\r\n      bcuCodeList: this.state.bcuCodeList,\r\n      loadingArmList: this.state.loadingArmList,\r\n      quantityUOMList: this.state.quantityUOMList,\r\n      temperatureUOMs: this.state.temperatureUOMList,\r\n      densityUOMs: this.state.densityUOMList,\r\n      meterCodes: this.state.meterCodeList,\r\n      massUOMs: this.state.massUOMList,\r\n      pressureUOMs: this.state.pressureUOMList,\r\n      calculatedValueUOMs: this.state.calculatedValueUOMList,\r\n      tankList: this.state.tankList,\r\n    };\r\n    const {\r\n      selectedCompartment,\r\n      manualEntrySaveEnable,\r\n      marineDispatchManualEntryEnabled,\r\n    } = this.state;\r\n\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div>\r\n            <ErrorBoundary>\r\n              <TMDetailsHeader newEntityName=\"MarineDispatchManualEntry_PageTitle\"></TMDetailsHeader>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n              <MarineShipmentManualBaseDetails\r\n                railMarineFinishedProductInfo={\r\n                  this.state.railMarineFinishedProductInfo\r\n                }\r\n                onFieldChange={this.handleChange}\r\n                validationErrors={this.state.validationErrors}\r\n                listOptions={listOptions}\r\n                onDateTextChange={this.handleDateTextChange}\r\n                selectedCompartment={selectedCompartment}\r\n                marineDispatchManualEntryEnabled={\r\n                  this.state.marineDispatchManualEntryEnabled\r\n                }\r\n              ></MarineShipmentManualBaseDetails>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n              <Tab\r\n                activeIndex={this.state.activeIndex}\r\n                onTabChange={(index) => this.handleTabChange(index)}\r\n              >\r\n                <Tab.Pane title={this.state.railMarineFinishedProductInfo.FinishedProductCode === '' ? t(\"FinishedProduct\") : t(\"FinishedProduct\") + \"-\" + this.state.railMarineFinishedProductInfo.FinishedProductCode}>\r\n                  <MarineShipmentManualTransactionsDetails\r\n                    railMarineFinishedProductInfo={\r\n                      this.state.railMarineFinishedProductInfo\r\n                    }\r\n                    onFieldChange={this.handleChange}\r\n                    validationErrors={this.state.validationErrors}\r\n                    listOptions={listOptions}\r\n                  ></MarineShipmentManualTransactionsDetails>\r\n                  {this.state.selectedAttributeList.length > 0\r\n                    ? this.state.selectedAttributeList.map((attire) => (\r\n                      <ErrorBoundary>\r\n                        <Accordion>\r\n                          <Accordion.Content\r\n                            className=\"attributeAccordian\"\r\n                            title={\r\n                              this.props.userDetails.EntityResult\r\n                                .IsEnterpriseNode\r\n                                ? attire.TerminalCode +\r\n                                \" - \" +\r\n                                t(\"Attributes_Header\")\r\n                                : t(\"Attributes_Header\")\r\n                            }\r\n                          >\r\n                            <AttributeDetails\r\n                              selectedAttributeList={\r\n                                attire.attributeMetaDataList\r\n                              }\r\n                              handleCellDataEdit={\r\n                                this.handleAttributeCellDataEdit\r\n                              }\r\n                              attributeValidationErrors={this.handleValidationErrorFilter(\r\n                                this.state.attributeValidationErrors,\r\n                                attire.TerminalCode\r\n                              )}\r\n                            ></AttributeDetails>\r\n                          </Accordion.Content>\r\n                        </Accordion>\r\n                      </ErrorBoundary>\r\n                    ))\r\n                    : null}\r\n                </Tab.Pane>\r\n                {this.state.productList.map((item, index) => {\r\n                  return (\r\n                    <Tab.Pane\r\n                      key={index}\r\n                      title={\r\n                        t(item.ProductTYPE === \"baseproduct\" ? \"MarineDispatch_BaseProduct\" : item.ProductType) + item.SequenceNumber + \"-\" + item.code\r\n                      }\r\n                    >\r\n                      <MarineShipmentManualBaseProductDetails\r\n                        railMarineBaseProductInfo={\r\n                          this.state.railMarineBaseProductInfo[index]\r\n                        }\r\n                        onFieldChange={this.handleChange}\r\n                        validationErrors={\r\n                          this.state.validationErrorsForBP[index]\r\n                        }\r\n                        listOptions={listOptions}\r\n                        selectedAttributeList={\r\n                          this.state.BPselectedAttributeList[index]\r\n                        }\r\n                        attributeValidationErrors={\r\n                          this.state.BPattributeValidationErrors[index]\r\n                        }\r\n                        handleAttributeCellDataEdit={\r\n                          this.handleBPAttributeCellDataEdit\r\n                        }\r\n                        isEnterpriseNode={\r\n                          this.props.userDetails.EntityResult.IsEnterpriseNode\r\n                        }\r\n                        code={index}\r\n                      ></MarineShipmentManualBaseProductDetails>\r\n                    </Tab.Pane>\r\n                  );\r\n                })}\r\n              </Tab>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n              <TMDetailsUserActions\r\n                handleBack={this.props.handleBack}\r\n                handleSave={this.handleSave}\r\n                handleReset={this.handleReset}\r\n                saveEnabled={\r\n                  manualEntrySaveEnable && marineDispatchManualEntryEnabled\r\n                  // selectedCompartment.DispatchCompartmentStatus === null\r\n                  //   ? manualEntrySaveEnable\r\n                  //   : selectedCompartment.DispatchCompartmentStatus === 4\r\n                  //   ? false\r\n                  //   : manualEntrySaveEnable\r\n                }\r\n              ></TMDetailsUserActions>\r\n            </ErrorBoundary>\r\n            {this.state.showAuthenticationLayout ? (\r\n                    <UserAuthenticationLayout\r\n                        Username={this.props.userDetails.EntityResult.UserName}\r\n                        functionName={functionGroups.add}\r\n                        functionGroup={fnViewMarineLoadingDetails}\r\n                        handleOperation={this.addLoadingDetails}\r\n                        handleClose={this.handleAuthenticationClose}\r\n                    ></UserAuthenticationLayout>\r\n                    ) : null}\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(\r\n  MarineDispatchManualEntryDetailsComposite\r\n);\r\n\r\nMarineDispatchManualEntryDetailsComposite.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  dispatchCode: PropTypes.string.isRequired,\r\n  IsBonded: PropTypes.bool.isRequired,\r\n  DispatchStatus: PropTypes.string.isRequired,\r\n  QuantityUOM: PropTypes.string.isRequired,\r\n  ActualTerminalCode: PropTypes.string.isRequired,\r\n};\r\n"],"names":["MarineShipmentManualBaseDetails","_ref","railMarineFinishedProductInfo","validationErrors","listOptions","onFieldChange","onDateTextChange","selectedCompartment","marineDispatchManualEntryEnabled","_jsx","TranslationConsumer","children","t","className","_jsxs","Select","fluid","placeholder","value","CompartmentSeqNoInVehicle","label","options","Utilities","compartmentSeqNoInVehicleList","onChange","data","multiple","reserveSpace","search","noResultsMessage","indicator","error","disabled","DispatchCompartmentStatus","BayCode","berthList","BCUCode","bcuCodeList","LoadingArm","loadingArmList","DatePicker","Date","StartTime","disablePast","minuteStep","type","displayFormat","getCurrentDateFormat","disableFuture","onTextChange","EndTime","Input","FinishedProductCode","QuantityUOM","quantityUOMList","TransactionID","Remarks","MarineShipmentManualTransactionsDetails","GrossQuantity","NetQuantity","Temperature","TemperatureUOM","temperatureUOMs","ProductDensity","ProductDensityUOM","densityUOMs","ReferenceDensity","MeterCode","meterCodes","StartTotalizer","EndTotalizer","NetStartTotalizer","NetEndTotalizer","GrossMass","MassUOM","massUOMs","Pressure","PressureUOM","pressureUOMs","CalculatedGross","CalculatedNet","CalculatedValueUOM","calculatedValueUOMs","defaultProps","MarineShipmentManualBaseProductDetails","railMarineBaseProductInfo","code","selectedAttributeList","handleAttributeCellDataEdit","attributeValidationErrors","isEnterpriseNode","handleValidationErrorFilter","terminal","attributeValidation","find","selectedAttribute","TerminalCode","TankCode","tankList","TankStartGrossQuantity","TankEndGrossQuantity","TankStartNetQuantity","TankEndNetQuantity","TankStartGrossMass","TankStartMass","TankEndGrossMass","TankEndMass","TankStartPressure","TankEndPressure","length","map","attire","ErrorBoundary","Accordion","Content","title","AttributeDetails","attributeMetaDataList","handleCellDataEdit","attribute","MarineDispatchManualEntryDetailsComposite","Component","constructor","arguments","state","lodash","emptyMarineDispatchTransactionCommonInfo","marineShipmentManualEntryValidationDef","validationErrorsForBP","marineCompartmentDetails","densityUOMList","temperatureUOMList","massUOMList","pressureUOMList","calculatedValueUOMList","meterCodeList","productList","activeIndex","manualEntrySaveEnable","BPattributeValidationErrors","compartmentAttributeMetaDataList","baseProductAttributeMetaDataList","BPselectedAttributeList","showAuthenticationLayout","tempLoadingDetails","this","forEach","Code","setState","DataType","Constants","INT","LONG","FLOAT","DOUBLE","DefaultValue","console","log","handleBPAttributeCellDataEdit","handleChange","propertyName","undefined","getSelectedCompartment","props","Object","keys","key","userDetails","EntityResult","FunctionsList","functionGroups","modify","fnMarineShipmentByCompartment","getBCUListByBerth","GetLoadingArmListByBCU","GetMetersForLA","marineShipmentManualEntryBPValidationDef","handleDateTextChange","handleTabChange","index","GetTankList","addLoadingDetails","manualEntrySave","handleSave","fillAttributeDetails","fillBPAttributeDetails","validateSave","IsWebPortalUser","handleReset","item","emptyRailMarineTransactionBPInfo","handleAuthenticationClose","componentDidMount","setDefaultValues","getMarineCompartmentDetails","getBerthList","getQuantityUOMList","getDensityUOMList","getTemperatureUOMList","getMassUOMList","getPressureUOMList","getCalculatedValueUOMList","GetMeterList","getMarineDispatchManualEntryEnabled","DispatchCompartmentStatusKeys","MarineDispatchCompartmentStatus","axios","RestApis","ShareholderCode","DispatchStatus","tokenDetails","tokenInfo","then","response","result","IsSuccess","ErrorList","catch","initializeAttributeForBP","BPCode","getAttributes","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineLoadingDetailsBP","marineLoadingDetailsFP","marineLoadingDetailsAdditive","IsEnterpriseNode","baseProductSelectionChange","terminalSelectionChange","localNodeAttribute","Array","isArray","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","Attributes","marineDispatchAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","push","selectedAttributeBP","BPAttribute","newSelectedAttributeBPList","newAttributeValidationBPErrors","attributeList","comp","det","getPartialMarineDispatchData","keyCode","dispatchCode","obj","ShareHolderCode","keyDataCode","KeyCodes","list","Table","validationErrorsForBPList","railMarineBaseProductInfoList","DeviceCode","getBCUDetails","LoadingArmCode","deviceCode","bcu","DensityUOM","bcuCode","loadingArmCode","MARINE_BCUVIEW","ActualTerminalCode","loadingArm","AssociatedArmsList","larm","mainLineMeters","AssociatedMeterList","meter","MeterLineType","bpMeterCode","MeterList","element","getCompartmentSeqNoInVehicleList","selectedCompartmentCompartmentSeqNoInVehicle","returnValueBase","values","every","returnValueAddition","times","returnAttributeFPValue","attributeBPValueList","attributeBPValue","attributeErrorIndex","findIndex","returnAttributeBPValue","includes","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","entity","CommonInfo","IsBonded","TransactionFPinfo","TankStartSnapShot","TankEndSnapShot","ArrTransactionBP","ArrTransactionAdditive","baseProduct","BaseProductCode","GrossVolume","NetVolume","Entity","toast","NotifyEvent","notificationMessage","autoClose","render","TMDetailsHeader","newEntityName","Tab","onTabChange","Pane","ProductTYPE","ProductType","SequenceNumber","TMDetailsUserActions","handleBack","saveEnabled","UserAuthenticationLayout","Username","UserName","functionName","add","functionGroup","fnViewMarineLoadingDetails","handleOperation","handleClose","connect","getUserDetails","TokenAuth"],"sourceRoot":""}