{"version":3,"file":"static/js/782.53076e6c.chunk.js","mappings":"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","sources":["Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Details/BayAllocationSCADAConfigurationDetails.jsx","Components/Composite/Details/BayAllocationSCADAConfigurationDetailsComposite.jsx","Components/Composite/Entity/BayAllocationSCADAConfigurationComposite.jsx","JS/FunctionGroups.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Input, Icon, Checkbox, Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport {\r\n    handleIsRequiredCompartmentCell,\r\n} from \"../../../JS/functionalUtilities\";\r\nBayAllocationSCADAConfigurationDetails.propTypes = {\r\n    bayAllocationQueueData: PropTypes.object.isRequired,\r\n    bayAllocationPointName: PropTypes.object.isRequired,\r\n    bayAllocationMonitoringData: PropTypes.object.isRequired,\r\n    handleCellParameterDataEdit: PropTypes.func.isRequired,\r\n    handleCellPointDataEdit: PropTypes.func.isRequired,\r\n    createGenerateConfig: PropTypes.func.isRequired,\r\n    handleBaySelectionChange: PropTypes.func.isRequired,\r\n    selectedbays: PropTypes.array.isRequired,\r\n    handleCellCheck: PropTypes.func.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    bayAllocationValidationErrors: PropTypes.object.isRequired,\r\nsaveEnabled:PropTypes.bool.isRequired\r\n}\r\nBayAllocationSCADAConfigurationDetails.defaultProps = {\r\n    isEnterpriseNode: false,\r\n}\r\nexport default function BayAllocationSCADAConfigurationDetails({\r\n    bayAllocationQueueData,\r\n    bayAllocationPointName,\r\n    bayAllocationMonitoringData,\r\n    handleCellParameterDataEdit,\r\n    createGenerateConfig,\r\n    handleCellPointDataEdit,\r\n    handleBaySelectionChange,\r\n    selectedbays,\r\n    onFieldChange,\r\n    bayAllocationValidationErrors,\r\n    saveEnabled\r\n}) {\r\n    const handleEditTextBox = (cellData) => {\r\n        return (\r\n            <Input\r\n                fluid\r\n                value={bayAllocationQueueData[cellData.rowIndex][cellData.field]}\r\n                onChange={(value) => handleCellParameterDataEdit(value, cellData)}\r\n                reserveSpace={false}\r\n            />\r\n        );\r\n    };\r\n    const handleCellEditTextBox = (cellData) => {\r\n        // var data = selectedbays.map((value) => { return value.BayCode }).indexOf(cellData.rowData.BayCode)\r\n        return (\r\n            <Input\r\n                fluid\r\n                value={bayAllocationPointName[cellData.rowIndex][cellData.field]}\r\n                onChange={(value) => handleCellPointDataEdit(value, cellData)}\r\n                // disabled={data < 0 ? true : false}\r\n                reserveSpace={false}\r\n                indicator=\"required\"\r\n            />\r\n        );\r\n    };\r\n    const decimalDisplayValues = (cellData) => {\r\n        const value = cellData;\r\n        if (typeof value === \"number\") {\r\n            return value.toLocaleString();\r\n        } else {\r\n            return value;\r\n        }\r\n    };\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t, index) => (\r\n                <div className=\"detailsContainer\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 col-lg-4 \">\r\n                            <Input\r\n                                fluid\r\n                                value={bayAllocationMonitoringData[0].MonitoringRate}\r\n                                indicator=\"required\"\r\n                                label={t(\"BaySCADA_MonitoringRate\")}\r\n                                reserveSpace={false}\r\n                                onChange={(data) => onFieldChange(\"MonitoringRate\", data)}\r\n                                error={t(bayAllocationValidationErrors.MonitoringRate)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <div class=\"ui input-label\"\r\n                                style={{ marginLeft: \"14.6rem\" }}>\r\n                                <span className=\"input-label-message\">\r\n                                    {t(\"BaySCADA_Enabled\")}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"input-wrap \" style={{\r\n                                marginLeft: \"14.8rem\",\r\n                                marginTop: \"0.7rem\"\r\n                            }}>\r\n                                <Checkbox\r\n                                    key=\"IsEnabled\"\r\n                                    field=\"IsEnabled\"\r\n                                    onChange={(data) => onFieldChange(\"IsEnabled\", data)}\r\n                                    checked={bayAllocationMonitoringData[0].IsEnabled === null ? \"\" : bayAllocationMonitoringData[0].IsEnabled}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6 col-md-6 col-lg-6 pb-0 detailsTable\">\r\n                            <span style={{ \"fontWeight\": \"bold\" }}>{t(\"BaySCADA_Data_Parameter\")}</span>\r\n                            <div style={{ marginBottom: \"10px\" }}></div>\r\n                            <DataTable\r\n                                data={bayAllocationQueueData}\r\n                                scrollable={true}\r\n                                scrollHeight=\"350px\"\r\n                            >\r\n                                <DataTable.Column\r\n                                    className=\"compColHeight\"\r\n                                    key=\"AttributeName\"\r\n                                    field=\"AttributeName\"\r\n                                    header={t(\"CompartmentAttributeName\")}\r\n                                ></DataTable.Column>\r\n                                <DataTable.Column\r\n                                    className=\"compColHeight\"\r\n                                    key=\"ParameterName\"\r\n                                    field=\"ParameterName\"\r\n                                    renderer={(cellData) => decimalDisplayValues(cellData.rowData.ParameterName)}\r\n                                    // editable={true}\r\n                                    renderer={handleEditTextBox}\r\n                                    header={t(\"AtgConfigure_ParameterName\")}\r\n                                ></DataTable.Column>\r\n                            </DataTable>\r\n                        </div>\r\n                        <div className=\"col-6 col-md-6 col-lg-6 pb-0\">\r\n                            <span style={{ \"fontWeight\": \"bold\" }}>{t(\"BaySCADA_Bay_Point\")}</span>\r\n                            <div style={{ marginBottom: \"10px\" }}></div>\r\n                            <DataTable\r\n                                data={bayAllocationPointName}\r\n                                selectionMode=\"multiple\"\r\n                                scrollable={true}\r\n                                scrollHeight=\"320px\"\r\n                                selection={selectedbays}\r\n                                onSelectionChange={handleBaySelectionChange}\r\n                            >\r\n                                <DataTable.Column\r\n                                    className=\"compColHeight\"\r\n                                    key=\"BayCode\"\r\n                                    field=\"BayCode\"\r\n                                    header={t(\"BaySCADA_BayGV_BayCode\")}\r\n                                ></DataTable.Column>\r\n                                <DataTable.Column\r\n                                    className=\"compColHeight\"\r\n                                    key=\"BayName\"\r\n                                    field=\"BayName\"\r\n                                    header={t(\"BaySCADA_BayGV_BayName\")}\r\n                                ></DataTable.Column>\r\n                                <DataTable.Column\r\n                                    className=\"compColHeight\"\r\n                                    key=\"PointName\"\r\n                                    field=\"PointName\"\r\n                                    renderer={(cellData) => decimalDisplayValues(cellData.rowData.PointName)}\r\n                                    renderer={handleCellEditTextBox}\r\n                                    header={handleIsRequiredCompartmentCell(t(\"AtgConfigure_PointName\"))}\r\n                                ></DataTable.Column>\r\n                            </DataTable>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div\r\n                            className=\"col col-md-8 col-lg-9 col col-xl-12\"\r\n                            style={{ textAlign: \"right\" }}\r\n                        >\r\n                            <Button\r\n                                type=\"primary\"\r\n                                onClick={createGenerateConfig}\r\n                                disabled={!saveEnabled}\r\n                                content={t(\"BaySCADA_Generate\")}\r\n                            ></Button>\r\n                        </div></div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    )\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport lodash from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { emptyMasterConfigurationInfo, emptyScadaBayList} from \"../../../JS/DefaultEntities\";\r\nimport {\r\n    BayAllocationScadaValidationDef,\r\n} from \"../../../JS/ValidationDef\";\r\nimport { fnbaySCADAConfiguration, functionGroups } from \"../../../JS/FunctionGroups\";\r\nimport { BayAllocationScadaPointTableValidation, BayAllocationScadaParameterValidation} from \"../../../JS/DetailsTableValidationDef\";\r\nimport BayAllocationSCADAConfigurationDetails from \"../../UIBase/Details/BayAllocationSCADAConfigurationDetails\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\nclass BayAllocationSCADAConfigurationDetailsComposite extends Component {\r\n    state = {\r\n        bayAllocationQueueData: [],\r\n        bayAllocationMonitoringData: [],\r\n        bayAllocationPointName: [],\r\n        isReadyToRender: false,\r\n        saveEnabled: true,\r\n        IsEnabled: \"\",\r\n        selectedbays: [],\r\n        bayAllocationValidationErrors: Utilities.getInitialValidationErrors(\r\n            BayAllocationScadaValidationDef\r\n        ),\r\n        showAuthenticationLayout: false,\r\n        tempScadaBayMasterConfig:{}\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n                this.setState({\r\n                    saveEnabled: Utilities.isInFunction(\r\n                        this.props.userDetails.EntityResult.FunctionsList,\r\n                        functionGroups.add,\r\n                        fnbaySCADAConfiguration\r\n                    )\r\n})\r\n            this.getBayAllocationQueueDataConfigurations();\r\n            this.getBayAllocationPointNameConfigurations();\r\n        } catch (error) {\r\n            console.log(\"SlotConfigurationDetail:Error occurred on \", error);\r\n        }\r\n    }\r\n    getBayAllocationQueueDataConfigurations() {\r\n        \r\n        try {\r\n            axios(\r\n                RestAPIs.GetSCADAParameterMapping,\r\n                Utilities.getAuthenticationObjectforGet(\r\n                    this.props.tokenDetails.tokenInfo\r\n                )\r\n            ).then((response) => {\r\n                \r\n                var result = response.data;\r\n                if (result.IsSuccess) {\r\n                    if (\r\n                        result.EntityResult !== null\r\n                    ) {\r\n                        let bayAllocationQueueData = lodash.cloneDeep(emptyMasterConfigurationInfo)\r\n                         bayAllocationQueueData =\r\n                             result.EntityResult.AtgParameterConfiguration\r\n                        let bayAllocationMonitoringData = result.EntityResult.Table1\r\n                        if (bayAllocationMonitoringData !== null) {\r\n                            bayAllocationMonitoringData.forEach((Monitoring) => {\r\n                                Monitoring.MonitoringRate = Monitoring.MonitoringRate === 0 ? \"\" : Number.isInteger(Monitoring.MonitoringRate) ? Math.round(Monitoring.MonitoringRate) : Monitoring.MonitoringRate\r\n                            })\r\n                        }\r\n                        console.log(\"bayAllocationQueueData\", bayAllocationQueueData)\r\n                        this.setState({\r\n                            isReadyToRender: true, bayAllocationQueueData,\r\n                            bayAllocationMonitoringData,\r\n                            saveEnabled: Utilities.isInFunction(\r\n                                this.props.userDetails.EntityResult.FunctionsList,\r\n                                functionGroups.add,\r\n                                fnbaySCADAConfiguration\r\n                            )\r\n                        });\r\n                    }\r\n                } else {\r\n                    console.log(\"Error in getBayAllocationQueueDataConfigurations:\", result.ErrorList);\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.log(\r\n                \"getBayAllocationQueueDataConfigurations:Error occured on getBayAllocationQueueDataConfigurationsList\",\r\n                error\r\n            );\r\n        }\r\n    }\r\n    getBayAllocationPointNameConfigurations() {\r\n        try {\r\n            axios(\r\n                RestAPIs.GetPointConfig,    \r\n                Utilities.getAuthenticationObjectforGet(\r\n                    this.props.tokenDetails.tokenInfo\r\n                )\r\n            ).then((response) => {\r\n                \r\n                var result = response.data;\r\n                if (result.IsSuccess) {\r\n                    if (\r\n                        result.EntityResult !== null && result.IsSuccess === true) {\r\n                        let bayAllocationPointName = lodash.cloneDeep(emptyScadaBayList)\r\n                        bayAllocationPointName = lodash.cloneDeep(result.EntityResult.Table);\r\n                        let  test = lodash.cloneDeep(result.EntityResult.Table);\r\n                        let selectedbays = lodash.cloneDeep(this.state.selectedbays)\r\n                        let checkedList = [];\r\n                            var selectBay = test.filter(\r\n                                (allBay) => {\r\n                                    return allBay.PointName !== \"\"\r\n                                });\r\n                                checkedList.push(selectBay)\r\n                        this.setState({\r\n                            isReadyToRender: true,\r\n                            bayAllocationPointName,\r\n                            selectedbays: checkedList[0],\r\n                            saveEnabled: Utilities.isInFunction(\r\n                                this.props.userDetails.EntityResult.FunctionsList,\r\n                                functionGroups.add,\r\n                                fnbaySCADAConfiguration\r\n                            )\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.setState({\r\n                        bayAllocationPointName: lodash.cloneDeep(emptyScadaBayList),\r\n                        selectedbays:lodash.cloneDeep(this.state.selectedbays)\r\n                    })\r\n                    console.log(\"Error in bayAllocationPointNameConfigurations:\", result.ErrorList);\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.log(\r\n                \"bayAllocationPointNameConfigurations:Error occured on getBayAllocationQueueDataConfigurationsList\",\r\n                error\r\n            );\r\n        }\r\n    }\r\n    handleCellParameterDataEdit = (newVal, cellData) => {\r\n        \r\n        try {\r\n            let bayAllocationQueueData = lodash.cloneDeep(\r\n                this.state.bayAllocationQueueData\r\n            );\r\n            bayAllocationQueueData[cellData.rowIndex][cellData.field] = newVal;\r\n            this.setState({ bayAllocationQueueData });\r\n        } catch (error) {\r\n            console.log(\r\n                \"BayDetailsComposite:Error occured on handleCellDataEdit\",\r\n                error\r\n            );\r\n        }\r\n    };\r\n    handleCellPointDataEdit = (newVal, cellData) => {\r\n        try {\r\n            let bayAllocationPointName = lodash.cloneDeep(this.state.bayAllocationPointName)\r\n            let selectedbays = this.state.selectedbays;\r\n            let Bays = selectedbays.find(value => { return value.BayCode === cellData.rowData.BayCode })\r\n            if (selectedbays.length > 0 && Bays !==undefined) {\r\n                Bays.PointName = newVal;\r\n            }\r\n                bayAllocationPointName[cellData.rowIndex][cellData.field] = newVal;\r\n                this.setState({ bayAllocationPointName });\r\n\r\n        } catch (error) {\r\n            console.log(\r\n                \"BayDetailsComposite:Error occured on handleCellDataEdit\",\r\n                error\r\n            );\r\n        }\r\n    };\r\n    handleBaySelectionChange = (bays) => {\r\n                this.setState({ selectedbays: bays });\r\n    };\r\n    handleChange = (propertyName, data) => {\r\n        try {\r\n            const bayAllocationMonitoringData = lodash.cloneDeep(this.state.bayAllocationMonitoringData);\r\n            bayAllocationMonitoringData[0][propertyName] = data;\r\n            this.setState({ bayAllocationMonitoringData });\r\n        } catch (error) {\r\n            console.log(\r\n                \"TruckReceiptDetailsComposite:Error occured on handleChange\",\r\n                error\r\n            );\r\n        }\r\n    };\r\n    fillDetails() {\r\n        \r\n        let ScadaBayMasterConfig = {\r\n            IsEnabled:\"\",\r\n            MasterConfigurationInfo: [],\r\n            ScadaBayList: [],\r\n            ScanPeriod:\"\"\r\n        }\r\n        try {\r\n            \r\n            let MasterConfiguration = [];\r\n            let bayAllocationQueueData = lodash.cloneDeep(this.state.bayAllocationQueueData);\r\n            let bayAllocationMonitoringData = lodash.cloneDeep(this.state.bayAllocationMonitoringData);\r\n            let bayAllocationPointName = lodash.cloneDeep(this.state.bayAllocationPointName)\r\n            ScadaBayMasterConfig.IsEnabled = bayAllocationMonitoringData[0].IsEnabled;\r\n            ScadaBayMasterConfig.ScanPeriod = bayAllocationMonitoringData[0].MonitoringRate ;\r\n            let BayList = [];\r\n            if (bayAllocationQueueData.length > 0\r\n                && Array.isArray(bayAllocationQueueData)\r\n            ) {\r\n                bayAllocationQueueData.forEach((attribute) => {\r\n                    MasterConfiguration.push(\r\n                        {\r\n                            AttributeName: attribute.AttributeName,\r\n                            ParameterName: attribute.ParameterName\r\n                        }\r\n                    )\r\n                })\r\n            }\r\n            if (bayAllocationPointName.length > 0\r\n                && Array.isArray(bayAllocationPointName) \r\n            ) {\r\n                bayAllocationPointName.forEach((bays) => {\r\n                    let selectedbays = lodash.cloneDeep(this.state.selectedbays)\r\n                    let Bays = selectedbays.find(value => { return value.BayCode === bays.BayCode })\r\n                    if (bays.PointName !== \"\" && Bays !== undefined) {\r\n\r\n                        BayList.push(\r\n                            {\r\n                                Code: bays.BayCode,\r\n                                PointName: bays.PointName\r\n                            }\r\n                        )\r\n                    }\r\n                    else {\r\n                        BayList.push(\r\n                            {\r\n                                Code: bays.BayCode,\r\n                                PointName: \"\"\r\n                            }\r\n                        )\r\n                    }\r\n                })\r\n            }\r\n            \r\n            ScadaBayMasterConfig.ScadaBayList = BayList;\r\n            ScadaBayMasterConfig.MasterConfigurationInfo = MasterConfiguration;\r\n\r\n        } catch (error) {\r\n            console.log(\"ATGInterfaceDetailsComposite:Error occured on fillAttributeDetails\", error);\r\n        }\r\n        return ScadaBayMasterConfig;\r\n    }\r\n    validateSave() {\r\n        try {\r\n            var bayAllocationValidationErrors = lodash.cloneDeep(this.state.bayAllocationValidationErrors);\r\n            let bayAllocationMonitoringData = lodash.cloneDeep(this.state.bayAllocationMonitoringData)\r\n            let bayAllocationPointName = lodash.cloneDeep(this.state.bayAllocationPointName)\r\n            let bayAllocationQueueData = lodash.cloneDeep(this.state.bayAllocationQueueData)\r\n            let selectedbays = lodash.cloneDeep(this.state.selectedbays)\r\n            let notification = {\r\n                messageType: \"critical\",\r\n                message: \"BayAllocation_FailurStatus\",\r\n                messageResultDetails: [],\r\n            };\r\n            Object.keys(BayAllocationScadaValidationDef).forEach(function (key) {\r\n                bayAllocationValidationErrors[key] = Utilities.validateField(\r\n                    BayAllocationScadaValidationDef[key],\r\n                    bayAllocationMonitoringData[0][key]\r\n                );\r\n            });\r\n            // Object.keys(BayAllocationScadaValidationDef).forEach(function (key) {\r\n            //     bayAllocationValidationErrors[key] = Utilities.validateField(\r\n            //         BayAllocationScadaValidationDef[key],\r\n            //         bayAllocationPointName[key]\r\n            //     );\r\n            // });\r\n            if ((bayAllocationMonitoringData[0].MonitoringRate === \"\" ||\r\n                bayAllocationMonitoringData[0].MonitoringRate === null ||\r\n                bayAllocationMonitoringData[0].MonitoringRate=== undefined))\r\n                bayAllocationValidationErrors[\"MonitoringRate\"] = \"Bay_SCADA_InvalidMonitoringRate\";\r\n            if (bayAllocationQueueData.length > 0 ) {\r\n                bayAllocationQueueData.forEach((com) => {\r\n                    BayAllocationScadaParameterValidation.forEach((col) => {\r\n                        let err = \"\";\r\n\r\n                        if (col.validator !== undefined) {\r\n                            err = Utilities.validateField(col.validator, com[col.field]);\r\n                        }\r\n\r\n                        if (err !== \"\") {\r\n                            notification.messageResultDetails.push({\r\n                                keyFields: [col.displayName],\r\n                                keyValues: [com[col.field]],\r\n                                isSuccess: false,\r\n                                errorMessage: err,\r\n                            });\r\n                        }\r\n                    });\r\n                })\r\n            }\r\n            \r\n            if (bayAllocationPointName.length > 0  ) {\r\n                bayAllocationPointName.forEach((com) => {\r\n                    BayAllocationScadaPointTableValidation.forEach((col) => {\r\n                        let err = \"\";\r\n\r\n                        if (col.validator !== undefined) {\r\n                            err = Utilities.validateField(col.validator, com[col.field]);\r\n                        }\r\n\r\n                        if (err !== \"\" ) {\r\n                            notification.messageResultDetails.push({\r\n                                keyFields: [col.displayName],\r\n                                keyValues: [com[col.field]],\r\n                                isSuccess: false,\r\n                                errorMessage: err,\r\n                            });\r\n                        }\r\n                    });\r\n                })\r\n            }\r\n            selectedbays.map((value) =>  {\r\n                if (value.PointName === \"\") {\r\n                            notification.messageResultDetails.push({\r\n                                keyFields: [\"selectedbays\"],\r\n                                keyValues: [value.BayCode],\r\n                                isSuccess: false,\r\n                                errorMessage:\r\n                                    \"DeviceInfo_PointNameRequired\",\r\n                            });\r\n                    }\r\n                })\r\n            this.setState({ bayAllocationValidationErrors });\r\n            var returnValue = true;\r\n            if (returnValue)\r\n                returnValue = Object.values(bayAllocationValidationErrors).every(function (value) {\r\n                    return value === \"\";\r\n                });\r\n            if (notification.messageResultDetails.length > 0) {\r\n                toast(\r\n                    <ErrorBoundary>\r\n                        <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n                    </ErrorBoundary>,\r\n                    {\r\n                        autoClose:\r\n                            notification.messageType === \"success\" ? 10000 : false,\r\n                    }\r\n                );\r\n                return false;\r\n            }\r\n            return returnValue;\r\n        } catch (error) {\r\n            console.log(\"Error while Validate Save\", error)\r\n        }\r\n    }\r\n    \r\n    saveScadaConfig = () => {\r\n        try {\r\n          this.setState({ saveEnabled: false });\r\n         \r\n          let tempScadaBayMasterConfig = lodash.cloneDeep(this.state.tempScadaBayMasterConfig);\r\n          this.createGenerateConfig(tempScadaBayMasterConfig);\r\n\r\n        } catch (error) {\r\n          console.log(\"Save Scada Config Composite : Error in saveScadaConfig\");\r\n        }\r\n      };\r\n\r\n    handleSave = () => {\r\n        this.handleAuthenticationClose();\r\n        try {\r\n            let tempScadaBayMasterConfig = this.fillDetails()\r\n            if (this.validateSave()) {\r\n              let showAuthenticationLayout =this.props.userDetails.EntityResult.IsWebPortalUser !== true? true: false;\r\n                this.setState({ showAuthenticationLayout,tempScadaBayMasterConfig }, () => {\r\n                    if (showAuthenticationLayout === false) {\r\n                      this.saveScadaConfig();\r\n                    }\r\n                });\r\n            } else {\r\n                this.setState({ saveEnabled: true });\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(\r\n                \"BayallocationscadaDetailsComposite:Error occured on handleSave\",\r\n                error\r\n            );\r\n        }\r\n    }\r\n    \r\n    createGenerateConfig = (ScadaBayMasterConfig) => {\r\n        this.handleAuthenticationClose();\r\n        let bayAllocationQueueData = lodash.cloneDeep(this.state.bayAllocationQueueData);\r\n        let bayAllocationMonitoringData = lodash.cloneDeep(this.state.bayAllocationMonitoringData)\r\n        let bayAllocationPointName = lodash.cloneDeep(this.state.bayAllocationPointName)\r\n        \r\n        var notification = {\r\n            messageType: \"critical\",\r\n            message: \"BayAllocation_SavedStatus\",\r\n            messageResultDetails: [\r\n                {\r\n                    keyFields: [],\r\n                    keyValues: [],\r\n                    isSuccess: false,\r\n                    errorMessage: \"\",\r\n                },\r\n            ],\r\n        };\r\n        var obj = {\r\n            Entity: ScadaBayMasterConfig,\r\n        };\r\n        axios(\r\n            RestAPIs.CreateConfig,\r\n            Utilities.getAuthenticationObjectforPost(\r\n                obj,\r\n                this.props.tokenDetails.tokenInfo\r\n            )\r\n        )\r\n            .then((response) => {\r\n                var result = response.data;\r\n                notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n                notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n                if (result.IsSuccess === true) {\r\n                    this.setState({ bayAllocationQueueData, bayAllocationMonitoringData, bayAllocationPointName, }, () => {\r\n                        this.getBayAllocationPointNameConfigurations();\r\n                        this.getBayAllocationQueueDataConfigurations();\r\n                    });\r\n                } else {\r\n                    notification.messageResultDetails[0].errorMessage =\r\n                        result.ErrorList[0];\r\n                    this.setState({\r\n                        saveEnabled: Utilities.isInFunction(\r\n                            this.props.userDetails.EntityResult.FunctionsList,\r\n                            functionGroups.add,\r\n                            fnbaySCADAConfiguration\r\n                        )\r\n                    });\r\n                    console.log(\"Error in updatePipelineReceipt:\", result.ErrorList);\r\n                }\r\n                toast(\r\n                    <ErrorBoundary>\r\n                        <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n                    </ErrorBoundary>,\r\n                    {\r\n                        autoClose:\r\n                            notification.messageType === \"success\" ? 10000 : false,\r\n                    }\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    saveEnabled: true\r\n                });\r\n                notification.messageResultDetails[0].errorMessage = error;\r\n                toast(\r\n                    <ErrorBoundary>\r\n                        <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n                    </ErrorBoundary>,\r\n                    {\r\n                        autoClose:\r\n                            notification.messageType === \"success\" ? 10000 : false,\r\n                    }\r\n                );\r\n            });\r\n\r\n\r\n        this.setState({\r\n            bayAllocationQueueData: this.state.bayAllocationQueueData,\r\n        });\r\n    }\r\n\r\n    handleAuthenticationClose = () => {\r\n        this.setState({\r\n          showAuthenticationLayout: false,\r\n        });\r\n      };\r\n\r\n    render() {\r\n        return this.state.isReadyToRender ? (\r\n            <div>\r\n                <ErrorBoundary>\r\n                    <BayAllocationSCADAConfigurationDetails\r\n                        bayAllocationQueueData={this.state.bayAllocationQueueData}\r\n                        bayAllocationPointName={this.state.bayAllocationPointName}\r\n                        bayAllocationMonitoringData={this.state.bayAllocationMonitoringData}\r\n                        handleCellParameterDataEdit={this.handleCellParameterDataEdit}\r\n                        handleCellPointDataEdit={this.handleCellPointDataEdit}\r\n                        createGenerateConfig={this.handleSave}\r\n                        handleBaySelectionChange={this.handleBaySelectionChange}\r\n                        selectedbays={this.state.selectedbays}\r\n                        onFieldChange={this.handleChange}\r\n                        bayAllocationValidationErrors={this.state.bayAllocationValidationErrors}\r\n                        saveEnabled={this.state.saveEnabled}\r\n                    >\r\n                    </BayAllocationSCADAConfigurationDetails>\r\n                </ErrorBoundary>\r\n                {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.add}\r\n            functionGroup={fnbaySCADAConfiguration}\r\n            handleOperation={this.saveScadaConfig}\r\n            handleClose={this.handleAuthenticationClose}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n            </div>\r\n        ) : (\r\n            <LoadingPage message=\"Loading\"></LoadingPage>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userDetails: state.getUserDetails.userDetails,\r\n        tokenDetails: state.getUserDetails.TokenAuth,\r\n    };\r\n};\r\nBayAllocationSCADAConfigurationDetailsComposite.propTypes = {\r\n    onBack: PropTypes.func.isRequired,\r\n    onSaved: PropTypes.func.isRequired,\r\n    refreshScheduleUIRequired: PropTypes.func.isRequired,\r\n    addSchedule: PropTypes.func.isRequired,\r\n};\r\nexport default connect(mapStateToProps)(BayAllocationSCADAConfigurationDetailsComposite);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport BayAllocationSCADAConfigurationDetailsComposite from \"../Details/BayAllocationSCADAConfigurationDetailsComposite\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../CSS/styles.css\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nclass BayAllocationSCADAConfigurationComposite extends Component {\r\n  state = {\r\n    isReadyToRender: false,\r\n    operationsVisibility: { add: false, delete: false, shareholder: false },\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.setState({\r\n        isReadyToRender: true,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"BayAllocationSCADAConfigurationComposite:Error occurred on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n  notifyEvent = (notification) => {\r\n    try {\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\r\n        \"BayAllocationSCADAConfigurationComposite: Error occurred on savedEvent\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n    render() {\r\n\r\n        return ( \r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <div>\r\n                <ErrorBoundary>\r\n                  <TMUserActionsComposite\r\n                    operationsVisibility={this.state.operationsVisibility}\r\n                    breadcrumbItem={this.props.activeItem}\r\n                    handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n                    addVisible={false}\r\n                    deleteVisible={false}\r\n                    shrVisible={false}\r\n                  />\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                  {this.state.isReadyToRender ? (\r\n                    <BayAllocationSCADAConfigurationDetailsComposite\r\n                      Key=\"SlotConfigurationDetail\"\r\n                      onNotice={this.notifyEvent}\r\n                      genericProps={this.props.activeItem.itemProps}\r\n                    ></BayAllocationSCADAConfigurationDetailsComposite>\r\n                  ) : (\r\n                    <LoadingPage message=\"Loading\"></LoadingPage>\r\n                  )}\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                  <ToastContainer\r\n                    hideProgressBar={true}\r\n                    closeOnClick={false}\r\n                    closeButton={true}\r\n                    newestOnTop={true}\r\n                    position=\"bottom-right\"\r\n                    toastClassName=\"toast-notification-wrap\"\r\n                  />\r\n                </ErrorBoundary>\r\n              </div>\r\n            )}\r\n          </TranslationConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      userDetails: state.getUserDetails.userDetails,\r\n      tokenDetails: state.getUserDetails.TokenAuth,\r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps)(BayAllocationSCADAConfigurationComposite);\r\n  \r\n  BayAllocationSCADAConfigurationComposite.propTypes = {\r\n    activeItem: PropTypes.object,\r\n  };\r\n","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMUserActions","_ref","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","useState","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","style","alignItems","padding","children","_jsx","marginTop","ErrorBoundary","TranslationConsumer","t","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","defaultProps","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","BayAllocationSCADAConfigurationDetails","bayAllocationQueueData","bayAllocationPointName","bayAllocationMonitoringData","handleCellParameterDataEdit","createGenerateConfig","handleCellPointDataEdit","handleBaySelectionChange","selectedbays","bayAllocationValidationErrors","saveEnabled","handleEditTextBox","cellData","rowIndex","field","handleCellEditTextBox","decimalDisplayValues","toLocaleString","index","MonitoringRate","class","Checkbox","checked","IsEnabled","marginBottom","DataTable","scrollable","scrollHeight","Column","header","renderer","rowData","ParameterName","selectionMode","selection","onSelectionChange","PointName","handleIsRequiredCompartmentCell","isEnterpriseNode","BayAllocationSCADAConfigurationDetailsComposite","isReadyToRender","BayAllocationScadaValidationDef","showAuthenticationLayout","tempScadaBayMasterConfig","newVal","Bays","find","BayCode","bays","handleChange","saveScadaConfig","handleSave","handleAuthenticationClose","fillDetails","validateSave","IsWebPortalUser","ScadaBayMasterConfig","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","obj","Entity","getBayAllocationPointNameConfigurations","getBayAllocationQueueDataConfigurations","FunctionsList","functionGroups","fnbaySCADAConfiguration","toast","NotifyEvent","notificationMessage","autoClose","IsArchived","emptyMasterConfigurationInfo","AtgParameterConfiguration","Table1","forEach","Monitoring","Number","isInteger","Math","round","emptyScadaBayList","Table","test","checkedList","selectBay","filter","allBay","push","MasterConfigurationInfo","ScadaBayList","ScanPeriod","MasterConfiguration","BayList","Array","isArray","attribute","AttributeName","Code","keys","com","BayAllocationScadaParameterValidation","col","err","validator","displayName","BayAllocationScadaPointTableValidation","UserName","LoadingPage","BayAllocationSCADAConfigurationComposite","operationsVisibility","notifyEvent","activeItem","Key","onNotice","genericProps","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","view","modify","remove","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","getOptionsWithSelect","ddlOptions","selectOptionText","option","text","unshift","getCurrentDateFormat","language","window","navigator","userLanguage","moment","longDateFormat"],"sourceRoot":""}