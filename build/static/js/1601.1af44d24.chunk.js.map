{"version":3,"file":"static/js/1601.1af44d24.chunk.js","mappings":"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","sources":["Components/Composite/Common/TMDetailsKPILayout.jsx","Components/UIBase/Common/TMUserActions.jsx","Components/Composite/Common/TMUserActionsComposite.jsx","Components/Composite/Common/UserAuthentication.jsx","Components/UIBase/Common/WijmoGrid.jsx","Components/Composite/Common/WijmoGridComposite.jsx","Components/Composite/Summary/PrimeMoverSummaryComposite.jsx","Components/Composite/Entity/PrimeMoverComposite.jsx","Components/UIBase/Common/AssociatedTerminals.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","Components/UIBase/Details/AttributeDetails.jsx","JS/AttributeEntity.js","JS/DateFieldsInEntities.js","JS/FunctionGroups.js","JS/KeyCodes.js","JS/functionalUtilities.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nexport default function TMDetailsKPILayout({\r\n    KPIList,\r\n    pageName,\r\n    rowHeight,\r\n    widgetHeight,\r\n    isDraggable,\r\n    isResizable,\r\n    kpiDisplayTopBreakpoint\r\n}) {\r\n    const [KPIDisplays, setKPIDisplays] = useState(1);\r\n\r\n    const kpiDiv = React.useRef(null);\r\n\r\n    const hideKpis = () => {\r\n        let currentScrollPos = window.pageYOffset;\r\n        let KPIDisplay = KPIDisplays;\r\n\r\n        // hide kpis based on div position to top of the window \r\n        if (kpiDiv.current && kpiDiv.current.getBoundingClientRect().top < kpiDisplayTopBreakpoint) {\r\n            KPIDisplay = 0;\r\n        }\r\n        // show the kpis once at top of the screen\r\n        else if (currentScrollPos === 0) {\r\n            KPIDisplay = 1\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n        setKPIDisplays(KPIDisplay);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\") {\r\n            window.addEventListener(\"scroll\", hideKpis);\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // remove listener on unmount\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", hideKpis)\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={kpiDiv}>\r\n            {KPIDisplays === 1 ? <TranslationConsumer>\r\n                {(t) => (\r\n                    <div style={{ marginTop: \"6px\" }}>\r\n                        <ErrorBoundary>\r\n                            <KPIDashboardLayout\r\n                                kpiList={KPIList}\r\n                                isDraggable={isDraggable}\r\n                                isResizable={isResizable}\r\n                                rowHeight={rowHeight}\r\n                                widgetHeight={widgetHeight}\r\n                                pageName={pageName}\r\n                            ></KPIDashboardLayout>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n                )}\r\n            </TranslationConsumer> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nTMDetailsKPILayout.propTypes = {\r\n    kpiDisplayTopBreakpoint: PropTypes.number\r\n}\r\n\r\nTMDetailsKPILayout.defaultProps = {\r\n    kpiDisplayTopBreakpoint: 100\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n  Icon,\r\n  Breadcrumb,\r\n  Select,\r\n  Modal,\r\n  Button,\r\n  Popup,\r\n  VerticalMenu,\r\n} from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nTMUserActions.propTypes = {\r\n  operationsVisibilty: PropTypes.shape({\r\n    add: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    shareholder: PropTypes.bool,\r\n  }).isRequired,\r\n  breadcrumbItem: PropTypes.shape({\r\n    itemName: PropTypes.string,\r\n    itemCode: PropTypes.string,\r\n    itemProps: PropTypes.any,\r\n    localizedKey: PropTypes.string,\r\n    parents: PropTypes.array,\r\n    isComponent: PropTypes.bool,\r\n  }).isRequired,\r\n  shareholders: PropTypes.array.isRequired,\r\n  selectedShareholder: PropTypes.string.isRequired,\r\n  onShareholderChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  popUpContent: PropTypes.array,\r\n};\r\nTMUserActions.defaultProps = {\r\n  operationsVisibilty: { add: false, delete: false, shareholder: false },\r\n  breadcrumbItem: {\r\n    itemName: \"\",\r\n    itemCode: \"\",\r\n    localizedKey: \"\",\r\n    itemProps: {},\r\n    parents: [],\r\n    isComponent: false,\r\n  },\r\n  shareholders: [],\r\n  selectedShareholder: \"\",\r\n  popUpContent: [],\r\n  shrVisible: true,\r\n  addVisible: true,\r\n  deleteVisible: true\r\n};\r\nexport function TMUserActions({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n}) {\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  function getShareholderDropdownOptions() {\r\n    return Utilities.transferListtoOptions(shareholders);\r\n    // var List = [];\r\n    // shareholders.forEach((element) => {\r\n    //   List.push({ text: element, value: element });\r\n    // });\r\n    // return List;\r\n  }\r\n\r\n  function buildBreadcrumb() {\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Breadcrumb>\r\n            {breadcrumbItem.parents.map((parentitem) => {\r\n              return (\r\n                <Breadcrumb.Item\r\n                  onClick={() => {\r\n                    if (\r\n                      handleBreadCrumbClick !== undefined &&\r\n                      handleBreadCrumbClick !== null\r\n                    ) {\r\n                      handleBreadCrumbClick(\r\n                        parentitem.itemCode,\r\n                        breadcrumbItem.parents\r\n                      );\r\n                    }\r\n                  }}\r\n                  key={parentitem.itemCode}\r\n                >\r\n                  {t(parentitem.localizedKey)}\r\n                </Breadcrumb.Item>\r\n              );\r\n            })}\r\n            <Breadcrumb.Item key={breadcrumbItem.itemCode}>\r\n              {t(breadcrumbItem.localizedKey)}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n  function handlePopUpClick() {\r\n    if (operationsVisibilty.add) {\r\n      if (popUpContent.length > 0) {\r\n        if (popUpOpen === false) setPopUpOpen(true);\r\n        else setPopUpOpen(false);\r\n      } else {\r\n        onAdd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function popUpMenuClick(menuItem) {\r\n    setPopUpOpen(false);\r\n    onAdd(menuItem);\r\n  }\r\n  function displayIcons() {\r\n    return (\r\n      <div\r\n        style={{ float: \"right\", display: \"inline-block\", marginTop: \"10px\" }}\r\n      >\r\n        {addVisible ? <Popup\r\n          position=\"bottom right\"\r\n          className=\"popup-theme-wrap\"\r\n          element={\r\n            <div\r\n              className={\r\n                (operationsVisibilty.add\r\n                  ? \"iconCircle \"\r\n                  : \"iconCircleDisable \") + \"iconblock\"\r\n              }\r\n              onClick={handlePopUpClick}\r\n            >\r\n              <Icon\r\n                root=\"common\"\r\n                name=\"badge-plus\"\r\n                size=\"small\"\r\n                color=\"white\"\r\n              />\r\n            </div>\r\n          }\r\n          on=\"click\"\r\n          open={popUpOpen}\r\n        >\r\n          <div onMouseLeave={() => setPopUpOpen(false)}>\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <VerticalMenu>\r\n                  <VerticalMenu>\r\n                    <VerticalMenu.Header>\r\n                      {t(\"Common_Create\")}\r\n                    </VerticalMenu.Header>\r\n                    {popUpContent.map((item) => {\r\n                      return (\r\n                        <VerticalMenu.Item\r\n                          onClick={() => popUpMenuClick(item.fieldName)}\r\n                        >\r\n                          {t(item.fieldValue)}\r\n                        </VerticalMenu.Item>\r\n                      );\r\n                    })}\r\n                  </VerticalMenu>\r\n                </VerticalMenu>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n        </Popup> : \"\"}\r\n        {deleteVisible ? <div\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            if (operationsVisibilty.delete) {\r\n              setModelOpen(true);\r\n              //displayTMModalforDelete();\r\n              //onDelete();\r\n            }\r\n          }}\r\n          className={\r\n            (operationsVisibilty.delete\r\n              ? \"iconCircle \"\r\n              : \"iconCircleDisable \") + \"iconblock\"\r\n          }\r\n        >\r\n          <Icon root=\"common\" name=\"delete\" size=\"small\" color=\"white\" />\r\n        </div> : \"\"}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displayTMModalforDelete() {\r\n    //console.log(\"entered to display modal actions\");\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <Modal open={modelOpen} size=\"small\">\r\n            <Modal.Content>\r\n              <div>\r\n                <b>{t(\"Confirm_Delete\")}</b>\r\n              </div>\r\n            </Modal.Content>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"secondary\"\r\n                content={t(\"Cancel\")}\r\n                onClick={() => setModelOpen(false)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                content={t(\"PipelineDispatch_BtnSubmit\")}\r\n                onClick={() => {\r\n                  setModelOpen(false);\r\n                  onDelete();\r\n                }}\r\n              />\r\n            </Modal.Footer>\r\n          </Modal>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n    //return <TMModal open={true}></TMModal>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\" style={{ alignItems: \"flex-start\", padding: \"0px\" }}>\r\n      <div\r\n        className=\"col-9 col-sm-9 col-md-9 col-lg-10 col-xl-10\"\r\n        style={{ padding: \"0px\" }}\r\n      >\r\n        <div className=\"row\" style={{ marginTop: \"10px\", alignItems: \"\" }}>\r\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-8\">\r\n            <ErrorBoundary> {buildBreadcrumb()}</ErrorBoundary>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-4\"\r\n          //style={{ verticalAlign: \"middle\" }}\r\n          >\r\n            <TranslationConsumer>\r\n              {(t) => (\r\n                <div\r\n                  className=\"compartmentIcon\"\r\n                  style={{ justifyContent: \"flex-start\" }}\r\n                >\r\n                  {shrVisible === false ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <>\r\n                      <div>\r\n                        <h4 className=\"shrText\">{t(\"Common_Shareholder\")}:</h4>\r\n                      </div>\r\n                      <div className=\"opSelect\">\r\n                        <Select\r\n                          //className=\"opSelect\"\r\n                          placeholder={t(\"Common_Shareholder\")}\r\n                          value={selectedShareholder}\r\n                          disabled={!operationsVisibilty.shareholder}\r\n                          options={getShareholderDropdownOptions()}\r\n                          onChange={(value) => onShareholderChange(value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </TranslationConsumer>\r\n          </div>\r\n\r\n          {displayTMModalforDelete()}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-3 col-sm-3 col-md-3 col-lg-2 col-xl-2\">\r\n        {displayIcons()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActions } from \"../../UIBase/Common/TMUserActions\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nexport function TMUserActionsComposite({\r\n  operationsVisibilty,\r\n  breadcrumbItem,\r\n  shareholders,\r\n  selectedShareholder,\r\n  onShareholderChange,\r\n  onDelete,\r\n  onAdd,\r\n  popUpContent,\r\n  shrVisible,\r\n  handleBreadCrumbClick,\r\n  addVisible,\r\n  deleteVisible\r\n\r\n}) {\r\n  return (\r\n    <TMUserActions\r\n      operationsVisibilty={operationsVisibilty}\r\n      breadcrumbItem={breadcrumbItem}\r\n      shareholders={shareholders}\r\n      selectedShareholder={selectedShareholder}\r\n      onShareholderChange={onShareholderChange}\r\n      onDelete={onDelete}\r\n      onAdd={onAdd}\r\n      popUpContent={popUpContent}\r\n      shrVisible={shrVisible}\r\n      handleBreadCrumbClick={handleBreadCrumbClick}\r\n      addVisible={addVisible}\r\n      deleteVisible={deleteVisible}\r\n    ></TMUserActions>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Modal, Button, Select, Checkbox, Input, Icon } from \"@scuf/common\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { userAuthenticationValidationDef } from \"../../../JS/ValidationDef\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport cryptojs from \"crypto-js\";\r\n\r\nclass UserAuthenticationLayout extends Component {\r\n  state = {\r\n    isPasswordRequired: false,\r\n    Password: \"\",\r\n    validationErrors: Utilities.getInitialValidationErrors(\r\n      userAuthenticationValidationDef\r\n    ),\r\n    authenticationResponse: \"\",\r\n    btnAuthenticateEnabled: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.IsPasswordRequired();\r\n    } catch (error) {\r\n      console.log(\r\n        \"BaseProductDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsPasswordRequired() {\r\n    try {\r\n      let isPasswordRequired = Utilities.isPasswordEnabled(\r\n        this.props.userDetails.EntityResult.roleFunctionInfo,\r\n        this.props.functionName,\r\n        this.props.functionGroup\r\n      );\r\n      this.setState({ isPasswordRequired });\r\n\r\n      if (isPasswordRequired === false) this.props.handleOperation();\r\n    } catch (error) {\r\n      console.log(\"Error in IsPasswordRequired method:\", error);\r\n    }\r\n  }\r\n\r\n  onFieldChange = (propertyName, data) => {\r\n    this.setState({ Password: data });\r\n    const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n    if (userAuthenticationValidationDef[propertyName] !== undefined) {\r\n      validationErrors[propertyName] = Utilities.validateField(\r\n        userAuthenticationValidationDef[propertyName],\r\n        data\r\n      );\r\n      this.setState({ validationErrors, authenticationResponse: \"\" });\r\n    }\r\n\r\n  };\r\n\r\n  validatePassword = (Password) => {\r\n    this.setState({ btnAuthenticateEnabled: false });\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    if (Password === null || Password === \"\") {\r\n      validationErrors[\"Password\"] = \"UserValidationForm_ReqfldValPassword\";\r\n    }\r\n    this.setState({ validationErrors });\r\n    var returnValue = true;\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  // AuthenticateUser = () => {\r\n  //     if (this.validatePassword(this.state.Password)) {\r\n  //         this.props.parentCallBack();\r\n  //     }\r\n  // }\r\n  onCloseClick = () => {\r\n    this.setState(\r\n      {\r\n        isPasswordRequired: false,\r\n        authenticationResponse: \"\",\r\n        btnAuthenticateEnabled: true,\r\n      },\r\n      () => this.props.handleClose()\r\n    );\r\n  };\r\n\r\n  // unescapeBase64Url = function (key) {\r\n  //   return key.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  // };\r\n\r\n  // escapeBase64Url = function (key) {\r\n  //   return key.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n  // };\r\n\r\n  AuthenticateUser = () => {\r\n    if (this.validatePassword(this.state.Password)) {\r\n      this.setState({ authenticationResponse: \"\" });\r\n      // this.props.parentCallBack();\r\n      try {\r\n        var keySize = 256;\r\n        var iterations = 100;\r\n        //assign the entered password\r\n        var msg = this.state.Password;\r\n        //assign the username from GetLoggedInUserDetails\r\n        var pass = this.props.Username;\r\n        var salt = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var key = cryptojs.PBKDF2(pass, salt, {\r\n          keySize: keySize / 32,\r\n          iterations: iterations,\r\n        });\r\n\r\n        var iv = cryptojs.lib.WordArray.random(128 / 8);\r\n\r\n        var encrypted = cryptojs.AES.encrypt(msg, key, {\r\n          iv: iv,\r\n          padding: cryptojs.pad.Pkcs7,\r\n          mode: cryptojs.mode.CBC,\r\n        });\r\n        var transitmessage =\r\n          salt.toString() + iv.toString() + encrypted.toString();\r\n        //console.log(\"EncryptedPWD\", transitmessage);\r\n\r\n        axios(\r\n          RestAPIs.ValidateUserCredentials +\r\n          \"?encryptedPassword=\" +\r\n          encodeURIComponent(transitmessage),\r\n          Utilities.getAuthenticationObjectforGet(\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            var result = response.data;\r\n            if (result.IsSuccess === true) {\r\n              if (result.EntityResult.toLowerCase() === \"true\") {\r\n                this.setState({ isPasswordRequired: false });\r\n                this.props.handleOperation();\r\n              } else {\r\n                this.setState({\r\n                  authenticationResponse: result.ErrorList[0],\r\n                  btnAuthenticateEnabled: true,\r\n                });\r\n              }\r\n            } else {\r\n              this.setState({\r\n                authenticationResponse: result.ErrorList[0],\r\n                btnAuthenticateEnabled: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              authenticationResponse: error,\r\n              btnAuthenticateEnabled: true,\r\n            });\r\n          });\r\n      } catch (error) {\r\n        this.setState({\r\n          authenticationResponse: error,\r\n          btnAuthenticateEnabled: true,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ btnAuthenticateEnabled: true });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isPasswordRequired === true ? (\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <Modal open={true} size=\"mini\">\r\n                <Modal.Content>\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col col-lg-8\"\r\n                      style={{ marginLeft: \"10px\" }}\r\n                    >\r\n                      <h4>{t(\"User_Authentication\")}</h4>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-12 col-lg-3\"\r\n                      style={{ textAlign: \"right\" }}\r\n                      onClick={this.onCloseClick}\r\n                    >\r\n                      <Icon root=\"common\" name=\"close\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <div className=\"col col-lg-12\">\r\n                      <label>\r\n                        <h5>\r\n                          {t(\"UserValidation_Form_AccountName\")}:\r\n                          {this.props.Username}\r\n                        </h5>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col col-lg-12\">\r\n                      <Input\r\n                        fluid\r\n                        type=\"password\"\r\n                        disablePasswordToggle={false}\r\n                        value={this.state.Password}\r\n                        indicator=\"required\"\r\n                        onChange={(data) =>\r\n                          this.onFieldChange(\"Password\", data)\r\n                        }\r\n                        label={t(\"AccessCardInfo_x_Pwd\")}\r\n                        error={t(this.state.validationErrors.Password)}\r\n                        reserveSpace={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                  <span className=\"ui error-message autherrormsg\">\r\n                    {t(this.state.authenticationResponse)}\r\n                  </span>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={!this.state.btnAuthenticateEnabled}\r\n                    content={t(\"UserValidationForm_Authentication\")}\r\n                    onClick={this.AuthenticateUser}\r\n                  />\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </TranslationConsumer>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAuthenticationLayout);\r\n\r\nUserAuthenticationLayout.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n  terminalCodes: PropTypes.array.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as wjCore from \"@grapecity/wijmo\";\r\nimport * as wjGrid from \"@grapecity/wijmo.grid\";\r\nimport {\r\n  FlexGrid,\r\n  FlexGridColumn,\r\n  FlexGridCellTemplate,\r\n} from \"@grapecity/wijmo.react.grid\";\r\nimport { FlexGridFilter } from \"@grapecity/wijmo.react.grid.filter\";\r\nimport { Operator } from \"@grapecity/wijmo.grid.filter\";\r\nimport { FlexGridSearch } from \"@grapecity/wijmo.react.grid.search\";\r\nimport { CollectionView } from \"@grapecity/wijmo\";\r\nimport { CollectionViewNavigator, ListBox } from \"@grapecity/wijmo.react.input\";\r\nimport { Selector } from \"@grapecity/wijmo.grid.selector\";\r\nimport { HeadersVisibility } from \"@grapecity/wijmo.grid\";\r\nimport { showPopup, hidePopup, PopupPosition } from \"@grapecity/wijmo\";\r\nimport * as wjcGridXlsx from \"@grapecity/wijmo.grid.xlsx\";\r\nimport \"@grapecity/wijmo.styles/wijmo.css\";\r\nimport { GroupPanel } from \"@grapecity/wijmo.react.grid.grouppanel\";\r\nimport { Button, Card, Popup } from \"@scuf/common\";\r\nimport { TranslationConsumer, useTranslation } from \"@scuf/localization\";\r\nimport { Icon } from \"@scuf/common\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport * as loadash from \"lodash\";\r\nimport \"@grapecity/wijmo.touch\";\r\n\r\nconst WijmoGrid = (props) => {\r\n  const [flex, setFlex] = useState(null);\r\n  const [translator] = useTranslation();\r\n  const _getData = (pageLength) => {\r\n    return new CollectionView(props.sourceData, {\r\n      pageSize: pageLength,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState(_getData(props.rowsPerPage));\r\n  const theGrid = React.createRef();\r\n  const theSearch = React.createRef();\r\n  const gridFilter = React.createRef();\r\n  const pagingComponent = React.createRef();\r\n  const colPicker = React.useRef();\r\n\r\n  // to keep track of selected rows\r\n  const selectedRows = React.useRef(props.selectionRequired ? [] : null);\r\n\r\n  // to initialize grid checkbox selection\r\n  let selector = null;\r\n\r\n  //Initialize grid\r\n  const gridInitialized = (grid) => {\r\n    try {\r\n      // localize grid filter\r\n      customizeFilterConditions();\r\n\r\n      if (props.onRowClick) {\r\n        // add row click event handler\r\n        grid.addEventListener(grid.hostElement, \"click\", (e) => {\r\n          let ht = grid.hitTest(e);\r\n          // condition to check if cell is not a grouped cell and a data cell\r\n          if (\r\n            ht.target.closest(\".wj-cell\") &&\r\n            ![...ht.target.closest(\".wj-cell\").classList].includes(\r\n              \"wj-group\"\r\n            ) &&\r\n            ht.cellType === wjGrid.CellType.Cell\r\n          ) {\r\n            // fetch row data\r\n            const rowData = grid.rows[ht.row].dataItem;\r\n            props.onRowClick(rowData);\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      grid.select(-1, -1);\r\n\r\n      setFlex(grid);\r\n      if (props.selectionRequired) {\r\n        // enable checkbox selection\r\n        selector = new Selector(grid, {\r\n          itemChecked: (s, e) => {\r\n            // if only single checkbox selection is required\r\n            if (props.singleSelection) {\r\n              grid.rows\r\n                .filter((row) => {\r\n                  return (\r\n                    row.isSelected &&\r\n                    selectedRows.current.filter((item) =>\r\n                      loadash.isEqual(item, row.dataItem)\r\n                    ).length === 1\r\n                  );\r\n                })\r\n                .forEach((row) => {\r\n                  row.isSelected = false;\r\n                });\r\n            }\r\n\r\n            // pass row data as parameter to checkbox selection handler\r\n            props.onSelectionHandle(\r\n              grid.rows\r\n                .filter((r) => r.isSelected)\r\n                .map((selectedRow) => selectedRow.dataItem)\r\n            );\r\n          },\r\n          // if only single checkbox selection is required\r\n          showCheckAll: !props.singleSelection,\r\n        });\r\n\r\n        let theGrid = selector.column.grid;\r\n        selector.column = theGrid.rowHeaders.columns[0];\r\n        theGrid.headersVisibility = HeadersVisibility.All;\r\n        theGrid.selectionMode = wjCore.asEnum(\"None\", wjGrid.SelectionMode);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in gridInitialized: \" + error);\r\n    }\r\n  };\r\n\r\n  //Update grid when data changes\r\n  useEffect(() => {\r\n    try {\r\n      if (theGrid != null) {\r\n        //Connect search to the grid\r\n        let grid = theGrid.current.control;\r\n        let search = theSearch.current.control;\r\n        search.grid = grid;\r\n      }\r\n\r\n      setData(_getData(props.rowsPerPage));\r\n    } catch (error) {\r\n      console.log(\"Error in grid update:\", error);\r\n    }\r\n  }, [props.sourceData]);\r\n\r\n  // Pre-select grid rows based on selectedItems props\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && props.selectionRequired) {\r\n        // clear the selectedRows array\r\n        selectedRows.current.length = 0;\r\n        // add selectedItems array items to selectedRows\r\n        selectedRows.current.push(...props.selectedItems);\r\n\r\n        flex.rows.forEach((row) => {\r\n          if (\r\n            props.selectedItems.filter((item) =>\r\n              loadash.isEqual(item, row.dataItem)\r\n            ).length === 1\r\n          ) {\r\n            // checks the row checkbox\r\n            row.isSelected = true;\r\n          } else {\r\n            // unchecks the row checkbox\r\n            row.isSelected = false;\r\n          }\r\n        });\r\n\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in pre-selecting rows:\", error);\r\n    }\r\n  }, [props.selectedItems]);\r\n\r\n  //Load the state of grid\r\n  useEffect(() => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(props.parentComponent + \"GridState\") &&\r\n        localStorage.getItem(props.parentComponent + \"GridState\") !== \"null\" &&\r\n        flex\r\n      ) {\r\n        // restore grid settings\r\n        let gridState = JSON.parse(\r\n          localStorage.getItem(props.parentComponent + \"GridState\")\r\n        );\r\n        let newFlex = flex;\r\n\r\n        // restore column picker settings\r\n        newFlex.columns.forEach((col) => {\r\n          let matchedCol = gridState.columns.filter(\r\n            (colSetting) => colSetting.binding === col.binding\r\n          );\r\n          col.visible =\r\n            matchedCol.length > 0 ? matchedCol[0].visible : col.visible;\r\n        });\r\n\r\n        // restore filter settings\r\n        gridFilter.current.control.filterDefinition =\r\n          gridState.filterDefinition;\r\n\r\n        // restore sort settings\r\n        newFlex.collectionView.deferUpdate(() => {\r\n          newFlex.collectionView.sortDescriptions.clear();\r\n          for (let i = 0; i < gridState.sortDescriptions.length; i++) {\r\n            let sortDesc = gridState.sortDescriptions[i];\r\n            newFlex.collectionView.sortDescriptions.push(\r\n              new wjCore.SortDescription(sortDesc.property, sortDesc.ascending)\r\n            );\r\n          }\r\n        });\r\n\r\n        // restore grouping settings\r\n        for (let i = 0; i < gridState.groupDescriptions.length; i++) {\r\n          newFlex.collectionView.groupDescriptions.push(\r\n            new wjCore.PropertyGroupDescription(gridState.groupDescriptions[i])\r\n          );\r\n          newFlex.columns.filter(\r\n            (col) => col.binding === gridState.groupDescriptions[i]\r\n          )[0].visible = false;\r\n        }\r\n\r\n        if (\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") &&\r\n          sessionStorage.getItem(props.parentComponent + \"GridState\") !== \"null\"\r\n        ) {\r\n          let gridSessionState = JSON.parse(\r\n            sessionStorage.getItem(props.parentComponent + \"GridState\")\r\n          );\r\n          // restore paging settings\r\n          newFlex.collectionView.moveToPage(\r\n            newFlex.collectionView.pageCount - 1 >= gridSessionState.pageIndex\r\n              ? gridSessionState.pageIndex\r\n              : newFlex.collectionView.pageCount - 1\r\n          );\r\n\r\n          // restore search settings\r\n          if (theSearch) {\r\n            theSearch.current.control.text = gridSessionState.searchText;\r\n          }\r\n        }\r\n\r\n        setFlex(newFlex);\r\n        flex.refresh();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in restoring local storage settings: \", error);\r\n    }\r\n  }, [data]);\r\n\r\n  // Set Column Picker Properties\r\n  useEffect(() => {\r\n    try {\r\n      if (flex && colPicker.current && props.columnPickerRequired) {\r\n        colPicker.current.itemsSource = flex.columns;\r\n        colPicker.current.checkedMemberPath = \"visible\";\r\n        colPicker.current.displayMemberPath = \"header\";\r\n        colPicker.current.lostFocus.addHandler(() => {\r\n          hidePopup(colPicker.current.hostElement);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in initializing column picker properties:\", error);\r\n    }\r\n  }, [colPicker.current]);\r\n\r\n  useEffect(() => {\r\n    // remove column picker pop-up on component unmount\r\n    return () => {\r\n      if (props.columnPickerRequired && colPicker.current) {\r\n        hidePopup(colPicker.current.hostElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // export grid data to excel\r\n  const exportExcel = () => {\r\n    try {\r\n      let gridFlex = flex;\r\n      //to download all rows from all pages\r\n      gridFlex.itemsSource.pageSize = props.sourceData.length;\r\n      setFlex(gridFlex);\r\n      wjcGridXlsx.FlexGridXlsxConverter.saveAsync(\r\n        flex,\r\n        {\r\n          includeColumnHeaders: true,\r\n          includeCellStyles: false,\r\n          formatItem: null,\r\n        },\r\n        props.exportFileName\r\n      );\r\n\r\n      //to restore paging\r\n      gridFlex.itemsSource.pageSize = props.rowsPerPage;\r\n      setFlex(gridFlex);\r\n    } catch (error) {\r\n      console.log(\"Error in export grid to excel:\", error);\r\n    }\r\n  };\r\n\r\n  const terminalPopOver = (terminalCodes) => {\r\n    if (terminalCodes.split(\",\").length > props.terminalsToShow) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={terminalCodes.split(\",\").length}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return terminalCodes;\r\n    }\r\n  };\r\n\r\n  const displayValues = (value, columnDetail) => {\r\n    if (columnDetail !== undefined && columnDetail !== null) {\r\n      if (typeof value === \"boolean\" || columnDetail.Name === \"Active\") {\r\n        if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n        else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n      } else if (value === \"\" || value === null || value === undefined) {\r\n        return value;\r\n      } else if (\r\n        (columnDetail.Name === \"TerminalCodes\" ||\r\n          columnDetail.PopOver === \"1\") &&\r\n        value !== null\r\n      ) {\r\n        return terminalPopOver(value);\r\n      }\r\n      // var columnType = columnDetails.find(function (detail) {\r\n      //   if (detail.Name === field) {\r\n      //     return detail;\r\n      //   }\r\n      // });\r\n      else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"DateTime\"\r\n      ) {\r\n        return (\r\n          new Date(value).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(value).toLocaleTimeString()\r\n        );\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Date\"\r\n      ) {\r\n        return new Date(value).toLocaleDateString();\r\n      } else if (\r\n        columnDetail.DataType !== undefined &&\r\n        columnDetail.DataType === \"Time\"\r\n      ) {\r\n        return new Date(value).toLocaleTimeString();\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  //Initialize Column Picker\r\n  const initializedPicker = (picker) => {\r\n    if (props.columnPickerRequired) {\r\n      colPicker.current = picker;\r\n    }\r\n  };\r\n\r\n  // Column Picker Handler\r\n  const colPickerClickHandler = (event) => {\r\n    try {\r\n      let host = colPicker.current.hostElement;\r\n      if (!host.offsetHeight) {\r\n        showPopup(host, event.target, PopupPosition.Below, true, false);\r\n        colPicker.current.focus();\r\n      } else {\r\n        hidePopup(host, true, true);\r\n        flex.focus();\r\n      }\r\n\r\n      colPicker.current.focus();\r\n      event.preventDefault();\r\n    } catch (error) {\r\n      console.log(\"Error in Column Picker click event:\", error);\r\n    }\r\n  };\r\n\r\n  const saveGridState = () => {\r\n    try {\r\n      if (flex && gridFilter.current) {\r\n        // grid column, filter, sort and grouping settings\r\n        let gridState = {\r\n          columns: flex.columns.map((col) => {\r\n            return {\r\n              binding: col.binding,\r\n              visible: col.visible,\r\n            };\r\n          }),\r\n          filterDefinition: gridFilter.current.control.filterDefinition,\r\n          sortDescriptions: flex.collectionView.sortDescriptions.map(\r\n            (sortDesc) => {\r\n              return {\r\n                property: sortDesc.property,\r\n                ascending: sortDesc.ascending,\r\n              };\r\n            }\r\n          ),\r\n          groupDescriptions: flex.collectionView.groupDescriptions.map(\r\n            (group) => {\r\n              if (group.propertyName) {\r\n                return group.propertyName;\r\n              }\r\n\r\n              return null;\r\n            }\r\n          ),\r\n        };\r\n\r\n        // add class to grouped checkbox div element\r\n        if (\r\n          flex.collectionView.groupDescriptions &&\r\n          flex.collectionView.groupDescriptions.length > 0\r\n        ) {\r\n          let groupedCheckboxes = [\r\n            ...document.getElementsByClassName(\"wj-column-selector-group\"),\r\n          ];\r\n          groupedCheckboxes.forEach((chkbx) => {\r\n            chkbx.parentNode.parentNode.classList.add(\"wj-grouped-checkbox\");\r\n          });\r\n        }\r\n\r\n        // grid paging and search settings\r\n        let sessionState = {\r\n          pageIndex: flex.collectionView.pageIndex,\r\n          searchText: theSearch.current.control.text,\r\n        };\r\n\r\n        localStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(gridState)\r\n        );\r\n        sessionStorage.setItem(\r\n          props.parentComponent + \"GridState\",\r\n          JSON.stringify(sessionState)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in saving grid state\");\r\n    }\r\n  };\r\n\r\n  // customize grid filter text and dropdowns\r\n  const customizeFilterConditions = () => {\r\n    // localize the FlexGrid filter\r\n    let filter = wjCore.culture.FlexGridFilter,\r\n      operator = Operator;\r\n    wjCore.culture.FlexGridFilter.header = translator(\"WijmoGridFilterHeader\");\r\n    wjCore.culture.FlexGridFilter.ascending =\r\n      \"\\u2191 \" + translator(\"WijmoGridFilterAscending\");\r\n    wjCore.culture.FlexGridFilter.descending =\r\n      \"\\u2193 \" + translator(\"WijmoGridFilterDescending\");\r\n    wjCore.culture.FlexGridFilter.apply = translator(\"RoleAdminEdit_Apply\");\r\n    wjCore.culture.FlexGridFilter.clear = translator(\"OrderCreate_btnClear\");\r\n    wjCore.culture.FlexGridFilter.conditions = translator(\r\n      \"WijmoGridFilterCondition\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.values = translator(\"WijmoGridFilterValue\");\r\n    wjCore.culture.FlexGridFilter.search = translator(\r\n      \"LoadingDetailsView_SearchGrid\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.selectAll = translator(\r\n      \"WijmoGridFilterSelectAll\"\r\n    );\r\n    wjCore.culture.FlexGridFilter.and = translator(\"WijmoGridFilterAnd\");\r\n    wjCore.culture.FlexGridFilter.or = translator(\"WijmoGridFilterOr\");\r\n    wjCore.culture.FlexGridFilter.cancel = translator(\"AccessCardInfo_Cancel\");\r\n    // wjCore.culture.FlexGridFilter.null = 'test';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.and = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.asc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dialog = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.dsc = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.edit = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.op2 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.or = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.search = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val1 = '';\r\n    // wjCore.culture.FlexGridFilter.ariaLabels.val2 = '';\r\n\r\n    // localize FlexGrid filter operators\r\n    filter.stringOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterBeginsWith\"), op: operator.BW },\r\n      { name: translator(\"WijmoGridFilterEndsWith\"), op: operator.EW },\r\n      { name: translator(\"WijmoGridFilterContains\"), op: operator.CT },\r\n      { name: translator(\"WijmoGridFilterDoesNotContain\"), op: operator.NC },\r\n    ];\r\n    filter.numberOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n      { name: translator(\"WijmoGridFilterGreaterThan\"), op: operator.GT },\r\n      { name: translator(\"WijmoGridFilterLessThan\"), op: operator.LT },\r\n      {\r\n        name: translator(\"WijmoGridFilterGreaterThanOrEqual\"),\r\n        op: operator.GE,\r\n      },\r\n      { name: translator(\"WijmoGridFilterLessThanOrEqual\"), op: operator.LE },\r\n    ];\r\n    filter.dateOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterDateEarlierThan\"), op: operator.LT },\r\n      { name: translator(\"WijmoGridFilterDateLaterThan\"), op: operator.GT },\r\n    ];\r\n    filter.booleanOperators = [\r\n      { name: translator(\"WijmoGridFilterUnset\"), op: null },\r\n      { name: translator(\"WijmoGridFilterEqual\"), op: operator.EQ },\r\n      { name: translator(\"WijmoGridFilterNotEqual\"), op: operator.NE },\r\n    ];\r\n  };\r\n\r\n  // set column width based on screen size\r\n  const getWidth = (columnDetails) => {\r\n    try {\r\n      const screenWidth = window.screen.width;\r\n      if (screenWidth < 1024) {\r\n        if (columnDetails.WidthPx && columnDetails.WidthPx !== \"\")\r\n          return parseInt(columnDetails.WidthPx);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in width:\", error);\r\n    }\r\n\r\n    return columnDetails.WidthPercentage.includes(\"*\")\r\n      ? columnDetails.WidthPercentage\r\n      : parseInt(columnDetails.WidthPercentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pl-1\">\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <React.Fragment>\r\n              <div className=\"row pl-0\">\r\n                <div className=\"col-10 col-sm-12 col-md-5 col-lg-6\">\r\n                  <FlexGridSearch\r\n                    class=\"ui single-input\"\r\n                    ref={theSearch}\r\n                    placeholder={t(\"LoadingDetailsView_SearchGrid\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-10 col-sm-12 col-md-7 col-lg-6\">\r\n                  <div style={{ float: \"right\" }}>\r\n                    {props.columnPickerRequired ? (\r\n                      <Button\r\n                        id=\"colPicker\"\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        onClick={(event) => colPickerClickHandler(event)}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridColumnPicker\")}\r\n                        </div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          <Icon\r\n                            name=\"caret-down\"\r\n                            className=\"btnIcon\"\r\n                            size=\"small\"\r\n                          />\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.exportRequired ? (\r\n                      <Button\r\n                        actionType=\"button\"\r\n                        type=\"primary\"\r\n                        className=\"mt-3 mt-md-0\"\r\n                        onClick={exportExcel}\r\n                      >\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                          {t(\"WijmoGridExport\")}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            className=\"icon-Xls\"\r\n                            style={{\r\n                              fontSize: \"17px\",\r\n                              position: \"absolute\",\r\n                              top: \"3px\",\r\n                            }}\r\n                          ></span>\r\n                        </div>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tableScroll\">\r\n                {props.columnGroupingRequired ? (\r\n                  <GroupPanel\r\n                    className=\"group-panel\"\r\n                    grid={flex}\r\n                    placeholder={t(\"WijmoGridGroupPanelPlaceholder\")}\r\n                  />\r\n                ) : null}\r\n                <ErrorBoundary>\r\n                  <FlexGrid\r\n                    ref={theGrid}\r\n                    autoGenerateColumns={false}\r\n                    alternatingRowStep={0}\r\n                    autoRowHeights={true}\r\n                    headersVisibility=\"Column\"\r\n                    itemsSource={data}\r\n                    selectionMode={wjCore.asEnum(\"None\", wjGrid.SelectionMode)}\r\n                    initialized={gridInitialized}\r\n                    virtualizationThreshold={[0, 10000]}\r\n                    onUpdatedView={saveGridState}\r\n                  >\r\n                    <FlexGridFilter ref={gridFilter} />\r\n                    {props.columns.map((column) => {\r\n                      return (\r\n                        <FlexGridColumn\r\n                          header={t(column.Name)}\r\n                          key={column.Name}\r\n                          binding={column.Name}\r\n                          width={getWidth(column)}\r\n                          minWidth={100}\r\n                          isReadOnly={true}\r\n                          wordWrap={true}\r\n                          align=\"left\"\r\n                        >\r\n                          <FlexGridCellTemplate\r\n                            cellType=\"Cell\"\r\n                            template={(context) => {\r\n                              return (\r\n                                <span\r\n                                  style={\r\n                                    props.conditionalRowStyleCheck == null ||\r\n                                    !props.conditionalRowStyleCheck(\r\n                                      context.item\r\n                                    )\r\n                                      ? null\r\n                                      : { ...props.conditionalRowStyles }\r\n                                  }\r\n                                >\r\n                                  {displayValues(\r\n                                    context.item[column.Name],\r\n                                    column\r\n                                  )}\r\n                                </span>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FlexGridColumn>\r\n                      );\r\n                    })}\r\n                  </FlexGrid>\r\n                </ErrorBoundary>\r\n                {props.columnPickerRequired ? (\r\n                  <div className=\"column-picker-div\">\r\n                    <ListBox\r\n                      className=\"column-picker\"\r\n                      initialized={(picker) => initializedPicker(picker)}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"row\">\r\n                <CollectionViewNavigator\r\n                  ref={pagingComponent}\r\n                  className=\"ml-auto mr-auto mt-3\"\r\n                  headerFormat={t(\"WijmoGridPagingTemplate\")}\r\n                  byPage={true}\r\n                  cv={data}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nWijmoGrid.propTypes = {\r\n  sourceData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  exportRequired: PropTypes.bool.isRequired,\r\n  exportFileName: PropTypes.string,\r\n  selectionRequired: PropTypes.bool,\r\n  columnPickerRequired: PropTypes.bool,\r\n  columnGroupingRequired: PropTypes.bool,\r\n  conditionalRowStyleCheck: PropTypes.func,\r\n  conditionalRowStyles: PropTypes.object,\r\n  rowsPerPage: PropTypes.number,\r\n  onSelectionHandle: PropTypes.func,\r\n  parentComponent: PropTypes.string.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  terminalsToShow: PropTypes.number,\r\n  singleSelection: PropTypes.bool,\r\n  selectedItems: PropTypes.array,\r\n};\r\n\r\nWijmoGrid.defaultProps = {\r\n  sourceData: [],\r\n  columns: [],\r\n  exportRequired: true,\r\n  exportFileName: \"Grid.xlsx\",\r\n  selectionRequired: false,\r\n  columnPickerRequired: false,\r\n  columnGroupingRequired: false,\r\n  rowsPerPage: 10,\r\n  terminalsToShow: 2,\r\n  singleSelection: false,\r\n  selectedItems: [],\r\n};\r\n\r\nexport default WijmoGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WijmoGrid from '../../UIBase/Common/WijmoGrid';\r\n\r\nconst WijmoGridComposite = (props) => {\r\n    return (\r\n        <WijmoGrid\r\n            sourceData={props.data}\r\n            columns={props.columns}\r\n            exportRequired={props.exportRequired}\r\n            exportFileName={props.exportFileName}\r\n            columnPickerRequired={props.columnPickerRequired}\r\n            selectionRequired={props.selectionRequired}\r\n            columnGroupingRequired={props.columnGroupingRequired}\r\n            conditionalRowStyleCheck={props.conditionalRowStyleCheck}\r\n            conditionalRowStyles={props.conditionalRowStyles}\r\n            rowsPerPage={props.rowsPerPage}\r\n            onSelectionHandle={props.onSelectionHandle}\r\n            onRowClick={props.onRowClick}\r\n            parentComponent={props.parentComponent}\r\n            terminalsToShow={props.terminalsToShow}\r\n            singleSelection={props.singleSelection}\r\n            selectedItems={props.selectedItems}\r\n        />\r\n    )\r\n}\r\n\r\nWijmoGridComposite.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired,\r\n    exportRequired: PropTypes.bool.isRequired,\r\n    exportFileName: PropTypes.string,\r\n    selectionRequired: PropTypes.bool,\r\n    columnPickerRequired: PropTypes.bool,\r\n    columnGroupingRequired: PropTypes.bool,\r\n    conditionalRowStyleCheck: PropTypes.func,\r\n    conditionalRowStyles: PropTypes.object,\r\n    rowsPerPage: PropTypes.number,\r\n    onSelectionHandle: PropTypes.func,\r\n    parentComponent: PropTypes.string.isRequired,\r\n    onRowClick: PropTypes.func,\r\n    terminalsToShow: PropTypes.number,\r\n    singleSelection: PropTypes.bool,\r\n    selectedItems: PropTypes.array\r\n}\r\n\r\nexport default WijmoGridComposite;","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nexport function PrimeMoverSummaryPageComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  terminalsToShow,\r\n  selectionRequired,     \r\n  onSelectionChange,\r\n  onRowClick,\r\n  parentComponent\r\n}) {\r\n  return (\r\n      <WijmoGridComposite\r\n      data={tableData}\r\n      columns={columnDetails}\r\n      rowsPerPage={pageSize}\r\n      exportRequired={exportRequired}\r\n      exportFileName={exportFileName}\r\n      columnPickerRequired={columnPickerRequired}\r\n      columnGroupingRequired={columnGroupingRequired}\r\n      terminalsToShow={terminalsToShow}\r\n      selectionRequired={selectionRequired}\r\n      onSelectionHandle={onSelectionChange}\r\n      onRowClick={onRowClick}\r\n      parentComponent={parentComponent}\r\n      ></WijmoGridComposite>\r\n  );\r\n}","import React from \"react\";\r\nimport {\r\n  functionGroups,\r\n  fnPrimeMover,\r\n  fnKPIInformation,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport axios from \"axios\";\r\nimport { Icon, Button } from \"@scuf/common\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { PrimeMoverSummaryPageComposite } from \"../Summary/PrimeMoverSummaryComposite\";\r\nimport PrimeMoverDetailsComposite from \"../Details/PrimeMoverDetailsComposite\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport { kpiPrimeMoverList } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass PrimeMoverComposite extends React.PureComponent {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: false, delete: false, shareholder: true },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    data: {},\r\n    primeMoverKPIList: [],\r\n    showAuthenticationLayout: false,\r\n  };\r\n\r\n  componentName = \"PrimeMoverComponent\";\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: {},\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"PrimeMoverComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      let { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({\r\n        selectedShareholder: shareholder,\r\n        isReadyToRender: false,\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n      });\r\n      this.getPrimeMoverList(shareholder);\r\n      if (\r\n        this.props.tractorWithTrailer === undefined ||\r\n        this.props.tractorWithTrailer === false\r\n      )\r\n        this.getKPIList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"PrimeMoverComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleRowClick = (item) => {\r\n    try {\r\n      if (this.props.tractorWithTrailer === undefined) {\r\n        const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnPrimeMover\r\n        );\r\n        operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnPrimeMover\r\n        );\r\n        operationsVisibilty.shareholder = false;\r\n        this.setState({\r\n          isDetails: true,\r\n          selectedRow: item,\r\n          selectedItems: [item],\r\n          operationsVisibilty,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"PrimeMoverComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n  handleSelection = (items) => {\r\n    try {\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n\r\n      operationsVisibilty.delete =\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnPrimeMover\r\n        );\r\n\r\n      this.setState({ selectedItems: items, operationsVisibilty }, () => {\r\n        if (this.props.tractorWithTrailer === true) {\r\n          this.props.handleSelectClick(\r\n            \"primeMover\",\r\n            this.state.selectedItems,\r\n            this.state.data.Column\r\n          );\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"PrimeMoverComposite:Error occured on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDelete = () => {\r\n    try {\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n\r\n      var deletePrimeMoverKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        let shCode = this.state.selectedShareholder;\r\n        let primeMoverCode = this.state.selectedItems[i][\"Common_Code\"];\r\n        let carrierCode =\r\n          this.state.selectedItems[i][\"PrimeMover_CarrierCompany\"];\r\n        let keyData = {\r\n          keyDataCode: 0,\r\n          ShareHolderCode: shCode,\r\n          KeyCodes: [\r\n            { Key: KeyCodes.primeMoverCode, Value: primeMoverCode },\r\n            { key: KeyCodes.carrierCode, Value: carrierCode },\r\n          ],\r\n        };\r\n        deletePrimeMoverKeys.push(keyData);\r\n      }\r\n\r\n      axios(\r\n        RestAPIs.DeletePrimeMover,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deletePrimeMoverKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          // console.log(response.data);\r\n          let result = response.data;\r\n          let isRefreshDataRequire = result.IsSuccess;\r\n\r\n          if (\r\n            result.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            let failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n\r\n          let notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"PrimeMover_DeletionStatus\",\r\n            [\"PrimeMoverCode\"]\r\n          );\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({ isReadyToRender: false, showAuthenticationLayout: false, });\r\n            this.getPrimeMoverList(this.state.selectedShareholder);\r\n            if (\r\n              this.props.tractorWithTrailer === undefined ||\r\n              this.props.tractorWithTrailer === false\r\n            )\r\n              this.getKPIList(this.state.selectedShareholder);\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n              showAuthenticationLayout: false,\r\n            });\r\n          } else {\r\n            operationsVisibilty.delete = true;\r\n            this.setState({\r\n               operationsVisibilty,\r\n               showAuthenticationLayout: false,\r\n             });\r\n          }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0)\r\n              messageResult.keyFields[0] = \"PrimeMover_Code\";\r\n          });\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    } catch (error) {\r\n      console.log(\"PrimeMoverComposite:Error occured on handleDelete\", error);\r\n    }\r\n  };\r\n\r\n  //Get KPI for Prime Mover\r\n  getKPIList(shareholder) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      var notification = {\r\n        message: \"\",\r\n        messageType: \"critical\",\r\n        messageResultDetails: [],\r\n      };\r\n      let objKPIRequestData = {\r\n        PageName: kpiPrimeMoverList,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              primeMoverKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ primeMoverKPIList: [] });\r\n            console.log(\"Error in Prime Mover KPIList:\", result.ErrorList);\r\n            notification.messageResultDetails.push({\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: result.ErrorList[0],\r\n            });\r\n          }\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Prime Mover KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  getPrimeMoverList(shareholder) {\r\n    let transportationType = Constants.TransportationType.ROAD;\r\n\r\n    axios(\r\n      RestAPIs.GetPrimeMoverListForRole +\r\n      \"?ShareholderCode=\" +\r\n      shareholder +\r\n      \"&Transportationtype=\" +\r\n      transportationType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            data: { ...result.EntityResult },\r\n            isReadyToRender: true,\r\n          });\r\n          if (\r\n            this.props.tractorWithTrailer === true &&\r\n            this.props.tractorSelection.length > 0\r\n          ) {\r\n            let primeMovers = this.props.tractorSelection;\r\n            if (primeMovers.length > 0) {\r\n              let tractorSelection = [];\r\n              primeMovers.forEach((primeMover) => {\r\n                let row = result.EntityResult.Table.find(\r\n                  (row) => row.Common_Code === primeMover.PrimeMover.Code\r\n                );\r\n                if (row !== undefined) tractorSelection.push(row);\r\n              });\r\n              this.setState({ selectedItems: tractorSelection });\r\n              this.props.getTractorList(\r\n                tractorSelection,\r\n                result.EntityResult.Column\r\n              );\r\n            }\r\n          }\r\n        } else {\r\n          this.setState({ data: {}, isReadyToRender: true });\r\n          console.log(\"Error in GetPrimeMoverListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: {}, isReadyToRender: true });\r\n        console.log(\"Error while getting PrimeMover List:\", error);\r\n      });\r\n  }\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnPrimeMover\r\n        );\r\n        operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnPrimeMover\r\n        );\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            Common_Code: data.Code,\r\n            //TransportationType: data.TransportationType,\r\n            Common_Status: data.Active,\r\n            PrimeMover_CarrierCompany: data.CarrierCompanyCode,\r\n            // Common_Shareholder: data.ShareholderCode,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"PrimeMoverComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnPrimeMover\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.shareholder = true;\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getPrimeMoverList(this.state.selectedShareholder);\r\n      if (\r\n        this.props.tractorWithTrailer === undefined ||\r\n        this.props.tractorWithTrailer === false\r\n      )\r\n        this.getKPIList(this.state.selectedShareholder);\r\n    } catch (error) {\r\n      console.log(\"PrimeMoverComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (\r\n      nextProps.tractorWithTrailer === true &&\r\n      nextProps.tractorSelection.length > 0\r\n    ) {\r\n      let primeMovers = nextProps.tractorSelection;\r\n      if (primeMovers.length > 0) {\r\n        let tractorSelection = [];\r\n        primeMovers.forEach((primeMover) => {\r\n          let row = this.state.data.Table.find(\r\n            (row) => row.Common_Code === primeMover.PrimeMover.Code\r\n          );\r\n          if (row !== undefined) tractorSelection.push(row);\r\n        });\r\n        this.setState({ selectedItems: tractorSelection });\r\n        this.props.getTractorList(tractorSelection, this.state.data.Column);\r\n      }\r\n    } else if (\r\n      nextProps.tractorWithTrailer === true &&\r\n      nextProps.tractorSelection.length === 0\r\n    ) {\r\n      this.setState({ selectedItems: [] });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnPrimeMover\r\n      );\r\n\r\n      let shareholder = this.props.userDetails.EntityResult.PrimaryShareholder;\r\n      if (this.props.tractorWithTrailer === true) {\r\n        shareholder = this.props.tractorShareholder;\r\n      }\r\n      this.setState({\r\n        operationsVisibilty,\r\n        selectedShareholder: shareholder,\r\n      });\r\n      this.getPrimeMoverList(shareholder);\r\n      if (\r\n        this.props.tractorWithTrailer === undefined ||\r\n        this.props.tractorWithTrailer === false\r\n      )\r\n        this.getKPIList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"PrimeMoverComposite:Error occured on ComponentDidMount\",\r\n        error\r\n      );\r\n    }\r\n    // clear session storage on window refresh event\r\n    window.addEventListener(\"beforeunload\", () => Utilities.clearSessionStorage(this.componentName + \"GridState\"));\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    Utilities.clearSessionStorage(this.componentName + \"GridState\");\r\n    window.removeEventListener(\"beforeunload\", () => Utilities.clearSessionStorage(this.componentName + \"GridState\"));\r\n  }\r\n\r\n  handleNextClick = () => {\r\n    this.props.handleNextClick(\r\n      \"primeMover\",\r\n      this.state.selectedItems,\r\n      this.state.data.Column\r\n    );\r\n  };\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showAuthenticationLayout });\r\n      if (showAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"PrimeMoverComposite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let selectionMode = \"multiple\";\r\n    let fillPage = true;\r\n    let loadingClass = \"globalLoader\";\r\n    if (this.props.tractorWithTrailer === true) {\r\n      selectionMode = \"single\";\r\n      fillPage = false;\r\n      loadingClass = \"nestedList\";\r\n    }\r\n\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div>\r\n            <ErrorBoundary>\r\n              {this.props.tractorWithTrailer === undefined ? (\r\n                <TMUserActionsComposite\r\n                  operationsVisibilty={this.state.operationsVisibilty}\r\n                  breadcrumbItem={this.props.activeItem}\r\n                  shareholders={\r\n                    this.props.userDetails.EntityResult.ShareholderList\r\n                  }\r\n                  selectedShareholder={this.state.selectedShareholder}\r\n                  onShareholderChange={this.handleShareholderSelectionChange}\r\n                  onDelete={this.authenticateDelete}\r\n                  onAdd={this.handleAdd}\r\n                  handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n                ></TMUserActionsComposite>\r\n              ) : (\r\n                <>\r\n                  {this.state.isDetails ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <div className=\"vehicleDataTableHeading\">\r\n                      <div className=\"col col-lg-10 dataTableHeadingPadding\">\r\n                        <h5>{t(\"Select_Tractors\")}</h5>\r\n                      </div>\r\n                      <div className=\"col col-lg-1 vehicleDataTableIcon\">\r\n                        <div\r\n                          className={\r\n                            (this.state.operationsVisibilty.add\r\n                              ? \"iconCircle \"\r\n                              : \"iconCircleDisable \") + \"iconblock\"\r\n                          }\r\n                              onClick={() => {if(this.state.operationsVisibilty.add){this.handleAdd()}}}\r\n                        >\r\n                          <Icon\r\n                            root=\"common\"\r\n                            name=\"badge-plus\"\r\n                            size=\"small\"\r\n                            color=\"white\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </ErrorBoundary>\r\n            {this.state.isDetails ? (\r\n              <ErrorBoundary>\r\n                <PrimeMoverDetailsComposite\r\n                  key=\"PrimeMoverDetails\"\r\n                  selectedRow={this.state.selectedRow}\r\n                  onBack={this.handleBack}\r\n                  onSaved={this.savedEvent}\r\n                  selectedShareholder={this.state.selectedShareholder}\r\n                ></PrimeMoverDetailsComposite>\r\n              </ErrorBoundary>\r\n            ) : this.state.isReadyToRender ? (\r\n              <div>\r\n                {this.props.tractorWithTrailer === true ? (\r\n                  \"\"\r\n                ) : (\r\n                  <ErrorBoundary>\r\n                    <div className=\"kpiSummaryContainer\">\r\n                      <KPIDashboardLayout\r\n                        kpiList={this.state.primeMoverKPIList}\r\n                        pageName=\"PrimeMover\"\r\n                      ></KPIDashboardLayout>\r\n                    </div>\r\n                  </ErrorBoundary>\r\n                )}\r\n                <ErrorBoundary>\r\n                  <PrimeMoverSummaryPageComposite\r\n                    tableData={this.state.data.Table}\r\n                    columnDetails={this.state.data.Column}\r\n                    pageSize={\r\n                      this.props.userDetails.EntityResult.PageAttibutes\r\n                        .WebPortalListPageSize\r\n                    }\r\n                    exportRequired={true}\r\n                    exportFileName=\"PrimeMoverList\"\r\n                    columnPickerRequired={true}\r\n\r\n                    terminalsToShow={\r\n                      this.props.userDetails.EntityResult.PageAttibutes\r\n                        .NoOfTerminalsToShow\r\n                    }\r\n                    selectionRequired={true}\r\n                    columnGroupingRequired={true}\r\n                    onSelectionChange={this.handleSelection}\r\n                    onRowClick={this.handleRowClick}\r\n                    parentComponent={this.componentName}\r\n                  ></PrimeMoverSummaryPageComposite>\r\n                  {this.props.tractorWithTrailer === true ? (\r\n                    <div className=\"vehicleNextButton\">\r\n                      <Button onClick={this.handleNextClick}>\r\n                        {t(\"Common_Next\")}\r\n                      </Button>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </ErrorBoundary>\r\n              </div>\r\n            ) : (\r\n              <LoadingPage\r\n                loadingClass={loadingClass}\r\n                message=\"Loading\"\r\n              ></LoadingPage>\r\n            )}\r\n              {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.remove}\r\n            functionGroup={fnPrimeMover}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleDelete}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n            {this.props.tractorWithTrailer === true ? (\r\n              \"\"\r\n            ) : (\r\n              <ErrorBoundary>\r\n                <ToastContainer\r\n                  hideProgressBar={true}\r\n                  closeOnClick={false}\r\n                  closeButton={true}\r\n                  newestOnTop={true}\r\n                  position=\"bottom-right\"\r\n                  toastClassName=\"toast-notification-wrap\"\r\n                />\r\n              </ErrorBoundary>\r\n            )}\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PrimeMoverComposite);\r\n\r\nPrimeMoverComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n  tractorWithTrailer: PropTypes.bool,\r\n  tractorSelection: PropTypes.array,\r\n  getTractorList: PropTypes.func,\r\n  handleNextClick: PropTypes.func,\r\n  handleSelectClick: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Select, Checkbox } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nAssociatedTerminals.propTypes = {\r\n  terminalList: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedTerminal: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  validationError: PropTypes.string,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onCheckChange: PropTypes.func.isRequired,\r\n};\r\nAssociatedTerminals.defaultProps = {\r\n  terminalList: [],\r\n  selectedTerminal: [],\r\n  validationError: \"\",\r\n};\r\nexport function AssociatedTerminals({\r\n  terminalList,\r\n  selectedTerminal,\r\n  validationError,\r\n  onFieldChange,\r\n  onCheckChange,\r\n}) {\r\n  //console.log(\"component terminalList\", terminalList);\r\n  if (selectedTerminal === null) selectedTerminal = [];\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div style={{ width: \"80%\" }}>\r\n            <Select\r\n              fluid\r\n              placeholder={t(\"Common_Select\")}\r\n              label={t(\"TerminalCodes\")}\r\n              value={selectedTerminal}\r\n              multiple={true}\r\n              options={Utilities.transferListtoOptions(terminalList)}\r\n              onChange={(data) => onFieldChange(\"TerminalCodes\", data)}\r\n              error={t(validationError)}\r\n              disabled={terminalList.length === 0}\r\n              reserveSpace={false}\r\n            />\r\n          </div>\r\n          <div className=\"ddlSelectAll\">\r\n            <Checkbox\r\n              label={t(\"Common_All\")}\r\n              checked={\r\n                Array.isArray(selectedTerminal) &&\r\n                selectedTerminal.length === terminalList.length\r\n              }\r\n              onChange={(checked) => onCheckChange(checked)}\r\n            ></Checkbox>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"@scuf/common\";\r\nimport { Input, DatePicker } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport { getCurrentDateFormat } from \"../../../JS/functionalUtilities\";\r\n\r\nexport function AttributeDetails({\r\n    selectedAttributeList,\r\n    handleCellDataEdit,\r\n    attributeValidationErrors,\r\n}) {\r\n    const handleAttributeDateValue = (attribute) => {\r\n        if (attribute.DefaultValue === '0000-00-00') {\r\n            convertAttributeDatetoString(attribute,new Date());\r\n            return new Date();\r\n        } else {\r\n            var chars = attribute.DefaultValue.split('-');\r\n            return new Date(chars[0],chars[1]-1,chars[2]);\r\n        }\r\n    } \r\n    const convertAttributeDatetoString = (attribute, value) => {\r\n        var Dateval = new Date(value);\r\n        value = Dateval.getFullYear() + \"-\" + (\"0\" + (Dateval.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + Dateval.getDate()).slice(-2);\r\n        handleCellDataEdit(attribute,value);\r\n    }\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-12 attributeDetails-wrap\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                selectedAttributeList.map((attribute) =>\r\n                                    attribute.DataType.toLowerCase() === Constants.DataType.STRING.toLowerCase() && attribute.IsVisible === true ?\r\n                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                            <Input\r\n                                                fluid\r\n                                                label={t(attribute.DisplayName)}\r\n                                                value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                reserveSpace={false}\r\n                                            />\r\n                                        </div> : (attribute.DataType.toLowerCase() === Constants.DataType.INT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.LONG.toLowerCase()) && attribute.IsVisible === true  ?\r\n                                            <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                <Input\r\n                                                    fluid\r\n                                                    label={t(attribute.DisplayName)}\r\n                                                    value={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue}\r\n\r\n                                                    indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                    disabled={attribute.IsReadonly === true ? true : false}\r\n                                                    onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                    error={t(attributeValidationErrors[attribute.Code])}\r\n                                                    reserveSpace={false}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            : (attribute.DataType.toLowerCase() === Constants.DataType.FLOAT.toLowerCase() || attribute.DataType.toLowerCase() === Constants.DataType.DOUBLE.toLowerCase()) && attribute.IsVisible === true ?\r\n                                                <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                    <Input\r\n                                                        fluid\r\n                                                        label={t(attribute.DisplayName)}\r\n                                                        value={\r\n                                                            //parseFloat\r\n                                                            (attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\" : (attribute.DefaultValue).toLocaleString()\r\n                                                        }\r\n                                                        indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                        disabled={attribute.IsReadonly === true ? true : false}\r\n                                                        onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        error={t(attributeValidationErrors[attribute.Code])}\r\n                                                        reserveSpace={false}\r\n                                                    />\r\n                                                </div> :\r\n                                                attribute.DataType.toLowerCase() === Constants.DataType.BOOL.toLowerCase() && attribute.IsVisible === true ?\r\n                                                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                                        <Checkbox className=\"deviceCheckBox customDeviceCheckBox\"\r\n                                                            label={t(attribute.DisplayName)}\r\n                                                            checked={attribute.DefaultValue === null ? \"\" : attribute.DefaultValue.toString().toLowerCase() === \"true\" ? true : false}\r\n                                                            disabled={attribute.IsReadonly === true ? true : false}\r\n                                                            onChange={(value) => handleCellDataEdit(attribute, value)}\r\n                                                        >\r\n                                                        </Checkbox>\r\n                                                    </div>\r\n                                                    : attribute.DataType.toLowerCase() === Constants.DataType.DATETIME.toLowerCase() && attribute.IsVisible === true ?\r\n                                                   \r\n                                                        <div className=\"col-12 col-md-6 col-lg-4\" >\r\n                                                            <DatePicker\r\n                                                                fluid\r\n                                                                value={(attribute.DefaultValue === null || attribute.DefaultValue === \"\") ? \"\"\r\n                                                                    : handleAttributeDateValue(attribute)\r\n                                                                }\r\n                                                                label={t(attribute.DisplayName)}\r\n                                                                displayFormat={getCurrentDateFormat()}\r\n                                                                showYearSelector=\"true\"\r\n                                                                indicator={attribute.IsMandatory === true ? \"required\" : null}\r\n                                                                disabled={attribute.IsReadonly === true ? true : false}\r\n                                                                onChange={(value) => \r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }\r\n                                                                onTextChange={(value) => {\r\n                                                                    convertAttributeDatetoString(attribute, value)\r\n                                                                }}\r\n                                                                error={t(attributeValidationErrors[attribute.Code])}\r\n                                                                reserveSpace={false}\r\n                                                            />\r\n                                                        </div> : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    );\r\n}\r\n","export const driverAttributeEntity = \"driver\";\r\nexport const carrierAttributeEntity = \"carriercompany\";\r\nexport const shareholderAttributeEntity = \"shareholder\";\r\nexport const baseProductAttributeEntity = \"baseProduct\";\r\nexport const trailerAttributeEntity = \"TRAILER\";\r\nexport const trailerCompAttributeEntity = \"TRAILERCOMPARTMENT\";\r\nexport const terminalAttributeEntity = \"terminal\";\r\nexport const customerAttributeEntity = \"customer\";\r\nexport const destinationAttributeEntity = \"destination\";\r\nexport const finishedProductAttributeEntity = \"finishedproduct\";\r\nexport const tankAttributeEntity = \"tank\";\r\nexport const vesselAttributeEntity = \"marine_vessel\";\r\nexport const vesselCompartmentAttributeEntity = \"marine_trailercompartment\";\r\nexport const supplierAttributeEntity = \"supplier\";\r\nexport const vehicleAttributeEntity = \"vehicle\";\r\nexport const vehicleTrailerAttributeEntity = \"vehicletrailer\";\r\nexport const originTerminalAttributeEntity = \"originterminal\";\r\nexport const bayAttributeEntity = \"bay\";\r\nexport const loadingArmAttributeEntity = \"loadingArm\";\r\nexport const cardReaderAttributeEntity = \"cardreader\";\r\nexport const vehiclePrimeMoverAttributeEntity = \"vehicleprimemover\";\r\nexport const meterAttributeEntity = \"meter\";\r\nexport const shipmentAttributeEntity = \"SHIPMENT\";\r\nexport const shipmentCompartmentAttributeEntity = \"SHIPMENTCOMPARTMENT\";\r\nexport const shipmentDestinationCompartmentAttributeEntity = \"SHIPMENTDESTINATIONCOMPARTMENT\";\r\nexport const shipmentDetailsAttributeEntity = \"SHIPMENTDETAILS\";\r\nexport const shipmentTrailerWeighBridgeAttributeEntity = \"SHIPMENTTRAILERWEIGHBRIDGE\";\r\nexport const shipmentTrailerAttributeEntity = \"SHIPMENTTRAILER\";\r\nexport const shipmentStatusTimeAttributeEntity = \"SHIPMENTSTATUSTIME\";\r\nexport const marineDispatchAttributeEntity = \"MARINEDISPATCH\";\r\nexport const marineDispatchCompAttributeEntity = \"MARINEDISPATCHCOMPARTMENTDETAIL\";\r\nexport const railWagonAttributeEntity = \"railwagon\";\r\nexport const primeMoverAttributeEntity = \"primemover\";\r\nexport const bcuAttributeEntity = \"bcu\";\r\nexport const railReceiptAttributeEntity = \"RAILRECEIPTPLAN\";\r\n\r\nexport const railReceiptComAttributeEntity = \"RAILRECEIPTWAGONDETAILPLAN\";\r\n\r\nexport const railReceiptManualEntryFPAttributeEntity = \"RAILUNLOADINGDETAILSFP\";\r\nexport const railReceiptManualEntryBPAttributeEntity = \"RAILUNLOADINGDETAILSBP\";\r\nexport const railReceiptManualEntryAddAttributeEntity = \"RAILUNLOADINGDETAILSADDITIVE\";\r\n\r\n//export const marineReceiptAttributeEntity = \"MARINERECEIPT\";\r\n//export const marineReceiptCompAttributeEntity = \"MARINERECEIPTCOMPARTMENT\";\r\nexport const railDispatchPlanAttributeEntity = \"RAILDISPATCHPLAN\";\r\nexport const railDispatchItemAttributeEntity = \"RAILDISPATCHITEM\";\r\nexport const railDispatchStatusChangeAttributeEntity = \"RAILDISPATCHSTATUSCHANGE\";\r\nexport const railDispatchWagonAttributeEntity = \"RAILDISPATCHWAGON\";\r\nexport const railDispatchWagonDetailPlanAttributeEntity = \"RAILDISPATCHWAGONDETAILPLAN\";\r\nexport const railDispatchWagonWeightBridgeAttributeEntity = \"RAILDISPATCHWAGONWEIGHBRIDGE\";\r\nexport const railDispatchWagonCompAttributeEntity = \"RAILDISPATCHWAGONCOMPARTMENT\";\r\nexport const railLoadingDetailsFPAttributeEntity = \"RAILLOADINGDETAILSFP\";\r\nexport const railLoadingDetailsBPAttributeEntity = \"RAILLOADINGDETAILSBP\";\r\nexport const railLoadingDetailsAdditiveAttributeEntity = \"RAILLOADINGDETAILSADDITIVE\";\r\nexport const marineReceiptAttributeEntity = \"marineReceipt\";\r\nexport const unAccountedMeterTransaction = \"UNACCOUNTEDMETERTRANSACTION\";\r\nexport const unAccountedTankTransaction = \"UNACCOUNTEDTANKTRANSACTION\";\r\nexport const marineManualEntryFPAttributeEntity = \"marineLoadingDetailsFP\";\r\nexport const marineLoadingDetailsAdditiveAttributeEntity = \"marineLoadingDetailsAdditive\";\r\nexport const marineLoadingDetailsBPAttributeEntity = \"marineLoadingDetailsBP\";\r\n\r\nexport const marineReceiptCompAttributeEntity = \"marineReceiptCompartmentDetail\";\r\nexport const marineUnloadingSFPAttributeEntity = \"marineUnloadingDetailsFP\";\r\nexport const marineUnloadingSBPAttributeEntity = \"marineUnloadingDetailsBP\";\r\nexport const accessCardAttributeEntity = \"accessCard\";\r\n\r\n\r\nexport const shipmentLoadingDetailsFPAttributeEntity = \"LOADINGDETAILSFP\";\r\nexport const shipmentLoadingDetailsBPAttributeEntity = \"LOADINGDETAILSBP\";\r\nexport const shipmentLoadingDetailsAdvAttributeEntity = \"LOADINGDETAILSADDITIVE\";\r\nexport const MARINERECEIPTSTATUSTIME = \"MARINERECEIPTSTATUSTIME\";\r\nexport const MARINEDISPATCHSTATUSTIME = \"MARINEDISPATCHSTATUSTIME\";\r\nexport const receiptAttributeEntity = \"RECEIPT\";\r\nexport const receiptManualEntryBPAttributeEntity = \"UNLOADINGTRANSACTIONS\";\r\n\r\nexport const orderAttributeEntity = \"ORDER\";\r\nexport const orderItemAttributeEntity = \"ORDERITEM\";\r\nexport const contractAttributeEntity = \"CONTRACT\";\r\nexport const contractItemAttributeEntity = \"CONTRACT_ITEM\";\r\nexport const receiptOriginTerminalCompartment = \"RECEIPTORIGINTERMINALCOMPARTMENT\";\r\nexport const captainAttributeEntity = \"GeneralTMUser_CAPTAIN\";\r\nexport const weighBridgeAttributeEntity = \"weighbridge\";\r\nexport const deuAttributeEntity = \"deu\";\r\n\r\nexport const staffAttributeEntity = \"GeneralTMUser_STAFF\";\r\nexport const visitorAttributeEntity = \"GeneralTMUser_VISITOR\";\r\nexport const pipelineHeaderAttributeEntity = \"PIPELINEHEADER\";\r\nexport const sealMasterAttributeEntity = \"SEALMASTER\";\r\nexport const pipelineReceiptEntity = \"PIPELINERECEIPT\"\r\nexport const slotInfoRoadShipment = \"ROADSHIPMENTSLOTINFO\";\r\nexport const slotInfoRoadReceipt = \"ROADRECEIPTSLOTINFO\";\r\n\r\nexport const slotInfoMarineShipment = \"MARINESHIPMENTSLOTINFO\";\r\nexport const slotInfoMarineReceipt = \"MARINERECEIPTSLOTINFO\";\r\n\r\nexport const pipelineDispatchAttributeEntity = \"PIPELINEDISPATCH\";\r\nexport const pipelineTransactionsAttributeEntity = \"PIPELINETRANSACTIONS\";\r\nexport const pipelineDispatchStatusTimeAttributeEntity = \"PIPELINEDISPATCHSTATUSTIME\";\r\nexport const pipelineReceiptStatusTimeAttributeEntity = \"PIPELINERECEIPTSTATUSTIME\";\r\nexport const processConfigAttributeEntity = \"PROCESSCONFIG\";\r\n\r\nexport const productAllocationItemAttributeEntity = \"PRODUCTALLOCATIONITEM\"\r\n\r\n\r\nexport const hseInspectionShipmentRigidTruckAttributeEntity = \"HSEINSPECTIONSHIPMENTRIGIDTRUCK\";\r\nexport const hseInspectionShipmentTrailerAttributeEntity = \"HSEINSPECTIONSHIPMENTTRAILER\";\r\nexport const hseInspectionShipmentPrimeMoverAttributeEntity = \"HSEINSPECTIONSHIPMENTPRIMEMOVER\";\r\nexport const hseInspectionShipmentNonFillingVehicleAttributeEntity = \"HSEINSPECTIONSHIPMENTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineShipmentBargeAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTBARGE\";\r\nexport const hseInspectionMarineShipmentShipAttributeEntity = \"HSEINSPECTIONMARINESHIPMENTSHIP\";\r\nexport const hseInspectionShipmentRailWagonAttributeEntity = \"HSEINSPECTIONSHIPMENTRAILWAGON\";\r\nexport const hseInspectionShipmentPipelineAttributeEntity = \"HSEINSPECTIONSHIPMENTPIPELINE\";\r\nexport const hseInspectionReceiptRigidTruckAttributeEntity = \"HSEINSPECTIONRECEIPTRIGIDTRUCK\";\r\nexport const hseInspectionReceiptTrailerAttributeEntity = \"HSEINSPECTIONRECEIPTTRAILER\";\r\nexport const hseInspectionReceiptPrimeMoverAttributeEntity = \"HSEINSPECTIONRECEIPTPRIMEMOVER\";\r\nexport const hseInspectionReceiptNonFillingVehicleAttributeEntity = \"HSEINSPECTIONRECEIPTNONFILLINGVEHICLE\";\r\nexport const hseInspectionMarineReceiptBargeAttributeEntity = \"HSEINSPECTIONMARINERECEIPTBARGE\";\r\nexport const hseInspectionMarineReceiptShipAttributeEntity = \"HSEINSPECTIONMARINERECEIPTSHIP\";\r\nexport const hseInspectionReceiptRailWagonAttributeEntity = \"HSEINSPECTIONRECEIPTRAILWAGON\";\r\nexport const hseInspectionReceiptPipelineAttributeEntity = \"HSEINSPECTIONRECEIPTPIPELINE\";\r\n\r\nexport const shareholderAgrementEnity = \"SHAREHOLDERAGREEMENT\";\r\n\r\nexport const coaTemplateAttributeEntity = \"COATEMPLATE\";\r\nexport const coaManagementAttributeEntity = \"COAMANAGEMENT\";\r\nexport const coaCustomerAttributeEntity = \"COACUSTOMER\";\r\nexport const coaManagementFinishedProductAttributeEntity = \"COAMANAGEMENT\";\r\n\r\n\r\nexport const coaAssignmentAttributeEntity = \"COAASSIGNMENT\";","export const DatesInEntity={\r\n    Driver : [\r\n    \"License1ExpiryDate\",\r\n    \"License1IssueDate\",\r\n    \"License2IssueDate\",\r\n    \"License2ExpiryDate\",\r\n    \"License3IssueDate\",\r\n    \"License3ExpiryDate\",\r\n    \"HazardousLicenseExpiry\"\r\n  ],\r\n  CarrierCompany:[\"PermitExpiryDate\"],\r\n  PrimeMover:[\"RoadTaxNoIssueDate\",\"RoadTaxNoExpiryDate\",\"licenseExpiryDate\"],\r\n  Wagon:[\"LicenseExpiryDate\"],\r\n  Vehicle:[\"LicenseNoIssueDate\",\"LicenseNoExpiryDate\",\r\n  \"RoadTaxNoIssueDate\",\"RoadTaxNoExpiryDate\",\"Bondexpirydate\",\"HazardousLicenseExpiry\"],\r\n  Contract:[\"StartDate\",\"EndDate\"],\r\n  ContractItem:[\"StartDate\",\"EndDate\"],\r\n  Order:[\"OrderStartDate\",\"OrderEndDate\",\"OrderDate\",\"DeliveryDate\"],\r\n  AccessCard:[\"ExpiryDate\",\"IssueDate\",\"PasswordExpiryDate\"],\r\n  Trailer:[\"HazardousLicenseExpiry\"],\r\n  };","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["TMDetailsKPILayout","_ref","KPIList","pageName","rowHeight","widgetHeight","isDraggable","isResizable","kpiDisplayTopBreakpoint","KPIDisplays","setKPIDisplays","useState","kpiDiv","React","hideKpis","currentScrollPos","window","pageYOffset","KPIDisplay","current","getBoundingClientRect","top","useEffect","addEventListener","removeEventListener","_jsx","ref","children","TranslationConsumer","t","style","marginTop","ErrorBoundary","KPIDashboardLayout","kpiList","defaultProps","TMUserActions","operationsVisibilty","breadcrumbItem","shareholders","selectedShareholder","onShareholderChange","onDelete","onAdd","popUpContent","shrVisible","handleBreadCrumbClick","addVisible","deleteVisible","modelOpen","setModelOpen","popUpOpen","setPopUpOpen","handlePopUpClick","add","length","_jsxs","className","alignItems","padding","Breadcrumb","parents","map","parentitem","Item","onClick","undefined","itemCode","localizedKey","justifyContent","_Fragment","Select","placeholder","value","disabled","shareholder","options","Utilities","onChange","Modal","open","size","Content","Footer","Button","type","content","float","display","Popup","position","element","Icon","root","name","color","on","onMouseLeave","VerticalMenu","Header","item","popUpMenuClick","menuItem","fieldName","fieldValue","marginLeft","delete","itemName","itemProps","isComponent","TMUserActionsComposite","UserAuthenticationLayout","Component","constructor","arguments","state","isPasswordRequired","Password","validationErrors","userAuthenticationValidationDef","authenticationResponse","btnAuthenticateEnabled","onFieldChange","propertyName","data","this","setState","lodash","validatePassword","returnValue","Object","values","every","onCloseClick","props","handleClose","AuthenticateUser","msg","pass","Username","salt","cryptojs","WordArray","random","key","keySize","iterations","iv","encrypted","encrypt","Pkcs7","mode","CBC","transitmessage","toString","axios","RestAPIs","encodeURIComponent","tokenDetails","tokenInfo","then","response","result","IsSuccess","EntityResult","toLowerCase","handleOperation","ErrorList","catch","error","componentDidMount","IsPasswordRequired","console","log","userDetails","roleFunctionInfo","functionName","functionGroup","render","textAlign","flexWrap","Input","fluid","disablePasswordToggle","indicator","label","reserveSpace","connect","getUserDetails","TokenAuth","WijmoGrid","flex","setFlex","translator","useTranslation","_getData","pageLength","CollectionView","sourceData","pageSize","setData","rowsPerPage","theGrid","theSearch","gridFilter","pagingComponent","colPicker","selectedRows","selectionRequired","selector","gridInitialized","grid","customizeFilterConditions","onRowClick","hostElement","e","ht","hitTest","target","closest","classList","includes","cellType","wjGrid","Cell","rowData","rows","row","dataItem","selectionMode","wjCore","select","Selector","itemChecked","s","singleSelection","filter","isSelected","loadash","forEach","onSelectionHandle","r","selectedRow","showCheckAll","column","rowHeaders","columns","headersVisibility","HeadersVisibility","All","control","push","selectedItems","refresh","localStorage","getItem","parentComponent","gridState","JSON","parse","newFlex","col","matchedCol","colSetting","binding","visible","filterDefinition","collectionView","deferUpdate","sortDescriptions","clear","i","sortDesc","property","ascending","groupDescriptions","sessionStorage","gridSessionState","moveToPage","pageCount","pageIndex","text","searchText","columnPickerRequired","itemsSource","checkedMemberPath","displayMemberPath","lostFocus","addHandler","hidePopup","exportExcel","gridFlex","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","exportFileName","displayValues","columnDetail","Name","PopOver","terminalCodes","split","terminalsToShow","Card","DataType","Date","toLocaleDateString","toLocaleTimeString","saveGridState","group","document","getElementsByClassName","chkbx","parentNode","sessionState","setItem","stringify","FlexGridFilter","operator","Operator","header","descending","apply","conditions","search","selectAll","and","or","cancel","stringOperators","op","EQ","NE","BW","EW","CT","NC","numberOperators","GT","LT","GE","LE","dateOperators","booleanOperators","getWidth","columnDetails","screen","width","WidthPx","parseInt","WidthPercentage","FlexGridSearch","class","id","actionType","event","host","offsetHeight","focus","showPopup","PopupPosition","Below","preventDefault","colPickerClickHandler","exportRequired","fontSize","columnGroupingRequired","GroupPanel","FlexGrid","autoGenerateColumns","alternatingRowStep","autoRowHeights","initialized","virtualizationThreshold","onUpdatedView","FlexGridColumn","minWidth","isReadOnly","wordWrap","align","FlexGridCellTemplate","template","context","conditionalRowStyleCheck","conditionalRowStyles","ListBox","picker","initializedPicker","CollectionViewNavigator","headerFormat","byPage","cv","PrimeMoverSummaryPageComposite","tableData","onSelectionChange","WijmoGridComposite","PrimeMoverComposite","isDetails","isReadyToRender","isDetailsModified","primeMoverKPIList","showAuthenticationLayout","componentName","handleAdd","handleShareholderSelectionChange","getPrimeMoverList","tractorWithTrailer","getKPIList","handleRowClick","FunctionsList","functionGroups","fnPrimeMover","remove","handleSelection","items","handleSelectClick","Column","handleDelete","deletePrimeMoverKeys","shCode","primeMoverCode","carrierCode","keyData","keyDataCode","ShareHolderCode","KeyCodes","Key","Value","isRefreshDataRequire","ResultDataList","res","notification","messageResultDetails","messageResult","keyFields","toast","NotifyEvent","notificationMessage","autoClose","messageType","savedEvent","saveType","Common_Code","Code","Common_Status","Active","PrimeMover_CarrierCompany","CarrierCompanyCode","handleBack","componentWillUnmount","handleNextClick","authenticateDelete","IsWebPortalUser","handleAuthenticationClose","view","fnKPIInformation","message","objKPIRequestData","PageName","kpiPrimeMoverList","InputParameters","ListKPIDetails","keyValues","isSuccess","errorMessage","transportationType","Constants","ROAD","tractorSelection","primeMovers","primeMover","Table","find","PrimeMover","getTractorList","componentWillReceiveProps","nextProps","IsArchived","PrimaryShareholder","tractorShareholder","fillPage","loadingClass","activeItem","ShareholderList","PrimeMoverDetailsComposite","onBack","onSaved","PageAttibutes","WebPortalListPageSize","NoOfTerminalsToShow","LoadingPage","UserName","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","toastClassName","AssociatedTerminals","terminalList","selectedTerminal","validationError","onCheckChange","multiple","Checkbox","checked","Array","isArray","TMDetailsHeader","entityCode","newEntityName","popUpContents","margin","List","TMDetailsUserActions","handleSave","handleReset","saveEnabled","AttributeDetails","selectedAttributeList","handleCellDataEdit","attributeValidationErrors","handleAttributeDateValue","attribute","DefaultValue","convertAttributeDatetoString","chars","Dateval","getFullYear","getMonth","slice","getDate","STRING","IsVisible","DisplayName","IsMandatory","IsReadonly","INT","LONG","FLOAT","DOUBLE","BOOL","DATETIME","DatePicker","displayFormat","getCurrentDateFormat","showYearSelector","onTextChange","toLocaleString","driverAttributeEntity","carrierAttributeEntity","shareholderAttributeEntity","baseProductAttributeEntity","trailerAttributeEntity","trailerCompAttributeEntity","terminalAttributeEntity","customerAttributeEntity","destinationAttributeEntity","finishedProductAttributeEntity","tankAttributeEntity","vesselAttributeEntity","vesselCompartmentAttributeEntity","supplierAttributeEntity","vehicleAttributeEntity","vehicleTrailerAttributeEntity","originTerminalAttributeEntity","bayAttributeEntity","loadingArmAttributeEntity","cardReaderAttributeEntity","vehiclePrimeMoverAttributeEntity","meterAttributeEntity","shipmentAttributeEntity","shipmentCompartmentAttributeEntity","shipmentDestinationCompartmentAttributeEntity","shipmentDetailsAttributeEntity","shipmentTrailerWeighBridgeAttributeEntity","shipmentTrailerAttributeEntity","shipmentStatusTimeAttributeEntity","marineDispatchAttributeEntity","marineDispatchCompAttributeEntity","railWagonAttributeEntity","primeMoverAttributeEntity","bcuAttributeEntity","railReceiptAttributeEntity","railReceiptComAttributeEntity","railReceiptManualEntryFPAttributeEntity","railReceiptManualEntryBPAttributeEntity","railReceiptManualEntryAddAttributeEntity","railDispatchPlanAttributeEntity","railDispatchItemAttributeEntity","railDispatchStatusChangeAttributeEntity","railDispatchWagonAttributeEntity","railDispatchWagonDetailPlanAttributeEntity","railDispatchWagonWeightBridgeAttributeEntity","railDispatchWagonCompAttributeEntity","railLoadingDetailsFPAttributeEntity","railLoadingDetailsBPAttributeEntity","railLoadingDetailsAdditiveAttributeEntity","marineReceiptAttributeEntity","unAccountedMeterTransaction","unAccountedTankTransaction","marineManualEntryFPAttributeEntity","marineLoadingDetailsAdditiveAttributeEntity","marineLoadingDetailsBPAttributeEntity","marineReceiptCompAttributeEntity","marineUnloadingSFPAttributeEntity","marineUnloadingSBPAttributeEntity","accessCardAttributeEntity","shipmentLoadingDetailsFPAttributeEntity","shipmentLoadingDetailsBPAttributeEntity","shipmentLoadingDetailsAdvAttributeEntity","MARINERECEIPTSTATUSTIME","MARINEDISPATCHSTATUSTIME","receiptAttributeEntity","receiptManualEntryBPAttributeEntity","orderAttributeEntity","orderItemAttributeEntity","contractAttributeEntity","contractItemAttributeEntity","receiptOriginTerminalCompartment","captainAttributeEntity","weighBridgeAttributeEntity","deuAttributeEntity","staffAttributeEntity","visitorAttributeEntity","pipelineHeaderAttributeEntity","sealMasterAttributeEntity","pipelineReceiptEntity","slotInfoRoadShipment","slotInfoRoadReceipt","slotInfoMarineShipment","slotInfoMarineReceipt","pipelineDispatchAttributeEntity","pipelineTransactionsAttributeEntity","pipelineDispatchStatusTimeAttributeEntity","pipelineReceiptStatusTimeAttributeEntity","processConfigAttributeEntity","productAllocationItemAttributeEntity","hseInspectionShipmentRigidTruckAttributeEntity","hseInspectionShipmentTrailerAttributeEntity","hseInspectionShipmentPrimeMoverAttributeEntity","hseInspectionShipmentNonFillingVehicleAttributeEntity","hseInspectionMarineShipmentBargeAttributeEntity","hseInspectionMarineShipmentShipAttributeEntity","hseInspectionShipmentRailWagonAttributeEntity","hseInspectionShipmentPipelineAttributeEntity","hseInspectionReceiptRigidTruckAttributeEntity","hseInspectionReceiptTrailerAttributeEntity","hseInspectionReceiptPrimeMoverAttributeEntity","hseInspectionReceiptNonFillingVehicleAttributeEntity","hseInspectionMarineReceiptBargeAttributeEntity","hseInspectionMarineReceiptShipAttributeEntity","hseInspectionReceiptRailWagonAttributeEntity","hseInspectionReceiptPipelineAttributeEntity","shareholderAgrementEnity","coaTemplateAttributeEntity","coaManagementAttributeEntity","coaCustomerAttributeEntity","coaAssignmentAttributeEntity","DatesInEntity","Driver","CarrierCompany","Wagon","Vehicle","Contract","ContractItem","Order","AccessCard","Trailer","modify","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnSlotInformation","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","shareholderCode","driverCode","customerCode","trailerCode","originTerminalCode","vehicleCode","destinationCode","finishedProductCode","shipmentCode","orderCode","receiptCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","locationCode","siteViewType","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","bayCode","TransactionNumber","BatchNumber","terminalCode","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","TransactionType","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks","getOptionsWithSelect","ddlOptions","selectOptionText","option","unshift","language","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell"],"sourceRoot":""}