{"version":3,"file":"static/js/7055.327074fe.chunk.js","mappings":"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","sources":["Components/Composite/Details/TractorWithTrailerDetailsComposite.jsx","Components/Composite/Summary/PrimeMoverSummaryComposite.jsx","Components/Composite/Entity/PrimeMoverComposite.jsx","Components/Composite/Summary/TrailerSummaryComposite.jsx","Components/Composite/Entity/TrailerComposite.jsx","Components/UIBase/Details/VehicleBasicFields.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport PrimeMoverComposite from \"../Entity/PrimeMoverComposite\";\r\nimport TrailerComposite from \"../Entity/TrailerComposite\";\r\nimport { Accordion, Icon, Popup, Card, Button, Loader } from \"@scuf/common\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport { emptyVehicle } from \"../../../JS/DefaultEntities\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport lodash from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { vehicleValidationDef } from \"../../../JS/ValidationDef\";\r\nimport { functionGroups, fnVehicle } from \"../../../JS/FunctionGroups\";\r\nimport VehicleBasicFields from \"../../UIBase/Details/VehicleBasicFields\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport {\r\n  vehicleAttributeEntity,\r\n  vehiclePrimeMoverAttributeEntity,\r\n  vehicleTrailerAttributeEntity,\r\n} from \"../../../JS/AttributeEntity\";\r\nimport { AttributeDetails } from \"../../UIBase/Details/AttributeDetails\";\r\nimport * as DateFieldsInEntities from \"../../../JS/DateFieldsInEntities\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nlet tractorColumns = null;\r\nlet trailerColumns = null;\r\nlet tractorWithTrailer = true;\r\nlet vehiclePrimeMovers = [];\r\nlet vehicleWithTrailer = true;\r\nlet vehicleTrailers = [];\r\nclass TractorWithTrailerDetailsComposite extends Component {\r\n  state = {\r\n    isReadyToRender: false,\r\n    vehicle: {},\r\n    modVehicle: {},\r\n    validationErrors:\r\n      Utilities.getInitialValidationErrors(vehicleValidationDef),\r\n    carrierOptions: [],\r\n    terminalOptions: [],\r\n    volumeUOMOptions: [],\r\n    weightUOMOptions: [],\r\n    lengthUOMOptions: [],\r\n    productTypeOptions: [],\r\n    step1Active:\r\n      this.props.selectedRow.Common_Code === undefined ? true : false,\r\n    step2Active: false,\r\n    step3Active:\r\n      this.props.selectedRow.Common_Code === undefined ? false : true,\r\n    // step1Data: [],\r\n    // step2Data: [],\r\n    tractorSelection: [],\r\n    trailerSelection: [],\r\n    attributeMetaDataList: [],\r\n    modVehicleAttributeMetaDataList: [],\r\n    vehicleAttributeValidationErrors: [],\r\n    modVehiclePrimeMoversAttributeMetaDataList: [],\r\n    vehiclePrimeMoversAttributeValidationErrors: [],\r\n    modVehicleTrailerAttributeMetaDataList: [],\r\n    vehicleTrailerAttributeValidationErrors: [],\r\n    isBonded: false,\r\n     maxNumberOfCompartments: 12,\r\n     showAuthenticationLayout: false,\r\n     tempVehicle: {},\r\n  };\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      let isNewVehicle = false;\r\n      if (this.props.selectedRow.Common_Code === undefined) isNewVehicle = true;\r\n      this.getAttributes(isNewVehicle);\r\n      this.getCarrierList(this.props.selectedShareholder);\r\n      this.getUOMList();\r\n      this.IsBonded();\r\n      this.getProductTypes();\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on componentDidMount\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  IsBonded() {\r\n    axios(\r\n      RestAPIs.GetLookUpData + \"?LookUpTypeCode=Bonding\",\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let bonded = result.EntityResult[\"EnableBondingNon-Bonding\"];\r\n          this.setState({\r\n            isBonded: bonded.toUpperCase() === \"TRUE\" ? true : false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isBonded: false,\r\n          });\r\n          console.log(\"Error in get IsBonded: \", result.ErrorList);\r\n        }\r\n      })\r\n       axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=VirtualPreset\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (!isNaN(parseInt(result.EntityResult[\"RoadMaximumNumberOfCompartments\"]))) {\r\n            this.setState({maxNumberOfCompartments:parseInt(result.EntityResult[\"RoadMaximumNumberOfCompartments\"])})\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          isBonded: false,\r\n        });\r\n        console.log(\r\n          \"SealMasterDetailsComposite: Error occurred on get IsBonded\",\r\n          error\r\n        );\r\n      });\r\n  }\r\n  getProductTypes() {\r\n    axios(\r\n      RestAPIs.GetProductType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            let productTypeOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ productTypeOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getProductTypes:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getProductTypes:\", error);\r\n      });\r\n  }\r\n  getUOMList() {\r\n    axios(\r\n      RestAPIs.GetUOMList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        // console.log(response);\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let weightUOMs = result.EntityResult.MASS;\r\n            let weightUOMOptions = [];\r\n            weightUOMs.forEach((weightOption) => {\r\n              weightUOMOptions.push({\r\n                text: weightOption,\r\n                value: weightOption,\r\n              });\r\n            });\r\n\r\n            let volumeUOMs = result.EntityResult.VOLUME;\r\n            let volumeUOMOptions = [];\r\n            volumeUOMs.forEach((volumeOption) => {\r\n              volumeUOMOptions.push({\r\n                text: volumeOption,\r\n                value: volumeOption,\r\n              });\r\n            });\r\n\r\n            let lengthUOMs = result.EntityResult.LENGTH;\r\n            let lengthUOMOptions = [];\r\n            lengthUOMs.forEach((lengthOption) => {\r\n              lengthUOMOptions.push({\r\n                text: lengthOption,\r\n                value: lengthOption,\r\n              });\r\n            });\r\n\r\n            this.setState({\r\n              volumeUOMOptions,\r\n              weightUOMOptions,\r\n              lengthUOMOptions,\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getUOM:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting getUOM:\", error);\r\n      });\r\n  }\r\n\r\n  getCarrierList(shareholder) {\r\n    axios(\r\n      RestAPIs.GetCarrierCodes +\r\n        \"?ShareholderCode=\" +\r\n        shareholder +\r\n        \"&Transportationtype=\" +\r\n        Constants.TransportationType.ROAD,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (\r\n            result.EntityResult !== null &&\r\n            Array.isArray(result.EntityResult)\r\n          ) {\r\n            // const carrierOptions = [];\r\n            // result.EntityResult.Table.forEach((carrier) => {\r\n            //   carrierOptions.push({\r\n            //     text: carrier.Common_Code,\r\n            //     value: carrier.Common_Name,\r\n            //   });\r\n            // });\r\n            let carrierOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n\r\n            this.setState({ carrierOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in GetCarrierListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Carrier List:\", error);\r\n      });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.vehicle.Code !== \"\" &&\r\n        nextProps.selectedRow.Common_Code === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getVehicle(true);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  displayValues(cellData, columnDetail) {\r\n    const { value, field } = cellData;\r\n    if (typeof value === \"boolean\" || field === \"Active\") {\r\n      if (value) return <Icon name=\"check\" size=\"small\" color=\"green\" />;\r\n      else return <Icon name=\"close\" size=\"small\" color=\"red\" />;\r\n    } else if (value === \"\" || value === null || value === undefined) {\r\n      return value;\r\n    } else if (field === \"TerminalCodes\" && value !== null) {\r\n      return this.terminalPopOver(value);\r\n    }\r\n    // var columnType = columnDetails.find(function (detail) {\r\n    //   if (detail.Name === field) {\r\n    //     return detail;\r\n    //   }\r\n    // });\r\n    else if (\r\n      columnDetail !== undefined &&\r\n      columnDetail !== null &&\r\n      columnDetail.DataType !== undefined &&\r\n      columnDetail.DataType === \"DateTime\"\r\n    ) {\r\n      return (\r\n        new Date(value).toLocaleDateString() +\r\n        \" \" +\r\n        new Date(value).toLocaleTimeString()\r\n      );\r\n    } else if (\r\n      columnDetail !== undefined &&\r\n      columnDetail !== null &&\r\n      columnDetail.DataType !== undefined &&\r\n      columnDetail.DataType === \"Date\"\r\n    ) {\r\n      return new Date(value).toLocaleDateString();\r\n    } else return value;\r\n  }\r\n  terminalPopOver(terminalCodes) {\r\n    if (terminalCodes.split(\",\").length > 2) {\r\n      return (\r\n        <Popup\r\n          className=\"popup-theme-wrap\"\r\n          on=\"hover\"\r\n          element={<span>{terminalCodes.split(\",\").length}</span>}\r\n        >\r\n          <Card>\r\n            <Card.Content>{terminalCodes}</Card.Content>\r\n          </Card>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return <span>{terminalCodes}</span>;\r\n    }\r\n  }\r\n\r\n  getAttributes(isNewVehicle) {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetAttributesMetaData,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          [\r\n            vehicleAttributeEntity,\r\n            vehiclePrimeMoverAttributeEntity,\r\n            vehicleTrailerAttributeEntity,\r\n          ],\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              attributeMetaDataList: lodash.cloneDeep(result.EntityResult),\r\n              vehicleAttributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.vehicle\r\n                ),\r\n              vehiclePrimeMoversAttributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.vehicleprimemover\r\n                ),\r\n              vehicleTrailerAttributeValidationErrors:\r\n                Utilities.getAttributeInitialValidationErrors(\r\n                  result.EntityResult.vehicletrailer\r\n                ),\r\n            },\r\n            () => this.getVehicle(isNewVehicle)\r\n          );\r\n        } else {\r\n          console.log(\"Error in getAttributes:\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error while getAttributes:\", error);\r\n    }\r\n  }\r\n\r\n  getVehicle(isNewVehicle) {\r\n    if (isNewVehicle) {\r\n      let terminalOptions = [];\r\n      emptyVehicle.VehicleType = Constants.VehicleType.TractorWithTrailer;\r\n      vehicleTrailers = [];\r\n      vehiclePrimeMovers = [];\r\n      this.setState(\r\n        {\r\n          vehicle: lodash.cloneDeep(emptyVehicle),\r\n          modVehicle: lodash.cloneDeep(emptyVehicle),\r\n          tractorSelection: [],\r\n          trailerSelection: [],\r\n          isReadyToRender: true,\r\n          terminalOptions,\r\n          modVehicleAttributeMetaDataList: [],\r\n          modVehiclePrimeMoversAttributeMetaDataList: [],\r\n          modVehicleTrailerAttributeMetaDataList: [],\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnVehicle\r\n          ),\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange([]);\r\n          } else {\r\n            this.localNodeAttribute();\r\n          }\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value:\r\n          this.props.selectedRow.Common_Code === undefined\r\n            ? this.state.modVehicle.Code\r\n            : this.props.selectedRow.Common_Code,\r\n      },\r\n    ];\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.GetVehicle,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        //console.log(response);\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            result.EntityResult.MaxLoadableWeight =\r\n              result.EntityResult.MaxLoadableWeight +\r\n              result.EntityResult.TareWeight;\r\n            vehiclePrimeMovers = result.EntityResult.VehiclePrimeMovers;\r\n            vehicleTrailers = result.EntityResult.VehicleTrailers;\r\n          }\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              vehicle: lodash.cloneDeep(result.EntityResult),\r\n              modVehicle: lodash.cloneDeep(result.EntityResult),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnVehicle\r\n              ),\r\n            },\r\n            () => {\r\n              this.getTerminalsForCarrier(\r\n                result.EntityResult.CarrierCompanyCode\r\n              );\r\n              if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n                this.terminalSelectionChange(result.EntityResult.TerminalCodes);\r\n              } else {\r\n                this.localNodeAttribute();\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          emptyVehicle.ShareholderCode = this.props.selectedShareholder;\r\n          emptyVehicle.VehicleType = Constants.VehicleType.TractorWithTrailer;\r\n          this.setState({\r\n            modVehicle: lodash.cloneDeep(emptyVehicle),\r\n            vehicle: lodash.cloneDeep(emptyVehicle),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in GetVehicle:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Vehicle:\", error);\r\n      });\r\n  }\r\n\r\n  terminalSelectionChange(selectedTerminals) {\r\n    try {\r\n      if (selectedTerminals !== undefined && selectedTerminals !== null) {\r\n        let attributesTerminalsList = [];\r\n        var attributeMetaDataList = [];\r\n        var modVehicleAttributeMetaDataList = [];\r\n        attributeMetaDataList = lodash.cloneDeep(\r\n          this.state.attributeMetaDataList\r\n        );\r\n        modVehicleAttributeMetaDataList = lodash.cloneDeep(\r\n          this.state.modVehicleAttributeMetaDataList\r\n        );\r\n        const vehicleAttributeValidationErrors = lodash.cloneDeep(\r\n          this.state.vehicleAttributeValidationErrors\r\n        );\r\n        var modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n\r\n        selectedTerminals.forEach((terminal) => {\r\n          var existitem = modVehicleAttributeMetaDataList.find(\r\n            (selectedAttribute) => {\r\n              return selectedAttribute.TerminalCode === terminal;\r\n            }\r\n          );\r\n\r\n          if (existitem === undefined) {\r\n            attributeMetaDataList.vehicle.forEach(function (attributeMetaData) {\r\n              if (attributeMetaData.TerminalCode === terminal) {\r\n                var Attributevalue = modVehicle.Attributes.find(\r\n                  (baseproductAttribute) => {\r\n                    return baseproductAttribute.TerminalCode === terminal;\r\n                  }\r\n                );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n                attributesTerminalsList.push(attributeMetaData);\r\n              }\r\n            });\r\n          } else {\r\n            attributesTerminalsList.push(existitem);\r\n          }\r\n        });\r\n        modVehicleAttributeMetaDataList = [];\r\n        modVehicleAttributeMetaDataList = attributesTerminalsList;\r\n        modVehicleAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n          modVehicleAttributeMetaDataList\r\n        );\r\n        vehicleAttributeValidationErrors.forEach((attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n              (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        });\r\n        this.setState({\r\n          modVehicleAttributeMetaDataList,\r\n          vehicleAttributeValidationErrors,\r\n        });\r\n        this.setVehiclePrimeMoverAttributes(selectedTerminals);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"RigidTruckWithTrailerDetailsComposite:Error occured on terminalSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  setVehiclePrimeMoverAttributes(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modVehiclePrimeMoversAttributeMetaDataList = [];\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modVehiclePrimeMoversAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modVehiclePrimeMoversAttributeMetaDataList\r\n      );\r\n      const vehiclePrimeMoversAttributeValidationErrors = lodash.cloneDeep(\r\n        this.state.vehiclePrimeMoversAttributeValidationErrors\r\n      );\r\n      var modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modVehiclePrimeMoversAttributeMetaDataList.find(\r\n          (selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          }\r\n        );\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.vehicleprimemover.forEach(function (\r\n            attributeMetaData\r\n          ) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              if (\r\n                (modVehicle.VehiclePrimeMovers !== null) &\r\n                (modVehicle.VehiclePrimeMovers.length > 0)\r\n              ) {\r\n                var Attributevalue =\r\n                  modVehicle.VehiclePrimeMovers[0].Attributes.find(\r\n                    (baseproductAttribute) => {\r\n                      return baseproductAttribute.TerminalCode === terminal;\r\n                    }\r\n                  );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modVehiclePrimeMoversAttributeMetaDataList = [];\r\n      modVehiclePrimeMoversAttributeMetaDataList = attributesTerminalsList;\r\n      modVehiclePrimeMoversAttributeMetaDataList =\r\n        Utilities.attributesConvertoDecimal(\r\n          modVehiclePrimeMoversAttributeMetaDataList\r\n        );\r\n      vehiclePrimeMoversAttributeValidationErrors.forEach(\r\n        (attributeValidation) => {\r\n          var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n            return attributeValidation.TerminalCode === selectedTerminals;\r\n          });\r\n          if (existTerminal === undefined) {\r\n            Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n              (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n            );\r\n          }\r\n        }\r\n      );\r\n      this.setState({\r\n        modVehiclePrimeMoversAttributeMetaDataList,\r\n        vehiclePrimeMoversAttributeValidationErrors,\r\n      });\r\n      this.setVehicleTrailerAttributes(selectedTerminals);\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on setVehiclePrimeMoverAttributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  setVehicleTrailerAttributes(selectedTerminals) {\r\n    try {\r\n      let attributesTerminalsList = [];\r\n      var attributeMetaDataList = [];\r\n      var modVehicleTrailerAttributeMetaDataList = [];\r\n      attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      modVehicleTrailerAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modVehicleTrailerAttributeMetaDataList\r\n      );\r\n      const vehicleTrailerAttributeValidationErrors = lodash.cloneDeep(\r\n        this.state.vehicleTrailerAttributeValidationErrors\r\n      );\r\n      var modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n\r\n      selectedTerminals.forEach((terminal) => {\r\n        var existitem = modVehicleTrailerAttributeMetaDataList.find(\r\n          (selectedAttribute) => {\r\n            return selectedAttribute.TerminalCode === terminal;\r\n          }\r\n        );\r\n\r\n        if (existitem === undefined) {\r\n          attributeMetaDataList.vehicletrailer.forEach(function (\r\n            attributeMetaData\r\n          ) {\r\n            if (attributeMetaData.TerminalCode === terminal) {\r\n              if (\r\n                (modVehicle.VehicleTrailers !== null) &\r\n                (modVehicle.VehicleTrailers.length > 0)\r\n              ) {\r\n                var Attributevalue =\r\n                  modVehicle.VehicleTrailers[0].Attributes.find(\r\n                    (baseproductAttribute) => {\r\n                      return baseproductAttribute.TerminalCode === terminal;\r\n                    }\r\n                  );\r\n                if (Attributevalue !== undefined) {\r\n                  attributeMetaData.attributeMetaDataList.forEach(function (\r\n                    attributeMetaData\r\n                  ) {\r\n                    var valueAttribute =\r\n                      Attributevalue.ListOfAttributeData.find((x) => {\r\n                        return x.AttributeCode === attributeMetaData.Code;\r\n                      });\r\n                    if (valueAttribute !== undefined)\r\n                      attributeMetaData.DefaultValue =\r\n                        valueAttribute.AttributeValue;\r\n                  });\r\n                }\r\n              }\r\n              attributesTerminalsList.push(attributeMetaData);\r\n            }\r\n          });\r\n        } else {\r\n          attributesTerminalsList.push(existitem);\r\n        }\r\n      });\r\n      modVehicleTrailerAttributeMetaDataList = [];\r\n      modVehicleTrailerAttributeMetaDataList = attributesTerminalsList;\r\n      modVehicleTrailerAttributeMetaDataList = Utilities.attributesConvertoDecimal(\r\n        modVehicleTrailerAttributeMetaDataList\r\n      );\r\n      vehicleTrailerAttributeValidationErrors.forEach((attributeValidation) => {\r\n        var existTerminal = selectedTerminals.find((selectedTerminals) => {\r\n          return attributeValidation.TerminalCode === selectedTerminals;\r\n        });\r\n        if (existTerminal === undefined) {\r\n          Object.keys(attributeValidation.attributeValidationErrors).forEach(\r\n            (key) => (attributeValidation.attributeValidationErrors[key] = \"\")\r\n          );\r\n        }\r\n      });\r\n      this.setState({\r\n        modVehicleTrailerAttributeMetaDataList,\r\n        vehicleTrailerAttributeValidationErrors,\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on setVehicleTrailerAttributes\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  localNodeAttribute() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      if (\r\n        Array.isArray(attributeMetaDataList.vehicle) &&\r\n        attributeMetaDataList.vehicle.length > 0\r\n      ) {\r\n        this.terminalSelectionChange([\r\n          attributeMetaDataList.vehicle[0].TerminalCode,\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on localNodeAttribute\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getTerminalsForCarrier(carrier) {\r\n    if (!this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n      const modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n      modVehicle.CarrierCompanyCode = carrier;\r\n      const terminalOptions = [];\r\n      //modVehicle.TerminalCodes = [];\r\n      this.setState({ terminalOptions, modVehicle });\r\n    } else {\r\n      const modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n      let terminalOptions = [...this.state.terminalOptions];\r\n\r\n      modVehicle.CarrierCompanyCode = carrier;\r\n\r\n      try {\r\n        if (carrier === undefined) {\r\n          terminalOptions = [];\r\n          modVehicle.TerminalCodes = [];\r\n          this.setState({ terminalOptions, modVehicle });\r\n          this.terminalSelectionChange([]);\r\n          return;\r\n        }\r\n        let keyCode = [\r\n          {\r\n            key: KeyCodes.carrierCode,\r\n            value: carrier,\r\n          },\r\n          {\r\n            key: KeyCodes.transportationType,\r\n            value: Constants.TransportationType.ROAD,\r\n          },\r\n        ];\r\n        let obj = {\r\n          ShareHolderCode: this.props.selectedShareholder,\r\n          keyDataCode: KeyCodes.carrierCode,\r\n          KeyCodes: keyCode,\r\n        };\r\n        axios(\r\n          RestAPIs.GetCarrier,\r\n          Utilities.getAuthenticationObjectforPost(\r\n            obj,\r\n            this.props.tokenDetails.tokenInfo\r\n          )\r\n        )\r\n          .then((response) => {\r\n            let result = response.data;\r\n            //console.log(result);\r\n            //console.log(\"IsSuccess-\", result.IsSuccess);\r\n\r\n            if (\r\n              result.IsSuccess === true &&\r\n              result.EntityResult !== null &&\r\n              result.EntityResult.TerminalCodes !== null\r\n            ) {\r\n              terminalOptions = [...result.EntityResult.TerminalCodes];\r\n              this.setState({ terminalOptions });\r\n            } else {\r\n              terminalOptions = [];\r\n\r\n              this.setState({ terminalOptions });\r\n              console.log(\"Error in GetCarrier:\", result.ErrorList);\r\n            }\r\n            let vehicle = { ...this.state.vehicle };\r\n            if (\r\n              vehicle.Code === undefined ||\r\n              vehicle.Code === \"\" ||\r\n              vehicle.Code === null\r\n            ) {\r\n              if (terminalOptions.length === 1) {\r\n                modVehicle.TerminalCodes = [...terminalOptions];\r\n                this.terminalSelectionChange(modVehicle.TerminalCodes);\r\n              } else {\r\n                modVehicle.TerminalCodes = [];\r\n                this.terminalSelectionChange([]);\r\n              }\r\n            }\r\n\r\n            if (Array.isArray(modVehicle.TerminalCodes)) {\r\n              modVehicle.TerminalCodes = terminalOptions.filter((x) =>\r\n                modVehicle.TerminalCodes.includes(x)\r\n              );\r\n            }\r\n\r\n            this.setState({ modVehicle });\r\n          })\r\n          .catch((error) => {\r\n            terminalOptions = [];\r\n            modVehicle.TerminalCodes = [];\r\n            this.setState({ terminalOptions, modVehicle });\r\n            console.log(\"Error while getting Carrier:\", error, carrier);\r\n            //throw error;\r\n          });\r\n      } catch (error) {\r\n        terminalOptions = [];\r\n        modVehicle.TerminalCodes = [];\r\n        this.setState({ terminalOptions, modVehicle });\r\n        console.log(\r\n          \"TractowWithTrailerDetailsComposite:Error occured on handleCarrierChange\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  }\r\n  handleReset = () => {\r\n    try {\r\n      this.setState(\r\n        {\r\n          modVehicle: lodash.cloneDeep(this.state.vehicle),\r\n          modVehicleAttributeMetaDataList: [],\r\n          modVehiclePrimeMoversAttributeMetaDataList: [],\r\n          modVehicleTrailerAttributeMetaDataList: [],\r\n        },\r\n        () => {\r\n          if (this.props.userDetails.EntityResult.IsEnterpriseNode) {\r\n            this.terminalSelectionChange(this.state.modVehicle.TerminalCodes);\r\n            this.handleResetAttributeValidationError();\r\n          } else {\r\n            this.localNodeAttribute();\r\n            this.handleResetAttributeValidationError();\r\n          }\r\n        }\r\n      );\r\n      if (this.state.vehicle.Code === \"\") {\r\n        //let terminalOptions = { ...this.state.terminalOptions };\r\n        let terminalOptions = [];\r\n        this.setState({ terminalOptions });\r\n      }\r\n      vehiclePrimeMovers = lodash.cloneDeep(\r\n        this.state.vehicle.VehiclePrimeMovers\r\n      );\r\n      vehicleTrailers = lodash.cloneDeep(this.state.vehicle.VehicleTrailers);\r\n      let validationErrors = { ...this.state.validationErrors };\r\n      Object.keys(validationErrors).forEach((key) => {\r\n        validationErrors[key] = \"\";\r\n      });\r\n      this.setState({ validationErrors });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on handleReset\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleResetAttributeValidationError() {\r\n    try {\r\n      var attributeMetaDataList = lodash.cloneDeep(\r\n        this.state.attributeMetaDataList\r\n      );\r\n      this.setState({\r\n        vehicleAttributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.vehicle\r\n          ),\r\n        vehiclePrimeMoversAttributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.vehicleprimemover\r\n          ),\r\n        vehicleTrailerAttributeValidationErrors:\r\n          Utilities.getAttributeInitialValidationErrors(\r\n            attributeMetaDataList.vehicletrailer\r\n          ),\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on handleResetAttributeValidationError\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCarrierChange = (carrier) => {\r\n    //this.getTerminalsForCarrier(carrier);\r\n    if (this.props.userDetails.EntityResult.IsEnterpriseNode)\r\n      this.getTerminalsForCarrier(carrier);\r\n    else {\r\n      const modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n      modVehicle.CarrierCompanyCode = carrier;\r\n      const terminalOptions = [];\r\n      modVehicle.TerminalCodes = [];\r\n      this.setState({ terminalOptions, modVehicle });\r\n    }\r\n    if (vehicleValidationDef[\"CarrierCompanyCode\"] !== undefined) {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      validationErrors[\"CarrierCompanyCode\"] = Utilities.validateField(\r\n        vehicleValidationDef[\"CarrierCompanyCode\"],\r\n        carrier\r\n      );\r\n\r\n      this.setState({ validationErrors });\r\n    }\r\n  };\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n      modVehicle.Active = value;\r\n      if (modVehicle.Active !== this.state.vehicle.Active)\r\n        modVehicle.Remarks = \"\";\r\n      this.setState({ modVehicle });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured in handleActiveStatusChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleChange = (propertyName, data) => {\r\n    let modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n    try {\r\n      modVehicle[propertyName] = data;\r\n\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      if (modVehicle.Active === this.state.vehicle.Active) {\r\n        if (\r\n          this.state.vehicle.Remarks === modVehicle.Remarks ||\r\n          modVehicle.Remarks === \"\"\r\n        ) {\r\n          if (\r\n            this.state.vehicle.IsBonded === modVehicle.IsBonded &&\r\n            this.state.isBonded\r\n          )\r\n            validationErrors.Remarks = \"\";\r\n        }\r\n        if (modVehicle.Remarks === \"\")\r\n          modVehicle.Remarks = this.state.vehicle.Remarks;\r\n      }\r\n      // if (propertyName === \"Active\") {\r\n      //   if (modVehicle.Active !== this.state.vehicle.Active) {\r\n      //     modVehicle.Remarks = \"\";\r\n      //   }\r\n      // }\r\n\r\n      if (propertyName === \"IsBonded\") {\r\n        modVehicle.VehicleCustomsBondNo = null;\r\n        modVehicle.BondExpiryDate = null;\r\n        validationErrors.VehicleCustomsBondNo = \"\";\r\n        validationErrors.BondExpiryDate = \"\";\r\n      }\r\n\r\n      if (\r\n        propertyName === \"RoadTaxNo\" ||\r\n        propertyName === \"RoadTaxNoIssueDate\" ||\r\n        propertyName === \"RoadTaxNoExpiryDate\"\r\n      ) {\r\n        // validationErrors[propertyName] = \"\";\r\n        validationErrors.RoadTaxNo = \"\";\r\n        validationErrors.RoadTaxNoExpiryDate = \"\";\r\n        validationErrors.RoadTaxNoIssueDate = \"\";\r\n      }\r\n      if (\r\n        propertyName === \"Height\" ||\r\n        propertyName === \"Length\" ||\r\n        propertyName === \"Width\" ||\r\n        propertyName === \"LWHUOM\"\r\n      ) {\r\n        validationErrors.LWHUOM = \"\";\r\n      }\r\n\r\n      if (vehicleValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          vehicleValidationDef[propertyName],\r\n          data\r\n        );\r\n      }\r\n      this.setState({ validationErrors, modVehicle });\r\n\r\n      if (propertyName === \"TerminalCodes\") {\r\n        this.terminalSelectionChange(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleAllTerminalsChange = (checked) => {\r\n    try {\r\n      let modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n      let terminalOptions = [...this.state.terminalOptions];\r\n      if (checked) modVehicle.TerminalCodes = terminalOptions;\r\n      else modVehicle.TerminalCodes = [];\r\n      this.setState({ modVehicle });\r\n      this.terminalSelectionChange(modVehicle.TerminalCodes);\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on handleAllTerminalsChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  validateSave(modVehicle, attributesList) {\r\n    const validationErrors = { ...this.state.validationErrors };\r\n    Object.keys(vehicleValidationDef).forEach(function (key) {\r\n      if (modVehicle[key] !== undefined)\r\n        validationErrors[key] = Utilities.validateField(\r\n          vehicleValidationDef[key],\r\n          modVehicle[key]\r\n        );\r\n    });\r\n\r\n    if (modVehicle.Active !== this.state.vehicle.Active) {\r\n      if (modVehicle.Remarks === \"\") {\r\n        validationErrors[\"Remarks\"] = \"Vehicle_RemarksRequired\";\r\n      }\r\n    }\r\n\r\n    if (this.state.isBonded && modVehicle.IsBonded) {\r\n      if (\r\n        modVehicle.VehicleCustomsBondNo === \"\" ||\r\n        modVehicle.VehicleCustomsBondNo === null\r\n      ) {\r\n        validationErrors[\"VehicleCustomsBondNo\"] =\r\n          \"VehicleInfo_VehicleCustomsBondNoError\";\r\n      }\r\n      if (\r\n        modVehicle.BondExpiryDate === \"\" ||\r\n        modVehicle.BondExpiryDate === null\r\n      ) {\r\n        validationErrors[\"BondExpiryDate\"] = \"VehicleInfo_BondExpiryDateError\";\r\n      }\r\n      if (\r\n        modVehicle.IsBonded !== this.state.vehicle.IsBonded &&\r\n        this.state.vehicle.Code !== \"\"\r\n      ) {\r\n        if (modVehicle.Remarks === \"\") {\r\n          validationErrors[\"Remarks\"] = \"Vehicle_RemarksRequired\";\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      (modVehicle.RoadTaxNo !== null && modVehicle.RoadTaxNo !== \"\") ||\r\n      !isNaN(Date.parse(modVehicle.RoadTaxNoIssueDate)) ||\r\n      !isNaN(Date.parse(modVehicle.RoadTaxNoExpiryDate))\r\n    ) {\r\n      if (modVehicle.RoadTaxNo === null || modVehicle.RoadTaxNo === \"\") {\r\n        validationErrors[\"RoadTaxNo\"] = \"Vehicle_RoadTaxNoRequired\";\r\n      }\r\n\r\n      if (isNaN(Date.parse(modVehicle.RoadTaxNoIssueDate))) {\r\n        validationErrors[\"RoadTaxNoIssueDate\"] = \"Vehicle_RoadTaxIssRequired\";\r\n      }\r\n      if (isNaN(Date.parse(modVehicle.RoadTaxNoExpiryDate))) {\r\n        validationErrors[\"RoadTaxNoExpiryDate\"] = \"Vehicle_RoadTaxExpRequired\";\r\n      }\r\n    }\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"VehicleInfo_SavedStatus\",\r\n      messageResultDetails: [],\r\n    };\r\n\r\n    if (\r\n      (modVehicle.Height !== null ||\r\n        modVehicle.Width != null ||\r\n        modVehicle.Length !== null) &&\r\n      modVehicle.LWHUOM === null\r\n    ) {\r\n      validationErrors.LWHUOM = \"PrimeMover_UOMRequired\";\r\n    }\r\n    if (this.state.tractorSelection.length <= 0) {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [\"Vehicle_Code\"],\r\n        keyValues: [modVehicle.Code],\r\n        isSuccess: false,\r\n        errorMessage: \"Vehicle_PMRequired\",\r\n      });\r\n    }\r\n     let compartmentCount = 0;\r\n    if (this.state.trailerSelection.length <= 0) {\r\n      notification.messageResultDetails.push({\r\n        keyFields: [\"Vehicle_Code\"],\r\n        keyValues: [modVehicle.Code],\r\n        isSuccess: false,\r\n        errorMessage: \"Vehicle_TrailerRequired\",\r\n      });\r\n    }\r\n    else {\r\n      this.state.trailerSelection.map((item) => {\r\n        compartmentCount = compartmentCount + item.CompCount;\r\n      })\r\n    }\r\n     if (this.state.maxNumberOfCompartments < compartmentCount) {\r\n       notification.messageResultDetails.push({\r\n        keyFields: [\"Vehicle_Code\"],\r\n        keyValues: [modVehicle.Code],\r\n        isSuccess: false,\r\n        errorMessage: \"Compartment_limit_Exceeded\",\r\n      });\r\n    }\r\n    var vehicleAttributeValidationErrors = lodash.cloneDeep(\r\n      this.state.vehicleAttributeValidationErrors\r\n    );\r\n    let attributeData1 = attributesList.find(function (item) {\r\n      return item[\"vehilceAttributeList\"] !== undefined;\r\n    });\r\n\r\n    attributeData1.vehilceAttributeList.forEach((attribute) => {\r\n      vehicleAttributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    var vehiclePrimeMoversAttributeValidationErrors = lodash.cloneDeep(\r\n      this.state.vehiclePrimeMoversAttributeValidationErrors\r\n    );\r\n\r\n    let attributeData3 = attributesList.find(function (item) {\r\n      return item[\"vehiclePrimeMoverAttributeList\"] !== undefined;\r\n    });\r\n\r\n    attributeData3.vehiclePrimeMoverAttributeList.forEach((attribute) => {\r\n      vehiclePrimeMoversAttributeValidationErrors.forEach(\r\n        (attributeValidation) => {\r\n          if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n            attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n              attributeValidation.attributeValidationErrors[\r\n                attributeMetaData.Code\r\n              ] = Utilities.valiateAttributeField(\r\n                attributeMetaData,\r\n                attributeMetaData.DefaultValue\r\n              );\r\n            });\r\n          }\r\n        }\r\n      );\r\n    });\r\n\r\n    var vehicleTrailerAttributeValidationErrors = lodash.cloneDeep(\r\n      this.state.vehicleTrailerAttributeValidationErrors\r\n    );\r\n    let attributeData2 = attributesList.find(function (item) {\r\n      return item[\"vehicleTrailerAttributeList\"] !== undefined;\r\n    });\r\n\r\n    attributeData2.vehicleTrailerAttributeList.forEach((attribute) => {\r\n      vehicleTrailerAttributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attribute.attributeMetaDataList.forEach((attributeMetaData) => {\r\n            attributeValidation.attributeValidationErrors[\r\n              attributeMetaData.Code\r\n            ] = Utilities.valiateAttributeField(\r\n              attributeMetaData,\r\n              attributeMetaData.DefaultValue\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({\r\n      validationErrors,\r\n      vehicleAttributeValidationErrors,\r\n      vehiclePrimeMoversAttributeValidationErrors,\r\n      vehicleTrailerAttributeValidationErrors,\r\n    });\r\n\r\n    var returnValue = true;\r\n    vehicleAttributeValidationErrors.forEach((x) => {\r\n      if (returnValue) {\r\n        returnValue = Object.values(x.attributeValidationErrors).every(\r\n          function (value) {\r\n            return value === \"\";\r\n          }\r\n        );\r\n      } else {\r\n        return returnValue;\r\n      }\r\n    });\r\n\r\n    if (returnValue)\r\n      vehiclePrimeMoversAttributeValidationErrors.forEach((x) => {\r\n        if (returnValue) {\r\n          returnValue = Object.values(x.attributeValidationErrors).every(\r\n            function (value) {\r\n              return value === \"\";\r\n            }\r\n          );\r\n        } else {\r\n          return returnValue;\r\n        }\r\n      });\r\n\r\n    if (returnValue)\r\n      vehicleTrailerAttributeValidationErrors.forEach((x) => {\r\n        if (returnValue) {\r\n          returnValue = Object.values(x.attributeValidationErrors).every(\r\n            function (value) {\r\n              return value === \"\";\r\n            }\r\n          );\r\n        } else {\r\n          return returnValue;\r\n        }\r\n      });\r\n\r\n    if (returnValue)\r\n      returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n    else return returnValue;\r\n\r\n    if (notification.messageResultDetails.length > 0) {\r\n      this.props.onSaved(this.state.modVehicle, \"update\", notification);\r\n      return false;\r\n    }\r\n    return returnValue;\r\n  }\r\n  convertStringtoDecimal(modVehicle, attributesList) {\r\n    try {\r\n      if (modVehicle.Height !== null && modVehicle.Height !== \"\") {\r\n        modVehicle.Height = Utilities.convertStringtoDecimal(modVehicle.Height);\r\n      }\r\n      if (modVehicle.Length !== null && modVehicle.Length !== \"\") {\r\n        modVehicle.Length = Utilities.convertStringtoDecimal(modVehicle.Length);\r\n      }\r\n      if (modVehicle.Width !== null && modVehicle.Width !== \"\") {\r\n        modVehicle.Width = Utilities.convertStringtoDecimal(modVehicle.Width);\r\n      }\r\n      modVehicle = this.fillAttributeDetails(modVehicle, attributesList);\r\n      return modVehicle;\r\n    } catch (err) {\r\n      console.log(\r\n        \"convertStringtoDecimal error TractorWithTrailer details\",\r\n        err\r\n      );\r\n    }\r\n  }\r\n\r\n  saveVehicle = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let tempVehicle = lodash.cloneDeep(this.state.tempVehicle);\r\n\r\n      this.state.vehicle.Code === \"\"\r\n            ? this.createVehicle(tempVehicle)\r\n            : this.updateVehicle(tempVehicle);\r\n    } catch (error) {\r\n      console.log(\"PrimeMoversComposite : Error in savePrimeMover\");\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n      let returnValue = Object.values(this.state.validationErrors).every(\r\n        function (value) {\r\n          return value === \"\";\r\n        }\r\n      );\r\n      if (returnValue) {\r\n        let modVehicle = this.fillDetails();\r\n        let attributesList = [];\r\n        let vehicleAttributeList = Utilities.attributesConverttoLocaleString(\r\n          this.state.modVehicleAttributeMetaDataList\r\n        );\r\n        let vehicleTrailerAttributeList =\r\n          Utilities.attributesConverttoLocaleString(\r\n            this.state.modVehicleTrailerAttributeMetaDataList\r\n          );\r\n        let vehiclePrimeMoverAttributeList =\r\n          Utilities.attributesConverttoLocaleString(\r\n            this.state.modVehiclePrimeMoversAttributeMetaDataList\r\n          );\r\n        attributesList.push({ vehilceAttributeList: vehicleAttributeList });\r\n        attributesList.push({\r\n          vehicleTrailerAttributeList: vehicleTrailerAttributeList,\r\n        });\r\n        attributesList.push({\r\n          vehiclePrimeMoverAttributeList: vehiclePrimeMoverAttributeList,\r\n        });\r\n      //  this.setState({ saveEnabled: false });\r\n\r\n        if (this.validateSave(modVehicle, attributesList)) {\r\n          modVehicle = this.convertStringtoDecimal(modVehicle, attributesList);\r\n          modVehicle = Utilities.convertDatesToString(\r\n            DateFieldsInEntities.DatesInEntity.Vehicle,\r\n            modVehicle\r\n          );\r\n          modVehicle.VehiclePrimeMovers.forEach(\r\n            (vp) =>\r\n              (vp.Primemover = Utilities.convertDatesToString(\r\n                DateFieldsInEntities.DatesInEntity.PrimeMover,\r\n                vp.Primemover\r\n              ))\r\n          );\r\n\r\n          let showAuthenticationLayout =\r\n          this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n            ? true\r\n            : false;\r\n        let tempVehicle = lodash.cloneDeep(modVehicle);\r\n        this.setState({ showAuthenticationLayout, tempVehicle }, () => {\r\n          if (showAuthenticationLayout === false) {\r\n            this.saveVehicle();\r\n          }\r\n      });\r\n      \r\n        } else this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"Tractor With Trailer DetailsComposite:Error occured on handleSave\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  createVehicle(modVehicle) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: modVehicle.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modVehicle,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"VehicleInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Vehicle_Code\"],\r\n          keyValues: [modVehicle.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.CreateVehicle,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            // vehicle: lodash.cloneDeep(modVehicle),\r\n            // modVehicle: lodash.cloneDeep(modVehicle),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnVehicle\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          this.getVehicle(false);\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnVehicle\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          console.log(\"Error in CreateVehicle:\", result.ErrorList);\r\n        }\r\n\r\n        this.props.onSaved(this.state.modVehicle, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnVehicle\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modVehicle, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateVehicle(modVehicle) {\r\n    let keyCode = [\r\n      {\r\n        key: KeyCodes.vehicleCode,\r\n        value: modVehicle.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: this.props.selectedShareholder,\r\n      keyDataCode: KeyCodes.vehicleCode,\r\n      KeyCodes: keyCode,\r\n      Entity: modVehicle,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"VehicleInfo_SavedStatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"Vehicle_Code\"],\r\n          keyValues: [modVehicle.Code],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n    axios(\r\n      RestAPIs.UpdateVehicle,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            // vehicle: lodash.cloneDeep(modVehicle),\r\n            // modVehicle: lodash.cloneDeep(modVehicle),\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnVehicle\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          this.getVehicle(false);\r\n        } else {\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnVehicle\r\n            ),\r\n            showAuthenticationLayout: false,\r\n          });\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          console.log(\"Error in UpdateVehicle:\", result.ErrorList);\r\n        }\r\n        //console.log(notification);\r\n        this.props.onSaved(this.state.modVehicle, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modVehicle, \"modify\", notification);\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnVehicle\r\n          ),\r\n          showAuthenticationLayout: false,\r\n        });\r\n      });\r\n  }\r\n  fillDetails() {\r\n    try {\r\n      let modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n      modVehicle.ShareholderCode = this.props.selectedShareholder;\r\n      modVehicle.VehicleType = Constants.VehicleType.TractorWithTrailer;\r\n\r\n      if (modVehicle.Height === \"\") modVehicle.Height = null;\r\n      if (modVehicle.Length === \"\") modVehicle.Length = null;\r\n      if (modVehicle.Width === \"\") modVehicle.Width = null;\r\n      if (modVehicle.Height !== null && modVehicle.Height !== \"\")\r\n        modVehicle.Height = modVehicle.Height.toLocaleString();\r\n      if (modVehicle.Length !== null && modVehicle.Length !== \"\")\r\n        modVehicle.Length = modVehicle.Length.toLocaleString();\r\n      if (modVehicle.Width !== null && modVehicle.Width !== \"\")\r\n        modVehicle.Width = modVehicle.Width.toLocaleString();\r\n      let vehiclePrimeMoverInfo = {\r\n        VehicleCode: null,\r\n        PrimeMoverCode: null,\r\n        ShareholderCode: null,\r\n        CarrierCompanyCode: null,\r\n        PrimeMoverSequence: null,\r\n        PrimeMover: null,\r\n      };\r\n      modVehicle.TransportationType = Constants.TransportationType.ROAD;\r\n      var licDate = new Date();\r\n      modVehicle.LicenseNoIssueDate = licDate.getUTCDate();\r\n      //modVehicle.LicenseNoIssueDate = new Date();\r\n      //modVehicle.LicenseNoIssueDate.setHours(0, 0, 0, 0);\r\n      if (this.state.tractorSelection.length > 0) {\r\n        vehiclePrimeMoverInfo.VehicleCode = modVehicle.Code;\r\n        vehiclePrimeMoverInfo.PrimeMoverCode =\r\n          this.state.tractorSelection[0].Common_Code;\r\n        vehiclePrimeMoverInfo.ShareholderCode = modVehicle.ShareholderCode;\r\n        vehiclePrimeMoverInfo.CarrierCompanyCode =\r\n          modVehicle.CarrierCompanyCode;\r\n        vehiclePrimeMoverInfo.PrimeMoverSequence = 1;\r\n        modVehicle.VehiclePrimeMovers = [];\r\n        modVehicle.VehiclePrimeMovers.push(vehiclePrimeMoverInfo);\r\n      }\r\n\r\n      let trailerSeq = 0;\r\n      modVehicle.VehicleTrailers = [];\r\n      if (this.state.trailerSelection.length > 0) {\r\n        this.state.trailerSelection.forEach((trailer) => {\r\n          let vehicleTrailerInfo = {\r\n            TrailerCode: null,\r\n            VehicleCode: null,\r\n            ShareholderCode: null,\r\n            CarrierCompanyCode: null,\r\n            TrailerSeq: null,\r\n            Trailer: {},\r\n          };\r\n          vehicleTrailerInfo.TrailerCode = trailer.Common_Code;\r\n\r\n          vehicleTrailerInfo.VehicleCode = modVehicle.Code;\r\n          vehicleTrailerInfo.ShareholderCode = modVehicle.ShareholderCode;\r\n          vehicleTrailerInfo.CarrierCompanyCode = modVehicle.CarrierCompanyCode;\r\n          vehicleTrailerInfo.TrailerSeq = ++trailerSeq;\r\n          vehicleTrailerInfo.Trailer.Code = trailer.Common_Code;\r\n          vehicleTrailerInfo.Trailer.Name = trailer.Common_Name;\r\n          vehicleTrailerInfo.Trailer.ShareholderCode =\r\n            modVehicle.ShareholderCode;\r\n          vehicleTrailerInfo.Trailer.TransportationType =\r\n            Constants.TransportationType.ROAD;\r\n          vehicleTrailerInfo.Trailer.CarrierCompanyCode =\r\n            modVehicle.CarrierCompanyCode;\r\n          vehicleTrailerInfo.Trailer.TrailerType =\r\n            Constants.TrailerType.NON_RIGID_TRAILER;\r\n\r\n          modVehicle.VehicleTrailers.push(vehicleTrailerInfo);\r\n        });\r\n      }\r\n      return modVehicle;\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on fillDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  fillAttributeDetails(modVehicle, attributesList) {\r\n    try {\r\n      let attributeData1 = attributesList.find(function (item) {\r\n        return item[\"vehilceAttributeList\"] !== undefined;\r\n      });\r\n      let attributeData2 = attributesList.find(function (item) {\r\n        return item[\"vehicleTrailerAttributeList\"] !== undefined;\r\n      });\r\n      let attributeData3 = attributesList.find(function (item) {\r\n        return item[\"vehiclePrimeMoverAttributeList\"] !== undefined;\r\n      });\r\n      let modVehicleAttributeMetaDataList = Utilities.attributesDatatypeConversion(\r\n        attributeData1.vehilceAttributeList\r\n      );\r\n\r\n      modVehicle.Attributes = Utilities.fillAttributeDetails(modVehicleAttributeMetaDataList);\r\n\r\n      let modVehiclePrimeMoversAttributeMetaDataList =\r\n        Utilities.attributesDatatypeConversion(\r\n          attributeData3.vehiclePrimeMoverAttributeList\r\n        );\r\n      let modVehicleTrailerAttributeMetaDataList =\r\n        Utilities.attributesDatatypeConversion(\r\n          attributeData2.vehicleTrailerAttributeList\r\n        );\r\n     \r\n      if (\r\n        (modVehicle.VehiclePrimeMovers !== null) &\r\n        (modVehicle.VehiclePrimeMovers.length > 0)\r\n      )\r\n        modVehicle.VehiclePrimeMovers.forEach((primemover) => {\r\n          primemover.Attributes = Utilities.fillAttributeDetails(modVehiclePrimeMoversAttributeMetaDataList);\r\n        });\r\n\r\n      if (\r\n        (modVehicle.VehicleTrailers !== null) &\r\n        (modVehicle.VehicleTrailers.length > 0)\r\n      )\r\n        modVehicle.VehicleTrailers.forEach((trailer) => {\r\n          trailer.Attributes = Utilities.fillAttributeDetails(modVehicleTrailerAttributeMetaDataList);\r\n        });\r\n\r\n      return modVehicle;\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on fillAttributeDetails\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleNextClick = (entity, data, columns) => {\r\n    if (entity === \"primeMover\") {\r\n      this.setState({\r\n        step1Active: false,\r\n        step2Active: true,\r\n      });\r\n      tractorColumns = columns;\r\n    }\r\n\r\n    if (entity === \"trailer\") {\r\n      this.setState({\r\n        step2Active: false,\r\n        step3Active: true,\r\n      });\r\n      trailerColumns = columns;\r\n    }\r\n  };\r\n\r\n  handleSelectClick = (entity, data, columns) => {\r\n    if (entity === \"primeMover\") {\r\n      this.setState({\r\n        tractorSelection: [...data],\r\n      });\r\n      tractorColumns = columns;\r\n    }\r\n\r\n    if (entity === \"trailer\") {\r\n      this.setState({\r\n        trailerSelection: [...data],\r\n      });\r\n      trailerColumns = columns;\r\n    }\r\n  }\r\n\r\n  handleTractorList = (tractorSelection, columns) => {\r\n    tractorColumns = columns;\r\n\r\n    this.setState({\r\n      tractorSelection: tractorSelection,\r\n      // step1Data: tractorSelection,\r\n    });\r\n  };\r\n\r\n  handleTrailerList = (trailerSelection, columns) => {\r\n    trailerColumns = columns;\r\n\r\n    this.setState({\r\n      trailerSelection: trailerSelection,\r\n      // step2Data: trailerSelection,\r\n    });\r\n  };\r\n\r\n  handleDateTextChange = (propertyName, value, error) => {\r\n    try {\r\n      let validationErrors = { ...this.state.validationErrors };\r\n      let modVehicle = lodash.cloneDeep(this.state.modVehicle);\r\n      validationErrors[propertyName] = error;\r\n      modVehicle[propertyName] = value;\r\n      this.setState({ validationErrors, modVehicle });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on handleDateTextChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleVehicleAttributeDataChange = (attribute, value) => {\r\n    try {\r\n\r\n     let matchedAttributes = [];\r\n      let modVehicleAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modVehicleAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modVehicleAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const vehicleAttributeValidationErrors = lodash.cloneDeep(\r\n        this.state.vehicleAttributeValidationErrors\r\n      );\r\n\r\n      vehicleAttributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ vehicleAttributeValidationErrors,modVehicleAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on handleVehicleAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleVehiclePrimeMoverAttributeDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modVehiclePrimeMoversAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modVehiclePrimeMoversAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modVehiclePrimeMoversAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const vehiclePrimeMoversAttributeValidationErrors = lodash.cloneDeep(\r\n        this.state.vehiclePrimeMoversAttributeValidationErrors\r\n      );\r\n\r\n      vehiclePrimeMoversAttributeValidationErrors.forEach(\r\n        (attributeValidation) => {\r\n          if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n            attributeValidation.attributeValidationErrors[attribute.Code] =\r\n              Utilities.valiateAttributeField(attribute, value);\r\n          }\r\n        }\r\n      );\r\n      this.setState({ vehiclePrimeMoversAttributeValidationErrors,modVehiclePrimeMoversAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on handleVehiclePrimeMoverAttributeDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleVehicleTrailerAttributeDataDataChange = (attribute, value) => {\r\n    try {\r\n      let matchedAttributes = [];\r\n      let modVehicleTrailerAttributeMetaDataList = lodash.cloneDeep(\r\n        this.state.modVehicleTrailerAttributeMetaDataList\r\n      );\r\n      let matchedAttributesList = modVehicleTrailerAttributeMetaDataList.filter(\r\n        (modattribute) => modattribute.TerminalCode === attribute.TerminalCode\r\n      );\r\n      if (\r\n        matchedAttributesList.length > 0 &&\r\n        Array.isArray(matchedAttributesList[0].attributeMetaDataList)\r\n      ) {\r\n        matchedAttributes =\r\n          matchedAttributesList[0].attributeMetaDataList.filter(\r\n            (modattribute) => modattribute.Code === attribute.Code\r\n          );\r\n      }\r\n      if (matchedAttributes.length > 0) {\r\n        matchedAttributes[0].DefaultValue = value;\r\n      }\r\n      const vehicleTrailerAttributeValidationErrors = lodash.cloneDeep(\r\n        this.state.vehicleTrailerAttributeValidationErrors\r\n      );\r\n\r\n      vehicleTrailerAttributeValidationErrors.forEach((attributeValidation) => {\r\n        if (attributeValidation.TerminalCode === attribute.TerminalCode) {\r\n          attributeValidation.attributeValidationErrors[attribute.Code] =\r\n            Utilities.valiateAttributeField(attribute, value);\r\n        }\r\n      });\r\n      this.setState({ vehicleTrailerAttributeValidationErrors,modVehicleTrailerAttributeMetaDataList });\r\n    } catch (error) {\r\n      console.log(\r\n        \"TractorWithTrailerDetailsComposite:Error occured on handleVehicleTrailerAttributeDataDataChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      carriers: this.state.carrierOptions,\r\n      productType: this.state.productTypeOptions,\r\n      unitOfWeight: this.state.weightUOMOptions,\r\n      unitOfVolume: this.state.volumeUOMOptions,\r\n      unitOfDimension: this.state.lengthUOMOptions,\r\n      terminalCodes: this.state.terminalOptions,\r\n    };\r\n\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"Vehicle_LastUpdated\",\r\n        fieldValue:\r\n          new Date(this.state.modVehicle.LastUpdateTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modVehicle.LastUpdateTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"Vehicle_LastActiveTime\",\r\n        fieldValue:\r\n          this.state.modVehicle.LastActiveTime !== undefined &&\r\n          this.state.modVehicle.LastActiveTime !== null\r\n            ? new Date(\r\n                this.state.modVehicle.LastActiveTime\r\n              ).toLocaleDateString() +\r\n              \" \" +\r\n              new Date(\r\n                this.state.modVehicle.LastActiveTime\r\n              ).toLocaleTimeString()\r\n            : \"\",\r\n      },\r\n      {\r\n        fieldName: \"Vehicle_CreateTime\",\r\n        fieldValue:\r\n          new Date(this.state.modVehicle.CreatedTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modVehicle.CreatedTime).toLocaleTimeString(),\r\n      },\r\n    ];\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div>\r\n            <Accordion>\r\n              <Accordion.Content\r\n                title={t(\"Step1_Tractor\")}\r\n                active={this.state.step1Active}\r\n                onClick={() =>\r\n                  this.setState({ step1Active: !this.state.step1Active })\r\n                }\r\n              >\r\n                <div className=\"borderTable\">\r\n                  <PrimeMoverComposite\r\n                    tractorWithTrailer={tractorWithTrailer}\r\n                    tractorSelection={vehiclePrimeMovers}\r\n                    handleNextClick={this.handleNextClick}\r\n                    getTractorList={this.handleTractorList}\r\n                    tractorShareholder={this.props.selectedShareholder}\r\n                    handleSelectClick = {this.handleSelectClick}\r\n                  />\r\n                </div>\r\n              </Accordion.Content>\r\n            </Accordion>\r\n            {this.state.tractorSelection.length > 0 &&\r\n            !this.state.step1Active ? (\r\n              <DataTable\r\n                data={this.state.tractorSelection}\r\n                selection={this.state.tractorSelection}\r\n                selectionMode=\"multiple\"\r\n                showHeader={true}\r\n                // onSelectionChange={(e) => this.setState({ tractorSelection: e })}\r\n              >\r\n                {tractorColumns.map((key) => (\r\n                  <DataTable.Column\r\n                    key={key.Name}\r\n                    initialWidth={key.Width}\r\n                    field={key.Name}\r\n                    header={t(key.Name)}\r\n                    renderer={(cellData) => this.displayValues(cellData, key)}\r\n                  />\r\n                ))}\r\n              </DataTable>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {this.state.vehicle.Code !== \"\" &&\r\n            this.state.tractorSelection.length === 0 ? (\r\n              <div className=\"authLoading\" style={{ height: \"80px\" }}>\r\n                <Loader style={{ top: \"10px\" }} text=\" \"></Loader>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <Accordion>\r\n              <Accordion.Content\r\n                title={t(\"Step2_Trailer\")}\r\n                active={this.state.step2Active}\r\n                onClick={() =>\r\n                  this.setState({ step2Active: !this.state.step2Active })\r\n                }\r\n              >\r\n                <div className=\"borderTable\">\r\n                  <TrailerComposite\r\n                    vehicleWithTrailer={vehicleWithTrailer}\r\n                    handleNextClick={this.handleNextClick}\r\n                    getTrailerList={this.handleTrailerList}\r\n                    trailerSelection={vehicleTrailers}\r\n                    vehicleShareholder={this.props.selectedShareholder}\r\n                    handleSelectClick = {this.handleSelectClick}\r\n                  />\r\n                </div>\r\n              </Accordion.Content>\r\n            </Accordion>\r\n            {this.state.trailerSelection.length > 0 &&\r\n            !this.state.step2Active ? (\r\n              <DataTable\r\n                data={this.state.trailerSelection}\r\n                selection={this.state.trailerSelection}\r\n                selectionMode=\"multiple\"\r\n                showHeader={true}\r\n                // onSelectionChange={(e) => this.setState({ trailerSelection: e })}\r\n              >\r\n                {trailerColumns.map((key) => (\r\n                  <DataTable.Column\r\n                    key={key.Name}\r\n                    initialWidth={key.Width}\r\n                    field={key.Name}\r\n                    header={t(key.Name)}\r\n                    renderer={(cellData) => this.displayValues(cellData, key)}\r\n                  />\r\n                ))}\r\n              </DataTable>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {this.state.vehicle.Code !== \"\" &&\r\n            this.state.trailerSelection.length === 0 ? (\r\n              <div className=\"authLoading\" style={{ height: \"80px\" }}>\r\n                <Loader style={{ top: \"10px\" }} text=\" \"></Loader>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <Accordion>\r\n              <Accordion.Content\r\n                title={t(\"Step3_Vehicle\")}\r\n                active={this.state.step3Active}\r\n                onClick={() =>\r\n                  this.setState({ step3Active: !this.state.step3Active })\r\n                }\r\n              >\r\n                <div className=\"borderTable\">\r\n                  {/* {this.state.isReadyToRender ? ( */}\r\n                  <div>\r\n                    <ErrorBoundary>\r\n                      <TMDetailsHeader\r\n                        entityCode={this.state.vehicle.Code}\r\n                        newEntityName=\"VehicleList_title\"\r\n                        popUpContents={popUpContents}\r\n                      ></TMDetailsHeader>\r\n                    </ErrorBoundary>\r\n                    <ErrorBoundary>\r\n                      <div className=\"detailsContainer\">\r\n                        <div className=\"row\">\r\n                          <VehicleBasicFields\r\n                            data={this.state.vehicle}\r\n                            modData={this.state.modVehicle}\r\n                            validationErrors={this.state.validationErrors}\r\n                            listOptions={listOptions}\r\n                            onFieldChange={this.handleChange}\r\n                            onDateTextChange={this.handleDateTextChange}\r\n                            onAllTerminalsChange={this.handleAllTerminalsChange}\r\n                            onCarrierChange={this.handleCarrierChange}\r\n                            onActiveStatusChange={this.handleActiveStatusChange}\r\n                            isEnterpriseNode={\r\n                              this.props.userDetails.EntityResult\r\n                                .IsEnterpriseNode\r\n                            }\r\n                            attributeValidationErrors={\r\n                              this.state.vehicleAttributeValidationErrors\r\n                            }\r\n                            modAttributeMetaDataList={\r\n                              this.state.modVehicleAttributeMetaDataList\r\n                            }\r\n                            onAttributeDataChange={this.handleVehicleAttributeDataChange} \r\n                            isBonded={this.state.isBonded}\r\n                          ></VehicleBasicFields>\r\n\r\n                          {this.state.modVehiclePrimeMoversAttributeMetaDataList\r\n                            .length > 0 ? (\r\n                            <div className=\"col-12 col-md-12 col-lg-12\">\r\n                              <Accordion>\r\n                                <Accordion.Content\r\n                                  className=\"attributeAccordian\"\r\n                                  title={t(\"VEHICLEPRIMEMOVER_Attributes\")}\r\n                                >\r\n                                  {this.state\r\n                                    .modVehiclePrimeMoversAttributeMetaDataList\r\n                                    .length > 0\r\n                                    ? this.state.modVehiclePrimeMoversAttributeMetaDataList.map(\r\n                                        (attribute) => (\r\n                                          <ErrorBoundary>\r\n                                            <div className=\"col-12 col-md-12 col-lg-12\">\r\n                                              <Accordion>\r\n                                                <Accordion.Content\r\n                                                  className=\"attributeAccordian\"\r\n                                                  title={\r\n                                                    this.props.userDetails\r\n                                                      .EntityResult\r\n                                                      .IsEnterpriseNode\r\n                                                      ? attribute.TerminalCode +\r\n                                                        \" - \" +\r\n                                                        t(\"Attributes_Header\")\r\n                                                      : t(\"Attributes_Header\")\r\n                                                  }\r\n                                                >\r\n                                                  <AttributeDetails\r\n                                                    selectedAttributeList={\r\n                                                      attribute.attributeMetaDataList\r\n                                                    }\r\n                                                    handleCellDataEdit={\r\n                                                      this\r\n                                                        .handleVehiclePrimeMoverAttributeDataChange\r\n                                                    }\r\n                                                    attributeValidationErrors={this.handleValidationErrorFilter(\r\n                                                      this.state\r\n                                                        .vehiclePrimeMoversAttributeValidationErrors,\r\n                                                      attribute.TerminalCode\r\n                                                    )}\r\n                                                  ></AttributeDetails>\r\n                                                </Accordion.Content>\r\n                                              </Accordion>\r\n                                            </div>\r\n                                          </ErrorBoundary>\r\n                                        )\r\n                                      )\r\n                                    : null}\r\n                                </Accordion.Content>\r\n                              </Accordion>\r\n                            </div>\r\n                          ) : null}\r\n                          {this.state.modVehicleTrailerAttributeMetaDataList\r\n                            .length > 0 ? (\r\n                            <div className=\"col-12 col-md-12 col-lg-12\">\r\n                              <Accordion>\r\n                                <Accordion.Content\r\n                                  className=\"attributeAccordian\"\r\n                                  title={t(\"VEHICLETRAILER_Attributes\")}\r\n                                >\r\n                                  {this.state\r\n                                    .modVehicleTrailerAttributeMetaDataList\r\n                                    .length > 0\r\n                                    ? this.state.modVehicleTrailerAttributeMetaDataList.map(\r\n                                        (attribute) => (\r\n                                          <ErrorBoundary>\r\n                                            <div className=\"col-12 col-md-12 col-lg-12\">\r\n                                              <Accordion>\r\n                                                <Accordion.Content\r\n                                                  className=\"attributeAccordian\"\r\n                                                  title={\r\n                                                    this.props.userDetails\r\n                                                      .EntityResult\r\n                                                      .IsEnterpriseNode\r\n                                                      ? attribute.TerminalCode +\r\n                                                        \" - \" +\r\n                                                        t(\"Attributes_Header\")\r\n                                                      : t(\"Attributes_Header\")\r\n                                                  }\r\n                                                >\r\n                                                  <AttributeDetails\r\n                                                    selectedAttributeList={\r\n                                                      attribute.attributeMetaDataList\r\n                                                    }\r\n                                                    handleCellDataEdit={\r\n                                                      this\r\n                                                        .handleVehicleTrailerAttributeDataDataChange\r\n                                                    }\r\n                                                    attributeValidationErrors={this.handleValidationErrorFilter(\r\n                                                      this.state\r\n                                                        .vehicleTrailerAttributeValidationErrors,\r\n                                                      attribute.TerminalCode\r\n                                                    )}\r\n                                                  ></AttributeDetails>\r\n                                                </Accordion.Content>\r\n                                              </Accordion>\r\n                                            </div>\r\n                                          </ErrorBoundary>\r\n                                        )\r\n                                      )\r\n                                    : null}\r\n                                </Accordion.Content>\r\n                              </Accordion>\r\n                            </div>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n                    </ErrorBoundary>\r\n                    <ErrorBoundary>\r\n                      <TMDetailsUserActions\r\n                        handleBack={this.props.onBack}\r\n                        handleSave={this.handleSave}\r\n                        handleReset={this.handleReset}\r\n                        saveEnabled={this.state.saveEnabled}\r\n                      ></TMDetailsUserActions>\r\n                    </ErrorBoundary>\r\n                    {this.state.showAuthenticationLayout ? (\r\n                    <UserAuthenticationLayout\r\n                    Username={this.props.userDetails.EntityResult.UserName}\r\n                    functionName={\r\n                    this.state.vehicle.Code === \"\"\r\n                    ? functionGroups.add\r\n                    : functionGroups.modify\r\n                    }\r\n                    functionGroup={fnVehicle}\r\n                    handleOperation={this.saveVehicle}\r\n                    handleClose={this.handleAuthenticationClose}\r\n                    ></UserAuthenticationLayout>\r\n                    ) : null}\r\n                  </div>\r\n                  {/* ) : (\r\n                <div>Loading...</div>\r\n              )} */}\r\n                </div>\r\n              </Accordion.Content>\r\n            </Accordion>\r\n            {this.state.step3Active ? (\r\n              \"\"\r\n            ) : (\r\n              <div className=\"vehicleBackbtn\">\r\n                <Button\r\n                  className=\"backButton\"\r\n                  content={t(\"Back\")}\r\n                  onClick={this.props.onBack}\r\n                ></Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TractorWithTrailerDetailsComposite);\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nexport function PrimeMoverSummaryPageComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  terminalsToShow,\r\n  selectionRequired,     \r\n  onSelectionChange,\r\n  onRowClick,\r\n  parentComponent\r\n}) {\r\n  return (\r\n      <WijmoGridComposite\r\n      data={tableData}\r\n      columns={columnDetails}\r\n      rowsPerPage={pageSize}\r\n      exportRequired={exportRequired}\r\n      exportFileName={exportFileName}\r\n      columnPickerRequired={columnPickerRequired}\r\n      columnGroupingRequired={columnGroupingRequired}\r\n      terminalsToShow={terminalsToShow}\r\n      selectionRequired={selectionRequired}\r\n      onSelectionHandle={onSelectionChange}\r\n      onRowClick={onRowClick}\r\n      parentComponent={parentComponent}\r\n      ></WijmoGridComposite>\r\n  );\r\n}","import React from \"react\";\r\nimport {\r\n  functionGroups,\r\n  fnPrimeMover,\r\n  fnKPIInformation,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport axios from \"axios\";\r\nimport { Icon, Button } from \"@scuf/common\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { PrimeMoverSummaryPageComposite } from \"../Summary/PrimeMoverSummaryComposite\";\r\nimport PrimeMoverDetailsComposite from \"../Details/PrimeMoverDetailsComposite\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport { kpiPrimeMoverList } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass PrimeMoverComposite extends React.PureComponent {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: false, delete: false, shareholder: true },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    data: {},\r\n    primeMoverKPIList: [],\r\n    showAuthenticationLayout: false,\r\n  };\r\n\r\n  componentName = \"PrimeMoverComponent\";\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: {},\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"PrimeMoverComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      let { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({\r\n        selectedShareholder: shareholder,\r\n        isReadyToRender: false,\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n      });\r\n      this.getPrimeMoverList(shareholder);\r\n      if (\r\n        this.props.tractorWithTrailer === undefined ||\r\n        this.props.tractorWithTrailer === false\r\n      )\r\n        this.getKPIList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"PrimeMoverComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleRowClick = (item) => {\r\n    try {\r\n      if (this.props.tractorWithTrailer === undefined) {\r\n        const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnPrimeMover\r\n        );\r\n        operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnPrimeMover\r\n        );\r\n        operationsVisibilty.shareholder = false;\r\n        this.setState({\r\n          isDetails: true,\r\n          selectedRow: item,\r\n          selectedItems: [item],\r\n          operationsVisibilty,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"PrimeMoverComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n  handleSelection = (items) => {\r\n    try {\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n\r\n      operationsVisibilty.delete =\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnPrimeMover\r\n        );\r\n\r\n      this.setState({ selectedItems: items, operationsVisibilty }, () => {\r\n        if (this.props.tractorWithTrailer === true) {\r\n          this.props.handleSelectClick(\r\n            \"primeMover\",\r\n            this.state.selectedItems,\r\n            this.state.data.Column\r\n          );\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"PrimeMoverComposite:Error occured on handleSelection\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  handleDelete = () => {\r\n    try {\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n\r\n      var deletePrimeMoverKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        let shCode = this.state.selectedShareholder;\r\n        let primeMoverCode = this.state.selectedItems[i][\"Common_Code\"];\r\n        let carrierCode =\r\n          this.state.selectedItems[i][\"PrimeMover_CarrierCompany\"];\r\n        let keyData = {\r\n          keyDataCode: 0,\r\n          ShareHolderCode: shCode,\r\n          KeyCodes: [\r\n            { Key: KeyCodes.primeMoverCode, Value: primeMoverCode },\r\n            { key: KeyCodes.carrierCode, Value: carrierCode },\r\n          ],\r\n        };\r\n        deletePrimeMoverKeys.push(keyData);\r\n      }\r\n\r\n      axios(\r\n        RestAPIs.DeletePrimeMover,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deletePrimeMoverKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          // console.log(response.data);\r\n          let result = response.data;\r\n          let isRefreshDataRequire = result.IsSuccess;\r\n\r\n          if (\r\n            result.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            let failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n\r\n          let notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"PrimeMover_DeletionStatus\",\r\n            [\"PrimeMoverCode\"]\r\n          );\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({ isReadyToRender: false, showAuthenticationLayout: false, });\r\n            this.getPrimeMoverList(this.state.selectedShareholder);\r\n            if (\r\n              this.props.tractorWithTrailer === undefined ||\r\n              this.props.tractorWithTrailer === false\r\n            )\r\n              this.getKPIList(this.state.selectedShareholder);\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n              showAuthenticationLayout: false,\r\n            });\r\n          } else {\r\n            operationsVisibilty.delete = true;\r\n            this.setState({\r\n               operationsVisibilty,\r\n               showAuthenticationLayout: false,\r\n             });\r\n          }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0)\r\n              messageResult.keyFields[0] = \"PrimeMover_Code\";\r\n          });\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    } catch (error) {\r\n      console.log(\"PrimeMoverComposite:Error occured on handleDelete\", error);\r\n    }\r\n  };\r\n\r\n  //Get KPI for Prime Mover\r\n  getKPIList(shareholder) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      var notification = {\r\n        message: \"\",\r\n        messageType: \"critical\",\r\n        messageResultDetails: [],\r\n      };\r\n      let objKPIRequestData = {\r\n        PageName: kpiPrimeMoverList,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              primeMoverKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ primeMoverKPIList: [] });\r\n            console.log(\"Error in Prime Mover KPIList:\", result.ErrorList);\r\n            notification.messageResultDetails.push({\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: result.ErrorList[0],\r\n            });\r\n          }\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting Prime Mover KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  getPrimeMoverList(shareholder) {\r\n    let transportationType = Constants.TransportationType.ROAD;\r\n\r\n    axios(\r\n      RestAPIs.GetPrimeMoverListForRole +\r\n      \"?ShareholderCode=\" +\r\n      shareholder +\r\n      \"&Transportationtype=\" +\r\n      transportationType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            data: { ...result.EntityResult },\r\n            isReadyToRender: true,\r\n          });\r\n          if (\r\n            this.props.tractorWithTrailer === true &&\r\n            this.props.tractorSelection.length > 0\r\n          ) {\r\n            let primeMovers = this.props.tractorSelection;\r\n            if (primeMovers.length > 0) {\r\n              let tractorSelection = [];\r\n              primeMovers.forEach((primeMover) => {\r\n                let row = result.EntityResult.Table.find(\r\n                  (row) => row.Common_Code === primeMover.PrimeMover.Code\r\n                );\r\n                if (row !== undefined) tractorSelection.push(row);\r\n              });\r\n              this.setState({ selectedItems: tractorSelection });\r\n              this.props.getTractorList(\r\n                tractorSelection,\r\n                result.EntityResult.Column\r\n              );\r\n            }\r\n          }\r\n        } else {\r\n          this.setState({ data: {}, isReadyToRender: true });\r\n          console.log(\"Error in GetPrimeMoverListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: {}, isReadyToRender: true });\r\n        console.log(\"Error while getting PrimeMover List:\", error);\r\n      });\r\n  }\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnPrimeMover\r\n        );\r\n        operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnPrimeMover\r\n        );\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            Common_Code: data.Code,\r\n            //TransportationType: data.TransportationType,\r\n            Common_Status: data.Active,\r\n            PrimeMover_CarrierCompany: data.CarrierCompanyCode,\r\n            // Common_Shareholder: data.ShareholderCode,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"PrimeMoverComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnPrimeMover\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.shareholder = true;\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getPrimeMoverList(this.state.selectedShareholder);\r\n      if (\r\n        this.props.tractorWithTrailer === undefined ||\r\n        this.props.tractorWithTrailer === false\r\n      )\r\n        this.getKPIList(this.state.selectedShareholder);\r\n    } catch (error) {\r\n      console.log(\"PrimeMoverComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (\r\n      nextProps.tractorWithTrailer === true &&\r\n      nextProps.tractorSelection.length > 0\r\n    ) {\r\n      let primeMovers = nextProps.tractorSelection;\r\n      if (primeMovers.length > 0) {\r\n        let tractorSelection = [];\r\n        primeMovers.forEach((primeMover) => {\r\n          let row = this.state.data.Table.find(\r\n            (row) => row.Common_Code === primeMover.PrimeMover.Code\r\n          );\r\n          if (row !== undefined) tractorSelection.push(row);\r\n        });\r\n        this.setState({ selectedItems: tractorSelection });\r\n        this.props.getTractorList(tractorSelection, this.state.data.Column);\r\n      }\r\n    } else if (\r\n      nextProps.tractorWithTrailer === true &&\r\n      nextProps.tractorSelection.length === 0\r\n    ) {\r\n      this.setState({ selectedItems: [] });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      const operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnPrimeMover\r\n      );\r\n\r\n      let shareholder = this.props.userDetails.EntityResult.PrimaryShareholder;\r\n      if (this.props.tractorWithTrailer === true) {\r\n        shareholder = this.props.tractorShareholder;\r\n      }\r\n      this.setState({\r\n        operationsVisibilty,\r\n        selectedShareholder: shareholder,\r\n      });\r\n      this.getPrimeMoverList(shareholder);\r\n      if (\r\n        this.props.tractorWithTrailer === undefined ||\r\n        this.props.tractorWithTrailer === false\r\n      )\r\n        this.getKPIList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"PrimeMoverComposite:Error occured on ComponentDidMount\",\r\n        error\r\n      );\r\n    }\r\n    // clear session storage on window refresh event\r\n    window.addEventListener(\"beforeunload\", () => Utilities.clearSessionStorage(this.componentName + \"GridState\"));\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    Utilities.clearSessionStorage(this.componentName + \"GridState\");\r\n    window.removeEventListener(\"beforeunload\", () => Utilities.clearSessionStorage(this.componentName + \"GridState\"));\r\n  }\r\n\r\n  handleNextClick = () => {\r\n    this.props.handleNextClick(\r\n      \"primeMover\",\r\n      this.state.selectedItems,\r\n      this.state.data.Column\r\n    );\r\n  };\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showAuthenticationLayout });\r\n      if (showAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"PrimeMoverComposite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let selectionMode = \"multiple\";\r\n    let fillPage = true;\r\n    let loadingClass = \"globalLoader\";\r\n    if (this.props.tractorWithTrailer === true) {\r\n      selectionMode = \"single\";\r\n      fillPage = false;\r\n      loadingClass = \"nestedList\";\r\n    }\r\n\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div>\r\n            <ErrorBoundary>\r\n              {this.props.tractorWithTrailer === undefined ? (\r\n                <TMUserActionsComposite\r\n                  operationsVisibilty={this.state.operationsVisibilty}\r\n                  breadcrumbItem={this.props.activeItem}\r\n                  shareholders={\r\n                    this.props.userDetails.EntityResult.ShareholderList\r\n                  }\r\n                  selectedShareholder={this.state.selectedShareholder}\r\n                  onShareholderChange={this.handleShareholderSelectionChange}\r\n                  onDelete={this.authenticateDelete}\r\n                  onAdd={this.handleAdd}\r\n                  handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n                ></TMUserActionsComposite>\r\n              ) : (\r\n                <>\r\n                  {this.state.isDetails ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <div className=\"vehicleDataTableHeading\">\r\n                      <div className=\"col col-lg-10 dataTableHeadingPadding\">\r\n                        <h5>{t(\"Select_Tractors\")}</h5>\r\n                      </div>\r\n                      <div className=\"col col-lg-1 vehicleDataTableIcon\">\r\n                        <div\r\n                          className={\r\n                            (this.state.operationsVisibilty.add\r\n                              ? \"iconCircle \"\r\n                              : \"iconCircleDisable \") + \"iconblock\"\r\n                          }\r\n                              onClick={() => {if(this.state.operationsVisibilty.add){this.handleAdd()}}}\r\n                        >\r\n                          <Icon\r\n                            root=\"common\"\r\n                            name=\"badge-plus\"\r\n                            size=\"small\"\r\n                            color=\"white\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </ErrorBoundary>\r\n            {this.state.isDetails ? (\r\n              <ErrorBoundary>\r\n                <PrimeMoverDetailsComposite\r\n                  key=\"PrimeMoverDetails\"\r\n                  selectedRow={this.state.selectedRow}\r\n                  onBack={this.handleBack}\r\n                  onSaved={this.savedEvent}\r\n                  selectedShareholder={this.state.selectedShareholder}\r\n                ></PrimeMoverDetailsComposite>\r\n              </ErrorBoundary>\r\n            ) : this.state.isReadyToRender ? (\r\n              <div>\r\n                {this.props.tractorWithTrailer === true ? (\r\n                  \"\"\r\n                ) : (\r\n                  <ErrorBoundary>\r\n                    <div className=\"kpiSummaryContainer\">\r\n                      <KPIDashboardLayout\r\n                        kpiList={this.state.primeMoverKPIList}\r\n                        pageName=\"PrimeMover\"\r\n                      ></KPIDashboardLayout>\r\n                    </div>\r\n                  </ErrorBoundary>\r\n                )}\r\n                <ErrorBoundary>\r\n                  <PrimeMoverSummaryPageComposite\r\n                    tableData={this.state.data.Table}\r\n                    columnDetails={this.state.data.Column}\r\n                    pageSize={\r\n                      this.props.userDetails.EntityResult.PageAttibutes\r\n                        .WebPortalListPageSize\r\n                    }\r\n                    exportRequired={true}\r\n                    exportFileName=\"PrimeMoverList\"\r\n                    columnPickerRequired={true}\r\n\r\n                    terminalsToShow={\r\n                      this.props.userDetails.EntityResult.PageAttibutes\r\n                        .NoOfTerminalsToShow\r\n                    }\r\n                    selectionRequired={true}\r\n                    columnGroupingRequired={true}\r\n                    onSelectionChange={this.handleSelection}\r\n                    onRowClick={this.handleRowClick}\r\n                    parentComponent={this.componentName}\r\n                  ></PrimeMoverSummaryPageComposite>\r\n                  {this.props.tractorWithTrailer === true ? (\r\n                    <div className=\"vehicleNextButton\">\r\n                      <Button onClick={this.handleNextClick}>\r\n                        {t(\"Common_Next\")}\r\n                      </Button>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </ErrorBoundary>\r\n              </div>\r\n            ) : (\r\n              <LoadingPage\r\n                loadingClass={loadingClass}\r\n                message=\"Loading\"\r\n              ></LoadingPage>\r\n            )}\r\n              {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.remove}\r\n            functionGroup={fnPrimeMover}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleDelete}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n            {this.props.tractorWithTrailer === true ? (\r\n              \"\"\r\n            ) : (\r\n              <ErrorBoundary>\r\n                <ToastContainer\r\n                  hideProgressBar={true}\r\n                  closeOnClick={false}\r\n                  closeButton={true}\r\n                  newestOnTop={true}\r\n                  position=\"bottom-right\"\r\n                  toastClassName=\"toast-notification-wrap\"\r\n                />\r\n              </ErrorBoundary>\r\n            )}\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PrimeMoverComposite);\r\n\r\nPrimeMoverComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n  tractorWithTrailer: PropTypes.bool,\r\n  tractorSelection: PropTypes.array,\r\n  getTractorList: PropTypes.func,\r\n  handleNextClick: PropTypes.func,\r\n  handleSelectClick: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport WijmoGridComposite from \"../Common/WijmoGridComposite\";\r\n\r\nexport function TrailerSummaryPageComposite({\r\n  tableData,\r\n  columnDetails,\r\n  pageSize,\r\n  exportRequired,\r\n  exportFileName,\r\n  columnPickerRequired,\r\n  columnGroupingRequired,\r\n  selectionRequired,\r\n  terminalsToShow,\r\n  selectedItems,\r\n  onSelectionChange,\r\n  onRowClick,\r\n  parentComponent,\r\n}) {\r\n  return (\r\n    <WijmoGridComposite\r\n      data={tableData}\r\n      columns={columnDetails}\r\n      rowsPerPage={pageSize}\r\n      exportRequired={exportRequired}\r\n      exportFileName={exportFileName}\r\n      columnPickerRequired={columnPickerRequired}\r\n      columnGroupingRequired={columnGroupingRequired}\r\n      selectionRequired={selectionRequired}\r\n      selectedItems={selectedItems}\r\n      onSelectionHandle={onSelectionChange}\r\n      onRowClick={onRowClick}\r\n      parentComponent={parentComponent}\r\n      terminalsToShow={terminalsToShow}\r\n    ></WijmoGridComposite>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TMUserActionsComposite } from \"../Common/TMUserActionsComposite\";\r\nimport { TrailerSummaryPageComposite } from \"../Summary/TrailerSummaryComposite\";\r\nimport axios from \"axios\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport { Icon, Button } from \"@scuf/common\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport NotifyEvent from \"../../../JS/NotifyEvent\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport {\r\n  functionGroups,\r\n  fnTrailer,\r\n  fnKPIInformation,\r\n} from \"../../../JS/FunctionGroups\";\r\nimport TrailerDetailsComposite from \"../Details/TrailerDetailsComposite\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport KPIDashboardLayout from \"../Common/KPIDashboard/KPIDashboardLayout\";\r\nimport { kpiTrailerList } from \"../../../JS/KPIPageName\";\r\nimport UserAuthenticationLayout from \"../Common/UserAuthentication\";\r\n\r\nclass TrailerComposite extends React.PureComponent {\r\n  state = {\r\n    isDetails: false,\r\n    isReadyToRender: false,\r\n    isDetailsModified: false,\r\n    operationsVisibilty: { add: false, delete: false, shareholder: true },\r\n    selectedRow: {},\r\n    selectedItems: [],\r\n    data: {},\r\n    trailerKPIList: [],\r\n    showAuthenticationLayout: false,\r\n  };\r\n\r\n  componentName = (this.props.vehicleWithTrailer ? \"vehicleWithTrailer\" : \"\") + \"TrailerComponent\";\r\n\r\n  handleAdd = () => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.add = false;\r\n      operationsVisibilty.shareholder = false;\r\n      this.setState({\r\n        isDetails: true,\r\n        selectedRow: {},\r\n        operationsVisibilty,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"TrailerComposite:Error occured on handleAdd\", error);\r\n    }\r\n  };\r\n  handleShareholderSelectionChange = (shareholder) => {\r\n    try {\r\n      let { operationsVisibilty } = { ...this.state };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({\r\n        selectedShareholder: shareholder,\r\n        isReadyToRender: false,\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n      });\r\n      this.getTrailerList(shareholder);\r\n      if (\r\n        this.props.vehicleWithTrailer === undefined ||\r\n        this.props.vehicleWithTrailer === false\r\n      )\r\n        this.getKPIList(shareholder);\r\n    } catch (error) {\r\n      console.log(\r\n        \"TrailerComposite:Error occured on handleShareholderSelectionChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n  handleDelete = () => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.delete = false;\r\n      this.setState({ operationsVisibilty });\r\n\r\n      var deleteTrailerKeys = [];\r\n      for (var i = 0; i < this.state.selectedItems.length; i++) {\r\n        let shCode = this.state.selectedShareholder;\r\n        let trailerCode = this.state.selectedItems[i][\"Common_Code\"];\r\n        let carrierCode = this.state.selectedItems[i][\"TrailerList_Carrier\"];\r\n        let keyData = {\r\n          keyDataCode: 0,\r\n          ShareHolderCode: shCode,\r\n          KeyCodes: [\r\n            { Key: KeyCodes.trailerCode, Value: trailerCode },\r\n            { key: KeyCodes.carrierCode, Value: carrierCode },\r\n          ],\r\n        };\r\n        deleteTrailerKeys.push(keyData);\r\n      }\r\n\r\n      axios(\r\n        RestAPIs.DeleteTrailer,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          deleteTrailerKeys,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          // console.log(response.data);\r\n          let result = response.data;\r\n          let isRefreshDataRequire = result.IsSuccess;\r\n\r\n          if (\r\n            result.ResultDataList !== null &&\r\n            result.ResultDataList !== undefined\r\n          ) {\r\n            let failedResultsCount = result.ResultDataList.filter(function (\r\n              res\r\n            ) {\r\n              return !res.IsSuccess;\r\n            }).length;\r\n\r\n            if (failedResultsCount === result.ResultDataList.length) {\r\n              isRefreshDataRequire = false;\r\n            } else isRefreshDataRequire = true;\r\n          }\r\n\r\n          let notification = Utilities.convertResultsDatatoNotification(\r\n            result,\r\n            \"TrailerDetails_DeleteStatus\",\r\n            [\"TrailerCode\"]\r\n          );\r\n\r\n          if (isRefreshDataRequire) {\r\n            this.setState({ isReadyToRender: false, showAuthenticationLayout: false, });\r\n            this.getTrailerList(this.state.selectedShareholder);\r\n            if (\r\n              this.props.vehicleWithTrailer === undefined ||\r\n              this.props.vehicleWithTrailer === false\r\n            )\r\n              this.getKPIList(this.state.selectedShareholder);\r\n            operationsVisibilty.delete = false;\r\n            this.setState({\r\n              selectedItems: [],\r\n              operationsVisibilty,\r\n              selectedRow: {},\r\n              showAuthenticationLayout: false,\r\n            });\r\n          } else {\r\n            operationsVisibilty.delete = true;\r\n            this.setState({ operationsVisibilty, showAuthenticationLayout: false, });\r\n          }\r\n\r\n          notification.messageResultDetails.forEach((messageResult) => {\r\n            if (messageResult.keyFields.length > 0)\r\n              messageResult.keyFields[0] = \"Trailer_Code\";\r\n          });\r\n\r\n          toast(\r\n            <ErrorBoundary>\r\n              <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n            </ErrorBoundary>,\r\n            {\r\n              autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    } catch (error) {\r\n      console.log(\"TrailerComposite:Error occured on handleDelet\", error);\r\n    }\r\n  };\r\n\r\n  handleRowClick = (item) => {\r\n    try {\r\n      if (this.props.vehicleWithTrailer === undefined) {\r\n        let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnTrailer\r\n        );\r\n        operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnTrailer\r\n        );\r\n        operationsVisibilty.shareholder = false;\r\n        this.setState({\r\n          isDetails: true,\r\n          selectedRow: item,\r\n          selectedItems: [item],\r\n          operationsVisibilty,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"TrailerComposite:Error occured on Row click\", error);\r\n    }\r\n  };\r\n\r\n  handleSelection = (items) => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n\r\n      operationsVisibilty.delete =\r\n        items.length > 0 &&\r\n        Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnTrailer\r\n        );\r\n\r\n      this.setState({ selectedItems: items, operationsVisibilty }, () => {\r\n        if (this.props.vehicleWithTrailer === true) {\r\n          this.props.handleSelectClick(\r\n            \"trailer\",\r\n            this.state.selectedItems,\r\n            this.state.data.Column\r\n          );\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"TrailerComposite:Error occured on handleSelection\", error);\r\n    }\r\n  };\r\n\r\n  //Get KPI for Trailer\r\n  getKPIList(shareholder) {\r\n    let KPIView = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.view,\r\n      fnKPIInformation\r\n    );\r\n    if (KPIView === true) {\r\n      var notification = {\r\n        message: \"\",\r\n        messageType: \"critical\",\r\n        messageResultDetails: [],\r\n      };\r\n      let objKPIRequestData = {\r\n        PageName: kpiTrailerList,\r\n        InputParameters: [{ key: \"ShareholderCode\", value: shareholder }],\r\n      };\r\n      axios(\r\n        RestAPIs.GetKPI,\r\n        Utilities.getAuthenticationObjectforPost(\r\n          objKPIRequestData,\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      )\r\n        .then((response) => {\r\n          var result = response.data;\r\n          if (result.IsSuccess === true) {\r\n            this.setState({\r\n              trailerKPIList: result.EntityResult.ListKPIDetails,\r\n            });\r\n          } else {\r\n            this.setState({ trailerKPIList: [] });\r\n            console.log(\"Error in Trailer KPIList:\", result.ErrorList);\r\n            notification.messageResultDetails.push({\r\n              keyFields: [],\r\n              keyValues: [],\r\n              isSuccess: false,\r\n              errorMessage: result.ErrorList[0],\r\n            });\r\n          }\r\n          if (notification.messageResultDetails.length > 0) {\r\n            toast(\r\n              <ErrorBoundary>\r\n                <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n              </ErrorBoundary>,\r\n              {\r\n                autoClose:\r\n                  notification.messageType === \"success\" ? 10000 : false,\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error while getting trailer KPIList:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  getTrailerList(shareholder) {\r\n    let transportationType = Constants.TransportationType.ROAD;\r\n\r\n    axios(\r\n      RestAPIs.GetTrailerListForRole +\r\n      \"?ShareholderCode=\" +\r\n      shareholder +\r\n      \"&Transportationtype=\" +\r\n      transportationType,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({ data: result.EntityResult, isReadyToRender: true });\r\n          if (\r\n            this.props.vehicleWithTrailer === true &&\r\n            this.props.trailerSelection.length > 0\r\n          ) {\r\n            let trailers = this.props.trailerSelection;\r\n            if (trailers.length > 0) {\r\n              let trailerSelection = [];\r\n              trailers.forEach((trailer) => {\r\n                let row = result.EntityResult.Table.find(\r\n                  (row) => row.Common_Code === trailer.Trailer.Code\r\n                );\r\n                if (row !== undefined) trailerSelection.push(row);\r\n              });\r\n              this.setState({ selectedItems: trailerSelection });\r\n              this.props.getTrailerList(\r\n                trailerSelection,\r\n                result.EntityResult.Column\r\n              );\r\n            }\r\n          }\r\n        } else {\r\n          this.setState({ data: {}, isReadyToRender: true });\r\n          console.log(\"Error in GetTrailerListForRole:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ data: {}, isReadyToRender: true });\r\n        console.log(\"Error while getting Trailer List:\", error);\r\n      });\r\n  }\r\n\r\n  savedEvent = (data, saveType, notification) => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      if (notification.messageType === \"success\") {\r\n        operationsVisibilty.add = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnTrailer\r\n        );\r\n        operationsVisibilty.delete = Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.remove,\r\n          fnTrailer\r\n        );\r\n        this.setState({ isDetailsModified: true, operationsVisibilty });\r\n      }\r\n      if (notification.messageType === \"success\" && saveType === \"add\") {\r\n        var selectedItems = [\r\n          {\r\n            Common_Code: data.Code,\r\n            //TransportationType: data.TransportationType,\r\n            TrailerList_Carrier: data.CarrierCompanyCode,\r\n            Common_Status: data.Active,\r\n            Common_Shareholder: data.ShareholderCode,\r\n          },\r\n        ];\r\n        this.setState({ selectedItems });\r\n      }\r\n      toast(\r\n        <ErrorBoundary>\r\n          <NotifyEvent notificationMessage={notification}></NotifyEvent>\r\n        </ErrorBoundary>,\r\n        {\r\n          autoClose: notification.messageType === \"success\" ? 10000 : false,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(\"TrailerComposite:Error occured on savedEvent\", error);\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    try {\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnTrailer\r\n      );\r\n      operationsVisibilty.delete = false;\r\n      operationsVisibilty.shareholder = true;\r\n      this.setState({\r\n        isDetails: false,\r\n        selectedRow: {},\r\n        selectedItems: [],\r\n        operationsVisibilty,\r\n        isReadyToRender: false,\r\n      });\r\n      this.getTrailerList(this.state.selectedShareholder);\r\n      if (\r\n        this.props.vehicleWithTrailer === undefined ||\r\n        this.props.vehicleWithTrailer === false\r\n      )\r\n        this.getKPIList(this.state.selectedShareholder);\r\n    } catch (error) {\r\n      console.log(\"TrailerComposite:Error occured on Back click\", error);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    // clear session storage on page refresh\r\n    window.addEventListener(\"beforeunload\", () => Utilities.clearSessionStorage(this.componentName + \"GridState\"));\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      let operationsVisibilty = { ...this.state.operationsVisibilty };\r\n      operationsVisibilty.add = Utilities.isInFunction(\r\n        this.props.userDetails.EntityResult.FunctionsList,\r\n        functionGroups.add,\r\n        fnTrailer\r\n      );\r\n\r\n      let shareholder = this.props.userDetails.EntityResult.PrimaryShareholder;\r\n      if (this.props.vehicleWithTrailer === true)\r\n        shareholder = this.props.vehicleShareholder;\r\n      this.setState({\r\n        operationsVisibilty,\r\n        selectedShareholder: shareholder,\r\n      });\r\n      this.getTrailerList(shareholder);\r\n      if (\r\n        this.props.vehicleWithTrailer === undefined ||\r\n        this.props.vehicleWithTrailer === false\r\n      )\r\n        this.getKPIList(shareholder);\r\n    } catch (error) {\r\n      console.log(\"TrailerComposite:Error occured on ComponentDidMount\", error);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    // clear session storage\r\n    Utilities.clearSessionStorage(this.componentName + \"GridState\");\r\n    window.removeEventListener(\"beforeunload\", () => Utilities.clearSessionStorage(this.componentName + \"GridState\"));\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (\r\n      nextProps.vehicleWithTrailer === true &&\r\n      nextProps.trailerSelection.length > 0\r\n    ) {\r\n      let trailers = nextProps.trailerSelection;\r\n      if (trailers.length > 0) {\r\n        let trailerSelection = [];\r\n        trailers.forEach((trailer) => {\r\n          let row = this.state.data.Table.find(\r\n            (row) => row.Common_Code === trailer.Trailer.Code\r\n          );\r\n          if (row !== undefined) trailerSelection.push(row);\r\n        });\r\n        this.setState({ selectedItems: trailerSelection });\r\n        this.props.getTrailerList(trailerSelection, this.state.data.Column);\r\n      }\r\n    } else if (\r\n      nextProps.vehicleWithTrailer === true &&\r\n      nextProps.trailerSelection.length === 0\r\n    ) {\r\n      this.setState({ selectedItems: [] });\r\n    }\r\n  }\r\n  handleNextClick = () => {\r\n    this.props.handleNextClick(\r\n      \"trailer\",\r\n      this.state.selectedItems,\r\n      this.state.data.Column\r\n    );\r\n  };\r\n\r\n  authenticateDelete = () => {\r\n    try {\r\n      let showAuthenticationLayout =\r\n        this.props.userDetails.EntityResult.IsWebPortalUser !== true\r\n          ? true\r\n          : false;\r\n      this.setState({ showAuthenticationLayout });\r\n      if (showAuthenticationLayout === false) {\r\n        this.handleDelete();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"TrailerComposite : Error in authenticateDelete\");\r\n    }\r\n  };\r\n\r\n  handleAuthenticationClose = () => {\r\n    this.setState({\r\n      showAuthenticationLayout: false,\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    let fillPage = true;\r\n    let loadingClass = \"globalLoader\";\r\n    if (this.props.vehicleWithTrailer === true) {\r\n      fillPage = false;\r\n      loadingClass = \"nestedList\";\r\n    }\r\n    return (\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div>\r\n            <ErrorBoundary>\r\n              {this.props.vehicleWithTrailer === undefined ? (\r\n                <TMUserActionsComposite\r\n                  operationsVisibilty={this.state.operationsVisibilty}\r\n                  breadcrumbItem={this.props.activeItem}\r\n                  shareholders={\r\n                    this.props.userDetails.EntityResult.ShareholderList\r\n                  }\r\n                  selectedShareholder={this.state.selectedShareholder}\r\n                  onShareholderChange={this.handleShareholderSelectionChange}\r\n                  onDelete={this.authenticateDelete}\r\n                  onAdd={this.handleAdd}\r\n                  handleBreadCrumbClick={this.props.handleBreadCrumbClick}\r\n                ></TMUserActionsComposite>\r\n              ) : (\r\n                <>\r\n                  {this.state.isDetails ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <div className=\"vehicleDataTableHeading\">\r\n                      <div className=\"col col-lg-10 dataTableHeadingPadding\">\r\n                        <h5>{t(\"Select_Trailers\")}</h5>\r\n                      </div>\r\n                      <div className=\"col col-lg-1 vehicleDataTableIcon\">\r\n                        <div\r\n                          className={\r\n                            (this.state.operationsVisibilty.add\r\n                              ? \"iconCircle \"\r\n                              : \"iconCircleDisable \") + \"iconblock\"\r\n                          }\r\n                              onClick={() => {if(this.state.operationsVisibilty.add){this.handleAdd()}}}\r\n                        >\r\n                          <Icon\r\n                            root=\"common\"\r\n                            name=\"badge-plus\"\r\n                            size=\"small\"\r\n                            color=\"white\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </ErrorBoundary>\r\n            {this.state.isDetails ? (\r\n              <ErrorBoundary>\r\n                <TrailerDetailsComposite\r\n                  key=\"TrailerDetails\"\r\n                  selectedRow={this.state.selectedRow}\r\n                  onBack={this.handleBack}\r\n                  onSaved={this.savedEvent}\r\n                  selectedShareholder={this.state.selectedShareholder}\r\n                // genericProps={this.props.activeItem.itemProps}\r\n                ></TrailerDetailsComposite>\r\n              </ErrorBoundary>\r\n            ) : this.state.isReadyToRender ? (\r\n              <div>\r\n                {this.props.vehicleWithTrailer === true ? (\r\n                  \"\"\r\n                ) : (\r\n                  <ErrorBoundary>\r\n                    <div className=\"kpiSummaryContainer\">\r\n                      <KPIDashboardLayout\r\n                        kpiList={this.state.trailerKPIList}\r\n                        pageName=\"Trailer\"\r\n                      ></KPIDashboardLayout>\r\n                    </div>\r\n                  </ErrorBoundary>\r\n                )}\r\n                <ErrorBoundary>\r\n                  <TrailerSummaryPageComposite\r\n                    tableData={this.state.data.Table}\r\n                    columnDetails={this.state.data.Column}\r\n                    pageSize={\r\n                      this.props.userDetails.EntityResult.PageAttibutes\r\n                        .WebPortalListPageSize\r\n                    }\r\n                    exportRequired={!this.props.vehicleWithTrailer}\r\n                    exportFileName=\"TrailerList.xlsx\"\r\n                    columnPickerRequired={!this.props.vehicleWithTrailer}\r\n                    columnGroupingRequired={!this.props.vehicleWithTrailer}\r\n                    selectionRequired={true}\r\n                    terminalsToShow={\r\n                      this.props.userDetails.EntityResult.PageAttibutes\r\n                        .NoOfTerminalsToShow\r\n                    }\r\n                    selectedItems={this.state.selectedItems}\r\n                    onRowClick={this.handleRowClick}\r\n                    onSelectionChange={this.handleSelection}\r\n                    fillPage={fillPage}\r\n                    parentComponent={this.componentName}\r\n                  ></TrailerSummaryPageComposite>\r\n                  {this.props.vehicleWithTrailer === true ? (\r\n                    <div className=\"vehicleNextButton\">\r\n                      <Button onClick={this.handleNextClick}>\r\n                        {t(\"Common_Next\")}\r\n                      </Button>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </ErrorBoundary>\r\n              </div>\r\n            ) : (\r\n              <LoadingPage\r\n                loadingClass={loadingClass}\r\n                message=\"Loading\"\r\n              ></LoadingPage>\r\n            )}\r\n           {this.state.showAuthenticationLayout ? (\r\n          <UserAuthenticationLayout\r\n            Username={this.props.userDetails.EntityResult.UserName}\r\n            functionName={functionGroups.remove}\r\n            functionGroup={fnTrailer}\r\n            handleClose={this.handleAuthenticationClose}\r\n            handleOperation={this.handleDelete}\r\n          ></UserAuthenticationLayout>\r\n        ) : null}\r\n            {this.props.vehicleWithTrailer === true ? (\r\n              \"\"\r\n            ) : (\r\n              <ErrorBoundary>\r\n                <ToastContainer\r\n                  hideProgressBar={true}\r\n                  closeOnClick={false}\r\n                  closeButton={true}\r\n                  newestOnTop={true}\r\n                  position=\"bottom-right\"\r\n                  toastClassName=\"toast-notification-wrap\"\r\n                />\r\n              </ErrorBoundary>\r\n            )}\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TrailerComposite);\r\n\r\nTrailerComposite.propTypes = {\r\n  activeItem: PropTypes.object,\r\n  vehicleWithTrailer: PropTypes.bool,\r\n  trailerSelection: PropTypes.array,\r\n  getTrailerList: PropTypes.func,\r\n  handleNextClick: PropTypes.func,\r\n  handleSelectClick: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { Select, Input, DatePicker, Accordion, Checkbox } from \"@scuf/common\";\r\nimport { useTranslation } from \"@scuf/localization\";\r\nimport { AssociatedTerminals } from \"../Common/AssociatedTerminals\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getCurrentDateFormat,\r\n  getOptionsWithSelect,\r\n} from \"../../../JS/functionalUtilities\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport { AttributeDetails } from \"../Details/AttributeDetails\";\r\nimport { convertStringToCommonDateFormat } from \"../../../JS/Utilities\";\r\n\r\nVehicleBasicInputs.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  modData: PropTypes.object.isRequired,\r\n  validationErrors: PropTypes.object.isRequired,\r\n  listOptions: PropTypes.shape({\r\n    carriers: PropTypes.array,\r\n    productType: PropTypes.array,\r\n    unitOfWeight: PropTypes.array,\r\n    unitOfVolume: PropTypes.array,\r\n    unitOfDimension: PropTypes.array,\r\n    terminalCodes: PropTypes.array,\r\n    hazardousTankerCategoryOptions: PropTypes.array,\r\n  }).isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  onDateTextChange: PropTypes.func.isRequired,\r\n  onAllTerminalsChange: PropTypes.func.isRequired,\r\n  onActiveStatusChange: PropTypes.func.isRequired,\r\n  onCarrierChange: PropTypes.func.isRequired,\r\n  isEnterpriseNode: PropTypes.bool.isRequired,\r\n  modAttributeMetaDataList: PropTypes.array.isRequired,\r\n  attributeValidationErrors: PropTypes.array.isRequired,\r\n  onAttributeDataChange: PropTypes.func.isRequired,\r\n  isBonded: PropTypes.bool.isRequired,\r\n  hazardousEnabled: PropTypes.bool,\r\n};\r\nVehicleBasicInputs.defaultProps = {\r\n  listOptions: {\r\n    carriers: [],\r\n    productType: [],\r\n    unitOfWeight: [],\r\n    unitOfVolume: [],\r\n    unitOfDimension: [],\r\n    terminalCodes: [],\r\n    hazardousTankerCategoryOptions: [],\r\n  },\r\n  isEnterpriseNode: false,\r\n  hazardousEnabled: false,\r\n};\r\nexport default function VehicleBasicInputs({\r\n  data,\r\n  modData,\r\n  onFieldChange,\r\n  validationErrors,\r\n  listOptions,\r\n  onDateTextChange,\r\n  onAllTerminalsChange,\r\n  onActiveStatusChange,\r\n  onCarrierChange,\r\n  children,\r\n  isEnterpriseNode,\r\n  modAttributeMetaDataList,\r\n  attributeValidationErrors,\r\n  onAttributeDataChange,\r\n  isBonded,\r\n  hazardousEnabled,\r\n}) {\r\n  const handleValidationErrorFilter = (attributeValidationErrors, terminal) => {\r\n    let attributeValidation = [];\r\n    attributeValidation = attributeValidationErrors.find(\r\n      (selectedAttribute) => {\r\n        return selectedAttribute.TerminalCode === terminal;\r\n      }\r\n    );\r\n    return attributeValidation.attributeValidationErrors;\r\n  };\r\n  const [t] = useTranslation();\r\n  // useEffect(() => {\r\n  //   const unitOfDimension = listOptions.unitOfDimension;\r\n  //   unitOfDimension.unshift({ text: t(\"Common_Select\"), value: null });\r\n  // }, [listOptions.unitOfDimension]);\r\n  return (\r\n    // <TranslationConsumer>\r\n    //   {(t) => (\r\n    <>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Code}\r\n          label={t(\"Vehicle_Code\")}\r\n          indicator=\"required\"\r\n          disabled={data.Code !== \"\"}\r\n          onChange={(data) => onFieldChange(\"Code\", data)}\r\n          error={t(validationErrors.Code)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Name}\r\n          label={t(\"Vehicle_Name\")}\r\n          indicator=\"required\"\r\n          onChange={(data) => onFieldChange(\"Name\", data)}\r\n          error={t(validationErrors.Name, {\r\n            label: t(\"Vehicle_Name\"),\r\n          })}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Description === null ? \"\" : modData.Description}\r\n          label={t(`Vehicle_Desc`)}\r\n          onChange={(data) => onFieldChange(\"Description\", data)}\r\n          error={t(validationErrors.Description)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Select\r\n          fluid\r\n          placeholder={t(\"Common_Select\")}\r\n          label={t(\"Vehicle_CarrierCompany\")}\r\n          value={modData.CarrierCompanyCode}\r\n          options={listOptions.carriers}\r\n          onChange={(data) => {\r\n            onCarrierChange(data);\r\n          }}\r\n          indicator=\"required\"\r\n          error={t(validationErrors.CarrierCompanyCode)}\r\n          reserveSpace={false}\r\n          disabled={data.Code !== \"\"}\r\n          search={true}\r\n          noResultsMessage={t(\"noResultsMessage\")}\r\n        />\r\n      </div>\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_ProductType`)}\r\n            value={modData.ProductType}\r\n            options={listOptions.productType}\r\n            onChange={(data) => {\r\n              onFieldChange(\"ProductType\", data);\r\n            }}\r\n            indicator=\"required\"\r\n            error={t(validationErrors.ProductType)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {children}\r\n\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.LicenseNo === null ? \"\" : modData.LicenseNo}\r\n          label={t(`Vehicle_LicenseNo`)}\r\n          indicator={\r\n            modData.VehicleType !== Constants.VehicleType.NonFillingVehicle\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          onChange={(data) => onFieldChange(\"LicenseNo\", data)}\r\n          error={t(validationErrors.LicenseNo)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            modData.LicenseNoExpiryDate === null\r\n              ? \"\"\r\n              : convertStringToCommonDateFormat(modData.LicenseNoExpiryDate)\r\n          }\r\n          displayFormat={getCurrentDateFormat()}\r\n          label={t(`Vehicle_LicenseExpiry`)}\r\n          showYearSelector=\"true\"\r\n          indicator={\r\n            modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ||\r\n            (modData.VehicleType === Constants.VehicleType.NonFillingVehicle &&\r\n              modData.LicenseNo !== null &&\r\n              modData.LicenseNo.trim() !== \"\")\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          disablePast={true}\r\n          onChange={(data) => onFieldChange(\"LicenseNoExpiryDate\", data)}\r\n          onTextChange={(value, error) => {\r\n            onDateTextChange(\"LicenseNoExpiryDate\", value, error);\r\n          }}\r\n          error={t(validationErrors.LicenseNoExpiryDate)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.RoadTaxNo === null ? \"\" : modData.RoadTaxNo}\r\n          label={t(`Vehicle_RoadTaxNo`)}\r\n          indicator={\r\n            (modData.RoadTaxNo !== null && modData.RoadTaxNo.trim() !== \"\") ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoIssueDate)) ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoExpiryDate))\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          onChange={(data) => onFieldChange(\"RoadTaxNo\", data)}\r\n          error={t(validationErrors.RoadTaxNo)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            modData.RoadTaxNoIssueDate === null\r\n              ? \"\"\r\n              : convertStringToCommonDateFormat(modData.RoadTaxNoIssueDate)\r\n          }\r\n          displayFormat={getCurrentDateFormat()}\r\n          label={t(`Vehicle_RoadTaxIssue`)}\r\n          showYearSelector=\"true\"\r\n          indicator={\r\n            (modData.RoadTaxNo !== null && modData.RoadTaxNo.trim() !== \"\") ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoIssueDate)) ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoExpiryDate))\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          onChange={(data) => onFieldChange(\"RoadTaxNoIssueDate\", data)}\r\n          onTextChange={(value, error) => {\r\n            onDateTextChange(\"RoadTaxNoIssueDate\", value, error);\r\n          }}\r\n          error={t(validationErrors.RoadTaxNoIssueDate)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <DatePicker\r\n          fluid\r\n          value={\r\n            modData.RoadTaxNoExpiryDate === null\r\n              ? \"\"\r\n              : convertStringToCommonDateFormat(modData.RoadTaxNoExpiryDate)\r\n          }\r\n          displayFormat={getCurrentDateFormat()}\r\n          label={t(`Vehicle_RoadTaxExpiry`)}\r\n          showYearSelector=\"true\"\r\n          indicator={\r\n            (modData.RoadTaxNo !== null && modData.RoadTaxNo.trim() !== \"\") ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoIssueDate)) ||\r\n            !isNaN(Date.parse(modData.RoadTaxNoExpiryDate))\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          disablePast={true}\r\n          onChange={(data) => onFieldChange(\"RoadTaxNoExpiryDate\", data)}\r\n          onTextChange={(value, error) => {\r\n            onDateTextChange(\"RoadTaxNoExpiryDate\", value, error);\r\n          }}\r\n          error={t(validationErrors.RoadTaxNoExpiryDate)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Owner === null ? \"\" : modData.Owner}\r\n          label={t(`Vehicle_owner`)}\r\n          onChange={(data) => onFieldChange(\"Owner\", data)}\r\n          error={t(validationErrors.Owner)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.TareWeight === null\r\n                ? \"\"\r\n                : modData.TareWeight.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_Tareweight`)}\r\n            indicator={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? null\r\n                : \"required\"\r\n            }\r\n            onChange={(data) => onFieldChange(\"TareWeight\", data)}\r\n            error={t(validationErrors.TareWeight, {\r\n              label: t(\"Vehicle_Tareweight\"),\r\n            })}\r\n            disabled={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? true\r\n                : false\r\n            }\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.MaxLoadableWeight === null\r\n                ? \"\"\r\n                : modData.MaxLoadableWeight.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_MaxLoadWeight`)}\r\n            indicator={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? null\r\n                : \"required\"\r\n            }\r\n            onChange={(data) => onFieldChange(\"MaxLoadableWeight\", data)}\r\n            error={t(validationErrors.MaxLoadableWeight, {\r\n              label: t(\"Vehicle_MaxLoadWeight\"),\r\n            })}\r\n            disabled={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? true\r\n                : false\r\n            }\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_UOMWeight`)}\r\n            value={modData.WeightUOM}\r\n            options={listOptions.unitOfWeight}\r\n            onChange={(data) => {\r\n              onFieldChange(\"WeightUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            indicator={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? null\r\n                : \"required\"\r\n            }\r\n            error={t(validationErrors.WeightUOM)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n            disabled={\r\n              modData.VehicleType !== Constants.VehicleType.RigidTruck\r\n                ? true\r\n                : false\r\n            }\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.Height === null ? \"\" : modData.Height.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_height`)}\r\n            onChange={(data) => onFieldChange(\"Height\", data)}\r\n            error={t(validationErrors.Height, {\r\n              label: t(\"Vehicle_height\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={modData.Width === null ? \"\" : modData.Width.toLocaleString()}\r\n            label={t(`Vehicle_Width`)}\r\n            onChange={(data) => onFieldChange(\"Width\", data)}\r\n            error={t(validationErrors.Width, {\r\n              label: t(\"Vehicle_Width\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.Length === null ? \"\" : modData.Length.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_Length`)}\r\n            onChange={(data) => onFieldChange(\"Length\", data)}\r\n            error={t(validationErrors.Length, {\r\n              label: t(\"Vehicle_Length\"),\r\n            })}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_UOMDimemsion`)}\r\n            value={modData.LWHUOM}\r\n            options={getOptionsWithSelect(\r\n              listOptions.unitOfDimension,\r\n              t(\"Common_Select\")\r\n            )}\r\n            onChange={(data) => {\r\n              onFieldChange(\"LWHUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            error={t(validationErrors.LWHUOM)}\r\n            reserveSpace={false}\r\n            search={true}\r\n            noResultsMessage={t(\"noResultsMessage\")}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Input\r\n            fluid\r\n            value={\r\n              modData.MaxLoadableVolume === null\r\n                ? \"\"\r\n                : modData.MaxLoadableVolume.toLocaleString()\r\n            }\r\n            label={t(`Vehicle_MaxLoadVolume`)}\r\n            onChange={(data) => onFieldChange(\"MaxLoadableVolume\", data)}\r\n            error={t(validationErrors.MaxLoadableVolume)}\r\n            reserveSpace={false}\r\n            disabled={true}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <Select\r\n            fluid\r\n            placeholder={t(\"Common_Select\")}\r\n            label={t(`Vehicle_UOMVolume`)}\r\n            value={modData.VolumeUOM}\r\n            options={listOptions.unitOfVolume}\r\n            onChange={(data) => {\r\n              onFieldChange(\"VolumeUOM\", data);\r\n              // onCarrierChange(data);\r\n            }}\r\n            error={t(validationErrors.VolumeUOM)}\r\n            reserveSpace={false}\r\n            //search={true}\r\n            disabled={true}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {isBonded &&\r\n      modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <div\r\n            className=\"ui single-input fluid disabled\"\r\n            style={{ width: \"30%\", float: \"left\" }}\r\n          >\r\n            <div class=\"ui input-label\">\r\n              <span className=\"input-label-message\">\r\n                {t(\"VehicleInfo_Bonded\")}\r\n              </span>\r\n            </div>\r\n            <div className=\"input-wrap\">\r\n              <Checkbox\r\n                //className=\"LabelEnabled\"\r\n                //label={t(\"ViewShipment_IsForceClosed\")}\r\n                onChange={(data) => onFieldChange(\"IsBonded\", data)}\r\n                checked={modData.IsBonded}\r\n              />\r\n            </div>\r\n          </div>\r\n          {modData.IsBonded &&\r\n          modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n            <div style={{ width: \"70%\", float: \"right\" }}>\r\n              <Input\r\n                fluid\r\n                value={\r\n                  modData.VehicleCustomsBondNo === null\r\n                    ? \"\"\r\n                    : modData.VehicleCustomsBondNo\r\n                }\r\n                onChange={(data) => onFieldChange(\"VehicleCustomsBondNo\", data)}\r\n                label={t(\"VehicleInfo_VehicleCustomsBondNo\")}\r\n                reserveSpace={false}\r\n                error={t(validationErrors.VehicleCustomsBondNo)}\r\n                indicator={modData.IsBonded ? \"required\" : \"\"}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.IsBonded &&\r\n      modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <DatePicker\r\n            fluid\r\n            value={\r\n              modData.BondExpiryDate === null\r\n                ? \"\"\r\n                : convertStringToCommonDateFormat(modData.BondExpiryDate)\r\n            }\r\n            displayFormat={getCurrentDateFormat()}\r\n            label={t(`VehicleInfo_BondExpiryDate`)}\r\n            showYearSelector=\"true\"\r\n            indicator={modData.IsBonded ? \"required\" : \"\"}\r\n            disablePast={true}\r\n            onChange={(data) => onFieldChange(\"BondExpiryDate\", data)}\r\n            onTextChange={(value, error) => {\r\n              onDateTextChange(\"BondExpiryDate\", value, error);\r\n            }}\r\n            error={t(validationErrors.BondExpiryDate)}\r\n            reserveSpace={false}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {hazardousEnabled &&\r\n      modData.VehicleType === Constants.VehicleType.RigidTruck ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div style={{ width: \"48%\" }}>\r\n              <Select\r\n                fluid\r\n                placeholder={t(\"Common_Select\")}\r\n                label={t(\"FP_HazardousCategory\")}\r\n                value={\r\n                  modData.HazardousCategory === null\r\n                    ? \"\"\r\n                    : modData.HazardousCategory\r\n                }\r\n                options={getOptionsWithSelect(\r\n                  listOptions.hazardousTankerCategoryOptions,\r\n                  t(\"Common_Select\")\r\n                )}\r\n                onChange={(data) => onFieldChange(\"HazardousCategory\", data)}\r\n                reserveSpace={false}\r\n                search={true}\r\n                noResultsMessage={t(\"noResultsMessage\")}\r\n                error={t(validationErrors.HazardousCategory)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"48%\" }}>\r\n              <DatePicker\r\n                fluid\r\n                value={\r\n                  modData.HazardousLicenseExpiry === null\r\n                    ? \"\"\r\n                    : convertStringToCommonDateFormat(\r\n                        modData.HazardousLicenseExpiry\r\n                      )\r\n                }\r\n                displayFormat={getCurrentDateFormat()}\r\n                label={t(\"DriverInfo_HazardousLicExpiry\")}\r\n                disablePast={true}\r\n                showYearSelector=\"true\"\r\n                onChange={(data) =>\r\n                  onFieldChange(\"HazardousLicenseExpiry\", data)\r\n                }\r\n                onTextChange={(value, error) => {\r\n                  onDateTextChange(\"HazardousLicenseExpiry\", value, error);\r\n                }}\r\n                error={t(validationErrors.HazardousLicenseExpiry)}\r\n                reserveSpace={false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Select\r\n          fluid\r\n          placeholder={t(\"Common_Select\")}\r\n          label={t(\"Vehicle_Status\")}\r\n          value={modData.Active}\r\n          options={[\r\n            { text: t(\"ViewShipment_Ok\"), value: true },\r\n            { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n          ]}\r\n          onChange={(data) => onActiveStatusChange(data)}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-6 col-lg-4\">\r\n        <Input\r\n          fluid\r\n          value={modData.Remarks === null ? \"\" : modData.Remarks}\r\n          label={t(\"Vehicle_Remarks\")}\r\n          onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n          indicator={\r\n            modData.Active !== data.Active ||\r\n            (data.Code !== \"\" &&\r\n              isBonded &&\r\n              modData.IsBonded &&\r\n              modData.IsBonded !== data.IsBonded)\r\n              ? \"required\"\r\n              : \"\"\r\n          }\r\n          error={t(validationErrors.Remarks)}\r\n          reserveSpace={false}\r\n        />\r\n      </div>\r\n      {isEnterpriseNode ? (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <AssociatedTerminals\r\n            terminalList={listOptions.terminalCodes}\r\n            selectedTerminal={modData.TerminalCodes}\r\n            error={t(validationErrors.TerminalCodes)}\r\n            onFieldChange={onFieldChange}\r\n            onCheckChange={onAllTerminalsChange}\r\n          ></AssociatedTerminals>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType !== Constants.VehicleType.NonFillingVehicle ? (\r\n        <div></div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {modData.VehicleType === Constants.VehicleType.NonFillingVehicle ? (\r\n        modAttributeMetaDataList.length > 0 ? (\r\n          modAttributeMetaDataList.map((attribute) => (\r\n            <ErrorBoundary>\r\n              <div className=\"col-12 col-md-12 col-lg-12\">\r\n                <Accordion>\r\n                  <Accordion.Content\r\n                    className=\"attributeAccordian\"\r\n                    title={\r\n                      isEnterpriseNode\r\n                        ? attribute.TerminalCode +\r\n                          \" - \" +\r\n                          t(\"Attributes_Header\")\r\n                        : t(\"Attributes_Header\")\r\n                    }\r\n                  >\r\n                    <AttributeDetails\r\n                      selectedAttributeList={attribute.attributeMetaDataList}\r\n                      handleCellDataEdit={onAttributeDataChange}\r\n                      attributeValidationErrors={handleValidationErrorFilter(\r\n                        attributeValidationErrors,\r\n                        attribute.TerminalCode\r\n                      )}\r\n                    ></AttributeDetails>\r\n                  </Accordion.Content>\r\n                </Accordion>\r\n              </div>\r\n            </ErrorBoundary>\r\n          ))\r\n        ) : null\r\n      ) : modAttributeMetaDataList.length > 0 ? (\r\n        <div className=\"col-12 col-md-12 col-lg-12\">\r\n          <Accordion>\r\n            <Accordion.Content\r\n              className=\"attributeAccordian\"\r\n              title={t(\"VEHICLE_Attributes\")}\r\n            >\r\n              {modAttributeMetaDataList.length > 0\r\n                ? modAttributeMetaDataList.map((attribute) => (\r\n                    <ErrorBoundary>\r\n                      <div className=\"col-12 col-md-12 col-lg-12\">\r\n                        <Accordion>\r\n                          <Accordion.Content\r\n                            className=\"attributeAccordian\"\r\n                            title={\r\n                              isEnterpriseNode\r\n                                ? attribute.TerminalCode +\r\n                                  \" - \" +\r\n                                  t(\"Attributes_Header\")\r\n                                : t(\"Attributes_Header\")\r\n                            }\r\n                          >\r\n                            <AttributeDetails\r\n                              selectedAttributeList={\r\n                                attribute.attributeMetaDataList\r\n                              }\r\n                              handleCellDataEdit={onAttributeDataChange}\r\n                              attributeValidationErrors={handleValidationErrorFilter(\r\n                                attributeValidationErrors,\r\n                                attribute.TerminalCode\r\n                              )}\r\n                            ></AttributeDetails>\r\n                          </Accordion.Content>\r\n                        </Accordion>\r\n                      </div>\r\n                    </ErrorBoundary>\r\n                  ))\r\n                : null}\r\n            </Accordion.Content>\r\n          </Accordion>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n    //   )}\r\n    // </TranslationConsumer>\r\n  );\r\n}\r\n"],"names":["tractorColumns","trailerColumns","vehiclePrimeMovers","vehicleTrailers","TractorWithTrailerDetailsComposite","Component","constructor","arguments","state","isReadyToRender","vehicle","modVehicle","validationErrors","Utilities","vehicleValidationDef","carrierOptions","terminalOptions","volumeUOMOptions","weightUOMOptions","lengthUOMOptions","productTypeOptions","step1Active","undefined","this","props","selectedRow","Common_Code","step2Active","step3Active","tractorSelection","trailerSelection","attributeMetaDataList","modVehicleAttributeMetaDataList","vehicleAttributeValidationErrors","modVehiclePrimeMoversAttributeMetaDataList","vehiclePrimeMoversAttributeValidationErrors","modVehicleTrailerAttributeMetaDataList","vehicleTrailerAttributeValidationErrors","isBonded","maxNumberOfCompartments","showAuthenticationLayout","tempVehicle","handleReset","setState","lodash","userDetails","EntityResult","IsEnterpriseNode","terminalSelectionChange","TerminalCodes","handleResetAttributeValidationError","localNodeAttribute","Code","VehiclePrimeMovers","VehicleTrailers","Object","keys","forEach","key","error","console","log","handleCarrierChange","carrier","getTerminalsForCarrier","CarrierCompanyCode","handleActiveStatusChange","value","Active","Remarks","handleChange","propertyName","data","IsBonded","VehicleCustomsBondNo","BondExpiryDate","RoadTaxNo","RoadTaxNoExpiryDate","RoadTaxNoIssueDate","LWHUOM","handleAllTerminalsChange","checked","saveVehicle","saveEnabled","createVehicle","updateVehicle","handleSave","values","every","fillDetails","attributesList","vehicleAttributeList","vehicleTrailerAttributeList","vehiclePrimeMoverAttributeList","push","vehilceAttributeList","validateSave","convertStringtoDecimal","DateFieldsInEntities","Vehicle","vp","Primemover","PrimeMover","IsWebPortalUser","handleNextClick","entity","columns","handleSelectClick","handleTractorList","handleTrailerList","handleDateTextChange","handleVehicleAttributeDataChange","attribute","matchedAttributes","matchedAttributesList","filter","modattribute","TerminalCode","length","Array","isArray","DefaultValue","attributeValidation","attributeValidationErrors","handleVehiclePrimeMoverAttributeDataChange","handleVehicleTrailerAttributeDataDataChange","handleValidationErrorFilter","terminal","find","selectedAttribute","handleAuthenticationClose","componentDidMount","IsArchived","isNewVehicle","getAttributes","getCarrierList","selectedShareholder","getUOMList","getProductTypes","axios","RestAPIs","tokenDetails","tokenInfo","then","response","result","IsSuccess","bonded","toUpperCase","ErrorList","isNaN","parseInt","catch","weightUOMs","MASS","weightOption","text","volumeUOMs","VOLUME","volumeOption","lengthUOMs","LENGTH","lengthOption","shareholder","Constants","ROAD","componentWillReceiveProps","nextProps","getVehicle","displayValues","cellData","columnDetail","field","_jsx","Icon","name","size","color","terminalPopOver","DataType","Date","toLocaleDateString","toLocaleTimeString","terminalCodes","split","Popup","className","on","element","children","Card","Content","vehicleAttributeEntity","vehiclePrimeMoverAttributeEntity","vehicleTrailerAttributeEntity","vehicleprimemover","vehicletrailer","emptyVehicle","VehicleType","TractorWithTrailer","FunctionsList","functionGroups","add","fnVehicle","keyCode","KeyCodes","obj","ShareHolderCode","keyDataCode","MaxLoadableWeight","TareWeight","modify","ShareholderCode","selectedTerminals","attributesTerminalsList","existitem","attributeMetaData","Attributevalue","Attributes","baseproductAttribute","valueAttribute","ListOfAttributeData","x","AttributeCode","AttributeValue","setVehiclePrimeMoverAttributes","setVehicleTrailerAttributes","includes","parse","notification","messageType","message","messageResultDetails","Height","Width","Length","keyFields","keyValues","isSuccess","errorMessage","compartmentCount","map","item","CompCount","returnValue","onSaved","fillAttributeDetails","err","Entity","toLocaleString","vehiclePrimeMoverInfo","VehicleCode","PrimeMoverCode","PrimeMoverSequence","TransportationType","licDate","LicenseNoIssueDate","getUTCDate","trailerSeq","trailer","vehicleTrailerInfo","TrailerCode","TrailerSeq","Trailer","Name","Common_Name","TrailerType","NON_RIGID_TRAILER","attributeData1","attributeData2","attributeData3","primemover","render","listOptions","carriers","productType","unitOfWeight","unitOfVolume","unitOfDimension","popUpContents","fieldName","fieldValue","LastUpdateTime","LastActiveTime","CreatedTime","TranslationConsumer","t","_jsxs","Accordion","title","active","onClick","PrimeMoverComposite","tractorWithTrailer","getTractorList","tractorShareholder","DataTable","selection","selectionMode","showHeader","Column","initialWidth","header","renderer","style","height","Loader","top","TrailerComposite","vehicleWithTrailer","getTrailerList","vehicleShareholder","ErrorBoundary","TMDetailsHeader","entityCode","newEntityName","VehicleBasicFields","modData","onFieldChange","onDateTextChange","onAllTerminalsChange","onCarrierChange","onActiveStatusChange","isEnterpriseNode","modAttributeMetaDataList","onAttributeDataChange","AttributeDetails","selectedAttributeList","handleCellDataEdit","TMDetailsUserActions","handleBack","onBack","UserAuthenticationLayout","Username","UserName","functionName","functionGroup","handleOperation","handleClose","Button","content","LoadingPage","connect","getUserDetails","TokenAuth","PrimeMoverSummaryPageComposite","_ref","tableData","columnDetails","pageSize","exportRequired","exportFileName","columnPickerRequired","columnGroupingRequired","terminalsToShow","selectionRequired","onSelectionChange","onRowClick","parentComponent","WijmoGridComposite","rowsPerPage","onSelectionHandle","React","isDetails","isDetailsModified","operationsVisibilty","delete","selectedItems","primeMoverKPIList","componentName","handleAdd","handleShareholderSelectionChange","getPrimeMoverList","getKPIList","handleRowClick","fnPrimeMover","remove","handleSelection","items","handleDelete","deletePrimeMoverKeys","i","shCode","primeMoverCode","carrierCode","keyData","Key","Value","isRefreshDataRequire","ResultDataList","res","messageResult","toast","NotifyEvent","notificationMessage","autoClose","savedEvent","saveType","Common_Status","PrimeMover_CarrierCompany","componentWillUnmount","window","removeEventListener","authenticateDelete","view","fnKPIInformation","objKPIRequestData","PageName","kpiPrimeMoverList","InputParameters","ListKPIDetails","transportationType","primeMovers","primeMover","row","Table","PrimaryShareholder","addEventListener","fillPage","loadingClass","TMUserActionsComposite","breadcrumbItem","activeItem","shareholders","ShareholderList","onShareholderChange","onDelete","onAdd","handleBreadCrumbClick","_Fragment","root","PrimeMoverDetailsComposite","KPIDashboardLayout","kpiList","pageName","PageAttibutes","WebPortalListPageSize","NoOfTerminalsToShow","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","position","toastClassName","TrailerSummaryPageComposite","trailerKPIList","deleteTrailerKeys","trailerCode","fnTrailer","TrailerList_Carrier","Common_Shareholder","kpiTrailerList","trailers","TrailerDetailsComposite","VehicleBasicInputs","hazardousEnabled","useTranslation","Input","fluid","label","indicator","disabled","onChange","reserveSpace","Description","Select","placeholder","options","search","noResultsMessage","NonFillingVehicle","ProductType","LicenseNo","DatePicker","LicenseNoExpiryDate","convertStringToCommonDateFormat","displayFormat","getCurrentDateFormat","showYearSelector","trim","disablePast","onTextChange","Owner","RigidTruck","WeightUOM","getOptionsWithSelect","MaxLoadableVolume","VolumeUOM","width","float","class","Checkbox","display","justifyContent","HazardousCategory","hazardousTankerCategoryOptions","HazardousLicenseExpiry","AssociatedTerminals","terminalList","selectedTerminal","onCheckChange","defaultProps"],"sourceRoot":""}