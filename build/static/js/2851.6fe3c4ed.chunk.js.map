{"version":3,"file":"static/js/2851.6fe3c4ed.chunk.js","mappings":"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","sources":["Components/UIBase/Details/UserDetails.jsx","Components/Composite/Details/UserDetailsComposite.jsx","Components/UIBase/Common/TMDetailsHeader.jsx","Components/UIBase/Common/TMDetailsUserActions.jsx","JS/functionalUtilities.js"],"sourcesContent":["import React from 'react';\r\nimport { Select, Input, Checkbox } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getOptionsWithSelect } from \"../../../JS/functionalUtilities\";\r\n\r\nUserDetails.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    modUser: PropTypes.object.isRequired,\r\n    validationErrors: PropTypes.object.isRequired,\r\n    onFieldChange: PropTypes.func.isRequired,\r\n    listOptions: PropTypes.shape({\r\n        languageOptions: PropTypes.array,\r\n        domainNameOptions: PropTypes.array,\r\n        roleOptions: PropTypes.array,\r\n        shareholderOptions: PropTypes.array,\r\n        secondaryShareholderOptions: PropTypes.array,\r\n        inheritedRolesOptions: PropTypes.array,\r\n        inheritedRoles: PropTypes.array,\r\n    }).isRequired,\r\n    onActiveStatusChange: PropTypes.func.isRequired,\r\n    isDisableGroupANDMakeRoleMandatory: PropTypes.bool.isRequired,\r\n}\r\n\r\nUserDetails.defaultProps = {\r\n    listOptions: {\r\n        languageOptions: [],\r\n        domainNameOptions: [],\r\n        roleOptions: [],\r\n        shareholderOptions: [],\r\n        secondaryShareholderOptions: [],\r\n        inheritedRolesOptions: [],\r\n        inheritedRoles: []\r\n    },\r\n}\r\n\r\nexport function UserDetails({\r\n    user,\r\n    modUser,\r\n    validationErrors,\r\n    onFieldChange,\r\n    listOptions,\r\n    onActiveStatusChange,\r\n    isDisableGroupANDMakeRoleMandatory,\r\n}) {\r\n    return (\r\n        <TranslationConsumer>\r\n            {(t) => (\r\n                <div className=\"detailsContainer\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 mt-4\" >\r\n                            <p className=\"border-bottom-1 pb-2 deviceheaderLabel\">{t(\"UserInfo_PersonalInformation\")}</p>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modUser.FirstName}\r\n                                indicator=\"required\"\r\n                                disabled={user.FirstName !== \"\"}\r\n                                onChange={(data) => onFieldChange(\"FirstName\", data)}\r\n                                label={t(\"UserAdmin_FirstName\")}\r\n                                error={t(validationErrors.FirstName)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modUser.LastName}\r\n                                indicator=\"required\"\r\n                                onChange={(data) => onFieldChange(\"LastName\", data)}\r\n                                label={t(\"UserAdmin_LastName\")}\r\n                                error={t(validationErrors.LastName)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder=\"Select\"\r\n                                value={modUser.Culture}\r\n                                label={t(\"UserInfo_Language\")}\r\n                                options={listOptions.languageOptions}\r\n                                onChange={(data) => onFieldChange(\"Culture\", data)}\r\n                                error={t(validationErrors.Culture)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                onResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modUser.Phone}\r\n                                onChange={(data) => onFieldChange(\"Phone\", data)}\r\n                                label={t(\"UserAdmin_PhoneNumber\")}\r\n                                error={t(validationErrors.Phone)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modUser.Mobile}\r\n                                onChange={(data) => onFieldChange(\"Mobile\", data)}\r\n                                label={t(\"Cust_Mobile\")}\r\n                                error={t(validationErrors.Mobile)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modUser.Email}\r\n                                onChange={(data) => onFieldChange(\"Email\", data)}\r\n                                label={t(\"Cust_Email\")}\r\n                                error={t(validationErrors.Email)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        {\r\n                            modUser.RoleName === \"BSIAdmin\" ?\r\n                                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                    <Input\r\n                                        fluid\r\n                                        value={modUser.ApplicationID}\r\n                                        onChange={(data) => onFieldChange(\"ApplicationID\", data)}\r\n                                        label={t(\"Cust_ApplicationID\")}\r\n                                        error={t(validationErrors.ApplicationID)}\r\n                                        reserveSpace={false}\r\n                                    />\r\n                                </div> : null\r\n                        }\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 mt-4\" >\r\n                            <p className=\"border-bottom-1 pb-2 deviceheaderLabel\">{t(\"UserInfo_Account\")}</p>\r\n                        </div>\r\n                        {modUser.DomainName === \"1\" ? (\r\n                            <div className=\"col-12 col-md-6 col-lg-4\">\r\n                                <Input\r\n                                    fluid\r\n                                    value={modUser.NewDomainName}\r\n                                    onChange={(data) => onFieldChange(\"NewDomainName\", data)}\r\n                                    label={t(\"UserInfo_DomainName\")}\r\n                                    error={t(validationErrors.NewDomainName)}\r\n                                    reserveSpace={false}\r\n                                    disabled={user.FirstName !== \"\"}\r\n                                />\r\n                            </div>\r\n                        ) : (<div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder=\"Select\"\r\n                                value={modUser.DomainName}\r\n                                label={t(\"UserInfo_DomainName\")}\r\n                                options={(listOptions.domainNameOptions)}\r\n                                onChange={(data) => onFieldChange(\"DomainName\", data)}\r\n                                error={t(validationErrors.DomainName)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                onResultsMessage={t(\"noResultsMessage\")}\r\n                                disabled={user.FirstName !== \"\"}\r\n                            />\r\n                        </div>)\r\n                        }\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modUser.UserAccount}\r\n                                indicator=\"required\"\r\n                                disabled={user.FirstName !== \"\"}\r\n                                onChange={(data) => onFieldChange(\"UserAccount\", data)}\r\n                                label={t(\"UserInfo_UserAccount\")}\r\n                                error={t(validationErrors.UserAccount)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modUser.Description}\r\n                                onChange={(data) => onFieldChange(\"Description\", data)}\r\n                                label={t(\"Cust_Description\")}\r\n                                error={t(validationErrors.Description)}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder=\"Select\"\r\n                                indicator={isDisableGroupANDMakeRoleMandatory ? \"required\" : \"\"}\r\n                                value={modUser.RoleName}\r\n                                label={t(\"UserAdmin_ExplicitRole\")}\r\n                                options={getOptionsWithSelect((listOptions.roleOptions), t(\"Common_Select\"))}\r\n                                onChange={(data) => onFieldChange(\"RoleName\", data)}\r\n                                error={t(validationErrors.RoleName)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                onResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                value={listOptions.inheritedRoles}\r\n                                label={t(\"UserInfo_InheritedRoles\")}\r\n                                options={listOptions.inheritedRolesOptions}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                onResultsMessage={t(\"noResultsMessage\")}\r\n                                disabled={true}\r\n                                multiple={true}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4 checkboxSelect\">\r\n                            <Checkbox\r\n                                label={t(\"UserInfo_ServiceUser\")}\r\n                                checked={modUser.IsServiceUser ? true : false}\r\n                                onChange={(data) => onFieldChange(\"IsServiceUser\", data)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 mt-4\" >\r\n                            <p className=\"border-bottom-1 pb-2 deviceheaderLabel\">{t(\"ShareholderListx_HeaderLabel\")}</p>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder=\"Select\"\r\n                                indicator=\"required\"\r\n                                value={modUser.PrimaryShareholder}\r\n                                label={t(\"UserAdmin_PrimaryShareHolder\")}\r\n                                options={listOptions.shareholderOptions}\r\n                                onChange={(data) => onFieldChange(\"PrimaryShareholder\", data)}\r\n                                error={t(validationErrors.PrimaryShareholder)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                onResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder=\"Select\"\r\n                                value={modUser.SecondaryShareholders}\r\n                                label={t(\"UserInfo_SecondaryShareholder\")}\r\n                                options={listOptions.secondaryShareholderOptions}\r\n                                onChange={(data) => onFieldChange(\"SecondaryShareholders\", data)}\r\n                                error={t(validationErrors.SecondaryShareholders)}\r\n                                reserveSpace={false}\r\n                                multiple={true}\r\n                                search={true}\r\n                                onResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Select\r\n                                fluid\r\n                                placeholder={t(\"Common_Select\")}\r\n                                label={t(\"BaseProductList_Status\")}\r\n                                value={modUser.Status}\r\n                                options={[\r\n                                    { text: t(\"ViewShipment_Ok\"), value: true },\r\n                                    { text: t(\"ViewShipmentStatus_Inactive\"), value: false },\r\n                                ]}\r\n                                onChange={(data) => onActiveStatusChange(data)}\r\n                                error={t(validationErrors.Status)}\r\n                                reserveSpace={false}\r\n                                search={true}\r\n                                noResultsMessage={t(\"noResultsMessage\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            <Input\r\n                                fluid\r\n                                value={modUser.Remarks}\r\n                                onChange={(data) => onFieldChange(\"Remarks\", data)}\r\n                                label={t(\"BaseProductList_Remarks\")}\r\n                                error={t(validationErrors.Remarks)}\r\n                                indicator={modUser.Status !== user.Status ? \"required\" : \"\"}\r\n                                reserveSpace={false}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </TranslationConsumer>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport TMDetailsHeader from \"../../UIBase/Common/TMDetailsHeader\";\r\nimport { TMDetailsUserActions } from \"../../UIBase/Common/TMDetailsUserActions\";\r\nimport { LoadingPage } from \"../../UIBase/Common/LoadingPage\";\r\nimport { UserDetails } from \"../../UIBase/Details/UserDetails\";\r\nimport { emptyUser } from \"../../../JS/DefaultEntities\";\r\nimport { userValidationDef } from \"../../../JS/ValidationDef\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport PropTypes from \"prop-types\";\r\nimport lodash from \"lodash\";\r\nimport { functionGroups, fnUser } from \"../../../JS/FunctionGroups\";\r\n\r\nclass UserDetailsComposite extends Component {\r\n  state = {\r\n    user: lodash.cloneDeep(emptyUser),\r\n    modUser: {},\r\n    validationErrors: Utilities.getInitialValidationErrors(userValidationDef),\r\n    isReadyToRender: false,\r\n    saveEnabled: false,\r\n    attributeValidationErrors: [],\r\n    languageOptions: [],\r\n    domainNameOptions: [],\r\n    isDisableGroupANDMakeRoleMandatory: false,\r\n    roleOptions: [],\r\n    shareholderOptions: [],\r\n    secondaryShareholderOptions: [],\r\n    inheritedRolesOptions: [],\r\n    inheritedRoles: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      Utilities.setArchive(this.props.userDetails.EntityResult.IsArchived);\r\n      this.getLanguages();\r\n      this.getDomainNames();\r\n      this.getLookUpData();\r\n      this.getSecurityRoles();\r\n      this.getShareholdersList();\r\n      this.getUser(this.props.selectedRow);\r\n    } catch (error) {\r\n      console.log(\"UserDetailsComposite:Error occured on componentDidMount\", error);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    try {\r\n      if (\r\n        this.state.user.FirstName !== \"\" &&\r\n        nextProps.selectedRow.PersonId === undefined &&\r\n        this.props.tokenDetails.tokenInfo === nextProps.tokenDetails.tokenInfo\r\n      ) {\r\n        this.getUser(nextProps.selectedRow);\r\n        let validationErrors = { ...this.state.validationErrors };\r\n        Object.keys(validationErrors).forEach((key) => {\r\n          validationErrors[key] = \"\";\r\n        });\r\n        this.setState({ validationErrors });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        \"UserDetailsComposite:Error occured on componentWillReceiveProps\",\r\n        error\r\n      );\r\n    }\r\n  }\r\n\r\n  getUser(userRow) {\r\n    emptyUser.Culture = this.props.userDetails.EntityResult.UICulture;\r\n    emptyUser.DomainName = \"0\";\r\n    if (userRow.PersonId === undefined) {\r\n      this.setState({\r\n        user: lodash.cloneDeep(emptyUser),\r\n        modUser: lodash.cloneDeep(emptyUser),\r\n        isReadyToRender: true,\r\n        selectedAttributeList: [],\r\n        saveEnabled: Utilities.isInFunction(\r\n          this.props.userDetails.EntityResult.FunctionsList,\r\n          functionGroups.add,\r\n          fnUser\r\n        ),\r\n      })\r\n      return;\r\n    }\r\n    var keyCode = [\r\n      {\r\n        key: KeyCodes.personID,\r\n        value: userRow.PersonId,\r\n      }\r\n    ];\r\n    var obj = {\r\n      KeyCodes: keyCode,\r\n    };\r\n    axios(\r\n      RestAPIs.GetSecurityUser,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              isReadyToRender: true,\r\n              user: lodash.cloneDeep(result.EntityResult),\r\n              modUser: lodash.cloneDeep(result.EntityResult),\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnUser\r\n              )\r\n            }, () => {\r\n              this.removeSecondaryShareholderItem(result.EntityResult.PrimaryShareholder);\r\n              this.getInheritedRoles(userRow.PersonId);\r\n              this.populateNewDomainName();\r\n            });\r\n        } else {\r\n          this.setState({\r\n            user: lodash.cloneDeep(emptyUser),\r\n            modUser: lodash.cloneDeep(emptyUser),\r\n            isReadyToRender: true,\r\n          });\r\n          console.log(\"Error in getUser:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting User:\", error, userRow);\r\n      });\r\n  }\r\n\r\n  populateNewDomainName() {\r\n    try {\r\n      const modUser = lodash.cloneDeep(this.state.modUser);\r\n      modUser.NewDomainName = modUser.DomainName;\r\n      if (modUser.NewDomainName === \"0\")\r\n        modUser.NewDomainName = \"Select\";\r\n      modUser.DomainName = \"1\";\r\n      this.setState({ modUser });\r\n    } catch (error) {\r\n      console.log(\"Error while populateNewDomainName\", error);\r\n    }\r\n  }\r\n\r\n  getLanguages() {\r\n    axios(\r\n      RestAPIs.GetLanguageList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          let languageOptions = [];\r\n          if (result.EntityResult !== null) {\r\n            Object.keys(result.EntityResult).forEach((key) =>\r\n              languageOptions.push({\r\n                text: result.EntityResult[key],\r\n                value: key,\r\n              })\r\n            );\r\n            this.setState({ languageOptions });\r\n          } else {\r\n            console.log(\"No languages identified.\");\r\n          }\r\n        } else {\r\n          console.log(\"Error in getLanguages:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting Languages:\", error);\r\n      });\r\n  }\r\n\r\n  getDomainNames() {\r\n    axios(\r\n      RestAPIs.GetDomainNames,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        let domainNameOptions = [];\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null && Array.isArray(result.EntityResult)) {\r\n            domainNameOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            domainNameOptions.unshift(\r\n              {\r\n                text: \"Select\",\r\n                value: \"0\",\r\n              }, {\r\n              text: \"New Domain?\",\r\n              value: \"1\",\r\n            })\r\n            this.setState({ domainNameOptions });\r\n          }\r\n          else {\r\n            domainNameOptions.push(\r\n              {\r\n                text: \"Select\",\r\n                value: \"0\",\r\n              }, {\r\n              text: \"New Domain?\",\r\n              value: \"1\",\r\n            })\r\n            this.setState({ domainNameOptions });\r\n          }\r\n        }\r\n        else {\r\n          domainNameOptions.push(\r\n            {\r\n              text: \"Select\",\r\n              value: \"0\",\r\n            }, {\r\n            text: \"New Domain?\",\r\n            value: \"1\",\r\n          })\r\n          this.setState({ domainNameOptions });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getting DomainNames:\", error);\r\n      });\r\n  }\r\n\r\n  getLookUpData() {\r\n    try {\r\n      axios(\r\n        RestAPIs.GetLookUpData + \"?LookUpTypeCode=Security\",\r\n        Utilities.getAuthenticationObjectforGet(\r\n          this.props.tokenDetails.tokenInfo\r\n        )\r\n      ).then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.setState({\r\n            isDisableGroupANDMakeRoleMandatory:\r\n              result.EntityResult[\"DisableGroupANDMakeRoleMandatory\"] === \"False\" ? false : true,\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"UserDetailsComposite:Error occured on getLookUpData\", error);\r\n    }\r\n  }\r\n\r\n  getSecurityRoles() {\r\n    axios(\r\n      RestAPIs.GetSecurityRoles,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null && Array.isArray(result.EntityResult)) {\r\n            let roleOptions = [];\r\n            roleOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ roleOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getSecurityRoles:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getSecurityRoles:\", error);\r\n      });\r\n  }\r\n\r\n  getShareholdersList() {\r\n    axios(\r\n      RestAPIs.GetShareholdersList,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null) {\r\n            let shareholderOptions = [];\r\n            let secondaryShareholderOptions = [];\r\n            Object.keys(result.EntityResult).forEach((element) => {\r\n              shareholderOptions.push({ text: result.EntityResult[element], value: element });\r\n            });\r\n            Object.keys(result.EntityResult).forEach((element) => {\r\n              secondaryShareholderOptions.push({ text: result.EntityResult[element], value: element });\r\n            });\r\n            this.setState({ shareholderOptions, secondaryShareholderOptions });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getShareholdersList:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getShareholdersList:\", error);\r\n      });\r\n  }\r\n\r\n  getInheritedRoles(PersonId) {\r\n    axios(\r\n      RestAPIs.GetInheritedRoles + \"?personID=\" + PersonId,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)\r\n    )\r\n      .then((response) => {\r\n        var result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (result.EntityResult !== null && Array.isArray(result.EntityResult)) {\r\n            let inheritedRolesOptions = [];\r\n            inheritedRolesOptions = Utilities.transferListtoOptions(\r\n              result.EntityResult\r\n            );\r\n            this.setState({ inheritedRolesOptions, inheritedRoles: result.EntityResult });\r\n          }\r\n        } else {\r\n          console.log(\"Error in getInheritedRoles:\", result.ErrorList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error while getInheritedRoles:\", error);\r\n      });\r\n  }\r\n\r\n\r\n  handleChange = (propertyName, data) => {\r\n    try {\r\n      const modUser = lodash.cloneDeep(this.state.modUser);\r\n\r\n      modUser[propertyName] = data;\r\n\r\n      const validationErrors = lodash.cloneDeep(this.state.validationErrors);\r\n      if (userValidationDef[propertyName] !== undefined) {\r\n        validationErrors[propertyName] = Utilities.validateField(\r\n          userValidationDef[propertyName],\r\n          data\r\n        );\r\n        this.setState({ validationErrors });\r\n      }\r\n      this.setState({ modUser }, () => {\r\n        if (propertyName === \"PrimaryShareholder\") {\r\n          this.removeSecondaryShareholderItem(data);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\r\n        \"UserDetailsComposite:Error occured on handleChange\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n  removeSecondaryShareholderItem(shareholderId) {\r\n    try {\r\n      let shareholderOptions = lodash.cloneDeep(this.state.shareholderOptions);\r\n      const modUser = lodash.cloneDeep(this.state.modUser);\r\n      if (modUser.SecondaryShareholders !== null && Array.isArray(modUser.SecondaryShareholders)) {\r\n        modUser.SecondaryShareholders = modUser.SecondaryShareholders.filter(function (shareholder) {\r\n          return shareholder !== shareholderId\r\n        });\r\n      }\r\n      this.setState({\r\n        secondaryShareholderOptions: shareholderOptions.filter(function (shareholder) {\r\n          return shareholder.value !== shareholderId\r\n        }), modUser\r\n      });\r\n    } catch (error) {\r\n      console.log(\"removeSecondaryShareholderItem:Error occured on handleChange\", error);\r\n    }\r\n  }\r\n\r\n  handleActiveStatusChange = (value) => {\r\n    try {\r\n      let modUser = lodash.cloneDeep(this.state.modUser);\r\n      modUser.Status = value;\r\n      if (modUser.Status !== this.state.user.Status)\r\n        modUser.Remarks = \"\";\r\n      this.setState({ modUser });\r\n    } catch (error) {\r\n      console.log(\"UserDetailsComposite:Error occured on handleActiveStatusChange\", error);\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    try {\r\n      this.setState({ saveEnabled: false });\r\n      let modUser = this.fillDetails();\r\n      if (this.validateSave(modUser)) {\r\n        this.state.user.FirstName === \"\"\r\n          ? this.createUser(modUser)\r\n          : this.updateUser(modUser);\r\n      } else {\r\n        this.setState({ saveEnabled: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"UserDetailsComposite:Error occured on handleSave\", error);\r\n    }\r\n  }\r\n\r\n  fillDetails() {\r\n    try {\r\n      let modUser = lodash.cloneDeep(this.state.modUser);\r\n\r\n      if (modUser.DomainName === \"1\") {\r\n        modUser.DomainName = modUser.NewDomainName;\r\n      }\r\n      if (modUser.DomainName === \"Select\" || modUser.DomainName === undefined || modUser.DomainName === \"\")\r\n        modUser.DomainName = 0;\r\n\r\n      return modUser;\r\n    } catch (error) {\r\n      console.log(\"UserDetailsComposite:Error occured on fillDetails\", error);\r\n    }\r\n  }\r\n\r\n  validateSave(modUser) {\r\n    try {\r\n      const validationErrors = { ...this.state.validationErrors };\r\n      Object.keys(userValidationDef).forEach(function (key) {\r\n        if (modUser[key] !== undefined)\r\n          validationErrors[key] = Utilities.validateField(\r\n            userValidationDef[key],\r\n            modUser[key]\r\n          );\r\n      });\r\n\r\n      if (modUser.Status !== this.state.user.Status) {\r\n        if (modUser.Remarks === null || modUser.Remarks === \"\") {\r\n          validationErrors[\"Remarks\"] = \"BaseProductInfo_EnterRemarks\";\r\n        }\r\n      }\r\n      if (this.state.isDisableGroupANDMakeRoleMandatory) {\r\n        if (modUser.RoleName === undefined || modUser.RoleName === null || modUser.RoleName.toString().trim() === \"\") {\r\n          validationErrors[\"RoleName\"] = \"UserInfo_RoleRequired\";\r\n        }\r\n      }\r\n\r\n      if (modUser.RoleName.toLowerCase() === \"bsiadmin\") {\r\n        if ((modUser.Email === \"\" || modUser.Email === null || modUser.Email === undefined) &&\r\n          (modUser.ApplicationID === \"\" || modUser.ApplicationID === null || modUser.ApplicationID === undefined)) {\r\n          validationErrors[\"Email\"] = \"ERRMSG_SECURITYUSER_EMAIL_APPLICATIONID_EMPTY\";\r\n          validationErrors[\"ApplicationID\"] = \"ERRMSG_SECURITYUSER_EMAIL_APPLICATIONID_EMPTY\";\r\n        }\r\n      }\r\n\r\n      this.setState({ validationErrors });\r\n      var returnValue = Object.values(validationErrors).every(function (value) {\r\n        return value === \"\";\r\n      });\r\n      return returnValue;\r\n    } catch (error) {\r\n      console.log(\"UserDetailsComposite:Error occured on validateSave\", error);\r\n    }\r\n  }\r\n\r\n  createUser(modUser) {\r\n    let obj = {\r\n      Entity: modUser,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"UserInfo_Savedstatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"UserAdmin_FirstName\"],\r\n          keyValues: [modUser.FirstName],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.CreateSecurityUser,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnUser\r\n              ),\r\n            },\r\n            () => this.getUser({ PersonId: result.EntityResult.PersonID })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.add,\r\n              fnUser\r\n            ),\r\n          });\r\n          console.log(\"Error in createUser:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(result.EntityResult, \"add\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.add,\r\n            fnUser\r\n          ),\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modUser, \"add\", notification);\r\n      });\r\n  }\r\n\r\n  updateUser(modUser) {\r\n    let obj = {\r\n      Entity: modUser,\r\n    };\r\n\r\n    let notification = {\r\n      messageType: \"critical\",\r\n      message: \"UserInfo_Savedstatus\",\r\n      messageResultDetails: [\r\n        {\r\n          keyFields: [\"UserAdmin_FirstName\"],\r\n          keyValues: [modUser.FirstName],\r\n          isSuccess: false,\r\n          errorMessage: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios(\r\n      RestAPIs.UpdateUser,\r\n      Utilities.getAuthenticationObjectforPost(\r\n        obj,\r\n        this.props.tokenDetails.tokenInfo\r\n      )\r\n    )\r\n      .then((response) => {\r\n        let result = response.data;\r\n        notification.messageType = result.IsSuccess ? \"success\" : \"critical\";\r\n        notification.messageResultDetails[0].isSuccess = result.IsSuccess;\r\n        if (result.IsSuccess === true) {\r\n          this.setState(\r\n            {\r\n              saveEnabled: Utilities.isInFunction(\r\n                this.props.userDetails.EntityResult.FunctionsList,\r\n                functionGroups.modify,\r\n                fnUser\r\n              ),\r\n            },\r\n            () => this.getUser({ PersonId: modUser.PersonID })\r\n          );\r\n        } else {\r\n          notification.messageResultDetails[0].errorMessage =\r\n            result.ErrorList[0];\r\n          this.setState({\r\n            saveEnabled: Utilities.isInFunction(\r\n              this.props.userDetails.EntityResult.FunctionsList,\r\n              functionGroups.modify,\r\n              fnUser\r\n            ),\r\n          });\r\n          console.log(\"Error in updateUser:\", result.ErrorList);\r\n        }\r\n        this.props.onSaved(this.state.modUser, \"update\", notification);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          saveEnabled: Utilities.isInFunction(\r\n            this.props.userDetails.EntityResult.FunctionsList,\r\n            functionGroups.modify,\r\n            fnUser\r\n          ),\r\n        });\r\n        notification.messageResultDetails[0].errorMessage = error;\r\n        this.props.onSaved(this.state.modUser, \"modify\", notification);\r\n      });\r\n  }\r\n\r\n  handleReset = () => {\r\n    try {\r\n      const { validationErrors } = { ...this.state };\r\n      const user = lodash.cloneDeep(this.state.user);\r\n\r\n\r\n      Object.keys(validationErrors).forEach(function (key) {\r\n        validationErrors[key] = \"\";\r\n      });\r\n\r\n      this.setState(\r\n        {\r\n          modUser: { ...user },\r\n          selectedCompRow: [],\r\n          validationErrors,\r\n        });\r\n    } catch (error) {\r\n      console.log(\"UserDetailsComposite:Error occured on handleReset\", error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const listOptions = {\r\n      languageOptions: this.state.languageOptions,\r\n      domainNameOptions: this.state.domainNameOptions,\r\n      roleOptions: this.state.roleOptions,\r\n      shareholderOptions: this.state.shareholderOptions,\r\n      secondaryShareholderOptions: this.state.secondaryShareholderOptions,\r\n      inheritedRolesOptions: this.state.inheritedRolesOptions,\r\n      inheritedRoles: this.state.inheritedRoles\r\n    };\r\n    const popUpContents = [\r\n      {\r\n        fieldName: \"PipeLineHeaderInfo_LastUpdated\",\r\n        fieldValue:\r\n          new Date(\r\n            this.state.modUser.LastUpdated\r\n          ).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(\r\n            this.state.modUser.LastUpdated\r\n          ).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"PipeLineHeaderInfo_CreatedTime\",\r\n        fieldValue:\r\n          new Date(this.state.modUser.CreationTime).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modUser.CreationTime).toLocaleTimeString(),\r\n      },\r\n      {\r\n        fieldName: \"PipeLineHeaderInfo_LastActive\",\r\n        fieldValue: this.state.modUser.LastActive !== undefined &&\r\n          this.state.modUser.LastActive !== null\r\n          ?\r\n          new Date(this.state.modUser.LastActive).toLocaleDateString() +\r\n          \" \" +\r\n          new Date(this.state.modUser.LastActive).toLocaleTimeString() : \"\",\r\n      }\r\n    ];\r\n\r\n    return this.state.isReadyToRender ? (\r\n      <div>\r\n        <ErrorBoundary>\r\n          <TMDetailsHeader\r\n            entityCode={this.state.user.FirstName}\r\n            newEntityName={\"UserInfo_NewUser\"}\r\n            popUpContents={popUpContents}\r\n          ></TMDetailsHeader>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <UserDetails\r\n            user={this.state.user}\r\n            modUser={this.state.modUser}\r\n            listOptions={listOptions}\r\n            validationErrors={this.state.validationErrors}\r\n            isDisableGroupANDMakeRoleMandatory={this.state.isDisableGroupANDMakeRoleMandatory}\r\n            onFieldChange={this.handleChange}\r\n            onActiveStatusChange={this.handleActiveStatusChange}>\r\n          </UserDetails>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <TMDetailsUserActions\r\n            handleBack={this.props.onBack}\r\n            handleSave={this.handleSave}\r\n            handleReset={this.handleReset}\r\n            saveEnabled={this.state.saveEnabled}\r\n          ></TMDetailsUserActions>\r\n        </ErrorBoundary>\r\n      </div>\r\n    ) : (\r\n      <LoadingPage message=\"Loading\"></LoadingPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserDetailsComposite);\r\n\r\nUserDetailsComposite.propTypes = {\r\n  selectedRow: PropTypes.object.isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onSaved: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Popup, List, Icon } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTMDetailsHeader.propTypes = {\r\n  entityCode: PropTypes.string,\r\n  newEntityName: PropTypes.string,\r\n  popUpContents: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      fieldName: PropTypes.string,\r\n      fieldValue: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nTMDetailsHeader.defaultProps = {\r\n  entityCode: \"\",\r\n  newEntityName: \"\",\r\n  popUpContents: [],\r\n};\r\n\r\nexport function TMDetailsHeader({ entityCode, newEntityName, popUpContents }) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"headerContainer\">\r\n          <div className=\"row headerSpacing\">\r\n            <div className=\"col paddingHeaderItemLeft\">\r\n              <span style={{ margin: \"auto\" }} className=\"headerLabel\">\r\n                {entityCode === \"\" || entityCode === undefined                 \r\n                  ? t(newEntityName)\r\n                  : entityCode}\r\n              </span>\r\n            </div>\r\n            {entityCode !== \"\" &&\r\n            entityCode !== undefined &&\r\n            popUpContents.length > 0 ? (\r\n              <div className=\"headerItemRight\">\r\n                <Popup\r\n                  element={\r\n                    <div>\r\n                      {t(popUpContents[0].fieldName) + \" \"}:\r\n                      {\" \" + popUpContents[0].fieldValue}\r\n                      <Icon\r\n                        style={{ marginLeft: \"10px\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-down\"\r\n                        size=\"small\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  position=\"bottom left\"\r\n                  // on=\"click\"\r\n                >\r\n                  <List className=\"detailsHeaderPopUp\">\r\n                    {popUpContents.map((content) => (\r\n                      <List.Content\r\n                        key=\"content.fieldName\"\r\n                        className=\"detailsHeaderPopUpListPadding\"\r\n                      >\r\n                        {t(content.fieldName) + \" \"}:{\" \" + content.fieldValue}\r\n                      </List.Content>\r\n                    ))}\r\n                  </List>\r\n                </Popup>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n\r\nexport default TMDetailsHeader;","import React from \"react\";\r\nimport { Button } from \"@scuf/common\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport PropTypes from \"prop-types\";\r\nTMDetailsUserActions.propTypes = {\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  saveEnabled: PropTypes.bool,\r\n};\r\nTMDetailsUserActions.defaultProps = { saveEnabled: false };\r\nexport function TMDetailsUserActions({\r\n  handleBack,\r\n  handleSave,\r\n  handleReset,\r\n  saveEnabled,\r\n}) {\r\n  return (\r\n    <TranslationConsumer>\r\n      {(t) => (\r\n        <div className=\"row userActionPosition\">\r\n          <div className=\"col-12 col-md-3 col-lg-4\">\r\n            <Button\r\n              className=\"backButton\"\r\n              onClick={handleBack}\r\n              content={t(\"Back\")}\r\n            ></Button>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 col-lg-8\">\r\n            <div style={{ float: \"right\" }}>\r\n              <Button\r\n                content={t(\"LookUpData_btnReset\")}\r\n                className=\"cancelButton\"\r\n                onClick={handleReset}\r\n              ></Button>\r\n              <Button\r\n                content={t(\"Save\")}\r\n                disabled={!saveEnabled}\r\n                onClick={handleSave}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col col-lg-2\">\r\n    \r\n  </div> */}\r\n        </div>\r\n      )}\r\n    </TranslationConsumer>\r\n  );\r\n}\r\n","import moment from \"moment\";\r\nimport \"moment/min/locales\";\r\nimport React from \"react\";\r\nexport function getOptionsWithSelect(ddlOptions, selectOptionText) {\r\n  if (Array.isArray(ddlOptions)) {\r\n    let selectOptions = ddlOptions.filter(\r\n      (option) => option.text === selectOptionText\r\n    );\r\n    if (selectOptions.length === 0)\r\n      ddlOptions.unshift({\r\n        value: null,\r\n        text: selectOptionText,\r\n      });\r\n  }\r\n  return ddlOptions;\r\n}\r\n\r\nexport function getCurrentDateFormat() {\r\n  let language = window.navigator.userLanguage || window.navigator.language;\r\n  moment.locale(language);\r\n  let localeData = moment.localeData();\r\n  // console.log(localeData);\r\n  var format = localeData.longDateFormat(\"L\");\r\n  //console.log(format);\r\n  return format;\r\n}\r\n\r\n\r\nexport function handleIsRequiredCompartmentCell(data) {\r\n  return (\r\n    <div><span>{data}</span><div class=\"ui red circular empty label badge  circle-padding\" /></div>\r\n  );\r\n}"],"names":["UserDetails","_ref","user","modUser","validationErrors","onFieldChange","listOptions","onActiveStatusChange","isDisableGroupANDMakeRoleMandatory","_jsx","TranslationConsumer","children","t","_jsxs","className","Input","fluid","value","FirstName","indicator","disabled","onChange","data","label","error","reserveSpace","LastName","Select","placeholder","Culture","options","languageOptions","search","onResultsMessage","Phone","Mobile","Email","RoleName","ApplicationID","DomainName","NewDomainName","domainNameOptions","UserAccount","Description","getOptionsWithSelect","roleOptions","inheritedRoles","inheritedRolesOptions","multiple","Checkbox","checked","IsServiceUser","PrimaryShareholder","shareholderOptions","SecondaryShareholders","secondaryShareholderOptions","Status","text","noResultsMessage","Remarks","defaultProps","UserDetailsComposite","Component","constructor","arguments","state","lodash","emptyUser","Utilities","userValidationDef","isReadyToRender","saveEnabled","attributeValidationErrors","handleChange","propertyName","this","undefined","setState","removeSecondaryShareholderItem","console","log","handleActiveStatusChange","handleSave","fillDetails","validateSave","createUser","updateUser","handleReset","Object","keys","forEach","key","selectedCompRow","componentDidMount","props","userDetails","EntityResult","IsArchived","getLanguages","getDomainNames","getLookUpData","getSecurityRoles","getShareholdersList","getUser","selectedRow","componentWillReceiveProps","nextProps","PersonId","tokenDetails","tokenInfo","userRow","UICulture","obj","KeyCodes","axios","RestAPIs","then","response","result","IsSuccess","FunctionsList","functionGroups","modify","fnUser","getInheritedRoles","populateNewDomainName","ErrorList","catch","selectedAttributeList","add","push","Array","isArray","unshift","element","shareholderId","filter","shareholder","toString","trim","toLowerCase","values","every","Entity","notification","messageType","message","messageResultDetails","keyFields","keyValues","isSuccess","errorMessage","PersonID","onSaved","render","popUpContents","fieldName","fieldValue","Date","LastUpdated","toLocaleDateString","toLocaleTimeString","CreationTime","LastActive","ErrorBoundary","TMDetailsHeader","entityCode","newEntityName","TMDetailsUserActions","handleBack","onBack","LoadingPage","connect","getUserDetails","TokenAuth","style","margin","length","Popup","Icon","marginLeft","root","name","size","position","List","map","content","Content","Button","onClick","float","ddlOptions","selectOptionText","option","getCurrentDateFormat","language","window","navigator","userLanguage","moment","longDateFormat","handleIsRequiredCompartmentCell","class"],"sourceRoot":""}